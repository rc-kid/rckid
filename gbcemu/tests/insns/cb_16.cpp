#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_16)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_16) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 16 0001
        gbc.setState(0x9edf, 0x9bb1, 0x4050, 0x653f, 0x1b73, 0xf26a, 0x1, 0x1);
        gbc.writeMem(0x9edf, { 0xcb, 0x16 });
        gbc.writeMem(0xf26a, { 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x9bb1);
        EXPECT(gbc.pc(), 0x9ee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9edf), 0xcb);
        EXPECT(gbc.readMem(0x9ee0), 0x16);
        EXPECT(gbc.readMem(0xf26a), 0x2f);
        // CB 16 0004
        gbc.setState(0xc100, 0x2419, 0x8420, 0xd2ae, 0x9e7a, 0xf55c, 0x1, 0x1);
        gbc.writeMem(0xc100, { 0xcb, 0x16 });
        gbc.writeMem(0xf55c, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x2419);
        EXPECT(gbc.pc(), 0xc102);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc100), 0xcb);
        EXPECT(gbc.readMem(0xc101), 0x16);
        EXPECT(gbc.readMem(0xf55c), 0x12);
        // CB 16 0005
        gbc.setState(0x885b, 0x7350, 0xcb50, 0x3745, 0x2dc, 0x9035, 0x0, 0x1);
        gbc.writeMem(0x885b, { 0xcb, 0x16 });
        gbc.writeMem(0x9035, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x7350);
        EXPECT(gbc.pc(), 0x885d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x885b), 0xcb);
        EXPECT(gbc.readMem(0x885c), 0x16);
        EXPECT(gbc.readMem(0x9035), 0x41);
        // CB 16 0008
        gbc.setState(0x1d93, 0xf6be, 0x7c90, 0xbd69, 0xba22, 0xac0a, 0x1, 0x1);
        gbc.writeMem(0x1d93, { 0xcb, 0x16 });
        gbc.writeMem(0xac0a, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf6be);
        EXPECT(gbc.pc(), 0x1d95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac0a), 0x89);
        // CB 16 000A
        gbc.setState(0x4393, 0x11f3, 0x5b40, 0xf6e2, 0x3a27, 0xc7ff, 0x0, 0x0);
        gbc.writeMem(0x4393, { 0xcb, 0x16 });
        gbc.writeMem(0xc7ff, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x11f3);
        EXPECT(gbc.pc(), 0x4395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7ff), 0x8c);
        // CB 16 0010
        gbc.setState(0x97a9, 0xb4d8, 0x3000, 0x6b8a, 0xd2aa, 0xff61, 0x0, 0x1);
        gbc.writeMem(0x97a9, { 0xcb, 0x16 });
        gbc.writeMem(0xff61, { 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb4d8);
        EXPECT(gbc.pc(), 0x97ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97a9), 0xcb);
        EXPECT(gbc.readMem(0x97aa), 0x16);
        EXPECT(gbc.readMem(0xff61), 0x40);
        // CB 16 0012
        gbc.setState(0xade3, 0x9fbc, 0xa380, 0x3b0, 0x5257, 0xe9c2, 0x1, 0x0);
        gbc.writeMem(0xade3, { 0xcb, 0x16 });
        gbc.writeMem(0xe9c2, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9fbc);
        EXPECT(gbc.pc(), 0xade5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xade3), 0xcb);
        EXPECT(gbc.readMem(0xade4), 0x16);
        EXPECT(gbc.readMem(0xe9c2), 0x80);
        // CB 16 0013
        gbc.setState(0x6494, 0xa170, 0x4770, 0x6155, 0xacff, 0x943a, 0x1, 0x1);
        gbc.writeMem(0x6494, { 0xcb, 0x16 });
        gbc.writeMem(0x943a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xa170);
        EXPECT(gbc.pc(), 0x6496);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x943a), 0xa3);
        // CB 16 0018
        gbc.setState(0xc9ea, 0x1622, 0xef30, 0x2aad, 0xca34, 0x934d, 0x0, 0x0);
        gbc.writeMem(0x934d, { 0x9 });
        gbc.writeMem(0xc9ea, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x1622);
        EXPECT(gbc.pc(), 0xc9ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x934d), 0x13);
        EXPECT(gbc.readMem(0xc9ea), 0xcb);
        EXPECT(gbc.readMem(0xc9eb), 0x16);
        // CB 16 0019
        gbc.setState(0xdf40, 0xe964, 0x42c0, 0xdc40, 0x909b, 0xad96, 0x0, 0x1);
        gbc.writeMem(0xad96, { 0x9a });
        gbc.writeMem(0xdf40, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe964);
        EXPECT(gbc.pc(), 0xdf42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad96), 0x34);
        EXPECT(gbc.readMem(0xdf40), 0xcb);
        EXPECT(gbc.readMem(0xdf41), 0x16);
        // CB 16 001E
        gbc.setState(0x78c6, 0x3cb8, 0xb670, 0x257b, 0x62ba, 0xbb29, 0x1, 0x1);
        gbc.writeMem(0x78c6, { 0xcb, 0x16 });
        gbc.writeMem(0xbb29, { 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3cb8);
        EXPECT(gbc.pc(), 0x78c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb29), 0xb9);
        // CB 16 0021
        gbc.setState(0xb3f7, 0xdaa0, 0x7f80, 0xe766, 0xf4ad, 0x8a03, 0x1, 0x1);
        gbc.writeMem(0x8a03, { 0x7a });
        gbc.writeMem(0xb3f7, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xdaa0);
        EXPECT(gbc.pc(), 0xb3f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a03), 0xf4);
        EXPECT(gbc.readMem(0xb3f7), 0xcb);
        EXPECT(gbc.readMem(0xb3f8), 0x16);
        // CB 16 0022
        gbc.setState(0x904e, 0x735f, 0x4460, 0xad3, 0xbe28, 0xafba, 0x1, 0x0);
        gbc.writeMem(0x904e, { 0xcb, 0x16 });
        gbc.writeMem(0xafba, { 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x735f);
        EXPECT(gbc.pc(), 0x9050);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x904e), 0xcb);
        EXPECT(gbc.readMem(0x904f), 0x16);
        EXPECT(gbc.readMem(0xafba), 0x26);
        // CB 16 0024
        gbc.setState(0x5a2e, 0x184c, 0xcee0, 0xceca, 0xdf26, 0xc1f7, 0x1, 0x1);
        gbc.writeMem(0x5a2e, { 0xcb, 0x16 });
        gbc.writeMem(0xc1f7, { 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x184c);
        EXPECT(gbc.pc(), 0x5a30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1f7), 0x68);
        // CB 16 0028
        gbc.setState(0x92f3, 0xac2f, 0x7390, 0xe978, 0xb145, 0xab1a, 0x0, 0x0);
        gbc.writeMem(0x92f3, { 0xcb, 0x16 });
        gbc.writeMem(0xab1a, { 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xac2f);
        EXPECT(gbc.pc(), 0x92f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92f3), 0xcb);
        EXPECT(gbc.readMem(0x92f4), 0x16);
        EXPECT(gbc.readMem(0xab1a), 0xd1);
        // CB 16 0029
        gbc.setState(0x67c8, 0x6010, 0x6ae0, 0x625f, 0x4a60, 0xb917, 0x0, 0x0);
        gbc.writeMem(0x67c8, { 0xcb, 0x16 });
        gbc.writeMem(0xb917, { 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x6010);
        EXPECT(gbc.pc(), 0x67ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb917), 0xf2);
        // CB 16 002B
        gbc.setState(0x8ea3, 0x6ea1, 0x6ff0, 0x436a, 0xa4a4, 0xf791, 0x0, 0x0);
        gbc.writeMem(0x8ea3, { 0xcb, 0x16 });
        gbc.writeMem(0xf791, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6ea1);
        EXPECT(gbc.pc(), 0x8ea5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea3), 0xcb);
        EXPECT(gbc.readMem(0x8ea4), 0x16);
        EXPECT(gbc.readMem(0xf791), 0x8b);
        // CB 16 0030
        gbc.setState(0xe446, 0x38e3, 0xe130, 0x77c7, 0x75a6, 0x8e17, 0x0, 0x1);
        gbc.writeMem(0x8e17, { 0xe8 });
        gbc.writeMem(0xe446, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x38e3);
        EXPECT(gbc.pc(), 0xe448);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e17), 0xd1);
        EXPECT(gbc.readMem(0xe446), 0xcb);
        EXPECT(gbc.readMem(0xe447), 0x16);
        // CB 16 0033
        gbc.setState(0x4fcf, 0x16b1, 0x1d40, 0x87b8, 0x3b9d, 0xb25b, 0x1, 0x1);
        gbc.writeMem(0x4fcf, { 0xcb, 0x16 });
        gbc.writeMem(0xb25b, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x16b1);
        EXPECT(gbc.pc(), 0x4fd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb25b), 0x2c);
        // CB 16 0036
        gbc.setState(0x3dd9, 0x6458, 0xeb40, 0xdede, 0x7f7c, 0x9411, 0x0, 0x0);
        gbc.writeMem(0x3dd9, { 0xcb, 0x16 });
        gbc.writeMem(0x9411, { 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x6458);
        EXPECT(gbc.pc(), 0x3ddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9411), 0x90);
        // CB 16 0039
        gbc.setState(0x80df, 0x8eef, 0x64d0, 0xf4d6, 0x3085, 0xef3a, 0x1, 0x1);
        gbc.writeMem(0x80df, { 0xcb, 0x16 });
        gbc.writeMem(0xef3a, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x8eef);
        EXPECT(gbc.pc(), 0x80e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80df), 0xcb);
        EXPECT(gbc.readMem(0x80e0), 0x16);
        EXPECT(gbc.readMem(0xef3a), 0x4b);
        // CB 16 003B
        gbc.setState(0x1f83, 0x1207, 0x15c0, 0x43e, 0x5562, 0xefa4, 0x0, 0x0);
        gbc.writeMem(0x1f83, { 0xcb, 0x16 });
        gbc.writeMem(0xefa4, { 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1207);
        EXPECT(gbc.pc(), 0x1f85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefa4), 0x36);
        // CB 16 003C
        gbc.setState(0xe201, 0xb2c, 0x8d00, 0x9544, 0x6c70, 0xf2a2, 0x1, 0x1);
        gbc.writeMem(0xe201, { 0xcb, 0x16 });
        gbc.writeMem(0xf2a2, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xb2c);
        EXPECT(gbc.pc(), 0xe203);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe201), 0xcb);
        EXPECT(gbc.readMem(0xe202), 0x16);
        EXPECT(gbc.readMem(0xf2a2), 0x5a);
        // CB 16 003D
        gbc.setState(0x9211, 0xcdd1, 0x6260, 0x1079, 0x4c16, 0xfc43, 0x0, 0x0);
        gbc.writeMem(0x9211, { 0xcb, 0x16 });
        gbc.writeMem(0xfc43, { 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xcdd1);
        EXPECT(gbc.pc(), 0x9213);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9211), 0xcb);
        EXPECT(gbc.readMem(0x9212), 0x16);
        EXPECT(gbc.readMem(0xfc43), 0x8);
        // CB 16 003F
        gbc.setState(0xdf3f, 0x5790, 0x27e0, 0xf2b8, 0xa2a3, 0xb0e6, 0x0, 0x1);
        gbc.writeMem(0xb0e6, { 0xe3 });
        gbc.writeMem(0xdf3f, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5790);
        EXPECT(gbc.pc(), 0xdf41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0e6), 0xc6);
        EXPECT(gbc.readMem(0xdf3f), 0xcb);
        EXPECT(gbc.readMem(0xdf40), 0x16);
        // CB 16 0040
        gbc.setState(0xc73a, 0x334, 0x1f20, 0x6e27, 0x3671, 0xf62b, 0x1, 0x1);
        gbc.writeMem(0xc73a, { 0xcb, 0x16 });
        gbc.writeMem(0xf62b, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x334);
        EXPECT(gbc.pc(), 0xc73c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc73a), 0xcb);
        EXPECT(gbc.readMem(0xc73b), 0x16);
        EXPECT(gbc.readMem(0xf62b), 0xd2);
        // CB 16 0041
        gbc.setState(0x2692, 0x2d16, 0xe890, 0x3680, 0x6245, 0x94bc, 0x0, 0x1);
        gbc.writeMem(0x2692, { 0xcb, 0x16 });
        gbc.writeMem(0x94bc, { 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x2d16);
        EXPECT(gbc.pc(), 0x2694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94bc), 0x7);
        // CB 16 0043
        gbc.setState(0x1893, 0xa850, 0x2100, 0xc775, 0x1f17, 0xaa8a, 0x1, 0x1);
        gbc.writeMem(0x1893, { 0xcb, 0x16 });
        gbc.writeMem(0xaa8a, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa850);
        EXPECT(gbc.pc(), 0x1895);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa8a), 0xe4);
        // CB 16 0044
        gbc.setState(0xdac2, 0xe6c, 0xdfd0, 0x2009, 0xb641, 0xb9d4, 0x0, 0x0);
        gbc.writeMem(0xb9d4, { 0x79 });
        gbc.writeMem(0xdac2, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe6c);
        EXPECT(gbc.pc(), 0xdac4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9d4), 0xf3);
        EXPECT(gbc.readMem(0xdac2), 0xcb);
        EXPECT(gbc.readMem(0xdac3), 0x16);
        // CB 16 0045
        gbc.setState(0x252d, 0x64d1, 0xe630, 0x138f, 0xcfc3, 0xb033, 0x1, 0x1);
        gbc.writeMem(0x252d, { 0xcb, 0x16 });
        gbc.writeMem(0xb033, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x64d1);
        EXPECT(gbc.pc(), 0x252f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb033), 0xad);
        // CB 16 0047
        gbc.setState(0xedf4, 0x6b45, 0x9c20, 0x9bc9, 0xc0c8, 0xc30c, 0x0, 0x1);
        gbc.writeMem(0xc30c, { 0x48 });
        gbc.writeMem(0xedf4, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x6b45);
        EXPECT(gbc.pc(), 0xedf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc30c), 0x90);
        EXPECT(gbc.readMem(0xedf4), 0xcb);
        EXPECT(gbc.readMem(0xedf5), 0x16);
        // CB 16 004A
        gbc.setState(0xd48d, 0x7a19, 0x75c0, 0x665f, 0xaf77, 0xcdb1, 0x1, 0x0);
        gbc.writeMem(0xcdb1, { 0x75 });
        gbc.writeMem(0xd48d, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x7a19);
        EXPECT(gbc.pc(), 0xd48f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdb1), 0xea);
        EXPECT(gbc.readMem(0xd48d), 0xcb);
        EXPECT(gbc.readMem(0xd48e), 0x16);
        // CB 16 004C
        gbc.setState(0x87bc, 0xbbf0, 0x4760, 0x85c2, 0x9d86, 0xad5a, 0x1, 0x1);
        gbc.writeMem(0x87bc, { 0xcb, 0x16 });
        gbc.writeMem(0xad5a, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xbbf0);
        EXPECT(gbc.pc(), 0x87be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87bc), 0xcb);
        EXPECT(gbc.readMem(0x87bd), 0x16);
        EXPECT(gbc.readMem(0xad5a), 0xde);
        // CB 16 004E
        gbc.setState(0xa740, 0xafb2, 0x41e0, 0x7049, 0xf8c8, 0xaf55, 0x0, 0x1);
        gbc.writeMem(0xa740, { 0xcb, 0x16 });
        gbc.writeMem(0xaf55, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xafb2);
        EXPECT(gbc.pc(), 0xa742);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa740), 0xcb);
        EXPECT(gbc.readMem(0xa741), 0x16);
        EXPECT(gbc.readMem(0xaf55), 0x76);
        // CB 16 004F
        gbc.setState(0xe4ed, 0xb82a, 0x1b90, 0xb97b, 0xc856, 0xcc53, 0x0, 0x0);
        gbc.writeMem(0xcc53, { 0xb7 });
        gbc.writeMem(0xe4ed, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb82a);
        EXPECT(gbc.pc(), 0xe4ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc53), 0x6f);
        EXPECT(gbc.readMem(0xe4ed), 0xcb);
        EXPECT(gbc.readMem(0xe4ee), 0x16);
        // CB 16 0050
        gbc.setState(0xf08, 0x25f5, 0xadd0, 0xc542, 0x61b8, 0xe871, 0x0, 0x0);
        gbc.writeMem(0xf08, { 0xcb, 0x16 });
        gbc.writeMem(0xe871, { 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x25f5);
        EXPECT(gbc.pc(), 0xf0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe871), 0xfd);
        // CB 16 0051
        gbc.setState(0x7a70, 0x4868, 0xb0a0, 0x1bbb, 0x88df, 0xda97, 0x0, 0x0);
        gbc.writeMem(0x7a70, { 0xcb, 0x16 });
        gbc.writeMem(0xda97, { 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x4868);
        EXPECT(gbc.pc(), 0x7a72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda97), 0x78);
        // CB 16 0053
        gbc.setState(0x879, 0xa0ae, 0x3ef0, 0x8473, 0xeb41, 0xdf42, 0x0, 0x1);
        gbc.writeMem(0x879, { 0xcb, 0x16 });
        gbc.writeMem(0xdf42, { 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xa0ae);
        EXPECT(gbc.pc(), 0x87b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf42), 0x29);
        // CB 16 0054
        gbc.setState(0x4a39, 0x33f7, 0x6050, 0xbf2b, 0xe5cc, 0xd5ba, 0x0, 0x1);
        gbc.writeMem(0x4a39, { 0xcb, 0x16 });
        gbc.writeMem(0xd5ba, { 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x33f7);
        EXPECT(gbc.pc(), 0x4a3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5ba), 0xb9);
        // CB 16 0055
        gbc.setState(0x5ee, 0x58bb, 0x5c00, 0xb6e3, 0x90c7, 0xe72f, 0x0, 0x1);
        gbc.writeMem(0x5ee, { 0xcb, 0x16 });
        gbc.writeMem(0xe72f, { 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x58bb);
        EXPECT(gbc.pc(), 0x5f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe72f), 0xa4);
        // CB 16 0058
        gbc.setState(0x793f, 0xc424, 0x5050, 0x2b4f, 0x2c8e, 0xf518, 0x1, 0x1);
        gbc.writeMem(0x793f, { 0xcb, 0x16 });
        gbc.writeMem(0xf518, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc424);
        EXPECT(gbc.pc(), 0x7941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf518), 0x19);
        // CB 16 005A
        gbc.setState(0xe148, 0xa906, 0x4eb0, 0x4f96, 0xc641, 0x8aa1, 0x0, 0x1);
        gbc.writeMem(0x8aa1, { 0xc1 });
        gbc.writeMem(0xe148, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa906);
        EXPECT(gbc.pc(), 0xe14a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aa1), 0x83);
        EXPECT(gbc.readMem(0xe148), 0xcb);
        EXPECT(gbc.readMem(0xe149), 0x16);
        // CB 16 005C
        gbc.setState(0x45c1, 0xa405, 0x9420, 0xab69, 0xfea1, 0xdd51, 0x0, 0x1);
        gbc.writeMem(0x45c1, { 0xcb, 0x16 });
        gbc.writeMem(0xdd51, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa405);
        EXPECT(gbc.pc(), 0x45c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd51), 0xd8);
        // CB 16 005D
        gbc.setState(0xb762, 0x9752, 0xc550, 0xf00f, 0x22af, 0xd589, 0x0, 0x1);
        gbc.writeMem(0xb762, { 0xcb, 0x16 });
        gbc.writeMem(0xd589, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x9752);
        EXPECT(gbc.pc(), 0xb764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb762), 0xcb);
        EXPECT(gbc.readMem(0xb763), 0x16);
        EXPECT(gbc.readMem(0xd589), 0xd3);
        // CB 16 005E
        gbc.setState(0xb819, 0xde4d, 0x65d0, 0x3073, 0x7f71, 0xce97, 0x1, 0x0);
        gbc.writeMem(0xb819, { 0xcb, 0x16 });
        gbc.writeMem(0xce97, { 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xde4d);
        EXPECT(gbc.pc(), 0xb81b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb819), 0xcb);
        EXPECT(gbc.readMem(0xb81a), 0x16);
        EXPECT(gbc.readMem(0xce97), 0x15);
        // CB 16 0062
        gbc.setState(0x55bd, 0x7c78, 0xa1a0, 0x964b, 0xbcff, 0x8ccb, 0x0, 0x0);
        gbc.writeMem(0x55bd, { 0xcb, 0x16 });
        gbc.writeMem(0x8ccb, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x7c78);
        EXPECT(gbc.pc(), 0x55bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ccb), 0xde);
        // CB 16 0063
        gbc.setState(0xcd6b, 0xd920, 0xccf0, 0xa51d, 0x5ce, 0xf085, 0x1, 0x0);
        gbc.writeMem(0xcd6b, { 0xcb, 0x16 });
        gbc.writeMem(0xf085, { 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xd920);
        EXPECT(gbc.pc(), 0xcd6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd6b), 0xcb);
        EXPECT(gbc.readMem(0xcd6c), 0x16);
        EXPECT(gbc.readMem(0xf085), 0x67);
        // CB 16 0064
        gbc.setState(0xa2fc, 0x48f2, 0x38a0, 0x2b69, 0x3eae, 0xc1a7, 0x0, 0x0);
        gbc.writeMem(0xa2fc, { 0xcb, 0x16 });
        gbc.writeMem(0xc1a7, { 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x48f2);
        EXPECT(gbc.pc(), 0xa2fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2fc), 0xcb);
        EXPECT(gbc.readMem(0xa2fd), 0x16);
        EXPECT(gbc.readMem(0xc1a7), 0xc2);
        // CB 16 0065
        gbc.setState(0x9829, 0xaf78, 0x4720, 0x31b0, 0x34bc, 0xc028, 0x0, 0x0);
        gbc.writeMem(0x9829, { 0xcb, 0x16 });
        gbc.writeMem(0xc028, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xaf78);
        EXPECT(gbc.pc(), 0x982b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9829), 0xcb);
        EXPECT(gbc.readMem(0x982a), 0x16);
        EXPECT(gbc.readMem(0xc028), 0x46);
        // CB 16 0067
        gbc.setState(0x1cc2, 0xfcc7, 0xcb90, 0x35a8, 0x3b08, 0x9de6, 0x1, 0x0);
        gbc.writeMem(0x1cc2, { 0xcb, 0x16 });
        gbc.writeMem(0x9de6, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xfcc7);
        EXPECT(gbc.pc(), 0x1cc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9de6), 0xf5);
        // CB 16 0069
        gbc.setState(0x4c46, 0xb736, 0x51a0, 0x7f91, 0xc17f, 0xc22b, 0x1, 0x1);
        gbc.writeMem(0x4c46, { 0xcb, 0x16 });
        gbc.writeMem(0xc22b, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb736);
        EXPECT(gbc.pc(), 0x4c48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc22b), 0x96);
        // CB 16 006A
        gbc.setState(0xd975, 0x63bf, 0x18a0, 0x38bf, 0xd0b0, 0xee51, 0x1, 0x1);
        gbc.writeMem(0xd975, { 0xcb, 0x16 });
        gbc.writeMem(0xee51, { 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x63bf);
        EXPECT(gbc.pc(), 0xd977);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd975), 0xcb);
        EXPECT(gbc.readMem(0xd976), 0x16);
        EXPECT(gbc.readMem(0xee51), 0x68);
        // CB 16 006B
        gbc.setState(0x333a, 0xa04c, 0x39e0, 0x1fb9, 0x4e81, 0xacf0, 0x0, 0x0);
        gbc.writeMem(0x333a, { 0xcb, 0x16 });
        gbc.writeMem(0xacf0, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa04c);
        EXPECT(gbc.pc(), 0x333c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacf0), 0xaa);
        // CB 16 006C
        gbc.setState(0xb779, 0xb26d, 0x3230, 0x8f3a, 0x1a3e, 0x8cc1, 0x0, 0x0);
        gbc.writeMem(0x8cc1, { 0xd5 });
        gbc.writeMem(0xb779, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb26d);
        EXPECT(gbc.pc(), 0xb77b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cc1), 0xab);
        EXPECT(gbc.readMem(0xb779), 0xcb);
        EXPECT(gbc.readMem(0xb77a), 0x16);
        // CB 16 006E
        gbc.setState(0x21db, 0x9de2, 0xfd10, 0x5363, 0x3d6c, 0xf5a4, 0x0, 0x1);
        gbc.writeMem(0x21db, { 0xcb, 0x16 });
        gbc.writeMem(0xf5a4, { 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x9de2);
        EXPECT(gbc.pc(), 0x21dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf5a4), 0x27);
        // CB 16 0075
        gbc.setState(0xd071, 0xe36b, 0xa010, 0x15d2, 0x3dea, 0xf33e, 0x1, 0x1);
        gbc.writeMem(0xd071, { 0xcb, 0x16 });
        gbc.writeMem(0xf33e, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xe36b);
        EXPECT(gbc.pc(), 0xd073);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd071), 0xcb);
        EXPECT(gbc.readMem(0xd072), 0x16);
        EXPECT(gbc.readMem(0xf33e), 0xf5);
        // CB 16 0076
        gbc.setState(0xa5e2, 0x1c43, 0x1030, 0x728f, 0x7624, 0xa760, 0x1, 0x1);
        gbc.writeMem(0xa5e2, { 0xcb, 0x16 });
        gbc.writeMem(0xa760, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1c43);
        EXPECT(gbc.pc(), 0xa5e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5e2), 0xcb);
        EXPECT(gbc.readMem(0xa5e3), 0x16);
        EXPECT(gbc.readMem(0xa760), 0x11);
        // CB 16 0077
        gbc.setState(0x8e1f, 0x457c, 0x16b0, 0xdf53, 0xc75c, 0xffcc, 0x0, 0x0);
        gbc.writeMem(0x8e1f, { 0xcb, 0x16 });
        gbc.writeMem(0xffcc, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x457c);
        EXPECT(gbc.pc(), 0x8e21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e1f), 0xcb);
        EXPECT(gbc.readMem(0x8e20), 0x16);
        EXPECT(gbc.readMem(0xffcc), 0x1b);
        // CB 16 0078
        gbc.setState(0x58e9, 0xed0c, 0xa780, 0x4afe, 0x52ce, 0xb871, 0x1, 0x0);
        gbc.writeMem(0x58e9, { 0xcb, 0x16 });
        gbc.writeMem(0xb871, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xed0c);
        EXPECT(gbc.pc(), 0x58eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb871), 0x54);
        // CB 16 0079
        gbc.setState(0x93ba, 0x368f, 0x4900, 0xb39, 0xe4c7, 0xd57b, 0x0, 0x1);
        gbc.writeMem(0x93ba, { 0xcb, 0x16 });
        gbc.writeMem(0xd57b, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x368f);
        EXPECT(gbc.pc(), 0x93bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93ba), 0xcb);
        EXPECT(gbc.readMem(0x93bb), 0x16);
        EXPECT(gbc.readMem(0xd57b), 0x4a);
        // CB 16 007B
        gbc.setState(0x7ed6, 0xb652, 0x9980, 0x5587, 0x862f, 0x8461, 0x1, 0x1);
        gbc.writeMem(0x7ed6, { 0xcb, 0x16 });
        gbc.writeMem(0x8461, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb652);
        EXPECT(gbc.pc(), 0x7ed8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8461), 0x62);
        // CB 16 007C
        gbc.setState(0xa0c7, 0xd6c9, 0x4de0, 0x2c78, 0x4ab6, 0xf110, 0x0, 0x0);
        gbc.writeMem(0xa0c7, { 0xcb, 0x16 });
        gbc.writeMem(0xf110, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd6c9);
        EXPECT(gbc.pc(), 0xa0c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0c7), 0xcb);
        EXPECT(gbc.readMem(0xa0c8), 0x16);
        EXPECT(gbc.readMem(0xf110), 0xc);
        // CB 16 007E
        gbc.setState(0x82f6, 0x8033, 0xa0f0, 0x91d1, 0xfea2, 0x9764, 0x1, 0x1);
        gbc.writeMem(0x82f6, { 0xcb, 0x16 });
        gbc.writeMem(0x9764, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8033);
        EXPECT(gbc.pc(), 0x82f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82f6), 0xcb);
        EXPECT(gbc.readMem(0x82f7), 0x16);
        EXPECT(gbc.readMem(0x9764), 0x43);
        // CB 16 007F
        gbc.setState(0xb9ab, 0xb88, 0x1310, 0xbfcf, 0xbaa2, 0x8494, 0x1, 0x0);
        gbc.writeMem(0x8494, { 0xdc });
        gbc.writeMem(0xb9ab, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb88);
        EXPECT(gbc.pc(), 0xb9ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8494), 0xb9);
        EXPECT(gbc.readMem(0xb9ab), 0xcb);
        EXPECT(gbc.readMem(0xb9ac), 0x16);
        // CB 16 0081
        gbc.setState(0x6f4e, 0x8b26, 0x4800, 0xb47, 0x6eb7, 0xbe46, 0x0, 0x0);
        gbc.writeMem(0x6f4e, { 0xcb, 0x16 });
        gbc.writeMem(0xbe46, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x8b26);
        EXPECT(gbc.pc(), 0x6f50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe46), 0x1e);
        // CB 16 0082
        gbc.setState(0x5d98, 0xada3, 0x56f0, 0xed78, 0x909f, 0xe50a, 0x0, 0x0);
        gbc.writeMem(0x5d98, { 0xcb, 0x16 });
        gbc.writeMem(0xe50a, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xada3);
        EXPECT(gbc.pc(), 0x5d9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe50a), 0x5d);
        // CB 16 0085
        gbc.setState(0x7c14, 0xc83a, 0x2790, 0x458, 0x1dc3, 0xa6d9, 0x1, 0x0);
        gbc.writeMem(0x7c14, { 0xcb, 0x16 });
        gbc.writeMem(0xa6d9, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc83a);
        EXPECT(gbc.pc(), 0x7c16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d9), 0x95);
        // CB 16 0086
        gbc.setState(0x7bbe, 0xd038, 0xc490, 0x1617, 0x9057, 0xfdc8, 0x0, 0x0);
        gbc.writeMem(0x7bbe, { 0xcb, 0x16 });
        gbc.writeMem(0xfdc8, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xd038);
        EXPECT(gbc.pc(), 0x7bc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfdc8), 0x33);
        // CB 16 0087
        gbc.setState(0x533d, 0xf466, 0x83e0, 0x5a96, 0xd5be, 0xb526, 0x0, 0x1);
        gbc.writeMem(0x533d, { 0xcb, 0x16 });
        gbc.writeMem(0xb526, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf466);
        EXPECT(gbc.pc(), 0x533f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb526), 0x14);
        // CB 16 008B
        gbc.setState(0xb106, 0xe18b, 0xf7a0, 0x5d66, 0xd7a7, 0xfe3a, 0x1, 0x0);
        gbc.writeMem(0xb106, { 0xcb, 0x16 });
        gbc.writeMem(0xfe3a, { 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe18b);
        EXPECT(gbc.pc(), 0xb108);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb106), 0xcb);
        EXPECT(gbc.readMem(0xb107), 0x16);
        EXPECT(gbc.readMem(0xfe3a), 0x28);
        // CB 16 008C
        gbc.setState(0x8069, 0xab6c, 0x19a0, 0x9f7f, 0xbeb8, 0xdf27, 0x1, 0x0);
        gbc.writeMem(0x8069, { 0xcb, 0x16 });
        gbc.writeMem(0xdf27, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xab6c);
        EXPECT(gbc.pc(), 0x806b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8069), 0xcb);
        EXPECT(gbc.readMem(0x806a), 0x16);
        EXPECT(gbc.readMem(0xdf27), 0xcc);
        // CB 16 008F
        gbc.setState(0x776f, 0xd665, 0xb180, 0xb34c, 0xbcca, 0xccef, 0x0, 0x0);
        gbc.writeMem(0x776f, { 0xcb, 0x16 });
        gbc.writeMem(0xccef, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xd665);
        EXPECT(gbc.pc(), 0x7771);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccef), 0xba);
        // CB 16 0090
        gbc.setState(0x3669, 0x3467, 0x5e20, 0xc18, 0x67c2, 0xf53c, 0x0, 0x1);
        gbc.writeMem(0x3669, { 0xcb, 0x16 });
        gbc.writeMem(0xf53c, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3467);
        EXPECT(gbc.pc(), 0x366b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf53c), 0xe4);
        // CB 16 0097
        gbc.setState(0x9bd2, 0xe791, 0xa5b0, 0x19c1, 0x477e, 0xc6fb, 0x0, 0x0);
        gbc.writeMem(0x9bd2, { 0xcb, 0x16 });
        gbc.writeMem(0xc6fb, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe791);
        EXPECT(gbc.pc(), 0x9bd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bd2), 0xcb);
        EXPECT(gbc.readMem(0x9bd3), 0x16);
        EXPECT(gbc.readMem(0xc6fb), 0x53);
        // CB 16 0098
        gbc.setState(0x30bc, 0xeff0, 0x9240, 0xafb5, 0x95ec, 0xfd04, 0x0, 0x0);
        gbc.writeMem(0x30bc, { 0xcb, 0x16 });
        gbc.writeMem(0xfd04, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xeff0);
        EXPECT(gbc.pc(), 0x30be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfd04), 0xe0);
        // CB 16 009E
        gbc.setState(0xacf4, 0x8d66, 0x5e70, 0xdb29, 0xd6c0, 0xcf3e, 0x0, 0x0);
        gbc.writeMem(0xacf4, { 0xcb, 0x16 });
        gbc.writeMem(0xcf3e, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8d66);
        EXPECT(gbc.pc(), 0xacf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacf4), 0xcb);
        EXPECT(gbc.readMem(0xacf5), 0x16);
        EXPECT(gbc.readMem(0xcf3e), 0xbf);
        // CB 16 009F
        gbc.setState(0x4ce3, 0x9f84, 0xe020, 0xfabe, 0xc822, 0xc01e, 0x0, 0x1);
        gbc.writeMem(0x4ce3, { 0xcb, 0x16 });
        gbc.writeMem(0xc01e, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x9f84);
        EXPECT(gbc.pc(), 0x4ce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc01e), 0x9e);
        // CB 16 00A0
        gbc.setState(0xd2de, 0x695f, 0x4f50, 0x9976, 0xd89d, 0x8602, 0x1, 0x1);
        gbc.writeMem(0x8602, { 0xa1 });
        gbc.writeMem(0xd2de, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x695f);
        EXPECT(gbc.pc(), 0xd2e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8602), 0x43);
        EXPECT(gbc.readMem(0xd2de), 0xcb);
        EXPECT(gbc.readMem(0xd2df), 0x16);
        // CB 16 00A3
        gbc.setState(0x2c79, 0xf24c, 0x2b60, 0xa54c, 0x2535, 0xf14f, 0x1, 0x0);
        gbc.writeMem(0x2c79, { 0xcb, 0x16 });
        gbc.writeMem(0xf14f, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf24c);
        EXPECT(gbc.pc(), 0x2c7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf14f), 0xaa);
        // CB 16 00A5
        gbc.setState(0x9415, 0x877d, 0x4e80, 0x636e, 0xb8d5, 0xe5e1, 0x0, 0x1);
        gbc.writeMem(0x9415, { 0xcb, 0x16 });
        gbc.writeMem(0xe5e1, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x877d);
        EXPECT(gbc.pc(), 0x9417);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9415), 0xcb);
        EXPECT(gbc.readMem(0x9416), 0x16);
        EXPECT(gbc.readMem(0xe5e1), 0x52);
        // CB 16 00A6
        gbc.setState(0xb197, 0xcc34, 0x3890, 0xbbeb, 0xbc96, 0xbc47, 0x1, 0x0);
        gbc.writeMem(0xb197, { 0xcb, 0x16 });
        gbc.writeMem(0xbc47, { 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xcc34);
        EXPECT(gbc.pc(), 0xb199);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb197), 0xcb);
        EXPECT(gbc.readMem(0xb198), 0x16);
        EXPECT(gbc.readMem(0xbc47), 0xc5);
        // CB 16 00A7
        gbc.setState(0x94df, 0x5104, 0x6360, 0xb5cd, 0xa47b, 0xf673, 0x0, 0x1);
        gbc.writeMem(0x94df, { 0xcb, 0x16 });
        gbc.writeMem(0xf673, { 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x5104);
        EXPECT(gbc.pc(), 0x94e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94df), 0xcb);
        EXPECT(gbc.readMem(0x94e0), 0x16);
        EXPECT(gbc.readMem(0xf673), 0xb8);
        // CB 16 00AB
        gbc.setState(0x7131, 0x91a7, 0x18b0, 0x7be7, 0x3c86, 0xad82, 0x0, 0x1);
        gbc.writeMem(0x7131, { 0xcb, 0x16 });
        gbc.writeMem(0xad82, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x91a7);
        EXPECT(gbc.pc(), 0x7133);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad82), 0x19);
        // CB 16 00B3
        gbc.setState(0x62a, 0x5174, 0xb700, 0x222a, 0x6841, 0x9fc4, 0x0, 0x0);
        gbc.writeMem(0x62a, { 0xcb, 0x16 });
        gbc.writeMem(0x9fc4, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5174);
        EXPECT(gbc.pc(), 0x62c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fc4), 0xfe);
        // CB 16 00B6
        gbc.setState(0xc1a7, 0x18c4, 0xa80, 0xf83a, 0x6203, 0x86a0, 0x1, 0x0);
        gbc.writeMem(0x86a0, { 0x71 });
        gbc.writeMem(0xc1a7, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x18c4);
        EXPECT(gbc.pc(), 0xc1a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86a0), 0xe2);
        EXPECT(gbc.readMem(0xc1a7), 0xcb);
        EXPECT(gbc.readMem(0xc1a8), 0x16);
        // CB 16 00B7
        gbc.setState(0x2b13, 0x1298, 0xef20, 0x3b4e, 0xab92, 0xebde, 0x0, 0x1);
        gbc.writeMem(0x2b13, { 0xcb, 0x16 });
        gbc.writeMem(0xebde, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1298);
        EXPECT(gbc.pc(), 0x2b15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebde), 0xdc);
        // CB 16 00B8
        gbc.setState(0x764e, 0xa306, 0xcc80, 0xe7dd, 0x7051, 0xc662, 0x1, 0x1);
        gbc.writeMem(0x764e, { 0xcb, 0x16 });
        gbc.writeMem(0xc662, { 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa306);
        EXPECT(gbc.pc(), 0x7650);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc662), 0x66);
        // CB 16 00BA
        gbc.setState(0x4948, 0xfc26, 0x9840, 0xa1cb, 0xdaa8, 0xc7de, 0x1, 0x1);
        gbc.writeMem(0x4948, { 0xcb, 0x16 });
        gbc.writeMem(0xc7de, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xfc26);
        EXPECT(gbc.pc(), 0x494a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7de), 0xee);
        // CB 16 00BB
        gbc.setState(0x72e5, 0x4f68, 0xa320, 0xc456, 0x4f0a, 0xff33, 0x1, 0x0);
        gbc.writeMem(0x72e5, { 0xcb, 0x16 });
        gbc.writeMem(0xff33, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4f68);
        EXPECT(gbc.pc(), 0x72e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff33), 0x50);
        // CB 16 00BD
        gbc.setState(0x8362, 0x6322, 0x62c0, 0xb637, 0x913c, 0xa589, 0x0, 0x1);
        gbc.writeMem(0x8362, { 0xcb, 0x16 });
        gbc.writeMem(0xa589, { 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6322);
        EXPECT(gbc.pc(), 0x8364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8362), 0xcb);
        EXPECT(gbc.readMem(0x8363), 0x16);
        EXPECT(gbc.readMem(0xa589), 0x82);
        // CB 16 00BE
        gbc.setState(0x2ebb, 0x1e6a, 0xd060, 0x1377, 0xa773, 0xe0e9, 0x1, 0x0);
        gbc.writeMem(0x2ebb, { 0xcb, 0x16 });
        gbc.writeMem(0xe0e9, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1e6a);
        EXPECT(gbc.pc(), 0x2ebd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0e9), 0xf0);
        // CB 16 00BF
        gbc.setState(0xcfc9, 0x13b9, 0xee40, 0x6b08, 0x8b3b, 0xbe52, 0x1, 0x1);
        gbc.writeMem(0xbe52, { 0x70 });
        gbc.writeMem(0xcfc9, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x13b9);
        EXPECT(gbc.pc(), 0xcfcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe52), 0xe0);
        EXPECT(gbc.readMem(0xcfc9), 0xcb);
        EXPECT(gbc.readMem(0xcfca), 0x16);
        // CB 16 00C1
        gbc.setState(0x58e, 0xb673, 0x9da0, 0xe91f, 0xa85b, 0xb7ea, 0x0, 0x0);
        gbc.writeMem(0x58e, { 0xcb, 0x16 });
        gbc.writeMem(0xb7ea, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb673);
        EXPECT(gbc.pc(), 0x590);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7ea), 0x1e);
        // CB 16 00C3
        gbc.setState(0xdbe0, 0x82ca, 0xa210, 0x8a64, 0x46d7, 0x94dd, 0x1, 0x0);
        gbc.writeMem(0x94dd, { 0x24 });
        gbc.writeMem(0xdbe0, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x82ca);
        EXPECT(gbc.pc(), 0xdbe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94dd), 0x49);
        EXPECT(gbc.readMem(0xdbe0), 0xcb);
        EXPECT(gbc.readMem(0xdbe1), 0x16);
        // CB 16 00C4
        gbc.setState(0xd708, 0xef60, 0x9fa0, 0x29d, 0x2ab7, 0xcc45, 0x1, 0x1);
        gbc.writeMem(0xcc45, { 0xa6 });
        gbc.writeMem(0xd708, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xef60);
        EXPECT(gbc.pc(), 0xd70a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc45), 0x4c);
        EXPECT(gbc.readMem(0xd708), 0xcb);
        EXPECT(gbc.readMem(0xd709), 0x16);
        // CB 16 00C7
        gbc.setState(0x57a0, 0xef71, 0x7410, 0xab92, 0x9e23, 0xacc4, 0x0, 0x0);
        gbc.writeMem(0x57a0, { 0xcb, 0x16 });
        gbc.writeMem(0xacc4, { 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xef71);
        EXPECT(gbc.pc(), 0x57a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacc4), 0x8f);
        // CB 16 00C8
        gbc.setState(0x80b1, 0x3996, 0x9920, 0x39cb, 0xda0c, 0xe9cc, 0x1, 0x1);
        gbc.writeMem(0x80b1, { 0xcb, 0x16 });
        gbc.writeMem(0xe9cc, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x3996);
        EXPECT(gbc.pc(), 0x80b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80b1), 0xcb);
        EXPECT(gbc.readMem(0x80b2), 0x16);
        EXPECT(gbc.readMem(0xe9cc), 0x5a);
        // CB 16 00CC
        gbc.setState(0x9b17, 0x5b30, 0x8e50, 0x3b0e, 0xa777, 0xac11, 0x1, 0x0);
        gbc.writeMem(0x9b17, { 0xcb, 0x16 });
        gbc.writeMem(0xac11, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5b30);
        EXPECT(gbc.pc(), 0x9b19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b17), 0xcb);
        EXPECT(gbc.readMem(0x9b18), 0x16);
        EXPECT(gbc.readMem(0xac11), 0xd3);
        // CB 16 00CD
        gbc.setState(0xdfb4, 0x1e3e, 0x7030, 0x6aa5, 0xc5f4, 0xe06f, 0x1, 0x0);
        gbc.writeMem(0xdfb4, { 0xcb, 0x16 });
        gbc.writeMem(0xe06f, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1e3e);
        EXPECT(gbc.pc(), 0xdfb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfb4), 0xcb);
        EXPECT(gbc.readMem(0xdfb5), 0x16);
        EXPECT(gbc.readMem(0xe06f), 0x4d);
        // CB 16 00CF
        gbc.setState(0x853b, 0xbc, 0x3410, 0xb48, 0x397, 0xe077, 0x0, 0x1);
        gbc.writeMem(0x853b, { 0xcb, 0x16 });
        gbc.writeMem(0xe077, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xbc);
        EXPECT(gbc.pc(), 0x853d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x853b), 0xcb);
        EXPECT(gbc.readMem(0x853c), 0x16);
        EXPECT(gbc.readMem(0xe077), 0x81);
        // CB 16 00D0
        gbc.setState(0xda8b, 0x382, 0x7280, 0xf972, 0x5de9, 0xbc4a, 0x0, 0x1);
        gbc.writeMem(0xbc4a, { 0x7d });
        gbc.writeMem(0xda8b, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x382);
        EXPECT(gbc.pc(), 0xda8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc4a), 0xfa);
        EXPECT(gbc.readMem(0xda8b), 0xcb);
        EXPECT(gbc.readMem(0xda8c), 0x16);
        // CB 16 00D1
        gbc.setState(0xe6a7, 0x1a6d, 0xf060, 0x4cce, 0xac14, 0xc754, 0x1, 0x0);
        gbc.writeMem(0xc754, { 0x43 });
        gbc.writeMem(0xe6a7, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x1a6d);
        EXPECT(gbc.pc(), 0xe6a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc754), 0x86);
        EXPECT(gbc.readMem(0xe6a7), 0xcb);
        EXPECT(gbc.readMem(0xe6a8), 0x16);
        // CB 16 00D3
        gbc.setState(0x5701, 0xe9e0, 0xa770, 0x4faf, 0xc3b6, 0x813b, 0x0, 0x1);
        gbc.writeMem(0x5701, { 0xcb, 0x16 });
        gbc.writeMem(0x813b, { 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe9e0);
        EXPECT(gbc.pc(), 0x5703);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x813b), 0x7);
        // CB 16 00D8
        gbc.setState(0x9c1e, 0x75f1, 0x6fa0, 0x1076, 0x62e3, 0x869a, 0x1, 0x1);
        gbc.writeMem(0x869a, { 0x4a });
        gbc.writeMem(0x9c1e, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x75f1);
        EXPECT(gbc.pc(), 0x9c20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x869a), 0x94);
        EXPECT(gbc.readMem(0x9c1e), 0xcb);
        EXPECT(gbc.readMem(0x9c1f), 0x16);
        // CB 16 00D9
        gbc.setState(0xa8f3, 0x490, 0x4220, 0xfee8, 0xad01, 0xccec, 0x0, 0x1);
        gbc.writeMem(0xa8f3, { 0xcb, 0x16 });
        gbc.writeMem(0xccec, { 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x490);
        EXPECT(gbc.pc(), 0xa8f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8f3), 0xcb);
        EXPECT(gbc.readMem(0xa8f4), 0x16);
        EXPECT(gbc.readMem(0xccec), 0x96);
        // CB 16 00DA
        gbc.setState(0x2722, 0x77d6, 0x490, 0xb392, 0xb29c, 0xa042, 0x1, 0x1);
        gbc.writeMem(0x2722, { 0xcb, 0x16 });
        gbc.writeMem(0xa042, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x77d6);
        EXPECT(gbc.pc(), 0x2724);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa042), 0xe5);
        // CB 16 00DD
        gbc.setState(0x47b6, 0x603b, 0xd390, 0xcd0c, 0x1388, 0xe9c4, 0x0, 0x0);
        gbc.writeMem(0x47b6, { 0xcb, 0x16 });
        gbc.writeMem(0xe9c4, { 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x603b);
        EXPECT(gbc.pc(), 0x47b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9c4), 0xc1);
        // CB 16 00DF
        gbc.setState(0xeca6, 0xbd17, 0xb0d0, 0x99e5, 0x997, 0xc4c9, 0x0, 0x1);
        gbc.writeMem(0xc4c9, { 0xa2 });
        gbc.writeMem(0xeca6, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xbd17);
        EXPECT(gbc.pc(), 0xeca8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4c9), 0x45);
        EXPECT(gbc.readMem(0xeca6), 0xcb);
        EXPECT(gbc.readMem(0xeca7), 0x16);
        // CB 16 00E0
        gbc.setState(0x7e0, 0x4f3d, 0xa0e0, 0x3610, 0xf4cb, 0x8912, 0x0, 0x1);
        gbc.writeMem(0x7e0, { 0xcb, 0x16 });
        gbc.writeMem(0x8912, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x4f3d);
        EXPECT(gbc.pc(), 0x7e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8912), 0x3c);
        // CB 16 00E2
        gbc.setState(0xab6e, 0x2d15, 0x7bc0, 0x15e5, 0x672f, 0x97b8, 0x0, 0x1);
        gbc.writeMem(0x97b8, { 0xfe });
        gbc.writeMem(0xab6e, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x2d15);
        EXPECT(gbc.pc(), 0xab70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97b8), 0xfc);
        EXPECT(gbc.readMem(0xab6e), 0xcb);
        EXPECT(gbc.readMem(0xab6f), 0x16);
        // CB 16 00E3
        gbc.setState(0x5dda, 0xb68e, 0x9450, 0x8b6b, 0xb9fb, 0xf939, 0x1, 0x1);
        gbc.writeMem(0x5dda, { 0xcb, 0x16 });
        gbc.writeMem(0xf939, { 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xb68e);
        EXPECT(gbc.pc(), 0x5ddc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf939), 0xa9);
        // CB 16 00E5
        gbc.setState(0x127f, 0xe5d3, 0xd4a0, 0x2671, 0x78e9, 0x9bdf, 0x1, 0x1);
        gbc.writeMem(0x127f, { 0xcb, 0x16 });
        gbc.writeMem(0x9bdf, { 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe5d3);
        EXPECT(gbc.pc(), 0x1281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bdf), 0x68);
        // CB 16 00E9
        gbc.setState(0xc723, 0x6d05, 0xa250, 0xa881, 0x53d7, 0xa54f, 0x1, 0x1);
        gbc.writeMem(0xa54f, { 0x16 });
        gbc.writeMem(0xc723, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x6d05);
        EXPECT(gbc.pc(), 0xc725);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa54f), 0x2d);
        EXPECT(gbc.readMem(0xc723), 0xcb);
        EXPECT(gbc.readMem(0xc724), 0x16);
        // CB 16 00F0
        gbc.setState(0xd503, 0x4d, 0x56a0, 0x3d59, 0xfbd1, 0xd96e, 0x0, 0x0);
        gbc.writeMem(0xd503, { 0xcb, 0x16 });
        gbc.writeMem(0xd96e, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4d);
        EXPECT(gbc.pc(), 0xd505);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd503), 0xcb);
        EXPECT(gbc.readMem(0xd504), 0x16);
        EXPECT(gbc.readMem(0xd96e), 0x12);
        // CB 16 00F3
        gbc.setState(0x20da, 0x8539, 0xc4c0, 0x2fe8, 0xd7f2, 0x99c8, 0x0, 0x0);
        gbc.writeMem(0x20da, { 0xcb, 0x16 });
        gbc.writeMem(0x99c8, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8539);
        EXPECT(gbc.pc(), 0x20dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99c8), 0x66);
        // CB 16 00F6
        gbc.setState(0x379f, 0xa1fa, 0x9930, 0x1b80, 0x1609, 0x803c, 0x0, 0x0);
        gbc.writeMem(0x379f, { 0xcb, 0x16 });
        gbc.writeMem(0x803c, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa1fa);
        EXPECT(gbc.pc(), 0x37a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x803c), 0x7b);
        // CB 16 00F7
        gbc.setState(0xefbc, 0x4ce5, 0x9ca0, 0x1caf, 0x564f, 0xc492, 0x0, 0x1);
        gbc.writeMem(0xc492, { 0x5a });
        gbc.writeMem(0xefbc, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x4ce5);
        EXPECT(gbc.pc(), 0xefbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc492), 0xb4);
        EXPECT(gbc.readMem(0xefbc), 0xcb);
        EXPECT(gbc.readMem(0xefbd), 0x16);
        // CB 16 00FE
        gbc.setState(0x7306, 0x5946, 0xb770, 0x3a9b, 0x4b3, 0x8b97, 0x1, 0x0);
        gbc.writeMem(0x7306, { 0xcb, 0x16 });
        gbc.writeMem(0x8b97, { 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x5946);
        EXPECT(gbc.pc(), 0x7308);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b97), 0xc5);
        // CB 16 00FF
        gbc.setState(0x75a9, 0x18c2, 0x4c30, 0xbce2, 0x561f, 0xa413, 0x1, 0x0);
        gbc.writeMem(0x75a9, { 0xcb, 0x16 });
        gbc.writeMem(0xa413, { 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x18c2);
        EXPECT(gbc.pc(), 0x75ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa413), 0x5);
        // CB 16 0100
        gbc.setState(0xc5de, 0xa218, 0xa920, 0x7aed, 0xd4b2, 0x87d3, 0x1, 0x1);
        gbc.writeMem(0x87d3, { 0xd });
        gbc.writeMem(0xc5de, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xa218);
        EXPECT(gbc.pc(), 0xc5e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87d3), 0x1a);
        EXPECT(gbc.readMem(0xc5de), 0xcb);
        EXPECT(gbc.readMem(0xc5df), 0x16);
        // CB 16 0102
        gbc.setState(0xe399, 0xfe21, 0xd160, 0x2a64, 0xae39, 0xd134, 0x1, 0x0);
        gbc.writeMem(0xd134, { 0x7c });
        gbc.writeMem(0xe399, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xfe21);
        EXPECT(gbc.pc(), 0xe39b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd134), 0xf8);
        EXPECT(gbc.readMem(0xe399), 0xcb);
        EXPECT(gbc.readMem(0xe39a), 0x16);
        // CB 16 0104
        gbc.setState(0xde9f, 0x2843, 0x9350, 0x76b4, 0x225b, 0xf702, 0x0, 0x1);
        gbc.writeMem(0xde9f, { 0xcb, 0x16 });
        gbc.writeMem(0xf702, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x2843);
        EXPECT(gbc.pc(), 0xdea1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde9f), 0xcb);
        EXPECT(gbc.readMem(0xdea0), 0x16);
        EXPECT(gbc.readMem(0xf702), 0x43);
        // CB 16 0106
        gbc.setState(0x3e8a, 0xb59d, 0xf5b0, 0x7918, 0xbe24, 0xb833, 0x1, 0x1);
        gbc.writeMem(0x3e8a, { 0xcb, 0x16 });
        gbc.writeMem(0xb833, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xb59d);
        EXPECT(gbc.pc(), 0x3e8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb833), 0xf1);
        // CB 16 0109
        gbc.setState(0x4d4e, 0x952, 0x3cd0, 0x491d, 0xb0d, 0xdc3c, 0x0, 0x1);
        gbc.writeMem(0x4d4e, { 0xcb, 0x16 });
        gbc.writeMem(0xdc3c, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x952);
        EXPECT(gbc.pc(), 0x4d50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc3c), 0xad);
        // CB 16 010A
        gbc.setState(0x4184, 0xd493, 0x4380, 0xd53e, 0xccf7, 0xdc3d, 0x1, 0x0);
        gbc.writeMem(0x4184, { 0xcb, 0x16 });
        gbc.writeMem(0xdc3d, { 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xd493);
        EXPECT(gbc.pc(), 0x4186);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc3d), 0x28);
        // CB 16 010E
        gbc.setState(0xf64, 0x400b, 0xd6f0, 0x8e11, 0x7f92, 0x999e, 0x0, 0x0);
        gbc.writeMem(0xf64, { 0xcb, 0x16 });
        gbc.writeMem(0x999e, { 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x400b);
        EXPECT(gbc.pc(), 0xf66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x999e), 0x93);
        // CB 16 0111
        gbc.setState(0x5d50, 0x5c9d, 0xe700, 0xa5b6, 0x4be6, 0xa2c7, 0x1, 0x1);
        gbc.writeMem(0x5d50, { 0xcb, 0x16 });
        gbc.writeMem(0xa2c7, { 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x5c9d);
        EXPECT(gbc.pc(), 0x5d52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2c7), 0x3e);
        // CB 16 0112
        gbc.setState(0xa528, 0x4cdd, 0xbc50, 0x6642, 0xf500, 0xbb7a, 0x1, 0x0);
        gbc.writeMem(0xa528, { 0xcb, 0x16 });
        gbc.writeMem(0xbb7a, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x4cdd);
        EXPECT(gbc.pc(), 0xa52a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa528), 0xcb);
        EXPECT(gbc.readMem(0xa529), 0x16);
        EXPECT(gbc.readMem(0xbb7a), 0xbb);
        // CB 16 0117
        gbc.setState(0x88dc, 0x5387, 0x1780, 0x14e6, 0x22b8, 0x9e6a, 0x1, 0x1);
        gbc.writeMem(0x88dc, { 0xcb, 0x16 });
        gbc.writeMem(0x9e6a, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x5387);
        EXPECT(gbc.pc(), 0x88de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88dc), 0xcb);
        EXPECT(gbc.readMem(0x88dd), 0x16);
        EXPECT(gbc.readMem(0x9e6a), 0xfe);
        // CB 16 011A
        gbc.setState(0x69d0, 0x3a, 0x6940, 0x2a9d, 0x704a, 0xf57e, 0x0, 0x0);
        gbc.writeMem(0x69d0, { 0xcb, 0x16 });
        gbc.writeMem(0xf57e, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x3a);
        EXPECT(gbc.pc(), 0x69d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf57e), 0x7c);
        // CB 16 011D
        gbc.setState(0xe09f, 0xd1ba, 0x5970, 0x980a, 0x7ead, 0xe61e, 0x0, 0x0);
        gbc.writeMem(0xe09f, { 0xcb, 0x16 });
        gbc.writeMem(0xe61e, { 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xd1ba);
        EXPECT(gbc.pc(), 0xe0a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe09f), 0xcb);
        EXPECT(gbc.readMem(0xe0a0), 0x16);
        EXPECT(gbc.readMem(0xe61e), 0xed);
        // CB 16 011E
        gbc.setState(0xb56b, 0xbde, 0xb810, 0x5c22, 0x20dd, 0xc4d9, 0x1, 0x1);
        gbc.writeMem(0xb56b, { 0xcb, 0x16 });
        gbc.writeMem(0xc4d9, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xbde);
        EXPECT(gbc.pc(), 0xb56d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb56b), 0xcb);
        EXPECT(gbc.readMem(0xb56c), 0x16);
        EXPECT(gbc.readMem(0xc4d9), 0x87);
        // CB 16 0129
        gbc.setState(0x3362, 0x6820, 0x5730, 0x14a3, 0x5e79, 0xe09c, 0x0, 0x1);
        gbc.writeMem(0x3362, { 0xcb, 0x16 });
        gbc.writeMem(0xe09c, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6820);
        EXPECT(gbc.pc(), 0x3364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe09c), 0xe5);
        // CB 16 012B
        gbc.setState(0xadc1, 0xed1b, 0xc590, 0xfe2e, 0x5f0a, 0xbf33, 0x1, 0x1);
        gbc.writeMem(0xadc1, { 0xcb, 0x16 });
        gbc.writeMem(0xbf33, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xed1b);
        EXPECT(gbc.pc(), 0xadc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadc1), 0xcb);
        EXPECT(gbc.readMem(0xadc2), 0x16);
        EXPECT(gbc.readMem(0xbf33), 0x19);
        // CB 16 012D
        gbc.setState(0xdffc, 0xba28, 0xade0, 0xed2b, 0x35cd, 0x80f8, 0x1, 0x1);
        gbc.writeMem(0x80f8, { 0x90 });
        gbc.writeMem(0xdffc, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xba28);
        EXPECT(gbc.pc(), 0xdffe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80f8), 0x20);
        EXPECT(gbc.readMem(0xdffc), 0xcb);
        EXPECT(gbc.readMem(0xdffd), 0x16);
        // CB 16 012E
        gbc.setState(0xab60, 0x916e, 0x3110, 0x2dc9, 0x3145, 0xc977, 0x1, 0x0);
        gbc.writeMem(0xab60, { 0xcb, 0x16 });
        gbc.writeMem(0xc977, { 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x916e);
        EXPECT(gbc.pc(), 0xab62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab60), 0xcb);
        EXPECT(gbc.readMem(0xab61), 0x16);
        EXPECT(gbc.readMem(0xc977), 0xcb);
        // CB 16 012F
        gbc.setState(0x70ab, 0x685a, 0x3600, 0x13d9, 0x1658, 0xb274, 0x1, 0x0);
        gbc.writeMem(0x70ab, { 0xcb, 0x16 });
        gbc.writeMem(0xb274, { 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x685a);
        EXPECT(gbc.pc(), 0x70ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb274), 0xc8);
        // CB 16 0133
        gbc.setState(0x8d17, 0x619, 0xeff0, 0xb2e2, 0x2e8d, 0x8ee9, 0x0, 0x0);
        gbc.writeMem(0x8d17, { 0xcb, 0x16 });
        gbc.writeMem(0x8ee9, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x619);
        EXPECT(gbc.pc(), 0x8d19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d17), 0xcb);
        EXPECT(gbc.readMem(0x8d18), 0x16);
        EXPECT(gbc.readMem(0x8ee9), 0x7d);
        // CB 16 0136
        gbc.setState(0xdccf, 0xc62f, 0x7740, 0x50f3, 0xa9ea, 0xc931, 0x1, 0x0);
        gbc.writeMem(0xc931, { 0x28 });
        gbc.writeMem(0xdccf, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xc62f);
        EXPECT(gbc.pc(), 0xdcd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc931), 0x50);
        EXPECT(gbc.readMem(0xdccf), 0xcb);
        EXPECT(gbc.readMem(0xdcd0), 0x16);
        // CB 16 0139
        gbc.setState(0xe0c, 0x7a24, 0x4f70, 0x8d8f, 0x90b4, 0xba24, 0x0, 0x1);
        gbc.writeMem(0xe0c, { 0xcb, 0x16 });
        gbc.writeMem(0xba24, { 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7a24);
        EXPECT(gbc.pc(), 0xe0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba24), 0xc7);
        // CB 16 013D
        gbc.setState(0x57c1, 0x8e3b, 0xd940, 0x57e0, 0x2004, 0xdf1c, 0x0, 0x1);
        gbc.writeMem(0x57c1, { 0xcb, 0x16 });
        gbc.writeMem(0xdf1c, { 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x8e3b);
        EXPECT(gbc.pc(), 0x57c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf1c), 0xa);
        // CB 16 0141
        gbc.setState(0x345e, 0xc4e3, 0x9230, 0xbd2a, 0x7bfe, 0x8483, 0x1, 0x0);
        gbc.writeMem(0x345e, { 0xcb, 0x16 });
        gbc.writeMem(0x8483, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc4e3);
        EXPECT(gbc.pc(), 0x3460);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8483), 0xff);
        // CB 16 0142
        gbc.setState(0x32f1, 0x6d1d, 0xbfc0, 0x96be, 0xded7, 0x87dc, 0x1, 0x0);
        gbc.writeMem(0x32f1, { 0xcb, 0x16 });
        gbc.writeMem(0x87dc, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x6d1d);
        EXPECT(gbc.pc(), 0x32f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87dc), 0x8a);
        // CB 16 0144
        gbc.setState(0xc8b4, 0x833b, 0x7150, 0xe640, 0xd847, 0xb708, 0x0, 0x1);
        gbc.writeMem(0xb708, { 0x2d });
        gbc.writeMem(0xc8b4, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x833b);
        EXPECT(gbc.pc(), 0xc8b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb708), 0x5b);
        EXPECT(gbc.readMem(0xc8b4), 0xcb);
        EXPECT(gbc.readMem(0xc8b5), 0x16);
        // CB 16 0147
        gbc.setState(0x23ce, 0x756d, 0x9bc0, 0x7608, 0x3760, 0xbc47, 0x0, 0x0);
        gbc.writeMem(0x23ce, { 0xcb, 0x16 });
        gbc.writeMem(0xbc47, { 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x756d);
        EXPECT(gbc.pc(), 0x23d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc47), 0xc4);
        // CB 16 0149
        gbc.setState(0x4d05, 0x6e9, 0xe5f0, 0x728c, 0x31a6, 0x8268, 0x1, 0x1);
        gbc.writeMem(0x4d05, { 0xcb, 0x16 });
        gbc.writeMem(0x8268, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x6e9);
        EXPECT(gbc.pc(), 0x4d07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8268), 0xcb);
        // CB 16 014A
        gbc.setState(0xe6b4, 0x4421, 0x6ba0, 0xa26, 0x461c, 0xc198, 0x1, 0x0);
        gbc.writeMem(0xc198, { 0x2e });
        gbc.writeMem(0xe6b4, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x4421);
        EXPECT(gbc.pc(), 0xe6b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc198), 0x5c);
        EXPECT(gbc.readMem(0xe6b4), 0xcb);
        EXPECT(gbc.readMem(0xe6b5), 0x16);
        // CB 16 014C
        gbc.setState(0xc80, 0x3e30, 0x6620, 0xe90b, 0x17a9, 0xdfab, 0x0, 0x0);
        gbc.writeMem(0xc80, { 0xcb, 0x16 });
        gbc.writeMem(0xdfab, { 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3e30);
        EXPECT(gbc.pc(), 0xc82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfab), 0xd8);
        // CB 16 0150
        gbc.setState(0x59c8, 0x66eb, 0x6470, 0xbf0f, 0xd842, 0x85a7, 0x1, 0x0);
        gbc.writeMem(0x59c8, { 0xcb, 0x16 });
        gbc.writeMem(0x85a7, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x66eb);
        EXPECT(gbc.pc(), 0x59ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85a7), 0x9f);
        // CB 16 0151
        gbc.setState(0x32c9, 0xf645, 0x5b20, 0xf368, 0x81a0, 0x8eef, 0x1, 0x1);
        gbc.writeMem(0x32c9, { 0xcb, 0x16 });
        gbc.writeMem(0x8eef, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xf645);
        EXPECT(gbc.pc(), 0x32cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eef), 0x42);
        // CB 16 0152
        gbc.setState(0x5735, 0x89d3, 0xf500, 0x22d8, 0x3e33, 0xf5d7, 0x0, 0x1);
        gbc.writeMem(0x5735, { 0xcb, 0x16 });
        gbc.writeMem(0xf5d7, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x89d3);
        EXPECT(gbc.pc(), 0x5737);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf5d7), 0xda);
        // CB 16 0153
        gbc.setState(0xa841, 0x6e15, 0x88d0, 0x2a87, 0xa84e, 0xcb00, 0x0, 0x0);
        gbc.writeMem(0xa841, { 0xcb, 0x16 });
        gbc.writeMem(0xcb00, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x6e15);
        EXPECT(gbc.pc(), 0xa843);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa841), 0xcb);
        EXPECT(gbc.readMem(0xa842), 0x16);
        EXPECT(gbc.readMem(0xcb00), 0x57);
        // CB 16 015A
        gbc.setState(0x4512, 0x6c1f, 0xbc00, 0x88d2, 0x7876, 0xe304, 0x0, 0x1);
        gbc.writeMem(0x4512, { 0xcb, 0x16 });
        gbc.writeMem(0xe304, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6c1f);
        EXPECT(gbc.pc(), 0x4514);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe304), 0x40);
        // CB 16 015E
        gbc.setState(0xad80, 0xe51c, 0xe2a0, 0xbdb9, 0x432d, 0xabcc, 0x1, 0x0);
        gbc.writeMem(0xabcc, { 0x12 });
        gbc.writeMem(0xad80, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xe51c);
        EXPECT(gbc.pc(), 0xad82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabcc), 0x24);
        EXPECT(gbc.readMem(0xad80), 0xcb);
        EXPECT(gbc.readMem(0xad81), 0x16);
        // CB 16 0160
        gbc.setState(0x37e6, 0xb978, 0x83c0, 0x5773, 0xfbff, 0xd398, 0x0, 0x0);
        gbc.writeMem(0x37e6, { 0xcb, 0x16 });
        gbc.writeMem(0xd398, { 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb978);
        EXPECT(gbc.pc(), 0x37e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd398), 0xf2);
        // CB 16 0161
        gbc.setState(0x1efd, 0x82bb, 0xd950, 0xd705, 0x9311, 0xb825, 0x1, 0x0);
        gbc.writeMem(0x1efd, { 0xcb, 0x16 });
        gbc.writeMem(0xb825, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x82bb);
        EXPECT(gbc.pc(), 0x1eff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb825), 0xff);
        // CB 16 0162
        gbc.setState(0x794d, 0xb810, 0xc9f0, 0xc2a8, 0x43a7, 0xd16e, 0x1, 0x1);
        gbc.writeMem(0x794d, { 0xcb, 0x16 });
        gbc.writeMem(0xd16e, { 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xb810);
        EXPECT(gbc.pc(), 0x794f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd16e), 0x47);
        // CB 16 0164
        gbc.setState(0x71f, 0x96ed, 0x4330, 0xc312, 0xec4c, 0xfb3b, 0x1, 0x1);
        gbc.writeMem(0x71f, { 0xcb, 0x16 });
        gbc.writeMem(0xfb3b, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x96ed);
        EXPECT(gbc.pc(), 0x721);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfb3b), 0x75);
        // CB 16 0165
        gbc.setState(0xcd12, 0x7d17, 0xd200, 0xf83d, 0xeaa0, 0xa7c5, 0x1, 0x1);
        gbc.writeMem(0xa7c5, { 0xc8 });
        gbc.writeMem(0xcd12, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7d17);
        EXPECT(gbc.pc(), 0xcd14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7c5), 0x90);
        EXPECT(gbc.readMem(0xcd12), 0xcb);
        EXPECT(gbc.readMem(0xcd13), 0x16);
        // CB 16 0168
        gbc.setState(0x4de9, 0xc5d1, 0x3d0, 0x7fac, 0x1244, 0x8818, 0x1, 0x1);
        gbc.writeMem(0x4de9, { 0xcb, 0x16 });
        gbc.writeMem(0x8818, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc5d1);
        EXPECT(gbc.pc(), 0x4deb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8818), 0xdf);
        // CB 16 0169
        gbc.setState(0xb2ed, 0xd533, 0x4e80, 0xccc7, 0xddf, 0xd5d0, 0x0, 0x1);
        gbc.writeMem(0xb2ed, { 0xcb, 0x16 });
        gbc.writeMem(0xd5d0, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd533);
        EXPECT(gbc.pc(), 0xb2ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2ed), 0xcb);
        EXPECT(gbc.readMem(0xb2ee), 0x16);
        EXPECT(gbc.readMem(0xd5d0), 0xd6);
        // CB 16 016B
        gbc.setState(0x340e, 0x9883, 0xb530, 0xaf50, 0x7bea, 0xc2ec, 0x1, 0x0);
        gbc.writeMem(0x340e, { 0xcb, 0x16 });
        gbc.writeMem(0xc2ec, { 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x9883);
        EXPECT(gbc.pc(), 0x3410);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2ec), 0x8f);
        // CB 16 016C
        gbc.setState(0xd185, 0xfae3, 0x8950, 0x2b0a, 0xc74, 0xb5f4, 0x1, 0x0);
        gbc.writeMem(0xb5f4, { 0x58 });
        gbc.writeMem(0xd185, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xfae3);
        EXPECT(gbc.pc(), 0xd187);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5f4), 0xb1);
        EXPECT(gbc.readMem(0xd185), 0xcb);
        EXPECT(gbc.readMem(0xd186), 0x16);
        // CB 16 016F
        gbc.setState(0xc48, 0x2b5f, 0xb270, 0x4827, 0x6e30, 0x8766, 0x1, 0x0);
        gbc.writeMem(0xc48, { 0xcb, 0x16 });
        gbc.writeMem(0x8766, { 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x2b5f);
        EXPECT(gbc.pc(), 0xc4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8766), 0x3);
        // CB 16 0170
        gbc.setState(0x2d9e, 0x4b2e, 0xd620, 0xf4d5, 0xc271, 0xa92c, 0x1, 0x1);
        gbc.writeMem(0x2d9e, { 0xcb, 0x16 });
        gbc.writeMem(0xa92c, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4b2e);
        EXPECT(gbc.pc(), 0x2da0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa92c), 0x8a);
        // CB 16 0171
        gbc.setState(0x16c5, 0xe070, 0x9050, 0x7a79, 0x736e, 0x8a03, 0x1, 0x1);
        gbc.writeMem(0x16c5, { 0xcb, 0x16 });
        gbc.writeMem(0x8a03, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xe070);
        EXPECT(gbc.pc(), 0x16c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a03), 0xf5);
        // CB 16 0173
        gbc.setState(0x1777, 0xd2c9, 0x4b60, 0xee2e, 0x39ad, 0xc00f, 0x0, 0x1);
        gbc.writeMem(0x1777, { 0xcb, 0x16 });
        gbc.writeMem(0xc00f, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd2c9);
        EXPECT(gbc.pc(), 0x1779);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc00f), 0x4c);
        // CB 16 0175
        gbc.setState(0xe715, 0xae97, 0x1210, 0x2e5f, 0x6759, 0xa613, 0x1, 0x0);
        gbc.writeMem(0xa613, { 0x20 });
        gbc.writeMem(0xe715, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xae97);
        EXPECT(gbc.pc(), 0xe717);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa613), 0x41);
        EXPECT(gbc.readMem(0xe715), 0xcb);
        EXPECT(gbc.readMem(0xe716), 0x16);
        // CB 16 017A
        gbc.setState(0xa98a, 0x7f60, 0xb7c0, 0xbc8, 0x6ad0, 0x80e8, 0x0, 0x1);
        gbc.writeMem(0x80e8, { 0x47 });
        gbc.writeMem(0xa98a, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x7f60);
        EXPECT(gbc.pc(), 0xa98c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80e8), 0x8e);
        EXPECT(gbc.readMem(0xa98a), 0xcb);
        EXPECT(gbc.readMem(0xa98b), 0x16);
        // CB 16 017D
        gbc.setState(0x7094, 0xd45e, 0xccb0, 0xa57c, 0xf002, 0xb9d2, 0x1, 0x1);
        gbc.writeMem(0x7094, { 0xcb, 0x16 });
        gbc.writeMem(0xb9d2, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xd45e);
        EXPECT(gbc.pc(), 0x7096);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9d2), 0x1f);
        // CB 16 017E
        gbc.setState(0x445a, 0x7eba, 0x8630, 0x3466, 0x9543, 0xfc98, 0x1, 0x1);
        gbc.writeMem(0x445a, { 0xcb, 0x16 });
        gbc.writeMem(0xfc98, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7eba);
        EXPECT(gbc.pc(), 0x445c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc98), 0x1b);
        // CB 16 0180
        gbc.setState(0x12f4, 0x6012, 0x7ee0, 0x8386, 0xe0bf, 0xcfff, 0x1, 0x0);
        gbc.writeMem(0x12f4, { 0xcb, 0x16 });
        gbc.writeMem(0xcfff, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x6012);
        EXPECT(gbc.pc(), 0x12f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfff), 0x18);
        // CB 16 0181
        gbc.setState(0x3009, 0xf33, 0xbbe0, 0xfbc1, 0xb5f7, 0xf57a, 0x0, 0x0);
        gbc.writeMem(0x3009, { 0xcb, 0x16 });
        gbc.writeMem(0xf57a, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf33);
        EXPECT(gbc.pc(), 0x300b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf57a), 0xbe);
        // CB 16 0182
        gbc.setState(0xe85, 0x1c65, 0x1d0, 0xce04, 0x357, 0xfd24, 0x1, 0x1);
        gbc.writeMem(0xe85, { 0xcb, 0x16 });
        gbc.writeMem(0xfd24, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1c65);
        EXPECT(gbc.pc(), 0xe87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfd24), 0x57);
        // CB 16 0183
        gbc.setState(0x2519, 0xf22d, 0xe900, 0x6050, 0xf764, 0x9f3d, 0x1, 0x1);
        gbc.writeMem(0x2519, { 0xcb, 0x16 });
        gbc.writeMem(0x9f3d, { 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf22d);
        EXPECT(gbc.pc(), 0x251b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f3d), 0xc4);
        // CB 16 0186
        gbc.setState(0x3152, 0xf0f5, 0x6120, 0x728c, 0x7d56, 0xe3bf, 0x1, 0x0);
        gbc.writeMem(0x3152, { 0xcb, 0x16 });
        gbc.writeMem(0xe3bf, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf0f5);
        EXPECT(gbc.pc(), 0x3154);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3bf), 0x0);
        // CB 16 0187
        gbc.setState(0xcd30, 0x62bb, 0x3b80, 0x4081, 0xb738, 0x87a7, 0x0, 0x0);
        gbc.writeMem(0x87a7, { 0x6a });
        gbc.writeMem(0xcd30, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x62bb);
        EXPECT(gbc.pc(), 0xcd32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87a7), 0xd4);
        EXPECT(gbc.readMem(0xcd30), 0xcb);
        EXPECT(gbc.readMem(0xcd31), 0x16);
        // CB 16 0189
        gbc.setState(0xb7a9, 0xe774, 0x36f0, 0xa7e8, 0xf282, 0xa7f5, 0x0, 0x1);
        gbc.writeMem(0xa7f5, { 0x7f });
        gbc.writeMem(0xb7a9, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xe774);
        EXPECT(gbc.pc(), 0xb7ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7f5), 0xff);
        EXPECT(gbc.readMem(0xb7a9), 0xcb);
        EXPECT(gbc.readMem(0xb7aa), 0x16);
        // CB 16 018A
        gbc.setState(0x96c3, 0x1a7d, 0x3be0, 0xe04a, 0xf3b2, 0xbb67, 0x0, 0x1);
        gbc.writeMem(0x96c3, { 0xcb, 0x16 });
        gbc.writeMem(0xbb67, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x1a7d);
        EXPECT(gbc.pc(), 0x96c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96c3), 0xcb);
        EXPECT(gbc.readMem(0x96c4), 0x16);
        EXPECT(gbc.readMem(0xbb67), 0x0);
        // CB 16 018B
        gbc.setState(0x8122, 0x3d77, 0xe8e0, 0x678f, 0xde50, 0xf077, 0x1, 0x0);
        gbc.writeMem(0x8122, { 0xcb, 0x16 });
        gbc.writeMem(0xf077, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3d77);
        EXPECT(gbc.pc(), 0x8124);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8122), 0xcb);
        EXPECT(gbc.readMem(0x8123), 0x16);
        EXPECT(gbc.readMem(0xf077), 0x84);
        // CB 16 018D
        gbc.setState(0x66d4, 0x9da8, 0x8c70, 0x9172, 0x1b4b, 0xf9c0, 0x0, 0x1);
        gbc.writeMem(0x66d4, { 0xcb, 0x16 });
        gbc.writeMem(0xf9c0, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9da8);
        EXPECT(gbc.pc(), 0x66d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf9c0), 0xe3);
        // CB 16 018E
        gbc.setState(0xbdf3, 0xdfdf, 0xcb60, 0xa5fe, 0x4db6, 0xc9ab, 0x1, 0x1);
        gbc.writeMem(0xbdf3, { 0xcb, 0x16 });
        gbc.writeMem(0xc9ab, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xdfdf);
        EXPECT(gbc.pc(), 0xbdf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdf3), 0xcb);
        EXPECT(gbc.readMem(0xbdf4), 0x16);
        EXPECT(gbc.readMem(0xc9ab), 0x24);
        // CB 16 018F
        gbc.setState(0x1dae, 0x7670, 0xa670, 0x89ff, 0xe1bf, 0x9159, 0x1, 0x1);
        gbc.writeMem(0x1dae, { 0xcb, 0x16 });
        gbc.writeMem(0x9159, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x7670);
        EXPECT(gbc.pc(), 0x1db0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9159), 0x6f);
        // CB 16 0190
        gbc.setState(0x4b20, 0xdc1a, 0x40, 0xec46, 0x8608, 0xc495, 0x1, 0x1);
        gbc.writeMem(0x4b20, { 0xcb, 0x16 });
        gbc.writeMem(0xc495, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xdc1a);
        EXPECT(gbc.pc(), 0x4b22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc495), 0xbe);
        // CB 16 0191
        gbc.setState(0x844b, 0x46b6, 0x5920, 0x96ed, 0x4d41, 0xb7bd, 0x0, 0x1);
        gbc.writeMem(0x844b, { 0xcb, 0x16 });
        gbc.writeMem(0xb7bd, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x46b6);
        EXPECT(gbc.pc(), 0x844d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x844b), 0xcb);
        EXPECT(gbc.readMem(0x844c), 0x16);
        EXPECT(gbc.readMem(0xb7bd), 0xd2);
        // CB 16 0196
        gbc.setState(0xc481, 0xb03e, 0xbd0, 0xa066, 0x7f3, 0xf44a, 0x0, 0x1);
        gbc.writeMem(0xc481, { 0xcb, 0x16 });
        gbc.writeMem(0xf44a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb03e);
        EXPECT(gbc.pc(), 0xc483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc481), 0xcb);
        EXPECT(gbc.readMem(0xc482), 0x16);
        EXPECT(gbc.readMem(0xf44a), 0x95);
        // CB 16 019A
        gbc.setState(0x31bd, 0x87e2, 0xda70, 0x79b0, 0x76e6, 0xd0df, 0x1, 0x0);
        gbc.writeMem(0x31bd, { 0xcb, 0x16 });
        gbc.writeMem(0xd0df, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x87e2);
        EXPECT(gbc.pc(), 0x31bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0df), 0xf9);
        // CB 16 019C
        gbc.setState(0x1ca3, 0x7728, 0xf320, 0x78dd, 0x86d4, 0xa156, 0x1, 0x0);
        gbc.writeMem(0x1ca3, { 0xcb, 0x16 });
        gbc.writeMem(0xa156, { 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x7728);
        EXPECT(gbc.pc(), 0x1ca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa156), 0x44);
        // CB 16 019E
        gbc.setState(0x454f, 0x7d42, 0xda10, 0x3566, 0xbe0a, 0xf0cc, 0x1, 0x1);
        gbc.writeMem(0x454f, { 0xcb, 0x16 });
        gbc.writeMem(0xf0cc, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7d42);
        EXPECT(gbc.pc(), 0x4551);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf0cc), 0x97);
        // CB 16 019F
        gbc.setState(0xace7, 0x51da, 0x7b40, 0x4332, 0x3a24, 0xe750, 0x0, 0x0);
        gbc.writeMem(0xace7, { 0xcb, 0x16 });
        gbc.writeMem(0xe750, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x51da);
        EXPECT(gbc.pc(), 0xace9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xace7), 0xcb);
        EXPECT(gbc.readMem(0xace8), 0x16);
        EXPECT(gbc.readMem(0xe750), 0x8c);
        // CB 16 01A0
        gbc.setState(0xc6ef, 0x3bc5, 0x3ea0, 0xce87, 0xac40, 0xdf33, 0x1, 0x1);
        gbc.writeMem(0xc6ef, { 0xcb, 0x16 });
        gbc.writeMem(0xdf33, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3bc5);
        EXPECT(gbc.pc(), 0xc6f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6ef), 0xcb);
        EXPECT(gbc.readMem(0xc6f0), 0x16);
        EXPECT(gbc.readMem(0xdf33), 0xc);
        // CB 16 01A1
        gbc.setState(0xd0ea, 0x343b, 0xb1e0, 0xb8fd, 0xb55d, 0xe529, 0x1, 0x0);
        gbc.writeMem(0xd0ea, { 0xcb, 0x16 });
        gbc.writeMem(0xe529, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x343b);
        EXPECT(gbc.pc(), 0xd0ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0ea), 0xcb);
        EXPECT(gbc.readMem(0xd0eb), 0x16);
        EXPECT(gbc.readMem(0xe529), 0x70);
        // CB 16 01A4
        gbc.setState(0x8f6c, 0x100f, 0xc980, 0x3ca0, 0x4650, 0x8c95, 0x0, 0x0);
        gbc.writeMem(0x8c95, { 0x1d });
        gbc.writeMem(0x8f6c, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x100f);
        EXPECT(gbc.pc(), 0x8f6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c95), 0x3a);
        EXPECT(gbc.readMem(0x8f6c), 0xcb);
        EXPECT(gbc.readMem(0x8f6d), 0x16);
        // CB 16 01A5
        gbc.setState(0xadbe, 0xc26, 0xad0, 0x7702, 0x53b9, 0xfcd8, 0x1, 0x0);
        gbc.writeMem(0xadbe, { 0xcb, 0x16 });
        gbc.writeMem(0xfcd8, { 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc26);
        EXPECT(gbc.pc(), 0xadc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadbe), 0xcb);
        EXPECT(gbc.readMem(0xadbf), 0x16);
        EXPECT(gbc.readMem(0xfcd8), 0x13);
        // CB 16 01A6
        gbc.setState(0x75d3, 0xf41e, 0x6670, 0x2e05, 0xfa33, 0xd35f, 0x1, 0x1);
        gbc.writeMem(0x75d3, { 0xcb, 0x16 });
        gbc.writeMem(0xd35f, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf41e);
        EXPECT(gbc.pc(), 0x75d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd35f), 0x83);
        // CB 16 01A9
        gbc.setState(0x27ea, 0x77c2, 0x6f10, 0xfd60, 0x543e, 0x928e, 0x1, 0x0);
        gbc.writeMem(0x27ea, { 0xcb, 0x16 });
        gbc.writeMem(0x928e, { 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x77c2);
        EXPECT(gbc.pc(), 0x27ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x928e), 0x9);
        // CB 16 01AB
        gbc.setState(0x1fcd, 0x8a7, 0xfbd0, 0x708c, 0x7bca, 0xade8, 0x0, 0x0);
        gbc.writeMem(0x1fcd, { 0xcb, 0x16 });
        gbc.writeMem(0xade8, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x8a7);
        EXPECT(gbc.pc(), 0x1fcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xade8), 0xad);
        // CB 16 01AC
        gbc.setState(0xe617, 0x2a7d, 0xe0d0, 0x7d33, 0x9dd3, 0xb270, 0x1, 0x1);
        gbc.writeMem(0xb270, { 0x85 });
        gbc.writeMem(0xe617, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2a7d);
        EXPECT(gbc.pc(), 0xe619);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb270), 0xb);
        EXPECT(gbc.readMem(0xe617), 0xcb);
        EXPECT(gbc.readMem(0xe618), 0x16);
        // CB 16 01AD
        gbc.setState(0x7921, 0xa044, 0xf550, 0xca0e, 0x5573, 0xdb3a, 0x1, 0x1);
        gbc.writeMem(0x7921, { 0xcb, 0x16 });
        gbc.writeMem(0xdb3a, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xa044);
        EXPECT(gbc.pc(), 0x7923);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb3a), 0x49);
        // CB 16 01AE
        gbc.setState(0x316, 0x4d49, 0x4550, 0xf197, 0xe85d, 0xadee, 0x1, 0x0);
        gbc.writeMem(0x316, { 0xcb, 0x16 });
        gbc.writeMem(0xadee, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4d49);
        EXPECT(gbc.pc(), 0x318);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadee), 0x15);
        // CB 16 01B2
        gbc.setState(0x7451, 0x5ed5, 0x8810, 0xedf7, 0x5ef8, 0xafaa, 0x1, 0x0);
        gbc.writeMem(0x7451, { 0xcb, 0x16 });
        gbc.writeMem(0xafaa, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5ed5);
        EXPECT(gbc.pc(), 0x7453);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafaa), 0x45);
        // CB 16 01B4
        gbc.setState(0x8087, 0x8b6a, 0xe9c0, 0x354c, 0x573b, 0xcb67, 0x0, 0x1);
        gbc.writeMem(0x8087, { 0xcb, 0x16 });
        gbc.writeMem(0xcb67, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x8b6a);
        EXPECT(gbc.pc(), 0x8089);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8087), 0xcb);
        EXPECT(gbc.readMem(0x8088), 0x16);
        EXPECT(gbc.readMem(0xcb67), 0x2c);
        // CB 16 01B7
        gbc.setState(0x2352, 0xe02e, 0x5540, 0x4009, 0xd447, 0xf734, 0x1, 0x1);
        gbc.writeMem(0x2352, { 0xcb, 0x16 });
        gbc.writeMem(0xf734, { 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe02e);
        EXPECT(gbc.pc(), 0x2354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf734), 0x38);
        // CB 16 01BB
        gbc.setState(0xb704, 0x9e77, 0xd010, 0x9e5f, 0x1670, 0xaa08, 0x1, 0x1);
        gbc.writeMem(0xaa08, { 0xa4 });
        gbc.writeMem(0xb704, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x9e77);
        EXPECT(gbc.pc(), 0xb706);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa08), 0x49);
        EXPECT(gbc.readMem(0xb704), 0xcb);
        EXPECT(gbc.readMem(0xb705), 0x16);
        // CB 16 01BC
        gbc.setState(0x5d68, 0xec80, 0xbd00, 0x3bd5, 0x9217, 0xd606, 0x1, 0x0);
        gbc.writeMem(0x5d68, { 0xcb, 0x16 });
        gbc.writeMem(0xd606, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xec80);
        EXPECT(gbc.pc(), 0x5d6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd606), 0xe0);
        // CB 16 01BD
        gbc.setState(0x21b, 0x7c4b, 0x5520, 0xb235, 0x7d78, 0xf874, 0x0, 0x0);
        gbc.writeMem(0x21b, { 0xcb, 0x16 });
        gbc.writeMem(0xf874, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7c4b);
        EXPECT(gbc.pc(), 0x21d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf874), 0x88);
        // CB 16 01C0
        gbc.setState(0x9d29, 0x363b, 0x72f0, 0x9a9, 0x3a3f, 0xcb16, 0x1, 0x0);
        gbc.writeMem(0x9d29, { 0xcb, 0x16 });
        gbc.writeMem(0xcb16, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x363b);
        EXPECT(gbc.pc(), 0x9d2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d29), 0xcb);
        EXPECT(gbc.readMem(0x9d2a), 0x16);
        EXPECT(gbc.readMem(0xcb16), 0x65);
        // CB 16 01C1
        gbc.setState(0xd7b8, 0x2316, 0xf040, 0x3066, 0x693e, 0x8d36, 0x0, 0x0);
        gbc.writeMem(0x8d36, { 0xb6 });
        gbc.writeMem(0xd7b8, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2316);
        EXPECT(gbc.pc(), 0xd7ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d36), 0x6c);
        EXPECT(gbc.readMem(0xd7b8), 0xcb);
        EXPECT(gbc.readMem(0xd7b9), 0x16);
        // CB 16 01C3
        gbc.setState(0xdb08, 0xa9c6, 0xbaa0, 0x764e, 0xce89, 0xb318, 0x0, 0x0);
        gbc.writeMem(0xb318, { 0x4f });
        gbc.writeMem(0xdb08, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa9c6);
        EXPECT(gbc.pc(), 0xdb0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb318), 0x9e);
        EXPECT(gbc.readMem(0xdb08), 0xcb);
        EXPECT(gbc.readMem(0xdb09), 0x16);
        // CB 16 01C5
        gbc.setState(0x5784, 0x3ba9, 0xd280, 0x6003, 0xf3c, 0xbe21, 0x0, 0x0);
        gbc.writeMem(0x5784, { 0xcb, 0x16 });
        gbc.writeMem(0xbe21, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3ba9);
        EXPECT(gbc.pc(), 0x5786);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe21), 0x10);
        // CB 16 01C6
        gbc.setState(0x3b15, 0x3189, 0x6a80, 0x1015, 0xa3d1, 0x83da, 0x0, 0x0);
        gbc.writeMem(0x3b15, { 0xcb, 0x16 });
        gbc.writeMem(0x83da, { 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x3189);
        EXPECT(gbc.pc(), 0x3b17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83da), 0x40);
        // CB 16 01C7
        gbc.setState(0xd722, 0x3403, 0xc470, 0xd3ec, 0xc152, 0xfa88, 0x0, 0x1);
        gbc.writeMem(0xd722, { 0xcb, 0x16 });
        gbc.writeMem(0xfa88, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x3403);
        EXPECT(gbc.pc(), 0xd724);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd722), 0xcb);
        EXPECT(gbc.readMem(0xd723), 0x16);
        EXPECT(gbc.readMem(0xfa88), 0xed);
        // CB 16 01CA
        gbc.setState(0xab35, 0x213e, 0x5ab0, 0xa178, 0xbe51, 0xaa1c, 0x1, 0x0);
        gbc.writeMem(0xaa1c, { 0x6b });
        gbc.writeMem(0xab35, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x213e);
        EXPECT(gbc.pc(), 0xab37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa1c), 0xd7);
        EXPECT(gbc.readMem(0xab35), 0xcb);
        EXPECT(gbc.readMem(0xab36), 0x16);
        // CB 16 01CB
        gbc.setState(0xb1dc, 0x8108, 0x39e0, 0xb407, 0xf7b9, 0x882d, 0x0, 0x1);
        gbc.writeMem(0x882d, { 0x25 });
        gbc.writeMem(0xb1dc, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8108);
        EXPECT(gbc.pc(), 0xb1de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x882d), 0x4a);
        EXPECT(gbc.readMem(0xb1dc), 0xcb);
        EXPECT(gbc.readMem(0xb1dd), 0x16);
        // CB 16 01CE
        gbc.setState(0x47a4, 0x7e7, 0xce40, 0xebe3, 0xaff7, 0xc14a, 0x1, 0x1);
        gbc.writeMem(0x47a4, { 0xcb, 0x16 });
        gbc.writeMem(0xc14a, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7e7);
        EXPECT(gbc.pc(), 0x47a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc14a), 0x82);
        // CB 16 01CF
        gbc.setState(0x701b, 0xab7b, 0xa7f0, 0x773a, 0x6dc6, 0xaaab, 0x1, 0x1);
        gbc.writeMem(0x701b, { 0xcb, 0x16 });
        gbc.writeMem(0xaaab, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xab7b);
        EXPECT(gbc.pc(), 0x701d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaab), 0x8b);
        // CB 16 01D5
        gbc.setState(0xc286, 0x8d64, 0x4b70, 0x18e4, 0x806a, 0x8ec8, 0x0, 0x0);
        gbc.writeMem(0x8ec8, { 0x7a });
        gbc.writeMem(0xc286, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8d64);
        EXPECT(gbc.pc(), 0xc288);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ec8), 0xf5);
        EXPECT(gbc.readMem(0xc286), 0xcb);
        EXPECT(gbc.readMem(0xc287), 0x16);
        // CB 16 01D7
        gbc.setState(0xa28e, 0xfe46, 0xd0c0, 0x4fe0, 0xb1fc, 0xd23e, 0x1, 0x1);
        gbc.writeMem(0xa28e, { 0xcb, 0x16 });
        gbc.writeMem(0xd23e, { 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xfe46);
        EXPECT(gbc.pc(), 0xa290);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa28e), 0xcb);
        EXPECT(gbc.readMem(0xa28f), 0x16);
        EXPECT(gbc.readMem(0xd23e), 0x30);
        // CB 16 01D8
        gbc.setState(0xbbc, 0xef78, 0xbfa0, 0x682d, 0x1569, 0xe63d, 0x0, 0x0);
        gbc.writeMem(0xbbc, { 0xcb, 0x16 });
        gbc.writeMem(0xe63d, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xef78);
        EXPECT(gbc.pc(), 0xbbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe63d), 0x64);
        // CB 16 01D9
        gbc.setState(0xa99d, 0x86ef, 0x20c0, 0x683b, 0xc2ef, 0xb618, 0x1, 0x1);
        gbc.writeMem(0xa99d, { 0xcb, 0x16 });
        gbc.writeMem(0xb618, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x86ef);
        EXPECT(gbc.pc(), 0xa99f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa99d), 0xcb);
        EXPECT(gbc.readMem(0xa99e), 0x16);
        EXPECT(gbc.readMem(0xb618), 0x10);
        // CB 16 01DE
        gbc.setState(0xb6a3, 0x5879, 0x23b0, 0xa6bf, 0x7a82, 0xfa99, 0x1, 0x0);
        gbc.writeMem(0xb6a3, { 0xcb, 0x16 });
        gbc.writeMem(0xfa99, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x5879);
        EXPECT(gbc.pc(), 0xb6a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6a3), 0xcb);
        EXPECT(gbc.readMem(0xb6a4), 0x16);
        EXPECT(gbc.readMem(0xfa99), 0x75);
        // CB 16 01DF
        gbc.setState(0xeef6, 0x68d8, 0x7a30, 0xccab, 0x773c, 0x8079, 0x1, 0x0);
        gbc.writeMem(0x8079, { 0xf8 });
        gbc.writeMem(0xeef6, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x68d8);
        EXPECT(gbc.pc(), 0xeef8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8079), 0xf1);
        EXPECT(gbc.readMem(0xeef6), 0xcb);
        EXPECT(gbc.readMem(0xeef7), 0x16);
        // CB 16 01E0
        gbc.setState(0x5215, 0xfea3, 0x55f0, 0x3454, 0xf03a, 0xeeea, 0x0, 0x0);
        gbc.writeMem(0x5215, { 0xcb, 0x16 });
        gbc.writeMem(0xeeea, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xfea3);
        EXPECT(gbc.pc(), 0x5217);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeea), 0xa5);
        // CB 16 01E1
        gbc.setState(0x7c6f, 0xf528, 0xbba0, 0xa04c, 0x13c2, 0xbdac, 0x1, 0x0);
        gbc.writeMem(0x7c6f, { 0xcb, 0x16 });
        gbc.writeMem(0xbdac, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf528);
        EXPECT(gbc.pc(), 0x7c71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdac), 0xe0);
        // CB 16 01E4
        gbc.setState(0x8f75, 0xc31f, 0x7170, 0xbdd5, 0xa646, 0xc548, 0x0, 0x1);
        gbc.writeMem(0x8f75, { 0xcb, 0x16 });
        gbc.writeMem(0xc548, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xc31f);
        EXPECT(gbc.pc(), 0x8f77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f75), 0xcb);
        EXPECT(gbc.readMem(0x8f76), 0x16);
        EXPECT(gbc.readMem(0xc548), 0xbd);
        // CB 16 01EC
        gbc.setState(0x39a6, 0x6822, 0x4b80, 0x4c87, 0x9e14, 0xc025, 0x1, 0x0);
        gbc.writeMem(0x39a6, { 0xcb, 0x16 });
        gbc.writeMem(0xc025, { 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x6822);
        EXPECT(gbc.pc(), 0x39a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc025), 0x6a);
        // CB 16 01EE
        gbc.setState(0x9431, 0xaed8, 0xa3c0, 0xb8ac, 0x3782, 0xb2f3, 0x0, 0x0);
        gbc.writeMem(0x9431, { 0xcb, 0x16 });
        gbc.writeMem(0xb2f3, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xaed8);
        EXPECT(gbc.pc(), 0x9433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9431), 0xcb);
        EXPECT(gbc.readMem(0x9432), 0x16);
        EXPECT(gbc.readMem(0xb2f3), 0x7c);
        // CB 16 01EF
        gbc.setState(0x4b2e, 0x61c8, 0xe030, 0xadbb, 0x21ac, 0xe998, 0x1, 0x0);
        gbc.writeMem(0x4b2e, { 0xcb, 0x16 });
        gbc.writeMem(0xe998, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x61c8);
        EXPECT(gbc.pc(), 0x4b30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe998), 0xe5);
        // CB 16 01F0
        gbc.setState(0x650a, 0xae3f, 0x4a00, 0xbccb, 0xc2e5, 0xd8ca, 0x1, 0x0);
        gbc.writeMem(0x650a, { 0xcb, 0x16 });
        gbc.writeMem(0xd8ca, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xae3f);
        EXPECT(gbc.pc(), 0x650c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8ca), 0xde);
        // CB 16 01F1
        gbc.setState(0x3f55, 0xb192, 0xe6e0, 0xc8a8, 0xaf1e, 0x984e, 0x0, 0x1);
        gbc.writeMem(0x3f55, { 0xcb, 0x16 });
        gbc.writeMem(0x984e, { 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xb192);
        EXPECT(gbc.pc(), 0x3f57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x984e), 0x4e);
        // CB 16 01F5
        gbc.setState(0x8eae, 0xf135, 0xc640, 0x6d6d, 0xb97b, 0xcd6b, 0x0, 0x1);
        gbc.writeMem(0x8eae, { 0xcb, 0x16 });
        gbc.writeMem(0xcd6b, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf135);
        EXPECT(gbc.pc(), 0x8eb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eae), 0xcb);
        EXPECT(gbc.readMem(0x8eaf), 0x16);
        EXPECT(gbc.readMem(0xcd6b), 0x80);
        // CB 16 01FB
        gbc.setState(0xbb77, 0x3a4f, 0x9160, 0x1e91, 0x4e2d, 0x935a, 0x0, 0x0);
        gbc.writeMem(0x935a, { 0x6f });
        gbc.writeMem(0xbb77, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3a4f);
        EXPECT(gbc.pc(), 0xbb79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x935a), 0xde);
        EXPECT(gbc.readMem(0xbb77), 0xcb);
        EXPECT(gbc.readMem(0xbb78), 0x16);
        // CB 16 01FC
        gbc.setState(0x51e6, 0x56a2, 0x85a0, 0x41ea, 0xa5e5, 0xbc5e, 0x0, 0x1);
        gbc.writeMem(0x51e6, { 0xcb, 0x16 });
        gbc.writeMem(0xbc5e, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x56a2);
        EXPECT(gbc.pc(), 0x51e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc5e), 0x16);
        // CB 16 01FD
        gbc.setState(0x221, 0x17b4, 0x5a80, 0x5267, 0xffc0, 0x9a76, 0x0, 0x0);
        gbc.writeMem(0x221, { 0xcb, 0x16 });
        gbc.writeMem(0x9a76, { 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x17b4);
        EXPECT(gbc.pc(), 0x223);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a76), 0x46);
        // CB 16 0201
        gbc.setState(0x9980, 0x9ced, 0xf5f0, 0x7110, 0xb88, 0xf646, 0x0, 0x0);
        gbc.writeMem(0x9980, { 0xcb, 0x16 });
        gbc.writeMem(0xf646, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9ced);
        EXPECT(gbc.pc(), 0x9982);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9980), 0xcb);
        EXPECT(gbc.readMem(0x9981), 0x16);
        EXPECT(gbc.readMem(0xf646), 0xad);
        // CB 16 0203
        gbc.setState(0x3811, 0x2c47, 0x60a0, 0x1f1d, 0xc112, 0xe10a, 0x0, 0x1);
        gbc.writeMem(0x3811, { 0xcb, 0x16 });
        gbc.writeMem(0xe10a, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x2c47);
        EXPECT(gbc.pc(), 0x3813);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe10a), 0xee);
        // CB 16 0205
        gbc.setState(0xc305, 0x9d4c, 0x8430, 0xf2ae, 0x211d, 0xff42, 0x0, 0x0);
        gbc.writeMem(0xc305, { 0xcb, 0x16 });
        gbc.writeMem(0xff42, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x9d4c);
        EXPECT(gbc.pc(), 0xc307);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc305), 0xcb);
        EXPECT(gbc.readMem(0xc306), 0x16);
        EXPECT(gbc.readMem(0xff42), 0xa1);
        // CB 16 0206
        gbc.setState(0xec03, 0x9ddd, 0xeb20, 0x1d23, 0x252f, 0xa9f0, 0x0, 0x0);
        gbc.writeMem(0xa9f0, { 0x3f });
        gbc.writeMem(0xec03, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9ddd);
        EXPECT(gbc.pc(), 0xec05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9f0), 0x7e);
        EXPECT(gbc.readMem(0xec03), 0xcb);
        EXPECT(gbc.readMem(0xec04), 0x16);
        // CB 16 0207
        gbc.setState(0xc58e, 0x40b9, 0x7b60, 0xf5ad, 0xce86, 0xc5fe, 0x1, 0x0);
        gbc.writeMem(0xc58e, { 0xcb, 0x16 });
        gbc.writeMem(0xc5fe, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x40b9);
        EXPECT(gbc.pc(), 0xc590);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc58e), 0xcb);
        EXPECT(gbc.readMem(0xc58f), 0x16);
        EXPECT(gbc.readMem(0xc5fe), 0x4c);
        // CB 16 020B
        gbc.setState(0xcc89, 0x5737, 0x9a80, 0xbdae, 0xd50, 0xd2d9, 0x1, 0x0);
        gbc.writeMem(0xcc89, { 0xcb, 0x16 });
        gbc.writeMem(0xd2d9, { 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x5737);
        EXPECT(gbc.pc(), 0xcc8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc89), 0xcb);
        EXPECT(gbc.readMem(0xcc8a), 0x16);
        EXPECT(gbc.readMem(0xd2d9), 0x6a);
        // CB 16 020E
        gbc.setState(0xef5d, 0xff49, 0xd5f0, 0x3586, 0xbee1, 0xbfd5, 0x1, 0x1);
        gbc.writeMem(0xbfd5, { 0x32 });
        gbc.writeMem(0xef5d, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xff49);
        EXPECT(gbc.pc(), 0xef5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfd5), 0x65);
        EXPECT(gbc.readMem(0xef5d), 0xcb);
        EXPECT(gbc.readMem(0xef5e), 0x16);
        // CB 16 0211
        gbc.setState(0x178b, 0xf1fa, 0xbc00, 0x8bd0, 0xcb07, 0xd2a1, 0x1, 0x1);
        gbc.writeMem(0x178b, { 0xcb, 0x16 });
        gbc.writeMem(0xd2a1, { 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf1fa);
        EXPECT(gbc.pc(), 0x178d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2a1), 0x8e);
        // CB 16 0213
        gbc.setState(0xe306, 0x7733, 0x3450, 0xac4c, 0x7fa4, 0xd487, 0x1, 0x1);
        gbc.writeMem(0xd487, { 0x4e });
        gbc.writeMem(0xe306, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7733);
        EXPECT(gbc.pc(), 0xe308);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd487), 0x9d);
        EXPECT(gbc.readMem(0xe306), 0xcb);
        EXPECT(gbc.readMem(0xe307), 0x16);
        // CB 16 0214
        gbc.setState(0xc38, 0xb1cb, 0xf8f0, 0x40cd, 0x5199, 0xe50f, 0x0, 0x1);
        gbc.writeMem(0xc38, { 0xcb, 0x16 });
        gbc.writeMem(0xe50f, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb1cb);
        EXPECT(gbc.pc(), 0xc3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe50f), 0x7d);
        // CB 16 0215
        gbc.setState(0xde88, 0xd955, 0x90c0, 0xa22, 0x3c07, 0xd79a, 0x0, 0x0);
        gbc.writeMem(0xd79a, { 0x8f });
        gbc.writeMem(0xde88, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd955);
        EXPECT(gbc.pc(), 0xde8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd79a), 0x1e);
        EXPECT(gbc.readMem(0xde88), 0xcb);
        EXPECT(gbc.readMem(0xde89), 0x16);
        // CB 16 0217
        gbc.setState(0x1110, 0xa2f7, 0xbc60, 0x145d, 0x6285, 0x8591, 0x1, 0x1);
        gbc.writeMem(0x1110, { 0xcb, 0x16 });
        gbc.writeMem(0x8591, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xa2f7);
        EXPECT(gbc.pc(), 0x1112);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8591), 0x32);
        // CB 16 021C
        gbc.setState(0xa53e, 0x7596, 0x6d10, 0xb6b8, 0x94c9, 0x9c0f, 0x0, 0x0);
        gbc.writeMem(0x9c0f, { 0x64 });
        gbc.writeMem(0xa53e, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7596);
        EXPECT(gbc.pc(), 0xa540);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c0f), 0xc9);
        EXPECT(gbc.readMem(0xa53e), 0xcb);
        EXPECT(gbc.readMem(0xa53f), 0x16);
        // CB 16 021D
        gbc.setState(0x48dc, 0xb4a8, 0x3a20, 0x3492, 0x535, 0xbe20, 0x1, 0x0);
        gbc.writeMem(0x48dc, { 0xcb, 0x16 });
        gbc.writeMem(0xbe20, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb4a8);
        EXPECT(gbc.pc(), 0x48de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe20), 0x58);
        // CB 16 021E
        gbc.setState(0x58ec, 0x1a86, 0xda30, 0x907a, 0x6805, 0xd4c4, 0x0, 0x0);
        gbc.writeMem(0x58ec, { 0xcb, 0x16 });
        gbc.writeMem(0xd4c4, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1a86);
        EXPECT(gbc.pc(), 0x58ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4c4), 0x77);
        // CB 16 021F
        gbc.setState(0x6a83, 0xea2c, 0x2450, 0x3595, 0x4f8e, 0x8f76, 0x0, 0x1);
        gbc.writeMem(0x6a83, { 0xcb, 0x16 });
        gbc.writeMem(0x8f76, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xea2c);
        EXPECT(gbc.pc(), 0x6a85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f76), 0xab);
        // CB 16 0220
        gbc.setState(0xb25d, 0xdb0, 0x5da0, 0x9399, 0x8031, 0xf02e, 0x1, 0x1);
        gbc.writeMem(0xb25d, { 0xcb, 0x16 });
        gbc.writeMem(0xf02e, { 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xdb0);
        EXPECT(gbc.pc(), 0xb25f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb25d), 0xcb);
        EXPECT(gbc.readMem(0xb25e), 0x16);
        EXPECT(gbc.readMem(0xf02e), 0xa6);
        // CB 16 0221
        gbc.setState(0x7cd8, 0x4914, 0x62f0, 0xa8ec, 0xebb6, 0xc581, 0x1, 0x1);
        gbc.writeMem(0x7cd8, { 0xcb, 0x16 });
        gbc.writeMem(0xc581, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4914);
        EXPECT(gbc.pc(), 0x7cda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc581), 0x4b);
        // CB 16 0222
        gbc.setState(0xeb1c, 0xc8b0, 0x8290, 0xd4a, 0xb02c, 0xe5e7, 0x1, 0x1);
        gbc.writeMem(0xe5e7, { 0x7d });
        gbc.writeMem(0xeb1c, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc8b0);
        EXPECT(gbc.pc(), 0xeb1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5e7), 0xfb);
        EXPECT(gbc.readMem(0xeb1c), 0xcb);
        EXPECT(gbc.readMem(0xeb1d), 0x16);
        // CB 16 0224
        gbc.setState(0x81ba, 0x69cc, 0x5950, 0x1d57, 0xd134, 0xf186, 0x1, 0x0);
        gbc.writeMem(0x81ba, { 0xcb, 0x16 });
        gbc.writeMem(0xf186, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x69cc);
        EXPECT(gbc.pc(), 0x81bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81ba), 0xcb);
        EXPECT(gbc.readMem(0x81bb), 0x16);
        EXPECT(gbc.readMem(0xf186), 0x6f);
        // CB 16 0225
        gbc.setState(0x8ee1, 0x15bd, 0x5f00, 0xfa72, 0x38fc, 0xb851, 0x0, 0x0);
        gbc.writeMem(0x8ee1, { 0xcb, 0x16 });
        gbc.writeMem(0xb851, { 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x15bd);
        EXPECT(gbc.pc(), 0x8ee3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ee1), 0xcb);
        EXPECT(gbc.readMem(0x8ee2), 0x16);
        EXPECT(gbc.readMem(0xb851), 0xc2);
        // CB 16 0228
        gbc.setState(0xc69, 0xe456, 0xb490, 0xdb86, 0x5678, 0xe45a, 0x1, 0x1);
        gbc.writeMem(0xc69, { 0xcb, 0x16 });
        gbc.writeMem(0xe45a, { 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xe456);
        EXPECT(gbc.pc(), 0xc6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe45a), 0x13);
        // CB 16 022A
        gbc.setState(0x983b, 0x70fc, 0x68d0, 0xb457, 0xb808, 0xacb4, 0x1, 0x0);
        gbc.writeMem(0x983b, { 0xcb, 0x16 });
        gbc.writeMem(0xacb4, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x70fc);
        EXPECT(gbc.pc(), 0x983d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x983b), 0xcb);
        EXPECT(gbc.readMem(0x983c), 0x16);
        EXPECT(gbc.readMem(0xacb4), 0x47);
        // CB 16 022B
        gbc.setState(0xb2ff, 0xf5f, 0xf1e0, 0xd39f, 0xa560, 0xb7db, 0x0, 0x1);
        gbc.writeMem(0xb2ff, { 0xcb, 0x16 });
        gbc.writeMem(0xb7db, { 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf5f);
        EXPECT(gbc.pc(), 0xb301);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2ff), 0xcb);
        EXPECT(gbc.readMem(0xb300), 0x16);
        EXPECT(gbc.readMem(0xb7db), 0x36);
        // CB 16 022D
        gbc.setState(0xe977, 0xa9e6, 0xc1c0, 0xe7c1, 0xf7f9, 0xdebb, 0x1, 0x0);
        gbc.writeMem(0xdebb, { 0xf5 });
        gbc.writeMem(0xe977, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xa9e6);
        EXPECT(gbc.pc(), 0xe979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdebb), 0xea);
        EXPECT(gbc.readMem(0xe977), 0xcb);
        EXPECT(gbc.readMem(0xe978), 0x16);
        // CB 16 0230
        gbc.setState(0x5b06, 0x5776, 0x1c20, 0x37b3, 0x8b2e, 0xcedc, 0x0, 0x0);
        gbc.writeMem(0x5b06, { 0xcb, 0x16 });
        gbc.writeMem(0xcedc, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5776);
        EXPECT(gbc.pc(), 0x5b08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcedc), 0x84);
        // CB 16 0232
        gbc.setState(0x7337, 0x2529, 0x34e0, 0x188f, 0xf14b, 0x92c6, 0x1, 0x0);
        gbc.writeMem(0x7337, { 0xcb, 0x16 });
        gbc.writeMem(0x92c6, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x2529);
        EXPECT(gbc.pc(), 0x7339);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92c6), 0x88);
        // CB 16 0233
        gbc.setState(0x6930, 0xd841, 0x97f0, 0x1de4, 0x569a, 0x82e8, 0x1, 0x1);
        gbc.writeMem(0x6930, { 0xcb, 0x16 });
        gbc.writeMem(0x82e8, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd841);
        EXPECT(gbc.pc(), 0x6932);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e8), 0xe9);
        // CB 16 0235
        gbc.setState(0x682d, 0x8123, 0x1780, 0xf676, 0x1ca9, 0x9dc8, 0x1, 0x0);
        gbc.writeMem(0x682d, { 0xcb, 0x16 });
        gbc.writeMem(0x9dc8, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8123);
        EXPECT(gbc.pc(), 0x682f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dc8), 0x54);
        // CB 16 0237
        gbc.setState(0x5277, 0x4fd1, 0xdf40, 0x792f, 0x4205, 0xc3c5, 0x1, 0x0);
        gbc.writeMem(0x5277, { 0xcb, 0x16 });
        gbc.writeMem(0xc3c5, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4fd1);
        EXPECT(gbc.pc(), 0x5279);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3c5), 0xc0);
        // CB 16 0239
        gbc.setState(0x9f00, 0x3e3c, 0xb150, 0xaff0, 0xcce2, 0x83e3, 0x0, 0x1);
        gbc.writeMem(0x83e3, { 0x6 });
        gbc.writeMem(0x9f00, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x3e3c);
        EXPECT(gbc.pc(), 0x9f02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e3), 0xd);
        EXPECT(gbc.readMem(0x9f00), 0xcb);
        EXPECT(gbc.readMem(0x9f01), 0x16);
        // CB 16 023A
        gbc.setState(0xdfca, 0x1b0a, 0x21e0, 0xbda4, 0x6027, 0xad64, 0x1, 0x1);
        gbc.writeMem(0xad64, { 0x7 });
        gbc.writeMem(0xdfca, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x1b0a);
        EXPECT(gbc.pc(), 0xdfcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad64), 0xe);
        EXPECT(gbc.readMem(0xdfca), 0xcb);
        EXPECT(gbc.readMem(0xdfcb), 0x16);
        // CB 16 023B
        gbc.setState(0x9e6, 0xd3c2, 0x2b70, 0xc6a0, 0xfaaf, 0xe46e, 0x1, 0x1);
        gbc.writeMem(0x9e6, { 0xcb, 0x16 });
        gbc.writeMem(0xe46e, { 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xd3c2);
        EXPECT(gbc.pc(), 0x9e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe46e), 0x51);
        // CB 16 023C
        gbc.setState(0x1825, 0x786e, 0x8860, 0xc5f4, 0x5514, 0xda1c, 0x1, 0x1);
        gbc.writeMem(0x1825, { 0xcb, 0x16 });
        gbc.writeMem(0xda1c, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x786e);
        EXPECT(gbc.pc(), 0x1827);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda1c), 0xbe);
        // CB 16 023E
        gbc.setState(0x8050, 0x6dac, 0xda30, 0xed6a, 0x8656, 0xa00a, 0x0, 0x0);
        gbc.writeMem(0x8050, { 0xcb, 0x16 });
        gbc.writeMem(0xa00a, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x6dac);
        EXPECT(gbc.pc(), 0x8052);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8050), 0xcb);
        EXPECT(gbc.readMem(0x8051), 0x16);
        EXPECT(gbc.readMem(0xa00a), 0x6d);
        // CB 16 023F
        gbc.setState(0xdc59, 0x6344, 0xfa60, 0xb73d, 0xecdd, 0xba63, 0x0, 0x1);
        gbc.writeMem(0xba63, { 0xae });
        gbc.writeMem(0xdc59, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6344);
        EXPECT(gbc.pc(), 0xdc5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba63), 0x5c);
        EXPECT(gbc.readMem(0xdc59), 0xcb);
        EXPECT(gbc.readMem(0xdc5a), 0x16);
        // CB 16 0240
        gbc.setState(0x4a65, 0x3caf, 0x9050, 0xb90f, 0x7ebf, 0x9eea, 0x0, 0x1);
        gbc.writeMem(0x4a65, { 0xcb, 0x16 });
        gbc.writeMem(0x9eea, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3caf);
        EXPECT(gbc.pc(), 0x4a67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eea), 0xe5);
        // CB 16 0244
        gbc.setState(0xc4c8, 0xdaac, 0x8dd0, 0x637a, 0x8b15, 0x8052, 0x0, 0x0);
        gbc.writeMem(0x8052, { 0xd });
        gbc.writeMem(0xc4c8, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xdaac);
        EXPECT(gbc.pc(), 0xc4ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8052), 0x1b);
        EXPECT(gbc.readMem(0xc4c8), 0xcb);
        EXPECT(gbc.readMem(0xc4c9), 0x16);
        // CB 16 0245
        gbc.setState(0xd0fa, 0x71ed, 0xd3e0, 0x60ab, 0xed87, 0x837e, 0x0, 0x0);
        gbc.writeMem(0x837e, { 0xa1 });
        gbc.writeMem(0xd0fa, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x71ed);
        EXPECT(gbc.pc(), 0xd0fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x837e), 0x42);
        EXPECT(gbc.readMem(0xd0fa), 0xcb);
        EXPECT(gbc.readMem(0xd0fb), 0x16);
        // CB 16 0246
        gbc.setState(0x50b3, 0xc7a4, 0x1740, 0x55d8, 0xd35c, 0xd6c8, 0x1, 0x1);
        gbc.writeMem(0x50b3, { 0xcb, 0x16 });
        gbc.writeMem(0xd6c8, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc7a4);
        EXPECT(gbc.pc(), 0x50b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6c8), 0xfe);
        // CB 16 0247
        gbc.setState(0x4c29, 0x75b8, 0xef60, 0x8f72, 0xec1c, 0xae35, 0x0, 0x0);
        gbc.writeMem(0x4c29, { 0xcb, 0x16 });
        gbc.writeMem(0xae35, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x75b8);
        EXPECT(gbc.pc(), 0x4c2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae35), 0x0);
        // CB 16 0248
        gbc.setState(0xe14d, 0x3579, 0xca0, 0x9526, 0xcf0b, 0xefe0, 0x1, 0x0);
        gbc.writeMem(0xe14d, { 0xcb, 0x16 });
        gbc.writeMem(0xefe0, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3579);
        EXPECT(gbc.pc(), 0xe14f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe14d), 0xcb);
        EXPECT(gbc.readMem(0xe14e), 0x16);
        EXPECT(gbc.readMem(0xefe0), 0x5a);
        // CB 16 024A
        gbc.setState(0x8bac, 0xde16, 0x4e40, 0xa2c2, 0x715e, 0x8e1e, 0x0, 0x1);
        gbc.writeMem(0x8bac, { 0xcb, 0x16 });
        gbc.writeMem(0x8e1e, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xde16);
        EXPECT(gbc.pc(), 0x8bae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bac), 0xcb);
        EXPECT(gbc.readMem(0x8bad), 0x16);
        EXPECT(gbc.readMem(0x8e1e), 0xc);
        // CB 16 024E
        gbc.setState(0xb18f, 0x1240, 0xb1c0, 0xbb15, 0xe399, 0xdca1, 0x1, 0x1);
        gbc.writeMem(0xb18f, { 0xcb, 0x16 });
        gbc.writeMem(0xdca1, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x1240);
        EXPECT(gbc.pc(), 0xb191);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb18f), 0xcb);
        EXPECT(gbc.readMem(0xb190), 0x16);
        EXPECT(gbc.readMem(0xdca1), 0xd0);
        // CB 16 0250
        gbc.setState(0xacba, 0x3357, 0x2890, 0x6f6d, 0x5af1, 0x88e1, 0x1, 0x1);
        gbc.writeMem(0x88e1, { 0x46 });
        gbc.writeMem(0xacba, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3357);
        EXPECT(gbc.pc(), 0xacbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88e1), 0x8d);
        EXPECT(gbc.readMem(0xacba), 0xcb);
        EXPECT(gbc.readMem(0xacbb), 0x16);
        // CB 16 0251
        gbc.setState(0x3d93, 0x7845, 0x2800, 0xfb4b, 0x60dd, 0xef2a, 0x0, 0x0);
        gbc.writeMem(0x3d93, { 0xcb, 0x16 });
        gbc.writeMem(0xef2a, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x7845);
        EXPECT(gbc.pc(), 0x3d95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef2a), 0xaa);
        // CB 16 0252
        gbc.setState(0x8ff2, 0x560b, 0x2d70, 0xaa5c, 0x33a3, 0xda43, 0x0, 0x1);
        gbc.writeMem(0x8ff2, { 0xcb, 0x16 });
        gbc.writeMem(0xda43, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x560b);
        EXPECT(gbc.pc(), 0x8ff4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ff2), 0xcb);
        EXPECT(gbc.readMem(0x8ff3), 0x16);
        EXPECT(gbc.readMem(0xda43), 0xb);
        // CB 16 0255
        gbc.setState(0x40f8, 0xf57, 0xc260, 0x966e, 0x5971, 0xf5bf, 0x0, 0x0);
        gbc.writeMem(0x40f8, { 0xcb, 0x16 });
        gbc.writeMem(0xf5bf, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf57);
        EXPECT(gbc.pc(), 0x40fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf5bf), 0xc0);
        // CB 16 0256
        gbc.setState(0x8d60, 0xe4bf, 0xc80, 0x62cc, 0x5b25, 0xa7a3, 0x1, 0x1);
        gbc.writeMem(0x8d60, { 0xcb, 0x16 });
        gbc.writeMem(0xa7a3, { 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xe4bf);
        EXPECT(gbc.pc(), 0x8d62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d60), 0xcb);
        EXPECT(gbc.readMem(0x8d61), 0x16);
        EXPECT(gbc.readMem(0xa7a3), 0x9c);
        // CB 16 0257
        gbc.setState(0x8969, 0x8864, 0xd3d0, 0xcde0, 0x1a5f, 0xcc41, 0x1, 0x0);
        gbc.writeMem(0x8969, { 0xcb, 0x16 });
        gbc.writeMem(0xcc41, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8864);
        EXPECT(gbc.pc(), 0x896b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8969), 0xcb);
        EXPECT(gbc.readMem(0x896a), 0x16);
        EXPECT(gbc.readMem(0xcc41), 0x85);
        // CB 16 0258
        gbc.setState(0x2233, 0xe73f, 0x8410, 0xdab5, 0x4788, 0xa046, 0x0, 0x1);
        gbc.writeMem(0x2233, { 0xcb, 0x16 });
        gbc.writeMem(0xa046, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe73f);
        EXPECT(gbc.pc(), 0x2235);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa046), 0xb1);
        // CB 16 0259
        gbc.setState(0x2803, 0x4461, 0xb310, 0x9771, 0x6b59, 0x9e9b, 0x1, 0x1);
        gbc.writeMem(0x2803, { 0xcb, 0x16 });
        gbc.writeMem(0x9e9b, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4461);
        EXPECT(gbc.pc(), 0x2805);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e9b), 0xe7);
        // CB 16 025D
        gbc.setState(0x387e, 0xd4a2, 0x3bf0, 0xd292, 0x3c03, 0xfe3c, 0x1, 0x1);
        gbc.writeMem(0x387e, { 0xcb, 0x16 });
        gbc.writeMem(0xfe3c, { 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd4a2);
        EXPECT(gbc.pc(), 0x3880);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfe3c), 0xc1);
        // CB 16 0261
        gbc.setState(0xdfc4, 0x4bd8, 0xfcd0, 0x2cf2, 0xd82f, 0xaa9e, 0x0, 0x0);
        gbc.writeMem(0xaa9e, { 0xd6 });
        gbc.writeMem(0xdfc4, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4bd8);
        EXPECT(gbc.pc(), 0xdfc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa9e), 0xad);
        EXPECT(gbc.readMem(0xdfc4), 0xcb);
        EXPECT(gbc.readMem(0xdfc5), 0x16);
        // CB 16 0263
        gbc.setState(0x2ac, 0x99dd, 0x12c0, 0xd5eb, 0x9530, 0xfc69, 0x1, 0x0);
        gbc.writeMem(0x2ac, { 0xcb, 0x16 });
        gbc.writeMem(0xfc69, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x99dd);
        EXPECT(gbc.pc(), 0x2ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc69), 0xae);
        // CB 16 0265
        gbc.setState(0xca7b, 0x6045, 0x7d10, 0x347d, 0x78dc, 0xb721, 0x1, 0x1);
        gbc.writeMem(0xb721, { 0xd5 });
        gbc.writeMem(0xca7b, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x6045);
        EXPECT(gbc.pc(), 0xca7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb721), 0xab);
        EXPECT(gbc.readMem(0xca7b), 0xcb);
        EXPECT(gbc.readMem(0xca7c), 0x16);
        // CB 16 0269
        gbc.setState(0x389, 0x980f, 0x690, 0xc8c1, 0x763, 0x92c9, 0x0, 0x0);
        gbc.writeMem(0x389, { 0xcb, 0x16 });
        gbc.writeMem(0x92c9, { 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x980f);
        EXPECT(gbc.pc(), 0x38b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92c9), 0xb);
        // CB 16 026C
        gbc.setState(0xe7ca, 0xb2b1, 0xf200, 0x7e0, 0x5ea5, 0x8b2d, 0x0, 0x1);
        gbc.writeMem(0x8b2d, { 0x9b });
        gbc.writeMem(0xe7ca, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb2b1);
        EXPECT(gbc.pc(), 0xe7cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b2d), 0x36);
        EXPECT(gbc.readMem(0xe7ca), 0xcb);
        EXPECT(gbc.readMem(0xe7cb), 0x16);
        // CB 16 026F
        gbc.setState(0xe1cb, 0x7d75, 0x5c0, 0xb2ed, 0x4b87, 0x9dc2, 0x1, 0x1);
        gbc.writeMem(0x9dc2, { 0x5 });
        gbc.writeMem(0xe1cb, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7d75);
        EXPECT(gbc.pc(), 0xe1cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dc2), 0xa);
        EXPECT(gbc.readMem(0xe1cb), 0xcb);
        EXPECT(gbc.readMem(0xe1cc), 0x16);
        // CB 16 0270
        gbc.setState(0xa0c4, 0x4850, 0xcec0, 0xa6ae, 0x739, 0xa14c, 0x0, 0x0);
        gbc.writeMem(0xa0c4, { 0xcb, 0x16 });
        gbc.writeMem(0xa14c, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x4850);
        EXPECT(gbc.pc(), 0xa0c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0c4), 0xcb);
        EXPECT(gbc.readMem(0xa0c5), 0x16);
        EXPECT(gbc.readMem(0xa14c), 0xc4);
        // CB 16 0271
        gbc.setState(0xddb4, 0xa333, 0x8090, 0x89d4, 0xacfc, 0xa067, 0x0, 0x0);
        gbc.writeMem(0xa067, { 0x1e });
        gbc.writeMem(0xddb4, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xa333);
        EXPECT(gbc.pc(), 0xddb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa067), 0x3d);
        EXPECT(gbc.readMem(0xddb4), 0xcb);
        EXPECT(gbc.readMem(0xddb5), 0x16);
        // CB 16 0272
        gbc.setState(0x895d, 0xf7fe, 0x6380, 0xa959, 0xbe5, 0xad4b, 0x1, 0x0);
        gbc.writeMem(0x895d, { 0xcb, 0x16 });
        gbc.writeMem(0xad4b, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf7fe);
        EXPECT(gbc.pc(), 0x895f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x895d), 0xcb);
        EXPECT(gbc.readMem(0x895e), 0x16);
        EXPECT(gbc.readMem(0xad4b), 0x18);
        // CB 16 0273
        gbc.setState(0xabf1, 0xc2e4, 0xbe70, 0xa459, 0xed9c, 0xb750, 0x0, 0x1);
        gbc.writeMem(0xabf1, { 0xcb, 0x16 });
        gbc.writeMem(0xb750, { 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc2e4);
        EXPECT(gbc.pc(), 0xabf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabf1), 0xcb);
        EXPECT(gbc.readMem(0xabf2), 0x16);
        EXPECT(gbc.readMem(0xb750), 0x91);
        // CB 16 0274
        gbc.setState(0x79ff, 0xda80, 0x5ab0, 0x97a1, 0xc4b3, 0xe112, 0x0, 0x1);
        gbc.writeMem(0x79ff, { 0xcb, 0x16 });
        gbc.writeMem(0xe112, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xda80);
        EXPECT(gbc.pc(), 0x7a01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe112), 0x87);
        // CB 16 0275
        gbc.setState(0x9c78, 0x3c88, 0xc890, 0xaca0, 0x8247, 0xe98c, 0x0, 0x0);
        gbc.writeMem(0x9c78, { 0xcb, 0x16 });
        gbc.writeMem(0xe98c, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3c88);
        EXPECT(gbc.pc(), 0x9c7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c78), 0xcb);
        EXPECT(gbc.readMem(0x9c79), 0x16);
        EXPECT(gbc.readMem(0xe98c), 0xdf);
        // CB 16 0276
        gbc.setState(0x74ab, 0x1414, 0x6a70, 0xff81, 0x3795, 0xee31, 0x1, 0x0);
        gbc.writeMem(0x74ab, { 0xcb, 0x16 });
        gbc.writeMem(0xee31, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x1414);
        EXPECT(gbc.pc(), 0x74ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee31), 0x25);
        // CB 16 027A
        gbc.setState(0xdabc, 0x9520, 0xb4e0, 0x9574, 0xeeff, 0xe503, 0x1, 0x1);
        gbc.writeMem(0xdabc, { 0xcb, 0x16 });
        gbc.writeMem(0xe503, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x9520);
        EXPECT(gbc.pc(), 0xdabe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdabc), 0xcb);
        EXPECT(gbc.readMem(0xdabd), 0x16);
        EXPECT(gbc.readMem(0xe503), 0x3c);
        // CB 16 0281
        gbc.setState(0x1376, 0x10fb, 0x7440, 0x7a5b, 0x90d0, 0xac04, 0x1, 0x0);
        gbc.writeMem(0x1376, { 0xcb, 0x16 });
        gbc.writeMem(0xac04, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x10fb);
        EXPECT(gbc.pc(), 0x1378);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac04), 0xa2);
        // CB 16 0282
        gbc.setState(0x2149, 0x386, 0xc290, 0x8047, 0xfab8, 0x8902, 0x1, 0x0);
        gbc.writeMem(0x2149, { 0xcb, 0x16 });
        gbc.writeMem(0x8902, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x386);
        EXPECT(gbc.pc(), 0x214b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8902), 0xf7);
        // CB 16 0283
        gbc.setState(0x55ef, 0x3383, 0x70e0, 0x1009, 0xb9bd, 0xb0f6, 0x1, 0x1);
        gbc.writeMem(0x55ef, { 0xcb, 0x16 });
        gbc.writeMem(0xb0f6, { 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x3383);
        EXPECT(gbc.pc(), 0x55f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0f6), 0x78);
        // CB 16 0286
        gbc.setState(0x207d, 0x66ad, 0x8580, 0x5c81, 0xc23b, 0xb294, 0x0, 0x1);
        gbc.writeMem(0x207d, { 0xcb, 0x16 });
        gbc.writeMem(0xb294, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x66ad);
        EXPECT(gbc.pc(), 0x207f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb294), 0x26);
        // CB 16 0288
        gbc.setState(0x20d9, 0x84d0, 0x3b70, 0xc672, 0xcccd, 0x9a79, 0x1, 0x0);
        gbc.writeMem(0x20d9, { 0xcb, 0x16 });
        gbc.writeMem(0x9a79, { 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x84d0);
        EXPECT(gbc.pc(), 0x20db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a79), 0xb);
        // CB 16 028D
        gbc.setState(0x3eec, 0x8f09, 0x16f0, 0x7179, 0x8695, 0x8b2f, 0x0, 0x1);
        gbc.writeMem(0x3eec, { 0xcb, 0x16 });
        gbc.writeMem(0x8b2f, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8f09);
        EXPECT(gbc.pc(), 0x3eee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b2f), 0x8d);
        // CB 16 028E
        gbc.setState(0xd30d, 0xfaee, 0xad60, 0xe0bc, 0xecdc, 0x8574, 0x1, 0x1);
        gbc.writeMem(0x8574, { 0x78 });
        gbc.writeMem(0xd30d, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xfaee);
        EXPECT(gbc.pc(), 0xd30f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8574), 0xf0);
        EXPECT(gbc.readMem(0xd30d), 0xcb);
        EXPECT(gbc.readMem(0xd30e), 0x16);
        // CB 16 028F
        gbc.setState(0xa8cb, 0xde6b, 0x4cf0, 0x176f, 0x89ca, 0xded3, 0x0, 0x0);
        gbc.writeMem(0xa8cb, { 0xcb, 0x16 });
        gbc.writeMem(0xded3, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xde6b);
        EXPECT(gbc.pc(), 0xa8cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8cb), 0xcb);
        EXPECT(gbc.readMem(0xa8cc), 0x16);
        EXPECT(gbc.readMem(0xded3), 0xd3);
        // CB 16 0294
        gbc.setState(0x512d, 0x9355, 0xd520, 0xb791, 0x72ce, 0xcee3, 0x0, 0x1);
        gbc.writeMem(0x512d, { 0xcb, 0x16 });
        gbc.writeMem(0xcee3, { 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x9355);
        EXPECT(gbc.pc(), 0x512f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcee3), 0x1c);
        // CB 16 0295
        gbc.setState(0xb553, 0x9d47, 0x6e50, 0x1ea8, 0xcc62, 0xd792, 0x0, 0x0);
        gbc.writeMem(0xb553, { 0xcb, 0x16 });
        gbc.writeMem(0xd792, { 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9d47);
        EXPECT(gbc.pc(), 0xb555);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb553), 0xcb);
        EXPECT(gbc.readMem(0xb554), 0x16);
        EXPECT(gbc.readMem(0xd792), 0xed);
        // CB 16 0298
        gbc.setState(0x57d, 0xa5ac, 0xe230, 0xc7d2, 0x26ed, 0xbed6, 0x0, 0x1);
        gbc.writeMem(0x57d, { 0xcb, 0x16 });
        gbc.writeMem(0xbed6, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xa5ac);
        EXPECT(gbc.pc(), 0x57f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbed6), 0xb7);
        // CB 16 0299
        gbc.setState(0x40ce, 0x3aa7, 0x9860, 0x7215, 0xdb39, 0xebde, 0x0, 0x1);
        gbc.writeMem(0x40ce, { 0xcb, 0x16 });
        gbc.writeMem(0xebde, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3aa7);
        EXPECT(gbc.pc(), 0x40d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebde), 0xdc);
        // CB 16 029B
        gbc.setState(0x878, 0x81ca, 0x4c70, 0xbb15, 0xbd59, 0xaa53, 0x0, 0x0);
        gbc.writeMem(0x878, { 0xcb, 0x16 });
        gbc.writeMem(0xaa53, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x81ca);
        EXPECT(gbc.pc(), 0x87a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa53), 0xab);
        // CB 16 029C
        gbc.setState(0xbdb9, 0xce4c, 0x6b00, 0x948f, 0x3b74, 0xd960, 0x1, 0x0);
        gbc.writeMem(0xbdb9, { 0xcb, 0x16 });
        gbc.writeMem(0xd960, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xce4c);
        EXPECT(gbc.pc(), 0xbdbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb9), 0xcb);
        EXPECT(gbc.readMem(0xbdba), 0x16);
        EXPECT(gbc.readMem(0xd960), 0x46);
        // CB 16 029D
        gbc.setState(0xc23b, 0x42a3, 0x4220, 0xd8ac, 0x3333, 0xf2b3, 0x0, 0x1);
        gbc.writeMem(0xc23b, { 0xcb, 0x16 });
        gbc.writeMem(0xf2b3, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x42a3);
        EXPECT(gbc.pc(), 0xc23d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc23b), 0xcb);
        EXPECT(gbc.readMem(0xc23c), 0x16);
        EXPECT(gbc.readMem(0xf2b3), 0xf8);
        // CB 16 029E
        gbc.setState(0xd16e, 0x9627, 0xd730, 0xf971, 0xaf83, 0x9b26, 0x1, 0x1);
        gbc.writeMem(0x9b26, { 0x2 });
        gbc.writeMem(0xd16e, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9627);
        EXPECT(gbc.pc(), 0xd170);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b26), 0x5);
        EXPECT(gbc.readMem(0xd16e), 0xcb);
        EXPECT(gbc.readMem(0xd16f), 0x16);
        // CB 16 029F
        gbc.setState(0x38c1, 0xfbf4, 0x66d0, 0xeb4, 0xf894, 0xcfce, 0x1, 0x0);
        gbc.writeMem(0x38c1, { 0xcb, 0x16 });
        gbc.writeMem(0xcfce, { 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xfbf4);
        EXPECT(gbc.pc(), 0x38c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfce), 0xd1);
        // CB 16 02A3
        gbc.setState(0x37cf, 0xd6f4, 0x77c0, 0x3e81, 0xcd74, 0x9385, 0x1, 0x1);
        gbc.writeMem(0x37cf, { 0xcb, 0x16 });
        gbc.writeMem(0x9385, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xd6f4);
        EXPECT(gbc.pc(), 0x37d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9385), 0xe4);
        // CB 16 02A4
        gbc.setState(0x5b43, 0x7db5, 0xd810, 0xd283, 0x67dd, 0xda7d, 0x0, 0x0);
        gbc.writeMem(0x5b43, { 0xcb, 0x16 });
        gbc.writeMem(0xda7d, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7db5);
        EXPECT(gbc.pc(), 0x5b45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda7d), 0xe5);
        // CB 16 02AC
        gbc.setState(0x4431, 0x958f, 0x8110, 0x54d0, 0x9cf3, 0xdad6, 0x1, 0x0);
        gbc.writeMem(0x4431, { 0xcb, 0x16 });
        gbc.writeMem(0xdad6, { 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x958f);
        EXPECT(gbc.pc(), 0x4433);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdad6), 0x99);
        // CB 16 02AD
        gbc.setState(0xb2a0, 0x97ac, 0xab30, 0x7da6, 0xbe7a, 0xe62c, 0x0, 0x0);
        gbc.writeMem(0xb2a0, { 0xcb, 0x16 });
        gbc.writeMem(0xe62c, { 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x97ac);
        EXPECT(gbc.pc(), 0xb2a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2a0), 0xcb);
        EXPECT(gbc.readMem(0xb2a1), 0x16);
        EXPECT(gbc.readMem(0xe62c), 0xeb);
        // CB 16 02B0
        gbc.setState(0x7681, 0x2099, 0x4eb0, 0x406, 0xfe4b, 0x9056, 0x0, 0x1);
        gbc.writeMem(0x7681, { 0xcb, 0x16 });
        gbc.writeMem(0x9056, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x2099);
        EXPECT(gbc.pc(), 0x7683);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9056), 0x23);
        // CB 16 02B4
        gbc.setState(0x2beb, 0x3dd8, 0xf2b0, 0xfd21, 0x2971, 0x9bee, 0x0, 0x0);
        gbc.writeMem(0x2beb, { 0xcb, 0x16 });
        gbc.writeMem(0x9bee, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3dd8);
        EXPECT(gbc.pc(), 0x2bed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bee), 0xf3);
        // CB 16 02B6
        gbc.setState(0x5279, 0xd317, 0x2560, 0xe0f5, 0x72ef, 0x9f9e, 0x1, 0x1);
        gbc.writeMem(0x5279, { 0xcb, 0x16 });
        gbc.writeMem(0x9f9e, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd317);
        EXPECT(gbc.pc(), 0x527b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f9e), 0x88);
        // CB 16 02B7
        gbc.setState(0xb2a2, 0x1e2c, 0xd800, 0x1811, 0x7ea6, 0xa7cc, 0x1, 0x0);
        gbc.writeMem(0xa7cc, { 0xc6 });
        gbc.writeMem(0xb2a2, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1e2c);
        EXPECT(gbc.pc(), 0xb2a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7cc), 0x8c);
        EXPECT(gbc.readMem(0xb2a2), 0xcb);
        EXPECT(gbc.readMem(0xb2a3), 0x16);
        // CB 16 02B8
        gbc.setState(0x1f98, 0x1911, 0xfc60, 0xb22a, 0x17e8, 0xba45, 0x1, 0x1);
        gbc.writeMem(0x1f98, { 0xcb, 0x16 });
        gbc.writeMem(0xba45, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x1911);
        EXPECT(gbc.pc(), 0x1f9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba45), 0xb8);
        // CB 16 02B9
        gbc.setState(0xd968, 0xf1e8, 0x86d0, 0xb5fb, 0x7d30, 0xc6b9, 0x1, 0x0);
        gbc.writeMem(0xc6b9, { 0xc2 });
        gbc.writeMem(0xd968, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xf1e8);
        EXPECT(gbc.pc(), 0xd96a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6b9), 0x85);
        EXPECT(gbc.readMem(0xd968), 0xcb);
        EXPECT(gbc.readMem(0xd969), 0x16);
        // CB 16 02BA
        gbc.setState(0x2278, 0x9abf, 0xa280, 0xb778, 0x5dfd, 0xbf11, 0x0, 0x1);
        gbc.writeMem(0x2278, { 0xcb, 0x16 });
        gbc.writeMem(0xbf11, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9abf);
        EXPECT(gbc.pc(), 0x227a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf11), 0xc8);
        // CB 16 02BD
        gbc.setState(0x9e70, 0xd0b3, 0x94c0, 0xaae2, 0xdb0a, 0xe5b6, 0x0, 0x0);
        gbc.writeMem(0x9e70, { 0xcb, 0x16 });
        gbc.writeMem(0xe5b6, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd0b3);
        EXPECT(gbc.pc(), 0x9e72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e70), 0xcb);
        EXPECT(gbc.readMem(0x9e71), 0x16);
        EXPECT(gbc.readMem(0xe5b6), 0x58);
        // CB 16 02BF
        gbc.setState(0x6bd1, 0xc14d, 0x4a80, 0xcb2b, 0x4982, 0xeb40, 0x1, 0x0);
        gbc.writeMem(0x6bd1, { 0xcb, 0x16 });
        gbc.writeMem(0xeb40, { 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc14d);
        EXPECT(gbc.pc(), 0x6bd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb40), 0x96);
        // CB 16 02C0
        gbc.setState(0xa8b, 0xa039, 0x850, 0x8ce3, 0xd333, 0xa7f6, 0x1, 0x1);
        gbc.writeMem(0xa8b, { 0xcb, 0x16 });
        gbc.writeMem(0xa7f6, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xa039);
        EXPECT(gbc.pc(), 0xa8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7f6), 0x41);
        // CB 16 02C3
        gbc.setState(0x1c56, 0xf8e1, 0x9180, 0x3aed, 0xa9e7, 0xdb79, 0x0, 0x0);
        gbc.writeMem(0x1c56, { 0xcb, 0x16 });
        gbc.writeMem(0xdb79, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf8e1);
        EXPECT(gbc.pc(), 0x1c58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb79), 0xa);
        // CB 16 02C4
        gbc.setState(0x4ad1, 0x8a9a, 0x5b60, 0xb507, 0x7660, 0xd5e3, 0x0, 0x1);
        gbc.writeMem(0x4ad1, { 0xcb, 0x16 });
        gbc.writeMem(0xd5e3, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8a9a);
        EXPECT(gbc.pc(), 0x4ad3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5e3), 0xba);
        // CB 16 02C5
        gbc.setState(0xa0a8, 0xa0be, 0x56f0, 0x94ae, 0x6180, 0xbd86, 0x1, 0x1);
        gbc.writeMem(0xa0a8, { 0xcb, 0x16 });
        gbc.writeMem(0xbd86, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa0be);
        EXPECT(gbc.pc(), 0xa0aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0a8), 0xcb);
        EXPECT(gbc.readMem(0xa0a9), 0x16);
        EXPECT(gbc.readMem(0xbd86), 0xa7);
        // CB 16 02C9
        gbc.setState(0x79ab, 0xfc20, 0xf940, 0xc729, 0xb385, 0x9d6c, 0x1, 0x1);
        gbc.writeMem(0x79ab, { 0xcb, 0x16 });
        gbc.writeMem(0x9d6c, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xfc20);
        EXPECT(gbc.pc(), 0x79ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d6c), 0x16);
        // CB 16 02CB
        gbc.setState(0x2ae7, 0xb50, 0xc0d0, 0x3925, 0x7f48, 0x8a79, 0x0, 0x0);
        gbc.writeMem(0x2ae7, { 0xcb, 0x16 });
        gbc.writeMem(0x8a79, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xb50);
        EXPECT(gbc.pc(), 0x2ae9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a79), 0xa3);
        // CB 16 02CE
        gbc.setState(0xb54b, 0x5b50, 0xe850, 0xf5e, 0x99f6, 0xa2b6, 0x0, 0x1);
        gbc.writeMem(0xa2b6, { 0x7f });
        gbc.writeMem(0xb54b, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x5b50);
        EXPECT(gbc.pc(), 0xb54d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2b6), 0xff);
        EXPECT(gbc.readMem(0xb54b), 0xcb);
        EXPECT(gbc.readMem(0xb54c), 0x16);
        // CB 16 02CF
        gbc.setState(0x7ff4, 0x4940, 0x3c30, 0xc228, 0x126c, 0xf7e6, 0x0, 0x0);
        gbc.writeMem(0x7ff4, { 0xcb, 0x16 });
        gbc.writeMem(0xf7e6, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x4940);
        EXPECT(gbc.pc(), 0x7ff6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf7e6), 0x8b);
        // CB 16 02D3
        gbc.setState(0x2dea, 0x2c0d, 0x52a0, 0x464c, 0x4f0a, 0xb364, 0x1, 0x0);
        gbc.writeMem(0x2dea, { 0xcb, 0x16 });
        gbc.writeMem(0xb364, { 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2c0d);
        EXPECT(gbc.pc(), 0x2dec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb364), 0xc2);
        // CB 16 02D4
        gbc.setState(0xd9f8, 0x1dc7, 0xc10, 0xbde9, 0x1dd, 0x9dba, 0x1, 0x0);
        gbc.writeMem(0x9dba, { 0xb9 });
        gbc.writeMem(0xd9f8, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x1dc7);
        EXPECT(gbc.pc(), 0xd9fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dba), 0x73);
        EXPECT(gbc.readMem(0xd9f8), 0xcb);
        EXPECT(gbc.readMem(0xd9f9), 0x16);
        // CB 16 02D5
        gbc.setState(0x6fb6, 0x5eee, 0x7890, 0xa497, 0xe7f5, 0xbe25, 0x0, 0x1);
        gbc.writeMem(0x6fb6, { 0xcb, 0x16 });
        gbc.writeMem(0xbe25, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5eee);
        EXPECT(gbc.pc(), 0x6fb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe25), 0x97);
        // CB 16 02D6
        gbc.setState(0xbfe9, 0x7bb1, 0x2fd0, 0x9d00, 0xc7ee, 0xfd07, 0x0, 0x1);
        gbc.writeMem(0xbfe9, { 0xcb, 0x16 });
        gbc.writeMem(0xfd07, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7bb1);
        EXPECT(gbc.pc(), 0xbfeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfe9), 0xcb);
        EXPECT(gbc.readMem(0xbfea), 0x16);
        EXPECT(gbc.readMem(0xfd07), 0x7b);
        // CB 16 02DC
        gbc.setState(0x2853, 0x454f, 0x85b0, 0xa0ce, 0x57a2, 0x9f56, 0x1, 0x1);
        gbc.writeMem(0x2853, { 0xcb, 0x16 });
        gbc.writeMem(0x9f56, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x454f);
        EXPECT(gbc.pc(), 0x2855);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f56), 0x49);
        // CB 16 02DD
        gbc.setState(0xb781, 0xe180, 0x2140, 0x6b16, 0xba62, 0xc277, 0x1, 0x1);
        gbc.writeMem(0xb781, { 0xcb, 0x16 });
        gbc.writeMem(0xc277, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe180);
        EXPECT(gbc.pc(), 0xb783);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb781), 0xcb);
        EXPECT(gbc.readMem(0xb782), 0x16);
        EXPECT(gbc.readMem(0xc277), 0x98);
        // CB 16 02DE
        gbc.setState(0xbfde, 0xa9ba, 0xabb0, 0x38dd, 0xd2ec, 0xc0fb, 0x1, 0x0);
        gbc.writeMem(0xbfde, { 0xcb, 0x16 });
        gbc.writeMem(0xc0fb, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xa9ba);
        EXPECT(gbc.pc(), 0xbfe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfde), 0xcb);
        EXPECT(gbc.readMem(0xbfdf), 0x16);
        EXPECT(gbc.readMem(0xc0fb), 0xef);
        // CB 16 02E1
        gbc.setState(0xae27, 0x440c, 0xbce0, 0xeb5c, 0xd5d7, 0x96bb, 0x1, 0x1);
        gbc.writeMem(0x96bb, { 0xc8 });
        gbc.writeMem(0xae27, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x440c);
        EXPECT(gbc.pc(), 0xae29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96bb), 0x90);
        EXPECT(gbc.readMem(0xae27), 0xcb);
        EXPECT(gbc.readMem(0xae28), 0x16);
        // CB 16 02E2
        gbc.setState(0x4f4d, 0x62a2, 0x4340, 0x25a8, 0x72c3, 0x84da, 0x1, 0x0);
        gbc.writeMem(0x4f4d, { 0xcb, 0x16 });
        gbc.writeMem(0x84da, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x62a2);
        EXPECT(gbc.pc(), 0x4f4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84da), 0xf8);
        // CB 16 02E5
        gbc.setState(0x62c8, 0x3153, 0x7580, 0x58ad, 0xf7fb, 0xdae4, 0x1, 0x0);
        gbc.writeMem(0x62c8, { 0xcb, 0x16 });
        gbc.writeMem(0xdae4, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3153);
        EXPECT(gbc.pc(), 0x62ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdae4), 0xfc);
        // CB 16 02E6
        gbc.setState(0x752, 0x2db7, 0x4a60, 0x79fa, 0x9793, 0xcad2, 0x1, 0x1);
        gbc.writeMem(0x752, { 0xcb, 0x16 });
        gbc.writeMem(0xcad2, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2db7);
        EXPECT(gbc.pc(), 0x754);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcad2), 0x2e);
        // CB 16 02EB
        gbc.setState(0x6915, 0x3250, 0x43a0, 0xf403, 0x511a, 0x87e1, 0x1, 0x0);
        gbc.writeMem(0x6915, { 0xcb, 0x16 });
        gbc.writeMem(0x87e1, { 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3250);
        EXPECT(gbc.pc(), 0x6917);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87e1), 0x9e);
        // CB 16 02ED
        gbc.setState(0x58a3, 0x2201, 0x2e20, 0x7840, 0x2702, 0xd2fa, 0x0, 0x0);
        gbc.writeMem(0x58a3, { 0xcb, 0x16 });
        gbc.writeMem(0xd2fa, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x2201);
        EXPECT(gbc.pc(), 0x58a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2fa), 0x52);
        // CB 16 02EE
        gbc.setState(0x1357, 0x2ba6, 0xdf10, 0x7ed7, 0x3517, 0xf90a, 0x0, 0x0);
        gbc.writeMem(0x1357, { 0xcb, 0x16 });
        gbc.writeMem(0xf90a, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x2ba6);
        EXPECT(gbc.pc(), 0x1359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf90a), 0xef);
        // CB 16 02EF
        gbc.setState(0x5a9f, 0x3f7b, 0x8a60, 0x4c9d, 0x403c, 0xa7d2, 0x1, 0x0);
        gbc.writeMem(0x5a9f, { 0xcb, 0x16 });
        gbc.writeMem(0xa7d2, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x3f7b);
        EXPECT(gbc.pc(), 0x5aa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7d2), 0x48);
        // CB 16 02F0
        gbc.setState(0x434b, 0xcaa2, 0xc1c0, 0xc67, 0xb6b4, 0x8d0f, 0x1, 0x1);
        gbc.writeMem(0x434b, { 0xcb, 0x16 });
        gbc.writeMem(0x8d0f, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xcaa2);
        EXPECT(gbc.pc(), 0x434d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d0f), 0x9a);
        // CB 16 02F2
        gbc.setState(0xbec0, 0xc7f9, 0xa9a0, 0xab38, 0xd5e8, 0xff82, 0x0, 0x1);
        gbc.writeMem(0xbec0, { 0xcb, 0x16 });
        gbc.writeMem(0xff82, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc7f9);
        EXPECT(gbc.pc(), 0xbec2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbec0), 0xcb);
        EXPECT(gbc.readMem(0xbec1), 0x16);
        EXPECT(gbc.readMem(0xff82), 0xbc);
        // CB 16 02F6
        gbc.setState(0x4999, 0x58a1, 0x30a0, 0x90f6, 0x3f4c, 0xe135, 0x1, 0x0);
        gbc.writeMem(0x4999, { 0xcb, 0x16 });
        gbc.writeMem(0xe135, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x58a1);
        EXPECT(gbc.pc(), 0x499b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe135), 0xa0);
        // CB 16 02F7
        gbc.setState(0x4f40, 0x72ad, 0x5a20, 0x4837, 0xda79, 0xaeaf, 0x1, 0x1);
        gbc.writeMem(0x4f40, { 0xcb, 0x16 });
        gbc.writeMem(0xaeaf, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x72ad);
        EXPECT(gbc.pc(), 0x4f42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeaf), 0x4a);
        // CB 16 02FB
        gbc.setState(0xda16, 0x2f09, 0x9d70, 0x29be, 0x292d, 0xcd40, 0x0, 0x1);
        gbc.writeMem(0xcd40, { 0xe2 });
        gbc.writeMem(0xda16, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2f09);
        EXPECT(gbc.pc(), 0xda18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd40), 0xc5);
        EXPECT(gbc.readMem(0xda16), 0xcb);
        EXPECT(gbc.readMem(0xda17), 0x16);
        // CB 16 02FC
        gbc.setState(0x4dd6, 0x1498, 0xe9a0, 0x8c33, 0xe6e6, 0xf189, 0x1, 0x0);
        gbc.writeMem(0x4dd6, { 0xcb, 0x16 });
        gbc.writeMem(0xf189, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1498);
        EXPECT(gbc.pc(), 0x4dd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf189), 0xe0);
        // CB 16 02FD
        gbc.setState(0xcf1a, 0xa05c, 0x7ce0, 0x630, 0xbc04, 0x9533, 0x1, 0x0);
        gbc.writeMem(0x9533, { 0xc2 });
        gbc.writeMem(0xcf1a, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa05c);
        EXPECT(gbc.pc(), 0xcf1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9533), 0x84);
        EXPECT(gbc.readMem(0xcf1a), 0xcb);
        EXPECT(gbc.readMem(0xcf1b), 0x16);
        // CB 16 02FE
        gbc.setState(0xb3b7, 0x28df, 0xa0d0, 0x6bd5, 0x3334, 0xbb30, 0x1, 0x0);
        gbc.writeMem(0xb3b7, { 0xcb, 0x16 });
        gbc.writeMem(0xbb30, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x28df);
        EXPECT(gbc.pc(), 0xb3b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3b7), 0xcb);
        EXPECT(gbc.readMem(0xb3b8), 0x16);
        EXPECT(gbc.readMem(0xbb30), 0x9f);
        // CB 16 0300
        gbc.setState(0x141e, 0x559, 0xd010, 0xf745, 0x3019, 0x951a, 0x1, 0x0);
        gbc.writeMem(0x141e, { 0xcb, 0x16 });
        gbc.writeMem(0x951a, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x559);
        EXPECT(gbc.pc(), 0x1420);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x951a), 0x35);
        // CB 16 0301
        gbc.setState(0x3674, 0xfc8b, 0x59e0, 0x8869, 0x56bf, 0xe765, 0x0, 0x0);
        gbc.writeMem(0x3674, { 0xcb, 0x16 });
        gbc.writeMem(0xe765, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xfc8b);
        EXPECT(gbc.pc(), 0x3676);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe765), 0x16);
        // CB 16 0302
        gbc.setState(0x70e, 0x8667, 0x7610, 0xd86b, 0x88bb, 0x95dc, 0x0, 0x1);
        gbc.writeMem(0x70e, { 0xcb, 0x16 });
        gbc.writeMem(0x95dc, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x8667);
        EXPECT(gbc.pc(), 0x710);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95dc), 0x81);
        // CB 16 0308
        gbc.setState(0x5232, 0xc01a, 0x3ac0, 0x9809, 0x16d9, 0xe131, 0x0, 0x1);
        gbc.writeMem(0x5232, { 0xcb, 0x16 });
        gbc.writeMem(0xe131, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xc01a);
        EXPECT(gbc.pc(), 0x5234);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe131), 0xb0);
        // CB 16 0309
        gbc.setState(0x3a94, 0x9134, 0x4d70, 0xeeda, 0xe006, 0x968e, 0x0, 0x0);
        gbc.writeMem(0x3a94, { 0xcb, 0x16 });
        gbc.writeMem(0x968e, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9134);
        EXPECT(gbc.pc(), 0x3a96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x968e), 0xc5);
        // CB 16 030A
        gbc.setState(0xa604, 0x2d41, 0xa610, 0x4532, 0x6619, 0xcb6e, 0x0, 0x1);
        gbc.writeMem(0xa604, { 0xcb, 0x16 });
        gbc.writeMem(0xcb6e, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2d41);
        EXPECT(gbc.pc(), 0xa606);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa604), 0xcb);
        EXPECT(gbc.readMem(0xa605), 0x16);
        EXPECT(gbc.readMem(0xcb6e), 0x53);
        // CB 16 030B
        gbc.setState(0xe7ff, 0x6e37, 0xbaf0, 0xb3, 0x521f, 0x8774, 0x1, 0x0);
        gbc.writeMem(0x8774, { 0xaf });
        gbc.writeMem(0xe7ff, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6e37);
        EXPECT(gbc.pc(), 0xe801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8774), 0x5f);
        EXPECT(gbc.readMem(0xe7ff), 0xcb);
        EXPECT(gbc.readMem(0xe800), 0x16);
        // CB 16 030D
        gbc.setState(0x2927, 0x97c0, 0xd2d0, 0x97f4, 0xbd57, 0x9b6a, 0x0, 0x0);
        gbc.writeMem(0x2927, { 0xcb, 0x16 });
        gbc.writeMem(0x9b6a, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x97c0);
        EXPECT(gbc.pc(), 0x2929);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b6a), 0xdf);
        // CB 16 0311
        gbc.setState(0xc087, 0xc27f, 0x3b60, 0x7cfe, 0x8dce, 0xd8da, 0x0, 0x1);
        gbc.writeMem(0xc087, { 0xcb, 0x16 });
        gbc.writeMem(0xd8da, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc27f);
        EXPECT(gbc.pc(), 0xc089);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc087), 0xcb);
        EXPECT(gbc.readMem(0xc088), 0x16);
        EXPECT(gbc.readMem(0xd8da), 0x7c);
        // CB 16 0312
        gbc.setState(0x6b93, 0x363d, 0x6b20, 0x5955, 0x931c, 0x998f, 0x1, 0x1);
        gbc.writeMem(0x6b93, { 0xcb, 0x16 });
        gbc.writeMem(0x998f, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x363d);
        EXPECT(gbc.pc(), 0x6b95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x998f), 0x22);
        // CB 16 0314
        gbc.setState(0x139b, 0xc291, 0xb920, 0xfd91, 0xc9c9, 0xc3de, 0x1, 0x1);
        gbc.writeMem(0x139b, { 0xcb, 0x16 });
        gbc.writeMem(0xc3de, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc291);
        EXPECT(gbc.pc(), 0x139d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3de), 0x5a);
        // CB 16 0315
        gbc.setState(0x6d39, 0xdd74, 0x4f0, 0x5781, 0xe872, 0xfd23, 0x1, 0x1);
        gbc.writeMem(0x6d39, { 0xcb, 0x16 });
        gbc.writeMem(0xfd23, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xdd74);
        EXPECT(gbc.pc(), 0x6d3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfd23), 0x8b);
        // CB 16 0316
        gbc.setState(0x5d56, 0x8ac8, 0x7c00, 0x1306, 0x142, 0x8a24, 0x1, 0x0);
        gbc.writeMem(0x5d56, { 0xcb, 0x16 });
        gbc.writeMem(0x8a24, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8ac8);
        EXPECT(gbc.pc(), 0x5d58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a24), 0xda);
        // CB 16 0320
        gbc.setState(0x81ef, 0xf7ac, 0x5c90, 0x9937, 0x4a0, 0xd529, 0x1, 0x0);
        gbc.writeMem(0x81ef, { 0xcb, 0x16 });
        gbc.writeMem(0xd529, { 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf7ac);
        EXPECT(gbc.pc(), 0x81f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81ef), 0xcb);
        EXPECT(gbc.readMem(0x81f0), 0x16);
        EXPECT(gbc.readMem(0xd529), 0x47);
        // CB 16 0321
        gbc.setState(0x49c0, 0xeb9c, 0x7110, 0x3f59, 0x6873, 0xbde2, 0x1, 0x0);
        gbc.writeMem(0x49c0, { 0xcb, 0x16 });
        gbc.writeMem(0xbde2, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xeb9c);
        EXPECT(gbc.pc(), 0x49c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbde2), 0xcf);
        // CB 16 0323
        gbc.setState(0xb2ff, 0x191e, 0x3260, 0x1f03, 0xa2c9, 0x9ada, 0x0, 0x1);
        gbc.writeMem(0x9ada, { 0xe0 });
        gbc.writeMem(0xb2ff, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x191e);
        EXPECT(gbc.pc(), 0xb301);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ada), 0xc0);
        EXPECT(gbc.readMem(0xb2ff), 0xcb);
        EXPECT(gbc.readMem(0xb300), 0x16);
        // CB 16 0328
        gbc.setState(0xebb7, 0xb03, 0x8d0, 0x14d7, 0x245f, 0xf719, 0x1, 0x0);
        gbc.writeMem(0xebb7, { 0xcb, 0x16 });
        gbc.writeMem(0xf719, { 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xb03);
        EXPECT(gbc.pc(), 0xebb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebb7), 0xcb);
        EXPECT(gbc.readMem(0xebb8), 0x16);
        EXPECT(gbc.readMem(0xf719), 0x39);
        // CB 16 0329
        gbc.setState(0x654f, 0xe5ba, 0x1570, 0xaf25, 0x53b4, 0xa5ac, 0x0, 0x0);
        gbc.writeMem(0x654f, { 0xcb, 0x16 });
        gbc.writeMem(0xa5ac, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe5ba);
        EXPECT(gbc.pc(), 0x6551);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5ac), 0xab);
        // CB 16 032D
        gbc.setState(0x9a19, 0xd5c1, 0xcb60, 0xa8cd, 0x1f69, 0xb4c9, 0x0, 0x0);
        gbc.writeMem(0x9a19, { 0xcb, 0x16 });
        gbc.writeMem(0xb4c9, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd5c1);
        EXPECT(gbc.pc(), 0x9a1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a19), 0xcb);
        EXPECT(gbc.readMem(0x9a1a), 0x16);
        EXPECT(gbc.readMem(0xb4c9), 0xfa);
        // CB 16 032F
        gbc.setState(0x8796, 0x679c, 0xa8e0, 0x704, 0x2b1e, 0xb160, 0x1, 0x1);
        gbc.writeMem(0x8796, { 0xcb, 0x16 });
        gbc.writeMem(0xb160, { 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x679c);
        EXPECT(gbc.pc(), 0x8798);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8796), 0xcb);
        EXPECT(gbc.readMem(0x8797), 0x16);
        EXPECT(gbc.readMem(0xb160), 0x6a);
        // CB 16 0331
        gbc.setState(0x623d, 0x6cc3, 0x4f50, 0xb8c2, 0xb4b0, 0x87f5, 0x0, 0x0);
        gbc.writeMem(0x623d, { 0xcb, 0x16 });
        gbc.writeMem(0x87f5, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6cc3);
        EXPECT(gbc.pc(), 0x623f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87f5), 0x71);
        // CB 16 0333
        gbc.setState(0xc0e5, 0xcd02, 0x2770, 0xd204, 0xfe70, 0xf329, 0x1, 0x0);
        gbc.writeMem(0xc0e5, { 0xcb, 0x16 });
        gbc.writeMem(0xf329, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xcd02);
        EXPECT(gbc.pc(), 0xc0e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0e5), 0xcb);
        EXPECT(gbc.readMem(0xc0e6), 0x16);
        EXPECT(gbc.readMem(0xf329), 0xa5);
        // CB 16 0335
        gbc.setState(0x19d9, 0x85a4, 0xd3d0, 0x1970, 0x56f1, 0xc74d, 0x0, 0x1);
        gbc.writeMem(0x19d9, { 0xcb, 0x16 });
        gbc.writeMem(0xc74d, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x85a4);
        EXPECT(gbc.pc(), 0x19db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc74d), 0x85);
        // CB 16 0338
        gbc.setState(0xa5f8, 0x5b57, 0x2b10, 0x3a78, 0xcb54, 0xdebb, 0x0, 0x0);
        gbc.writeMem(0xa5f8, { 0xcb, 0x16 });
        gbc.writeMem(0xdebb, { 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5b57);
        EXPECT(gbc.pc(), 0xa5fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5f8), 0xcb);
        EXPECT(gbc.readMem(0xa5f9), 0x16);
        EXPECT(gbc.readMem(0xdebb), 0xeb);
        // CB 16 0339
        gbc.setState(0xdd2, 0x27b0, 0x9f80, 0xc1fd, 0x2d79, 0x93b5, 0x1, 0x1);
        gbc.writeMem(0xdd2, { 0xcb, 0x16 });
        gbc.writeMem(0x93b5, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x27b0);
        EXPECT(gbc.pc(), 0xdd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93b5), 0x5e);
        // CB 16 033A
        gbc.setState(0xca9e, 0x8984, 0xeae0, 0x1f0e, 0x9b4c, 0xe5ef, 0x0, 0x0);
        gbc.writeMem(0xca9e, { 0xcb, 0x16 });
        gbc.writeMem(0xe5ef, { 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8984);
        EXPECT(gbc.pc(), 0xcaa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca9e), 0xcb);
        EXPECT(gbc.readMem(0xca9f), 0x16);
        EXPECT(gbc.readMem(0xe5ef), 0xb6);
        // CB 16 033D
        gbc.setState(0x627d, 0x5102, 0x1e00, 0x5323, 0xfd6f, 0xc7b2, 0x0, 0x1);
        gbc.writeMem(0x627d, { 0xcb, 0x16 });
        gbc.writeMem(0xc7b2, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5102);
        EXPECT(gbc.pc(), 0x627f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7b2), 0x12);
        // CB 16 033F
        gbc.setState(0x731f, 0xeaf8, 0x69d0, 0xbd7c, 0xe15, 0xd68f, 0x1, 0x1);
        gbc.writeMem(0x731f, { 0xcb, 0x16 });
        gbc.writeMem(0xd68f, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xeaf8);
        EXPECT(gbc.pc(), 0x7321);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd68f), 0x5f);
        // CB 16 0340
        gbc.setState(0x30cd, 0xc3b7, 0xa940, 0x6a1d, 0x8ebe, 0xb9be, 0x1, 0x1);
        gbc.writeMem(0x30cd, { 0xcb, 0x16 });
        gbc.writeMem(0xb9be, { 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc3b7);
        EXPECT(gbc.pc(), 0x30cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9be), 0xf2);
        // CB 16 0341
        gbc.setState(0xb638, 0x9f0d, 0xab30, 0x5ac8, 0x7469, 0xca45, 0x0, 0x0);
        gbc.writeMem(0xb638, { 0xcb, 0x16 });
        gbc.writeMem(0xca45, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x9f0d);
        EXPECT(gbc.pc(), 0xb63a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb638), 0xcb);
        EXPECT(gbc.readMem(0xb639), 0x16);
        EXPECT(gbc.readMem(0xca45), 0xf9);
        // CB 16 0342
        gbc.setState(0xe486, 0xdc52, 0x720, 0x1814, 0x2e36, 0xe25f, 0x1, 0x1);
        gbc.writeMem(0xe25f, { 0xbc });
        gbc.writeMem(0xe486, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xdc52);
        EXPECT(gbc.pc(), 0xe488);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe25f), 0x78);
        EXPECT(gbc.readMem(0xe486), 0xcb);
        EXPECT(gbc.readMem(0xe487), 0x16);
        // CB 16 0343
        gbc.setState(0x623d, 0xe2e5, 0x56b0, 0x6c97, 0xf028, 0xb3a9, 0x0, 0x0);
        gbc.writeMem(0x623d, { 0xcb, 0x16 });
        gbc.writeMem(0xb3a9, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe2e5);
        EXPECT(gbc.pc(), 0x623f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3a9), 0x5b);
        // CB 16 0344
        gbc.setState(0x9cc5, 0x9a91, 0x4290, 0x46a9, 0xca51, 0xec1a, 0x0, 0x0);
        gbc.writeMem(0x9cc5, { 0xcb, 0x16 });
        gbc.writeMem(0xec1a, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9a91);
        EXPECT(gbc.pc(), 0x9cc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cc5), 0xcb);
        EXPECT(gbc.readMem(0x9cc6), 0x16);
        EXPECT(gbc.readMem(0xec1a), 0x61);
        // CB 16 0345
        gbc.setState(0x9a2b, 0xfa62, 0xf820, 0x2d97, 0xe93d, 0x9056, 0x0, 0x0);
        gbc.writeMem(0x9056, { 0x11 });
        gbc.writeMem(0x9a2b, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xfa62);
        EXPECT(gbc.pc(), 0x9a2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9056), 0x22);
        EXPECT(gbc.readMem(0x9a2b), 0xcb);
        EXPECT(gbc.readMem(0x9a2c), 0x16);
        // CB 16 0346
        gbc.setState(0x2f94, 0x6cba, 0xbda0, 0x464, 0x6686, 0x9a2f, 0x0, 0x1);
        gbc.writeMem(0x2f94, { 0xcb, 0x16 });
        gbc.writeMem(0x9a2f, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x6cba);
        EXPECT(gbc.pc(), 0x2f96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a2f), 0x30);
        // CB 16 0347
        gbc.setState(0x68f8, 0x73f1, 0x9320, 0xd20a, 0xe82, 0xa729, 0x1, 0x0);
        gbc.writeMem(0x68f8, { 0xcb, 0x16 });
        gbc.writeMem(0xa729, { 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x73f1);
        EXPECT(gbc.pc(), 0x68fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa729), 0x9c);
        // CB 16 0348
        gbc.setState(0x1fa1, 0xab28, 0x52e0, 0xbf72, 0xbe5c, 0x9b1f, 0x0, 0x1);
        gbc.writeMem(0x1fa1, { 0xcb, 0x16 });
        gbc.writeMem(0x9b1f, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xab28);
        EXPECT(gbc.pc(), 0x1fa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b1f), 0xfa);
        // CB 16 0349
        gbc.setState(0xc5f6, 0xc8b3, 0x6b00, 0x4621, 0x2d45, 0x9c61, 0x0, 0x1);
        gbc.writeMem(0x9c61, { 0xa1 });
        gbc.writeMem(0xc5f6, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xc8b3);
        EXPECT(gbc.pc(), 0xc5f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c61), 0x42);
        EXPECT(gbc.readMem(0xc5f6), 0xcb);
        EXPECT(gbc.readMem(0xc5f7), 0x16);
        // CB 16 034A
        gbc.setState(0x499c, 0x3a93, 0xf9c0, 0xa17e, 0x9ca5, 0x9242, 0x1, 0x1);
        gbc.writeMem(0x499c, { 0xcb, 0x16 });
        gbc.writeMem(0x9242, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3a93);
        EXPECT(gbc.pc(), 0x499e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9242), 0xb8);
        // CB 16 034C
        gbc.setState(0x97e7, 0x73f3, 0xff0, 0x8b9a, 0x5831, 0xb909, 0x0, 0x1);
        gbc.writeMem(0x97e7, { 0xcb, 0x16 });
        gbc.writeMem(0xb909, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x73f3);
        EXPECT(gbc.pc(), 0x97e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97e7), 0xcb);
        EXPECT(gbc.readMem(0x97e8), 0x16);
        EXPECT(gbc.readMem(0xb909), 0xd5);
        // CB 16 034D
        gbc.setState(0x7ca9, 0xd603, 0x2fb0, 0x7342, 0x3a8d, 0x9a9b, 0x0, 0x0);
        gbc.writeMem(0x7ca9, { 0xcb, 0x16 });
        gbc.writeMem(0x9a9b, { 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd603);
        EXPECT(gbc.pc(), 0x7cab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a9b), 0x23);
        // CB 16 0352
        gbc.setState(0x57b2, 0xfe31, 0x3cc0, 0x47ee, 0x4829, 0x9bea, 0x0, 0x0);
        gbc.writeMem(0x57b2, { 0xcb, 0x16 });
        gbc.writeMem(0x9bea, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xfe31);
        EXPECT(gbc.pc(), 0x57b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bea), 0x48);
        // CB 16 0353
        gbc.setState(0xbc82, 0x91b2, 0xd980, 0xda15, 0xa0f6, 0xdd3e, 0x0, 0x0);
        gbc.writeMem(0xbc82, { 0xcb, 0x16 });
        gbc.writeMem(0xdd3e, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x91b2);
        EXPECT(gbc.pc(), 0xbc84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc82), 0xcb);
        EXPECT(gbc.readMem(0xbc83), 0x16);
        EXPECT(gbc.readMem(0xdd3e), 0x4);
        // CB 16 0354
        gbc.setState(0x2f5a, 0x890c, 0x4c90, 0x2e1b, 0x9624, 0xc6e2, 0x1, 0x1);
        gbc.writeMem(0x2f5a, { 0xcb, 0x16 });
        gbc.writeMem(0xc6e2, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x890c);
        EXPECT(gbc.pc(), 0x2f5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6e2), 0xab);
        // CB 16 0357
        gbc.setState(0x286b, 0x70b8, 0x42f0, 0x114f, 0xfa8d, 0x95f0, 0x1, 0x0);
        gbc.writeMem(0x286b, { 0xcb, 0x16 });
        gbc.writeMem(0x95f0, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x70b8);
        EXPECT(gbc.pc(), 0x286d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95f0), 0x45);
        // CB 16 0359
        gbc.setState(0x9356, 0x1c22, 0x7300, 0x8257, 0xad39, 0xdafc, 0x1, 0x0);
        gbc.writeMem(0x9356, { 0xcb, 0x16 });
        gbc.writeMem(0xdafc, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x1c22);
        EXPECT(gbc.pc(), 0x9358);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9356), 0xcb);
        EXPECT(gbc.readMem(0x9357), 0x16);
        EXPECT(gbc.readMem(0xdafc), 0xce);
        // CB 16 035B
        gbc.setState(0x3b3a, 0xfe1d, 0x7600, 0xf255, 0x830b, 0xb721, 0x0, 0x1);
        gbc.writeMem(0x3b3a, { 0xcb, 0x16 });
        gbc.writeMem(0xb721, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xfe1d);
        EXPECT(gbc.pc(), 0x3b3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb721), 0xaa);
        // CB 16 035C
        gbc.setState(0x5784, 0xb475, 0x72f0, 0xc341, 0x9233, 0x8c93, 0x0, 0x1);
        gbc.writeMem(0x5784, { 0xcb, 0x16 });
        gbc.writeMem(0x8c93, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb475);
        EXPECT(gbc.pc(), 0x5786);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c93), 0x87);
        // CB 16 035E
        gbc.setState(0xc8cc, 0xff46, 0x8740, 0xad5c, 0xffda, 0xa3ea, 0x0, 0x0);
        gbc.writeMem(0xa3ea, { 0x1d });
        gbc.writeMem(0xc8cc, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xff46);
        EXPECT(gbc.pc(), 0xc8ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3ea), 0x3a);
        EXPECT(gbc.readMem(0xc8cc), 0xcb);
        EXPECT(gbc.readMem(0xc8cd), 0x16);
        // CB 16 0361
        gbc.setState(0xbee7, 0xc6bc, 0x56c0, 0x6ba9, 0xab8c, 0xae4a, 0x1, 0x1);
        gbc.writeMem(0xae4a, { 0xdb });
        gbc.writeMem(0xbee7, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xc6bc);
        EXPECT(gbc.pc(), 0xbee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae4a), 0xb6);
        EXPECT(gbc.readMem(0xbee7), 0xcb);
        EXPECT(gbc.readMem(0xbee8), 0x16);
        // CB 16 0363
        gbc.setState(0x8cbe, 0x9ddd, 0xbea0, 0x1520, 0xec07, 0xb4cd, 0x1, 0x1);
        gbc.writeMem(0x8cbe, { 0xcb, 0x16 });
        gbc.writeMem(0xb4cd, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x9ddd);
        EXPECT(gbc.pc(), 0x8cc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cbe), 0xcb);
        EXPECT(gbc.readMem(0x8cbf), 0x16);
        EXPECT(gbc.readMem(0xb4cd), 0xba);
        // CB 16 0364
        gbc.setState(0x976f, 0xcd07, 0xbea0, 0xcc5b, 0xd20, 0xb119, 0x0, 0x1);
        gbc.writeMem(0x976f, { 0xcb, 0x16 });
        gbc.writeMem(0xb119, { 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xcd07);
        EXPECT(gbc.pc(), 0x9771);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x976f), 0xcb);
        EXPECT(gbc.readMem(0x9770), 0x16);
        EXPECT(gbc.readMem(0xb119), 0xd4);
        // CB 16 0365
        gbc.setState(0xaf97, 0xc045, 0xb850, 0xf5f4, 0x6571, 0xdca8, 0x1, 0x0);
        gbc.writeMem(0xaf97, { 0xcb, 0x16 });
        gbc.writeMem(0xdca8, { 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc045);
        EXPECT(gbc.pc(), 0xaf99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf97), 0xcb);
        EXPECT(gbc.readMem(0xaf98), 0x16);
        EXPECT(gbc.readMem(0xdca8), 0x59);
        // CB 16 0369
        gbc.setState(0xc8f8, 0x8132, 0xe370, 0x1e01, 0x59d4, 0x8dfd, 0x0, 0x0);
        gbc.writeMem(0x8dfd, { 0xe4 });
        gbc.writeMem(0xc8f8, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x8132);
        EXPECT(gbc.pc(), 0xc8fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dfd), 0xc9);
        EXPECT(gbc.readMem(0xc8f8), 0xcb);
        EXPECT(gbc.readMem(0xc8f9), 0x16);
        // CB 16 036B
        gbc.setState(0xdcec, 0x3281, 0xd310, 0xd7d9, 0x9a3e, 0xd962, 0x0, 0x0);
        gbc.writeMem(0xd962, { 0x6a });
        gbc.writeMem(0xdcec, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3281);
        EXPECT(gbc.pc(), 0xdcee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd962), 0xd5);
        EXPECT(gbc.readMem(0xdcec), 0xcb);
        EXPECT(gbc.readMem(0xdced), 0x16);
        // CB 16 036C
        gbc.setState(0x988d, 0xc75a, 0x68b0, 0x92ad, 0xd52f, 0xcba0, 0x1, 0x0);
        gbc.writeMem(0x988d, { 0xcb, 0x16 });
        gbc.writeMem(0xcba0, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xc75a);
        EXPECT(gbc.pc(), 0x988f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x988d), 0xcb);
        EXPECT(gbc.readMem(0x988e), 0x16);
        EXPECT(gbc.readMem(0xcba0), 0x85);
        // CB 16 036F
        gbc.setState(0xc600, 0xf677, 0xa4a0, 0x5be8, 0xb073, 0x92cc, 0x1, 0x1);
        gbc.writeMem(0x92cc, { 0xbb });
        gbc.writeMem(0xc600, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf677);
        EXPECT(gbc.pc(), 0xc602);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92cc), 0x76);
        EXPECT(gbc.readMem(0xc600), 0xcb);
        EXPECT(gbc.readMem(0xc601), 0x16);
        // CB 16 0370
        gbc.setState(0xcf6, 0x5807, 0xbe0, 0x25b1, 0x80b2, 0xa726, 0x1, 0x1);
        gbc.writeMem(0xcf6, { 0xcb, 0x16 });
        gbc.writeMem(0xa726, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5807);
        EXPECT(gbc.pc(), 0xcf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa726), 0xa2);
        // CB 16 0371
        gbc.setState(0x6310, 0x7cd7, 0x7570, 0x7839, 0x18bc, 0xdbec, 0x0, 0x1);
        gbc.writeMem(0x6310, { 0xcb, 0x16 });
        gbc.writeMem(0xdbec, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x7cd7);
        EXPECT(gbc.pc(), 0x6312);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbec), 0xb7);
        // CB 16 0374
        gbc.setState(0x9d0d, 0x45c3, 0xfd30, 0x5ca8, 0xc1cc, 0xaaf9, 0x1, 0x1);
        gbc.writeMem(0x9d0d, { 0xcb, 0x16 });
        gbc.writeMem(0xaaf9, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x45c3);
        EXPECT(gbc.pc(), 0x9d0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d0d), 0xcb);
        EXPECT(gbc.readMem(0x9d0e), 0x16);
        EXPECT(gbc.readMem(0xaaf9), 0x41);
        // CB 16 0375
        gbc.setState(0x588d, 0x84a, 0x4d10, 0xd02d, 0x210a, 0xd01c, 0x1, 0x1);
        gbc.writeMem(0x588d, { 0xcb, 0x16 });
        gbc.writeMem(0xd01c, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x84a);
        EXPECT(gbc.pc(), 0x588f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd01c), 0x5b);
        // CB 16 0378
        gbc.setState(0x6585, 0xbd43, 0xd0f0, 0xb61d, 0x4c30, 0xf77d, 0x0, 0x1);
        gbc.writeMem(0x6585, { 0xcb, 0x16 });
        gbc.writeMem(0xf77d, { 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xbd43);
        EXPECT(gbc.pc(), 0x6587);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf77d), 0xeb);
        // CB 16 037E
        gbc.setState(0x87f1, 0x365b, 0x1c20, 0xd290, 0xfca4, 0x8400, 0x0, 0x1);
        gbc.writeMem(0x8400, { 0x90 });
        gbc.writeMem(0x87f1, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x365b);
        EXPECT(gbc.pc(), 0x87f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8400), 0x20);
        EXPECT(gbc.readMem(0x87f1), 0xcb);
        EXPECT(gbc.readMem(0x87f2), 0x16);
        // CB 16 0380
        gbc.setState(0x6185, 0xe730, 0xcc70, 0x4bca, 0x1e91, 0xbeb2, 0x0, 0x0);
        gbc.writeMem(0x6185, { 0xcb, 0x16 });
        gbc.writeMem(0xbeb2, { 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xe730);
        EXPECT(gbc.pc(), 0x6187);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeb2), 0xcb);
        // CB 16 0383
        gbc.setState(0x940e, 0x4db7, 0x97f0, 0xca9e, 0xf67e, 0xe507, 0x1, 0x1);
        gbc.writeMem(0x940e, { 0xcb, 0x16 });
        gbc.writeMem(0xe507, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4db7);
        EXPECT(gbc.pc(), 0x9410);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x940e), 0xcb);
        EXPECT(gbc.readMem(0x940f), 0x16);
        EXPECT(gbc.readMem(0xe507), 0xb);
        // CB 16 0387
        gbc.setState(0x4022, 0x857, 0x5b30, 0x4202, 0x71ac, 0xa810, 0x0, 0x0);
        gbc.writeMem(0x4022, { 0xcb, 0x16 });
        gbc.writeMem(0xa810, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x857);
        EXPECT(gbc.pc(), 0x4024);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa810), 0x55);
        // CB 16 0388
        gbc.setState(0x37a9, 0x3508, 0xa2c0, 0x9063, 0xf3d6, 0xa30b, 0x1, 0x0);
        gbc.writeMem(0x37a9, { 0xcb, 0x16 });
        gbc.writeMem(0xa30b, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3508);
        EXPECT(gbc.pc(), 0x37ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa30b), 0xa2);
        // CB 16 038B
        gbc.setState(0x651d, 0xc81d, 0xc580, 0x2165, 0x29fe, 0xb939, 0x1, 0x0);
        gbc.writeMem(0x651d, { 0xcb, 0x16 });
        gbc.writeMem(0xb939, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xc81d);
        EXPECT(gbc.pc(), 0x651f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb939), 0xf6);
        // CB 16 038C
        gbc.setState(0xb678, 0xf4a3, 0x2710, 0x8e6c, 0x9cc2, 0x88bc, 0x0, 0x1);
        gbc.writeMem(0x88bc, { 0xd7 });
        gbc.writeMem(0xb678, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xf4a3);
        EXPECT(gbc.pc(), 0xb67a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88bc), 0xaf);
        EXPECT(gbc.readMem(0xb678), 0xcb);
        EXPECT(gbc.readMem(0xb679), 0x16);
        // CB 16 038D
        gbc.setState(0xb42, 0xa2ea, 0x4600, 0x5a55, 0xffef, 0xf170, 0x1, 0x0);
        gbc.writeMem(0xb42, { 0xcb, 0x16 });
        gbc.writeMem(0xf170, { 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa2ea);
        EXPECT(gbc.pc(), 0xb44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf170), 0x72);
        // CB 16 0390
        gbc.setState(0xeffb, 0x5034, 0xc360, 0x8573, 0x3060, 0x8296, 0x1, 0x1);
        gbc.writeMem(0x8296, { 0xd2 });
        gbc.writeMem(0xeffb, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5034);
        EXPECT(gbc.pc(), 0xeffd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8296), 0xa4);
        EXPECT(gbc.readMem(0xeffb), 0xcb);
        EXPECT(gbc.readMem(0xeffc), 0x16);
        // CB 16 0394
        gbc.setState(0x216b, 0xb9ec, 0xbc30, 0xf833, 0x13f8, 0xf532, 0x0, 0x0);
        gbc.writeMem(0x216b, { 0xcb, 0x16 });
        gbc.writeMem(0xf532, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xb9ec);
        EXPECT(gbc.pc(), 0x216d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf532), 0x59);
        // CB 16 0396
        gbc.setState(0x3f0b, 0xf653, 0xf0c0, 0xe96b, 0xed06, 0x92e1, 0x1, 0x1);
        gbc.writeMem(0x3f0b, { 0xcb, 0x16 });
        gbc.writeMem(0x92e1, { 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xf653);
        EXPECT(gbc.pc(), 0x3f0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92e1), 0x30);
        // CB 16 0397
        gbc.setState(0x254a, 0xc5d, 0xb190, 0xb55f, 0xf166, 0xfa81, 0x1, 0x0);
        gbc.writeMem(0x254a, { 0xcb, 0x16 });
        gbc.writeMem(0xfa81, { 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xc5d);
        EXPECT(gbc.pc(), 0x254c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfa81), 0x27);
        // CB 16 0398
        gbc.setState(0xd126, 0xbf08, 0xbc30, 0x6b62, 0x79d3, 0xd542, 0x1, 0x0);
        gbc.writeMem(0xd126, { 0xcb, 0x16 });
        gbc.writeMem(0xd542, { 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xbf08);
        EXPECT(gbc.pc(), 0xd128);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd126), 0xcb);
        EXPECT(gbc.readMem(0xd127), 0x16);
        EXPECT(gbc.readMem(0xd542), 0xc7);
        // CB 16 0399
        gbc.setState(0xadef, 0x74e5, 0xf3d0, 0xeca0, 0x8690, 0xb059, 0x1, 0x1);
        gbc.writeMem(0xadef, { 0xcb, 0x16 });
        gbc.writeMem(0xb059, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x74e5);
        EXPECT(gbc.pc(), 0xadf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadef), 0xcb);
        EXPECT(gbc.readMem(0xadf0), 0x16);
        EXPECT(gbc.readMem(0xb059), 0xbb);
        // CB 16 039B
        gbc.setState(0x4929, 0x91e7, 0x8f80, 0xfd5b, 0x8140, 0xd777, 0x0, 0x0);
        gbc.writeMem(0x4929, { 0xcb, 0x16 });
        gbc.writeMem(0xd777, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x91e7);
        EXPECT(gbc.pc(), 0x492b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd777), 0xb2);
        // CB 16 039C
        gbc.setState(0xdc2c, 0x5d08, 0xc080, 0x8bc6, 0xf0b5, 0x9681, 0x1, 0x1);
        gbc.writeMem(0x9681, { 0x5 });
        gbc.writeMem(0xdc2c, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x5d08);
        EXPECT(gbc.pc(), 0xdc2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9681), 0xa);
        EXPECT(gbc.readMem(0xdc2c), 0xcb);
        EXPECT(gbc.readMem(0xdc2d), 0x16);
        // CB 16 039E
        gbc.setState(0x722e, 0xbad8, 0x8fe0, 0xe02c, 0x1c18, 0xadcb, 0x0, 0x1);
        gbc.writeMem(0x722e, { 0xcb, 0x16 });
        gbc.writeMem(0xadcb, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xbad8);
        EXPECT(gbc.pc(), 0x7230);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadcb), 0x48);
        // CB 16 039F
        gbc.setState(0x7517, 0x338d, 0x4c50, 0x91ef, 0x353b, 0xe7be, 0x0, 0x1);
        gbc.writeMem(0x7517, { 0xcb, 0x16 });
        gbc.writeMem(0xe7be, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x338d);
        EXPECT(gbc.pc(), 0x7519);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7be), 0x4d);
        // CB 16 03A1
        gbc.setState(0xc230, 0x8e26, 0x5610, 0x7da, 0xffa8, 0xd572, 0x0, 0x0);
        gbc.writeMem(0xc230, { 0xcb, 0x16 });
        gbc.writeMem(0xd572, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8e26);
        EXPECT(gbc.pc(), 0xc232);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc230), 0xcb);
        EXPECT(gbc.readMem(0xc231), 0x16);
        EXPECT(gbc.readMem(0xd572), 0x77);
        // CB 16 03A6
        gbc.setState(0x72b, 0xadc5, 0x4470, 0x5ccd, 0x5f1b, 0xd140, 0x0, 0x1);
        gbc.writeMem(0x72b, { 0xcb, 0x16 });
        gbc.writeMem(0xd140, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xadc5);
        EXPECT(gbc.pc(), 0x72d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd140), 0x63);
        // CB 16 03AA
        gbc.setState(0x14f2, 0xdf4f, 0x6940, 0xb56c, 0xe111, 0xc128, 0x1, 0x0);
        gbc.writeMem(0x14f2, { 0xcb, 0x16 });
        gbc.writeMem(0xc128, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xdf4f);
        EXPECT(gbc.pc(), 0x14f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc128), 0x40);
        // CB 16 03AF
        gbc.setState(0x10ea, 0xac0f, 0x2950, 0x103b, 0xae, 0xa0b2, 0x1, 0x0);
        gbc.writeMem(0x10ea, { 0xcb, 0x16 });
        gbc.writeMem(0xa0b2, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xac0f);
        EXPECT(gbc.pc(), 0x10ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0b2), 0x1);
        // CB 16 03B1
        gbc.setState(0xa776, 0xb0af, 0x6f20, 0x8e3e, 0x4317, 0x8a0e, 0x0, 0x1);
        gbc.writeMem(0x8a0e, { 0x2a });
        gbc.writeMem(0xa776, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xb0af);
        EXPECT(gbc.pc(), 0xa778);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a0e), 0x54);
        EXPECT(gbc.readMem(0xa776), 0xcb);
        EXPECT(gbc.readMem(0xa777), 0x16);
        // CB 16 03B4
        gbc.setState(0xe340, 0xb1fe, 0x1880, 0xb474, 0x2183, 0x9292, 0x0, 0x1);
        gbc.writeMem(0x9292, { 0xa4 });
        gbc.writeMem(0xe340, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xb1fe);
        EXPECT(gbc.pc(), 0xe342);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9292), 0x48);
        EXPECT(gbc.readMem(0xe340), 0xcb);
        EXPECT(gbc.readMem(0xe341), 0x16);
        // CB 16 03B5
        gbc.setState(0x5045, 0xaddf, 0xc490, 0x3b73, 0x3657, 0x996f, 0x0, 0x1);
        gbc.writeMem(0x5045, { 0xcb, 0x16 });
        gbc.writeMem(0x996f, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xaddf);
        EXPECT(gbc.pc(), 0x5047);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x996f), 0xe7);
        // CB 16 03B9
        gbc.setState(0x6c95, 0x18a6, 0xda40, 0x991e, 0xe742, 0x811a, 0x0, 0x1);
        gbc.writeMem(0x6c95, { 0xcb, 0x16 });
        gbc.writeMem(0x811a, { 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x18a6);
        EXPECT(gbc.pc(), 0x6c97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x811a), 0x8);
        // CB 16 03BB
        gbc.setState(0xac49, 0xef03, 0x9d60, 0xb329, 0x29e1, 0xdf02, 0x0, 0x0);
        gbc.writeMem(0xac49, { 0xcb, 0x16 });
        gbc.writeMem(0xdf02, { 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xef03);
        EXPECT(gbc.pc(), 0xac4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac49), 0xcb);
        EXPECT(gbc.readMem(0xac4a), 0x16);
        EXPECT(gbc.readMem(0xdf02), 0x90);
        // CB 16 03C7
        gbc.setState(0x40c1, 0xabba, 0x94f0, 0x6a19, 0x5fe9, 0xa6c5, 0x1, 0x0);
        gbc.writeMem(0x40c1, { 0xcb, 0x16 });
        gbc.writeMem(0xa6c5, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xabba);
        EXPECT(gbc.pc(), 0x40c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6c5), 0x61);
        // CB 16 03C8
        gbc.setState(0x409e, 0xd7d5, 0x5db0, 0xa69c, 0x1381, 0xf342, 0x1, 0x1);
        gbc.writeMem(0x409e, { 0xcb, 0x16 });
        gbc.writeMem(0xf342, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xd7d5);
        EXPECT(gbc.pc(), 0x40a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf342), 0x43);
        // CB 16 03CB
        gbc.setState(0xadd1, 0x5821, 0xff0, 0x3ff9, 0x5f17, 0xe1ea, 0x0, 0x0);
        gbc.writeMem(0xadd1, { 0xcb, 0x16 });
        gbc.writeMem(0xe1ea, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x5821);
        EXPECT(gbc.pc(), 0xadd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadd1), 0xcb);
        EXPECT(gbc.readMem(0xadd2), 0x16);
        EXPECT(gbc.readMem(0xe1ea), 0x67);
        // CB 16 03D0
        gbc.setState(0x81, 0x3cf3, 0x3ea0, 0x83d1, 0x76bb, 0xca83, 0x0, 0x1);
        gbc.writeMem(0x81, { 0xcb, 0x16 });
        gbc.writeMem(0xca83, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3cf3);
        EXPECT(gbc.pc(), 0x83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca83), 0x2c);
        // CB 16 03D3
        gbc.setState(0x44b2, 0x878d, 0xc250, 0x8abb, 0x3a75, 0x8f6f, 0x0, 0x1);
        gbc.writeMem(0x44b2, { 0xcb, 0x16 });
        gbc.writeMem(0x8f6f, { 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x878d);
        EXPECT(gbc.pc(), 0x44b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f6f), 0xa9);
        // CB 16 03D6
        gbc.setState(0x5f81, 0x4b3c, 0x5f30, 0x5e8c, 0x3b46, 0x8539, 0x0, 0x1);
        gbc.writeMem(0x5f81, { 0xcb, 0x16 });
        gbc.writeMem(0x8539, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x4b3c);
        EXPECT(gbc.pc(), 0x5f83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8539), 0xf3);
        // CB 16 03D7
        gbc.setState(0x4d1f, 0x5f69, 0xfb80, 0x7b48, 0x48ef, 0xa78b, 0x0, 0x1);
        gbc.writeMem(0x4d1f, { 0xcb, 0x16 });
        gbc.writeMem(0xa78b, { 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5f69);
        EXPECT(gbc.pc(), 0x4d21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa78b), 0x14);
        // CB 16 03DA
        gbc.setState(0x8660, 0xb7c8, 0x34e0, 0x13fa, 0xa5a3, 0xb40d, 0x1, 0x0);
        gbc.writeMem(0x8660, { 0xcb, 0x16 });
        gbc.writeMem(0xb40d, { 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xb7c8);
        EXPECT(gbc.pc(), 0x8662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8660), 0xcb);
        EXPECT(gbc.readMem(0x8661), 0x16);
        EXPECT(gbc.readMem(0xb40d), 0x44);
        // CB 16 03DB
        gbc.setState(0xc70b, 0x2bda, 0xd160, 0xbc96, 0xb337, 0xb0c6, 0x0, 0x1);
        gbc.writeMem(0xb0c6, { 0x5 });
        gbc.writeMem(0xc70b, { 0xcb, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x2bda);
        EXPECT(gbc.pc(), 0xc70d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0c6), 0xa);
        EXPECT(gbc.readMem(0xc70b), 0xcb);
        EXPECT(gbc.readMem(0xc70c), 0x16);
        // CB 16 03DD
        gbc.setState(0x9be6, 0xa50d, 0x5ab0, 0xb19a, 0x2c7e, 0xab4f, 0x1, 0x1);
        gbc.writeMem(0x9be6, { 0xcb, 0x16 });
        gbc.writeMem(0xab4f, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xa50d);
        EXPECT(gbc.pc(), 0x9be8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9be6), 0xcb);
        EXPECT(gbc.readMem(0x9be7), 0x16);
        EXPECT(gbc.readMem(0xab4f), 0x33);
        // CB 16 03DE
        gbc.setState(0x7ac5, 0xa336, 0x9a90, 0x76cd, 0x2ae3, 0xf4e3, 0x1, 0x0);
        gbc.writeMem(0x7ac5, { 0xcb, 0x16 });
        gbc.writeMem(0xf4e3, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa336);
        EXPECT(gbc.pc(), 0x7ac7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf4e3), 0xf9);
        // CB 16 03E2
        gbc.setState(0xcde1, 0xb8c9, 0x6ae0, 0x91ba, 0x3f48, 0xfd9e, 0x1, 0x0);
        gbc.writeMem(0xcde1, { 0xcb, 0x16 });
        gbc.writeMem(0xfd9e, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xb8c9);
        EXPECT(gbc.pc(), 0xcde3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcde1), 0xcb);
        EXPECT(gbc.readMem(0xcde2), 0x16);
        EXPECT(gbc.readMem(0xfd9e), 0xdc);
        // CB 16 03E5
        gbc.setState(0x6620, 0x48cd, 0x1820, 0xccc5, 0x5acf, 0xb25c, 0x0, 0x1);
        gbc.writeMem(0x6620, { 0xcb, 0x16 });
        gbc.writeMem(0xb25c, { 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x48cd);
        EXPECT(gbc.pc(), 0x6622);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb25c), 0x68);
        // CB 16 03E6
        gbc.setState(0x6bb3, 0xf09b, 0xcbe0, 0x9032, 0x9a1a, 0xa6fa, 0x0, 0x1);
        gbc.writeMem(0x6bb3, { 0xcb, 0x16 });
        gbc.writeMem(0xa6fa, { 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xf09b);
        EXPECT(gbc.pc(), 0x6bb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6fa), 0xa6);
        // CB 16 03E7
        gbc.setState(0x69a0, 0x5a1b, 0x4330, 0xac4c, 0x1be9, 0xf872, 0x1, 0x1);
        gbc.writeMem(0x69a0, { 0xcb, 0x16 });
        gbc.writeMem(0xf872, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5a1b);
        EXPECT(gbc.pc(), 0x69a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf872), 0xe5);
    }
}
#endif
