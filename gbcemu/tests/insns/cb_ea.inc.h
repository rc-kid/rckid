    TEST(gbcemu, opcode_cb_ea) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB EA 0000
        gbc.setState(0xaf7f, 0xc6dc, 0x1f90, 0x568b, 0x2b24, 0xc8ab, 0x0, 0x0);
        gbc.writeMem(0xaf7f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc6dc, gbc.sp());
        EXPECT(0xaf81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf7f));
        EXPECT(0xea, gbc.readMem(0xaf80));
        // CB EA 0001
        gbc.setState(0x3f37, 0x25fc, 0x9800, 0x9183, 0xa36e, 0x1356, 0x0, 0x0);
        gbc.writeMem(0x3f37, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x25fc, gbc.sp());
        EXPECT(0x3f39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0002
        gbc.setState(0xc4a9, 0x4c16, 0x1d90, 0x74c3, 0x7a24, 0x1a6a, 0x0, 0x0);
        gbc.writeMem(0xc4a9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4c16, gbc.sp());
        EXPECT(0xc4ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4a9));
        EXPECT(0xea, gbc.readMem(0xc4aa));
        // CB EA 0003
        gbc.setState(0x8b68, 0x9bc6, 0xe90, 0x6241, 0x249e, 0xeb27, 0x0, 0x0);
        gbc.writeMem(0x8b68, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9bc6, gbc.sp());
        EXPECT(0x8b6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b68));
        EXPECT(0xea, gbc.readMem(0x8b69));
        // CB EA 0004
        gbc.setState(0xc674, 0x1dc8, 0x4f90, 0xd76e, 0xe687, 0x918f, 0x0, 0x0);
        gbc.writeMem(0xc674, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1dc8, gbc.sp());
        EXPECT(0xc676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc674));
        EXPECT(0xea, gbc.readMem(0xc675));
        // CB EA 0005
        gbc.setState(0xe615, 0xb27e, 0xbd60, 0xe592, 0x4462, 0x86c7, 0x0, 0x1);
        gbc.writeMem(0xe615, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb27e, gbc.sp());
        EXPECT(0xe617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe615));
        EXPECT(0xea, gbc.readMem(0xe616));
        // CB EA 0006
        gbc.setState(0xa8b9, 0xb448, 0x33e0, 0x1150, 0xd0f5, 0x8c83, 0x1, 0x0);
        gbc.writeMem(0xa8b9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb448, gbc.sp());
        EXPECT(0xa8bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8b9));
        EXPECT(0xea, gbc.readMem(0xa8ba));
        // CB EA 0007
        gbc.setState(0x3220, 0x8638, 0x1480, 0x30c5, 0xf752, 0xa852, 0x1, 0x0);
        gbc.writeMem(0x3220, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8638, gbc.sp());
        EXPECT(0x3222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0008
        gbc.setState(0xace4, 0xa49d, 0x3700, 0x5723, 0x8cd6, 0x58b6, 0x1, 0x1);
        gbc.writeMem(0xace4, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa49d, gbc.sp());
        EXPECT(0xace6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xace4));
        EXPECT(0xea, gbc.readMem(0xace5));
        // CB EA 0009
        gbc.setState(0x9e0e, 0x111b, 0xe560, 0x1058, 0xe55c, 0x9426, 0x1, 0x1);
        gbc.writeMem(0x9e0e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x111b, gbc.sp());
        EXPECT(0x9e10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e0e));
        EXPECT(0xea, gbc.readMem(0x9e0f));
        // CB EA 000A
        gbc.setState(0x24ec, 0x95cf, 0xc7f0, 0x4549, 0x8af0, 0x27a9, 0x1, 0x1);
        gbc.writeMem(0x24ec, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x95cf, gbc.sp());
        EXPECT(0x24ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 000B
        gbc.setState(0x5032, 0x69c7, 0x9470, 0x7a46, 0x6e51, 0xd904, 0x0, 0x0);
        gbc.writeMem(0x5032, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x69c7, gbc.sp());
        EXPECT(0x5034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 000C
        gbc.setState(0x6160, 0x4fd3, 0x7710, 0xac99, 0xd95b, 0xb0d3, 0x0, 0x1);
        gbc.writeMem(0x6160, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4fd3, gbc.sp());
        EXPECT(0x6162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 000D
        gbc.setState(0x4662, 0xd8d8, 0x6bc0, 0x78ca, 0x9197, 0x8dcc, 0x0, 0x0);
        gbc.writeMem(0x4662, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd8d8, gbc.sp());
        EXPECT(0x4664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 000E
        gbc.setState(0x7852, 0x7748, 0xbb60, 0xf262, 0x1f61, 0x4b28, 0x1, 0x0);
        gbc.writeMem(0x7852, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7748, gbc.sp());
        EXPECT(0x7854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 000F
        gbc.setState(0x3a34, 0x157f, 0xc1b0, 0x4d68, 0xc1e4, 0x501e, 0x0, 0x0);
        gbc.writeMem(0x3a34, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x157f, gbc.sp());
        EXPECT(0x3a36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0010
        gbc.setState(0x809d, 0xa6d7, 0x7e00, 0x88dd, 0x4f37, 0x88f0, 0x0, 0x0);
        gbc.writeMem(0x809d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa6d7, gbc.sp());
        EXPECT(0x809f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x809d));
        EXPECT(0xea, gbc.readMem(0x809e));
        // CB EA 0012
        gbc.setState(0x5390, 0xeb3e, 0xe40, 0x5cbd, 0x5f90, 0xbb78, 0x0, 0x1);
        gbc.writeMem(0x5390, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xeb3e, gbc.sp());
        EXPECT(0x5392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0014
        gbc.setState(0xf2c, 0xe3a4, 0x1840, 0xacea, 0x3c28, 0xa53a, 0x0, 0x1);
        gbc.writeMem(0xf2c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe3a4, gbc.sp());
        EXPECT(0xf2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0016
        gbc.setState(0xcdae, 0x42bd, 0xde40, 0xf979, 0x7a4e, 0x517f, 0x0, 0x0);
        gbc.writeMem(0xcdae, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x42bd, gbc.sp());
        EXPECT(0xcdb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdae));
        EXPECT(0xea, gbc.readMem(0xcdaf));
        // CB EA 0017
        gbc.setState(0x2900, 0xb102, 0x2d40, 0x98eb, 0xb324, 0x5860, 0x0, 0x0);
        gbc.writeMem(0x2900, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb102, gbc.sp());
        EXPECT(0x2902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0018
        gbc.setState(0x7500, 0xd216, 0xf400, 0x6762, 0x83cf, 0x71db, 0x0, 0x1);
        gbc.writeMem(0x7500, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd216, gbc.sp());
        EXPECT(0x7502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0019
        gbc.setState(0xb963, 0x64be, 0xc810, 0x3e29, 0xc523, 0x9949, 0x1, 0x1);
        gbc.writeMem(0xb963, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x64be, gbc.sp());
        EXPECT(0xb965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb963));
        EXPECT(0xea, gbc.readMem(0xb964));
        // CB EA 001A
        gbc.setState(0x3d43, 0x6231, 0x26f0, 0x411e, 0x9dd3, 0x51c3, 0x1, 0x1);
        gbc.writeMem(0x3d43, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6231, gbc.sp());
        EXPECT(0x3d45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 001B
        gbc.setState(0xab20, 0x2471, 0xffa0, 0x5d20, 0x7b4f, 0xc8cf, 0x0, 0x0);
        gbc.writeMem(0xab20, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2471, gbc.sp());
        EXPECT(0xab22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab20));
        EXPECT(0xea, gbc.readMem(0xab21));
        // CB EA 001D
        gbc.setState(0x7f32, 0x2bc7, 0xbc30, 0x7234, 0x4997, 0x6f27, 0x1, 0x0);
        gbc.writeMem(0x7f32, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2bc7, gbc.sp());
        EXPECT(0x7f34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 001E
        gbc.setState(0x80a5, 0x742f, 0xd9c0, 0x3187, 0xe820, 0x3f02, 0x0, 0x0);
        gbc.writeMem(0x80a5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x742f, gbc.sp());
        EXPECT(0x80a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a5));
        EXPECT(0xea, gbc.readMem(0x80a6));
        // CB EA 001F
        gbc.setState(0x9a30, 0x5079, 0x4630, 0x9ac4, 0xb25d, 0x5b9a, 0x1, 0x1);
        gbc.writeMem(0x9a30, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5079, gbc.sp());
        EXPECT(0x9a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a30));
        EXPECT(0xea, gbc.readMem(0x9a31));
        // CB EA 0020
        gbc.setState(0xd372, 0x2def, 0xd660, 0x69e2, 0xd45a, 0xc416, 0x1, 0x0);
        gbc.writeMem(0xd372, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2def, gbc.sp());
        EXPECT(0xd374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd372));
        EXPECT(0xea, gbc.readMem(0xd373));
        // CB EA 0021
        gbc.setState(0x22e, 0x66de, 0x8b70, 0xec43, 0x73c7, 0x9e66, 0x0, 0x0);
        gbc.writeMem(0x22e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x66de, gbc.sp());
        EXPECT(0x230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0022
        gbc.setState(0x40a9, 0x6994, 0xfc00, 0x42a, 0x2df7, 0x5084, 0x1, 0x0);
        gbc.writeMem(0x40a9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6994, gbc.sp());
        EXPECT(0x40ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0023
        gbc.setState(0x3fd7, 0x4a97, 0xa3a0, 0x93f0, 0xeacc, 0x20ba, 0x1, 0x0);
        gbc.writeMem(0x3fd7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4a97, gbc.sp());
        EXPECT(0x3fd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0024
        gbc.setState(0x4752, 0xc6ca, 0xd860, 0xf2fa, 0x8384, 0xf11d, 0x1, 0x1);
        gbc.writeMem(0x4752, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc6ca, gbc.sp());
        EXPECT(0x4754, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0025
        gbc.setState(0x1258, 0xa1e5, 0x6ed0, 0x1ca2, 0x1c0e, 0x6a09, 0x0, 0x1);
        gbc.writeMem(0x1258, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa1e5, gbc.sp());
        EXPECT(0x125a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0026
        gbc.setState(0x2428, 0xbc6b, 0x9160, 0x6f7a, 0x9efa, 0x91de, 0x1, 0x0);
        gbc.writeMem(0x2428, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xbc6b, gbc.sp());
        EXPECT(0x242a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0027
        gbc.setState(0x59ea, 0xc31d, 0x480, 0xdf0f, 0x6c3c, 0x5852, 0x0, 0x0);
        gbc.writeMem(0x59ea, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc31d, gbc.sp());
        EXPECT(0x59ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0028
        gbc.setState(0x9c32, 0x632d, 0x5300, 0x3ea9, 0x5f71, 0xecfc, 0x1, 0x0);
        gbc.writeMem(0x9c32, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x632d, gbc.sp());
        EXPECT(0x9c34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c32));
        EXPECT(0xea, gbc.readMem(0x9c33));
        // CB EA 0029
        gbc.setState(0xa4c5, 0xa196, 0xbe30, 0xa99c, 0x7772, 0x728a, 0x1, 0x0);
        gbc.writeMem(0xa4c5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa196, gbc.sp());
        EXPECT(0xa4c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4c5));
        EXPECT(0xea, gbc.readMem(0xa4c6));
        // CB EA 002A
        gbc.setState(0xb17b, 0x9ec6, 0x9a0, 0xf084, 0xdd15, 0x971, 0x1, 0x1);
        gbc.writeMem(0xb17b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9ec6, gbc.sp());
        EXPECT(0xb17d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb17b));
        EXPECT(0xea, gbc.readMem(0xb17c));
        // CB EA 002B
        gbc.setState(0x8573, 0x7e9d, 0xd840, 0x85ef, 0x7ee5, 0xc1e5, 0x1, 0x0);
        gbc.writeMem(0x8573, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7e9d, gbc.sp());
        EXPECT(0x8575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8573));
        EXPECT(0xea, gbc.readMem(0x8574));
        // CB EA 002C
        gbc.setState(0x9747, 0xa4dd, 0x6010, 0x53dd, 0x53c2, 0xd541, 0x0, 0x0);
        gbc.writeMem(0x9747, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa4dd, gbc.sp());
        EXPECT(0x9749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9747));
        EXPECT(0xea, gbc.readMem(0x9748));
        // CB EA 002E
        gbc.setState(0x4ad4, 0x2324, 0x4130, 0xedc8, 0xeb85, 0xb820, 0x1, 0x0);
        gbc.writeMem(0x4ad4, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2324, gbc.sp());
        EXPECT(0x4ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 002F
        gbc.setState(0xcdf5, 0xdd1c, 0x1190, 0x9f7e, 0x5e1f, 0xa4f6, 0x1, 0x1);
        gbc.writeMem(0xcdf5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xdd1c, gbc.sp());
        EXPECT(0xcdf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdf5));
        EXPECT(0xea, gbc.readMem(0xcdf6));
        // CB EA 0030
        gbc.setState(0x46f9, 0x90b1, 0x6a40, 0x4985, 0x66d5, 0xb155, 0x0, 0x0);
        gbc.writeMem(0x46f9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x90b1, gbc.sp());
        EXPECT(0x46fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0031
        gbc.setState(0x6044, 0x3194, 0x64a0, 0xbe22, 0x60c1, 0x28fb, 0x0, 0x1);
        gbc.writeMem(0x6044, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3194, gbc.sp());
        EXPECT(0x6046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0032
        gbc.setState(0x905f, 0xea1e, 0x7f60, 0xe5ad, 0x65d2, 0xabd, 0x1, 0x1);
        gbc.writeMem(0x905f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xea1e, gbc.sp());
        EXPECT(0x9061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x905f));
        EXPECT(0xea, gbc.readMem(0x9060));
        // CB EA 0033
        gbc.setState(0x668a, 0x6435, 0x4500, 0xd4f, 0xe65f, 0xd7c3, 0x0, 0x0);
        gbc.writeMem(0x668a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6435, gbc.sp());
        EXPECT(0x668c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0034
        gbc.setState(0xefd, 0x677b, 0x11a0, 0x5bf8, 0xbcc9, 0x3150, 0x0, 0x0);
        gbc.writeMem(0xefd, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x677b, gbc.sp());
        EXPECT(0xeff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0035
        gbc.setState(0x28c7, 0x4ed3, 0x6f30, 0x1fb, 0xbd89, 0xbe61, 0x1, 0x0);
        gbc.writeMem(0x28c7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4ed3, gbc.sp());
        EXPECT(0x28c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0036
        gbc.setState(0x2db3, 0xf588, 0xd700, 0x3acf, 0x6e57, 0x71de, 0x1, 0x0);
        gbc.writeMem(0x2db3, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf588, gbc.sp());
        EXPECT(0x2db5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0037
        gbc.setState(0x4896, 0x62d9, 0x16e0, 0x41a2, 0xb591, 0x9418, 0x0, 0x1);
        gbc.writeMem(0x4896, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x62d9, gbc.sp());
        EXPECT(0x4898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0038
        gbc.setState(0x1f0e, 0x60bf, 0x6000, 0xb651, 0xe6cd, 0x71e2, 0x0, 0x0);
        gbc.writeMem(0x1f0e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x60bf, gbc.sp());
        EXPECT(0x1f10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0039
        gbc.setState(0x83a, 0xbbee, 0x6bf0, 0x4c73, 0xf1ca, 0xfdf1, 0x0, 0x1);
        gbc.writeMem(0x83a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbbee, gbc.sp());
        EXPECT(0x83c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 003A
        gbc.setState(0x4f2d, 0x723, 0xa4e0, 0xc00d, 0xb4c4, 0xc30c, 0x1, 0x0);
        gbc.writeMem(0x4f2d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x723, gbc.sp());
        EXPECT(0x4f2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 003B
        gbc.setState(0xed6, 0x86a5, 0xda80, 0x60e5, 0x1182, 0xe7c3, 0x1, 0x0);
        gbc.writeMem(0xed6, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x86a5, gbc.sp());
        EXPECT(0xed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 003C
        gbc.setState(0xd054, 0x3d7e, 0xc0, 0x71c1, 0x315b, 0xe2df, 0x0, 0x0);
        gbc.writeMem(0xd054, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3d7e, gbc.sp());
        EXPECT(0xd056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd054));
        EXPECT(0xea, gbc.readMem(0xd055));
        // CB EA 003E
        gbc.setState(0xeb61, 0x74a1, 0x5f00, 0xfd19, 0xe254, 0xc012, 0x0, 0x1);
        gbc.writeMem(0xeb61, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x74a1, gbc.sp());
        EXPECT(0xeb63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb61));
        EXPECT(0xea, gbc.readMem(0xeb62));
        // CB EA 003F
        gbc.setState(0x668, 0x1b2d, 0xb830, 0x7e39, 0xdb38, 0x9d46, 0x1, 0x0);
        gbc.writeMem(0x668, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1b2d, gbc.sp());
        EXPECT(0x66a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0040
        gbc.setState(0xda1a, 0xd747, 0x39c0, 0x8ec, 0xd4e7, 0x3371, 0x1, 0x1);
        gbc.writeMem(0xda1a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd747, gbc.sp());
        EXPECT(0xda1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda1a));
        EXPECT(0xea, gbc.readMem(0xda1b));
        // CB EA 0041
        gbc.setState(0x47d5, 0xbf25, 0x130, 0x35cd, 0xc589, 0xfcaf, 0x1, 0x0);
        gbc.writeMem(0x47d5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbf25, gbc.sp());
        EXPECT(0x47d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0042
        gbc.setState(0xc986, 0x5c45, 0xe5c0, 0x7892, 0xc26d, 0xf89e, 0x0, 0x0);
        gbc.writeMem(0xc986, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5c45, gbc.sp());
        EXPECT(0xc988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc986));
        EXPECT(0xea, gbc.readMem(0xc987));
        // CB EA 0043
        gbc.setState(0xca15, 0xa348, 0x39d0, 0xe989, 0xbc43, 0x316a, 0x1, 0x1);
        gbc.writeMem(0xca15, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa348, gbc.sp());
        EXPECT(0xca17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca15));
        EXPECT(0xea, gbc.readMem(0xca16));
        // CB EA 0044
        gbc.setState(0xee6f, 0x462b, 0x5a40, 0x36c2, 0xfbf0, 0x1602, 0x0, 0x1);
        gbc.writeMem(0xee6f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x462b, gbc.sp());
        EXPECT(0xee71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee6f));
        EXPECT(0xea, gbc.readMem(0xee70));
        // CB EA 0045
        gbc.setState(0x2cf3, 0x7b4, 0x8b0, 0x245f, 0xfc63, 0x8a7a, 0x1, 0x0);
        gbc.writeMem(0x2cf3, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7b4, gbc.sp());
        EXPECT(0x2cf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0046
        gbc.setState(0x486a, 0xb01d, 0xf290, 0x1a0, 0x46a7, 0x5db6, 0x0, 0x0);
        gbc.writeMem(0x486a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb01d, gbc.sp());
        EXPECT(0x486c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0047
        gbc.setState(0xb235, 0x8cf2, 0xbab0, 0xdd88, 0x65e7, 0x64f3, 0x0, 0x0);
        gbc.writeMem(0xb235, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8cf2, gbc.sp());
        EXPECT(0xb237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb235));
        EXPECT(0xea, gbc.readMem(0xb236));
        // CB EA 0048
        gbc.setState(0x6705, 0x65a, 0x1920, 0x9fb3, 0x3ab, 0x64e, 0x1, 0x1);
        gbc.writeMem(0x6705, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x65a, gbc.sp());
        EXPECT(0x6707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0049
        gbc.setState(0xe312, 0x3714, 0x1930, 0xf9d1, 0x6825, 0x65f5, 0x0, 0x1);
        gbc.writeMem(0xe312, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3714, gbc.sp());
        EXPECT(0xe314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe312));
        EXPECT(0xea, gbc.readMem(0xe313));
        // CB EA 004A
        gbc.setState(0x12e5, 0xf466, 0x5630, 0xf1de, 0x218d, 0x4ee1, 0x0, 0x1);
        gbc.writeMem(0x12e5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf466, gbc.sp());
        EXPECT(0x12e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 004B
        gbc.setState(0x772b, 0xed7d, 0xd540, 0x9c8e, 0xc1d2, 0xcb19, 0x0, 0x0);
        gbc.writeMem(0x772b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xed7d, gbc.sp());
        EXPECT(0x772d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 004C
        gbc.setState(0x4dae, 0xb83e, 0x1d50, 0x4361, 0xad57, 0xe734, 0x1, 0x0);
        gbc.writeMem(0x4dae, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb83e, gbc.sp());
        EXPECT(0x4db0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 004D
        gbc.setState(0x9233, 0xd811, 0x1920, 0x7427, 0xbfec, 0x2432, 0x1, 0x0);
        gbc.writeMem(0x9233, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd811, gbc.sp());
        EXPECT(0x9235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9233));
        EXPECT(0xea, gbc.readMem(0x9234));
        // CB EA 004E
        gbc.setState(0xd6dc, 0xb8e7, 0x9420, 0xd8a3, 0x7c5d, 0x79fb, 0x1, 0x1);
        gbc.writeMem(0xd6dc, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb8e7, gbc.sp());
        EXPECT(0xd6de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6dc));
        EXPECT(0xea, gbc.readMem(0xd6dd));
        // CB EA 004F
        gbc.setState(0xa63a, 0xb29a, 0xa800, 0x9297, 0xf90e, 0x4180, 0x0, 0x0);
        gbc.writeMem(0xa63a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb29a, gbc.sp());
        EXPECT(0xa63c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa63a));
        EXPECT(0xea, gbc.readMem(0xa63b));
        // CB EA 0050
        gbc.setState(0x9d99, 0xf946, 0xa210, 0xd1b7, 0xf930, 0xd5d1, 0x0, 0x1);
        gbc.writeMem(0x9d99, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf946, gbc.sp());
        EXPECT(0x9d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d99));
        EXPECT(0xea, gbc.readMem(0x9d9a));
        // CB EA 0051
        gbc.setState(0xe958, 0x6bca, 0x8460, 0xcd7, 0x9e0, 0x2d0e, 0x0, 0x1);
        gbc.writeMem(0xe958, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6bca, gbc.sp());
        EXPECT(0xe95a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe958));
        EXPECT(0xea, gbc.readMem(0xe959));
        // CB EA 0052
        gbc.setState(0x51a2, 0xcd38, 0xa590, 0x5717, 0xb506, 0x88a8, 0x1, 0x0);
        gbc.writeMem(0x51a2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xcd38, gbc.sp());
        EXPECT(0x51a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0053
        gbc.setState(0xb454, 0xca2e, 0x1ee0, 0x803, 0x136a, 0x8f20, 0x1, 0x0);
        gbc.writeMem(0xb454, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xca2e, gbc.sp());
        EXPECT(0xb456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb454));
        EXPECT(0xea, gbc.readMem(0xb455));
        // CB EA 0054
        gbc.setState(0x579d, 0x5200, 0x85d0, 0x710f, 0x9052, 0xa531, 0x0, 0x1);
        gbc.writeMem(0x579d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5200, gbc.sp());
        EXPECT(0x579f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0055
        gbc.setState(0x1ed3, 0xf606, 0x9250, 0x8abb, 0xb4e0, 0xf08f, 0x1, 0x1);
        gbc.writeMem(0x1ed3, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf606, gbc.sp());
        EXPECT(0x1ed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0056
        gbc.setState(0x244d, 0x1633, 0x4040, 0x9e5c, 0x1dae, 0x468c, 0x0, 0x0);
        gbc.writeMem(0x244d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1633, gbc.sp());
        EXPECT(0x244f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0057
        gbc.setState(0x23ef, 0x1497, 0x8720, 0x1d44, 0x6ff9, 0x7968, 0x1, 0x1);
        gbc.writeMem(0x23ef, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1497, gbc.sp());
        EXPECT(0x23f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0058
        gbc.setState(0x4cf5, 0xcf5b, 0x9710, 0x36c, 0x965e, 0x31fd, 0x1, 0x0);
        gbc.writeMem(0x4cf5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcf5b, gbc.sp());
        EXPECT(0x4cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0059
        gbc.setState(0x72ff, 0x90ea, 0xc810, 0xd95d, 0xe79, 0x5d1f, 0x0, 0x0);
        gbc.writeMem(0x72ff, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x90ea, gbc.sp());
        EXPECT(0x7301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 005B
        gbc.setState(0x7ec0, 0x660c, 0x41b0, 0xf4ff, 0xca98, 0x9bbd, 0x1, 0x1);
        gbc.writeMem(0x7ec0, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x660c, gbc.sp());
        EXPECT(0x7ec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 005C
        gbc.setState(0x9294, 0xc81b, 0x6ab0, 0x976f, 0x79b0, 0x958a, 0x1, 0x0);
        gbc.writeMem(0x9294, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc81b, gbc.sp());
        EXPECT(0x9296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9294));
        EXPECT(0xea, gbc.readMem(0x9295));
        // CB EA 005D
        gbc.setState(0xaada, 0x5223, 0x8850, 0xbc05, 0x6b5a, 0xcb37, 0x0, 0x1);
        gbc.writeMem(0xaada, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5223, gbc.sp());
        EXPECT(0xaadc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaada));
        EXPECT(0xea, gbc.readMem(0xaadb));
        // CB EA 005E
        gbc.setState(0x8740, 0x1512, 0xe0c0, 0x499, 0xc49f, 0xbecf, 0x0, 0x1);
        gbc.writeMem(0x8740, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1512, gbc.sp());
        EXPECT(0x8742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8740));
        EXPECT(0xea, gbc.readMem(0x8741));
        // CB EA 005F
        gbc.setState(0x385, 0xa3d1, 0xeaf0, 0x1f51, 0x26e3, 0x8579, 0x0, 0x1);
        gbc.writeMem(0x385, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa3d1, gbc.sp());
        EXPECT(0x387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0060
        gbc.setState(0xef34, 0xd11a, 0x8e00, 0x9c15, 0x41a0, 0x44eb, 0x0, 0x0);
        gbc.writeMem(0xef34, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd11a, gbc.sp());
        EXPECT(0xef36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef34));
        EXPECT(0xea, gbc.readMem(0xef35));
        // CB EA 0061
        gbc.setState(0x68b7, 0x259, 0xdd80, 0xf060, 0x7f5d, 0xcd36, 0x1, 0x0);
        gbc.writeMem(0x68b7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x259, gbc.sp());
        EXPECT(0x68b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0062
        gbc.setState(0x777c, 0xf07e, 0x4990, 0x453e, 0xb4a2, 0xde8e, 0x1, 0x0);
        gbc.writeMem(0x777c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf07e, gbc.sp());
        EXPECT(0x777e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0063
        gbc.setState(0x4675, 0xb7b6, 0x6000, 0x93ec, 0x5a31, 0xe1ed, 0x1, 0x1);
        gbc.writeMem(0x4675, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb7b6, gbc.sp());
        EXPECT(0x4677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0065
        gbc.setState(0x5b4c, 0x4642, 0x96e0, 0x1bbd, 0xca8a, 0x968d, 0x1, 0x0);
        gbc.writeMem(0x5b4c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4642, gbc.sp());
        EXPECT(0x5b4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0066
        gbc.setState(0xb455, 0x1844, 0x6600, 0x8320, 0xeb7e, 0x74b5, 0x0, 0x0);
        gbc.writeMem(0xb455, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1844, gbc.sp());
        EXPECT(0xb457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb455));
        EXPECT(0xea, gbc.readMem(0xb456));
        // CB EA 0067
        gbc.setState(0x279e, 0xfba1, 0x9ef0, 0xcb8, 0xd586, 0xfebe, 0x1, 0x1);
        gbc.writeMem(0x279e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xfba1, gbc.sp());
        EXPECT(0x27a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0068
        gbc.setState(0x7b81, 0xbf39, 0x65a0, 0x284, 0xd9d4, 0xf57a, 0x1, 0x1);
        gbc.writeMem(0x7b81, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xbf39, gbc.sp());
        EXPECT(0x7b83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0069
        gbc.setState(0x68b8, 0x3f58, 0xf670, 0x6372, 0xa718, 0x6ab9, 0x1, 0x1);
        gbc.writeMem(0x68b8, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3f58, gbc.sp());
        EXPECT(0x68ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 006A
        gbc.setState(0x74d6, 0xde56, 0x7f30, 0xdc20, 0x6302, 0xf76, 0x0, 0x0);
        gbc.writeMem(0x74d6, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xde56, gbc.sp());
        EXPECT(0x74d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 006B
        gbc.setState(0x7feb, 0xb4a4, 0xcfd0, 0xdc7c, 0x96f, 0x6eb2, 0x1, 0x0);
        gbc.writeMem(0x7feb, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb4a4, gbc.sp());
        EXPECT(0x7fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 006C
        gbc.setState(0x8251, 0x35b0, 0xfe50, 0xf1b3, 0xcea8, 0x1662, 0x1, 0x0);
        gbc.writeMem(0x8251, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x35b0, gbc.sp());
        EXPECT(0x8253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8251));
        EXPECT(0xea, gbc.readMem(0x8252));
        // CB EA 006D
        gbc.setState(0x4f2f, 0xcd55, 0xe860, 0xecbc, 0xd322, 0xfdf5, 0x1, 0x1);
        gbc.writeMem(0x4f2f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcd55, gbc.sp());
        EXPECT(0x4f31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 006E
        gbc.setState(0x1e12, 0xb810, 0x1b70, 0xaec9, 0xfd37, 0x9e25, 0x1, 0x1);
        gbc.writeMem(0x1e12, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb810, gbc.sp());
        EXPECT(0x1e14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 006F
        gbc.setState(0x677d, 0xd247, 0xa60, 0x9e29, 0x9d58, 0x3bb6, 0x1, 0x0);
        gbc.writeMem(0x677d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd247, gbc.sp());
        EXPECT(0x677f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0070
        gbc.setState(0xdf81, 0x3a6f, 0x7e70, 0x22f3, 0x543b, 0x2211, 0x0, 0x1);
        gbc.writeMem(0xdf81, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3a6f, gbc.sp());
        EXPECT(0xdf83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf81));
        EXPECT(0xea, gbc.readMem(0xdf82));
        // CB EA 0071
        gbc.setState(0x3255, 0x8d28, 0x5780, 0x76, 0x7a7f, 0xfee, 0x1, 0x1);
        gbc.writeMem(0x3255, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8d28, gbc.sp());
        EXPECT(0x3257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0072
        gbc.setState(0x80e3, 0x57da, 0x9cb0, 0x91c1, 0x16b8, 0xd28f, 0x1, 0x0);
        gbc.writeMem(0x80e3, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x57da, gbc.sp());
        EXPECT(0x80e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e3));
        EXPECT(0xea, gbc.readMem(0x80e4));
        // CB EA 0073
        gbc.setState(0x3d3c, 0x5893, 0x8480, 0x6618, 0xdc71, 0x9cbf, 0x1, 0x1);
        gbc.writeMem(0x3d3c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5893, gbc.sp());
        EXPECT(0x3d3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0074
        gbc.setState(0xee52, 0xda25, 0xb250, 0xb445, 0xeb1d, 0x710d, 0x0, 0x1);
        gbc.writeMem(0xee52, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xda25, gbc.sp());
        EXPECT(0xee54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee52));
        EXPECT(0xea, gbc.readMem(0xee53));
        // CB EA 0075
        gbc.setState(0xe042, 0xc3c1, 0x46b0, 0xd46c, 0x6671, 0x8096, 0x1, 0x1);
        gbc.writeMem(0xe042, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc3c1, gbc.sp());
        EXPECT(0xe044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe042));
        EXPECT(0xea, gbc.readMem(0xe043));
        // CB EA 0076
        gbc.setState(0x4cb0, 0x1eb5, 0x50, 0x36cf, 0xf1f1, 0x4166, 0x1, 0x0);
        gbc.writeMem(0x4cb0, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1eb5, gbc.sp());
        EXPECT(0x4cb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0077
        gbc.setState(0xad54, 0x9787, 0x35a0, 0x8951, 0x49e7, 0x4e44, 0x1, 0x0);
        gbc.writeMem(0xad54, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9787, gbc.sp());
        EXPECT(0xad56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad54));
        EXPECT(0xea, gbc.readMem(0xad55));
        // CB EA 0078
        gbc.setState(0x748c, 0x94f2, 0x7af0, 0xd084, 0x5137, 0x3592, 0x0, 0x1);
        gbc.writeMem(0x748c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x94f2, gbc.sp());
        EXPECT(0x748e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0079
        gbc.setState(0xa5fe, 0xbcd, 0x2290, 0xbcc8, 0x7e11, 0x5b5e, 0x0, 0x0);
        gbc.writeMem(0xa5fe, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbcd, gbc.sp());
        EXPECT(0xa600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5fe));
        EXPECT(0xea, gbc.readMem(0xa5ff));
        // CB EA 007A
        gbc.setState(0xa2e3, 0x1a6d, 0x4230, 0x9d06, 0x3647, 0xbbff, 0x1, 0x0);
        gbc.writeMem(0xa2e3, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1a6d, gbc.sp());
        EXPECT(0xa2e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2e3));
        EXPECT(0xea, gbc.readMem(0xa2e4));
        // CB EA 007B
        gbc.setState(0xe590, 0xe714, 0xa0d0, 0x43b2, 0xc2ac, 0x36ae, 0x0, 0x0);
        gbc.writeMem(0xe590, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe714, gbc.sp());
        EXPECT(0xe592, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe590));
        EXPECT(0xea, gbc.readMem(0xe591));
        // CB EA 007C
        gbc.setState(0x452d, 0xddec, 0x3a70, 0xcdbb, 0x5902, 0x5e98, 0x0, 0x0);
        gbc.writeMem(0x452d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xddec, gbc.sp());
        EXPECT(0x452f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 007D
        gbc.setState(0x68ba, 0x8dda, 0xfba0, 0x5102, 0x9173, 0xe92c, 0x0, 0x1);
        gbc.writeMem(0x68ba, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8dda, gbc.sp());
        EXPECT(0x68bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 007E
        gbc.setState(0x10eb, 0xf1ab, 0xcbf0, 0x3ddd, 0x5775, 0x7d6b, 0x1, 0x0);
        gbc.writeMem(0x10eb, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf1ab, gbc.sp());
        EXPECT(0x10ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 007F
        gbc.setState(0x1a6d, 0xd110, 0xe080, 0xeb71, 0xd40c, 0xb629, 0x1, 0x0);
        gbc.writeMem(0x1a6d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd110, gbc.sp());
        EXPECT(0x1a6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0080
        gbc.setState(0xd523, 0x6bb2, 0x53e0, 0x3f45, 0x7db1, 0x2ac1, 0x1, 0x1);
        gbc.writeMem(0xd523, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6bb2, gbc.sp());
        EXPECT(0xd525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd523));
        EXPECT(0xea, gbc.readMem(0xd524));
        // CB EA 0081
        gbc.setState(0x3577, 0xa20f, 0xafe0, 0x26db, 0x9f87, 0xb51, 0x1, 0x1);
        gbc.writeMem(0x3577, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa20f, gbc.sp());
        EXPECT(0x3579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0082
        gbc.setState(0x6eef, 0x6def, 0x4d50, 0x3dd0, 0x67f2, 0xb7a3, 0x1, 0x0);
        gbc.writeMem(0x6eef, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6def, gbc.sp());
        EXPECT(0x6ef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0083
        gbc.setState(0x8e64, 0xd6cf, 0x3b30, 0x5423, 0xccc7, 0xe666, 0x0, 0x1);
        gbc.writeMem(0x8e64, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd6cf, gbc.sp());
        EXPECT(0x8e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e64));
        EXPECT(0xea, gbc.readMem(0x8e65));
        // CB EA 0084
        gbc.setState(0x6e92, 0x8f1f, 0x1590, 0x492b, 0x3812, 0xc5eb, 0x1, 0x0);
        gbc.writeMem(0x6e92, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8f1f, gbc.sp());
        EXPECT(0x6e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0085
        gbc.setState(0xeecd, 0xaa34, 0xdad0, 0x1aa8, 0xebd5, 0x7de0, 0x0, 0x0);
        gbc.writeMem(0xeecd, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xaa34, gbc.sp());
        EXPECT(0xeecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeecd));
        EXPECT(0xea, gbc.readMem(0xeece));
        // CB EA 0086
        gbc.setState(0x3da3, 0x9395, 0x4d20, 0xd922, 0x6a5b, 0x5d40, 0x1, 0x0);
        gbc.writeMem(0x3da3, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9395, gbc.sp());
        EXPECT(0x3da5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0087
        gbc.setState(0xbe1e, 0xf78c, 0xd100, 0xfdfb, 0xc01c, 0xa211, 0x1, 0x1);
        gbc.writeMem(0xbe1e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf78c, gbc.sp());
        EXPECT(0xbe20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe1e));
        EXPECT(0xea, gbc.readMem(0xbe1f));
        // CB EA 0088
        gbc.setState(0xbf, 0x154c, 0x1420, 0x375a, 0x3aa1, 0xf857, 0x0, 0x0);
        gbc.writeMem(0xbf, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x154c, gbc.sp());
        EXPECT(0xc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0089
        gbc.setState(0xd68e, 0x57d4, 0x4a40, 0x3f3b, 0xf0fe, 0xbc7f, 0x0, 0x1);
        gbc.writeMem(0xd68e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x57d4, gbc.sp());
        EXPECT(0xd690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd68e));
        EXPECT(0xea, gbc.readMem(0xd68f));
        // CB EA 008A
        gbc.setState(0x28c5, 0x4cfb, 0xd140, 0x926, 0x326a, 0x7fe, 0x0, 0x1);
        gbc.writeMem(0x28c5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4cfb, gbc.sp());
        EXPECT(0x28c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 008B
        gbc.setState(0x4174, 0x5a9, 0x8660, 0x57b3, 0xd67c, 0xa858, 0x0, 0x1);
        gbc.writeMem(0x4174, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5a9, gbc.sp());
        EXPECT(0x4176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 008C
        gbc.setState(0xe316, 0x91da, 0xb930, 0x9b22, 0xaa1e, 0xc49d, 0x0, 0x1);
        gbc.writeMem(0xe316, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x91da, gbc.sp());
        EXPECT(0xe318, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe316));
        EXPECT(0xea, gbc.readMem(0xe317));
        // CB EA 008D
        gbc.setState(0xcd0, 0xbe22, 0xbbd0, 0xe2f3, 0xc926, 0xa03a, 0x0, 0x0);
        gbc.writeMem(0xcd0, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xbe22, gbc.sp());
        EXPECT(0xcd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 008E
        gbc.setState(0x3086, 0x359f, 0x6e50, 0x57e3, 0x7dc8, 0x110d, 0x1, 0x1);
        gbc.writeMem(0x3086, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x359f, gbc.sp());
        EXPECT(0x3088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 008F
        gbc.setState(0x7307, 0xee77, 0x6a60, 0xd741, 0x2b79, 0x52cf, 0x1, 0x1);
        gbc.writeMem(0x7307, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xee77, gbc.sp());
        EXPECT(0x7309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0090
        gbc.setState(0x1f8d, 0x56af, 0xe860, 0xf793, 0x14c3, 0xc686, 0x0, 0x0);
        gbc.writeMem(0x1f8d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x56af, gbc.sp());
        EXPECT(0x1f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0091
        gbc.setState(0xb6eb, 0x288a, 0x4710, 0x9a6f, 0x4874, 0xe031, 0x0, 0x0);
        gbc.writeMem(0xb6eb, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x288a, gbc.sp());
        EXPECT(0xb6ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6eb));
        EXPECT(0xea, gbc.readMem(0xb6ec));
        // CB EA 0092
        gbc.setState(0xef42, 0x2208, 0xee70, 0xdde7, 0xc37a, 0x4cd2, 0x0, 0x1);
        gbc.writeMem(0xef42, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2208, gbc.sp());
        EXPECT(0xef44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef42));
        EXPECT(0xea, gbc.readMem(0xef43));
        // CB EA 0095
        gbc.setState(0x7572, 0x3bc8, 0x12d0, 0x7e0d, 0x7833, 0xaf69, 0x1, 0x1);
        gbc.writeMem(0x7572, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3bc8, gbc.sp());
        EXPECT(0x7574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0096
        gbc.setState(0xdaf5, 0xba0f, 0xcb70, 0xe5d3, 0x5811, 0x6516, 0x0, 0x0);
        gbc.writeMem(0xdaf5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xba0f, gbc.sp());
        EXPECT(0xdaf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaf5));
        EXPECT(0xea, gbc.readMem(0xdaf6));
        // CB EA 0097
        gbc.setState(0xe48c, 0xe039, 0x3f80, 0xec9f, 0x5788, 0x3a5, 0x1, 0x1);
        gbc.writeMem(0xe48c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe039, gbc.sp());
        EXPECT(0xe48e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe48c));
        EXPECT(0xea, gbc.readMem(0xe48d));
        // CB EA 0098
        gbc.setState(0xbe90, 0x717d, 0x4ea0, 0xa515, 0xfd79, 0x31b0, 0x0, 0x1);
        gbc.writeMem(0xbe90, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x717d, gbc.sp());
        EXPECT(0xbe92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe90));
        EXPECT(0xea, gbc.readMem(0xbe91));
        // CB EA 009A
        gbc.setState(0x1903, 0xe40f, 0x4e60, 0xd52e, 0x2895, 0x84cf, 0x1, 0x0);
        gbc.writeMem(0x1903, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe40f, gbc.sp());
        EXPECT(0x1905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 009B
        gbc.setState(0xbda8, 0x522f, 0x7370, 0x5927, 0x4677, 0x5cc7, 0x1, 0x0);
        gbc.writeMem(0xbda8, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x522f, gbc.sp());
        EXPECT(0xbdaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbda8));
        EXPECT(0xea, gbc.readMem(0xbda9));
        // CB EA 009C
        gbc.setState(0x3a24, 0xadb9, 0x1290, 0xf2b3, 0xf3f0, 0x1261, 0x0, 0x0);
        gbc.writeMem(0x3a24, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xadb9, gbc.sp());
        EXPECT(0x3a26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 009D
        gbc.setState(0x3773, 0x5320, 0x3910, 0xfdaf, 0x3a97, 0x62a2, 0x1, 0x1);
        gbc.writeMem(0x3773, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5320, gbc.sp());
        EXPECT(0x3775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 009E
        gbc.setState(0xc0ec, 0xe40, 0x1230, 0xf5aa, 0xd0fc, 0x57c, 0x1, 0x1);
        gbc.writeMem(0xc0ec, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe40, gbc.sp());
        EXPECT(0xc0ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ec));
        EXPECT(0xea, gbc.readMem(0xc0ed));
        // CB EA 009F
        gbc.setState(0xd6bb, 0x3aa0, 0x83c0, 0x8488, 0x526a, 0x206d, 0x1, 0x0);
        gbc.writeMem(0xd6bb, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3aa0, gbc.sp());
        EXPECT(0xd6bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6bb));
        EXPECT(0xea, gbc.readMem(0xd6bc));
        // CB EA 00A2
        gbc.setState(0x305b, 0x9224, 0x9bc0, 0xba8f, 0x6f34, 0x9b5d, 0x0, 0x0);
        gbc.writeMem(0x305b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9224, gbc.sp());
        EXPECT(0x305d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 00A3
        gbc.setState(0x4f8, 0x9745, 0xe770, 0x2edd, 0xa135, 0x8dc2, 0x0, 0x0);
        gbc.writeMem(0x4f8, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9745, gbc.sp());
        EXPECT(0x4fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00A4
        gbc.setState(0x647d, 0x1f5c, 0xe0d0, 0xb4d0, 0x5d64, 0xda8b, 0x1, 0x1);
        gbc.writeMem(0x647d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1f5c, gbc.sp());
        EXPECT(0x647f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00A5
        gbc.setState(0x8ac5, 0x55f3, 0x3e60, 0xf43, 0x7f1d, 0xe793, 0x1, 0x0);
        gbc.writeMem(0x8ac5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x55f3, gbc.sp());
        EXPECT(0x8ac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac5));
        EXPECT(0xea, gbc.readMem(0x8ac6));
        // CB EA 00A6
        gbc.setState(0x52e7, 0xb66e, 0xbc70, 0x109a, 0xf58d, 0xb765, 0x1, 0x1);
        gbc.writeMem(0x52e7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb66e, gbc.sp());
        EXPECT(0x52e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00A7
        gbc.setState(0xd23c, 0xd01, 0xff40, 0xa534, 0x84ed, 0x42af, 0x0, 0x1);
        gbc.writeMem(0xd23c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd01, gbc.sp());
        EXPECT(0xd23e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd23c));
        EXPECT(0xea, gbc.readMem(0xd23d));
        // CB EA 00A8
        gbc.setState(0xa35a, 0xf3c, 0x5de0, 0x92f, 0x7444, 0xd6f, 0x1, 0x1);
        gbc.writeMem(0xa35a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf3c, gbc.sp());
        EXPECT(0xa35c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa35a));
        EXPECT(0xea, gbc.readMem(0xa35b));
        // CB EA 00A9
        gbc.setState(0x95d3, 0xe2b9, 0xd280, 0x36b4, 0x2ff7, 0x9143, 0x1, 0x0);
        gbc.writeMem(0x95d3, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe2b9, gbc.sp());
        EXPECT(0x95d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95d3));
        EXPECT(0xea, gbc.readMem(0x95d4));
        // CB EA 00AA
        gbc.setState(0x1903, 0x7a2a, 0xd260, 0xbdb3, 0x773d, 0x1d70, 0x0, 0x1);
        gbc.writeMem(0x1903, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7a2a, gbc.sp());
        EXPECT(0x1905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 00AB
        gbc.setState(0xab63, 0xecd9, 0x3210, 0xf01, 0xd583, 0xac40, 0x0, 0x1);
        gbc.writeMem(0xab63, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xecd9, gbc.sp());
        EXPECT(0xab65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab63));
        EXPECT(0xea, gbc.readMem(0xab64));
        // CB EA 00AC
        gbc.setState(0xd8f9, 0x77f7, 0xf8a0, 0xdc1e, 0x61a0, 0xb1ed, 0x0, 0x0);
        gbc.writeMem(0xd8f9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x77f7, gbc.sp());
        EXPECT(0xd8fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8f9));
        EXPECT(0xea, gbc.readMem(0xd8fa));
        // CB EA 00AD
        gbc.setState(0x4866, 0x61c7, 0xf7e0, 0xa583, 0xc596, 0x1233, 0x0, 0x0);
        gbc.writeMem(0x4866, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x61c7, gbc.sp());
        EXPECT(0x4868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 00AE
        gbc.setState(0xa573, 0x1e6f, 0xbe0, 0x51d1, 0xe29c, 0xb13, 0x0, 0x1);
        gbc.writeMem(0xa573, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1e6f, gbc.sp());
        EXPECT(0xa575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa573));
        EXPECT(0xea, gbc.readMem(0xa574));
        // CB EA 00AF
        gbc.setState(0x7e4f, 0xb1da, 0x7cb0, 0x17ae, 0x11ca, 0xe471, 0x1, 0x1);
        gbc.writeMem(0x7e4f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb1da, gbc.sp());
        EXPECT(0x7e51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00B0
        gbc.setState(0x657d, 0xdd97, 0xaf50, 0xe5e7, 0x81dc, 0x33c7, 0x0, 0x1);
        gbc.writeMem(0x657d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xdd97, gbc.sp());
        EXPECT(0x657f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00B1
        gbc.setState(0xd816, 0xbc27, 0x8b10, 0xc21f, 0x451, 0x19ad, 0x1, 0x1);
        gbc.writeMem(0xd816, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xbc27, gbc.sp());
        EXPECT(0xd818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd816));
        EXPECT(0xea, gbc.readMem(0xd817));
        // CB EA 00B2
        gbc.setState(0x7831, 0xaefb, 0x8e60, 0xb0fa, 0xe465, 0x4d5, 0x0, 0x0);
        gbc.writeMem(0x7831, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xaefb, gbc.sp());
        EXPECT(0x7833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 00B3
        gbc.setState(0x8412, 0x3776, 0x4a20, 0x5862, 0x8d0d, 0xae98, 0x1, 0x0);
        gbc.writeMem(0x8412, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3776, gbc.sp());
        EXPECT(0x8414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8412));
        EXPECT(0xea, gbc.readMem(0x8413));
        // CB EA 00B4
        gbc.setState(0xc4ff, 0xd174, 0x730, 0x874, 0x11cc, 0x3a24, 0x1, 0x1);
        gbc.writeMem(0xc4ff, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd174, gbc.sp());
        EXPECT(0xc501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ff));
        EXPECT(0xea, gbc.readMem(0xc500));
        // CB EA 00B5
        gbc.setState(0x2af9, 0xa431, 0x650, 0x5949, 0x4c0b, 0xf776, 0x0, 0x0);
        gbc.writeMem(0x2af9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa431, gbc.sp());
        EXPECT(0x2afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00B6
        gbc.setState(0x3168, 0xa497, 0xf510, 0xdfe3, 0x27c0, 0x9646, 0x1, 0x1);
        gbc.writeMem(0x3168, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa497, gbc.sp());
        EXPECT(0x316a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00B7
        gbc.setState(0xf70, 0xb808, 0x5b80, 0xc41f, 0xe1bf, 0x29ba, 0x0, 0x0);
        gbc.writeMem(0xf70, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb808, gbc.sp());
        EXPECT(0xf72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 00B8
        gbc.setState(0xbcff, 0xfa23, 0xcc90, 0x9293, 0x3941, 0x3d66, 0x1, 0x1);
        gbc.writeMem(0xbcff, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xfa23, gbc.sp());
        EXPECT(0xbd01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcff));
        EXPECT(0xea, gbc.readMem(0xbd00));
        // CB EA 00B9
        gbc.setState(0x4a82, 0xd825, 0xb1b0, 0x62c9, 0x6875, 0x3f82, 0x0, 0x1);
        gbc.writeMem(0x4a82, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd825, gbc.sp());
        EXPECT(0x4a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00BA
        gbc.setState(0x7de5, 0x65fd, 0x3f20, 0x55d1, 0x626, 0x82ae, 0x1, 0x0);
        gbc.writeMem(0x7de5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x65fd, gbc.sp());
        EXPECT(0x7de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 00BB
        gbc.setState(0x302c, 0x1584, 0xc850, 0x93a1, 0xe7ac, 0xe00e, 0x1, 0x1);
        gbc.writeMem(0x302c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1584, gbc.sp());
        EXPECT(0x302e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00BC
        gbc.setState(0x6a42, 0xac53, 0x25f0, 0x33e2, 0xda05, 0x6525, 0x0, 0x1);
        gbc.writeMem(0x6a42, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xac53, gbc.sp());
        EXPECT(0x6a44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00BD
        gbc.setState(0x146a, 0xcee3, 0x2a60, 0xdb86, 0x92d, 0x95dc, 0x0, 0x1);
        gbc.writeMem(0x146a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcee3, gbc.sp());
        EXPECT(0x146c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 00BE
        gbc.setState(0x7bd1, 0x6f8c, 0x8600, 0x5e50, 0xaeac, 0xd522, 0x0, 0x1);
        gbc.writeMem(0x7bd1, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6f8c, gbc.sp());
        EXPECT(0x7bd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 00BF
        gbc.setState(0xabbe, 0x11be, 0x4220, 0xacac, 0x8d1a, 0x484, 0x1, 0x0);
        gbc.writeMem(0xabbe, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x11be, gbc.sp());
        EXPECT(0xabc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabbe));
        EXPECT(0xea, gbc.readMem(0xabbf));
        // CB EA 00C0
        gbc.setState(0x282b, 0xe9bb, 0x59d0, 0xe631, 0xe2f8, 0x9afe, 0x1, 0x0);
        gbc.writeMem(0x282b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe9bb, gbc.sp());
        EXPECT(0x282d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00C1
        gbc.setState(0xedd9, 0xedd, 0xa6b0, 0x8a66, 0xbbf6, 0x58f6, 0x1, 0x1);
        gbc.writeMem(0xedd9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xedd, gbc.sp());
        EXPECT(0xeddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedd9));
        EXPECT(0xea, gbc.readMem(0xedda));
        // CB EA 00C2
        gbc.setState(0x3abc, 0x8462, 0x5f0, 0x3f6b, 0x3a5e, 0x73ac, 0x0, 0x1);
        gbc.writeMem(0x3abc, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8462, gbc.sp());
        EXPECT(0x3abe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00C3
        gbc.setState(0xb1bf, 0xfd37, 0x96a0, 0xbe6c, 0x4596, 0x98e1, 0x0, 0x1);
        gbc.writeMem(0xb1bf, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xfd37, gbc.sp());
        EXPECT(0xb1c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1bf));
        EXPECT(0xea, gbc.readMem(0xb1c0));
        // CB EA 00C4
        gbc.setState(0xc92f, 0x8d23, 0xad30, 0x95f1, 0xd4aa, 0x8ab4, 0x1, 0x1);
        gbc.writeMem(0xc92f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8d23, gbc.sp());
        EXPECT(0xc931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc92f));
        EXPECT(0xea, gbc.readMem(0xc930));
        // CB EA 00C5
        gbc.setState(0x6d4f, 0xfdc9, 0xfeb0, 0xff36, 0xa76a, 0x8ffc, 0x1, 0x1);
        gbc.writeMem(0x6d4f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfdc9, gbc.sp());
        EXPECT(0x6d51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00C6
        gbc.setState(0x884c, 0xf05, 0x7c70, 0x5085, 0xac71, 0x6612, 0x0, 0x1);
        gbc.writeMem(0x884c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf05, gbc.sp());
        EXPECT(0x884e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x884c));
        EXPECT(0xea, gbc.readMem(0x884d));
        // CB EA 00C7
        gbc.setState(0xb241, 0x49f9, 0xa960, 0x8c82, 0x604a, 0xe488, 0x1, 0x1);
        gbc.writeMem(0xb241, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x49f9, gbc.sp());
        EXPECT(0xb243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb241));
        EXPECT(0xea, gbc.readMem(0xb242));
        // CB EA 00C8
        gbc.setState(0xcbde, 0x9efa, 0xfa80, 0xe44c, 0x7c0c, 0x1d4f, 0x1, 0x1);
        gbc.writeMem(0xcbde, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9efa, gbc.sp());
        EXPECT(0xcbe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbde));
        EXPECT(0xea, gbc.readMem(0xcbdf));
        // CB EA 00C9
        gbc.setState(0x8ead, 0x3428, 0x3140, 0xd43c, 0x7bd2, 0x458a, 0x0, 0x1);
        gbc.writeMem(0x8ead, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3428, gbc.sp());
        EXPECT(0x8eaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ead));
        EXPECT(0xea, gbc.readMem(0x8eae));
        // CB EA 00CA
        gbc.setState(0x104f, 0x9ebd, 0xdd20, 0x5210, 0x40c6, 0xed24, 0x0, 0x0);
        gbc.writeMem(0x104f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9ebd, gbc.sp());
        EXPECT(0x1051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 00CB
        gbc.setState(0x1f43, 0xf20e, 0xf640, 0x20b2, 0x9ccb, 0x9118, 0x1, 0x1);
        gbc.writeMem(0x1f43, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf20e, gbc.sp());
        EXPECT(0x1f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 00CD
        gbc.setState(0xef45, 0x4514, 0x8e50, 0x7823, 0xb4fa, 0x8e32, 0x1, 0x0);
        gbc.writeMem(0xef45, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4514, gbc.sp());
        EXPECT(0xef47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef45));
        EXPECT(0xea, gbc.readMem(0xef46));
        // CB EA 00CE
        gbc.setState(0x4cd1, 0xfd2a, 0x89b0, 0x111e, 0x5b02, 0xb035, 0x0, 0x0);
        gbc.writeMem(0x4cd1, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfd2a, gbc.sp());
        EXPECT(0x4cd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00CF
        gbc.setState(0x701d, 0xba46, 0x4d80, 0x6f3c, 0x4a6e, 0x6cf, 0x0, 0x0);
        gbc.writeMem(0x701d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xba46, gbc.sp());
        EXPECT(0x701f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 00D0
        gbc.setState(0x3a43, 0x81ef, 0x220, 0xee5b, 0x2db0, 0xa363, 0x1, 0x1);
        gbc.writeMem(0x3a43, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x81ef, gbc.sp());
        EXPECT(0x3a45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 00D1
        gbc.setState(0xc648, 0xb7e, 0xc10, 0x145d, 0x9745, 0xc334, 0x0, 0x0);
        gbc.writeMem(0xc648, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb7e, gbc.sp());
        EXPECT(0xc64a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc648));
        EXPECT(0xea, gbc.readMem(0xc649));
        // CB EA 00D2
        gbc.setState(0x5a30, 0xff08, 0x18a0, 0x964c, 0xca50, 0xe029, 0x0, 0x1);
        gbc.writeMem(0x5a30, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xff08, gbc.sp());
        EXPECT(0x5a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 00D3
        gbc.setState(0x1f26, 0xbcb9, 0x1e60, 0xfe34, 0x7f40, 0xc60, 0x0, 0x1);
        gbc.writeMem(0x1f26, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbcb9, gbc.sp());
        EXPECT(0x1f28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 00D4
        gbc.setState(0xa728, 0x10d6, 0xf880, 0x6f23, 0xe4ce, 0x696d, 0x0, 0x1);
        gbc.writeMem(0xa728, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x10d6, gbc.sp());
        EXPECT(0xa72a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa728));
        EXPECT(0xea, gbc.readMem(0xa729));
        // CB EA 00D5
        gbc.setState(0xa335, 0xb24e, 0x6cf0, 0x7a37, 0x920b, 0xf1c5, 0x0, 0x0);
        gbc.writeMem(0xa335, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb24e, gbc.sp());
        EXPECT(0xa337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa335));
        EXPECT(0xea, gbc.readMem(0xa336));
        // CB EA 00D7
        gbc.setState(0xd42d, 0x8fa7, 0x6610, 0x90ee, 0xb9af, 0xbc3, 0x1, 0x1);
        gbc.writeMem(0xd42d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8fa7, gbc.sp());
        EXPECT(0xd42f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd42d));
        EXPECT(0xea, gbc.readMem(0xd42e));
        // CB EA 00D8
        gbc.setState(0x67af, 0x9fbb, 0x3650, 0x5114, 0x39fe, 0xd5a, 0x1, 0x0);
        gbc.writeMem(0x67af, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9fbb, gbc.sp());
        EXPECT(0x67b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00D9
        gbc.setState(0x8e84, 0x1615, 0x40d0, 0x8f0c, 0x6ccf, 0xfab, 0x1, 0x1);
        gbc.writeMem(0x8e84, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1615, gbc.sp());
        EXPECT(0x8e86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e84));
        EXPECT(0xea, gbc.readMem(0x8e85));
        // CB EA 00DA
        gbc.setState(0xce94, 0x4d22, 0xa8b0, 0x111e, 0x37b8, 0x57d1, 0x0, 0x1);
        gbc.writeMem(0xce94, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4d22, gbc.sp());
        EXPECT(0xce96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce94));
        EXPECT(0xea, gbc.readMem(0xce95));
        // CB EA 00DB
        gbc.setState(0x38e7, 0xbb70, 0x2b70, 0x6981, 0x3831, 0xde9d, 0x1, 0x0);
        gbc.writeMem(0x38e7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xbb70, gbc.sp());
        EXPECT(0x38e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00DC
        gbc.setState(0x640c, 0x301a, 0x1fd0, 0x7861, 0xc750, 0xa838, 0x0, 0x1);
        gbc.writeMem(0x640c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x301a, gbc.sp());
        EXPECT(0x640e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00DD
        gbc.setState(0xa881, 0x77c5, 0xd330, 0x7bfc, 0x6e14, 0x8106, 0x0, 0x1);
        gbc.writeMem(0xa881, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x77c5, gbc.sp());
        EXPECT(0xa883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa881));
        EXPECT(0xea, gbc.readMem(0xa882));
        // CB EA 00DE
        gbc.setState(0xc299, 0xe04b, 0xbb00, 0x89f2, 0x16f1, 0xf427, 0x0, 0x1);
        gbc.writeMem(0xc299, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe04b, gbc.sp());
        EXPECT(0xc29b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc299));
        EXPECT(0xea, gbc.readMem(0xc29a));
        // CB EA 00DF
        gbc.setState(0x6ab7, 0x6e0f, 0x43d0, 0xf174, 0x78e7, 0x72d5, 0x1, 0x0);
        gbc.writeMem(0x6ab7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6e0f, gbc.sp());
        EXPECT(0x6ab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00E0
        gbc.setState(0x2a35, 0x4887, 0x8b30, 0x8399, 0xfeae, 0xdfe9, 0x1, 0x0);
        gbc.writeMem(0x2a35, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4887, gbc.sp());
        EXPECT(0x2a37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00E1
        gbc.setState(0xb79, 0xbe14, 0x510, 0x7377, 0xf65d, 0xb035, 0x1, 0x1);
        gbc.writeMem(0xb79, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbe14, gbc.sp());
        EXPECT(0xb7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00E2
        gbc.setState(0x1319, 0x7c66, 0x53b0, 0xc879, 0xd69, 0xf816, 0x1, 0x1);
        gbc.writeMem(0x1319, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7c66, gbc.sp());
        EXPECT(0x131b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00E3
        gbc.setState(0x6fb4, 0xe995, 0xf6d0, 0x5544, 0xeed3, 0x47d6, 0x0, 0x1);
        gbc.writeMem(0x6fb4, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe995, gbc.sp());
        EXPECT(0x6fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00E4
        gbc.setState(0x9309, 0x8199, 0xc2f0, 0x4dd1, 0x1864, 0x2166, 0x1, 0x0);
        gbc.writeMem(0x9309, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8199, gbc.sp());
        EXPECT(0x930b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9309));
        EXPECT(0xea, gbc.readMem(0x930a));
        // CB EA 00E6
        gbc.setState(0x387d, 0x3be6, 0x7900, 0xb426, 0xf9cb, 0xeb9d, 0x1, 0x1);
        gbc.writeMem(0x387d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3be6, gbc.sp());
        EXPECT(0x387f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 00E7
        gbc.setState(0xc923, 0x8818, 0x9130, 0x4153, 0xd06b, 0x5a7f, 0x1, 0x1);
        gbc.writeMem(0xc923, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8818, gbc.sp());
        EXPECT(0xc925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc923));
        EXPECT(0xea, gbc.readMem(0xc924));
        // CB EA 00E8
        gbc.setState(0xc800, 0xb145, 0xb340, 0x57a0, 0x3270, 0x9, 0x1, 0x0);
        gbc.writeMem(0xc800, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb145, gbc.sp());
        EXPECT(0xc802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc800));
        EXPECT(0xea, gbc.readMem(0xc801));
        // CB EA 00E9
        gbc.setState(0x211d, 0x690b, 0x7aa0, 0x2232, 0x3541, 0xf8cb, 0x0, 0x0);
        gbc.writeMem(0x211d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x690b, gbc.sp());
        EXPECT(0x211f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 00EB
        gbc.setState(0xc457, 0x38ff, 0xd250, 0x90b, 0xd2bf, 0xec83, 0x0, 0x0);
        gbc.writeMem(0xc457, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x38ff, gbc.sp());
        EXPECT(0xc459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc457));
        EXPECT(0xea, gbc.readMem(0xc458));
        // CB EA 00EC
        gbc.setState(0xa97a, 0x3f42, 0xa740, 0x3c55, 0xc6f7, 0xd0df, 0x0, 0x0);
        gbc.writeMem(0xa97a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3f42, gbc.sp());
        EXPECT(0xa97c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa97a));
        EXPECT(0xea, gbc.readMem(0xa97b));
        // CB EA 00ED
        gbc.setState(0xac61, 0xd24b, 0xfa80, 0x18ac, 0xd1af, 0x549c, 0x0, 0x0);
        gbc.writeMem(0xac61, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd24b, gbc.sp());
        EXPECT(0xac63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac61));
        EXPECT(0xea, gbc.readMem(0xac62));
        // CB EA 00EE
        gbc.setState(0x89c3, 0x29f9, 0x4b0, 0x7905, 0xf670, 0x7190, 0x0, 0x0);
        gbc.writeMem(0x89c3, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x29f9, gbc.sp());
        EXPECT(0x89c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89c3));
        EXPECT(0xea, gbc.readMem(0x89c4));
        // CB EA 00EF
        gbc.setState(0x416b, 0xf57e, 0x8df0, 0x298f, 0x3751, 0x8d3, 0x1, 0x1);
        gbc.writeMem(0x416b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf57e, gbc.sp());
        EXPECT(0x416d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00F0
        gbc.setState(0xcce, 0xdcec, 0xe1e0, 0x96e0, 0x5f81, 0x226a, 0x1, 0x1);
        gbc.writeMem(0xcce, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xdcec, gbc.sp());
        EXPECT(0xcd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 00F1
        gbc.setState(0xb55c, 0xebe, 0xae0, 0x7c6, 0x997b, 0xc206, 0x1, 0x0);
        gbc.writeMem(0xb55c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xebe, gbc.sp());
        EXPECT(0xb55e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb55c));
        EXPECT(0xea, gbc.readMem(0xb55d));
        // CB EA 00F2
        gbc.setState(0xe995, 0x9942, 0xf3c0, 0x9ca2, 0x30cd, 0xcc5e, 0x1, 0x0);
        gbc.writeMem(0xe995, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9942, gbc.sp());
        EXPECT(0xe997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe995));
        EXPECT(0xea, gbc.readMem(0xe996));
        // CB EA 00F3
        gbc.setState(0xadaa, 0x6d72, 0xabf0, 0x45aa, 0x24af, 0xff45, 0x0, 0x0);
        gbc.writeMem(0xadaa, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6d72, gbc.sp());
        EXPECT(0xadac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadaa));
        EXPECT(0xea, gbc.readMem(0xadab));
        // CB EA 00F4
        gbc.setState(0x5776, 0x46bd, 0xb3c0, 0x82, 0xca1c, 0xcd50, 0x1, 0x0);
        gbc.writeMem(0x5776, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x46bd, gbc.sp());
        EXPECT(0x5778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 00F5
        gbc.setState(0x5f62, 0x5544, 0x2530, 0xb20d, 0xaa8a, 0xbcad, 0x0, 0x0);
        gbc.writeMem(0x5f62, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5544, gbc.sp());
        EXPECT(0x5f64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00F7
        gbc.setState(0xc057, 0x3fd5, 0x2f10, 0x441a, 0xef82, 0x5468, 0x0, 0x1);
        gbc.writeMem(0xc057, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3fd5, gbc.sp());
        EXPECT(0xc059, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc057));
        EXPECT(0xea, gbc.readMem(0xc058));
        // CB EA 00F8
        gbc.setState(0xed50, 0x566d, 0x2930, 0xf5f7, 0xfe99, 0xbc3c, 0x0, 0x0);
        gbc.writeMem(0xed50, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x566d, gbc.sp());
        EXPECT(0xed52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed50));
        EXPECT(0xea, gbc.readMem(0xed51));
        // CB EA 00FA
        gbc.setState(0xbd49, 0x7774, 0x7fb0, 0x8bc2, 0x9ba2, 0x6da, 0x1, 0x0);
        gbc.writeMem(0xbd49, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7774, gbc.sp());
        EXPECT(0xbd4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd49));
        EXPECT(0xea, gbc.readMem(0xbd4a));
        // CB EA 00FB
        gbc.setState(0x1550, 0x8e57, 0xe250, 0x9365, 0xe5, 0x54aa, 0x0, 0x1);
        gbc.writeMem(0x1550, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8e57, gbc.sp());
        EXPECT(0x1552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00FD
        gbc.setState(0x8457, 0xf16d, 0x7d50, 0x7886, 0x56a5, 0xaedd, 0x1, 0x0);
        gbc.writeMem(0x8457, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf16d, gbc.sp());
        EXPECT(0x8459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8457));
        EXPECT(0xea, gbc.readMem(0x8458));
        // CB EA 00FE
        gbc.setState(0x4343, 0xf4ac, 0x2eb0, 0x1858, 0x5c1b, 0x7880, 0x1, 0x1);
        gbc.writeMem(0x4343, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf4ac, gbc.sp());
        EXPECT(0x4345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 00FF
        gbc.setState(0xcf2c, 0xf8ff, 0x4d50, 0x9d40, 0xd2c, 0x2655, 0x1, 0x0);
        gbc.writeMem(0xcf2c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf8ff, gbc.sp());
        EXPECT(0xcf2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf2c));
        EXPECT(0xea, gbc.readMem(0xcf2d));
        // CB EA 0100
        gbc.setState(0x4e9e, 0x5ef, 0x4500, 0xc3b3, 0xab23, 0x69bc, 0x0, 0x0);
        gbc.writeMem(0x4e9e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5ef, gbc.sp());
        EXPECT(0x4ea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0101
        gbc.setState(0x464d, 0x764b, 0x4190, 0xf363, 0x596, 0x8328, 0x0, 0x0);
        gbc.writeMem(0x464d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x764b, gbc.sp());
        EXPECT(0x464f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0102
        gbc.setState(0x4200, 0xb71e, 0xebc0, 0x9ede, 0x3a67, 0xa879, 0x1, 0x0);
        gbc.writeMem(0x4200, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb71e, gbc.sp());
        EXPECT(0x4202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0103
        gbc.setState(0xb6d, 0x6581, 0x2ea0, 0x5fef, 0x4e40, 0x8d7b, 0x0, 0x0);
        gbc.writeMem(0xb6d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6581, gbc.sp());
        EXPECT(0xb6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0104
        gbc.setState(0xae69, 0xd491, 0x6f80, 0x4dc9, 0x16f1, 0xb19e, 0x1, 0x1);
        gbc.writeMem(0xae69, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd491, gbc.sp());
        EXPECT(0xae6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae69));
        EXPECT(0xea, gbc.readMem(0xae6a));
        // CB EA 0105
        gbc.setState(0xc1b7, 0xd4d, 0xaf20, 0x72a1, 0x1271, 0x4d33, 0x0, 0x1);
        gbc.writeMem(0xc1b7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd4d, gbc.sp());
        EXPECT(0xc1b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1b7));
        EXPECT(0xea, gbc.readMem(0xc1b8));
        // CB EA 0106
        gbc.setState(0xc4d, 0x2816, 0xbf70, 0xfa47, 0xc711, 0xcdee, 0x0, 0x0);
        gbc.writeMem(0xc4d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2816, gbc.sp());
        EXPECT(0xc4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0107
        gbc.setState(0xcca7, 0xde79, 0x4d10, 0x7def, 0xd534, 0x1fc4, 0x0, 0x1);
        gbc.writeMem(0xcca7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xde79, gbc.sp());
        EXPECT(0xcca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcca7));
        EXPECT(0xea, gbc.readMem(0xcca8));
        // CB EA 0108
        gbc.setState(0x94b6, 0x6053, 0x2b50, 0x719c, 0xb285, 0x566, 0x1, 0x0);
        gbc.writeMem(0x94b6, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6053, gbc.sp());
        EXPECT(0x94b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94b6));
        EXPECT(0xea, gbc.readMem(0x94b7));
        // CB EA 0109
        gbc.setState(0x3035, 0xd4df, 0xa2e0, 0x3a5a, 0x7002, 0x9b2e, 0x1, 0x0);
        gbc.writeMem(0x3035, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd4df, gbc.sp());
        EXPECT(0x3037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 010A
        gbc.setState(0xc9eb, 0xc3a, 0x3710, 0xb965, 0xe071, 0xa454, 0x0, 0x1);
        gbc.writeMem(0xc9eb, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc3a, gbc.sp());
        EXPECT(0xc9ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9eb));
        EXPECT(0xea, gbc.readMem(0xc9ec));
        // CB EA 010B
        gbc.setState(0xa7, 0x2f9a, 0xd1e0, 0x6512, 0x7046, 0xc67d, 0x0, 0x0);
        gbc.writeMem(0xa7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2f9a, gbc.sp());
        EXPECT(0xa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 010C
        gbc.setState(0xabd6, 0xb335, 0x5fd0, 0x3868, 0xba34, 0x82d6, 0x1, 0x0);
        gbc.writeMem(0xabd6, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb335, gbc.sp());
        EXPECT(0xabd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabd6));
        EXPECT(0xea, gbc.readMem(0xabd7));
        // CB EA 010D
        gbc.setState(0x4c1c, 0xe253, 0xcb10, 0x343a, 0x80e3, 0x9282, 0x1, 0x1);
        gbc.writeMem(0x4c1c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe253, gbc.sp());
        EXPECT(0x4c1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 010E
        gbc.setState(0x22ef, 0xdc74, 0x40b0, 0x8fea, 0xa5eb, 0xbaa4, 0x1, 0x1);
        gbc.writeMem(0x22ef, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdc74, gbc.sp());
        EXPECT(0x22f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 010F
        gbc.setState(0x519c, 0x5fda, 0x27a0, 0x4c7e, 0x59ae, 0xb6c7, 0x0, 0x1);
        gbc.writeMem(0x519c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5fda, gbc.sp());
        EXPECT(0x519e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0110
        gbc.setState(0xd1a5, 0x61d7, 0xf250, 0x6c25, 0x10d5, 0x241c, 0x1, 0x0);
        gbc.writeMem(0xd1a5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x61d7, gbc.sp());
        EXPECT(0xd1a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a5));
        EXPECT(0xea, gbc.readMem(0xd1a6));
        // CB EA 0111
        gbc.setState(0x2a41, 0x6a1a, 0xd2e0, 0x9c1d, 0xd1f5, 0xe10, 0x1, 0x0);
        gbc.writeMem(0x2a41, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6a1a, gbc.sp());
        EXPECT(0x2a43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0112
        gbc.setState(0x71b2, 0x7fda, 0x3f40, 0x82ff, 0x6cb1, 0x21f0, 0x1, 0x0);
        gbc.writeMem(0x71b2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7fda, gbc.sp());
        EXPECT(0x71b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0113
        gbc.setState(0x3153, 0x6a3c, 0x9880, 0x90e2, 0x6605, 0xa8b5, 0x1, 0x1);
        gbc.writeMem(0x3153, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6a3c, gbc.sp());
        EXPECT(0x3155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0114
        gbc.setState(0xdc8e, 0x1596, 0xe0e0, 0xbf99, 0x284d, 0x2ae9, 0x1, 0x1);
        gbc.writeMem(0xdc8e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1596, gbc.sp());
        EXPECT(0xdc90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc8e));
        EXPECT(0xea, gbc.readMem(0xdc8f));
        // CB EA 0115
        gbc.setState(0x1ee7, 0xc7f3, 0xaea0, 0xe906, 0x877d, 0x5bf2, 0x1, 0x0);
        gbc.writeMem(0x1ee7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc7f3, gbc.sp());
        EXPECT(0x1ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0116
        gbc.setState(0x8eb9, 0x34b9, 0xfa40, 0x53f9, 0xaf11, 0x42e6, 0x0, 0x0);
        gbc.writeMem(0x8eb9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x34b9, gbc.sp());
        EXPECT(0x8ebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eb9));
        EXPECT(0xea, gbc.readMem(0x8eba));
        // CB EA 0117
        gbc.setState(0xad29, 0x2bcb, 0x73c0, 0x2285, 0xb2e4, 0x89d2, 0x0, 0x1);
        gbc.writeMem(0xad29, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2bcb, gbc.sp());
        EXPECT(0xad2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad29));
        EXPECT(0xea, gbc.readMem(0xad2a));
        // CB EA 0118
        gbc.setState(0xd73c, 0xc845, 0xa7e0, 0xde58, 0xb7a2, 0x55e0, 0x1, 0x0);
        gbc.writeMem(0xd73c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc845, gbc.sp());
        EXPECT(0xd73e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd73c));
        EXPECT(0xea, gbc.readMem(0xd73d));
        // CB EA 0119
        gbc.setState(0xa6d8, 0xd95e, 0x44c0, 0x367a, 0x5c01, 0x35df, 0x1, 0x1);
        gbc.writeMem(0xa6d8, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd95e, gbc.sp());
        EXPECT(0xa6da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d8));
        EXPECT(0xea, gbc.readMem(0xa6d9));
        // CB EA 011A
        gbc.setState(0x348f, 0x7aec, 0x8160, 0xec21, 0x88a3, 0x30d6, 0x0, 0x1);
        gbc.writeMem(0x348f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7aec, gbc.sp());
        EXPECT(0x3491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 011B
        gbc.setState(0x3585, 0x5d42, 0xa160, 0xdce4, 0x32d6, 0xd728, 0x1, 0x1);
        gbc.writeMem(0x3585, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5d42, gbc.sp());
        EXPECT(0x3587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 011C
        gbc.setState(0xa77e, 0xfe85, 0x70b0, 0xa0c6, 0x2808, 0x56e8, 0x0, 0x0);
        gbc.writeMem(0xa77e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfe85, gbc.sp());
        EXPECT(0xa780, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa77e));
        EXPECT(0xea, gbc.readMem(0xa77f));
        // CB EA 011D
        gbc.setState(0x23b3, 0xd3ae, 0xd520, 0xd52b, 0x9b15, 0x3b2e, 0x1, 0x1);
        gbc.writeMem(0x23b3, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd3ae, gbc.sp());
        EXPECT(0x23b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 011E
        gbc.setState(0x9661, 0x5580, 0x3a40, 0xbfda, 0x338c, 0xb5ce, 0x0, 0x0);
        gbc.writeMem(0x9661, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5580, gbc.sp());
        EXPECT(0x9663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9661));
        EXPECT(0xea, gbc.readMem(0x9662));
        // CB EA 011F
        gbc.setState(0xa8dd, 0xd4fa, 0x4580, 0xe716, 0xbb3f, 0x3a93, 0x1, 0x1);
        gbc.writeMem(0xa8dd, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd4fa, gbc.sp());
        EXPECT(0xa8df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8dd));
        EXPECT(0xea, gbc.readMem(0xa8de));
        // CB EA 0120
        gbc.setState(0x77a8, 0xde7c, 0x2020, 0xffe6, 0x142, 0xf8e0, 0x0, 0x0);
        gbc.writeMem(0x77a8, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xde7c, gbc.sp());
        EXPECT(0x77aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0121
        gbc.setState(0x9be0, 0xf360, 0x8f70, 0x1a45, 0x6f55, 0x416d, 0x0, 0x1);
        gbc.writeMem(0x9be0, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf360, gbc.sp());
        EXPECT(0x9be2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9be0));
        EXPECT(0xea, gbc.readMem(0x9be1));
        // CB EA 0122
        gbc.setState(0x4c9a, 0x782f, 0x5d90, 0x27f1, 0x41cd, 0x47fb, 0x0, 0x0);
        gbc.writeMem(0x4c9a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x782f, gbc.sp());
        EXPECT(0x4c9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0123
        gbc.setState(0x8150, 0xd420, 0x86c0, 0xee1d, 0xb6fd, 0x79b6, 0x0, 0x0);
        gbc.writeMem(0x8150, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd420, gbc.sp());
        EXPECT(0x8152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8150));
        EXPECT(0xea, gbc.readMem(0x8151));
        // CB EA 0124
        gbc.setState(0x3105, 0xc55, 0x6580, 0xc623, 0x77ef, 0x4298, 0x1, 0x0);
        gbc.writeMem(0x3105, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc55, gbc.sp());
        EXPECT(0x3107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0125
        gbc.setState(0x50c9, 0x387b, 0xbec0, 0x45de, 0x7334, 0x4aa0, 0x0, 0x1);
        gbc.writeMem(0x50c9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x387b, gbc.sp());
        EXPECT(0x50cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0126
        gbc.setState(0x7109, 0xfce3, 0x3fb0, 0xea90, 0x8c48, 0x9ae4, 0x1, 0x1);
        gbc.writeMem(0x7109, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfce3, gbc.sp());
        EXPECT(0x710b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0127
        gbc.setState(0xd8ac, 0x8236, 0x33a0, 0x1870, 0x8ab8, 0xd9b2, 0x1, 0x0);
        gbc.writeMem(0xd8ac, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8236, gbc.sp());
        EXPECT(0xd8ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ac));
        EXPECT(0xea, gbc.readMem(0xd8ad));
        // CB EA 0128
        gbc.setState(0x71c2, 0xe9b2, 0xd8a0, 0x8129, 0x3318, 0x1ac9, 0x1, 0x1);
        gbc.writeMem(0x71c2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe9b2, gbc.sp());
        EXPECT(0x71c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0129
        gbc.setState(0xc6c9, 0x1718, 0xd950, 0xa66e, 0x7bba, 0x6ef, 0x1, 0x1);
        gbc.writeMem(0xc6c9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1718, gbc.sp());
        EXPECT(0xc6cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6c9));
        EXPECT(0xea, gbc.readMem(0xc6ca));
        // CB EA 012A
        gbc.setState(0x77d0, 0x9c6e, 0x57d0, 0x5db2, 0xe15c, 0x5fe9, 0x1, 0x0);
        gbc.writeMem(0x77d0, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9c6e, gbc.sp());
        EXPECT(0x77d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 012D
        gbc.setState(0xaee6, 0xa7cf, 0xb680, 0x8d71, 0x3611, 0xfcf3, 0x0, 0x1);
        gbc.writeMem(0xaee6, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa7cf, gbc.sp());
        EXPECT(0xaee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee6));
        EXPECT(0xea, gbc.readMem(0xaee7));
        // CB EA 012E
        gbc.setState(0xf98, 0x5c17, 0x9c80, 0x9f69, 0x86a2, 0x39ed, 0x1, 0x0);
        gbc.writeMem(0xf98, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5c17, gbc.sp());
        EXPECT(0xf9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 012F
        gbc.setState(0x998f, 0xfc0, 0x94d0, 0x4707, 0x6518, 0x4a21, 0x0, 0x1);
        gbc.writeMem(0x998f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xfc0, gbc.sp());
        EXPECT(0x9991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x998f));
        EXPECT(0xea, gbc.readMem(0x9990));
        // CB EA 0130
        gbc.setState(0xeaa0, 0x5bd6, 0xd7b0, 0xe4ac, 0x8df2, 0xf16, 0x0, 0x0);
        gbc.writeMem(0xeaa0, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5bd6, gbc.sp());
        EXPECT(0xeaa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaa0));
        EXPECT(0xea, gbc.readMem(0xeaa1));
        // CB EA 0131
        gbc.setState(0xcf36, 0x2f37, 0x6c10, 0xdd0e, 0x94e9, 0xf82a, 0x1, 0x0);
        gbc.writeMem(0xcf36, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2f37, gbc.sp());
        EXPECT(0xcf38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf36));
        EXPECT(0xea, gbc.readMem(0xcf37));
        // CB EA 0132
        gbc.setState(0x17f, 0x9ddf, 0xfe0, 0x7057, 0xbbb5, 0xd886, 0x0, 0x1);
        gbc.writeMem(0x17f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9ddf, gbc.sp());
        EXPECT(0x181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0133
        gbc.setState(0x90a, 0xe17b, 0x52b0, 0x90c, 0x9581, 0x786, 0x1, 0x0);
        gbc.writeMem(0x90a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe17b, gbc.sp());
        EXPECT(0x90c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0134
        gbc.setState(0xcae5, 0xd3c9, 0x2fb0, 0xf0e8, 0x3106, 0x9687, 0x1, 0x0);
        gbc.writeMem(0xcae5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd3c9, gbc.sp());
        EXPECT(0xcae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae5));
        EXPECT(0xea, gbc.readMem(0xcae6));
        // CB EA 0135
        gbc.setState(0x709e, 0x20f7, 0x9e0, 0x1f30, 0xc3c4, 0x8695, 0x1, 0x0);
        gbc.writeMem(0x709e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x20f7, gbc.sp());
        EXPECT(0x70a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0136
        gbc.setState(0xaae, 0x2f61, 0x4020, 0xa0aa, 0xe597, 0x26bb, 0x1, 0x0);
        gbc.writeMem(0xaae, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2f61, gbc.sp());
        EXPECT(0xab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0137
        gbc.setState(0x76bd, 0x301, 0xe3c0, 0x2efd, 0x6de9, 0x78ff, 0x0, 0x0);
        gbc.writeMem(0x76bd, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x301, gbc.sp());
        EXPECT(0x76bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0138
        gbc.setState(0x293d, 0x4cd9, 0xa580, 0xfdaf, 0xca4e, 0x89e5, 0x1, 0x1);
        gbc.writeMem(0x293d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4cd9, gbc.sp());
        EXPECT(0x293f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 013A
        gbc.setState(0x36f5, 0xea25, 0xc7d0, 0x9aff, 0xde29, 0x7236, 0x0, 0x0);
        gbc.writeMem(0x36f5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xea25, gbc.sp());
        EXPECT(0x36f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 013B
        gbc.setState(0x9114, 0x19a2, 0x4030, 0xd0f1, 0x5f2c, 0x73a6, 0x0, 0x1);
        gbc.writeMem(0x9114, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x19a2, gbc.sp());
        EXPECT(0x9116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9114));
        EXPECT(0xea, gbc.readMem(0x9115));
        // CB EA 013C
        gbc.setState(0xddbd, 0xd975, 0x2390, 0xd344, 0x6ab4, 0x596b, 0x1, 0x1);
        gbc.writeMem(0xddbd, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd975, gbc.sp());
        EXPECT(0xddbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddbd));
        EXPECT(0xea, gbc.readMem(0xddbe));
        // CB EA 013D
        gbc.setState(0x83ae, 0x8da5, 0x2600, 0xf94e, 0xbd5b, 0x81bb, 0x0, 0x1);
        gbc.writeMem(0x83ae, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8da5, gbc.sp());
        EXPECT(0x83b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83ae));
        EXPECT(0xea, gbc.readMem(0x83af));
        // CB EA 013E
        gbc.setState(0xd663, 0xa389, 0x35e0, 0xe7b6, 0xa3cd, 0x63c7, 0x1, 0x0);
        gbc.writeMem(0xd663, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa389, gbc.sp());
        EXPECT(0xd665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd663));
        EXPECT(0xea, gbc.readMem(0xd664));
        // CB EA 013F
        gbc.setState(0x892f, 0x8112, 0xb1e0, 0x11f2, 0x7e1f, 0x498c, 0x1, 0x0);
        gbc.writeMem(0x892f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8112, gbc.sp());
        EXPECT(0x8931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x892f));
        EXPECT(0xea, gbc.readMem(0x8930));
        // CB EA 0140
        gbc.setState(0x4dc3, 0x221b, 0x8e10, 0xa791, 0xdc66, 0xc9b, 0x1, 0x0);
        gbc.writeMem(0x4dc3, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x221b, gbc.sp());
        EXPECT(0x4dc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0141
        gbc.setState(0xb4b4, 0xc6a5, 0x4f60, 0x4d84, 0x7c6f, 0x912a, 0x1, 0x0);
        gbc.writeMem(0xb4b4, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc6a5, gbc.sp());
        EXPECT(0xb4b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4b4));
        EXPECT(0xea, gbc.readMem(0xb4b5));
        // CB EA 0143
        gbc.setState(0xc2f5, 0x1392, 0x28e0, 0xe2d9, 0xe65a, 0x98fe, 0x0, 0x1);
        gbc.writeMem(0xc2f5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1392, gbc.sp());
        EXPECT(0xc2f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f5));
        EXPECT(0xea, gbc.readMem(0xc2f6));
        // CB EA 0144
        gbc.setState(0xaf8b, 0x7091, 0x3440, 0xe532, 0x6659, 0x6ff0, 0x0, 0x0);
        gbc.writeMem(0xaf8b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7091, gbc.sp());
        EXPECT(0xaf8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf8b));
        EXPECT(0xea, gbc.readMem(0xaf8c));
        // CB EA 0145
        gbc.setState(0xd03e, 0xe79c, 0x64a0, 0x67bf, 0xbc70, 0x3bd2, 0x1, 0x0);
        gbc.writeMem(0xd03e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe79c, gbc.sp());
        EXPECT(0xd040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd03e));
        EXPECT(0xea, gbc.readMem(0xd03f));
        // CB EA 0146
        gbc.setState(0x7962, 0x9063, 0x9910, 0xb42d, 0x7236, 0xd30, 0x1, 0x1);
        gbc.writeMem(0x7962, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9063, gbc.sp());
        EXPECT(0x7964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0147
        gbc.setState(0x3adb, 0x4c18, 0xda50, 0xe06e, 0xffde, 0x4ac0, 0x1, 0x1);
        gbc.writeMem(0x3adb, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4c18, gbc.sp());
        EXPECT(0x3add, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0148
        gbc.setState(0x8766, 0x429e, 0x260, 0xa80, 0x80ae, 0xf251, 0x1, 0x0);
        gbc.writeMem(0x8766, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x429e, gbc.sp());
        EXPECT(0x8768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8766));
        EXPECT(0xea, gbc.readMem(0x8767));
        // CB EA 0149
        gbc.setState(0x8538, 0x1dfa, 0x4800, 0xbd8b, 0xb039, 0x35c6, 0x1, 0x0);
        gbc.writeMem(0x8538, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1dfa, gbc.sp());
        EXPECT(0x853a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8538));
        EXPECT(0xea, gbc.readMem(0x8539));
        // CB EA 014A
        gbc.setState(0x54d3, 0x2ab8, 0xec40, 0xb148, 0x7fdd, 0xb7f6, 0x0, 0x0);
        gbc.writeMem(0x54d3, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2ab8, gbc.sp());
        EXPECT(0x54d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 014B
        gbc.setState(0x970c, 0x7e96, 0x55a0, 0xa16f, 0x23f7, 0x8f12, 0x0, 0x0);
        gbc.writeMem(0x970c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7e96, gbc.sp());
        EXPECT(0x970e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x970c));
        EXPECT(0xea, gbc.readMem(0x970d));
        // CB EA 014C
        gbc.setState(0xa760, 0x1a2b, 0xb270, 0xd86d, 0x716a, 0xbe08, 0x1, 0x1);
        gbc.writeMem(0xa760, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1a2b, gbc.sp());
        EXPECT(0xa762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa760));
        EXPECT(0xea, gbc.readMem(0xa761));
        // CB EA 014D
        gbc.setState(0x6ae1, 0xc46e, 0x8b90, 0x8e9b, 0x6c4f, 0x2901, 0x0, 0x1);
        gbc.writeMem(0x6ae1, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc46e, gbc.sp());
        EXPECT(0x6ae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 014E
        gbc.setState(0xb11a, 0x4e39, 0xe80, 0xaee1, 0x84b2, 0xccfc, 0x1, 0x1);
        gbc.writeMem(0xb11a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4e39, gbc.sp());
        EXPECT(0xb11c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb11a));
        EXPECT(0xea, gbc.readMem(0xb11b));
        // CB EA 014F
        gbc.setState(0x8d8c, 0x34c0, 0xe520, 0x8a60, 0xa18a, 0xddfd, 0x1, 0x1);
        gbc.writeMem(0x8d8c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x34c0, gbc.sp());
        EXPECT(0x8d8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d8c));
        EXPECT(0xea, gbc.readMem(0x8d8d));
        // CB EA 0151
        gbc.setState(0xe154, 0x1475, 0x4290, 0xb445, 0xa199, 0xdc6a, 0x0, 0x1);
        gbc.writeMem(0xe154, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1475, gbc.sp());
        EXPECT(0xe156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe154));
        EXPECT(0xea, gbc.readMem(0xe155));
        // CB EA 0152
        gbc.setState(0x4143, 0x1383, 0xd6b0, 0x654d, 0x5328, 0x6712, 0x0, 0x0);
        gbc.writeMem(0x4143, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1383, gbc.sp());
        EXPECT(0x4145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0153
        gbc.setState(0x47fe, 0xa00b, 0xbb50, 0x6f8, 0x71e4, 0x251d, 0x0, 0x1);
        gbc.writeMem(0x47fe, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa00b, gbc.sp());
        EXPECT(0x4800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0154
        gbc.setState(0xb41f, 0x350, 0x200, 0xe8e0, 0x871e, 0xb53d, 0x1, 0x0);
        gbc.writeMem(0xb41f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x350, gbc.sp());
        EXPECT(0xb421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb41f));
        EXPECT(0xea, gbc.readMem(0xb420));
        // CB EA 0155
        gbc.setState(0xc88c, 0xb2ef, 0x3e60, 0x21cd, 0x2daf, 0x92b7, 0x1, 0x0);
        gbc.writeMem(0xc88c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb2ef, gbc.sp());
        EXPECT(0xc88e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc88c));
        EXPECT(0xea, gbc.readMem(0xc88d));
        // CB EA 0156
        gbc.setState(0x555b, 0x7b87, 0xba20, 0x2986, 0xb87b, 0xcdcf, 0x1, 0x1);
        gbc.writeMem(0x555b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7b87, gbc.sp());
        EXPECT(0x555d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0157
        gbc.setState(0x5e6f, 0x90d8, 0x8310, 0xbb6e, 0xfbf2, 0x44ce, 0x0, 0x1);
        gbc.writeMem(0x5e6f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x90d8, gbc.sp());
        EXPECT(0x5e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0158
        gbc.setState(0x8772, 0x1fbc, 0x78d0, 0x3dea, 0x97f, 0x8191, 0x0, 0x1);
        gbc.writeMem(0x8772, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1fbc, gbc.sp());
        EXPECT(0x8774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8772));
        EXPECT(0xea, gbc.readMem(0x8773));
        // CB EA 0159
        gbc.setState(0x503d, 0x82f4, 0x9aa0, 0xcc43, 0xf5bd, 0x4adc, 0x0, 0x1);
        gbc.writeMem(0x503d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x82f4, gbc.sp());
        EXPECT(0x503f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 015A
        gbc.setState(0x7d2a, 0x2911, 0x9b0, 0x169c, 0x29af, 0xcc49, 0x0, 0x1);
        gbc.writeMem(0x7d2a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2911, gbc.sp());
        EXPECT(0x7d2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 015B
        gbc.setState(0x7249, 0x6feb, 0x8730, 0x1a4e, 0x53c6, 0xb8c, 0x0, 0x1);
        gbc.writeMem(0x7249, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6feb, gbc.sp());
        EXPECT(0x724b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 015C
        gbc.setState(0x2367, 0x1ffd, 0x6f90, 0x9d40, 0xd280, 0xf5e3, 0x1, 0x1);
        gbc.writeMem(0x2367, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1ffd, gbc.sp());
        EXPECT(0x2369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 015D
        gbc.setState(0x7ace, 0xbad3, 0xf140, 0xa899, 0x4634, 0x2b05, 0x0, 0x1);
        gbc.writeMem(0x7ace, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbad3, gbc.sp());
        EXPECT(0x7ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 015E
        gbc.setState(0x90a1, 0x16a2, 0x5f80, 0xe1b5, 0x2a42, 0x874e, 0x0, 0x1);
        gbc.writeMem(0x90a1, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x16a2, gbc.sp());
        EXPECT(0x90a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90a1));
        EXPECT(0xea, gbc.readMem(0x90a2));
        // CB EA 015F
        gbc.setState(0x5eab, 0x4c46, 0xa5c0, 0xd6bf, 0xbcc0, 0xf382, 0x0, 0x1);
        gbc.writeMem(0x5eab, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4c46, gbc.sp());
        EXPECT(0x5ead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0160
        gbc.setState(0x5476, 0xf420, 0xd760, 0x67eb, 0x6231, 0x8ab6, 0x1, 0x0);
        gbc.writeMem(0x5476, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf420, gbc.sp());
        EXPECT(0x5478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0161
        gbc.setState(0x2ea, 0xcbe1, 0x6b40, 0x3d1b, 0x1cc, 0x37cd, 0x0, 0x1);
        gbc.writeMem(0x2ea, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcbe1, gbc.sp());
        EXPECT(0x2ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0162
        gbc.setState(0x45d8, 0x72f0, 0x13c0, 0x70d0, 0x6421, 0xb54e, 0x1, 0x0);
        gbc.writeMem(0x45d8, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x72f0, gbc.sp());
        EXPECT(0x45da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0163
        gbc.setState(0x529a, 0x3d93, 0x280, 0x1c71, 0xdebc, 0x51c, 0x0, 0x1);
        gbc.writeMem(0x529a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3d93, gbc.sp());
        EXPECT(0x529c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0164
        gbc.setState(0x90b6, 0xc37e, 0xc590, 0xc756, 0xda05, 0x9a05, 0x0, 0x1);
        gbc.writeMem(0x90b6, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc37e, gbc.sp());
        EXPECT(0x90b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90b6));
        EXPECT(0xea, gbc.readMem(0x90b7));
        // CB EA 0165
        gbc.setState(0x7e1b, 0xb09c, 0x6100, 0x2f8a, 0xa012, 0x4126, 0x1, 0x0);
        gbc.writeMem(0x7e1b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb09c, gbc.sp());
        EXPECT(0x7e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0166
        gbc.setState(0x2ad2, 0xcaee, 0xa180, 0xacfe, 0xd5e0, 0x88fd, 0x0, 0x0);
        gbc.writeMem(0x2ad2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcaee, gbc.sp());
        EXPECT(0x2ad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0167
        gbc.setState(0x590c, 0x5b20, 0xaff0, 0x7ea6, 0xc6a3, 0xcb0f, 0x0, 0x1);
        gbc.writeMem(0x590c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5b20, gbc.sp());
        EXPECT(0x590e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0168
        gbc.setState(0xe9c2, 0xfbf7, 0x1510, 0xfe99, 0x6004, 0x3db9, 0x0, 0x1);
        gbc.writeMem(0xe9c2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfbf7, gbc.sp());
        EXPECT(0xe9c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9c2));
        EXPECT(0xea, gbc.readMem(0xe9c3));
        // CB EA 0169
        gbc.setState(0xcb9b, 0xb1a7, 0xf4f0, 0x6b53, 0x25f4, 0x7379, 0x0, 0x1);
        gbc.writeMem(0xcb9b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb1a7, gbc.sp());
        EXPECT(0xcb9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb9b));
        EXPECT(0xea, gbc.readMem(0xcb9c));
        // CB EA 016A
        gbc.setState(0x20a7, 0xb571, 0xe050, 0xc165, 0xa458, 0x6877, 0x1, 0x0);
        gbc.writeMem(0x20a7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb571, gbc.sp());
        EXPECT(0x20a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 016B
        gbc.setState(0xce80, 0x6185, 0xd7b0, 0x887, 0x1156, 0x49d4, 0x1, 0x1);
        gbc.writeMem(0xce80, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6185, gbc.sp());
        EXPECT(0xce82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce80));
        EXPECT(0xea, gbc.readMem(0xce81));
        // CB EA 016C
        gbc.setState(0x1a7f, 0x41a2, 0x1be0, 0xf1f2, 0x34fe, 0x2e40, 0x0, 0x1);
        gbc.writeMem(0x1a7f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x41a2, gbc.sp());
        EXPECT(0x1a81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 016D
        gbc.setState(0x48cf, 0x7814, 0x260, 0xd6a3, 0x9f53, 0x6a44, 0x1, 0x1);
        gbc.writeMem(0x48cf, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7814, gbc.sp());
        EXPECT(0x48d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 016E
        gbc.setState(0x526c, 0x7dae, 0xa880, 0xb7d2, 0x773c, 0x8411, 0x1, 0x0);
        gbc.writeMem(0x526c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7dae, gbc.sp());
        EXPECT(0x526e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 016F
        gbc.setState(0xb5e9, 0xfcbc, 0x3560, 0xc45a, 0x9516, 0xb275, 0x1, 0x0);
        gbc.writeMem(0xb5e9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfcbc, gbc.sp());
        EXPECT(0xb5eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5e9));
        EXPECT(0xea, gbc.readMem(0xb5ea));
        // CB EA 0171
        gbc.setState(0xcbae, 0xb4a0, 0xa1d0, 0x3061, 0x80c3, 0xc667, 0x0, 0x0);
        gbc.writeMem(0xcbae, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb4a0, gbc.sp());
        EXPECT(0xcbb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbae));
        EXPECT(0xea, gbc.readMem(0xcbaf));
        // CB EA 0172
        gbc.setState(0xd743, 0x817b, 0xd60, 0x4d22, 0x8885, 0x6192, 0x0, 0x0);
        gbc.writeMem(0xd743, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x817b, gbc.sp());
        EXPECT(0xd745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd743));
        EXPECT(0xea, gbc.readMem(0xd744));
        // CB EA 0173
        gbc.setState(0x4af2, 0x901a, 0x6bb0, 0xc61d, 0xff1e, 0x5d60, 0x1, 0x0);
        gbc.writeMem(0x4af2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x901a, gbc.sp());
        EXPECT(0x4af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0174
        gbc.setState(0x3f36, 0xfd6, 0x7340, 0xd034, 0x6aa3, 0x50f2, 0x0, 0x1);
        gbc.writeMem(0x3f36, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfd6, gbc.sp());
        EXPECT(0x3f38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0175
        gbc.setState(0xc44b, 0xcb3d, 0x6030, 0xbec6, 0xe5c, 0x177f, 0x1, 0x1);
        gbc.writeMem(0xc44b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xcb3d, gbc.sp());
        EXPECT(0xc44d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc44b));
        EXPECT(0xea, gbc.readMem(0xc44c));
        // CB EA 0176
        gbc.setState(0xe15e, 0x838c, 0x8fd0, 0x7c8, 0x3682, 0xbfa1, 0x0, 0x1);
        gbc.writeMem(0xe15e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x838c, gbc.sp());
        EXPECT(0xe160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe15e));
        EXPECT(0xea, gbc.readMem(0xe15f));
        // CB EA 0177
        gbc.setState(0xa8f7, 0xbaab, 0xf80, 0x92d5, 0x5603, 0x5b12, 0x1, 0x1);
        gbc.writeMem(0xa8f7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbaab, gbc.sp());
        EXPECT(0xa8f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f7));
        EXPECT(0xea, gbc.readMem(0xa8f8));
        // CB EA 0178
        gbc.setState(0x11a8, 0x9ce5, 0x2130, 0x445b, 0xb55, 0xe7cb, 0x1, 0x0);
        gbc.writeMem(0x11a8, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9ce5, gbc.sp());
        EXPECT(0x11aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0179
        gbc.setState(0x9cf9, 0x5f1b, 0x6ad0, 0x97f3, 0x2dae, 0x7558, 0x1, 0x1);
        gbc.writeMem(0x9cf9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5f1b, gbc.sp());
        EXPECT(0x9cfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cf9));
        EXPECT(0xea, gbc.readMem(0x9cfa));
        // CB EA 017A
        gbc.setState(0x2f05, 0xcb29, 0x4910, 0xeb82, 0xf8b0, 0xa62, 0x0, 0x0);
        gbc.writeMem(0x2f05, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xcb29, gbc.sp());
        EXPECT(0x2f07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 017B
        gbc.setState(0x333f, 0x7bac, 0x7c90, 0x4781, 0x3074, 0xa17a, 0x0, 0x1);
        gbc.writeMem(0x333f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7bac, gbc.sp());
        EXPECT(0x3341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 017C
        gbc.setState(0x19f2, 0xe, 0xe3d0, 0x25ca, 0xc028, 0x1825, 0x1, 0x1);
        gbc.writeMem(0x19f2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe, gbc.sp());
        EXPECT(0x19f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 017D
        gbc.setState(0xb4d8, 0x57b5, 0xebd0, 0x8551, 0x43d8, 0xe5c8, 0x0, 0x0);
        gbc.writeMem(0xb4d8, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x57b5, gbc.sp());
        EXPECT(0xb4da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4d8));
        EXPECT(0xea, gbc.readMem(0xb4d9));
        // CB EA 017E
        gbc.setState(0xea09, 0x6191, 0x5700, 0xb707, 0x7c0e, 0x82b4, 0x1, 0x0);
        gbc.writeMem(0xea09, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6191, gbc.sp());
        EXPECT(0xea0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea09));
        EXPECT(0xea, gbc.readMem(0xea0a));
        // CB EA 017F
        gbc.setState(0xd53b, 0x5802, 0xdfc0, 0xcd28, 0xf3cf, 0x5fee, 0x1, 0x0);
        gbc.writeMem(0xd53b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5802, gbc.sp());
        EXPECT(0xd53d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd53b));
        EXPECT(0xea, gbc.readMem(0xd53c));
        // CB EA 0180
        gbc.setState(0x6c49, 0x8f67, 0x2020, 0xc9d4, 0x8e6d, 0xb48b, 0x0, 0x1);
        gbc.writeMem(0x6c49, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8f67, gbc.sp());
        EXPECT(0x6c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0182
        gbc.setState(0xc7c6, 0xd234, 0x8150, 0x65da, 0x1f97, 0xa252, 0x0, 0x1);
        gbc.writeMem(0xc7c6, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd234, gbc.sp());
        EXPECT(0xc7c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7c6));
        EXPECT(0xea, gbc.readMem(0xc7c7));
        // CB EA 0183
        gbc.setState(0x5bd6, 0xd7a0, 0x48f0, 0xab97, 0xbbff, 0x3861, 0x0, 0x1);
        gbc.writeMem(0x5bd6, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd7a0, gbc.sp());
        EXPECT(0x5bd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0184
        gbc.setState(0x8a5c, 0x5395, 0x8250, 0x3140, 0xee9, 0x7198, 0x1, 0x0);
        gbc.writeMem(0x8a5c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5395, gbc.sp());
        EXPECT(0x8a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a5c));
        EXPECT(0xea, gbc.readMem(0x8a5d));
        // CB EA 0185
        gbc.setState(0xa0d9, 0x28f8, 0x6460, 0x5ca6, 0x558a, 0x9447, 0x0, 0x0);
        gbc.writeMem(0xa0d9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x28f8, gbc.sp());
        EXPECT(0xa0db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d9));
        EXPECT(0xea, gbc.readMem(0xa0da));
        // CB EA 0186
        gbc.setState(0xe74c, 0xaa94, 0xe440, 0xa029, 0x2faf, 0xc2de, 0x0, 0x1);
        gbc.writeMem(0xe74c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xaa94, gbc.sp());
        EXPECT(0xe74e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe74c));
        EXPECT(0xea, gbc.readMem(0xe74d));
        // CB EA 0187
        gbc.setState(0x4740, 0x98c2, 0xfda0, 0x3cfc, 0x4e6c, 0xebf3, 0x1, 0x1);
        gbc.writeMem(0x4740, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x98c2, gbc.sp());
        EXPECT(0x4742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0188
        gbc.setState(0x7c45, 0x78c3, 0x2b20, 0x52b9, 0xa10b, 0x62f1, 0x0, 0x1);
        gbc.writeMem(0x7c45, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x78c3, gbc.sp());
        EXPECT(0x7c47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0189
        gbc.setState(0x71c7, 0x5125, 0x2f50, 0x6226, 0x48fb, 0x58cc, 0x1, 0x0);
        gbc.writeMem(0x71c7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5125, gbc.sp());
        EXPECT(0x71c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 018A
        gbc.setState(0x4956, 0xb41b, 0xff70, 0xd977, 0x487c, 0x4997, 0x0, 0x1);
        gbc.writeMem(0x4956, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb41b, gbc.sp());
        EXPECT(0x4958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 018B
        gbc.setState(0x3ba4, 0x3cd0, 0x8060, 0x95, 0x75a4, 0x7af9, 0x1, 0x1);
        gbc.writeMem(0x3ba4, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3cd0, gbc.sp());
        EXPECT(0x3ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 018C
        gbc.setState(0x80c9, 0xe35a, 0xb780, 0xaf67, 0xa7f5, 0xae8b, 0x1, 0x1);
        gbc.writeMem(0x80c9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe35a, gbc.sp());
        EXPECT(0x80cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80c9));
        EXPECT(0xea, gbc.readMem(0x80ca));
        // CB EA 018D
        gbc.setState(0xd702, 0x3acc, 0x8120, 0x3f04, 0x5aff, 0xb502, 0x0, 0x0);
        gbc.writeMem(0xd702, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3acc, gbc.sp());
        EXPECT(0xd704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd702));
        EXPECT(0xea, gbc.readMem(0xd703));
        // CB EA 018E
        gbc.setState(0x1f91, 0x1a7d, 0xa070, 0x4774, 0xc3e4, 0xbb, 0x0, 0x0);
        gbc.writeMem(0x1f91, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1a7d, gbc.sp());
        EXPECT(0x1f93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 018F
        gbc.setState(0xdf2e, 0x7cf0, 0xbe50, 0x9998, 0x786b, 0x8b8, 0x0, 0x1);
        gbc.writeMem(0xdf2e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7cf0, gbc.sp());
        EXPECT(0xdf30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf2e));
        EXPECT(0xea, gbc.readMem(0xdf2f));
        // CB EA 0190
        gbc.setState(0xa4c3, 0xcc63, 0x48b0, 0x821f, 0x8d93, 0xb39a, 0x1, 0x1);
        gbc.writeMem(0xa4c3, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xcc63, gbc.sp());
        EXPECT(0xa4c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4c3));
        EXPECT(0xea, gbc.readMem(0xa4c4));
        // CB EA 0191
        gbc.setState(0x797f, 0x6ab4, 0x3cb0, 0x2293, 0xc7fe, 0xc2ee, 0x1, 0x1);
        gbc.writeMem(0x797f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6ab4, gbc.sp());
        EXPECT(0x7981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0192
        gbc.setState(0xadde, 0x933a, 0x9560, 0xfa51, 0x4ce6, 0x9f04, 0x1, 0x1);
        gbc.writeMem(0xadde, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x933a, gbc.sp());
        EXPECT(0xade0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadde));
        EXPECT(0xea, gbc.readMem(0xaddf));
        // CB EA 0193
        gbc.setState(0xe631, 0x8755, 0xb740, 0x721b, 0xf9e, 0xc2f8, 0x1, 0x0);
        gbc.writeMem(0xe631, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8755, gbc.sp());
        EXPECT(0xe633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe631));
        EXPECT(0xea, gbc.readMem(0xe632));
        // CB EA 0194
        gbc.setState(0x6b86, 0xa8cd, 0xaa0, 0x81a5, 0x8e36, 0x405e, 0x0, 0x1);
        gbc.writeMem(0x6b86, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa8cd, gbc.sp());
        EXPECT(0x6b88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0195
        gbc.setState(0x4523, 0xb034, 0x5f90, 0x346d, 0x2b0e, 0x8610, 0x0, 0x0);
        gbc.writeMem(0x4523, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb034, gbc.sp());
        EXPECT(0x4525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0196
        gbc.setState(0x7184, 0xad43, 0xdf50, 0x278d, 0x693c, 0x5181, 0x1, 0x0);
        gbc.writeMem(0x7184, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xad43, gbc.sp());
        EXPECT(0x7186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0197
        gbc.setState(0xe818, 0xd808, 0x84b0, 0xea3b, 0xfec1, 0xe9d6, 0x1, 0x0);
        gbc.writeMem(0xe818, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd808, gbc.sp());
        EXPECT(0xe81a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe818));
        EXPECT(0xea, gbc.readMem(0xe819));
        // CB EA 0198
        gbc.setState(0x829f, 0x8a3e, 0x9bb0, 0xf6fd, 0x50b4, 0x9d90, 0x0, 0x0);
        gbc.writeMem(0x829f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8a3e, gbc.sp());
        EXPECT(0x82a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x829f));
        EXPECT(0xea, gbc.readMem(0x82a0));
        // CB EA 0199
        gbc.setState(0x181a, 0x5c34, 0xe110, 0x3e13, 0x67da, 0xddee, 0x0, 0x0);
        gbc.writeMem(0x181a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5c34, gbc.sp());
        EXPECT(0x181c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 019A
        gbc.setState(0x7de6, 0x8c54, 0x75b0, 0x445b, 0xc152, 0x1b7d, 0x1, 0x0);
        gbc.writeMem(0x7de6, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8c54, gbc.sp());
        EXPECT(0x7de8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 019B
        gbc.setState(0x1007, 0x19f, 0xf580, 0xcdbe, 0xd7ab, 0xd3f1, 0x0, 0x1);
        gbc.writeMem(0x1007, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x19f, gbc.sp());
        EXPECT(0x1009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 019C
        gbc.setState(0x46bd, 0x8a4b, 0x5980, 0xda52, 0xfd72, 0xca0d, 0x0, 0x1);
        gbc.writeMem(0x46bd, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8a4b, gbc.sp());
        EXPECT(0x46bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 019D
        gbc.setState(0x35e6, 0xee8, 0xc470, 0x2b0f, 0x39fa, 0x28d7, 0x1, 0x1);
        gbc.writeMem(0x35e6, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xee8, gbc.sp());
        EXPECT(0x35e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 019E
        gbc.setState(0x18, 0x45c5, 0xa880, 0x74e6, 0x52b, 0x220a, 0x0, 0x0);
        gbc.writeMem(0x18, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x45c5, gbc.sp());
        EXPECT(0x1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 019F
        gbc.setState(0x3973, 0xa350, 0x9c50, 0x3c5e, 0xec55, 0x96cc, 0x0, 0x1);
        gbc.writeMem(0x3973, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa350, gbc.sp());
        EXPECT(0x3975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 01A0
        gbc.setState(0xb6fd, 0x450b, 0x9280, 0xe15e, 0xe4e0, 0x569c, 0x0, 0x1);
        gbc.writeMem(0xb6fd, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x450b, gbc.sp());
        EXPECT(0xb6ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6fd));
        EXPECT(0xea, gbc.readMem(0xb6fe));
        // CB EA 01A1
        gbc.setState(0x9d5, 0xc73e, 0x6cd0, 0xdb0f, 0xbd45, 0x7859, 0x1, 0x0);
        gbc.writeMem(0x9d5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc73e, gbc.sp());
        EXPECT(0x9d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 01A2
        gbc.setState(0xb63b, 0xe68f, 0xcc60, 0xe2f0, 0xb2d9, 0x5271, 0x0, 0x1);
        gbc.writeMem(0xb63b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe68f, gbc.sp());
        EXPECT(0xb63d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb63b));
        EXPECT(0xea, gbc.readMem(0xb63c));
        // CB EA 01A3
        gbc.setState(0x8a0e, 0x1d0f, 0xc8c0, 0xa36f, 0xa412, 0x4ef7, 0x0, 0x1);
        gbc.writeMem(0x8a0e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1d0f, gbc.sp());
        EXPECT(0x8a10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a0e));
        EXPECT(0xea, gbc.readMem(0x8a0f));
        // CB EA 01A4
        gbc.setState(0x870c, 0x6bcc, 0x1d90, 0xa429, 0xde3f, 0x566a, 0x1, 0x1);
        gbc.writeMem(0x870c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6bcc, gbc.sp());
        EXPECT(0x870e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x870c));
        EXPECT(0xea, gbc.readMem(0x870d));
        // CB EA 01A5
        gbc.setState(0x2d5e, 0x2005, 0x53b0, 0xc27b, 0x87f5, 0x69d7, 0x0, 0x1);
        gbc.writeMem(0x2d5e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2005, gbc.sp());
        EXPECT(0x2d60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 01A6
        gbc.setState(0x9740, 0xa770, 0x2e00, 0xd513, 0xf883, 0x952, 0x1, 0x0);
        gbc.writeMem(0x9740, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa770, gbc.sp());
        EXPECT(0x9742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9740));
        EXPECT(0xea, gbc.readMem(0x9741));
        // CB EA 01A7
        gbc.setState(0xcd54, 0xa101, 0xa0f0, 0x3409, 0x4da6, 0xa903, 0x1, 0x1);
        gbc.writeMem(0xcd54, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa101, gbc.sp());
        EXPECT(0xcd56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd54));
        EXPECT(0xea, gbc.readMem(0xcd55));
        // CB EA 01A8
        gbc.setState(0xd20e, 0xc8ef, 0xb470, 0x1e36, 0xbc37, 0xf73c, 0x1, 0x0);
        gbc.writeMem(0xd20e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc8ef, gbc.sp());
        EXPECT(0xd210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd20e));
        EXPECT(0xea, gbc.readMem(0xd20f));
        // CB EA 01A9
        gbc.setState(0xbf64, 0xa832, 0xf5c0, 0x4a28, 0x888e, 0xaf67, 0x0, 0x1);
        gbc.writeMem(0xbf64, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa832, gbc.sp());
        EXPECT(0xbf66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf64));
        EXPECT(0xea, gbc.readMem(0xbf65));
        // CB EA 01AA
        gbc.setState(0xb0d9, 0xb0d8, 0x7d0, 0xf266, 0x4861, 0x4dcc, 0x1, 0x1);
        gbc.writeMem(0xb0d9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb0d8, gbc.sp());
        EXPECT(0xb0db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0d9));
        EXPECT(0xea, gbc.readMem(0xb0da));
        // CB EA 01AB
        gbc.setState(0x4e4c, 0xdd9f, 0xacf0, 0xc449, 0x3923, 0xe747, 0x0, 0x0);
        gbc.writeMem(0x4e4c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xdd9f, gbc.sp());
        EXPECT(0x4e4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 01AC
        gbc.setState(0xa9c5, 0x7105, 0xd080, 0xfaac, 0xb1a1, 0xf503, 0x1, 0x1);
        gbc.writeMem(0xa9c5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7105, gbc.sp());
        EXPECT(0xa9c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9c5));
        EXPECT(0xea, gbc.readMem(0xa9c6));
        // CB EA 01AD
        gbc.setState(0xc989, 0xffa6, 0xdbd0, 0x11d9, 0x87bb, 0x771e, 0x1, 0x1);
        gbc.writeMem(0xc989, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xffa6, gbc.sp());
        EXPECT(0xc98b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc989));
        EXPECT(0xea, gbc.readMem(0xc98a));
        // CB EA 01AE
        gbc.setState(0xec24, 0x6b12, 0x8390, 0xdf87, 0x7684, 0x4bb8, 0x0, 0x1);
        gbc.writeMem(0xec24, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6b12, gbc.sp());
        EXPECT(0xec26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec24));
        EXPECT(0xea, gbc.readMem(0xec25));
        // CB EA 01AF
        gbc.setState(0x5a5e, 0xa7b7, 0x4350, 0xa140, 0x2089, 0x35eb, 0x0, 0x0);
        gbc.writeMem(0x5a5e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa7b7, gbc.sp());
        EXPECT(0x5a60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 01B0
        gbc.setState(0x4ae6, 0x7c9e, 0x6ed0, 0xfe14, 0xfcf9, 0x94ec, 0x0, 0x0);
        gbc.writeMem(0x4ae6, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7c9e, gbc.sp());
        EXPECT(0x4ae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 01B1
        gbc.setState(0x5ce0, 0x97a3, 0x7580, 0xf8fe, 0x21bd, 0xfee0, 0x0, 0x0);
        gbc.writeMem(0x5ce0, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x97a3, gbc.sp());
        EXPECT(0x5ce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 01B2
        gbc.setState(0x1cbc, 0xe6df, 0x80a0, 0xa9a3, 0x8af0, 0x50ed, 0x0, 0x0);
        gbc.writeMem(0x1cbc, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe6df, gbc.sp());
        EXPECT(0x1cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 01B3
        gbc.setState(0xbbd5, 0x6419, 0x82e0, 0xf234, 0x77ea, 0x99ec, 0x1, 0x1);
        gbc.writeMem(0xbbd5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6419, gbc.sp());
        EXPECT(0xbbd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd5));
        EXPECT(0xea, gbc.readMem(0xbbd6));
        // CB EA 01B4
        gbc.setState(0xa2e4, 0xc9fe, 0x9b90, 0x60cc, 0xbdc, 0xbead, 0x0, 0x1);
        gbc.writeMem(0xa2e4, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc9fe, gbc.sp());
        EXPECT(0xa2e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2e4));
        EXPECT(0xea, gbc.readMem(0xa2e5));
        // CB EA 01B5
        gbc.setState(0xb944, 0xae1d, 0xd620, 0xbf80, 0xa752, 0xa7d4, 0x0, 0x1);
        gbc.writeMem(0xb944, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xae1d, gbc.sp());
        EXPECT(0xb946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb944));
        EXPECT(0xea, gbc.readMem(0xb945));
        // CB EA 01B6
        gbc.setState(0x6d3b, 0x16b, 0xeca0, 0x5cf1, 0xc630, 0xd346, 0x0, 0x1);
        gbc.writeMem(0x6d3b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x16b, gbc.sp());
        EXPECT(0x6d3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 01B7
        gbc.setState(0x740b, 0x74b3, 0xcfc0, 0x7e44, 0x632c, 0x73ed, 0x1, 0x1);
        gbc.writeMem(0x740b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x74b3, gbc.sp());
        EXPECT(0x740d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 01B8
        gbc.setState(0x9a13, 0xbb7d, 0x67e0, 0xde36, 0x1afc, 0xbcf7, 0x1, 0x0);
        gbc.writeMem(0x9a13, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbb7d, gbc.sp());
        EXPECT(0x9a15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a13));
        EXPECT(0xea, gbc.readMem(0x9a14));
        // CB EA 01B9
        gbc.setState(0x912b, 0xcf4b, 0xa2b0, 0x40e9, 0x9fda, 0x8822, 0x1, 0x1);
        gbc.writeMem(0x912b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xcf4b, gbc.sp());
        EXPECT(0x912d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x912b));
        EXPECT(0xea, gbc.readMem(0x912c));
        // CB EA 01BA
        gbc.setState(0xab84, 0x3bb2, 0x2240, 0xb659, 0xf72e, 0x3b6, 0x0, 0x1);
        gbc.writeMem(0xab84, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3bb2, gbc.sp());
        EXPECT(0xab86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab84));
        EXPECT(0xea, gbc.readMem(0xab85));
        // CB EA 01BB
        gbc.setState(0x9aa, 0x33fb, 0xa190, 0x8568, 0x38, 0xd125, 0x0, 0x0);
        gbc.writeMem(0x9aa, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x33fb, gbc.sp());
        EXPECT(0x9ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 01BC
        gbc.setState(0x2847, 0x6c0c, 0xfec0, 0xab05, 0x5e61, 0xaab7, 0x0, 0x0);
        gbc.writeMem(0x2847, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6c0c, gbc.sp());
        EXPECT(0x2849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 01BD
        gbc.setState(0xdc32, 0xe550, 0xb3e0, 0x61a7, 0xa575, 0x8fbc, 0x0, 0x0);
        gbc.writeMem(0xdc32, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe550, gbc.sp());
        EXPECT(0xdc34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc32));
        EXPECT(0xea, gbc.readMem(0xdc33));
        // CB EA 01BE
        gbc.setState(0xabc7, 0xf449, 0x11b0, 0xdc02, 0xee1, 0x297f, 0x1, 0x1);
        gbc.writeMem(0xabc7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf449, gbc.sp());
        EXPECT(0xabc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabc7));
        EXPECT(0xea, gbc.readMem(0xabc8));
        // CB EA 01BF
        gbc.setState(0xbdb4, 0x83b9, 0x5be0, 0xe0c4, 0xb085, 0xbec3, 0x1, 0x0);
        gbc.writeMem(0xbdb4, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x83b9, gbc.sp());
        EXPECT(0xbdb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb4));
        EXPECT(0xea, gbc.readMem(0xbdb5));
        // CB EA 01C0
        gbc.setState(0x1072, 0x17a7, 0x3ca0, 0xb9b2, 0xbe16, 0x4d28, 0x0, 0x1);
        gbc.writeMem(0x1072, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x17a7, gbc.sp());
        EXPECT(0x1074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 01C1
        gbc.setState(0x96e1, 0xe962, 0x4a50, 0x3eaa, 0x6d2a, 0x418b, 0x1, 0x1);
        gbc.writeMem(0x96e1, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe962, gbc.sp());
        EXPECT(0x96e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e1));
        EXPECT(0xea, gbc.readMem(0x96e2));
        // CB EA 01C2
        gbc.setState(0x176f, 0xddbb, 0xa240, 0x316, 0xf3fc, 0x1e1d, 0x0, 0x0);
        gbc.writeMem(0x176f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xddbb, gbc.sp());
        EXPECT(0x1771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 01C3
        gbc.setState(0x59eb, 0xd13e, 0xd970, 0x5506, 0x7e44, 0x4606, 0x0, 0x1);
        gbc.writeMem(0x59eb, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd13e, gbc.sp());
        EXPECT(0x59ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 01C4
        gbc.setState(0x3971, 0x1604, 0xc490, 0x939c, 0x86b6, 0x915d, 0x0, 0x0);
        gbc.writeMem(0x3971, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1604, gbc.sp());
        EXPECT(0x3973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 01C5
        gbc.setState(0x6758, 0x888, 0x7e30, 0xdeb8, 0xd361, 0x5bbc, 0x1, 0x0);
        gbc.writeMem(0x6758, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x888, gbc.sp());
        EXPECT(0x675a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 01C6
        gbc.setState(0x3b22, 0x70c9, 0x45e0, 0x360a, 0x2e0d, 0xa052, 0x1, 0x1);
        gbc.writeMem(0x3b22, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x70c9, gbc.sp());
        EXPECT(0x3b24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 01C8
        gbc.setState(0x57eb, 0x7cba, 0x4df0, 0x8445, 0x76c1, 0x493a, 0x0, 0x0);
        gbc.writeMem(0x57eb, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7cba, gbc.sp());
        EXPECT(0x57ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 01C9
        gbc.setState(0x4d0, 0xdb83, 0xaca0, 0xa2f6, 0x7203, 0x7de5, 0x1, 0x0);
        gbc.writeMem(0x4d0, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xdb83, gbc.sp());
        EXPECT(0x4d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 01CA
        gbc.setState(0x5e3f, 0xadbf, 0xa460, 0x2e0e, 0x351d, 0x7c78, 0x1, 0x1);
        gbc.writeMem(0x5e3f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xadbf, gbc.sp());
        EXPECT(0x5e41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 01CB
        gbc.setState(0xb08a, 0x433, 0x2bb0, 0xb6f3, 0x104d, 0xe272, 0x0, 0x0);
        gbc.writeMem(0xb08a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x433, gbc.sp());
        EXPECT(0xb08c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb08a));
        EXPECT(0xea, gbc.readMem(0xb08b));
        // CB EA 01CC
        gbc.setState(0xff2, 0xac27, 0x9b0, 0xe4de, 0x98ff, 0x3526, 0x1, 0x1);
        gbc.writeMem(0xff2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xac27, gbc.sp());
        EXPECT(0xff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 01CD
        gbc.setState(0x7c99, 0xdbb0, 0x2bf0, 0x66ee, 0xbe81, 0x1195, 0x0, 0x0);
        gbc.writeMem(0x7c99, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xdbb0, gbc.sp());
        EXPECT(0x7c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 01CE
        gbc.setState(0x6628, 0xcfa3, 0xc720, 0x1858, 0x2a8c, 0x214c, 0x1, 0x1);
        gbc.writeMem(0x6628, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xcfa3, gbc.sp());
        EXPECT(0x662a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 01CF
        gbc.setState(0x76a0, 0x43f, 0x5360, 0xb496, 0x5843, 0xd837, 0x0, 0x0);
        gbc.writeMem(0x76a0, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x43f, gbc.sp());
        EXPECT(0x76a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 01D0
        gbc.setState(0x710b, 0x32b3, 0xfc30, 0x8b99, 0x545d, 0x7f03, 0x1, 0x0);
        gbc.writeMem(0x710b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x32b3, gbc.sp());
        EXPECT(0x710d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 01D1
        gbc.setState(0xea54, 0x3da0, 0x30a0, 0x1f42, 0xe63c, 0x7b95, 0x0, 0x1);
        gbc.writeMem(0xea54, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3da0, gbc.sp());
        EXPECT(0xea56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea54));
        EXPECT(0xea, gbc.readMem(0xea55));
        // CB EA 01D2
        gbc.setState(0x42de, 0x6e66, 0x39a0, 0xf3ed, 0x28d4, 0x6857, 0x0, 0x1);
        gbc.writeMem(0x42de, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6e66, gbc.sp());
        EXPECT(0x42e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 01D3
        gbc.setState(0x2a9a, 0xf45d, 0xe540, 0x57cf, 0xb713, 0xf559, 0x1, 0x1);
        gbc.writeMem(0x2a9a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf45d, gbc.sp());
        EXPECT(0x2a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 01D4
        gbc.setState(0x90bb, 0x1690, 0x3ea0, 0x6f9a, 0x919f, 0x9560, 0x1, 0x1);
        gbc.writeMem(0x90bb, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1690, gbc.sp());
        EXPECT(0x90bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90bb));
        EXPECT(0xea, gbc.readMem(0x90bc));
        // CB EA 01D5
        gbc.setState(0xb1af, 0x8dd7, 0x4900, 0x88b9, 0x8fc3, 0x9294, 0x0, 0x1);
        gbc.writeMem(0xb1af, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8dd7, gbc.sp());
        EXPECT(0xb1b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1af));
        EXPECT(0xea, gbc.readMem(0xb1b0));
        // CB EA 01D7
        gbc.setState(0xe68f, 0x459, 0x4250, 0x3ca5, 0x7108, 0xfd29, 0x0, 0x0);
        gbc.writeMem(0xe68f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x459, gbc.sp());
        EXPECT(0xe691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe68f));
        EXPECT(0xea, gbc.readMem(0xe690));
        // CB EA 01D8
        gbc.setState(0xc078, 0x875b, 0x21c0, 0x9128, 0xaf73, 0xe32b, 0x0, 0x0);
        gbc.writeMem(0xc078, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x875b, gbc.sp());
        EXPECT(0xc07a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc078));
        EXPECT(0xea, gbc.readMem(0xc079));
        // CB EA 01D9
        gbc.setState(0x30e2, 0x1e70, 0xcc70, 0x9898, 0x65d0, 0xede5, 0x1, 0x0);
        gbc.writeMem(0x30e2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1e70, gbc.sp());
        EXPECT(0x30e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 01DA
        gbc.setState(0x320d, 0x585, 0x9840, 0xb6fe, 0xc8d, 0x3220, 0x1, 0x1);
        gbc.writeMem(0x320d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x585, gbc.sp());
        EXPECT(0x320f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 01DB
        gbc.setState(0xa5e4, 0xfc7d, 0xff60, 0x6ace, 0x9837, 0x2d0b, 0x0, 0x0);
        gbc.writeMem(0xa5e4, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xfc7d, gbc.sp());
        EXPECT(0xa5e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5e4));
        EXPECT(0xea, gbc.readMem(0xa5e5));
        // CB EA 01DC
        gbc.setState(0xc6d6, 0xc9e2, 0x2cf0, 0x7bdb, 0x16e4, 0x7795, 0x1, 0x1);
        gbc.writeMem(0xc6d6, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc9e2, gbc.sp());
        EXPECT(0xc6d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6d6));
        EXPECT(0xea, gbc.readMem(0xc6d7));
        // CB EA 01DD
        gbc.setState(0x2db2, 0x488a, 0x17e0, 0x1da, 0xf0cc, 0x8c6e, 0x0, 0x1);
        gbc.writeMem(0x2db2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x488a, gbc.sp());
        EXPECT(0x2db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 01DE
        gbc.setState(0x8337, 0x8aee, 0x750, 0xea70, 0x2b1b, 0x69bd, 0x1, 0x0);
        gbc.writeMem(0x8337, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8aee, gbc.sp());
        EXPECT(0x8339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8337));
        EXPECT(0xea, gbc.readMem(0x8338));
        // CB EA 01DF
        gbc.setState(0xe68e, 0x641b, 0x2f10, 0x9c2b, 0xcc0a, 0xda0c, 0x0, 0x0);
        gbc.writeMem(0xe68e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x641b, gbc.sp());
        EXPECT(0xe690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe68e));
        EXPECT(0xea, gbc.readMem(0xe68f));
        // CB EA 01E0
        gbc.setState(0xc7cc, 0x74c1, 0x25d0, 0x8d2e, 0x984c, 0x557a, 0x0, 0x1);
        gbc.writeMem(0xc7cc, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x74c1, gbc.sp());
        EXPECT(0xc7ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7cc));
        EXPECT(0xea, gbc.readMem(0xc7cd));
        // CB EA 01E1
        gbc.setState(0xd2b7, 0x58ca, 0xcaa0, 0x65d1, 0xa5b9, 0x9642, 0x1, 0x1);
        gbc.writeMem(0xd2b7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x58ca, gbc.sp());
        EXPECT(0xd2b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2b7));
        EXPECT(0xea, gbc.readMem(0xd2b8));
        // CB EA 01E2
        gbc.setState(0x454b, 0x6551, 0x2b70, 0x4669, 0x6a1d, 0xa62, 0x1, 0x1);
        gbc.writeMem(0x454b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6551, gbc.sp());
        EXPECT(0x454d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 01E3
        gbc.setState(0xe593, 0x8030, 0x75d0, 0x156c, 0x8e0, 0x4ce5, 0x0, 0x1);
        gbc.writeMem(0xe593, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8030, gbc.sp());
        EXPECT(0xe595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe593));
        EXPECT(0xea, gbc.readMem(0xe594));
        // CB EA 01E4
        gbc.setState(0xcee1, 0xe1a7, 0x8fd0, 0x8fbb, 0x192d, 0xa762, 0x1, 0x1);
        gbc.writeMem(0xcee1, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe1a7, gbc.sp());
        EXPECT(0xcee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcee1));
        EXPECT(0xea, gbc.readMem(0xcee2));
        // CB EA 01E5
        gbc.setState(0xcc14, 0xb958, 0x6940, 0x6dfe, 0x4598, 0xe5d1, 0x0, 0x0);
        gbc.writeMem(0xcc14, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb958, gbc.sp());
        EXPECT(0xcc16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc14));
        EXPECT(0xea, gbc.readMem(0xcc15));
        // CB EA 01E6
        gbc.setState(0x6ad0, 0x25d2, 0x7f70, 0x8deb, 0xbef1, 0x63fb, 0x1, 0x0);
        gbc.writeMem(0x6ad0, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x25d2, gbc.sp());
        EXPECT(0x6ad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 01E7
        gbc.setState(0xb54d, 0xcc40, 0xb9b0, 0x565c, 0xa7e0, 0xbe5a, 0x0, 0x1);
        gbc.writeMem(0xb54d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xcc40, gbc.sp());
        EXPECT(0xb54f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb54d));
        EXPECT(0xea, gbc.readMem(0xb54e));
        // CB EA 01E8
        gbc.setState(0x679e, 0x1e2e, 0x6070, 0x8f8f, 0x7e94, 0xb2d9, 0x1, 0x0);
        gbc.writeMem(0x679e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1e2e, gbc.sp());
        EXPECT(0x67a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 01E9
        gbc.setState(0x4254, 0x9625, 0x9520, 0x22aa, 0x4986, 0xf348, 0x1, 0x1);
        gbc.writeMem(0x4254, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9625, gbc.sp());
        EXPECT(0x4256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 01EA
        gbc.setState(0x51fd, 0x2961, 0x3640, 0xe2f0, 0x4230, 0x7417, 0x1, 0x1);
        gbc.writeMem(0x51fd, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2961, gbc.sp());
        EXPECT(0x51ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 01EB
        gbc.setState(0xdfd5, 0xa0bb, 0xc720, 0x21b5, 0x8c4a, 0xd326, 0x0, 0x1);
        gbc.writeMem(0xdfd5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa0bb, gbc.sp());
        EXPECT(0xdfd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfd5));
        EXPECT(0xea, gbc.readMem(0xdfd6));
        // CB EA 01EC
        gbc.setState(0x4e0f, 0xb20b, 0x5d80, 0xbe3e, 0xdec3, 0x5c42, 0x0, 0x1);
        gbc.writeMem(0x4e0f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb20b, gbc.sp());
        EXPECT(0x4e11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 01ED
        gbc.setState(0x9586, 0xf438, 0xf670, 0xcc59, 0xc2e0, 0xe8a3, 0x0, 0x1);
        gbc.writeMem(0x9586, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf438, gbc.sp());
        EXPECT(0x9588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9586));
        EXPECT(0xea, gbc.readMem(0x9587));
        // CB EA 01EE
        gbc.setState(0x6a3e, 0xe18a, 0x3d00, 0x9eda, 0xe0a4, 0x31c8, 0x1, 0x1);
        gbc.writeMem(0x6a3e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe18a, gbc.sp());
        EXPECT(0x6a40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 01EF
        gbc.setState(0xded1, 0x7bbc, 0x3930, 0x7e1e, 0xdd5e, 0x39be, 0x0, 0x1);
        gbc.writeMem(0xded1, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7bbc, gbc.sp());
        EXPECT(0xded3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded1));
        EXPECT(0xea, gbc.readMem(0xded2));
        // CB EA 01F0
        gbc.setState(0xd2d8, 0x7cd2, 0x74f0, 0x6575, 0x2d0f, 0x7690, 0x0, 0x0);
        gbc.writeMem(0xd2d8, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7cd2, gbc.sp());
        EXPECT(0xd2da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2d8));
        EXPECT(0xea, gbc.readMem(0xd2d9));
        // CB EA 01F1
        gbc.setState(0x3832, 0xeab7, 0xaf00, 0x6163, 0x6902, 0x6152, 0x0, 0x0);
        gbc.writeMem(0x3832, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xeab7, gbc.sp());
        EXPECT(0x3834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 01F2
        gbc.setState(0x37e8, 0xd022, 0xf260, 0xba4f, 0x57d6, 0x2fa6, 0x1, 0x0);
        gbc.writeMem(0x37e8, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd022, gbc.sp());
        EXPECT(0x37ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 01F3
        gbc.setState(0xad8c, 0xd0a8, 0x67c0, 0xe2f0, 0xb2ec, 0x6416, 0x1, 0x1);
        gbc.writeMem(0xad8c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd0a8, gbc.sp());
        EXPECT(0xad8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad8c));
        EXPECT(0xea, gbc.readMem(0xad8d));
        // CB EA 01F4
        gbc.setState(0xbdc3, 0xaf3a, 0x2020, 0x644b, 0x3dbc, 0x8548, 0x1, 0x0);
        gbc.writeMem(0xbdc3, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xaf3a, gbc.sp());
        EXPECT(0xbdc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdc3));
        EXPECT(0xea, gbc.readMem(0xbdc4));
        // CB EA 01F5
        gbc.setState(0xc042, 0xaf4f, 0x2400, 0xa3d6, 0x2262, 0xda2a, 0x1, 0x1);
        gbc.writeMem(0xc042, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xaf4f, gbc.sp());
        EXPECT(0xc044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc042));
        EXPECT(0xea, gbc.readMem(0xc043));
        // CB EA 01F6
        gbc.setState(0x7cf, 0xaae6, 0x13f0, 0xda0e, 0xc8cc, 0x317d, 0x0, 0x0);
        gbc.writeMem(0x7cf, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xaae6, gbc.sp());
        EXPECT(0x7d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 01F7
        gbc.setState(0x531e, 0x939f, 0xd60, 0x125b, 0x31e0, 0x10ea, 0x0, 0x0);
        gbc.writeMem(0x531e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x939f, gbc.sp());
        EXPECT(0x5320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 01F8
        gbc.setState(0x38ba, 0x24ef, 0x3670, 0x4b0e, 0x7633, 0x9991, 0x0, 0x1);
        gbc.writeMem(0x38ba, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x24ef, gbc.sp());
        EXPECT(0x38bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 01F9
        gbc.setState(0x75f0, 0xcd15, 0x3bf0, 0x3595, 0x7ac8, 0xdd2d, 0x0, 0x0);
        gbc.writeMem(0x75f0, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xcd15, gbc.sp());
        EXPECT(0x75f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 01FA
        gbc.setState(0x92e2, 0x23f7, 0x42d0, 0xee4e, 0xaaf9, 0x47f, 0x0, 0x0);
        gbc.writeMem(0x92e2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x23f7, gbc.sp());
        EXPECT(0x92e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92e2));
        EXPECT(0xea, gbc.readMem(0x92e3));
        // CB EA 01FB
        gbc.setState(0xfc9, 0x1961, 0x400, 0xb0bf, 0xd103, 0x45e1, 0x1, 0x0);
        gbc.writeMem(0xfc9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1961, gbc.sp());
        EXPECT(0xfcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 01FD
        gbc.setState(0xd482, 0xb357, 0x2910, 0xcf3, 0x4bc6, 0x8014, 0x0, 0x0);
        gbc.writeMem(0xd482, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb357, gbc.sp());
        EXPECT(0xd484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd482));
        EXPECT(0xea, gbc.readMem(0xd483));
        // CB EA 01FE
        gbc.setState(0x64bb, 0xd4ec, 0xac00, 0xf8d4, 0x1327, 0xc69a, 0x1, 0x0);
        gbc.writeMem(0x64bb, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd4ec, gbc.sp());
        EXPECT(0x64bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 01FF
        gbc.setState(0x4e76, 0x929b, 0xbf00, 0x863d, 0x2709, 0xbaf, 0x1, 0x0);
        gbc.writeMem(0x4e76, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x929b, gbc.sp());
        EXPECT(0x4e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0200
        gbc.setState(0x2b17, 0x3339, 0x4240, 0xfdfd, 0xe50d, 0xb65a, 0x1, 0x1);
        gbc.writeMem(0x2b17, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3339, gbc.sp());
        EXPECT(0x2b19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0201
        gbc.setState(0xc1f8, 0xf1bb, 0x85f0, 0xd632, 0x7a22, 0xb4da, 0x0, 0x1);
        gbc.writeMem(0xc1f8, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf1bb, gbc.sp());
        EXPECT(0xc1fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1f8));
        EXPECT(0xea, gbc.readMem(0xc1f9));
        // CB EA 0202
        gbc.setState(0xa5c2, 0xbc4b, 0x7400, 0x68e3, 0x5421, 0xe6ce, 0x1, 0x1);
        gbc.writeMem(0xa5c2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xbc4b, gbc.sp());
        EXPECT(0xa5c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5c2));
        EXPECT(0xea, gbc.readMem(0xa5c3));
        // CB EA 0203
        gbc.setState(0x630, 0xd3c8, 0x4440, 0x5dd8, 0x3ca5, 0x32cd, 0x1, 0x1);
        gbc.writeMem(0x630, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd3c8, gbc.sp());
        EXPECT(0x632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0204
        gbc.setState(0x4a27, 0xf92f, 0xa830, 0x84c8, 0x3bec, 0xe99f, 0x1, 0x0);
        gbc.writeMem(0x4a27, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf92f, gbc.sp());
        EXPECT(0x4a29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0205
        gbc.setState(0x2a42, 0x5ed0, 0xde50, 0xff62, 0x1b98, 0xc53a, 0x0, 0x1);
        gbc.writeMem(0x2a42, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5ed0, gbc.sp());
        EXPECT(0x2a44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0206
        gbc.setState(0xd0f9, 0x5e91, 0x8970, 0xd8b, 0x1bcd, 0xa15d, 0x1, 0x0);
        gbc.writeMem(0xd0f9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5e91, gbc.sp());
        EXPECT(0xd0fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0f9));
        EXPECT(0xea, gbc.readMem(0xd0fa));
        // CB EA 0207
        gbc.setState(0xd8b1, 0xe1b9, 0x8cc0, 0x89f1, 0xfd48, 0x1805, 0x0, 0x1);
        gbc.writeMem(0xd8b1, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe1b9, gbc.sp());
        EXPECT(0xd8b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8b1));
        EXPECT(0xea, gbc.readMem(0xd8b2));
        // CB EA 0208
        gbc.setState(0xb457, 0x4ee, 0x48d0, 0x8308, 0x517f, 0xb394, 0x0, 0x1);
        gbc.writeMem(0xb457, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4ee, gbc.sp());
        EXPECT(0xb459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb457));
        EXPECT(0xea, gbc.readMem(0xb458));
        // CB EA 0209
        gbc.setState(0xaf98, 0x7935, 0x4300, 0xea60, 0x1097, 0x298f, 0x0, 0x1);
        gbc.writeMem(0xaf98, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7935, gbc.sp());
        EXPECT(0xaf9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf98));
        EXPECT(0xea, gbc.readMem(0xaf99));
        // CB EA 020A
        gbc.setState(0x52c2, 0xb9e5, 0x72b0, 0xdd6b, 0xd953, 0x13d7, 0x1, 0x1);
        gbc.writeMem(0x52c2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb9e5, gbc.sp());
        EXPECT(0x52c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 020B
        gbc.setState(0x8a1a, 0x4046, 0x20f0, 0x492e, 0x1ae8, 0xd6dc, 0x1, 0x0);
        gbc.writeMem(0x8a1a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4046, gbc.sp());
        EXPECT(0x8a1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a1a));
        EXPECT(0xea, gbc.readMem(0x8a1b));
        // CB EA 020C
        gbc.setState(0x32d3, 0xbc99, 0x4fd0, 0x759b, 0xec66, 0xbded, 0x0, 0x1);
        gbc.writeMem(0x32d3, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbc99, gbc.sp());
        EXPECT(0x32d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 020D
        gbc.setState(0x76e7, 0xa35e, 0x1d90, 0xd68, 0x8e15, 0x873b, 0x0, 0x0);
        gbc.writeMem(0x76e7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa35e, gbc.sp());
        EXPECT(0x76e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 020E
        gbc.setState(0xd169, 0x621, 0x49d0, 0xfa92, 0x6878, 0xd63c, 0x0, 0x1);
        gbc.writeMem(0xd169, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x621, gbc.sp());
        EXPECT(0xd16b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd169));
        EXPECT(0xea, gbc.readMem(0xd16a));
        // CB EA 020F
        gbc.setState(0xbadd, 0xa4df, 0x57f0, 0x2722, 0x4ee4, 0xe611, 0x0, 0x0);
        gbc.writeMem(0xbadd, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa4df, gbc.sp());
        EXPECT(0xbadf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbadd));
        EXPECT(0xea, gbc.readMem(0xbade));
        // CB EA 0210
        gbc.setState(0x1971, 0xda97, 0xc6a0, 0x42b3, 0xe679, 0x48b4, 0x1, 0x1);
        gbc.writeMem(0x1971, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xda97, gbc.sp());
        EXPECT(0x1973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0212
        gbc.setState(0x833c, 0x583d, 0x6130, 0xadfa, 0x9bc1, 0x8632, 0x1, 0x1);
        gbc.writeMem(0x833c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x583d, gbc.sp());
        EXPECT(0x833e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x833c));
        EXPECT(0xea, gbc.readMem(0x833d));
        // CB EA 0213
        gbc.setState(0xe81a, 0x717b, 0xc330, 0x61e8, 0x7ed5, 0xa401, 0x0, 0x0);
        gbc.writeMem(0xe81a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x717b, gbc.sp());
        EXPECT(0xe81c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe81a));
        EXPECT(0xea, gbc.readMem(0xe81b));
        // CB EA 0214
        gbc.setState(0xd157, 0xcd4e, 0xc850, 0x7168, 0x6d10, 0x6c74, 0x0, 0x0);
        gbc.writeMem(0xd157, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xcd4e, gbc.sp());
        EXPECT(0xd159, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd157));
        EXPECT(0xea, gbc.readMem(0xd158));
        // CB EA 0215
        gbc.setState(0xd974, 0xa6cf, 0x7730, 0x990f, 0xab29, 0x65f4, 0x0, 0x0);
        gbc.writeMem(0xd974, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa6cf, gbc.sp());
        EXPECT(0xd976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd974));
        EXPECT(0xea, gbc.readMem(0xd975));
        // CB EA 0216
        gbc.setState(0x1f5a, 0x2a0d, 0xaa70, 0x3619, 0x476b, 0xc727, 0x1, 0x0);
        gbc.writeMem(0x1f5a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2a0d, gbc.sp());
        EXPECT(0x1f5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0217
        gbc.setState(0xa279, 0xe18, 0xbad0, 0x9014, 0xebb1, 0xae7, 0x1, 0x1);
        gbc.writeMem(0xa279, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe18, gbc.sp());
        EXPECT(0xa27b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa279));
        EXPECT(0xea, gbc.readMem(0xa27a));
        // CB EA 0218
        gbc.setState(0x35fb, 0x416a, 0x9b00, 0xc1c1, 0x2ee0, 0x5d, 0x0, 0x0);
        gbc.writeMem(0x35fb, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x416a, gbc.sp());
        EXPECT(0x35fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0219
        gbc.setState(0x2310, 0xdc42, 0x8f80, 0xd73b, 0xc105, 0xb999, 0x1, 0x0);
        gbc.writeMem(0x2310, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xdc42, gbc.sp());
        EXPECT(0x2312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 021A
        gbc.setState(0x8df1, 0x8d12, 0x78b0, 0xf73e, 0xdf03, 0xe1d6, 0x0, 0x0);
        gbc.writeMem(0x8df1, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8d12, gbc.sp());
        EXPECT(0x8df3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df1));
        EXPECT(0xea, gbc.readMem(0x8df2));
        // CB EA 021B
        gbc.setState(0x8f03, 0x16dc, 0xebe0, 0x28ad, 0x5530, 0xa43d, 0x0, 0x1);
        gbc.writeMem(0x8f03, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x16dc, gbc.sp());
        EXPECT(0x8f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f03));
        EXPECT(0xea, gbc.readMem(0x8f04));
        // CB EA 021C
        gbc.setState(0x8108, 0xbe72, 0xbd20, 0xdcab, 0x2246, 0x330f, 0x0, 0x1);
        gbc.writeMem(0x8108, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbe72, gbc.sp());
        EXPECT(0x810a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8108));
        EXPECT(0xea, gbc.readMem(0x8109));
        // CB EA 021D
        gbc.setState(0xd45b, 0xdcbd, 0xdb50, 0xaa99, 0xeadf, 0x124d, 0x1, 0x1);
        gbc.writeMem(0xd45b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xdcbd, gbc.sp());
        EXPECT(0xd45d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd45b));
        EXPECT(0xea, gbc.readMem(0xd45c));
        // CB EA 021E
        gbc.setState(0xecae, 0x47b3, 0xfd20, 0x3f1e, 0x78aa, 0xcc31, 0x1, 0x0);
        gbc.writeMem(0xecae, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x47b3, gbc.sp());
        EXPECT(0xecb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecae));
        EXPECT(0xea, gbc.readMem(0xecaf));
        // CB EA 021F
        gbc.setState(0x4b00, 0xaa65, 0x1090, 0x69d0, 0xe5b3, 0x41e7, 0x1, 0x0);
        gbc.writeMem(0x4b00, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xaa65, gbc.sp());
        EXPECT(0x4b02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0220
        gbc.setState(0xa120, 0x9c88, 0x9bc0, 0x6b30, 0x2e7e, 0x1e24, 0x0, 0x1);
        gbc.writeMem(0xa120, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9c88, gbc.sp());
        EXPECT(0xa122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa120));
        EXPECT(0xea, gbc.readMem(0xa121));
        // CB EA 0222
        gbc.setState(0xf9, 0xc2d5, 0x0, 0x975f, 0x44a2, 0x2f1e, 0x0, 0x1);
        gbc.writeMem(0xf9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc2d5, gbc.sp());
        EXPECT(0xfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0223
        gbc.setState(0x6f25, 0x6c5d, 0xe620, 0x54be, 0xd1, 0x9604, 0x1, 0x0);
        gbc.writeMem(0x6f25, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6c5d, gbc.sp());
        EXPECT(0x6f27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0224
        gbc.setState(0xd16d, 0xa44d, 0xde0, 0x3f83, 0x2799, 0x7078, 0x1, 0x1);
        gbc.writeMem(0xd16d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa44d, gbc.sp());
        EXPECT(0xd16f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd16d));
        EXPECT(0xea, gbc.readMem(0xd16e));
        // CB EA 0225
        gbc.setState(0xb9a4, 0x1b3c, 0xa830, 0x526f, 0x3a37, 0x9734, 0x0, 0x0);
        gbc.writeMem(0xb9a4, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1b3c, gbc.sp());
        EXPECT(0xb9a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9a4));
        EXPECT(0xea, gbc.readMem(0xb9a5));
        // CB EA 0226
        gbc.setState(0x2640, 0x2956, 0xf630, 0xa215, 0xa69, 0x1d00, 0x0, 0x1);
        gbc.writeMem(0x2640, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2956, gbc.sp());
        EXPECT(0x2642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0227
        gbc.setState(0x9058, 0xa565, 0x3fd0, 0x1656, 0xd2d0, 0x4d08, 0x1, 0x1);
        gbc.writeMem(0x9058, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa565, gbc.sp());
        EXPECT(0x905a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9058));
        EXPECT(0xea, gbc.readMem(0x9059));
        // CB EA 0228
        gbc.setState(0xebb9, 0x31b9, 0x3ac0, 0x33bf, 0x5f62, 0x3e53, 0x0, 0x1);
        gbc.writeMem(0xebb9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x31b9, gbc.sp());
        EXPECT(0xebbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb9));
        EXPECT(0xea, gbc.readMem(0xebba));
        // CB EA 0229
        gbc.setState(0x63c2, 0xbb94, 0xe090, 0x6623, 0x3127, 0x3039, 0x1, 0x1);
        gbc.writeMem(0x63c2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbb94, gbc.sp());
        EXPECT(0x63c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 022A
        gbc.setState(0xd76c, 0x1c4a, 0x4d50, 0x9a5f, 0xb2ce, 0x1484, 0x1, 0x1);
        gbc.writeMem(0xd76c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1c4a, gbc.sp());
        EXPECT(0xd76e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd76c));
        EXPECT(0xea, gbc.readMem(0xd76d));
        // CB EA 022B
        gbc.setState(0xe8f7, 0xb9de, 0xe050, 0x438, 0x1f9f, 0x398b, 0x0, 0x0);
        gbc.writeMem(0xe8f7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb9de, gbc.sp());
        EXPECT(0xe8f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8f7));
        EXPECT(0xea, gbc.readMem(0xe8f8));
        // CB EA 022C
        gbc.setState(0x9250, 0x60a7, 0x3410, 0xc7a4, 0x4038, 0xd3b2, 0x1, 0x1);
        gbc.writeMem(0x9250, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x60a7, gbc.sp());
        EXPECT(0x9252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9250));
        EXPECT(0xea, gbc.readMem(0x9251));
        // CB EA 022D
        gbc.setState(0x27a6, 0x6acd, 0x2010, 0xeb1b, 0x158b, 0xfdac, 0x0, 0x1);
        gbc.writeMem(0x27a6, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6acd, gbc.sp());
        EXPECT(0x27a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 022E
        gbc.setState(0x2551, 0xb3da, 0x17d0, 0x2fb3, 0xea7e, 0x4333, 0x0, 0x1);
        gbc.writeMem(0x2551, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb3da, gbc.sp());
        EXPECT(0x2553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 022F
        gbc.setState(0xa97f, 0x237f, 0x88b0, 0x4a7f, 0x9146, 0x64a5, 0x0, 0x1);
        gbc.writeMem(0xa97f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x237f, gbc.sp());
        EXPECT(0xa981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa97f));
        EXPECT(0xea, gbc.readMem(0xa980));
        // CB EA 0230
        gbc.setState(0x8f51, 0x5cdc, 0x15b0, 0xd1de, 0xccac, 0x9d16, 0x0, 0x1);
        gbc.writeMem(0x8f51, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5cdc, gbc.sp());
        EXPECT(0x8f53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f51));
        EXPECT(0xea, gbc.readMem(0x8f52));
        // CB EA 0231
        gbc.setState(0xe4cf, 0x30c0, 0x2010, 0xdb04, 0x4f5, 0xeb20, 0x0, 0x0);
        gbc.writeMem(0xe4cf, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x30c0, gbc.sp());
        EXPECT(0xe4d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4cf));
        EXPECT(0xea, gbc.readMem(0xe4d0));
        // CB EA 0232
        gbc.setState(0x51f7, 0xe37a, 0xb0a0, 0x13ca, 0xbbf8, 0x52c2, 0x1, 0x1);
        gbc.writeMem(0x51f7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe37a, gbc.sp());
        EXPECT(0x51f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0233
        gbc.setState(0xc613, 0xb288, 0x14e0, 0xdf73, 0x5cd5, 0xb638, 0x1, 0x1);
        gbc.writeMem(0xc613, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb288, gbc.sp());
        EXPECT(0xc615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc613));
        EXPECT(0xea, gbc.readMem(0xc614));
        // CB EA 0234
        gbc.setState(0xb5ff, 0xf009, 0xc840, 0x360, 0x9d40, 0x24d4, 0x0, 0x0);
        gbc.writeMem(0xb5ff, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf009, gbc.sp());
        EXPECT(0xb601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ff));
        EXPECT(0xea, gbc.readMem(0xb600));
        // CB EA 0235
        gbc.setState(0x9b8a, 0x54e4, 0x77e0, 0x65ef, 0xcf03, 0x86ae, 0x0, 0x1);
        gbc.writeMem(0x9b8a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x54e4, gbc.sp());
        EXPECT(0x9b8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b8a));
        EXPECT(0xea, gbc.readMem(0x9b8b));
        // CB EA 0236
        gbc.setState(0xe005, 0x4fea, 0x92d0, 0x5607, 0xec97, 0x9cda, 0x0, 0x0);
        gbc.writeMem(0xe005, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4fea, gbc.sp());
        EXPECT(0xe007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe005));
        EXPECT(0xea, gbc.readMem(0xe006));
        // CB EA 0239
        gbc.setState(0xb865, 0xd2d9, 0xa610, 0xf75e, 0x489f, 0xc392, 0x1, 0x1);
        gbc.writeMem(0xb865, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd2d9, gbc.sp());
        EXPECT(0xb867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb865));
        EXPECT(0xea, gbc.readMem(0xb866));
        // CB EA 023A
        gbc.setState(0x56c, 0x62de, 0x9a60, 0x65e8, 0x3b39, 0x39eb, 0x1, 0x0);
        gbc.writeMem(0x56c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x62de, gbc.sp());
        EXPECT(0x56e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 023B
        gbc.setState(0x27fe, 0x7d17, 0xb210, 0x80fa, 0x2e42, 0x1bb, 0x0, 0x1);
        gbc.writeMem(0x27fe, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7d17, gbc.sp());
        EXPECT(0x2800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 023C
        gbc.setState(0x9570, 0xb24f, 0x9f0, 0xde65, 0xf141, 0x31e, 0x1, 0x0);
        gbc.writeMem(0x9570, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb24f, gbc.sp());
        EXPECT(0x9572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9570));
        EXPECT(0xea, gbc.readMem(0x9571));
        // CB EA 023D
        gbc.setState(0xb0b, 0x818e, 0xd920, 0x9b49, 0x5a0f, 0x12c6, 0x0, 0x1);
        gbc.writeMem(0xb0b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x818e, gbc.sp());
        EXPECT(0xb0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 023E
        gbc.setState(0x639e, 0x3e85, 0x19c0, 0x2124, 0x67c2, 0xc2b1, 0x0, 0x0);
        gbc.writeMem(0x639e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3e85, gbc.sp());
        EXPECT(0x63a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 023F
        gbc.setState(0x441b, 0xd6ca, 0xee30, 0x7d90, 0x9d42, 0x51c1, 0x1, 0x0);
        gbc.writeMem(0x441b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd6ca, gbc.sp());
        EXPECT(0x441d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0240
        gbc.setState(0x500c, 0xc90b, 0x4860, 0x3c7a, 0x19c5, 0xf80, 0x0, 0x0);
        gbc.writeMem(0x500c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc90b, gbc.sp());
        EXPECT(0x500e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0241
        gbc.setState(0xde22, 0xd918, 0x85e0, 0x5314, 0xb2ca, 0xf15, 0x1, 0x0);
        gbc.writeMem(0xde22, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd918, gbc.sp());
        EXPECT(0xde24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde22));
        EXPECT(0xea, gbc.readMem(0xde23));
        // CB EA 0242
        gbc.setState(0xb4f2, 0x5c80, 0x2d0, 0xb9c1, 0x91c0, 0x6efe, 0x1, 0x0);
        gbc.writeMem(0xb4f2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5c80, gbc.sp());
        EXPECT(0xb4f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f2));
        EXPECT(0xea, gbc.readMem(0xb4f3));
        // CB EA 0243
        gbc.setState(0x2323, 0x9fc4, 0xe530, 0x64d5, 0x2c1e, 0xf1bc, 0x0, 0x1);
        gbc.writeMem(0x2323, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9fc4, gbc.sp());
        EXPECT(0x2325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0244
        gbc.setState(0x5b49, 0x211, 0x3e70, 0x24dc, 0xf8fe, 0x114f, 0x1, 0x1);
        gbc.writeMem(0x5b49, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x211, gbc.sp());
        EXPECT(0x5b4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0245
        gbc.setState(0xa4fa, 0xd536, 0xd300, 0x801e, 0x71c6, 0xd55e, 0x0, 0x1);
        gbc.writeMem(0xa4fa, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd536, gbc.sp());
        EXPECT(0xa4fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4fa));
        EXPECT(0xea, gbc.readMem(0xa4fb));
        // CB EA 0246
        gbc.setState(0x6071, 0xf58b, 0x4b70, 0x81c7, 0x73ca, 0xd531, 0x0, 0x1);
        gbc.writeMem(0x6071, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf58b, gbc.sp());
        EXPECT(0x6073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0247
        gbc.setState(0x725a, 0x9e21, 0xf080, 0x7916, 0x9ffe, 0x2ebb, 0x1, 0x1);
        gbc.writeMem(0x725a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9e21, gbc.sp());
        EXPECT(0x725c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0248
        gbc.setState(0x117f, 0x6daf, 0x6ec0, 0x98ec, 0xb60d, 0x5d91, 0x0, 0x0);
        gbc.writeMem(0x117f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6daf, gbc.sp());
        EXPECT(0x1181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0249
        gbc.setState(0x74fe, 0xf663, 0xa1c0, 0x7bc4, 0x1e38, 0x5e2c, 0x1, 0x1);
        gbc.writeMem(0x74fe, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf663, gbc.sp());
        EXPECT(0x7500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 024A
        gbc.setState(0xa3b2, 0xd66, 0x2a80, 0x91b4, 0xd510, 0xb368, 0x1, 0x0);
        gbc.writeMem(0xa3b2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd66, gbc.sp());
        EXPECT(0xa3b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3b2));
        EXPECT(0xea, gbc.readMem(0xa3b3));
        // CB EA 024B
        gbc.setState(0x47ff, 0x4b2e, 0x83b0, 0x4f76, 0xda74, 0x1cdd, 0x1, 0x1);
        gbc.writeMem(0x47ff, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4b2e, gbc.sp());
        EXPECT(0x4801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 024C
        gbc.setState(0x736a, 0xf0e5, 0x78e0, 0xad09, 0x6d0f, 0xda0c, 0x0, 0x1);
        gbc.writeMem(0x736a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf0e5, gbc.sp());
        EXPECT(0x736c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 024E
        gbc.setState(0xb836, 0xbecc, 0xa1f0, 0xee81, 0x7697, 0xa235, 0x1, 0x1);
        gbc.writeMem(0xb836, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbecc, gbc.sp());
        EXPECT(0xb838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb836));
        EXPECT(0xea, gbc.readMem(0xb837));
        // CB EA 024F
        gbc.setState(0xef93, 0xff7, 0xf150, 0x7eae, 0x7d0f, 0x2cb7, 0x0, 0x1);
        gbc.writeMem(0xef93, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xff7, gbc.sp());
        EXPECT(0xef95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef93));
        EXPECT(0xea, gbc.readMem(0xef94));
        // CB EA 0250
        gbc.setState(0x617c, 0xb43, 0x7bb0, 0xd367, 0x3bcd, 0x41f9, 0x0, 0x0);
        gbc.writeMem(0x617c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb43, gbc.sp());
        EXPECT(0x617e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0251
        gbc.setState(0xd437, 0xde9d, 0xdb60, 0x6f7a, 0xf5a0, 0xe9c5, 0x0, 0x1);
        gbc.writeMem(0xd437, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xde9d, gbc.sp());
        EXPECT(0xd439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd437));
        EXPECT(0xea, gbc.readMem(0xd438));
        // CB EA 0252
        gbc.setState(0xd2b, 0x4997, 0xfa0, 0x8ea3, 0x5535, 0x4621, 0x0, 0x1);
        gbc.writeMem(0xd2b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4997, gbc.sp());
        EXPECT(0xd2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0253
        gbc.setState(0x56f8, 0xf52c, 0x8c90, 0x579, 0xd6ef, 0x6fec, 0x0, 0x0);
        gbc.writeMem(0x56f8, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf52c, gbc.sp());
        EXPECT(0x56fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0254
        gbc.setState(0x8bab, 0xa088, 0x23d0, 0x719e, 0xc46d, 0xdece, 0x0, 0x1);
        gbc.writeMem(0x8bab, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa088, gbc.sp());
        EXPECT(0x8bad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bab));
        EXPECT(0xea, gbc.readMem(0x8bac));
        // CB EA 0257
        gbc.setState(0xc19b, 0x22d1, 0x500, 0xceae, 0xf491, 0xadb7, 0x1, 0x1);
        gbc.writeMem(0xc19b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x22d1, gbc.sp());
        EXPECT(0xc19d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc19b));
        EXPECT(0xea, gbc.readMem(0xc19c));
        // CB EA 0258
        gbc.setState(0x86ae, 0x465d, 0x91e0, 0xf232, 0xa781, 0xd7e4, 0x0, 0x1);
        gbc.writeMem(0x86ae, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x465d, gbc.sp());
        EXPECT(0x86b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ae));
        EXPECT(0xea, gbc.readMem(0x86af));
        // CB EA 0259
        gbc.setState(0x95c7, 0x5393, 0x9310, 0x78df, 0x4ce, 0x32ad, 0x1, 0x1);
        gbc.writeMem(0x95c7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5393, gbc.sp());
        EXPECT(0x95c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95c7));
        EXPECT(0xea, gbc.readMem(0x95c8));
        // CB EA 025A
        gbc.setState(0x7fa2, 0xb638, 0x7ea0, 0x3c61, 0x4dcc, 0x42db, 0x1, 0x1);
        gbc.writeMem(0x7fa2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb638, gbc.sp());
        EXPECT(0x7fa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 025C
        gbc.setState(0x4aa4, 0xfbc8, 0x95d0, 0x9940, 0xbbe3, 0x6d71, 0x0, 0x0);
        gbc.writeMem(0x4aa4, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfbc8, gbc.sp());
        EXPECT(0x4aa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 025D
        gbc.setState(0x8ed5, 0xd09b, 0x9ea0, 0x33eb, 0x463e, 0xd69e, 0x1, 0x0);
        gbc.writeMem(0x8ed5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd09b, gbc.sp());
        EXPECT(0x8ed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ed5));
        EXPECT(0xea, gbc.readMem(0x8ed6));
        // CB EA 025E
        gbc.setState(0x1717, 0xc825, 0x1530, 0xaa31, 0x20fa, 0xe9c, 0x0, 0x0);
        gbc.writeMem(0x1717, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc825, gbc.sp());
        EXPECT(0x1719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 025F
        gbc.setState(0x7059, 0xef0a, 0x1920, 0x53ab, 0x6eb8, 0xcea8, 0x1, 0x1);
        gbc.writeMem(0x7059, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xef0a, gbc.sp());
        EXPECT(0x705b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0260
        gbc.setState(0xd18a, 0x33c8, 0x5b30, 0xd159, 0xf013, 0x69c0, 0x1, 0x0);
        gbc.writeMem(0xd18a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x33c8, gbc.sp());
        EXPECT(0xd18c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd18a));
        EXPECT(0xea, gbc.readMem(0xd18b));
        // CB EA 0261
        gbc.setState(0xe283, 0x11eb, 0x81b0, 0x2e18, 0x8a42, 0x2ec5, 0x0, 0x0);
        gbc.writeMem(0xe283, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x11eb, gbc.sp());
        EXPECT(0xe285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe283));
        EXPECT(0xea, gbc.readMem(0xe284));
        // CB EA 0262
        gbc.setState(0xe98c, 0xc1de, 0x6f10, 0x6bbe, 0xe852, 0x7282, 0x0, 0x0);
        gbc.writeMem(0xe98c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc1de, gbc.sp());
        EXPECT(0xe98e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe98c));
        EXPECT(0xea, gbc.readMem(0xe98d));
        // CB EA 0263
        gbc.setState(0x2ca, 0x4572, 0xbf70, 0x95c7, 0xd641, 0xaf1e, 0x1, 0x1);
        gbc.writeMem(0x2ca, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4572, gbc.sp());
        EXPECT(0x2cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0264
        gbc.setState(0x92c9, 0xb52c, 0x4d10, 0x35b, 0xe21f, 0x20c2, 0x0, 0x1);
        gbc.writeMem(0x92c9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb52c, gbc.sp());
        EXPECT(0x92cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c9));
        EXPECT(0xea, gbc.readMem(0x92ca));
        // CB EA 0265
        gbc.setState(0xba91, 0x4e5e, 0x30e0, 0x41e8, 0x60d5, 0xc948, 0x1, 0x0);
        gbc.writeMem(0xba91, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4e5e, gbc.sp());
        EXPECT(0xba93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba91));
        EXPECT(0xea, gbc.readMem(0xba92));
        // CB EA 0266
        gbc.setState(0xd889, 0x495d, 0x1a10, 0x2fa0, 0x5232, 0xe52b, 0x1, 0x1);
        gbc.writeMem(0xd889, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x495d, gbc.sp());
        EXPECT(0xd88b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd889));
        EXPECT(0xea, gbc.readMem(0xd88a));
        // CB EA 0267
        gbc.setState(0x44d5, 0xddb, 0x76b0, 0xdd0f, 0x5d91, 0x123d, 0x0, 0x1);
        gbc.writeMem(0x44d5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xddb, gbc.sp());
        EXPECT(0x44d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0268
        gbc.setState(0x9b89, 0xcb3c, 0xe40, 0x94ce, 0xf893, 0xfba7, 0x0, 0x0);
        gbc.writeMem(0x9b89, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xcb3c, gbc.sp());
        EXPECT(0x9b8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b89));
        EXPECT(0xea, gbc.readMem(0x9b8a));
        // CB EA 0269
        gbc.setState(0x3602, 0x2a33, 0x8800, 0x5af1, 0xaa37, 0xfc63, 0x0, 0x1);
        gbc.writeMem(0x3602, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2a33, gbc.sp());
        EXPECT(0x3604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 026A
        gbc.setState(0x7815, 0x476d, 0x6520, 0xc5e2, 0xf241, 0x3070, 0x0, 0x1);
        gbc.writeMem(0x7815, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x476d, gbc.sp());
        EXPECT(0x7817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 026B
        gbc.setState(0x6947, 0x4869, 0xff80, 0xcd92, 0x874e, 0xd860, 0x0, 0x0);
        gbc.writeMem(0x6947, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4869, gbc.sp());
        EXPECT(0x6949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 026C
        gbc.setState(0x918b, 0x8c81, 0x9710, 0xcf91, 0x44f6, 0x79ce, 0x0, 0x1);
        gbc.writeMem(0x918b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8c81, gbc.sp());
        EXPECT(0x918d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x918b));
        EXPECT(0xea, gbc.readMem(0x918c));
        // CB EA 026D
        gbc.setState(0xb8e2, 0x4ff3, 0x53d0, 0xf3ce, 0x8cd2, 0xbdc4, 0x0, 0x0);
        gbc.writeMem(0xb8e2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4ff3, gbc.sp());
        EXPECT(0xb8e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e2));
        EXPECT(0xea, gbc.readMem(0xb8e3));
        // CB EA 026E
        gbc.setState(0xbe6c, 0x4231, 0x5460, 0xb34, 0x15d5, 0x9c91, 0x1, 0x0);
        gbc.writeMem(0xbe6c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4231, gbc.sp());
        EXPECT(0xbe6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe6c));
        EXPECT(0xea, gbc.readMem(0xbe6d));
        // CB EA 026F
        gbc.setState(0x1952, 0x44f8, 0x9b10, 0x1504, 0xd2d3, 0x7fcc, 0x1, 0x0);
        gbc.writeMem(0x1952, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x44f8, gbc.sp());
        EXPECT(0x1954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0270
        gbc.setState(0x6a70, 0x9900, 0xdaf0, 0xf51d, 0x32c3, 0x98c2, 0x1, 0x1);
        gbc.writeMem(0x6a70, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9900, gbc.sp());
        EXPECT(0x6a72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0271
        gbc.setState(0xd324, 0xf39a, 0x570, 0x7c78, 0x2bfd, 0xea23, 0x0, 0x0);
        gbc.writeMem(0xd324, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf39a, gbc.sp());
        EXPECT(0xd326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd324));
        EXPECT(0xea, gbc.readMem(0xd325));
        // CB EA 0272
        gbc.setState(0x361e, 0xbf79, 0x40d0, 0x84f6, 0xd5f6, 0xdff7, 0x1, 0x1);
        gbc.writeMem(0x361e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbf79, gbc.sp());
        EXPECT(0x3620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0273
        gbc.setState(0xe5df, 0xf4d2, 0xa650, 0x799, 0x7b0b, 0x3e08, 0x0, 0x1);
        gbc.writeMem(0xe5df, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf4d2, gbc.sp());
        EXPECT(0xe5e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5df));
        EXPECT(0xea, gbc.readMem(0xe5e0));
        // CB EA 0274
        gbc.setState(0x373e, 0x43c5, 0xf690, 0x7eb8, 0x9c67, 0x5d8d, 0x1, 0x1);
        gbc.writeMem(0x373e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x43c5, gbc.sp());
        EXPECT(0x3740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0275
        gbc.setState(0x61f4, 0x4e2c, 0x1900, 0x8128, 0xcda, 0xbc2c, 0x0, 0x0);
        gbc.writeMem(0x61f4, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4e2c, gbc.sp());
        EXPECT(0x61f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0277
        gbc.setState(0x4d42, 0x2197, 0xb2b0, 0xf9d1, 0x5d3e, 0x9267, 0x0, 0x1);
        gbc.writeMem(0x4d42, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2197, gbc.sp());
        EXPECT(0x4d44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0278
        gbc.setState(0x2430, 0x2a1e, 0x4010, 0x5374, 0x739, 0xec84, 0x1, 0x0);
        gbc.writeMem(0x2430, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2a1e, gbc.sp());
        EXPECT(0x2432, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0279
        gbc.setState(0x2a70, 0x359b, 0x86b0, 0x1b59, 0x57ba, 0x67c1, 0x1, 0x1);
        gbc.writeMem(0x2a70, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x359b, gbc.sp());
        EXPECT(0x2a72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 027A
        gbc.setState(0xea8f, 0x2586, 0x4040, 0xceb2, 0xe8a9, 0xeaf1, 0x0, 0x1);
        gbc.writeMem(0xea8f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2586, gbc.sp());
        EXPECT(0xea91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea8f));
        EXPECT(0xea, gbc.readMem(0xea90));
        // CB EA 027B
        gbc.setState(0x7714, 0x7ac2, 0xbc50, 0x6ac6, 0xddf3, 0x17a8, 0x1, 0x0);
        gbc.writeMem(0x7714, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7ac2, gbc.sp());
        EXPECT(0x7716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 027C
        gbc.setState(0x3bdd, 0x4000, 0x4080, 0xe463, 0x3827, 0xef24, 0x1, 0x1);
        gbc.writeMem(0x3bdd, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4000, gbc.sp());
        EXPECT(0x3bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 027D
        gbc.setState(0x7d47, 0x4b5a, 0x9c40, 0x462d, 0xc02c, 0xe8d1, 0x0, 0x0);
        gbc.writeMem(0x7d47, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4b5a, gbc.sp());
        EXPECT(0x7d49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 027E
        gbc.setState(0x8423, 0x6b7, 0x1b40, 0xc0d2, 0x6723, 0xb2c0, 0x1, 0x0);
        gbc.writeMem(0x8423, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6b7, gbc.sp());
        EXPECT(0x8425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8423));
        EXPECT(0xea, gbc.readMem(0x8424));
        // CB EA 027F
        gbc.setState(0x4210, 0x25cd, 0xf680, 0xa07e, 0xfbe9, 0xc233, 0x1, 0x1);
        gbc.writeMem(0x4210, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x25cd, gbc.sp());
        EXPECT(0x4212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0280
        gbc.setState(0xa1e5, 0x9bca, 0x8320, 0x5efa, 0x1f36, 0xe284, 0x0, 0x1);
        gbc.writeMem(0xa1e5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9bca, gbc.sp());
        EXPECT(0xa1e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1e5));
        EXPECT(0xea, gbc.readMem(0xa1e6));
        // CB EA 0281
        gbc.setState(0x2bf2, 0xb5f6, 0xe790, 0x230e, 0x8120, 0x767e, 0x0, 0x1);
        gbc.writeMem(0x2bf2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb5f6, gbc.sp());
        EXPECT(0x2bf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0282
        gbc.setState(0x58db, 0x3413, 0x32f0, 0x50f1, 0xd4e9, 0x7c2a, 0x1, 0x1);
        gbc.writeMem(0x58db, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3413, gbc.sp());
        EXPECT(0x58dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0283
        gbc.setState(0x380e, 0xe49d, 0x43f0, 0x15a2, 0x6026, 0xb952, 0x0, 0x0);
        gbc.writeMem(0x380e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe49d, gbc.sp());
        EXPECT(0x3810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0284
        gbc.setState(0x998a, 0xa32f, 0x9c70, 0x376, 0x4556, 0x15, 0x1, 0x0);
        gbc.writeMem(0x998a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa32f, gbc.sp());
        EXPECT(0x998c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x998a));
        EXPECT(0xea, gbc.readMem(0x998b));
        // CB EA 0285
        gbc.setState(0xb07b, 0xe25c, 0x2390, 0xae20, 0x3753, 0x5b31, 0x1, 0x1);
        gbc.writeMem(0xb07b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe25c, gbc.sp());
        EXPECT(0xb07d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb07b));
        EXPECT(0xea, gbc.readMem(0xb07c));
        // CB EA 0286
        gbc.setState(0x860d, 0xbdc5, 0x2ad0, 0x386a, 0x9b39, 0xae52, 0x1, 0x0);
        gbc.writeMem(0x860d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xbdc5, gbc.sp());
        EXPECT(0x860f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x860d));
        EXPECT(0xea, gbc.readMem(0x860e));
        // CB EA 0287
        gbc.setState(0x44d4, 0xbf9, 0xa870, 0x4239, 0x9404, 0x140, 0x1, 0x1);
        gbc.writeMem(0x44d4, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xbf9, gbc.sp());
        EXPECT(0x44d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0288
        gbc.setState(0xd37c, 0xbf85, 0xb060, 0xd0a1, 0xf0d1, 0xf0fd, 0x1, 0x1);
        gbc.writeMem(0xd37c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xbf85, gbc.sp());
        EXPECT(0xd37e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd37c));
        EXPECT(0xea, gbc.readMem(0xd37d));
        // CB EA 0289
        gbc.setState(0x3742, 0xc9cc, 0xded0, 0x42db, 0xf142, 0x5e58, 0x0, 0x1);
        gbc.writeMem(0x3742, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc9cc, gbc.sp());
        EXPECT(0x3744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 028A
        gbc.setState(0xc199, 0x19f6, 0x8420, 0x18ed, 0x8ba6, 0xd48a, 0x0, 0x1);
        gbc.writeMem(0xc199, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x19f6, gbc.sp());
        EXPECT(0xc19b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc199));
        EXPECT(0xea, gbc.readMem(0xc19a));
        // CB EA 028B
        gbc.setState(0x12ab, 0x1baa, 0x2020, 0x78a9, 0xc17b, 0xc55b, 0x1, 0x0);
        gbc.writeMem(0x12ab, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1baa, gbc.sp());
        EXPECT(0x12ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 028C
        gbc.setState(0x46b6, 0x672c, 0x35a0, 0x9a06, 0x2e2a, 0x58df, 0x0, 0x0);
        gbc.writeMem(0x46b6, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x672c, gbc.sp());
        EXPECT(0x46b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 028E
        gbc.setState(0x630c, 0xa87d, 0x5830, 0xa191, 0x995d, 0x174b, 0x1, 0x0);
        gbc.writeMem(0x630c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa87d, gbc.sp());
        EXPECT(0x630e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 028F
        gbc.setState(0xe47e, 0x65aa, 0x3900, 0xe502, 0xd2, 0xb117, 0x1, 0x0);
        gbc.writeMem(0xe47e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x65aa, gbc.sp());
        EXPECT(0xe480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe47e));
        EXPECT(0xea, gbc.readMem(0xe47f));
        // CB EA 0291
        gbc.setState(0xf8c, 0xa9e5, 0x9190, 0xd616, 0x7d9e, 0xa888, 0x0, 0x0);
        gbc.writeMem(0xf8c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa9e5, gbc.sp());
        EXPECT(0xf8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0292
        gbc.setState(0xd270, 0x2afb, 0xa7a0, 0x6702, 0xc971, 0x8ce6, 0x0, 0x1);
        gbc.writeMem(0xd270, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2afb, gbc.sp());
        EXPECT(0xd272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd270));
        EXPECT(0xea, gbc.readMem(0xd271));
        // CB EA 0293
        gbc.setState(0xeede, 0x7afd, 0xd820, 0xdec4, 0x1a35, 0x36c0, 0x0, 0x0);
        gbc.writeMem(0xeede, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7afd, gbc.sp());
        EXPECT(0xeee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeede));
        EXPECT(0xea, gbc.readMem(0xeedf));
        // CB EA 0294
        gbc.setState(0xb269, 0xd02a, 0x92a0, 0x4089, 0x22eb, 0x4ab4, 0x1, 0x0);
        gbc.writeMem(0xb269, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd02a, gbc.sp());
        EXPECT(0xb26b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb269));
        EXPECT(0xea, gbc.readMem(0xb26a));
        // CB EA 0295
        gbc.setState(0x2e6a, 0xa967, 0x4470, 0x9190, 0xcbee, 0xc446, 0x1, 0x0);
        gbc.writeMem(0x2e6a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa967, gbc.sp());
        EXPECT(0x2e6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0296
        gbc.setState(0xca7f, 0xedd1, 0xebe0, 0xf29e, 0x2c67, 0x2194, 0x1, 0x0);
        gbc.writeMem(0xca7f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xedd1, gbc.sp());
        EXPECT(0xca81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca7f));
        EXPECT(0xea, gbc.readMem(0xca80));
        // CB EA 0297
        gbc.setState(0x7e00, 0xdee6, 0xc810, 0xa4c5, 0x45d1, 0xd8b, 0x1, 0x1);
        gbc.writeMem(0x7e00, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdee6, gbc.sp());
        EXPECT(0x7e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0298
        gbc.setState(0x1a40, 0xdec8, 0x8d00, 0x327a, 0x18ed, 0x749e, 0x0, 0x0);
        gbc.writeMem(0x1a40, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xdec8, gbc.sp());
        EXPECT(0x1a42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0299
        gbc.setState(0x15d8, 0x20ef, 0xb710, 0x27bf, 0x4c52, 0x712, 0x1, 0x1);
        gbc.writeMem(0x15d8, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x20ef, gbc.sp());
        EXPECT(0x15da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 029A
        gbc.setState(0x1246, 0xfe5c, 0x4d70, 0xe0e1, 0xc8ce, 0xcb98, 0x1, 0x0);
        gbc.writeMem(0x1246, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xfe5c, gbc.sp());
        EXPECT(0x1248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 029B
        gbc.setState(0xbf5, 0xd376, 0xf320, 0x9448, 0x4ef1, 0xbd56, 0x0, 0x0);
        gbc.writeMem(0xbf5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd376, gbc.sp());
        EXPECT(0xbf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 029C
        gbc.setState(0x6035, 0xdd20, 0x5270, 0x3969, 0xe42a, 0xba85, 0x1, 0x1);
        gbc.writeMem(0x6035, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xdd20, gbc.sp());
        EXPECT(0x6037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 029D
        gbc.setState(0x4266, 0x754d, 0xc120, 0x6ba1, 0xd274, 0xb863, 0x0, 0x1);
        gbc.writeMem(0x4266, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x754d, gbc.sp());
        EXPECT(0x4268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 029F
        gbc.setState(0x760d, 0xd36b, 0xb090, 0xa1ba, 0x23c9, 0x68f1, 0x0, 0x1);
        gbc.writeMem(0x760d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd36b, gbc.sp());
        EXPECT(0x760f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02A0
        gbc.setState(0x9ff7, 0x88a8, 0x78a0, 0xab2a, 0x8000, 0x6cbc, 0x1, 0x1);
        gbc.writeMem(0x9ff7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x88a8, gbc.sp());
        EXPECT(0x9ff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ff7));
        EXPECT(0xea, gbc.readMem(0x9ff8));
        // CB EA 02A1
        gbc.setState(0xb0e4, 0x4f41, 0xfcd0, 0x4a3f, 0x2f03, 0x566e, 0x0, 0x1);
        gbc.writeMem(0xb0e4, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4f41, gbc.sp());
        EXPECT(0xb0e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e4));
        EXPECT(0xea, gbc.readMem(0xb0e5));
        // CB EA 02A2
        gbc.setState(0xb280, 0xb9e8, 0x82a0, 0x47cc, 0x6e81, 0xb903, 0x1, 0x0);
        gbc.writeMem(0xb280, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb9e8, gbc.sp());
        EXPECT(0xb282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb280));
        EXPECT(0xea, gbc.readMem(0xb281));
        // CB EA 02A3
        gbc.setState(0x6a5b, 0x6124, 0x310, 0xee58, 0x31be, 0xb821, 0x1, 0x0);
        gbc.writeMem(0x6a5b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6124, gbc.sp());
        EXPECT(0x6a5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02A4
        gbc.setState(0x4c6e, 0xe337, 0xcc00, 0x3b3c, 0xf916, 0x98cf, 0x0, 0x1);
        gbc.writeMem(0x4c6e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe337, gbc.sp());
        EXPECT(0x4c70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 02A5
        gbc.setState(0x8133, 0x7dcf, 0x8a70, 0xf7e2, 0x7b1b, 0x504f, 0x0, 0x1);
        gbc.writeMem(0x8133, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7dcf, gbc.sp());
        EXPECT(0x8135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8133));
        EXPECT(0xea, gbc.readMem(0x8134));
        // CB EA 02A6
        gbc.setState(0x9d5d, 0xeeaf, 0x4230, 0x9390, 0x21be, 0x9b03, 0x0, 0x1);
        gbc.writeMem(0x9d5d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xeeaf, gbc.sp());
        EXPECT(0x9d5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d5d));
        EXPECT(0xea, gbc.readMem(0x9d5e));
        // CB EA 02A7
        gbc.setState(0xe6d9, 0xbfcb, 0x8310, 0xb7e7, 0xaa32, 0x8eb8, 0x0, 0x1);
        gbc.writeMem(0xe6d9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbfcb, gbc.sp());
        EXPECT(0xe6db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6d9));
        EXPECT(0xea, gbc.readMem(0xe6da));
        // CB EA 02A8
        gbc.setState(0xb6e3, 0x6632, 0x1e00, 0x5ee9, 0xf988, 0xff8f, 0x1, 0x1);
        gbc.writeMem(0xb6e3, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6632, gbc.sp());
        EXPECT(0xb6e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6e3));
        EXPECT(0xea, gbc.readMem(0xb6e4));
        // CB EA 02A9
        gbc.setState(0xbd13, 0x16d6, 0x8cc0, 0x6fc2, 0x53e5, 0x5a17, 0x1, 0x0);
        gbc.writeMem(0xbd13, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x16d6, gbc.sp());
        EXPECT(0xbd15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd13));
        EXPECT(0xea, gbc.readMem(0xbd14));
        // CB EA 02AA
        gbc.setState(0xdcb5, 0x22e8, 0xac90, 0x1d09, 0x694d, 0x8040, 0x0, 0x0);
        gbc.writeMem(0xdcb5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x22e8, gbc.sp());
        EXPECT(0xdcb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb5));
        EXPECT(0xea, gbc.readMem(0xdcb6));
        // CB EA 02AB
        gbc.setState(0x3360, 0x9aac, 0xc930, 0xe174, 0xb551, 0x8530, 0x0, 0x0);
        gbc.writeMem(0x3360, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9aac, gbc.sp());
        EXPECT(0x3362, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02AC
        gbc.setState(0xe92c, 0xd834, 0xb2c0, 0x8d2b, 0x22b, 0xf0c6, 0x0, 0x0);
        gbc.writeMem(0xe92c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd834, gbc.sp());
        EXPECT(0xe92e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe92c));
        EXPECT(0xea, gbc.readMem(0xe92d));
        // CB EA 02AD
        gbc.setState(0x739a, 0x1003, 0x2b40, 0x1dab, 0xdaa6, 0xfe83, 0x1, 0x0);
        gbc.writeMem(0x739a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1003, gbc.sp());
        EXPECT(0x739c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 02AE
        gbc.setState(0xc55d, 0x130f, 0x32a0, 0xdba2, 0x1be, 0x4e8c, 0x0, 0x1);
        gbc.writeMem(0xc55d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x130f, gbc.sp());
        EXPECT(0xc55f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc55d));
        EXPECT(0xea, gbc.readMem(0xc55e));
        // CB EA 02AF
        gbc.setState(0xd9cc, 0x7b13, 0xb090, 0xd86d, 0x193a, 0xf465, 0x0, 0x1);
        gbc.writeMem(0xd9cc, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7b13, gbc.sp());
        EXPECT(0xd9ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9cc));
        EXPECT(0xea, gbc.readMem(0xd9cd));
        // CB EA 02B0
        gbc.setState(0x3c0a, 0x1b6a, 0x7f90, 0xf385, 0xe12a, 0x51a4, 0x0, 0x1);
        gbc.writeMem(0x3c0a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1b6a, gbc.sp());
        EXPECT(0x3c0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02B1
        gbc.setState(0x2202, 0xae27, 0xc2d0, 0xb301, 0x116f, 0x6631, 0x1, 0x1);
        gbc.writeMem(0x2202, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xae27, gbc.sp());
        EXPECT(0x2204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02B2
        gbc.setState(0x16b2, 0xe37e, 0xef40, 0x891a, 0x934a, 0x3c6a, 0x1, 0x1);
        gbc.writeMem(0x16b2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe37e, gbc.sp());
        EXPECT(0x16b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 02B3
        gbc.setState(0x715b, 0x8db9, 0xcb10, 0xd476, 0x6299, 0xf50f, 0x0, 0x0);
        gbc.writeMem(0x715b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8db9, gbc.sp());
        EXPECT(0x715d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02B4
        gbc.setState(0xeba1, 0x5022, 0x9590, 0x3166, 0xb0b0, 0x40cf, 0x0, 0x1);
        gbc.writeMem(0xeba1, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5022, gbc.sp());
        EXPECT(0xeba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeba1));
        EXPECT(0xea, gbc.readMem(0xeba2));
        // CB EA 02B5
        gbc.setState(0x3d68, 0x2bc8, 0xed30, 0xd7da, 0x71b5, 0x4879, 0x1, 0x0);
        gbc.writeMem(0x3d68, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2bc8, gbc.sp());
        EXPECT(0x3d6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02B6
        gbc.setState(0x360d, 0x8370, 0x7da0, 0xc850, 0x24f7, 0xd16c, 0x1, 0x0);
        gbc.writeMem(0x360d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8370, gbc.sp());
        EXPECT(0x360f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 02B7
        gbc.setState(0xe218, 0x5a81, 0x520, 0x6e17, 0x774a, 0x52d7, 0x1, 0x0);
        gbc.writeMem(0xe218, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5a81, gbc.sp());
        EXPECT(0xe21a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe218));
        EXPECT(0xea, gbc.readMem(0xe219));
        // CB EA 02B8
        gbc.setState(0xcfd1, 0x291f, 0xb530, 0x9458, 0xa6cf, 0x7c0b, 0x0, 0x1);
        gbc.writeMem(0xcfd1, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x291f, gbc.sp());
        EXPECT(0xcfd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd1));
        EXPECT(0xea, gbc.readMem(0xcfd2));
        // CB EA 02B9
        gbc.setState(0xb665, 0xd9c6, 0x6080, 0x74a7, 0x1d41, 0x82f1, 0x1, 0x0);
        gbc.writeMem(0xb665, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd9c6, gbc.sp());
        EXPECT(0xb667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb665));
        EXPECT(0xea, gbc.readMem(0xb666));
        // CB EA 02BA
        gbc.setState(0xb06d, 0x8090, 0x6fe0, 0x5d3e, 0x84b2, 0x1811, 0x1, 0x0);
        gbc.writeMem(0xb06d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8090, gbc.sp());
        EXPECT(0xb06f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb06d));
        EXPECT(0xea, gbc.readMem(0xb06e));
        // CB EA 02BB
        gbc.setState(0x7b28, 0xb9a0, 0x6600, 0xd9b, 0x275e, 0x436d, 0x0, 0x0);
        gbc.writeMem(0x7b28, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb9a0, gbc.sp());
        EXPECT(0x7b2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 02BC
        gbc.setState(0x105a, 0xcb95, 0x5730, 0x7f75, 0xc15d, 0x35c0, 0x0, 0x0);
        gbc.writeMem(0x105a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xcb95, gbc.sp());
        EXPECT(0x105c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02BD
        gbc.setState(0xa2e7, 0x7c12, 0x71c0, 0xda08, 0xacf1, 0xf642, 0x0, 0x0);
        gbc.writeMem(0xa2e7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7c12, gbc.sp());
        EXPECT(0xa2e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2e7));
        EXPECT(0xea, gbc.readMem(0xa2e8));
        // CB EA 02BE
        gbc.setState(0x44f9, 0x26e1, 0xb1e0, 0x8aa3, 0x57d, 0x3444, 0x1, 0x1);
        gbc.writeMem(0x44f9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x26e1, gbc.sp());
        EXPECT(0x44fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 02BF
        gbc.setState(0xcf2e, 0xedd1, 0x24c0, 0x806e, 0x78dc, 0x473b, 0x0, 0x0);
        gbc.writeMem(0xcf2e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xedd1, gbc.sp());
        EXPECT(0xcf30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf2e));
        EXPECT(0xea, gbc.readMem(0xcf2f));
        // CB EA 02C0
        gbc.setState(0x7c6a, 0x5b6e, 0x1a00, 0x21eb, 0xe398, 0x9dff, 0x1, 0x1);
        gbc.writeMem(0x7c6a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5b6e, gbc.sp());
        EXPECT(0x7c6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 02C1
        gbc.setState(0xe053, 0x1500, 0x1f10, 0x5225, 0x544b, 0x56d, 0x0, 0x0);
        gbc.writeMem(0xe053, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1500, gbc.sp());
        EXPECT(0xe055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe053));
        EXPECT(0xea, gbc.readMem(0xe054));
        // CB EA 02C2
        gbc.setState(0x22a9, 0x5893, 0x9b0, 0xfef3, 0xa66, 0x1b51, 0x0, 0x1);
        gbc.writeMem(0x22a9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5893, gbc.sp());
        EXPECT(0x22ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02C3
        gbc.setState(0x7eec, 0xad74, 0x8a60, 0x2db9, 0x9a2e, 0x91b2, 0x1, 0x0);
        gbc.writeMem(0x7eec, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xad74, gbc.sp());
        EXPECT(0x7eee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 02C4
        gbc.setState(0x1f65, 0xd5b0, 0x64f0, 0xb60d, 0x5a34, 0x23dd, 0x0, 0x0);
        gbc.writeMem(0x1f65, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd5b0, gbc.sp());
        EXPECT(0x1f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02C5
        gbc.setState(0xb81c, 0x6427, 0xa920, 0x3fce, 0xa6dc, 0x35d8, 0x1, 0x1);
        gbc.writeMem(0xb81c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6427, gbc.sp());
        EXPECT(0xb81e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb81c));
        EXPECT(0xea, gbc.readMem(0xb81d));
        // CB EA 02C6
        gbc.setState(0xc643, 0x7f8a, 0x5f00, 0x8961, 0xb948, 0x3277, 0x1, 0x1);
        gbc.writeMem(0xc643, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7f8a, gbc.sp());
        EXPECT(0xc645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc643));
        EXPECT(0xea, gbc.readMem(0xc644));
        // CB EA 02C7
        gbc.setState(0x9f5a, 0x8b1a, 0x4dc0, 0xed57, 0x8989, 0xbaf0, 0x1, 0x0);
        gbc.writeMem(0x9f5a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8b1a, gbc.sp());
        EXPECT(0x9f5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f5a));
        EXPECT(0xea, gbc.readMem(0x9f5b));
        // CB EA 02C8
        gbc.setState(0x70c6, 0x83f3, 0xc850, 0xeff2, 0xfd7f, 0xf71b, 0x0, 0x1);
        gbc.writeMem(0x70c6, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x83f3, gbc.sp());
        EXPECT(0x70c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02C9
        gbc.setState(0xefa5, 0xd6c8, 0x3a30, 0x814b, 0xe341, 0x56df, 0x1, 0x1);
        gbc.writeMem(0xefa5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd6c8, gbc.sp());
        EXPECT(0xefa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefa5));
        EXPECT(0xea, gbc.readMem(0xefa6));
        // CB EA 02CA
        gbc.setState(0xd470, 0x9091, 0x69a0, 0x5fe7, 0xe867, 0x753d, 0x1, 0x0);
        gbc.writeMem(0xd470, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9091, gbc.sp());
        EXPECT(0xd472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd470));
        EXPECT(0xea, gbc.readMem(0xd471));
        // CB EA 02CB
        gbc.setState(0x4b9e, 0xf513, 0xd730, 0x9ac8, 0x94b8, 0xa22a, 0x1, 0x0);
        gbc.writeMem(0x4b9e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf513, gbc.sp());
        EXPECT(0x4ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02CC
        gbc.setState(0x7c5, 0x30a, 0x8380, 0xfe04, 0x3b1e, 0x5417, 0x1, 0x1);
        gbc.writeMem(0x7c5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x30a, gbc.sp());
        EXPECT(0x7c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 02CD
        gbc.setState(0xef8, 0x7855, 0x8460, 0xe67b, 0x8798, 0xb9cb, 0x0, 0x0);
        gbc.writeMem(0xef8, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7855, gbc.sp());
        EXPECT(0xefa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 02CE
        gbc.setState(0x3b07, 0x4a89, 0xa870, 0x6fa0, 0xeebe, 0x4c1f, 0x1, 0x0);
        gbc.writeMem(0x3b07, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4a89, gbc.sp());
        EXPECT(0x3b09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02CF
        gbc.setState(0xa807, 0x66a3, 0xeee0, 0x226d, 0x2a00, 0x56c1, 0x0, 0x1);
        gbc.writeMem(0xa807, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x66a3, gbc.sp());
        EXPECT(0xa809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa807));
        EXPECT(0xea, gbc.readMem(0xa808));
        // CB EA 02D0
        gbc.setState(0x956f, 0x7e8d, 0x28d0, 0x3a69, 0xd040, 0xcac4, 0x0, 0x1);
        gbc.writeMem(0x956f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7e8d, gbc.sp());
        EXPECT(0x9571, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x956f));
        EXPECT(0xea, gbc.readMem(0x9570));
        // CB EA 02D1
        gbc.setState(0x651f, 0x96e8, 0x82f0, 0x4688, 0xa8de, 0x3ba3, 0x1, 0x0);
        gbc.writeMem(0x651f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x96e8, gbc.sp());
        EXPECT(0x6521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02D2
        gbc.setState(0x7dcd, 0x889b, 0xba60, 0xd2ed, 0x8b0, 0x4dd7, 0x1, 0x1);
        gbc.writeMem(0x7dcd, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x889b, gbc.sp());
        EXPECT(0x7dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 02D3
        gbc.setState(0x11c, 0x3bc8, 0x70b0, 0x8807, 0x4fa1, 0xa6ce, 0x1, 0x0);
        gbc.writeMem(0x11c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3bc8, gbc.sp());
        EXPECT(0x11e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02D5
        gbc.setState(0x9824, 0x9a13, 0xa620, 0xf5d4, 0xae1b, 0xfa2f, 0x1, 0x1);
        gbc.writeMem(0x9824, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9a13, gbc.sp());
        EXPECT(0x9826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9824));
        EXPECT(0xea, gbc.readMem(0x9825));
        // CB EA 02D6
        gbc.setState(0x9b3a, 0xc615, 0xf990, 0x124a, 0x50a0, 0x6a76, 0x0, 0x0);
        gbc.writeMem(0x9b3a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc615, gbc.sp());
        EXPECT(0x9b3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b3a));
        EXPECT(0xea, gbc.readMem(0x9b3b));
        // CB EA 02D7
        gbc.setState(0x8053, 0x3302, 0x5fb0, 0x455f, 0xe11, 0x451, 0x0, 0x0);
        gbc.writeMem(0x8053, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3302, gbc.sp());
        EXPECT(0x8055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8053));
        EXPECT(0xea, gbc.readMem(0x8054));
        // CB EA 02D8
        gbc.setState(0xc575, 0xe7c4, 0x2870, 0xbbff, 0x5d5d, 0x2b1c, 0x1, 0x0);
        gbc.writeMem(0xc575, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe7c4, gbc.sp());
        EXPECT(0xc577, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc575));
        EXPECT(0xea, gbc.readMem(0xc576));
        // CB EA 02D9
        gbc.setState(0x39ea, 0xd573, 0xdc70, 0x19d8, 0xce8c, 0xdf30, 0x1, 0x0);
        gbc.writeMem(0x39ea, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd573, gbc.sp());
        EXPECT(0x39ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02DA
        gbc.setState(0x8970, 0x28a4, 0xd4b0, 0xc153, 0x6d74, 0x3047, 0x0, 0x0);
        gbc.writeMem(0x8970, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x28a4, gbc.sp());
        EXPECT(0x8972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8970));
        EXPECT(0xea, gbc.readMem(0x8971));
        // CB EA 02DB
        gbc.setState(0x5654, 0x3b5d, 0x40, 0x8b66, 0x63b6, 0x8903, 0x1, 0x1);
        gbc.writeMem(0x5654, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3b5d, gbc.sp());
        EXPECT(0x5656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 02DC
        gbc.setState(0x4946, 0x8c8, 0x59f0, 0x648f, 0x7bb2, 0x64a6, 0x0, 0x1);
        gbc.writeMem(0x4946, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8c8, gbc.sp());
        EXPECT(0x4948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02DD
        gbc.setState(0xe963, 0xa833, 0x5720, 0x172f, 0x3c4c, 0x6492, 0x1, 0x0);
        gbc.writeMem(0xe963, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa833, gbc.sp());
        EXPECT(0xe965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe963));
        EXPECT(0xea, gbc.readMem(0xe964));
        // CB EA 02DE
        gbc.setState(0x7d7, 0xa072, 0xf700, 0xf231, 0x7d53, 0xf4a8, 0x1, 0x0);
        gbc.writeMem(0x7d7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa072, gbc.sp());
        EXPECT(0x7d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 02DF
        gbc.setState(0x84f4, 0x872f, 0x6760, 0xe28c, 0x9e16, 0xc9f3, 0x1, 0x0);
        gbc.writeMem(0x84f4, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x872f, gbc.sp());
        EXPECT(0x84f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f4));
        EXPECT(0xea, gbc.readMem(0x84f5));
        // CB EA 02E0
        gbc.setState(0x7388, 0x7014, 0x1f00, 0x1afc, 0x8d82, 0xd970, 0x1, 0x0);
        gbc.writeMem(0x7388, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7014, gbc.sp());
        EXPECT(0x738a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 02E2
        gbc.setState(0x18e2, 0x27ac, 0xa6e0, 0xba8c, 0x5167, 0xf71e, 0x1, 0x1);
        gbc.writeMem(0x18e2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x27ac, gbc.sp());
        EXPECT(0x18e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 02E3
        gbc.setState(0x80a6, 0xd05f, 0x8730, 0x2a3f, 0x9964, 0x1e2, 0x0, 0x1);
        gbc.writeMem(0x80a6, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd05f, gbc.sp());
        EXPECT(0x80a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a6));
        EXPECT(0xea, gbc.readMem(0x80a7));
        // CB EA 02E4
        gbc.setState(0x5b7f, 0x1d8f, 0x6480, 0x13e0, 0xbe87, 0xa56d, 0x1, 0x0);
        gbc.writeMem(0x5b7f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1d8f, gbc.sp());
        EXPECT(0x5b81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 02E5
        gbc.setState(0xe786, 0xbae6, 0xc200, 0x4889, 0x52ba, 0xf256, 0x0, 0x0);
        gbc.writeMem(0xe786, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbae6, gbc.sp());
        EXPECT(0xe788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe786));
        EXPECT(0xea, gbc.readMem(0xe787));
        // CB EA 02E6
        gbc.setState(0x889d, 0xd522, 0x2fc0, 0xa009, 0x4f96, 0x8c9b, 0x0, 0x1);
        gbc.writeMem(0x889d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd522, gbc.sp());
        EXPECT(0x889f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x889d));
        EXPECT(0xea, gbc.readMem(0x889e));
        // CB EA 02E7
        gbc.setState(0x9b22, 0x9028, 0xdc80, 0x2ade, 0x7b4d, 0x44b1, 0x1, 0x0);
        gbc.writeMem(0x9b22, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9028, gbc.sp());
        EXPECT(0x9b24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b22));
        EXPECT(0xea, gbc.readMem(0x9b23));
        // CB EA 02E8
        gbc.setState(0x8693, 0x8e13, 0xc520, 0xf5b, 0xd421, 0xeaa7, 0x0, 0x0);
        gbc.writeMem(0x8693, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8e13, gbc.sp());
        EXPECT(0x8695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8693));
        EXPECT(0xea, gbc.readMem(0x8694));
        // CB EA 02E9
        gbc.setState(0xbec1, 0xc59f, 0xdc0, 0xf433, 0xf609, 0x6d4a, 0x1, 0x0);
        gbc.writeMem(0xbec1, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc59f, gbc.sp());
        EXPECT(0xbec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbec1));
        EXPECT(0xea, gbc.readMem(0xbec2));
        // CB EA 02EA
        gbc.setState(0x9357, 0x6513, 0xc480, 0xac68, 0x4f15, 0xdf02, 0x1, 0x1);
        gbc.writeMem(0x9357, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6513, gbc.sp());
        EXPECT(0x9359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9357));
        EXPECT(0xea, gbc.readMem(0x9358));
        // CB EA 02EB
        gbc.setState(0x71b0, 0x1b9f, 0x8d0, 0xe4f0, 0x250b, 0x5954, 0x0, 0x1);
        gbc.writeMem(0x71b0, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1b9f, gbc.sp());
        EXPECT(0x71b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02EC
        gbc.setState(0x352a, 0x1031, 0x48d0, 0x4524, 0x2ece, 0x1148, 0x1, 0x0);
        gbc.writeMem(0x352a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1031, gbc.sp());
        EXPECT(0x352c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02ED
        gbc.setState(0x3ef4, 0xe87d, 0xe9f0, 0x29ac, 0xcfde, 0x2134, 0x1, 0x1);
        gbc.writeMem(0x3ef4, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe87d, gbc.sp());
        EXPECT(0x3ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02EE
        gbc.setState(0xa6b4, 0x7966, 0x9760, 0x8281, 0x9b96, 0xa3c1, 0x1, 0x1);
        gbc.writeMem(0xa6b4, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7966, gbc.sp());
        EXPECT(0xa6b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b4));
        EXPECT(0xea, gbc.readMem(0xa6b5));
        // CB EA 02EF
        gbc.setState(0xd84f, 0x347f, 0x2c50, 0xf4f, 0xb6b0, 0x5eb5, 0x0, 0x0);
        gbc.writeMem(0xd84f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x347f, gbc.sp());
        EXPECT(0xd851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd84f));
        EXPECT(0xea, gbc.readMem(0xd850));
        // CB EA 02F0
        gbc.setState(0xd73d, 0xbdfd, 0xa6d0, 0x71cd, 0xedb1, 0x4da9, 0x1, 0x1);
        gbc.writeMem(0xd73d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xbdfd, gbc.sp());
        EXPECT(0xd73f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd73d));
        EXPECT(0xea, gbc.readMem(0xd73e));
        // CB EA 02F1
        gbc.setState(0x3cf4, 0xd078, 0xbd30, 0xb179, 0xa8f8, 0x5067, 0x1, 0x0);
        gbc.writeMem(0x3cf4, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd078, gbc.sp());
        EXPECT(0x3cf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02F2
        gbc.setState(0x11eb, 0xf7f7, 0x8670, 0x2e76, 0xe58e, 0xdcfb, 0x1, 0x0);
        gbc.writeMem(0x11eb, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf7f7, gbc.sp());
        EXPECT(0x11ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02F3
        gbc.setState(0x8353, 0x6515, 0x6d10, 0x1e76, 0xe23a, 0x31dd, 0x1, 0x1);
        gbc.writeMem(0x8353, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6515, gbc.sp());
        EXPECT(0x8355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8353));
        EXPECT(0xea, gbc.readMem(0x8354));
        // CB EA 02F4
        gbc.setState(0x1b04, 0x6c25, 0x4ef0, 0xd954, 0x8a22, 0x774a, 0x0, 0x0);
        gbc.writeMem(0x1b04, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6c25, gbc.sp());
        EXPECT(0x1b06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02F5
        gbc.setState(0x144f, 0xbdc, 0x15f0, 0x70cc, 0xadc1, 0xc8b8, 0x0, 0x0);
        gbc.writeMem(0x144f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbdc, gbc.sp());
        EXPECT(0x1451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02F6
        gbc.setState(0x5797, 0xa31, 0xfb70, 0xe217, 0xe201, 0x5e87, 0x0, 0x1);
        gbc.writeMem(0x5797, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa31, gbc.sp());
        EXPECT(0x5799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02F7
        gbc.setState(0x903c, 0xb410, 0x310, 0x7a05, 0xf48, 0x9c4e, 0x0, 0x1);
        gbc.writeMem(0x903c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb410, gbc.sp());
        EXPECT(0x903e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x903c));
        EXPECT(0xea, gbc.readMem(0x903d));
        // CB EA 02F8
        gbc.setState(0xb5c3, 0xbb2a, 0x1080, 0x6f6a, 0x7600, 0x22a5, 0x0, 0x0);
        gbc.writeMem(0xb5c3, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xbb2a, gbc.sp());
        EXPECT(0xb5c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c3));
        EXPECT(0xea, gbc.readMem(0xb5c4));
        // CB EA 02F9
        gbc.setState(0x799c, 0xa6aa, 0xe9a0, 0xc615, 0x4d49, 0x924d, 0x1, 0x1);
        gbc.writeMem(0x799c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa6aa, gbc.sp());
        EXPECT(0x799e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 02FA
        gbc.setState(0x38e8, 0xd771, 0xf450, 0x84cc, 0x306, 0xe3f4, 0x1, 0x0);
        gbc.writeMem(0x38e8, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd771, gbc.sp());
        EXPECT(0x38ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02FC
        gbc.setState(0xf4b, 0x5b11, 0x5540, 0x2cd2, 0xf8e3, 0xe8ef, 0x0, 0x0);
        gbc.writeMem(0xf4b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5b11, gbc.sp());
        EXPECT(0xf4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 02FD
        gbc.setState(0x770c, 0x2dd8, 0x6c30, 0xa56e, 0x649d, 0xd923, 0x1, 0x1);
        gbc.writeMem(0x770c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2dd8, gbc.sp());
        EXPECT(0x770e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 02FE
        gbc.setState(0xa03a, 0xdfda, 0xaa70, 0x75ee, 0x898a, 0xdf74, 0x0, 0x1);
        gbc.writeMem(0xa03a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xdfda, gbc.sp());
        EXPECT(0xa03c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa03a));
        EXPECT(0xea, gbc.readMem(0xa03b));
        // CB EA 02FF
        gbc.setState(0x568f, 0x6ad5, 0x5520, 0x8362, 0x1d08, 0x6d2, 0x1, 0x1);
        gbc.writeMem(0x568f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6ad5, gbc.sp());
        EXPECT(0x5691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0301
        gbc.setState(0x725a, 0xbce7, 0xeeb0, 0xeb86, 0xc622, 0x8b30, 0x0, 0x1);
        gbc.writeMem(0x725a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbce7, gbc.sp());
        EXPECT(0x725c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0302
        gbc.setState(0x4494, 0xe89f, 0x8910, 0xc0c3, 0x732, 0x6698, 0x1, 0x0);
        gbc.writeMem(0x4494, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe89f, gbc.sp());
        EXPECT(0x4496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0304
        gbc.setState(0x4127, 0x7c78, 0x6100, 0x6e51, 0x5c8b, 0x228d, 0x1, 0x1);
        gbc.writeMem(0x4127, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7c78, gbc.sp());
        EXPECT(0x4129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0305
        gbc.setState(0x7c5e, 0xe83b, 0x4d00, 0x7b0d, 0xa881, 0x1fd, 0x1, 0x0);
        gbc.writeMem(0x7c5e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe83b, gbc.sp());
        EXPECT(0x7c60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0306
        gbc.setState(0x3ba6, 0x5ad8, 0xcd30, 0x5f84, 0x8b2c, 0x1ed6, 0x1, 0x0);
        gbc.writeMem(0x3ba6, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5ad8, gbc.sp());
        EXPECT(0x3ba8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0307
        gbc.setState(0x5542, 0x2f1b, 0x8630, 0xbb9c, 0x3342, 0x801f, 0x0, 0x0);
        gbc.writeMem(0x5542, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2f1b, gbc.sp());
        EXPECT(0x5544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0308
        gbc.setState(0x4669, 0x1b3, 0x5b40, 0x4be9, 0x6eb9, 0x8070, 0x1, 0x1);
        gbc.writeMem(0x4669, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1b3, gbc.sp());
        EXPECT(0x466b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0309
        gbc.setState(0xa748, 0x439b, 0x7bb0, 0x4866, 0x36b9, 0x819e, 0x1, 0x0);
        gbc.writeMem(0xa748, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x439b, gbc.sp());
        EXPECT(0xa74a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa748));
        EXPECT(0xea, gbc.readMem(0xa749));
        // CB EA 030A
        gbc.setState(0x39c6, 0x2e24, 0x4420, 0x72c0, 0xd584, 0x20df, 0x0, 0x0);
        gbc.writeMem(0x39c6, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2e24, gbc.sp());
        EXPECT(0x39c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 030B
        gbc.setState(0x9b20, 0x2ca4, 0x36c0, 0x835d, 0xb44f, 0x2a28, 0x1, 0x1);
        gbc.writeMem(0x9b20, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2ca4, gbc.sp());
        EXPECT(0x9b22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b20));
        EXPECT(0xea, gbc.readMem(0x9b21));
        // CB EA 030C
        gbc.setState(0xdc65, 0xeb9b, 0xaba0, 0xd4d0, 0x6fb9, 0xf440, 0x1, 0x1);
        gbc.writeMem(0xdc65, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xeb9b, gbc.sp());
        EXPECT(0xdc67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc65));
        EXPECT(0xea, gbc.readMem(0xdc66));
        // CB EA 030D
        gbc.setState(0xb7ab, 0xcc4e, 0x61e0, 0xfb16, 0xdb99, 0xd65b, 0x1, 0x1);
        gbc.writeMem(0xb7ab, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xcc4e, gbc.sp());
        EXPECT(0xb7ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ab));
        EXPECT(0xea, gbc.readMem(0xb7ac));
        // CB EA 030E
        gbc.setState(0xa55c, 0x6127, 0x0, 0xf059, 0xc7e0, 0x8c7c, 0x1, 0x1);
        gbc.writeMem(0xa55c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6127, gbc.sp());
        EXPECT(0xa55e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa55c));
        EXPECT(0xea, gbc.readMem(0xa55d));
        // CB EA 030F
        gbc.setState(0x4411, 0xda0b, 0x96e0, 0x8622, 0x4191, 0xcec3, 0x1, 0x1);
        gbc.writeMem(0x4411, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xda0b, gbc.sp());
        EXPECT(0x4413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0310
        gbc.setState(0x4ce2, 0x2e4, 0x7b70, 0x7105, 0xbc10, 0x4133, 0x1, 0x1);
        gbc.writeMem(0x4ce2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2e4, gbc.sp());
        EXPECT(0x4ce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0311
        gbc.setState(0x53f, 0x1844, 0xee70, 0xe7a9, 0x13d, 0x5eb1, 0x0, 0x0);
        gbc.writeMem(0x53f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1844, gbc.sp());
        EXPECT(0x541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0312
        gbc.setState(0x2aad, 0xa2db, 0x7d40, 0xcc02, 0x760, 0xee8c, 0x1, 0x1);
        gbc.writeMem(0x2aad, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa2db, gbc.sp());
        EXPECT(0x2aaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0313
        gbc.setState(0x2cc7, 0xc78c, 0xae70, 0x1dd8, 0xac94, 0xa1c8, 0x1, 0x0);
        gbc.writeMem(0x2cc7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc78c, gbc.sp());
        EXPECT(0x2cc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0314
        gbc.setState(0x4449, 0xa544, 0xc390, 0xe646, 0xdead, 0xc174, 0x1, 0x0);
        gbc.writeMem(0x4449, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa544, gbc.sp());
        EXPECT(0x444b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0315
        gbc.setState(0xbd89, 0xacdc, 0xf1b0, 0x13e8, 0x8265, 0x3fc0, 0x0, 0x1);
        gbc.writeMem(0xbd89, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xacdc, gbc.sp());
        EXPECT(0xbd8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd89));
        EXPECT(0xea, gbc.readMem(0xbd8a));
        // CB EA 0316
        gbc.setState(0x27be, 0x7550, 0x2a70, 0xeef6, 0x2ff7, 0xbc2a, 0x0, 0x1);
        gbc.writeMem(0x27be, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7550, gbc.sp());
        EXPECT(0x27c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0317
        gbc.setState(0xbb87, 0xb506, 0xd3d0, 0xf898, 0x58c9, 0xba1d, 0x0, 0x1);
        gbc.writeMem(0xbb87, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb506, gbc.sp());
        EXPECT(0xbb89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb87));
        EXPECT(0xea, gbc.readMem(0xbb88));
        // CB EA 0318
        gbc.setState(0x7ab2, 0x2400, 0x620, 0xd862, 0xa321, 0xf18c, 0x1, 0x0);
        gbc.writeMem(0x7ab2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2400, gbc.sp());
        EXPECT(0x7ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0319
        gbc.setState(0x57fb, 0x2360, 0x2cf0, 0x39d6, 0xc448, 0x9193, 0x1, 0x0);
        gbc.writeMem(0x57fb, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2360, gbc.sp());
        EXPECT(0x57fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 031A
        gbc.setState(0x6656, 0x6b3b, 0x74f0, 0xe85b, 0xc54e, 0xf8d6, 0x1, 0x0);
        gbc.writeMem(0x6656, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6b3b, gbc.sp());
        EXPECT(0x6658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 031B
        gbc.setState(0xbce5, 0xc77f, 0xcc00, 0x511e, 0xce97, 0x3d3d, 0x1, 0x1);
        gbc.writeMem(0xbce5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc77f, gbc.sp());
        EXPECT(0xbce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbce5));
        EXPECT(0xea, gbc.readMem(0xbce6));
        // CB EA 031C
        gbc.setState(0x2114, 0x3608, 0xce80, 0xdac5, 0xd8fa, 0x5189, 0x0, 0x1);
        gbc.writeMem(0x2114, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3608, gbc.sp());
        EXPECT(0x2116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 031D
        gbc.setState(0xdff3, 0xeb4c, 0xa660, 0xafc6, 0xdd9, 0x5815, 0x1, 0x1);
        gbc.writeMem(0xdff3, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xeb4c, gbc.sp());
        EXPECT(0xdff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdff3));
        EXPECT(0xea, gbc.readMem(0xdff4));
        // CB EA 031E
        gbc.setState(0x1dd2, 0x83f6, 0xcd00, 0x5a8, 0x56be, 0xff7d, 0x0, 0x0);
        gbc.writeMem(0x1dd2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x83f6, gbc.sp());
        EXPECT(0x1dd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 031F
        gbc.setState(0x72f0, 0x74d4, 0xae00, 0xc6a7, 0x6834, 0xaa64, 0x1, 0x1);
        gbc.writeMem(0x72f0, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x74d4, gbc.sp());
        EXPECT(0x72f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0320
        gbc.setState(0x775e, 0xfb88, 0x26b0, 0x70f0, 0x9673, 0x8b64, 0x1, 0x0);
        gbc.writeMem(0x775e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xfb88, gbc.sp());
        EXPECT(0x7760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0322
        gbc.setState(0x7d54, 0x13eb, 0x2df0, 0x4f22, 0x5c1f, 0x7625, 0x0, 0x1);
        gbc.writeMem(0x7d54, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x13eb, gbc.sp());
        EXPECT(0x7d56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0324
        gbc.setState(0x9be3, 0x3a88, 0xe320, 0xc697, 0xf01e, 0x8260, 0x1, 0x0);
        gbc.writeMem(0x9be3, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3a88, gbc.sp());
        EXPECT(0x9be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9be3));
        EXPECT(0xea, gbc.readMem(0x9be4));
        // CB EA 0325
        gbc.setState(0x4832, 0x371b, 0xac90, 0xc937, 0x9c9c, 0x3a9, 0x1, 0x1);
        gbc.writeMem(0x4832, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x371b, gbc.sp());
        EXPECT(0x4834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0326
        gbc.setState(0xc52e, 0xdbd1, 0x4d0, 0x7bb2, 0x5cfd, 0x95ff, 0x0, 0x1);
        gbc.writeMem(0xc52e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xdbd1, gbc.sp());
        EXPECT(0xc530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc52e));
        EXPECT(0xea, gbc.readMem(0xc52f));
        // CB EA 0327
        gbc.setState(0x200b, 0x3554, 0x3550, 0xffb1, 0x4d91, 0xb3e0, 0x0, 0x0);
        gbc.writeMem(0x200b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3554, gbc.sp());
        EXPECT(0x200d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0328
        gbc.setState(0xd572, 0x48ae, 0x7910, 0xf0f4, 0x52d9, 0x61f3, 0x1, 0x1);
        gbc.writeMem(0xd572, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x48ae, gbc.sp());
        EXPECT(0xd574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd572));
        EXPECT(0xea, gbc.readMem(0xd573));
        // CB EA 0329
        gbc.setState(0xd700, 0x2882, 0x98d0, 0x3287, 0x3ec7, 0xb5fa, 0x1, 0x0);
        gbc.writeMem(0xd700, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2882, gbc.sp());
        EXPECT(0xd702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd700));
        EXPECT(0xea, gbc.readMem(0xd701));
        // CB EA 032A
        gbc.setState(0x5035, 0xd17b, 0x4240, 0xb04a, 0xa537, 0xb7be, 0x1, 0x0);
        gbc.writeMem(0x5035, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd17b, gbc.sp());
        EXPECT(0x5037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 032B
        gbc.setState(0x6702, 0x6022, 0x34a0, 0xe7f, 0xfc88, 0x1586, 0x0, 0x1);
        gbc.writeMem(0x6702, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6022, gbc.sp());
        EXPECT(0x6704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 032C
        gbc.setState(0x905e, 0x766b, 0xfe50, 0x3377, 0x5ca2, 0x76a7, 0x0, 0x1);
        gbc.writeMem(0x905e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x766b, gbc.sp());
        EXPECT(0x9060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x905e));
        EXPECT(0xea, gbc.readMem(0x905f));
        // CB EA 032D
        gbc.setState(0xeb42, 0x3c1f, 0x7290, 0xb4e4, 0xbcd8, 0x3439, 0x0, 0x1);
        gbc.writeMem(0xeb42, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3c1f, gbc.sp());
        EXPECT(0xeb44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb42));
        EXPECT(0xea, gbc.readMem(0xeb43));
        // CB EA 032E
        gbc.setState(0x5d76, 0xff42, 0x6570, 0xcd70, 0xa857, 0x4820, 0x1, 0x0);
        gbc.writeMem(0x5d76, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xff42, gbc.sp());
        EXPECT(0x5d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 032F
        gbc.setState(0x8c8b, 0xf715, 0xa7e0, 0x6af3, 0x2b04, 0xf3d9, 0x0, 0x1);
        gbc.writeMem(0x8c8b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf715, gbc.sp());
        EXPECT(0x8c8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c8b));
        EXPECT(0xea, gbc.readMem(0x8c8c));
        // CB EA 0330
        gbc.setState(0xc1ab, 0x913e, 0x1de0, 0x78b4, 0xc25e, 0x3d03, 0x1, 0x0);
        gbc.writeMem(0xc1ab, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x913e, gbc.sp());
        EXPECT(0xc1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ab));
        EXPECT(0xea, gbc.readMem(0xc1ac));
        // CB EA 0331
        gbc.setState(0x4709, 0x2cfd, 0xe7e0, 0x1b4a, 0xf46a, 0xe80a, 0x1, 0x1);
        gbc.writeMem(0x4709, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2cfd, gbc.sp());
        EXPECT(0x470b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0332
        gbc.setState(0x9d8b, 0xb891, 0x7620, 0x5674, 0xf925, 0x1ead, 0x1, 0x0);
        gbc.writeMem(0x9d8b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb891, gbc.sp());
        EXPECT(0x9d8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d8b));
        EXPECT(0xea, gbc.readMem(0x9d8c));
        // CB EA 0333
        gbc.setState(0x53de, 0xfc2d, 0x62f0, 0xabf0, 0x507b, 0xcb0b, 0x0, 0x0);
        gbc.writeMem(0x53de, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xfc2d, gbc.sp());
        EXPECT(0x53e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0334
        gbc.setState(0x53a4, 0x162e, 0xeff0, 0x2773, 0xfd4c, 0xead9, 0x0, 0x0);
        gbc.writeMem(0x53a4, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x162e, gbc.sp());
        EXPECT(0x53a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0335
        gbc.setState(0x4c5e, 0xf311, 0xaaa0, 0x40b0, 0xf83a, 0xd499, 0x1, 0x0);
        gbc.writeMem(0x4c5e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf311, gbc.sp());
        EXPECT(0x4c60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0336
        gbc.setState(0x5e4c, 0xa696, 0xe890, 0x74ae, 0x8b21, 0x6cba, 0x1, 0x0);
        gbc.writeMem(0x5e4c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa696, gbc.sp());
        EXPECT(0x5e4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0337
        gbc.setState(0x135c, 0x2d8d, 0x6530, 0x44c7, 0x6bbe, 0x887b, 0x0, 0x0);
        gbc.writeMem(0x135c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2d8d, gbc.sp());
        EXPECT(0x135e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0338
        gbc.setState(0x9f98, 0xb309, 0x67d0, 0x9713, 0x2148, 0x1da0, 0x1, 0x0);
        gbc.writeMem(0x9f98, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb309, gbc.sp());
        EXPECT(0x9f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f98));
        EXPECT(0xea, gbc.readMem(0x9f99));
        // CB EA 0339
        gbc.setState(0xcc2f, 0x7507, 0xa3b0, 0x99a9, 0xddc2, 0xeb73, 0x0, 0x1);
        gbc.writeMem(0xcc2f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7507, gbc.sp());
        EXPECT(0xcc31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc2f));
        EXPECT(0xea, gbc.readMem(0xcc30));
        // CB EA 033A
        gbc.setState(0xa53, 0x7223, 0xdd60, 0x25ea, 0xb3af, 0xec1e, 0x0, 0x1);
        gbc.writeMem(0xa53, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7223, gbc.sp());
        EXPECT(0xa55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 033B
        gbc.setState(0xd176, 0x55ca, 0xd490, 0xdc4d, 0x8099, 0x4f81, 0x0, 0x0);
        gbc.writeMem(0xd176, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x55ca, gbc.sp());
        EXPECT(0xd178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd176));
        EXPECT(0xea, gbc.readMem(0xd177));
        // CB EA 033C
        gbc.setState(0xbef3, 0x65ff, 0x8c20, 0x3be3, 0x1b0a, 0x21d8, 0x1, 0x1);
        gbc.writeMem(0xbef3, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x65ff, gbc.sp());
        EXPECT(0xbef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbef3));
        EXPECT(0xea, gbc.readMem(0xbef4));
        // CB EA 033D
        gbc.setState(0x82be, 0xb864, 0x7450, 0xdc98, 0x5263, 0x551d, 0x0, 0x0);
        gbc.writeMem(0x82be, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb864, gbc.sp());
        EXPECT(0x82c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82be));
        EXPECT(0xea, gbc.readMem(0x82bf));
        // CB EA 033E
        gbc.setState(0x5f25, 0xa400, 0x9070, 0xf0a, 0xc41a, 0x1ff7, 0x0, 0x0);
        gbc.writeMem(0x5f25, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa400, gbc.sp());
        EXPECT(0x5f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 033F
        gbc.setState(0x18ae, 0x82ba, 0x28a0, 0x13c4, 0x1757, 0xde7c, 0x0, 0x1);
        gbc.writeMem(0x18ae, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x82ba, gbc.sp());
        EXPECT(0x18b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0340
        gbc.setState(0xa3f5, 0x5d46, 0xdff0, 0xd297, 0xeda7, 0xceb0, 0x0, 0x1);
        gbc.writeMem(0xa3f5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5d46, gbc.sp());
        EXPECT(0xa3f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f5));
        EXPECT(0xea, gbc.readMem(0xa3f6));
        // CB EA 0342
        gbc.setState(0xb192, 0x4476, 0xe230, 0x9de0, 0xaf22, 0xd16d, 0x0, 0x0);
        gbc.writeMem(0xb192, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4476, gbc.sp());
        EXPECT(0xb194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb192));
        EXPECT(0xea, gbc.readMem(0xb193));
        // CB EA 0343
        gbc.setState(0x94c5, 0x263d, 0x36c0, 0xcebb, 0x2a9a, 0x8e0d, 0x0, 0x0);
        gbc.writeMem(0x94c5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x263d, gbc.sp());
        EXPECT(0x94c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94c5));
        EXPECT(0xea, gbc.readMem(0x94c6));
        // CB EA 0344
        gbc.setState(0x663e, 0xe545, 0x1e40, 0x5fa7, 0xf41e, 0xc499, 0x1, 0x1);
        gbc.writeMem(0x663e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe545, gbc.sp());
        EXPECT(0x6640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0345
        gbc.setState(0x3d78, 0xe8b6, 0xe960, 0x7223, 0x71a0, 0x54c7, 0x1, 0x1);
        gbc.writeMem(0x3d78, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe8b6, gbc.sp());
        EXPECT(0x3d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0346
        gbc.setState(0x7ffa, 0x28a, 0x8d10, 0x7cad, 0x1f7f, 0x41e8, 0x1, 0x1);
        gbc.writeMem(0x7ffa, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x28a, gbc.sp());
        EXPECT(0x7ffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0347
        gbc.setState(0x712f, 0x839d, 0xef60, 0x46ed, 0x3615, 0x3bf3, 0x0, 0x1);
        gbc.writeMem(0x712f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x839d, gbc.sp());
        EXPECT(0x7131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0348
        gbc.setState(0xb5a3, 0x3aa2, 0x5e50, 0xf17a, 0x1409, 0x8fc1, 0x1, 0x1);
        gbc.writeMem(0xb5a3, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3aa2, gbc.sp());
        EXPECT(0xb5a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5a3));
        EXPECT(0xea, gbc.readMem(0xb5a4));
        // CB EA 0349
        gbc.setState(0xd771, 0x5cfe, 0x60c0, 0xf0b7, 0x79c9, 0xedc9, 0x1, 0x1);
        gbc.writeMem(0xd771, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5cfe, gbc.sp());
        EXPECT(0xd773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd771));
        EXPECT(0xea, gbc.readMem(0xd772));
        // CB EA 034A
        gbc.setState(0x7eb1, 0x2f26, 0xcd50, 0x5540, 0xd966, 0xcd42, 0x0, 0x1);
        gbc.writeMem(0x7eb1, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2f26, gbc.sp());
        EXPECT(0x7eb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 034B
        gbc.setState(0xa340, 0xb621, 0xf000, 0x60f6, 0x3065, 0xc8f2, 0x0, 0x0);
        gbc.writeMem(0xa340, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb621, gbc.sp());
        EXPECT(0xa342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa340));
        EXPECT(0xea, gbc.readMem(0xa341));
        // CB EA 034C
        gbc.setState(0x659e, 0xfd5f, 0x5660, 0x8612, 0x3a64, 0xea2a, 0x1, 0x0);
        gbc.writeMem(0x659e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfd5f, gbc.sp());
        EXPECT(0x65a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 034E
        gbc.setState(0x647b, 0x9a61, 0x8db0, 0x1ff8, 0x5e6a, 0x6deb, 0x1, 0x1);
        gbc.writeMem(0x647b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9a61, gbc.sp());
        EXPECT(0x647d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 034F
        gbc.setState(0x52c5, 0x948d, 0x47b0, 0xaa1d, 0x2cdc, 0xeafd, 0x0, 0x1);
        gbc.writeMem(0x52c5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x948d, gbc.sp());
        EXPECT(0x52c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0350
        gbc.setState(0xc69e, 0xef1e, 0xe530, 0xec07, 0x3fb1, 0xaa7a, 0x1, 0x1);
        gbc.writeMem(0xc69e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xef1e, gbc.sp());
        EXPECT(0xc6a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc69e));
        EXPECT(0xea, gbc.readMem(0xc69f));
        // CB EA 0351
        gbc.setState(0x277d, 0xf6bd, 0x4d70, 0x8d55, 0x51bb, 0x4519, 0x0, 0x1);
        gbc.writeMem(0x277d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf6bd, gbc.sp());
        EXPECT(0x277f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0352
        gbc.setState(0xbd19, 0x7d05, 0xb3e0, 0xa2d3, 0xb3c4, 0x8422, 0x1, 0x0);
        gbc.writeMem(0xbd19, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7d05, gbc.sp());
        EXPECT(0xbd1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd19));
        EXPECT(0xea, gbc.readMem(0xbd1a));
        // CB EA 0353
        gbc.setState(0xbc77, 0x30ff, 0x8780, 0xe254, 0xa65, 0x621, 0x0, 0x1);
        gbc.writeMem(0xbc77, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x30ff, gbc.sp());
        EXPECT(0xbc79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc77));
        EXPECT(0xea, gbc.readMem(0xbc78));
        // CB EA 0354
        gbc.setState(0x25e7, 0x77d7, 0xb5f0, 0x5cdf, 0xff30, 0x13f7, 0x1, 0x1);
        gbc.writeMem(0x25e7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x77d7, gbc.sp());
        EXPECT(0x25e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0355
        gbc.setState(0x2de9, 0xa4fd, 0x97d0, 0xf2b8, 0x291b, 0xac2d, 0x1, 0x1);
        gbc.writeMem(0x2de9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa4fd, gbc.sp());
        EXPECT(0x2deb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0356
        gbc.setState(0xd68f, 0x9425, 0xa320, 0x6eb6, 0x48c5, 0x5d46, 0x0, 0x1);
        gbc.writeMem(0xd68f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9425, gbc.sp());
        EXPECT(0xd691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd68f));
        EXPECT(0xea, gbc.readMem(0xd690));
        // CB EA 0357
        gbc.setState(0x2e0c, 0x8d6e, 0x620, 0x9462, 0xc974, 0x9a90, 0x1, 0x1);
        gbc.writeMem(0x2e0c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8d6e, gbc.sp());
        EXPECT(0x2e0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0358
        gbc.setState(0x3124, 0xec45, 0x9960, 0xae58, 0xf88a, 0x9a, 0x0, 0x1);
        gbc.writeMem(0x3124, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xec45, gbc.sp());
        EXPECT(0x3126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0359
        gbc.setState(0x9ed4, 0x722f, 0x1cd0, 0xabff, 0xeefd, 0x8929, 0x0, 0x1);
        gbc.writeMem(0x9ed4, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x722f, gbc.sp());
        EXPECT(0x9ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ed4));
        EXPECT(0xea, gbc.readMem(0x9ed5));
        // CB EA 035A
        gbc.setState(0x6d75, 0xf442, 0xff80, 0x7fc4, 0x3ee, 0x921d, 0x0, 0x0);
        gbc.writeMem(0x6d75, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf442, gbc.sp());
        EXPECT(0x6d77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 035B
        gbc.setState(0xe812, 0xe661, 0x1780, 0x5f5b, 0xa19c, 0xf147, 0x0, 0x1);
        gbc.writeMem(0xe812, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe661, gbc.sp());
        EXPECT(0xe814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe812));
        EXPECT(0xea, gbc.readMem(0xe813));
        // CB EA 035C
        gbc.setState(0x36da, 0x215a, 0xd50, 0x59b1, 0xcf5f, 0xd26a, 0x1, 0x0);
        gbc.writeMem(0x36da, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x215a, gbc.sp());
        EXPECT(0x36dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 035D
        gbc.setState(0x8126, 0x433f, 0xaff0, 0x107a, 0xb0b5, 0x43b5, 0x1, 0x1);
        gbc.writeMem(0x8126, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x433f, gbc.sp());
        EXPECT(0x8128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8126));
        EXPECT(0xea, gbc.readMem(0x8127));
        // CB EA 035E
        gbc.setState(0xbe71, 0x973d, 0xf580, 0x30de, 0x5880, 0x1665, 0x0, 0x0);
        gbc.writeMem(0xbe71, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x973d, gbc.sp());
        EXPECT(0xbe73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe71));
        EXPECT(0xea, gbc.readMem(0xbe72));
        // CB EA 035F
        gbc.setState(0x222e, 0x6d2f, 0xcc10, 0xed65, 0xa60f, 0xc514, 0x1, 0x0);
        gbc.writeMem(0x222e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6d2f, gbc.sp());
        EXPECT(0x2230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0360
        gbc.setState(0xdf3d, 0x8a1d, 0x22c0, 0x3fd, 0x1f4a, 0x7574, 0x1, 0x1);
        gbc.writeMem(0xdf3d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8a1d, gbc.sp());
        EXPECT(0xdf3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf3d));
        EXPECT(0xea, gbc.readMem(0xdf3e));
        // CB EA 0361
        gbc.setState(0x4b0e, 0x692b, 0x8090, 0x30bf, 0xe613, 0xa540, 0x0, 0x0);
        gbc.writeMem(0x4b0e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x692b, gbc.sp());
        EXPECT(0x4b10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0362
        gbc.setState(0xba90, 0x9b2e, 0x8fe0, 0xb201, 0x6dd, 0xa54a, 0x1, 0x0);
        gbc.writeMem(0xba90, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9b2e, gbc.sp());
        EXPECT(0xba92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba90));
        EXPECT(0xea, gbc.readMem(0xba91));
        // CB EA 0363
        gbc.setState(0xc5e4, 0x69a9, 0xbf0, 0xafd5, 0xa6d5, 0x7179, 0x0, 0x1);
        gbc.writeMem(0xc5e4, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x69a9, gbc.sp());
        EXPECT(0xc5e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5e4));
        EXPECT(0xea, gbc.readMem(0xc5e5));
        // CB EA 0365
        gbc.setState(0x47e9, 0xfb3f, 0xaf60, 0xf156, 0xb382, 0xc5cd, 0x1, 0x0);
        gbc.writeMem(0x47e9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xfb3f, gbc.sp());
        EXPECT(0x47eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0366
        gbc.setState(0x23f2, 0x503b, 0x11a0, 0x7f3b, 0xf271, 0xe11d, 0x0, 0x0);
        gbc.writeMem(0x23f2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x503b, gbc.sp());
        EXPECT(0x23f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0367
        gbc.setState(0xefc, 0x5094, 0x79e0, 0x4ad1, 0xc8fb, 0xeac9, 0x1, 0x0);
        gbc.writeMem(0xefc, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5094, gbc.sp());
        EXPECT(0xefe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0368
        gbc.setState(0x217, 0xbf9f, 0x6bc0, 0xba63, 0xe5bd, 0x7ca, 0x0, 0x1);
        gbc.writeMem(0x217, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xbf9f, gbc.sp());
        EXPECT(0x219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0369
        gbc.setState(0x802d, 0x2f47, 0xc90, 0xc399, 0x9e8f, 0x9291, 0x0, 0x0);
        gbc.writeMem(0x802d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2f47, gbc.sp());
        EXPECT(0x802f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x802d));
        EXPECT(0xea, gbc.readMem(0x802e));
        // CB EA 036A
        gbc.setState(0x4026, 0x671f, 0x6e80, 0x20f1, 0x75d4, 0xfaa0, 0x1, 0x0);
        gbc.writeMem(0x4026, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x671f, gbc.sp());
        EXPECT(0x4028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 036B
        gbc.setState(0x8402, 0x8c52, 0x9f60, 0x2113, 0xe2fc, 0x6e24, 0x1, 0x0);
        gbc.writeMem(0x8402, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8c52, gbc.sp());
        EXPECT(0x8404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8402));
        EXPECT(0xea, gbc.readMem(0x8403));
        // CB EA 036C
        gbc.setState(0x4c8f, 0x3e58, 0x99a0, 0x3824, 0x1da2, 0x9b25, 0x1, 0x0);
        gbc.writeMem(0x4c8f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3e58, gbc.sp());
        EXPECT(0x4c91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 036D
        gbc.setState(0x77c8, 0x5384, 0xcb00, 0x4358, 0x135d, 0x40dc, 0x0, 0x1);
        gbc.writeMem(0x77c8, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5384, gbc.sp());
        EXPECT(0x77ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 036F
        gbc.setState(0xbba9, 0x952c, 0xc900, 0x6e9, 0xb398, 0x4efb, 0x0, 0x0);
        gbc.writeMem(0xbba9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x952c, gbc.sp());
        EXPECT(0xbbab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbba9));
        EXPECT(0xea, gbc.readMem(0xbbaa));
        // CB EA 0370
        gbc.setState(0x5f0a, 0xdcd7, 0xedc0, 0x5707, 0x60b2, 0xf7ca, 0x1, 0x0);
        gbc.writeMem(0x5f0a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdcd7, gbc.sp());
        EXPECT(0x5f0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0371
        gbc.setState(0xe854, 0xbda3, 0x5ad0, 0x56be, 0x1e7c, 0x5e2e, 0x0, 0x1);
        gbc.writeMem(0xe854, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xbda3, gbc.sp());
        EXPECT(0xe856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe854));
        EXPECT(0xea, gbc.readMem(0xe855));
        // CB EA 0372
        gbc.setState(0x17fc, 0x967e, 0x2ff0, 0xfc43, 0xf7fe, 0xa45a, 0x1, 0x0);
        gbc.writeMem(0x17fc, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x967e, gbc.sp());
        EXPECT(0x17fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0373
        gbc.setState(0x277b, 0x5ad6, 0x7fc0, 0x8192, 0x3fe1, 0x4b82, 0x0, 0x1);
        gbc.writeMem(0x277b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5ad6, gbc.sp());
        EXPECT(0x277d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0374
        gbc.setState(0x8917, 0x27ac, 0x9b60, 0x3427, 0xd8fa, 0x781a, 0x0, 0x0);
        gbc.writeMem(0x8917, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x27ac, gbc.sp());
        EXPECT(0x8919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8917));
        EXPECT(0xea, gbc.readMem(0x8918));
        // CB EA 0375
        gbc.setState(0x75a7, 0xe857, 0x72d0, 0xd85b, 0x23e, 0x9159, 0x0, 0x0);
        gbc.writeMem(0x75a7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe857, gbc.sp());
        EXPECT(0x75a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0376
        gbc.setState(0x7cb1, 0x2330, 0x3210, 0x45b6, 0x46a9, 0x36e4, 0x1, 0x0);
        gbc.writeMem(0x7cb1, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2330, gbc.sp());
        EXPECT(0x7cb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0377
        gbc.setState(0x1722, 0xd204, 0x8b20, 0x9ba2, 0x623a, 0x4a92, 0x0, 0x1);
        gbc.writeMem(0x1722, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd204, gbc.sp());
        EXPECT(0x1724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0378
        gbc.setState(0xe59a, 0x5e6, 0xeb0, 0x1f50, 0x6d85, 0x44cf, 0x0, 0x0);
        gbc.writeMem(0xe59a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5e6, gbc.sp());
        EXPECT(0xe59c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe59a));
        EXPECT(0xea, gbc.readMem(0xe59b));
        // CB EA 0379
        gbc.setState(0x928d, 0xec14, 0x1e90, 0x945d, 0x9f25, 0xf598, 0x1, 0x0);
        gbc.writeMem(0x928d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xec14, gbc.sp());
        EXPECT(0x928f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x928d));
        EXPECT(0xea, gbc.readMem(0x928e));
        // CB EA 037A
        gbc.setState(0x6a84, 0xcdb, 0x78e0, 0xc6a2, 0xed9, 0x7994, 0x0, 0x0);
        gbc.writeMem(0x6a84, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xcdb, gbc.sp());
        EXPECT(0x6a86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 037B
        gbc.setState(0x8d99, 0x4ef6, 0x86d0, 0xbce4, 0xc373, 0x2e6, 0x1, 0x1);
        gbc.writeMem(0x8d99, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4ef6, gbc.sp());
        EXPECT(0x8d9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d99));
        EXPECT(0xea, gbc.readMem(0x8d9a));
        // CB EA 037C
        gbc.setState(0xe218, 0xc13, 0xd070, 0xbb02, 0x4d1f, 0x4f1d, 0x0, 0x0);
        gbc.writeMem(0xe218, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc13, gbc.sp());
        EXPECT(0xe21a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe218));
        EXPECT(0xea, gbc.readMem(0xe219));
        // CB EA 037D
        gbc.setState(0xe4bb, 0x164b, 0x1f30, 0xc04b, 0x5b22, 0xce04, 0x0, 0x1);
        gbc.writeMem(0xe4bb, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x164b, gbc.sp());
        EXPECT(0xe4bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4bb));
        EXPECT(0xea, gbc.readMem(0xe4bc));
        // CB EA 037E
        gbc.setState(0x58a4, 0x364a, 0x4430, 0xd0ad, 0xff03, 0xcdf8, 0x0, 0x1);
        gbc.writeMem(0x58a4, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x364a, gbc.sp());
        EXPECT(0x58a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 037F
        gbc.setState(0xb337, 0xaca1, 0x9c0, 0x34b5, 0x4ed0, 0xa7f0, 0x0, 0x1);
        gbc.writeMem(0xb337, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xaca1, gbc.sp());
        EXPECT(0xb339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb337));
        EXPECT(0xea, gbc.readMem(0xb338));
        // CB EA 0380
        gbc.setState(0xbe4f, 0x9677, 0xe270, 0x5d3f, 0xb7ae, 0x2c53, 0x0, 0x1);
        gbc.writeMem(0xbe4f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9677, gbc.sp());
        EXPECT(0xbe51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe4f));
        EXPECT(0xea, gbc.readMem(0xbe50));
        // CB EA 0381
        gbc.setState(0x4ebb, 0x8b52, 0xf600, 0x3a5, 0xeb73, 0xc837, 0x0, 0x0);
        gbc.writeMem(0x4ebb, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8b52, gbc.sp());
        EXPECT(0x4ebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0382
        gbc.setState(0x31ad, 0xc80f, 0x8e30, 0xa532, 0x4aba, 0x1688, 0x1, 0x0);
        gbc.writeMem(0x31ad, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc80f, gbc.sp());
        EXPECT(0x31af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0383
        gbc.setState(0xd6d, 0x765f, 0xbab0, 0x53e5, 0x9b98, 0x943a, 0x1, 0x0);
        gbc.writeMem(0xd6d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x765f, gbc.sp());
        EXPECT(0xd6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0384
        gbc.setState(0xb095, 0x8972, 0xa4a0, 0x4aee, 0xeda, 0x3b00, 0x1, 0x0);
        gbc.writeMem(0xb095, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8972, gbc.sp());
        EXPECT(0xb097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb095));
        EXPECT(0xea, gbc.readMem(0xb096));
        // CB EA 0385
        gbc.setState(0x6f1e, 0xb676, 0x3290, 0x525b, 0xbd93, 0xe135, 0x0, 0x0);
        gbc.writeMem(0x6f1e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb676, gbc.sp());
        EXPECT(0x6f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0388
        gbc.setState(0x7376, 0x7656, 0xee30, 0x18c9, 0x6e5c, 0xd47d, 0x0, 0x1);
        gbc.writeMem(0x7376, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7656, gbc.sp());
        EXPECT(0x7378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 038A
        gbc.setState(0x1720, 0xee7e, 0x4090, 0xb97b, 0x8c37, 0x43a3, 0x0, 0x1);
        gbc.writeMem(0x1720, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xee7e, gbc.sp());
        EXPECT(0x1722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 038B
        gbc.setState(0xd250, 0x2610, 0x5e10, 0x2473, 0xf4e0, 0x868a, 0x1, 0x1);
        gbc.writeMem(0xd250, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2610, gbc.sp());
        EXPECT(0xd252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd250));
        EXPECT(0xea, gbc.readMem(0xd251));
        // CB EA 038C
        gbc.setState(0x583, 0x6dac, 0x3a30, 0x3f83, 0xabd8, 0x2d57, 0x1, 0x0);
        gbc.writeMem(0x583, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6dac, gbc.sp());
        EXPECT(0x585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 038D
        gbc.setState(0x8f38, 0x635, 0x8570, 0xe19d, 0x7b43, 0x11ed, 0x0, 0x1);
        gbc.writeMem(0x8f38, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x635, gbc.sp());
        EXPECT(0x8f3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f38));
        EXPECT(0xea, gbc.readMem(0x8f39));
        // CB EA 0390
        gbc.setState(0xca72, 0xfd8a, 0x8800, 0x2dc0, 0xbb4f, 0x64be, 0x0, 0x1);
        gbc.writeMem(0xca72, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xfd8a, gbc.sp());
        EXPECT(0xca74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca72));
        EXPECT(0xea, gbc.readMem(0xca73));
        // CB EA 0391
        gbc.setState(0xa5c, 0x56dc, 0x4970, 0xe41e, 0xfddc, 0xec57, 0x0, 0x1);
        gbc.writeMem(0xa5c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x56dc, gbc.sp());
        EXPECT(0xa5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0392
        gbc.setState(0x1b74, 0xe5d0, 0x6e10, 0xe798, 0x6ab1, 0x9edf, 0x0, 0x1);
        gbc.writeMem(0x1b74, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe5d0, gbc.sp());
        EXPECT(0x1b76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 0393
        gbc.setState(0x5545, 0x5053, 0x9460, 0xc8da, 0x73c8, 0x315f, 0x1, 0x1);
        gbc.writeMem(0x5545, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5053, gbc.sp());
        EXPECT(0x5547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0394
        gbc.setState(0x92e6, 0x68f8, 0x4c20, 0xdf53, 0xba19, 0x12c4, 0x1, 0x1);
        gbc.writeMem(0x92e6, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x68f8, gbc.sp());
        EXPECT(0x92e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92e6));
        EXPECT(0xea, gbc.readMem(0x92e7));
        // CB EA 0395
        gbc.setState(0x8f61, 0xffc8, 0xf630, 0xbb5a, 0xfcba, 0x176f, 0x0, 0x0);
        gbc.writeMem(0x8f61, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xffc8, gbc.sp());
        EXPECT(0x8f63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f61));
        EXPECT(0xea, gbc.readMem(0x8f62));
        // CB EA 0396
        gbc.setState(0x85b8, 0x2dc2, 0x36c0, 0x9893, 0x8804, 0x9f2d, 0x1, 0x1);
        gbc.writeMem(0x85b8, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2dc2, gbc.sp());
        EXPECT(0x85ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85b8));
        EXPECT(0xea, gbc.readMem(0x85b9));
        // CB EA 0397
        gbc.setState(0x77ba, 0xd607, 0x3420, 0x40f1, 0xd27d, 0xb393, 0x0, 0x0);
        gbc.writeMem(0x77ba, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd607, gbc.sp());
        EXPECT(0x77bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0398
        gbc.setState(0x7c06, 0x6b09, 0xf660, 0x96ab, 0x40cf, 0x694b, 0x0, 0x1);
        gbc.writeMem(0x7c06, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6b09, gbc.sp());
        EXPECT(0x7c08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 0399
        gbc.setState(0x2ec3, 0x405, 0xc80, 0x4771, 0x2a91, 0x684f, 0x1, 0x1);
        gbc.writeMem(0x2ec3, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x405, gbc.sp());
        EXPECT(0x2ec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 039A
        gbc.setState(0xb64f, 0x9307, 0x20f0, 0xbc5b, 0x919e, 0x1df8, 0x1, 0x1);
        gbc.writeMem(0xb64f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9307, gbc.sp());
        EXPECT(0xb651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb64f));
        EXPECT(0xea, gbc.readMem(0xb650));
        // CB EA 039B
        gbc.setState(0x673b, 0x668c, 0xa8a0, 0x2631, 0xefb6, 0x4f95, 0x1, 0x0);
        gbc.writeMem(0x673b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x668c, gbc.sp());
        EXPECT(0x673d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 039C
        gbc.setState(0x1f33, 0x25ba, 0xbab0, 0x5199, 0xd81e, 0x2931, 0x0, 0x0);
        gbc.writeMem(0x1f33, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x25ba, gbc.sp());
        EXPECT(0x1f35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 039D
        gbc.setState(0x43f5, 0x1af9, 0xc560, 0x70c4, 0x295d, 0x336e, 0x1, 0x0);
        gbc.writeMem(0x43f5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1af9, gbc.sp());
        EXPECT(0x43f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 039E
        gbc.setState(0x105c, 0xac67, 0x6460, 0xe4fe, 0x6598, 0xc58f, 0x1, 0x1);
        gbc.writeMem(0x105c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xac67, gbc.sp());
        EXPECT(0x105e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 039F
        gbc.setState(0x64a1, 0x5b03, 0x8380, 0xc042, 0x8d04, 0x8089, 0x0, 0x1);
        gbc.writeMem(0x64a1, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5b03, gbc.sp());
        EXPECT(0x64a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 03A0
        gbc.setState(0x12f6, 0x69e0, 0xf460, 0x4dc2, 0x7321, 0x1ff2, 0x1, 0x0);
        gbc.writeMem(0x12f6, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x69e0, gbc.sp());
        EXPECT(0x12f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 03A1
        gbc.setState(0x6747, 0x2ed7, 0x7550, 0x3d73, 0x75d1, 0x587a, 0x0, 0x1);
        gbc.writeMem(0x6747, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2ed7, gbc.sp());
        EXPECT(0x6749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 03A2
        gbc.setState(0x20f7, 0x122f, 0x5910, 0x889a, 0x6213, 0x640b, 0x1, 0x1);
        gbc.writeMem(0x20f7, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x122f, gbc.sp());
        EXPECT(0x20f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 03A3
        gbc.setState(0xc6d, 0x85fe, 0xe640, 0x8d0c, 0x81c6, 0xe206, 0x0, 0x0);
        gbc.writeMem(0xc6d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x85fe, gbc.sp());
        EXPECT(0xc6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 03A4
        gbc.setState(0xc6e3, 0x6b69, 0x55d0, 0xb3db, 0xcaf2, 0xf2fc, 0x0, 0x1);
        gbc.writeMem(0xc6e3, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6b69, gbc.sp());
        EXPECT(0xc6e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e3));
        EXPECT(0xea, gbc.readMem(0xc6e4));
        // CB EA 03A5
        gbc.setState(0xdd1f, 0x13e7, 0x8c20, 0x6b6f, 0xce65, 0xfdb5, 0x0, 0x0);
        gbc.writeMem(0xdd1f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x13e7, gbc.sp());
        EXPECT(0xdd21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd1f));
        EXPECT(0xea, gbc.readMem(0xdd20));
        // CB EA 03A6
        gbc.setState(0x38ba, 0xfcc5, 0x9ab0, 0x56b3, 0x4bcf, 0xf42f, 0x0, 0x1);
        gbc.writeMem(0x38ba, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfcc5, gbc.sp());
        EXPECT(0x38bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 03A7
        gbc.setState(0x52e2, 0xa422, 0xb6e0, 0xa086, 0xaa46, 0xab83, 0x0, 0x0);
        gbc.writeMem(0x52e2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa422, gbc.sp());
        EXPECT(0x52e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 03A8
        gbc.setState(0x935f, 0xfb95, 0x78a0, 0x980c, 0x5c2c, 0x71a7, 0x1, 0x1);
        gbc.writeMem(0x935f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xfb95, gbc.sp());
        EXPECT(0x9361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x935f));
        EXPECT(0xea, gbc.readMem(0x9360));
        // CB EA 03A9
        gbc.setState(0x44ab, 0xc62, 0xbd10, 0x8472, 0x3502, 0x1c5, 0x1, 0x0);
        gbc.writeMem(0x44ab, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc62, gbc.sp());
        EXPECT(0x44ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 03AA
        gbc.setState(0x98ba, 0x25ae, 0x2770, 0xee88, 0xc5fa, 0x98ab, 0x1, 0x1);
        gbc.writeMem(0x98ba, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x25ae, gbc.sp());
        EXPECT(0x98bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ba));
        EXPECT(0xea, gbc.readMem(0x98bb));
        // CB EA 03AB
        gbc.setState(0xde5a, 0x2bb3, 0x8700, 0xff7f, 0x377, 0xa18d, 0x0, 0x0);
        gbc.writeMem(0xde5a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2bb3, gbc.sp());
        EXPECT(0xde5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde5a));
        EXPECT(0xea, gbc.readMem(0xde5b));
        // CB EA 03AC
        gbc.setState(0xdb53, 0x6d8a, 0x2ea0, 0x9bf, 0x333e, 0xeff5, 0x1, 0x0);
        gbc.writeMem(0xdb53, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6d8a, gbc.sp());
        EXPECT(0xdb55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb53));
        EXPECT(0xea, gbc.readMem(0xdb54));
        // CB EA 03AD
        gbc.setState(0xa673, 0x833a, 0x4850, 0x3dc4, 0x898b, 0x9939, 0x0, 0x0);
        gbc.writeMem(0xa673, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x833a, gbc.sp());
        EXPECT(0xa675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa673));
        EXPECT(0xea, gbc.readMem(0xa674));
        // CB EA 03AE
        gbc.setState(0xe535, 0x99c7, 0x6320, 0xeaee, 0xc69f, 0x8cba, 0x0, 0x0);
        gbc.writeMem(0xe535, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x99c7, gbc.sp());
        EXPECT(0xe537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe535));
        EXPECT(0xea, gbc.readMem(0xe536));
        // CB EA 03AF
        gbc.setState(0xe29e, 0xb037, 0xd6a0, 0x3288, 0x43ea, 0xfa91, 0x0, 0x0);
        gbc.writeMem(0xe29e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb037, gbc.sp());
        EXPECT(0xe2a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe29e));
        EXPECT(0xea, gbc.readMem(0xe29f));
        // CB EA 03B0
        gbc.setState(0xbcb8, 0x1c7, 0x9bc0, 0x31e3, 0x3cf7, 0x1b25, 0x0, 0x0);
        gbc.writeMem(0xbcb8, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1c7, gbc.sp());
        EXPECT(0xbcba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb8));
        EXPECT(0xea, gbc.readMem(0xbcb9));
        // CB EA 03B1
        gbc.setState(0x28c3, 0x22a8, 0xf40, 0x90b6, 0x1a6c, 0x7ef5, 0x0, 0x0);
        gbc.writeMem(0x28c3, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x22a8, gbc.sp());
        EXPECT(0x28c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 03B2
        gbc.setState(0x1c62, 0x6346, 0x3470, 0x6041, 0xc54e, 0x7de9, 0x0, 0x1);
        gbc.writeMem(0x1c62, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6346, gbc.sp());
        EXPECT(0x1c64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 03B3
        gbc.setState(0x4ed9, 0x1d17, 0x2040, 0x494f, 0x56d8, 0x873e, 0x1, 0x1);
        gbc.writeMem(0x4ed9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1d17, gbc.sp());
        EXPECT(0x4edb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 03B4
        gbc.setState(0x9dee, 0xeea9, 0xf740, 0x6317, 0x432a, 0x9e6a, 0x0, 0x0);
        gbc.writeMem(0x9dee, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xeea9, gbc.sp());
        EXPECT(0x9df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dee));
        EXPECT(0xea, gbc.readMem(0x9def));
        // CB EA 03B5
        gbc.setState(0x5799, 0xeae9, 0x6c40, 0x3429, 0x7845, 0x701a, 0x0, 0x0);
        gbc.writeMem(0x5799, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xeae9, gbc.sp());
        EXPECT(0x579b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 03B6
        gbc.setState(0x7d04, 0xcb16, 0xa6d0, 0xc57f, 0xe6fe, 0x4721, 0x0, 0x0);
        gbc.writeMem(0x7d04, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xcb16, gbc.sp());
        EXPECT(0x7d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 03B7
        gbc.setState(0x1a94, 0x6188, 0x12e0, 0xc422, 0xf97c, 0x745c, 0x0, 0x0);
        gbc.writeMem(0x1a94, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6188, gbc.sp());
        EXPECT(0x1a96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 03B8
        gbc.setState(0x1f9d, 0x718d, 0x4090, 0x564, 0xc54e, 0xe20, 0x1, 0x0);
        gbc.writeMem(0x1f9d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x718d, gbc.sp());
        EXPECT(0x1f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 03B9
        gbc.setState(0x2c91, 0x5c46, 0xd8a0, 0x1f16, 0xc00f, 0xa842, 0x0, 0x1);
        gbc.writeMem(0x2c91, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5c46, gbc.sp());
        EXPECT(0x2c93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 03BA
        gbc.setState(0x83d1, 0xc7bf, 0xfbf0, 0x6fb9, 0xd797, 0xa05b, 0x0, 0x1);
        gbc.writeMem(0x83d1, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc7bf, gbc.sp());
        EXPECT(0x83d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d1));
        EXPECT(0xea, gbc.readMem(0x83d2));
        // CB EA 03BB
        gbc.setState(0x7d08, 0x1db3, 0x58e0, 0xa8ac, 0xdb9f, 0x16f5, 0x0, 0x1);
        gbc.writeMem(0x7d08, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1db3, gbc.sp());
        EXPECT(0x7d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 03BC
        gbc.setState(0x5677, 0xac8a, 0x85a0, 0x6cf9, 0x6c23, 0x4019, 0x1, 0x1);
        gbc.writeMem(0x5677, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xac8a, gbc.sp());
        EXPECT(0x5679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 03BD
        gbc.setState(0x4f9d, 0x7bf4, 0x85c0, 0x3b9e, 0x9418, 0x6422, 0x1, 0x1);
        gbc.writeMem(0x4f9d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7bf4, gbc.sp());
        EXPECT(0x4f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 03BE
        gbc.setState(0xa8a3, 0xeafd, 0x7910, 0xd45, 0xd672, 0x40dd, 0x1, 0x0);
        gbc.writeMem(0xa8a3, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xeafd, gbc.sp());
        EXPECT(0xa8a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8a3));
        EXPECT(0xea, gbc.readMem(0xa8a4));
        // CB EA 03BF
        gbc.setState(0x755f, 0xd9d0, 0x19c0, 0xa8ed, 0x2df, 0xc1c6, 0x0, 0x1);
        gbc.writeMem(0x755f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd9d0, gbc.sp());
        EXPECT(0x7561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 03C1
        gbc.setState(0x37e0, 0xd317, 0x5700, 0x6afc, 0x6310, 0x9819, 0x0, 0x0);
        gbc.writeMem(0x37e0, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd317, gbc.sp());
        EXPECT(0x37e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 03C2
        gbc.setState(0x5a1e, 0x7199, 0xb340, 0x1889, 0x29c3, 0xd03d, 0x0, 0x0);
        gbc.writeMem(0x5a1e, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7199, gbc.sp());
        EXPECT(0x5a20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 03C4
        gbc.setState(0x953f, 0x6a1f, 0x5c0, 0x9b3d, 0xb876, 0xa70e, 0x1, 0x1);
        gbc.writeMem(0x953f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6a1f, gbc.sp());
        EXPECT(0x9541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x953f));
        EXPECT(0xea, gbc.readMem(0x9540));
        // CB EA 03C5
        gbc.setState(0xc0f5, 0x7ed8, 0x4e0, 0xd9bd, 0x5dbc, 0x47d5, 0x1, 0x1);
        gbc.writeMem(0xc0f5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7ed8, gbc.sp());
        EXPECT(0xc0f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0f5));
        EXPECT(0xea, gbc.readMem(0xc0f6));
        // CB EA 03C6
        gbc.setState(0xc456, 0x2cd3, 0xc610, 0x2286, 0xc6b7, 0xa59, 0x0, 0x0);
        gbc.writeMem(0xc456, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2cd3, gbc.sp());
        EXPECT(0xc458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc456));
        EXPECT(0xea, gbc.readMem(0xc457));
        // CB EA 03C7
        gbc.setState(0xcbe4, 0xa45f, 0xc2f0, 0x54e3, 0xda0c, 0xd1d3, 0x1, 0x0);
        gbc.writeMem(0xcbe4, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa45f, gbc.sp());
        EXPECT(0xcbe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbe4));
        EXPECT(0xea, gbc.readMem(0xcbe5));
        // CB EA 03C8
        gbc.setState(0x4f9f, 0x8b1f, 0xa80, 0x7d1e, 0x8266, 0xf0b6, 0x0, 0x1);
        gbc.writeMem(0x4f9f, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8b1f, gbc.sp());
        EXPECT(0x4fa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 03C9
        gbc.setState(0x395d, 0x9631, 0xff0, 0x2d21, 0x2455, 0xb03c, 0x1, 0x0);
        gbc.writeMem(0x395d, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9631, gbc.sp());
        EXPECT(0x395f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 03CA
        gbc.setState(0xa228, 0xaf6f, 0x2f10, 0xe875, 0x69d8, 0xac80, 0x1, 0x0);
        gbc.writeMem(0xa228, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xaf6f, gbc.sp());
        EXPECT(0xa22a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa228));
        EXPECT(0xea, gbc.readMem(0xa229));
        // CB EA 03CC
        gbc.setState(0x3046, 0x6c79, 0xfa80, 0x955a, 0xbd, 0xa25e, 0x0, 0x0);
        gbc.writeMem(0x3046, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6c79, gbc.sp());
        EXPECT(0x3048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 03CD
        gbc.setState(0xd1a5, 0xa133, 0xd40, 0x6343, 0xf548, 0x4f52, 0x0, 0x0);
        gbc.writeMem(0xd1a5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa133, gbc.sp());
        EXPECT(0xd1a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a5));
        EXPECT(0xea, gbc.readMem(0xd1a6));
        // CB EA 03CE
        gbc.setState(0xa993, 0x5e5f, 0xa7d0, 0xb6d3, 0xedad, 0xd61e, 0x1, 0x1);
        gbc.writeMem(0xa993, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5e5f, gbc.sp());
        EXPECT(0xa995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa993));
        EXPECT(0xea, gbc.readMem(0xa994));
        // CB EA 03CF
        gbc.setState(0x17ab, 0x9bb, 0x6fa0, 0x4337, 0x5a3e, 0xe988, 0x1, 0x0);
        gbc.writeMem(0x17ab, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9bb, gbc.sp());
        EXPECT(0x17ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 03D0
        gbc.setState(0xe6c2, 0x725d, 0x9220, 0x259, 0x6d23, 0x2ce, 0x0, 0x0);
        gbc.writeMem(0xe6c2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x725d, gbc.sp());
        EXPECT(0xe6c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6c2));
        EXPECT(0xea, gbc.readMem(0xe6c3));
        // CB EA 03D1
        gbc.setState(0xa8a5, 0x1d25, 0xeda0, 0xf4b9, 0x9d14, 0x718, 0x0, 0x0);
        gbc.writeMem(0xa8a5, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1d25, gbc.sp());
        EXPECT(0xa8a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8a5));
        EXPECT(0xea, gbc.readMem(0xa8a6));
        // CB EA 03D2
        gbc.setState(0x3fc2, 0x4da7, 0x1640, 0x7e67, 0x53d2, 0x593b, 0x0, 0x1);
        gbc.writeMem(0x3fc2, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4da7, gbc.sp());
        EXPECT(0x3fc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 03D3
        gbc.setState(0x1fa4, 0xbcf9, 0xc900, 0x4594, 0xc375, 0x43ca, 0x1, 0x1);
        gbc.writeMem(0x1fa4, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xbcf9, gbc.sp());
        EXPECT(0x1fa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 03D4
        gbc.setState(0xbd15, 0xd967, 0x690, 0x87a1, 0xd624, 0xf016, 0x1, 0x0);
        gbc.writeMem(0xbd15, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd967, gbc.sp());
        EXPECT(0xbd17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd15));
        EXPECT(0xea, gbc.readMem(0xbd16));
        // CB EA 03D5
        gbc.setState(0x34ce, 0x4066, 0x6390, 0xacb2, 0xf63b, 0x968f, 0x0, 0x1);
        gbc.writeMem(0x34ce, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4066, gbc.sp());
        EXPECT(0x34d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 03D6
        gbc.setState(0x64f3, 0xef62, 0x78d0, 0x4506, 0xdec5, 0xf836, 0x0, 0x1);
        gbc.writeMem(0x64f3, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xef62, gbc.sp());
        EXPECT(0x64f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 03D7
        gbc.setState(0x771c, 0xd3a3, 0x5dd0, 0xcfba, 0xcb06, 0xb53d, 0x0, 0x1);
        gbc.writeMem(0x771c, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd3a3, gbc.sp());
        EXPECT(0x771e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 03D8
        gbc.setState(0x1302, 0x5e65, 0x910, 0x6603, 0x2d38, 0xabae, 0x1, 0x1);
        gbc.writeMem(0x1302, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5e65, gbc.sp());
        EXPECT(0x1304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 03D9
        gbc.setState(0xd92, 0x2d02, 0xee70, 0xf0b6, 0x26af, 0x84e0, 0x0, 0x0);
        gbc.writeMem(0xd92, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2d02, gbc.sp());
        EXPECT(0xd94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 03DA
        gbc.setState(0x347a, 0x6654, 0xf930, 0x849d, 0x56e5, 0xf2f2, 0x0, 0x0);
        gbc.writeMem(0x347a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6654, gbc.sp());
        EXPECT(0x347c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 03DB
        gbc.setState(0x269a, 0xb39b, 0x2e50, 0x28b7, 0x9c94, 0xa8b8, 0x0, 0x1);
        gbc.writeMem(0x269a, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb39b, gbc.sp());
        EXPECT(0x269c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 03DC
        gbc.setState(0xb625, 0x3e18, 0xea0, 0x30cf, 0xd682, 0x8437, 0x1, 0x0);
        gbc.writeMem(0xb625, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3e18, gbc.sp());
        EXPECT(0xb627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb625));
        EXPECT(0xea, gbc.readMem(0xb626));
        // CB EA 03DD
        gbc.setState(0x74fe, 0x5f48, 0xd790, 0xdf23, 0xd607, 0xff2, 0x1, 0x1);
        gbc.writeMem(0x74fe, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5f48, gbc.sp());
        EXPECT(0x7500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 03DE
        gbc.setState(0x558b, 0x55d5, 0x26a0, 0xab55, 0xe1b6, 0xba90, 0x1, 0x1);
        gbc.writeMem(0x558b, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x55d5, gbc.sp());
        EXPECT(0x558d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 03DF
        gbc.setState(0x4d83, 0x914d, 0x7f10, 0x7cf4, 0x2065, 0x9b1d, 0x0, 0x0);
        gbc.writeMem(0x4d83, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x914d, gbc.sp());
        EXPECT(0x4d85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 03E0
        gbc.setState(0xf63, 0xd7f8, 0x3420, 0x1ba3, 0xfd06, 0xb933, 0x0, 0x1);
        gbc.writeMem(0xf63, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd7f8, gbc.sp());
        EXPECT(0xf65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 03E1
        gbc.setState(0x3dcf, 0x3db6, 0x8d30, 0x195d, 0xb205, 0x53e7, 0x0, 0x0);
        gbc.writeMem(0x3dcf, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3db6, gbc.sp());
        EXPECT(0x3dd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB EA 03E2
        gbc.setState(0xb6a9, 0x920b, 0xb820, 0x6f8, 0x697b, 0x5010, 0x0, 0x0);
        gbc.writeMem(0xb6a9, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x920b, gbc.sp());
        EXPECT(0xb6ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6a9));
        EXPECT(0xea, gbc.readMem(0xb6aa));
        // CB EA 03E3
        gbc.setState(0x9060, 0x800f, 0x4cf0, 0x9607, 0x12f0, 0x5eeb, 0x1, 0x1);
        gbc.writeMem(0x9060, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x800f, gbc.sp());
        EXPECT(0x9062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9060));
        EXPECT(0xea, gbc.readMem(0x9061));
        // CB EA 03E4
        gbc.setState(0xee0, 0x2f93, 0x5ba0, 0xbb0a, 0x9903, 0x3a27, 0x1, 0x1);
        gbc.writeMem(0xee0, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2f93, gbc.sp());
        EXPECT(0xee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB EA 03E5
        gbc.setState(0xb200, 0x18ca, 0xafa0, 0x52e3, 0x2d00, 0xe467, 0x1, 0x0);
        gbc.writeMem(0xb200, { 0xcb, 0xea });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x18ca, gbc.sp());
        EXPECT(0xb202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb200));
        EXPECT(0xea, gbc.readMem(0xb201));
    }
