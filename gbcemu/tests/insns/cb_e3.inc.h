    TEST(gbcemu, opcode_cb_e3) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB E3 0000
        gbc.setState(0xe156, 0x3406, 0xff40, 0x5da6, 0x1496, 0xc635, 0x1, 0x1);
        gbc.writeMem(0xe156, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3406, gbc.sp());
        EXPECT(0xe158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe156));
        EXPECT(0xe3, gbc.readMem(0xe157));
        // CB E3 0002
        gbc.setState(0x338e, 0x16, 0x7f70, 0xc11c, 0x27ff, 0x45b0, 0x1, 0x1);
        gbc.writeMem(0x338e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x16, gbc.sp());
        EXPECT(0x3390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0003
        gbc.setState(0x77ab, 0x87d0, 0xbaa0, 0xa707, 0xc7b9, 0x1b29, 0x1, 0x1);
        gbc.writeMem(0x77ab, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x87d0, gbc.sp());
        EXPECT(0x77ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0004
        gbc.setState(0x4d74, 0x1d0e, 0xbaf0, 0x993c, 0x933e, 0xcf93, 0x1, 0x1);
        gbc.writeMem(0x4d74, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1d0e, gbc.sp());
        EXPECT(0x4d76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0005
        gbc.setState(0x809a, 0xa435, 0xfe20, 0x2a37, 0x5094, 0x1ba3, 0x1, 0x0);
        gbc.writeMem(0x809a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa435, gbc.sp());
        EXPECT(0x809c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x809a));
        EXPECT(0xe3, gbc.readMem(0x809b));
        // CB E3 0006
        gbc.setState(0x5a01, 0x7fa6, 0x1b30, 0xf39a, 0xae67, 0x52ad, 0x0, 0x0);
        gbc.writeMem(0x5a01, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7fa6, gbc.sp());
        EXPECT(0x5a03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0007
        gbc.setState(0xa74a, 0xb17a, 0x3570, 0x88ef, 0x55eb, 0x9530, 0x0, 0x1);
        gbc.writeMem(0xa74a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb17a, gbc.sp());
        EXPECT(0xa74c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa74a));
        EXPECT(0xe3, gbc.readMem(0xa74b));
        // CB E3 0008
        gbc.setState(0x3528, 0xf0b5, 0xb640, 0x8b36, 0xd179, 0x9fb1, 0x0, 0x0);
        gbc.writeMem(0x3528, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf0b5, gbc.sp());
        EXPECT(0x352a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0009
        gbc.setState(0xd651, 0xbce4, 0xc280, 0x57c, 0x1b11, 0x70a0, 0x0, 0x1);
        gbc.writeMem(0xd651, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xbce4, gbc.sp());
        EXPECT(0xd653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd651));
        EXPECT(0xe3, gbc.readMem(0xd652));
        // CB E3 000A
        gbc.setState(0x7769, 0x199a, 0xfa60, 0x2e3, 0x3a8c, 0xbf18, 0x1, 0x0);
        gbc.writeMem(0x7769, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x199a, gbc.sp());
        EXPECT(0x776b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 000C
        gbc.setState(0xb8db, 0x969, 0xbcd0, 0xd997, 0xf8b2, 0x6e75, 0x0, 0x0);
        gbc.writeMem(0xb8db, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x969, gbc.sp());
        EXPECT(0xb8dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8db));
        EXPECT(0xe3, gbc.readMem(0xb8dc));
        // CB E3 000D
        gbc.setState(0x2e28, 0x2307, 0x6b80, 0xe098, 0x6685, 0x2abf, 0x0, 0x1);
        gbc.writeMem(0x2e28, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2307, gbc.sp());
        EXPECT(0x2e2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 000E
        gbc.setState(0xb5fa, 0xa6d7, 0xad0, 0x3e50, 0x889e, 0x45f2, 0x1, 0x0);
        gbc.writeMem(0xb5fa, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa6d7, gbc.sp());
        EXPECT(0xb5fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5fa));
        EXPECT(0xe3, gbc.readMem(0xb5fb));
        // CB E3 000F
        gbc.setState(0x7038, 0x7f89, 0xc420, 0xeb20, 0x60eb, 0x3fed, 0x0, 0x1);
        gbc.writeMem(0x7038, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7f89, gbc.sp());
        EXPECT(0x703a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0010
        gbc.setState(0x489, 0xad27, 0x80d0, 0x1c09, 0xd1e7, 0x2294, 0x0, 0x0);
        gbc.writeMem(0x489, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xad27, gbc.sp());
        EXPECT(0x48b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0011
        gbc.setState(0x84ae, 0xa66a, 0x9f10, 0x1d79, 0x8d04, 0x32d, 0x1, 0x1);
        gbc.writeMem(0x84ae, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa66a, gbc.sp());
        EXPECT(0x84b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ae));
        EXPECT(0xe3, gbc.readMem(0x84af));
        // CB E3 0012
        gbc.setState(0x111e, 0xc186, 0xc2a0, 0x1bfa, 0x88a0, 0xdae7, 0x1, 0x0);
        gbc.writeMem(0x111e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc186, gbc.sp());
        EXPECT(0x1120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0013
        gbc.setState(0x5921, 0x9068, 0xabe0, 0x665c, 0xaba, 0x9674, 0x1, 0x0);
        gbc.writeMem(0x5921, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9068, gbc.sp());
        EXPECT(0x5923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0014
        gbc.setState(0x40b6, 0x9be9, 0x8360, 0x95d, 0xcbea, 0x116b, 0x1, 0x0);
        gbc.writeMem(0x40b6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9be9, gbc.sp());
        EXPECT(0x40b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0015
        gbc.setState(0xc3fa, 0xbc82, 0x5b80, 0x1dec, 0xa62e, 0x3d80, 0x1, 0x0);
        gbc.writeMem(0xc3fa, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbc82, gbc.sp());
        EXPECT(0xc3fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3fa));
        EXPECT(0xe3, gbc.readMem(0xc3fb));
        // CB E3 0016
        gbc.setState(0x5d9c, 0xd685, 0xe150, 0x79c9, 0xf0a9, 0xcdda, 0x0, 0x0);
        gbc.writeMem(0x5d9c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd685, gbc.sp());
        EXPECT(0x5d9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0017
        gbc.setState(0x8f7, 0x66ec, 0x3300, 0xa5ab, 0x7377, 0x740e, 0x1, 0x0);
        gbc.writeMem(0x8f7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x66ec, gbc.sp());
        EXPECT(0x8f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0019
        gbc.setState(0x903f, 0x3393, 0xe9a0, 0xa3e6, 0xc897, 0x13ac, 0x0, 0x1);
        gbc.writeMem(0x903f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3393, gbc.sp());
        EXPECT(0x9041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x903f));
        EXPECT(0xe3, gbc.readMem(0x9040));
        // CB E3 001A
        gbc.setState(0xc28b, 0x1518, 0x140, 0x11ef, 0xafa4, 0x452, 0x1, 0x1);
        gbc.writeMem(0xc28b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1518, gbc.sp());
        EXPECT(0xc28d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc28b));
        EXPECT(0xe3, gbc.readMem(0xc28c));
        // CB E3 001B
        gbc.setState(0x7901, 0x2df1, 0x68f0, 0x294f, 0x2b3d, 0xaf3e, 0x1, 0x0);
        gbc.writeMem(0x7901, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2df1, gbc.sp());
        EXPECT(0x7903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 001C
        gbc.setState(0x7328, 0x3e21, 0x7570, 0x8ff5, 0x5032, 0x2436, 0x0, 0x1);
        gbc.writeMem(0x7328, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3e21, gbc.sp());
        EXPECT(0x732a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 001D
        gbc.setState(0xc960, 0xa985, 0xf650, 0x2981, 0x2937, 0xcd6d, 0x1, 0x0);
        gbc.writeMem(0xc960, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa985, gbc.sp());
        EXPECT(0xc962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc960));
        EXPECT(0xe3, gbc.readMem(0xc961));
        // CB E3 001E
        gbc.setState(0xba5f, 0x544e, 0xa030, 0x2544, 0x17e6, 0x12d, 0x0, 0x1);
        gbc.writeMem(0xba5f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x544e, gbc.sp());
        EXPECT(0xba61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba5f));
        EXPECT(0xe3, gbc.readMem(0xba60));
        // CB E3 001F
        gbc.setState(0xeae2, 0x6115, 0x5920, 0xe3c6, 0xf29, 0xca0c, 0x0, 0x1);
        gbc.writeMem(0xeae2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6115, gbc.sp());
        EXPECT(0xeae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeae2));
        EXPECT(0xe3, gbc.readMem(0xeae3));
        // CB E3 0020
        gbc.setState(0x14b, 0xf5f9, 0x780, 0xa8a3, 0x542c, 0xb756, 0x0, 0x0);
        gbc.writeMem(0x14b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf5f9, gbc.sp());
        EXPECT(0x14d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0021
        gbc.setState(0xd28a, 0xfd6c, 0xb100, 0x9f4d, 0x90ee, 0xc423, 0x0, 0x0);
        gbc.writeMem(0xd28a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xfd6c, gbc.sp());
        EXPECT(0xd28c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd28a));
        EXPECT(0xe3, gbc.readMem(0xd28b));
        // CB E3 0022
        gbc.setState(0x43d4, 0xf66e, 0xd7f0, 0x325c, 0x5563, 0x436f, 0x1, 0x0);
        gbc.writeMem(0x43d4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf66e, gbc.sp());
        EXPECT(0x43d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0023
        gbc.setState(0x2532, 0x51b1, 0x6e90, 0x5a3f, 0x3f31, 0xbef8, 0x0, 0x1);
        gbc.writeMem(0x2532, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x51b1, gbc.sp());
        EXPECT(0x2534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0024
        gbc.setState(0x28d0, 0xe1fa, 0x3bf0, 0x4862, 0x3020, 0xc9f1, 0x0, 0x1);
        gbc.writeMem(0x28d0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe1fa, gbc.sp());
        EXPECT(0x28d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0025
        gbc.setState(0x141f, 0x342e, 0x3020, 0x72ba, 0xaf8c, 0xa72d, 0x0, 0x0);
        gbc.writeMem(0x141f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x342e, gbc.sp());
        EXPECT(0x1421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0026
        gbc.setState(0x9f3d, 0xb8d7, 0x5660, 0xe938, 0x58a5, 0xb719, 0x1, 0x1);
        gbc.writeMem(0x9f3d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb8d7, gbc.sp());
        EXPECT(0x9f3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f3d));
        EXPECT(0xe3, gbc.readMem(0x9f3e));
        // CB E3 0027
        gbc.setState(0x3a3d, 0xc704, 0x2990, 0x7784, 0x2507, 0x9c68, 0x0, 0x1);
        gbc.writeMem(0x3a3d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc704, gbc.sp());
        EXPECT(0x3a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0028
        gbc.setState(0x668, 0xcce, 0xa4f0, 0xa20a, 0xadc2, 0xa09b, 0x1, 0x1);
        gbc.writeMem(0x668, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcce, gbc.sp());
        EXPECT(0x66a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0029
        gbc.setState(0x272d, 0x4649, 0x6b30, 0x4b63, 0x97dd, 0xbfed, 0x0, 0x1);
        gbc.writeMem(0x272d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4649, gbc.sp());
        EXPECT(0x272f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 002A
        gbc.setState(0x5ded, 0xc679, 0x56b0, 0xdef4, 0xad02, 0xb606, 0x0, 0x1);
        gbc.writeMem(0x5ded, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc679, gbc.sp());
        EXPECT(0x5def, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 002B
        gbc.setState(0xaa00, 0x51e6, 0x5e30, 0x4d34, 0x8f5b, 0xc8d5, 0x0, 0x0);
        gbc.writeMem(0xaa00, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x51e6, gbc.sp());
        EXPECT(0xaa02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa00));
        EXPECT(0xe3, gbc.readMem(0xaa01));
        // CB E3 002C
        gbc.setState(0x60cc, 0x5a59, 0xa930, 0x2aa, 0xb11a, 0x75de, 0x0, 0x1);
        gbc.writeMem(0x60cc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5a59, gbc.sp());
        EXPECT(0x60ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 002D
        gbc.setState(0x830f, 0x37b3, 0x2340, 0xca80, 0xd12d, 0xdb2, 0x1, 0x0);
        gbc.writeMem(0x830f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x37b3, gbc.sp());
        EXPECT(0x8311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x830f));
        EXPECT(0xe3, gbc.readMem(0x8310));
        // CB E3 002E
        gbc.setState(0x2d64, 0xb395, 0x95c0, 0xa76f, 0xc3bc, 0x947, 0x0, 0x0);
        gbc.writeMem(0x2d64, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb395, gbc.sp());
        EXPECT(0x2d66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 002F
        gbc.setState(0x1b27, 0xdb1e, 0x9e90, 0x597c, 0xb2a6, 0xd9d6, 0x0, 0x0);
        gbc.writeMem(0x1b27, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xdb1e, gbc.sp());
        EXPECT(0x1b29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0030
        gbc.setState(0x2e6c, 0x657b, 0x5c00, 0x43b5, 0xe3ce, 0x4eb1, 0x1, 0x0);
        gbc.writeMem(0x2e6c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x657b, gbc.sp());
        EXPECT(0x2e6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0031
        gbc.setState(0x3afb, 0xb7a4, 0xe670, 0x705b, 0x8d08, 0xc06d, 0x1, 0x1);
        gbc.writeMem(0x3afb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb7a4, gbc.sp());
        EXPECT(0x3afd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0032
        gbc.setState(0xacf7, 0xa8d1, 0x3450, 0x90b5, 0x85d2, 0xd6b5, 0x0, 0x1);
        gbc.writeMem(0xacf7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa8d1, gbc.sp());
        EXPECT(0xacf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf7));
        EXPECT(0xe3, gbc.readMem(0xacf8));
        // CB E3 0033
        gbc.setState(0x25ed, 0x30c4, 0x6110, 0xd037, 0x7168, 0x46dc, 0x1, 0x1);
        gbc.writeMem(0x25ed, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x30c4, gbc.sp());
        EXPECT(0x25ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0034
        gbc.setState(0x1645, 0x9711, 0xfc30, 0x3933, 0x11cc, 0x4e03, 0x1, 0x1);
        gbc.writeMem(0x1645, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9711, gbc.sp());
        EXPECT(0x1647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0035
        gbc.setState(0x170b, 0xea75, 0x8830, 0x3ff0, 0x2d88, 0xd026, 0x1, 0x0);
        gbc.writeMem(0x170b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xea75, gbc.sp());
        EXPECT(0x170d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0036
        gbc.setState(0xe6be, 0x1260, 0xa260, 0x3709, 0xc520, 0x6651, 0x0, 0x1);
        gbc.writeMem(0xe6be, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1260, gbc.sp());
        EXPECT(0xe6c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6be));
        EXPECT(0xe3, gbc.readMem(0xe6bf));
        // CB E3 0037
        gbc.setState(0x1641, 0x9ca0, 0x2ba0, 0xe9a4, 0xd483, 0x76d3, 0x0, 0x0);
        gbc.writeMem(0x1641, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9ca0, gbc.sp());
        EXPECT(0x1643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0038
        gbc.setState(0x67fd, 0xf826, 0x9d00, 0xc585, 0xf5b8, 0x3f62, 0x0, 0x1);
        gbc.writeMem(0x67fd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf826, gbc.sp());
        EXPECT(0x67ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0039
        gbc.setState(0x6bfd, 0x7942, 0x8030, 0xa2c1, 0xbce1, 0x6429, 0x0, 0x1);
        gbc.writeMem(0x6bfd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7942, gbc.sp());
        EXPECT(0x6bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 003A
        gbc.setState(0xc29e, 0xb74d, 0x2950, 0x58da, 0xf6b3, 0x5942, 0x0, 0x1);
        gbc.writeMem(0xc29e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb74d, gbc.sp());
        EXPECT(0xc2a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc29e));
        EXPECT(0xe3, gbc.readMem(0xc29f));
        // CB E3 003B
        gbc.setState(0x75fb, 0xc725, 0xf900, 0x4498, 0x4bfe, 0x6519, 0x1, 0x1);
        gbc.writeMem(0x75fb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc725, gbc.sp());
        EXPECT(0x75fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 003C
        gbc.setState(0xa6e1, 0x59e7, 0x3be0, 0x4648, 0x2ff6, 0xcf01, 0x0, 0x0);
        gbc.writeMem(0xa6e1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x59e7, gbc.sp());
        EXPECT(0xa6e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6e1));
        EXPECT(0xe3, gbc.readMem(0xa6e2));
        // CB E3 003D
        gbc.setState(0x3938, 0x5b95, 0xae70, 0xdd3c, 0xc1f6, 0x4dcf, 0x0, 0x0);
        gbc.writeMem(0x3938, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5b95, gbc.sp());
        EXPECT(0x393a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 003E
        gbc.setState(0xe1d7, 0x97ed, 0x5ca0, 0x22d9, 0xe116, 0xc372, 0x1, 0x1);
        gbc.writeMem(0xe1d7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x97ed, gbc.sp());
        EXPECT(0xe1d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1d7));
        EXPECT(0xe3, gbc.readMem(0xe1d8));
        // CB E3 003F
        gbc.setState(0x4745, 0x45d1, 0x6760, 0xd1bf, 0x411f, 0x374b, 0x0, 0x0);
        gbc.writeMem(0x4745, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x45d1, gbc.sp());
        EXPECT(0x4747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0040
        gbc.setState(0x617c, 0x1900, 0xb990, 0x9477, 0x5a6e, 0x6ecc, 0x1, 0x0);
        gbc.writeMem(0x617c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1900, gbc.sp());
        EXPECT(0x617e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0041
        gbc.setState(0x3ff, 0x42d8, 0x7fd0, 0xda35, 0x882d, 0x7908, 0x1, 0x1);
        gbc.writeMem(0x3ff, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x42d8, gbc.sp());
        EXPECT(0x401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0042
        gbc.setState(0x4600, 0x7ae6, 0x83c0, 0xc3c6, 0x4cb2, 0x90e6, 0x1, 0x1);
        gbc.writeMem(0x4600, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7ae6, gbc.sp());
        EXPECT(0x4602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0043
        gbc.setState(0xd925, 0xbf58, 0x8770, 0x64de, 0xf2a6, 0x65d5, 0x1, 0x0);
        gbc.writeMem(0xd925, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xbf58, gbc.sp());
        EXPECT(0xd927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd925));
        EXPECT(0xe3, gbc.readMem(0xd926));
        // CB E3 0044
        gbc.setState(0x587, 0x344, 0x7e40, 0x6926, 0x6f5a, 0xb4c1, 0x1, 0x1);
        gbc.writeMem(0x587, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x344, gbc.sp());
        EXPECT(0x589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0045
        gbc.setState(0x4158, 0x6210, 0x8350, 0x4cdc, 0x7219, 0x365d, 0x1, 0x0);
        gbc.writeMem(0x4158, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6210, gbc.sp());
        EXPECT(0x415a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0046
        gbc.setState(0x7b7, 0x16a2, 0xe300, 0x56c4, 0x5197, 0x7571, 0x1, 0x1);
        gbc.writeMem(0x7b7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x16a2, gbc.sp());
        EXPECT(0x7b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0047
        gbc.setState(0x211a, 0xd083, 0x3c90, 0x124d, 0x2e0d, 0x8c63, 0x0, 0x0);
        gbc.writeMem(0x211a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd083, gbc.sp());
        EXPECT(0x211c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0048
        gbc.setState(0x9f6a, 0x8d99, 0x8380, 0x8211, 0x8ba7, 0xe782, 0x1, 0x1);
        gbc.writeMem(0x9f6a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8d99, gbc.sp());
        EXPECT(0x9f6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f6a));
        EXPECT(0xe3, gbc.readMem(0x9f6b));
        // CB E3 004A
        gbc.setState(0x1b5, 0xc794, 0x8020, 0x69b0, 0xc286, 0x80b5, 0x0, 0x1);
        gbc.writeMem(0x1b5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc794, gbc.sp());
        EXPECT(0x1b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 004B
        gbc.setState(0xd2eb, 0x4709, 0xd870, 0xde82, 0x389d, 0xa628, 0x1, 0x1);
        gbc.writeMem(0xd2eb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4709, gbc.sp());
        EXPECT(0xd2ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2eb));
        EXPECT(0xe3, gbc.readMem(0xd2ec));
        // CB E3 004C
        gbc.setState(0xb1c1, 0xa537, 0xb940, 0x3f1d, 0x3919, 0x6926, 0x1, 0x1);
        gbc.writeMem(0xb1c1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa537, gbc.sp());
        EXPECT(0xb1c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1c1));
        EXPECT(0xe3, gbc.readMem(0xb1c2));
        // CB E3 004D
        gbc.setState(0x1838, 0xa4e9, 0x2870, 0xaddb, 0xa195, 0x226a, 0x1, 0x0);
        gbc.writeMem(0x1838, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa4e9, gbc.sp());
        EXPECT(0x183a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 004E
        gbc.setState(0xb818, 0x9231, 0xc540, 0x452c, 0xc7f, 0x3bb5, 0x1, 0x0);
        gbc.writeMem(0xb818, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9231, gbc.sp());
        EXPECT(0xb81a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb818));
        EXPECT(0xe3, gbc.readMem(0xb819));
        // CB E3 004F
        gbc.setState(0x875a, 0x3d80, 0x2d70, 0x9d16, 0x7463, 0x37d2, 0x1, 0x0);
        gbc.writeMem(0x875a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3d80, gbc.sp());
        EXPECT(0x875c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x875a));
        EXPECT(0xe3, gbc.readMem(0x875b));
        // CB E3 0050
        gbc.setState(0x4497, 0x83d5, 0xd7c0, 0x2c9c, 0xda5d, 0xb7c9, 0x0, 0x1);
        gbc.writeMem(0x4497, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x83d5, gbc.sp());
        EXPECT(0x4499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0051
        gbc.setState(0xe9e2, 0x51f5, 0xff10, 0xba9a, 0xd2c8, 0xadff, 0x1, 0x1);
        gbc.writeMem(0xe9e2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x51f5, gbc.sp());
        EXPECT(0xe9e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9e2));
        EXPECT(0xe3, gbc.readMem(0xe9e3));
        // CB E3 0052
        gbc.setState(0x639d, 0x31a0, 0x6e30, 0x2d71, 0x595c, 0x5bfb, 0x1, 0x1);
        gbc.writeMem(0x639d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x31a0, gbc.sp());
        EXPECT(0x639f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0053
        gbc.setState(0x8b98, 0x8de6, 0xb8a0, 0xf5e1, 0x8c72, 0x4a05, 0x0, 0x0);
        gbc.writeMem(0x8b98, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8de6, gbc.sp());
        EXPECT(0x8b9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b98));
        EXPECT(0xe3, gbc.readMem(0x8b99));
        // CB E3 0054
        gbc.setState(0x81f7, 0x7a36, 0x6990, 0x379c, 0xdc1c, 0x3271, 0x0, 0x1);
        gbc.writeMem(0x81f7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7a36, gbc.sp());
        EXPECT(0x81f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81f7));
        EXPECT(0xe3, gbc.readMem(0x81f8));
        // CB E3 0055
        gbc.setState(0xd584, 0x1f6c, 0x8210, 0x8ce1, 0x793a, 0x852, 0x0, 0x1);
        gbc.writeMem(0xd584, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1f6c, gbc.sp());
        EXPECT(0xd586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd584));
        EXPECT(0xe3, gbc.readMem(0xd585));
        // CB E3 0056
        gbc.setState(0xb1e0, 0x7592, 0x41f0, 0xe928, 0xff05, 0x6f09, 0x1, 0x1);
        gbc.writeMem(0xb1e0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7592, gbc.sp());
        EXPECT(0xb1e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1e0));
        EXPECT(0xe3, gbc.readMem(0xb1e1));
        // CB E3 0057
        gbc.setState(0xcfd9, 0xf51c, 0x4ed0, 0xd315, 0x6ffd, 0x3c81, 0x0, 0x0);
        gbc.writeMem(0xcfd9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf51c, gbc.sp());
        EXPECT(0xcfdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd9));
        EXPECT(0xe3, gbc.readMem(0xcfda));
        // CB E3 0058
        gbc.setState(0x32cb, 0xfce9, 0x5360, 0x1d6d, 0x7f96, 0xd177, 0x1, 0x1);
        gbc.writeMem(0x32cb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xfce9, gbc.sp());
        EXPECT(0x32cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0059
        gbc.setState(0x3af6, 0x1f79, 0xb400, 0x615e, 0x41b6, 0xed05, 0x1, 0x0);
        gbc.writeMem(0x3af6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1f79, gbc.sp());
        EXPECT(0x3af8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 005B
        gbc.setState(0x1b44, 0xa56f, 0x3a0, 0xc6f1, 0xbadc, 0x42cf, 0x1, 0x0);
        gbc.writeMem(0x1b44, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa56f, gbc.sp());
        EXPECT(0x1b46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 005C
        gbc.setState(0x289a, 0xba32, 0xd9e0, 0x8df8, 0x85d1, 0x6a78, 0x0, 0x0);
        gbc.writeMem(0x289a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xba32, gbc.sp());
        EXPECT(0x289c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 005D
        gbc.setState(0x2513, 0xa315, 0xbfa0, 0x6c7c, 0xdc01, 0x885, 0x0, 0x0);
        gbc.writeMem(0x2513, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa315, gbc.sp());
        EXPECT(0x2515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 005E
        gbc.setState(0xa7e9, 0x2cfe, 0xc840, 0x6d8e, 0x1ad3, 0xdbb8, 0x1, 0x0);
        gbc.writeMem(0xa7e9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2cfe, gbc.sp());
        EXPECT(0xa7eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7e9));
        EXPECT(0xe3, gbc.readMem(0xa7ea));
        // CB E3 005F
        gbc.setState(0x3d, 0x3e2, 0x13e0, 0x8163, 0x1c1f, 0x4818, 0x1, 0x1);
        gbc.writeMem(0x3d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3e2, gbc.sp());
        EXPECT(0x3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0060
        gbc.setState(0x5c7f, 0xda8d, 0xf70, 0x25dd, 0x46a1, 0xe816, 0x0, 0x0);
        gbc.writeMem(0x5c7f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xda8d, gbc.sp());
        EXPECT(0x5c81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0061
        gbc.setState(0xe641, 0x7933, 0xf450, 0x570e, 0xf041, 0xf35e, 0x1, 0x0);
        gbc.writeMem(0xe641, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7933, gbc.sp());
        EXPECT(0xe643, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe641));
        EXPECT(0xe3, gbc.readMem(0xe642));
        // CB E3 0062
        gbc.setState(0x36, 0x6247, 0xaf0, 0x1e1a, 0xede9, 0x9fe, 0x1, 0x0);
        gbc.writeMem(0x36, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6247, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0063
        gbc.setState(0x73ac, 0xce98, 0x9230, 0x94e1, 0x2d9e, 0xef3a, 0x1, 0x0);
        gbc.writeMem(0x73ac, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xce98, gbc.sp());
        EXPECT(0x73ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0064
        gbc.setState(0xee9, 0x383a, 0xc430, 0x70ee, 0xd095, 0xe613, 0x0, 0x1);
        gbc.writeMem(0xee9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x383a, gbc.sp());
        EXPECT(0xeeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0065
        gbc.setState(0xdb8, 0xe55f, 0x1730, 0xe046, 0x3855, 0x2de3, 0x1, 0x1);
        gbc.writeMem(0xdb8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe55f, gbc.sp());
        EXPECT(0xdba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0066
        gbc.setState(0x6038, 0xa745, 0xbe30, 0xea04, 0x93d5, 0x16dc, 0x1, 0x1);
        gbc.writeMem(0x6038, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa745, gbc.sp());
        EXPECT(0x603a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0067
        gbc.setState(0x6d52, 0x3ddc, 0xc300, 0x55b5, 0xf769, 0xee3f, 0x0, 0x1);
        gbc.writeMem(0x6d52, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3ddc, gbc.sp());
        EXPECT(0x6d54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0068
        gbc.setState(0xbf88, 0x3465, 0xad70, 0xfb87, 0xe2a5, 0x9bcf, 0x1, 0x0);
        gbc.writeMem(0xbf88, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3465, gbc.sp());
        EXPECT(0xbf8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf88));
        EXPECT(0xe3, gbc.readMem(0xbf89));
        // CB E3 0069
        gbc.setState(0x36b, 0xeb41, 0xdc0, 0x24f9, 0x7186, 0x202f, 0x0, 0x0);
        gbc.writeMem(0x36b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xeb41, gbc.sp());
        EXPECT(0x36d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 006A
        gbc.setState(0x26ab, 0x8c8b, 0xda70, 0xd91e, 0x5932, 0x24b1, 0x1, 0x0);
        gbc.writeMem(0x26ab, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8c8b, gbc.sp());
        EXPECT(0x26ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 006B
        gbc.setState(0xb298, 0xd23e, 0xc8c0, 0x1bc9, 0x27ea, 0x2862, 0x1, 0x1);
        gbc.writeMem(0xb298, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd23e, gbc.sp());
        EXPECT(0xb29a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb298));
        EXPECT(0xe3, gbc.readMem(0xb299));
        // CB E3 006C
        gbc.setState(0xd6de, 0x4120, 0x45f0, 0x63d9, 0xa571, 0xf25b, 0x0, 0x1);
        gbc.writeMem(0xd6de, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4120, gbc.sp());
        EXPECT(0xd6e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6de));
        EXPECT(0xe3, gbc.readMem(0xd6df));
        // CB E3 006D
        gbc.setState(0x8381, 0xd61a, 0x4420, 0x1c68, 0x4db3, 0x3d7a, 0x1, 0x0);
        gbc.writeMem(0x8381, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd61a, gbc.sp());
        EXPECT(0x8383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8381));
        EXPECT(0xe3, gbc.readMem(0x8382));
        // CB E3 006E
        gbc.setState(0xacac, 0xeebc, 0xfa30, 0x8637, 0x9399, 0x738b, 0x1, 0x0);
        gbc.writeMem(0xacac, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xeebc, gbc.sp());
        EXPECT(0xacae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacac));
        EXPECT(0xe3, gbc.readMem(0xacad));
        // CB E3 006F
        gbc.setState(0x9645, 0xffbf, 0x9440, 0x46a4, 0xcaa7, 0x976c, 0x1, 0x1);
        gbc.writeMem(0x9645, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xffbf, gbc.sp());
        EXPECT(0x9647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9645));
        EXPECT(0xe3, gbc.readMem(0x9646));
        // CB E3 0070
        gbc.setState(0xb2fc, 0x41e7, 0x7720, 0xe97f, 0x94e6, 0xa278, 0x0, 0x0);
        gbc.writeMem(0xb2fc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x41e7, gbc.sp());
        EXPECT(0xb2fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2fc));
        EXPECT(0xe3, gbc.readMem(0xb2fd));
        // CB E3 0071
        gbc.setState(0xa52f, 0xbc13, 0x1d90, 0x2815, 0x7caf, 0xd5cd, 0x1, 0x0);
        gbc.writeMem(0xa52f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbc13, gbc.sp());
        EXPECT(0xa531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa52f));
        EXPECT(0xe3, gbc.readMem(0xa530));
        // CB E3 0072
        gbc.setState(0xb3d, 0xb830, 0x9eb0, 0x2b7f, 0x7af, 0x61eb, 0x1, 0x0);
        gbc.writeMem(0xb3d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb830, gbc.sp());
        EXPECT(0xb3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0073
        gbc.setState(0x9c5d, 0x3dee, 0x5a80, 0x4b8b, 0xd774, 0xa2c2, 0x0, 0x0);
        gbc.writeMem(0x9c5d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3dee, gbc.sp());
        EXPECT(0x9c5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c5d));
        EXPECT(0xe3, gbc.readMem(0x9c5e));
        // CB E3 0074
        gbc.setState(0x942, 0x2983, 0xc940, 0xb994, 0x7e88, 0xe35c, 0x0, 0x1);
        gbc.writeMem(0x942, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2983, gbc.sp());
        EXPECT(0x944, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0075
        gbc.setState(0xd001, 0xe766, 0x6af0, 0x659b, 0xedf4, 0x7d8d, 0x0, 0x1);
        gbc.writeMem(0xd001, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe766, gbc.sp());
        EXPECT(0xd003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd001));
        EXPECT(0xe3, gbc.readMem(0xd002));
        // CB E3 0076
        gbc.setState(0xb9f8, 0xb219, 0xec90, 0x6953, 0x565e, 0x12b, 0x1, 0x1);
        gbc.writeMem(0xb9f8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb219, gbc.sp());
        EXPECT(0xb9fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f8));
        EXPECT(0xe3, gbc.readMem(0xb9f9));
        // CB E3 0077
        gbc.setState(0xeebb, 0x5655, 0xce70, 0x7206, 0x357d, 0x3270, 0x0, 0x1);
        gbc.writeMem(0xeebb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5655, gbc.sp());
        EXPECT(0xeebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeebb));
        EXPECT(0xe3, gbc.readMem(0xeebc));
        // CB E3 0078
        gbc.setState(0x49e7, 0xa05, 0x8810, 0x238e, 0x5946, 0x326d, 0x0, 0x1);
        gbc.writeMem(0x49e7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa05, gbc.sp());
        EXPECT(0x49e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0079
        gbc.setState(0x9d67, 0x57dd, 0xf0e0, 0xcc0b, 0x618, 0x7b49, 0x0, 0x0);
        gbc.writeMem(0x9d67, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x57dd, gbc.sp());
        EXPECT(0x9d69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d67));
        EXPECT(0xe3, gbc.readMem(0x9d68));
        // CB E3 007A
        gbc.setState(0x4144, 0x28de, 0xcad0, 0x7ff, 0x120a, 0xa29d, 0x0, 0x1);
        gbc.writeMem(0x4144, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x28de, gbc.sp());
        EXPECT(0x4146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 007B
        gbc.setState(0x1275, 0x7e9, 0x770, 0xd9f3, 0x77d0, 0x3dfd, 0x0, 0x1);
        gbc.writeMem(0x1275, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7e9, gbc.sp());
        EXPECT(0x1277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 007C
        gbc.setState(0x82c4, 0xc277, 0x98e0, 0xb2c3, 0x4b91, 0x7065, 0x1, 0x1);
        gbc.writeMem(0x82c4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc277, gbc.sp());
        EXPECT(0x82c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82c4));
        EXPECT(0xe3, gbc.readMem(0x82c5));
        // CB E3 007D
        gbc.setState(0x3e4f, 0x4a21, 0x1430, 0x6d83, 0xe399, 0x5d5d, 0x0, 0x0);
        gbc.writeMem(0x3e4f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4a21, gbc.sp());
        EXPECT(0x3e51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 007E
        gbc.setState(0x1920, 0x68f3, 0x560, 0x3927, 0xbffb, 0x8269, 0x0, 0x1);
        gbc.writeMem(0x1920, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x68f3, gbc.sp());
        EXPECT(0x1922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 007F
        gbc.setState(0x25ee, 0xa16a, 0xc690, 0xff2c, 0x5912, 0xe83c, 0x0, 0x0);
        gbc.writeMem(0x25ee, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa16a, gbc.sp());
        EXPECT(0x25f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0080
        gbc.setState(0x6884, 0x1790, 0xdf70, 0x8cf0, 0xe250, 0xa624, 0x1, 0x1);
        gbc.writeMem(0x6884, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1790, gbc.sp());
        EXPECT(0x6886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0081
        gbc.setState(0xdfb2, 0x523e, 0xb4f0, 0xb157, 0x59ce, 0xcdad, 0x0, 0x1);
        gbc.writeMem(0xdfb2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x523e, gbc.sp());
        EXPECT(0xdfb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb2));
        EXPECT(0xe3, gbc.readMem(0xdfb3));
        // CB E3 0082
        gbc.setState(0x878, 0x7d61, 0x52e0, 0xff7f, 0xa108, 0xd526, 0x1, 0x0);
        gbc.writeMem(0x878, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7d61, gbc.sp());
        EXPECT(0x87a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0083
        gbc.setState(0xe771, 0x3b5e, 0xe720, 0x3a30, 0x7549, 0x2d07, 0x1, 0x0);
        gbc.writeMem(0xe771, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3b5e, gbc.sp());
        EXPECT(0xe773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe771));
        EXPECT(0xe3, gbc.readMem(0xe772));
        // CB E3 0084
        gbc.setState(0x3389, 0xf5a6, 0xe70, 0x7302, 0x1a3f, 0x87b4, 0x0, 0x0);
        gbc.writeMem(0x3389, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf5a6, gbc.sp());
        EXPECT(0x338b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0085
        gbc.setState(0x1a9f, 0x219b, 0xfc00, 0xf0f3, 0x2780, 0x9d97, 0x0, 0x0);
        gbc.writeMem(0x1a9f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x219b, gbc.sp());
        EXPECT(0x1aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0086
        gbc.setState(0x8c39, 0xd95, 0xb300, 0x8c19, 0x325a, 0x8a04, 0x1, 0x1);
        gbc.writeMem(0x8c39, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd95, gbc.sp());
        EXPECT(0x8c3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c39));
        EXPECT(0xe3, gbc.readMem(0x8c3a));
        // CB E3 0088
        gbc.setState(0x8970, 0x49eb, 0xaf80, 0x48f8, 0x7ae8, 0xf37e, 0x1, 0x1);
        gbc.writeMem(0x8970, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x49eb, gbc.sp());
        EXPECT(0x8972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8970));
        EXPECT(0xe3, gbc.readMem(0x8971));
        // CB E3 0089
        gbc.setState(0x3575, 0xb7c0, 0x5310, 0x2, 0xc3da, 0x4648, 0x1, 0x1);
        gbc.writeMem(0x3575, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb7c0, gbc.sp());
        EXPECT(0x3577, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 008A
        gbc.setState(0x9114, 0x4323, 0x81c0, 0x7d0e, 0xea11, 0x6562, 0x0, 0x0);
        gbc.writeMem(0x9114, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4323, gbc.sp());
        EXPECT(0x9116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9114));
        EXPECT(0xe3, gbc.readMem(0x9115));
        // CB E3 008B
        gbc.setState(0xb603, 0x8c8a, 0xae80, 0xb3cf, 0xf0f, 0x29ff, 0x1, 0x0);
        gbc.writeMem(0xb603, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8c8a, gbc.sp());
        EXPECT(0xb605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb603));
        EXPECT(0xe3, gbc.readMem(0xb604));
        // CB E3 008C
        gbc.setState(0xfc9, 0x681f, 0x50e0, 0xcadc, 0x22c1, 0x306e, 0x0, 0x0);
        gbc.writeMem(0xfc9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x681f, gbc.sp());
        EXPECT(0xfcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 008E
        gbc.setState(0x3dc5, 0x1484, 0x3250, 0xea85, 0x25bf, 0x9af4, 0x0, 0x1);
        gbc.writeMem(0x3dc5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1484, gbc.sp());
        EXPECT(0x3dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 008F
        gbc.setState(0x75ac, 0xb1ca, 0xd650, 0x19db, 0xeb22, 0xcaa7, 0x1, 0x0);
        gbc.writeMem(0x75ac, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb1ca, gbc.sp());
        EXPECT(0x75ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0090
        gbc.setState(0x8099, 0x3caf, 0xd0, 0x694, 0xf125, 0xeaa1, 0x0, 0x0);
        gbc.writeMem(0x8099, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3caf, gbc.sp());
        EXPECT(0x809b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8099));
        EXPECT(0xe3, gbc.readMem(0x809a));
        // CB E3 0091
        gbc.setState(0x6c3e, 0x70e8, 0x4970, 0xaffe, 0x40a2, 0xc951, 0x0, 0x1);
        gbc.writeMem(0x6c3e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x70e8, gbc.sp());
        EXPECT(0x6c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0092
        gbc.setState(0xea43, 0x5a39, 0x3760, 0x1a0f, 0x8479, 0xb9e6, 0x1, 0x1);
        gbc.writeMem(0xea43, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5a39, gbc.sp());
        EXPECT(0xea45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea43));
        EXPECT(0xe3, gbc.readMem(0xea44));
        // CB E3 0093
        gbc.setState(0x7969, 0x4ce5, 0xce90, 0xceeb, 0x1e24, 0x64ff, 0x1, 0x1);
        gbc.writeMem(0x7969, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4ce5, gbc.sp());
        EXPECT(0x796b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0095
        gbc.setState(0x1a2c, 0xfa18, 0x6b30, 0x6eac, 0x7b3a, 0x365d, 0x1, 0x0);
        gbc.writeMem(0x1a2c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfa18, gbc.sp());
        EXPECT(0x1a2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0096
        gbc.setState(0x66d6, 0xaedf, 0x1080, 0xec3e, 0x2688, 0x8d52, 0x0, 0x1);
        gbc.writeMem(0x66d6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xaedf, gbc.sp());
        EXPECT(0x66d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0097
        gbc.setState(0xdf66, 0x4c6, 0x3480, 0x44e2, 0x1a8d, 0xab25, 0x1, 0x1);
        gbc.writeMem(0xdf66, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4c6, gbc.sp());
        EXPECT(0xdf68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf66));
        EXPECT(0xe3, gbc.readMem(0xdf67));
        // CB E3 0099
        gbc.setState(0xb5fa, 0xa52c, 0x8640, 0xa0b7, 0xcdea, 0xc66d, 0x0, 0x0);
        gbc.writeMem(0xb5fa, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa52c, gbc.sp());
        EXPECT(0xb5fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5fa));
        EXPECT(0xe3, gbc.readMem(0xb5fb));
        // CB E3 009A
        gbc.setState(0xe462, 0xa48f, 0x5490, 0x7884, 0x313e, 0xd62e, 0x0, 0x0);
        gbc.writeMem(0xe462, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa48f, gbc.sp());
        EXPECT(0xe464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe462));
        EXPECT(0xe3, gbc.readMem(0xe463));
        // CB E3 009B
        gbc.setState(0xeda6, 0x23f6, 0x6a60, 0x25, 0x171e, 0xe452, 0x1, 0x1);
        gbc.writeMem(0xeda6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x23f6, gbc.sp());
        EXPECT(0xeda8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeda6));
        EXPECT(0xe3, gbc.readMem(0xeda7));
        // CB E3 009C
        gbc.setState(0x8b1b, 0xd3e9, 0xa390, 0x7806, 0xad8d, 0xcf71, 0x1, 0x0);
        gbc.writeMem(0x8b1b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd3e9, gbc.sp());
        EXPECT(0x8b1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b1b));
        EXPECT(0xe3, gbc.readMem(0x8b1c));
        // CB E3 009D
        gbc.setState(0x56c3, 0x48cc, 0xcd30, 0xf450, 0x48ae, 0xc681, 0x0, 0x0);
        gbc.writeMem(0x56c3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x48cc, gbc.sp());
        EXPECT(0x56c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 009E
        gbc.setState(0xa3a8, 0xaaa6, 0xa960, 0x7854, 0x1a1d, 0x8d72, 0x1, 0x1);
        gbc.writeMem(0xa3a8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xaaa6, gbc.sp());
        EXPECT(0xa3aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3a8));
        EXPECT(0xe3, gbc.readMem(0xa3a9));
        // CB E3 009F
        gbc.setState(0xbd60, 0x52f, 0xd130, 0x48e5, 0x3bf0, 0x5447, 0x1, 0x1);
        gbc.writeMem(0xbd60, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x52f, gbc.sp());
        EXPECT(0xbd62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd60));
        EXPECT(0xe3, gbc.readMem(0xbd61));
        // CB E3 00A0
        gbc.setState(0xad40, 0xf5db, 0x4c50, 0x168f, 0x7026, 0x3ba3, 0x0, 0x1);
        gbc.writeMem(0xad40, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf5db, gbc.sp());
        EXPECT(0xad42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad40));
        EXPECT(0xe3, gbc.readMem(0xad41));
        // CB E3 00A1
        gbc.setState(0x3ff1, 0x2336, 0x6480, 0x4e43, 0x3fa2, 0x1595, 0x1, 0x1);
        gbc.writeMem(0x3ff1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2336, gbc.sp());
        EXPECT(0x3ff3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 00A2
        gbc.setState(0xe808, 0x937e, 0x2110, 0x21d5, 0x5a5a, 0x8c06, 0x1, 0x1);
        gbc.writeMem(0xe808, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x937e, gbc.sp());
        EXPECT(0xe80a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe808));
        EXPECT(0xe3, gbc.readMem(0xe809));
        // CB E3 00A3
        gbc.setState(0x7b4a, 0xdb9f, 0x6d70, 0x1084, 0xbe79, 0xdd79, 0x0, 0x0);
        gbc.writeMem(0x7b4a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdb9f, gbc.sp());
        EXPECT(0x7b4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 00A4
        gbc.setState(0x69a2, 0xc87e, 0x99e0, 0x677d, 0x66f, 0x71d2, 0x0, 0x1);
        gbc.writeMem(0x69a2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc87e, gbc.sp());
        EXPECT(0x69a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 00A5
        gbc.setState(0x4516, 0x34eb, 0xc050, 0xc6e7, 0xb366, 0x5f01, 0x0, 0x1);
        gbc.writeMem(0x4516, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x34eb, gbc.sp());
        EXPECT(0x4518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 00A6
        gbc.setState(0x3a7, 0x5a1b, 0xbca0, 0xd0ee, 0xb9aa, 0x3f7b, 0x1, 0x0);
        gbc.writeMem(0x3a7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5a1b, gbc.sp());
        EXPECT(0x3a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 00A7
        gbc.setState(0xddfb, 0x5626, 0x5350, 0xfeff, 0x4ed5, 0xea7d, 0x0, 0x1);
        gbc.writeMem(0xddfb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5626, gbc.sp());
        EXPECT(0xddfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddfb));
        EXPECT(0xe3, gbc.readMem(0xddfc));
        // CB E3 00A8
        gbc.setState(0x81c8, 0xb79b, 0x5690, 0x11e3, 0x6a72, 0xd74d, 0x0, 0x1);
        gbc.writeMem(0x81c8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb79b, gbc.sp());
        EXPECT(0x81ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c8));
        EXPECT(0xe3, gbc.readMem(0x81c9));
        // CB E3 00A9
        gbc.setState(0x1730, 0x4159, 0x6280, 0xe7f5, 0x86df, 0x1c21, 0x0, 0x1);
        gbc.writeMem(0x1730, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4159, gbc.sp());
        EXPECT(0x1732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 00AA
        gbc.setState(0xeb3b, 0xc704, 0x7bc0, 0xb64d, 0x1843, 0x3784, 0x0, 0x0);
        gbc.writeMem(0xeb3b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc704, gbc.sp());
        EXPECT(0xeb3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb3b));
        EXPECT(0xe3, gbc.readMem(0xeb3c));
        // CB E3 00AB
        gbc.setState(0x7efd, 0x39e, 0x3dd0, 0x1f60, 0x8d0b, 0x2d7a, 0x1, 0x1);
        gbc.writeMem(0x7efd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x39e, gbc.sp());
        EXPECT(0x7eff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 00AC
        gbc.setState(0x98c1, 0x36f3, 0xdaf0, 0x68c2, 0xa7b4, 0x1f03, 0x1, 0x0);
        gbc.writeMem(0x98c1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x36f3, gbc.sp());
        EXPECT(0x98c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98c1));
        EXPECT(0xe3, gbc.readMem(0x98c2));
        // CB E3 00AD
        gbc.setState(0xdbd3, 0xb8b1, 0xce60, 0x9683, 0x33b9, 0x53ed, 0x0, 0x1);
        gbc.writeMem(0xdbd3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb8b1, gbc.sp());
        EXPECT(0xdbd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbd3));
        EXPECT(0xe3, gbc.readMem(0xdbd4));
        // CB E3 00AE
        gbc.setState(0xbbeb, 0xa31, 0x2b0, 0x2931, 0xbe6d, 0x558d, 0x1, 0x0);
        gbc.writeMem(0xbbeb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa31, gbc.sp());
        EXPECT(0xbbed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbeb));
        EXPECT(0xe3, gbc.readMem(0xbbec));
        // CB E3 00AF
        gbc.setState(0x8669, 0xc91f, 0xbd70, 0x8f05, 0x9f30, 0x6300, 0x1, 0x0);
        gbc.writeMem(0x8669, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc91f, gbc.sp());
        EXPECT(0x866b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8669));
        EXPECT(0xe3, gbc.readMem(0x866a));
        // CB E3 00B0
        gbc.setState(0x448f, 0x9de1, 0x1fa0, 0xcfb9, 0x31e6, 0x5682, 0x1, 0x0);
        gbc.writeMem(0x448f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9de1, gbc.sp());
        EXPECT(0x4491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 00B1
        gbc.setState(0xe537, 0x6bbd, 0xefb0, 0x3, 0xaa32, 0xc5f0, 0x1, 0x0);
        gbc.writeMem(0xe537, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6bbd, gbc.sp());
        EXPECT(0xe539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe537));
        EXPECT(0xe3, gbc.readMem(0xe538));
        // CB E3 00B2
        gbc.setState(0x9460, 0x8011, 0x6ac0, 0x5fb9, 0xe4c, 0x759, 0x1, 0x1);
        gbc.writeMem(0x9460, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8011, gbc.sp());
        EXPECT(0x9462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9460));
        EXPECT(0xe3, gbc.readMem(0x9461));
        // CB E3 00B3
        gbc.setState(0x38ce, 0x3051, 0x6bb0, 0x9df1, 0xc729, 0x694c, 0x1, 0x1);
        gbc.writeMem(0x38ce, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3051, gbc.sp());
        EXPECT(0x38d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 00B5
        gbc.setState(0xda9f, 0x289b, 0x6550, 0xaec4, 0x17b2, 0xdabc, 0x0, 0x1);
        gbc.writeMem(0xda9f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x289b, gbc.sp());
        EXPECT(0xdaa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda9f));
        EXPECT(0xe3, gbc.readMem(0xdaa0));
        // CB E3 00B6
        gbc.setState(0x5a0a, 0x971c, 0x63b0, 0x12d9, 0xe6be, 0xb117, 0x0, 0x0);
        gbc.writeMem(0x5a0a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x971c, gbc.sp());
        EXPECT(0x5a0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 00B7
        gbc.setState(0x5e6f, 0x46ee, 0x3910, 0xcdf4, 0x7086, 0xaa41, 0x0, 0x0);
        gbc.writeMem(0x5e6f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x46ee, gbc.sp());
        EXPECT(0x5e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 00B9
        gbc.setState(0xe5ad, 0x8d07, 0x2040, 0x86b4, 0xe6e6, 0x2175, 0x1, 0x1);
        gbc.writeMem(0xe5ad, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8d07, gbc.sp());
        EXPECT(0xe5af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ad));
        EXPECT(0xe3, gbc.readMem(0xe5ae));
        // CB E3 00BA
        gbc.setState(0x3430, 0xe917, 0x56d0, 0x4f6e, 0x34b, 0xaedd, 0x0, 0x1);
        gbc.writeMem(0x3430, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe917, gbc.sp());
        EXPECT(0x3432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 00BB
        gbc.setState(0x382, 0xbc43, 0x410, 0x800f, 0x947b, 0xe5c2, 0x1, 0x0);
        gbc.writeMem(0x382, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xbc43, gbc.sp());
        EXPECT(0x384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 00BC
        gbc.setState(0x42de, 0x4bbf, 0xc760, 0x4169, 0x79ce, 0x9cf0, 0x0, 0x1);
        gbc.writeMem(0x42de, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4bbf, gbc.sp());
        EXPECT(0x42e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 00BD
        gbc.setState(0x56af, 0x73ae, 0xb3f0, 0x9a0e, 0xec6e, 0xba7b, 0x0, 0x0);
        gbc.writeMem(0x56af, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x73ae, gbc.sp());
        EXPECT(0x56b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 00BE
        gbc.setState(0xd78, 0xcc8a, 0xd260, 0xda4f, 0xba89, 0xa3c7, 0x1, 0x1);
        gbc.writeMem(0xd78, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xcc8a, gbc.sp());
        EXPECT(0xd7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 00BF
        gbc.setState(0x9905, 0x54f7, 0xb700, 0xb753, 0xc89c, 0xe0f1, 0x1, 0x1);
        gbc.writeMem(0x9905, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x54f7, gbc.sp());
        EXPECT(0x9907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9905));
        EXPECT(0xe3, gbc.readMem(0x9906));
        // CB E3 00C0
        gbc.setState(0xcde, 0xe4be, 0x81d0, 0x9ab, 0xb829, 0xb0fb, 0x1, 0x1);
        gbc.writeMem(0xcde, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe4be, gbc.sp());
        EXPECT(0xce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 00C1
        gbc.setState(0x56a7, 0x12a0, 0x1e60, 0x52d6, 0xafde, 0xfa1e, 0x1, 0x0);
        gbc.writeMem(0x56a7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x12a0, gbc.sp());
        EXPECT(0x56a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 00C2
        gbc.setState(0x6cd8, 0x8092, 0xfb80, 0x26f9, 0x7a11, 0x51eb, 0x0, 0x0);
        gbc.writeMem(0x6cd8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8092, gbc.sp());
        EXPECT(0x6cda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 00C3
        gbc.setState(0x6ee2, 0x421, 0x1d80, 0xf3ce, 0xd72, 0x98bc, 0x1, 0x1);
        gbc.writeMem(0x6ee2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x421, gbc.sp());
        EXPECT(0x6ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 00C4
        gbc.setState(0xe960, 0x4e6b, 0xb930, 0x55fe, 0xdb8b, 0x426a, 0x0, 0x1);
        gbc.writeMem(0xe960, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4e6b, gbc.sp());
        EXPECT(0xe962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe960));
        EXPECT(0xe3, gbc.readMem(0xe961));
        // CB E3 00C5
        gbc.setState(0x1848, 0xd1ba, 0x23a0, 0x368f, 0xd520, 0xea33, 0x1, 0x1);
        gbc.writeMem(0x1848, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd1ba, gbc.sp());
        EXPECT(0x184a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 00C6
        gbc.setState(0x1b59, 0xd686, 0xae80, 0xfbdc, 0x39c4, 0x7eb8, 0x1, 0x0);
        gbc.writeMem(0x1b59, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd686, gbc.sp());
        EXPECT(0x1b5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 00C7
        gbc.setState(0x8019, 0x9837, 0xeb0, 0xc488, 0xd592, 0x9b0a, 0x1, 0x1);
        gbc.writeMem(0x8019, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9837, gbc.sp());
        EXPECT(0x801b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8019));
        EXPECT(0xe3, gbc.readMem(0x801a));
        // CB E3 00C8
        gbc.setState(0xcedc, 0x6c1, 0xb250, 0x287a, 0x6f3e, 0x58ac, 0x0, 0x0);
        gbc.writeMem(0xcedc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6c1, gbc.sp());
        EXPECT(0xcede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcedc));
        EXPECT(0xe3, gbc.readMem(0xcedd));
        // CB E3 00C9
        gbc.setState(0x8f6e, 0x3dca, 0xa8b0, 0xe289, 0xc00c, 0x2517, 0x0, 0x0);
        gbc.writeMem(0x8f6e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3dca, gbc.sp());
        EXPECT(0x8f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f6e));
        EXPECT(0xe3, gbc.readMem(0x8f6f));
        // CB E3 00CA
        gbc.setState(0x58dd, 0x3bd8, 0x5a70, 0x899f, 0xae48, 0xb25d, 0x1, 0x0);
        gbc.writeMem(0x58dd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3bd8, gbc.sp());
        EXPECT(0x58df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 00CB
        gbc.setState(0xe871, 0x40df, 0x4350, 0x20eb, 0xc99b, 0xf7f7, 0x0, 0x1);
        gbc.writeMem(0xe871, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x40df, gbc.sp());
        EXPECT(0xe873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe871));
        EXPECT(0xe3, gbc.readMem(0xe872));
        // CB E3 00CC
        gbc.setState(0x8076, 0xdd46, 0xa660, 0xefe2, 0xc50c, 0x46ee, 0x0, 0x0);
        gbc.writeMem(0x8076, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdd46, gbc.sp());
        EXPECT(0x8078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8076));
        EXPECT(0xe3, gbc.readMem(0x8077));
        // CB E3 00CD
        gbc.setState(0x2566, 0xc06c, 0x9d10, 0x47b6, 0x1277, 0xd0ac, 0x1, 0x0);
        gbc.writeMem(0x2566, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc06c, gbc.sp());
        EXPECT(0x2568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 00CE
        gbc.setState(0xe259, 0xdec5, 0x7fd0, 0x1b93, 0x5ee9, 0x8f28, 0x1, 0x1);
        gbc.writeMem(0xe259, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xdec5, gbc.sp());
        EXPECT(0xe25b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe259));
        EXPECT(0xe3, gbc.readMem(0xe25a));
        // CB E3 00CF
        gbc.setState(0xe56b, 0x5192, 0x81e0, 0x6819, 0xe613, 0x75c6, 0x0, 0x0);
        gbc.writeMem(0xe56b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5192, gbc.sp());
        EXPECT(0xe56d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe56b));
        EXPECT(0xe3, gbc.readMem(0xe56c));
        // CB E3 00D0
        gbc.setState(0xd491, 0xa0fb, 0xcc80, 0xbeac, 0x86f5, 0xf90f, 0x1, 0x1);
        gbc.writeMem(0xd491, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa0fb, gbc.sp());
        EXPECT(0xd493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd491));
        EXPECT(0xe3, gbc.readMem(0xd492));
        // CB E3 00D1
        gbc.setState(0x950a, 0x526a, 0x14a0, 0x78e9, 0x65be, 0x6379, 0x0, 0x0);
        gbc.writeMem(0x950a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x526a, gbc.sp());
        EXPECT(0x950c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x950a));
        EXPECT(0xe3, gbc.readMem(0x950b));
        // CB E3 00D2
        gbc.setState(0xb79a, 0x96ed, 0xccd0, 0x9631, 0x1a59, 0x4970, 0x1, 0x1);
        gbc.writeMem(0xb79a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x96ed, gbc.sp());
        EXPECT(0xb79c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb79a));
        EXPECT(0xe3, gbc.readMem(0xb79b));
        // CB E3 00D3
        gbc.setState(0x78e1, 0xa1a7, 0x6ff0, 0xc916, 0x5a8d, 0x8327, 0x0, 0x1);
        gbc.writeMem(0x78e1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa1a7, gbc.sp());
        EXPECT(0x78e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 00D5
        gbc.setState(0x1760, 0x2645, 0x2cc0, 0x9f01, 0xe64a, 0xe8ec, 0x1, 0x0);
        gbc.writeMem(0x1760, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2645, gbc.sp());
        EXPECT(0x1762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 00D7
        gbc.setState(0xe92c, 0x50ce, 0x2f20, 0x8a7b, 0x620, 0x1a44, 0x0, 0x0);
        gbc.writeMem(0xe92c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x50ce, gbc.sp());
        EXPECT(0xe92e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe92c));
        EXPECT(0xe3, gbc.readMem(0xe92d));
        // CB E3 00D8
        gbc.setState(0x65fa, 0x7d26, 0xe440, 0x5051, 0xa755, 0x1b19, 0x1, 0x1);
        gbc.writeMem(0x65fa, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7d26, gbc.sp());
        EXPECT(0x65fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 00D9
        gbc.setState(0xeb96, 0xaf54, 0x7570, 0xc9ff, 0x58d0, 0x8eb2, 0x0, 0x1);
        gbc.writeMem(0xeb96, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xaf54, gbc.sp());
        EXPECT(0xeb98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb96));
        EXPECT(0xe3, gbc.readMem(0xeb97));
        // CB E3 00DA
        gbc.setState(0x3176, 0x519a, 0x3770, 0x5e6a, 0x7fb3, 0x465f, 0x0, 0x1);
        gbc.writeMem(0x3176, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x519a, gbc.sp());
        EXPECT(0x3178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 00DB
        gbc.setState(0x6d79, 0x5407, 0x5e00, 0x79bc, 0xd85c, 0x9330, 0x1, 0x0);
        gbc.writeMem(0x6d79, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5407, gbc.sp());
        EXPECT(0x6d7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 00DC
        gbc.setState(0x92db, 0xb78f, 0x8bb0, 0x58b8, 0xa946, 0x3417, 0x1, 0x1);
        gbc.writeMem(0x92db, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb78f, gbc.sp());
        EXPECT(0x92dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92db));
        EXPECT(0xe3, gbc.readMem(0x92dc));
        // CB E3 00DD
        gbc.setState(0x9bbd, 0x5d40, 0x7e0, 0x9ba3, 0xbc71, 0x567d, 0x1, 0x0);
        gbc.writeMem(0x9bbd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5d40, gbc.sp());
        EXPECT(0x9bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bbd));
        EXPECT(0xe3, gbc.readMem(0x9bbe));
        // CB E3 00DF
        gbc.setState(0x31d1, 0xe3cc, 0x9270, 0x5998, 0xa085, 0xbcb3, 0x0, 0x1);
        gbc.writeMem(0x31d1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe3cc, gbc.sp());
        EXPECT(0x31d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 00E0
        gbc.setState(0x8c19, 0xb8aa, 0xe9d0, 0x6664, 0x8057, 0x5e17, 0x0, 0x1);
        gbc.writeMem(0x8c19, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb8aa, gbc.sp());
        EXPECT(0x8c1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c19));
        EXPECT(0xe3, gbc.readMem(0x8c1a));
        // CB E3 00E1
        gbc.setState(0x4abc, 0xcf96, 0x8ee0, 0xef87, 0x9d4b, 0x4b9d, 0x1, 0x0);
        gbc.writeMem(0x4abc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xcf96, gbc.sp());
        EXPECT(0x4abe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 00E2
        gbc.setState(0x14ec, 0xf0e3, 0x65e0, 0x8bdc, 0x1e0b, 0x6cf1, 0x1, 0x0);
        gbc.writeMem(0x14ec, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf0e3, gbc.sp());
        EXPECT(0x14ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 00E3
        gbc.setState(0xc761, 0x3ffa, 0x670, 0x7ed5, 0x9168, 0xf0e2, 0x0, 0x1);
        gbc.writeMem(0xc761, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3ffa, gbc.sp());
        EXPECT(0xc763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc761));
        EXPECT(0xe3, gbc.readMem(0xc762));
        // CB E3 00E4
        gbc.setState(0xca8d, 0xc09d, 0xa150, 0xd23, 0xf7fe, 0x25dc, 0x1, 0x1);
        gbc.writeMem(0xca8d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc09d, gbc.sp());
        EXPECT(0xca8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca8d));
        EXPECT(0xe3, gbc.readMem(0xca8e));
        // CB E3 00E5
        gbc.setState(0xd7f5, 0xd2d8, 0x7e60, 0xb239, 0xe1de, 0x6fdb, 0x0, 0x1);
        gbc.writeMem(0xd7f5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd2d8, gbc.sp());
        EXPECT(0xd7f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7f5));
        EXPECT(0xe3, gbc.readMem(0xd7f6));
        // CB E3 00E6
        gbc.setState(0x75d9, 0x44cc, 0x2180, 0xb726, 0xb487, 0xb0be, 0x0, 0x0);
        gbc.writeMem(0x75d9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x44cc, gbc.sp());
        EXPECT(0x75db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 00E7
        gbc.setState(0xcc37, 0x99ef, 0xdb10, 0xa08e, 0x7089, 0xce92, 0x1, 0x0);
        gbc.writeMem(0xcc37, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x99ef, gbc.sp());
        EXPECT(0xcc39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc37));
        EXPECT(0xe3, gbc.readMem(0xcc38));
        // CB E3 00E8
        gbc.setState(0x983b, 0x3bc6, 0x3160, 0xfd32, 0x76fd, 0x10e6, 0x0, 0x0);
        gbc.writeMem(0x983b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3bc6, gbc.sp());
        EXPECT(0x983d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x983b));
        EXPECT(0xe3, gbc.readMem(0x983c));
        // CB E3 00E9
        gbc.setState(0xe9f0, 0xb3b8, 0xb380, 0x67af, 0x105a, 0x97ed, 0x0, 0x1);
        gbc.writeMem(0xe9f0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb3b8, gbc.sp());
        EXPECT(0xe9f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9f0));
        EXPECT(0xe3, gbc.readMem(0xe9f1));
        // CB E3 00EA
        gbc.setState(0x1366, 0x88a, 0x9520, 0x10f0, 0x86a5, 0x8f62, 0x1, 0x0);
        gbc.writeMem(0x1366, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x88a, gbc.sp());
        EXPECT(0x1368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 00EB
        gbc.setState(0x5b03, 0x1b15, 0x4bd0, 0xa29f, 0xf069, 0x5ef, 0x0, 0x0);
        gbc.writeMem(0x5b03, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1b15, gbc.sp());
        EXPECT(0x5b05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 00ED
        gbc.setState(0x556a, 0x7f3, 0xa10, 0x86cc, 0x1a49, 0x9dbc, 0x0, 0x0);
        gbc.writeMem(0x556a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7f3, gbc.sp());
        EXPECT(0x556c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 00EE
        gbc.setState(0xe00a, 0xa33, 0x2ea0, 0x5381, 0x3393, 0x957e, 0x1, 0x0);
        gbc.writeMem(0xe00a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa33, gbc.sp());
        EXPECT(0xe00c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe00a));
        EXPECT(0xe3, gbc.readMem(0xe00b));
        // CB E3 00EF
        gbc.setState(0xa6e9, 0xe87e, 0x1910, 0x3d2c, 0xa9d4, 0xcd15, 0x0, 0x0);
        gbc.writeMem(0xa6e9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe87e, gbc.sp());
        EXPECT(0xa6eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6e9));
        EXPECT(0xe3, gbc.readMem(0xa6ea));
        // CB E3 00F0
        gbc.setState(0x3979, 0x8d73, 0xb0c0, 0xd24b, 0x5fa2, 0x6dc8, 0x1, 0x1);
        gbc.writeMem(0x3979, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8d73, gbc.sp());
        EXPECT(0x397b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 00F1
        gbc.setState(0xe49, 0xc58, 0xce30, 0x306a, 0x6343, 0x74c9, 0x0, 0x1);
        gbc.writeMem(0xe49, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc58, gbc.sp());
        EXPECT(0xe4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 00F2
        gbc.setState(0x93f3, 0xf1b2, 0x3480, 0xece1, 0x5dc3, 0x56dd, 0x1, 0x1);
        gbc.writeMem(0x93f3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf1b2, gbc.sp());
        EXPECT(0x93f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f3));
        EXPECT(0xe3, gbc.readMem(0x93f4));
        // CB E3 00F3
        gbc.setState(0xcba4, 0xf396, 0xe1c0, 0xf7c, 0xe7bb, 0x1970, 0x0, 0x0);
        gbc.writeMem(0xcba4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf396, gbc.sp());
        EXPECT(0xcba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba4));
        EXPECT(0xe3, gbc.readMem(0xcba5));
        // CB E3 00F5
        gbc.setState(0x38d9, 0x9106, 0x2e0, 0x941, 0x146d, 0x1820, 0x1, 0x1);
        gbc.writeMem(0x38d9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9106, gbc.sp());
        EXPECT(0x38db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 00F6
        gbc.setState(0x5f01, 0x5398, 0xf560, 0x6f7b, 0x41b1, 0x4f68, 0x1, 0x0);
        gbc.writeMem(0x5f01, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5398, gbc.sp());
        EXPECT(0x5f03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 00F7
        gbc.setState(0x64a7, 0x3fbb, 0x2050, 0x733b, 0x59c3, 0x9484, 0x0, 0x0);
        gbc.writeMem(0x64a7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3fbb, gbc.sp());
        EXPECT(0x64a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 00F8
        gbc.setState(0xc35c, 0xb164, 0xaca0, 0x54f7, 0xa61, 0xac35, 0x0, 0x1);
        gbc.writeMem(0xc35c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb164, gbc.sp());
        EXPECT(0xc35e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc35c));
        EXPECT(0xe3, gbc.readMem(0xc35d));
        // CB E3 00F9
        gbc.setState(0xe17d, 0xbc3c, 0xd10, 0x815f, 0xba50, 0xd14b, 0x1, 0x0);
        gbc.writeMem(0xe17d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbc3c, gbc.sp());
        EXPECT(0xe17f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe17d));
        EXPECT(0xe3, gbc.readMem(0xe17e));
        // CB E3 00FA
        gbc.setState(0x63bc, 0xfb8a, 0xc450, 0xb5cf, 0x4816, 0xb25c, 0x0, 0x0);
        gbc.writeMem(0x63bc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfb8a, gbc.sp());
        EXPECT(0x63be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 00FB
        gbc.setState(0x2189, 0xc754, 0xa10, 0xcb10, 0xddda, 0x9669, 0x0, 0x1);
        gbc.writeMem(0x2189, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc754, gbc.sp());
        EXPECT(0x218b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 00FC
        gbc.setState(0x5c5e, 0x65b8, 0x4280, 0xaa7e, 0x8655, 0x7869, 0x0, 0x0);
        gbc.writeMem(0x5c5e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x65b8, gbc.sp());
        EXPECT(0x5c60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 00FE
        gbc.setState(0x559d, 0x3ed5, 0xa740, 0x3673, 0x7e0e, 0xe43e, 0x1, 0x1);
        gbc.writeMem(0x559d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3ed5, gbc.sp());
        EXPECT(0x559f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 00FF
        gbc.setState(0x862d, 0xed4f, 0xe510, 0xac20, 0xc3f2, 0x4358, 0x1, 0x1);
        gbc.writeMem(0x862d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xed4f, gbc.sp());
        EXPECT(0x862f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x862d));
        EXPECT(0xe3, gbc.readMem(0x862e));
        // CB E3 0100
        gbc.setState(0x2097, 0xa31a, 0x7810, 0x3998, 0x10ef, 0x8740, 0x0, 0x1);
        gbc.writeMem(0x2097, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa31a, gbc.sp());
        EXPECT(0x2099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0101
        gbc.setState(0x4551, 0x89b1, 0x9540, 0x169, 0x1d8e, 0x1c35, 0x1, 0x1);
        gbc.writeMem(0x4551, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x89b1, gbc.sp());
        EXPECT(0x4553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0102
        gbc.setState(0x596, 0x6d24, 0x6090, 0x1723, 0x6bf7, 0x18f1, 0x0, 0x0);
        gbc.writeMem(0x596, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6d24, gbc.sp());
        EXPECT(0x598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0103
        gbc.setState(0xb491, 0x8f7c, 0x3450, 0xadd6, 0xbc6a, 0x6a6f, 0x0, 0x0);
        gbc.writeMem(0xb491, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8f7c, gbc.sp());
        EXPECT(0xb493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb491));
        EXPECT(0xe3, gbc.readMem(0xb492));
        // CB E3 0104
        gbc.setState(0x461b, 0xc07b, 0x9740, 0xa708, 0x6e2f, 0x6451, 0x0, 0x0);
        gbc.writeMem(0x461b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc07b, gbc.sp());
        EXPECT(0x461d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0105
        gbc.setState(0xa5d0, 0x7d9c, 0xb9f0, 0x8357, 0xdcb, 0x3e6b, 0x0, 0x1);
        gbc.writeMem(0xa5d0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7d9c, gbc.sp());
        EXPECT(0xa5d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5d0));
        EXPECT(0xe3, gbc.readMem(0xa5d1));
        // CB E3 0106
        gbc.setState(0xe206, 0xb5ac, 0x4350, 0xbe59, 0xb1df, 0x9c35, 0x0, 0x1);
        gbc.writeMem(0xe206, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb5ac, gbc.sp());
        EXPECT(0xe208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe206));
        EXPECT(0xe3, gbc.readMem(0xe207));
        // CB E3 0107
        gbc.setState(0xfe4, 0xc0aa, 0xa420, 0xe4c8, 0x7c34, 0x102e, 0x1, 0x0);
        gbc.writeMem(0xfe4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc0aa, gbc.sp());
        EXPECT(0xfe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0108
        gbc.setState(0x705a, 0xbf56, 0x6d80, 0x95e7, 0x4f49, 0x9cbd, 0x0, 0x0);
        gbc.writeMem(0x705a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xbf56, gbc.sp());
        EXPECT(0x705c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 010A
        gbc.setState(0x99d2, 0x154a, 0xb550, 0xcef8, 0xf68e, 0xa5cf, 0x1, 0x0);
        gbc.writeMem(0x99d2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x154a, gbc.sp());
        EXPECT(0x99d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99d2));
        EXPECT(0xe3, gbc.readMem(0x99d3));
        // CB E3 010B
        gbc.setState(0x4c14, 0xec5, 0x4310, 0xee95, 0x5543, 0xc4ed, 0x1, 0x0);
        gbc.writeMem(0x4c14, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xec5, gbc.sp());
        EXPECT(0x4c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 010C
        gbc.setState(0xd335, 0xf32a, 0x47c0, 0xf5c1, 0x7ad8, 0x9ed6, 0x0, 0x0);
        gbc.writeMem(0xd335, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf32a, gbc.sp());
        EXPECT(0xd337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd335));
        EXPECT(0xe3, gbc.readMem(0xd336));
        // CB E3 010E
        gbc.setState(0x6744, 0x3395, 0xc220, 0xa08f, 0x5ea, 0x2dcf, 0x1, 0x0);
        gbc.writeMem(0x6744, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3395, gbc.sp());
        EXPECT(0x6746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 010F
        gbc.setState(0xb682, 0xec03, 0x14f0, 0x25f6, 0x20d3, 0xe1b6, 0x0, 0x1);
        gbc.writeMem(0xb682, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xec03, gbc.sp());
        EXPECT(0xb684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb682));
        EXPECT(0xe3, gbc.readMem(0xb683));
        // CB E3 0110
        gbc.setState(0x52df, 0x1e05, 0xd690, 0x2888, 0x6d26, 0x81ad, 0x1, 0x0);
        gbc.writeMem(0x52df, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1e05, gbc.sp());
        EXPECT(0x52e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0111
        gbc.setState(0xd964, 0x753f, 0xb230, 0xbcb1, 0xaabd, 0x4676, 0x1, 0x0);
        gbc.writeMem(0xd964, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x753f, gbc.sp());
        EXPECT(0xd966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd964));
        EXPECT(0xe3, gbc.readMem(0xd965));
        // CB E3 0112
        gbc.setState(0x150c, 0x2c31, 0x5400, 0xb8f5, 0xdd11, 0xc73e, 0x1, 0x1);
        gbc.writeMem(0x150c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2c31, gbc.sp());
        EXPECT(0x150e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0113
        gbc.setState(0x52e0, 0xd825, 0xec10, 0x11ba, 0x6866, 0xc524, 0x1, 0x1);
        gbc.writeMem(0x52e0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd825, gbc.sp());
        EXPECT(0x52e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0114
        gbc.setState(0xb49, 0x9af, 0xb5d0, 0xe383, 0x2f47, 0xe007, 0x1, 0x1);
        gbc.writeMem(0xb49, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9af, gbc.sp());
        EXPECT(0xb4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0115
        gbc.setState(0x8c48, 0x5222, 0x2140, 0xc2ef, 0x8ebd, 0x75eb, 0x1, 0x1);
        gbc.writeMem(0x8c48, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5222, gbc.sp());
        EXPECT(0x8c4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c48));
        EXPECT(0xe3, gbc.readMem(0x8c49));
        // CB E3 0116
        gbc.setState(0x1dd0, 0x7cd3, 0xa5f0, 0x172, 0xc38d, 0xc17, 0x0, 0x0);
        gbc.writeMem(0x1dd0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7cd3, gbc.sp());
        EXPECT(0x1dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0117
        gbc.setState(0x4ec1, 0x5932, 0x5e10, 0x14c4, 0xc67e, 0x4ca8, 0x0, 0x1);
        gbc.writeMem(0x4ec1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5932, gbc.sp());
        EXPECT(0x4ec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0118
        gbc.setState(0x956a, 0x903d, 0xf260, 0x5d75, 0x23b0, 0xfa6a, 0x0, 0x0);
        gbc.writeMem(0x956a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x903d, gbc.sp());
        EXPECT(0x956c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x956a));
        EXPECT(0xe3, gbc.readMem(0x956b));
        // CB E3 0119
        gbc.setState(0x4137, 0x45f2, 0x8aa0, 0xb6a1, 0x694a, 0xdfe6, 0x0, 0x0);
        gbc.writeMem(0x4137, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x45f2, gbc.sp());
        EXPECT(0x4139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 011A
        gbc.setState(0xb86d, 0xdcc9, 0xc350, 0xf11d, 0x14f0, 0x321c, 0x1, 0x1);
        gbc.writeMem(0xb86d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xdcc9, gbc.sp());
        EXPECT(0xb86f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb86d));
        EXPECT(0xe3, gbc.readMem(0xb86e));
        // CB E3 011B
        gbc.setState(0x6156, 0xf5f1, 0x9a50, 0x5888, 0x3c32, 0xc683, 0x0, 0x1);
        gbc.writeMem(0x6156, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf5f1, gbc.sp());
        EXPECT(0x6158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 011C
        gbc.setState(0x4b06, 0xa071, 0x24b0, 0x759e, 0x3eef, 0xe0ee, 0x0, 0x1);
        gbc.writeMem(0x4b06, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa071, gbc.sp());
        EXPECT(0x4b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 011D
        gbc.setState(0x8e1c, 0x45ee, 0x4c90, 0xdffc, 0x1deb, 0x1b0f, 0x1, 0x1);
        gbc.writeMem(0x8e1c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x45ee, gbc.sp());
        EXPECT(0x8e1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e1c));
        EXPECT(0xe3, gbc.readMem(0x8e1d));
        // CB E3 011E
        gbc.setState(0xcac9, 0x3d4d, 0x9f40, 0x3db6, 0xb749, 0x37c6, 0x1, 0x1);
        gbc.writeMem(0xcac9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3d4d, gbc.sp());
        EXPECT(0xcacb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcac9));
        EXPECT(0xe3, gbc.readMem(0xcaca));
        // CB E3 011F
        gbc.setState(0x8cb, 0xed8f, 0x1f0, 0x1f0b, 0x4197, 0x26, 0x0, 0x1);
        gbc.writeMem(0x8cb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xed8f, gbc.sp());
        EXPECT(0x8cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0120
        gbc.setState(0x63cc, 0x8457, 0xdde0, 0x4e00, 0x1d8a, 0xe02f, 0x1, 0x1);
        gbc.writeMem(0x63cc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8457, gbc.sp());
        EXPECT(0x63ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0123
        gbc.setState(0x4514, 0x8fb0, 0x25f0, 0x5cc3, 0x2777, 0xc935, 0x1, 0x1);
        gbc.writeMem(0x4514, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8fb0, gbc.sp());
        EXPECT(0x4516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0124
        gbc.setState(0x9ad7, 0x7bcc, 0xb020, 0x18ca, 0x84dc, 0x7b80, 0x0, 0x1);
        gbc.writeMem(0x9ad7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7bcc, gbc.sp());
        EXPECT(0x9ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ad7));
        EXPECT(0xe3, gbc.readMem(0x9ad8));
        // CB E3 0126
        gbc.setState(0xabed, 0xeb81, 0xa090, 0x487a, 0x2a5d, 0xd9f5, 0x1, 0x0);
        gbc.writeMem(0xabed, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xeb81, gbc.sp());
        EXPECT(0xabef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabed));
        EXPECT(0xe3, gbc.readMem(0xabee));
        // CB E3 0127
        gbc.setState(0x57a3, 0xf18, 0x630, 0xefb8, 0x3055, 0x847f, 0x0, 0x1);
        gbc.writeMem(0x57a3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf18, gbc.sp());
        EXPECT(0x57a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0128
        gbc.setState(0x6e58, 0x490, 0xbdc0, 0x9bf8, 0x8445, 0x86fc, 0x1, 0x1);
        gbc.writeMem(0x6e58, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x490, gbc.sp());
        EXPECT(0x6e5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0129
        gbc.setState(0x9c08, 0x2bea, 0xb9d0, 0xfe9e, 0x3fdb, 0x1f3a, 0x0, 0x0);
        gbc.writeMem(0x9c08, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2bea, gbc.sp());
        EXPECT(0x9c0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c08));
        EXPECT(0xe3, gbc.readMem(0x9c09));
        // CB E3 012A
        gbc.setState(0xcc8c, 0xec16, 0xb940, 0x8c1, 0xcf5d, 0x6e5b, 0x1, 0x1);
        gbc.writeMem(0xcc8c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xec16, gbc.sp());
        EXPECT(0xcc8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc8c));
        EXPECT(0xe3, gbc.readMem(0xcc8d));
        // CB E3 012B
        gbc.setState(0xb6f3, 0x7437, 0xd010, 0xf961, 0x1dde, 0x2c5b, 0x1, 0x1);
        gbc.writeMem(0xb6f3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7437, gbc.sp());
        EXPECT(0xb6f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6f3));
        EXPECT(0xe3, gbc.readMem(0xb6f4));
        // CB E3 012C
        gbc.setState(0x8066, 0x1c8b, 0xb780, 0xd439, 0x3c2f, 0x2a4b, 0x0, 0x1);
        gbc.writeMem(0x8066, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1c8b, gbc.sp());
        EXPECT(0x8068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8066));
        EXPECT(0xe3, gbc.readMem(0x8067));
        // CB E3 012D
        gbc.setState(0x95c5, 0x10d5, 0xba30, 0xedbc, 0x2ef5, 0xf50b, 0x0, 0x0);
        gbc.writeMem(0x95c5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x10d5, gbc.sp());
        EXPECT(0x95c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95c5));
        EXPECT(0xe3, gbc.readMem(0x95c6));
        // CB E3 012E
        gbc.setState(0x10b5, 0x5e06, 0x88f0, 0x13fe, 0xe573, 0xf611, 0x0, 0x0);
        gbc.writeMem(0x10b5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5e06, gbc.sp());
        EXPECT(0x10b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 012F
        gbc.setState(0x9b51, 0xd292, 0x13b0, 0xa6dd, 0xbcb2, 0xd792, 0x1, 0x0);
        gbc.writeMem(0x9b51, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd292, gbc.sp());
        EXPECT(0x9b53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b51));
        EXPECT(0xe3, gbc.readMem(0x9b52));
        // CB E3 0130
        gbc.setState(0x3436, 0xcabd, 0x8990, 0x283, 0x5b24, 0x288b, 0x0, 0x0);
        gbc.writeMem(0x3436, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xcabd, gbc.sp());
        EXPECT(0x3438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0131
        gbc.setState(0xabd3, 0x9ec8, 0x9aa0, 0xa280, 0xbf7f, 0x6808, 0x0, 0x0);
        gbc.writeMem(0xabd3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9ec8, gbc.sp());
        EXPECT(0xabd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabd3));
        EXPECT(0xe3, gbc.readMem(0xabd4));
        // CB E3 0132
        gbc.setState(0x3811, 0x6d69, 0xbb00, 0x7da1, 0x4d5a, 0x6c46, 0x1, 0x1);
        gbc.writeMem(0x3811, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6d69, gbc.sp());
        EXPECT(0x3813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0133
        gbc.setState(0x5c67, 0x3d6b, 0x6c50, 0xb1d7, 0xf4ed, 0x864e, 0x1, 0x0);
        gbc.writeMem(0x5c67, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3d6b, gbc.sp());
        EXPECT(0x5c69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0134
        gbc.setState(0x6969, 0xf44b, 0x8050, 0xfc0c, 0xada5, 0x9afa, 0x1, 0x0);
        gbc.writeMem(0x6969, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf44b, gbc.sp());
        EXPECT(0x696b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0136
        gbc.setState(0xefd1, 0x6fab, 0x9f60, 0x6237, 0x2e5d, 0x27fb, 0x1, 0x0);
        gbc.writeMem(0xefd1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6fab, gbc.sp());
        EXPECT(0xefd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd1));
        EXPECT(0xe3, gbc.readMem(0xefd2));
        // CB E3 0137
        gbc.setState(0x9955, 0x79a5, 0x68c0, 0x15b8, 0xc595, 0x4f33, 0x1, 0x0);
        gbc.writeMem(0x9955, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x79a5, gbc.sp());
        EXPECT(0x9957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9955));
        EXPECT(0xe3, gbc.readMem(0x9956));
        // CB E3 0138
        gbc.setState(0xb918, 0x27fb, 0xb380, 0xd907, 0xdc2c, 0xe266, 0x0, 0x0);
        gbc.writeMem(0xb918, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x27fb, gbc.sp());
        EXPECT(0xb91a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb918));
        EXPECT(0xe3, gbc.readMem(0xb919));
        // CB E3 0139
        gbc.setState(0xdbb1, 0x2354, 0x1ce0, 0x7c82, 0x42f0, 0x4ad9, 0x1, 0x0);
        gbc.writeMem(0xdbb1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2354, gbc.sp());
        EXPECT(0xdbb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbb1));
        EXPECT(0xe3, gbc.readMem(0xdbb2));
        // CB E3 013A
        gbc.setState(0xcc99, 0x2d4f, 0x6720, 0x62d5, 0x4513, 0x142c, 0x1, 0x1);
        gbc.writeMem(0xcc99, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2d4f, gbc.sp());
        EXPECT(0xcc9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc99));
        EXPECT(0xe3, gbc.readMem(0xcc9a));
        // CB E3 013B
        gbc.setState(0x202c, 0xae2a, 0x5230, 0xdb9, 0x6ee, 0xbbff, 0x1, 0x1);
        gbc.writeMem(0x202c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xae2a, gbc.sp());
        EXPECT(0x202e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 013C
        gbc.setState(0x4c5a, 0xf1f, 0xe210, 0x4ec2, 0x66e4, 0xed0, 0x1, 0x0);
        gbc.writeMem(0x4c5a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf1f, gbc.sp());
        EXPECT(0x4c5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 013D
        gbc.setState(0xc5f8, 0x4030, 0x2010, 0xa148, 0xd90a, 0x1b44, 0x0, 0x1);
        gbc.writeMem(0xc5f8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4030, gbc.sp());
        EXPECT(0xc5fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5f8));
        EXPECT(0xe3, gbc.readMem(0xc5f9));
        // CB E3 013E
        gbc.setState(0xda9a, 0x2709, 0x6410, 0x10ae, 0x24e6, 0x275, 0x1, 0x0);
        gbc.writeMem(0xda9a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2709, gbc.sp());
        EXPECT(0xda9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda9a));
        EXPECT(0xe3, gbc.readMem(0xda9b));
        // CB E3 013F
        gbc.setState(0xccf4, 0xb147, 0xebd0, 0xe0c2, 0xd9f3, 0x104d, 0x1, 0x1);
        gbc.writeMem(0xccf4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb147, gbc.sp());
        EXPECT(0xccf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccf4));
        EXPECT(0xe3, gbc.readMem(0xccf5));
        // CB E3 0140
        gbc.setState(0x1446, 0x7cf7, 0xf9d0, 0xe8e3, 0x6fff, 0x42f8, 0x1, 0x0);
        gbc.writeMem(0x1446, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7cf7, gbc.sp());
        EXPECT(0x1448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0141
        gbc.setState(0x9580, 0x8504, 0x62d0, 0x40b6, 0x35c1, 0xfe43, 0x1, 0x0);
        gbc.writeMem(0x9580, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8504, gbc.sp());
        EXPECT(0x9582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9580));
        EXPECT(0xe3, gbc.readMem(0x9581));
        // CB E3 0142
        gbc.setState(0x8c84, 0x482a, 0xf330, 0xcdeb, 0xadb9, 0x4f1d, 0x1, 0x1);
        gbc.writeMem(0x8c84, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x482a, gbc.sp());
        EXPECT(0x8c86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c84));
        EXPECT(0xe3, gbc.readMem(0x8c85));
        // CB E3 0143
        gbc.setState(0x7240, 0xb42d, 0x3b20, 0x7f5a, 0xe717, 0x27b6, 0x0, 0x1);
        gbc.writeMem(0x7240, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb42d, gbc.sp());
        EXPECT(0x7242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0144
        gbc.setState(0xed86, 0xa79e, 0x2c20, 0xa76c, 0x92db, 0xa3c2, 0x0, 0x0);
        gbc.writeMem(0xed86, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa79e, gbc.sp());
        EXPECT(0xed88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed86));
        EXPECT(0xe3, gbc.readMem(0xed87));
        // CB E3 0145
        gbc.setState(0x5c6e, 0x1f4c, 0xd620, 0x9fdb, 0x464c, 0x37f3, 0x1, 0x0);
        gbc.writeMem(0x5c6e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1f4c, gbc.sp());
        EXPECT(0x5c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0146
        gbc.setState(0x933d, 0x96e, 0x9680, 0x27dc, 0x5324, 0x543d, 0x0, 0x0);
        gbc.writeMem(0x933d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x96e, gbc.sp());
        EXPECT(0x933f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x933d));
        EXPECT(0xe3, gbc.readMem(0x933e));
        // CB E3 0147
        gbc.setState(0x30ed, 0x4275, 0x4810, 0xb82, 0x898f, 0xa0fd, 0x0, 0x0);
        gbc.writeMem(0x30ed, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4275, gbc.sp());
        EXPECT(0x30ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0148
        gbc.setState(0xb4f5, 0xc7ed, 0xa580, 0x15cd, 0x4c4, 0x913f, 0x0, 0x1);
        gbc.writeMem(0xb4f5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc7ed, gbc.sp());
        EXPECT(0xb4f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f5));
        EXPECT(0xe3, gbc.readMem(0xb4f6));
        // CB E3 0149
        gbc.setState(0xbcd2, 0xac4d, 0xcd60, 0x967, 0xa82d, 0xc504, 0x0, 0x1);
        gbc.writeMem(0xbcd2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xac4d, gbc.sp());
        EXPECT(0xbcd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcd2));
        EXPECT(0xe3, gbc.readMem(0xbcd3));
        // CB E3 014A
        gbc.setState(0xda80, 0xf48b, 0xff00, 0xb85a, 0xee9, 0xa3e2, 0x1, 0x1);
        gbc.writeMem(0xda80, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf48b, gbc.sp());
        EXPECT(0xda82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda80));
        EXPECT(0xe3, gbc.readMem(0xda81));
        // CB E3 014B
        gbc.setState(0x7f9c, 0x1bae, 0x2230, 0x951e, 0x841e, 0xe6de, 0x0, 0x1);
        gbc.writeMem(0x7f9c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1bae, gbc.sp());
        EXPECT(0x7f9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 014C
        gbc.setState(0xd825, 0xef87, 0xbf50, 0x29d9, 0x8edb, 0x31c0, 0x1, 0x0);
        gbc.writeMem(0xd825, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xef87, gbc.sp());
        EXPECT(0xd827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd825));
        EXPECT(0xe3, gbc.readMem(0xd826));
        // CB E3 014D
        gbc.setState(0x933a, 0x63ad, 0x8e60, 0x7d9a, 0x90f4, 0xcde5, 0x0, 0x1);
        gbc.writeMem(0x933a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x63ad, gbc.sp());
        EXPECT(0x933c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x933a));
        EXPECT(0xe3, gbc.readMem(0x933b));
        // CB E3 014E
        gbc.setState(0x29b4, 0xa56, 0xa5b0, 0x2a22, 0xf2d3, 0x507c, 0x0, 0x0);
        gbc.writeMem(0x29b4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa56, gbc.sp());
        EXPECT(0x29b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 014F
        gbc.setState(0x303e, 0x7711, 0xba60, 0x7aa7, 0x79da, 0xd528, 0x1, 0x1);
        gbc.writeMem(0x303e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7711, gbc.sp());
        EXPECT(0x3040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0150
        gbc.setState(0xa2e1, 0xcce7, 0xa980, 0x4cc7, 0x81ed, 0xec7d, 0x0, 0x0);
        gbc.writeMem(0xa2e1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xcce7, gbc.sp());
        EXPECT(0xa2e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2e1));
        EXPECT(0xe3, gbc.readMem(0xa2e2));
        // CB E3 0151
        gbc.setState(0xce08, 0xf27b, 0x17a0, 0xea30, 0xfa1b, 0xf51e, 0x0, 0x0);
        gbc.writeMem(0xce08, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf27b, gbc.sp());
        EXPECT(0xce0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce08));
        EXPECT(0xe3, gbc.readMem(0xce09));
        // CB E3 0152
        gbc.setState(0xa234, 0x3e93, 0x8800, 0xef5d, 0x835a, 0x51b1, 0x0, 0x0);
        gbc.writeMem(0xa234, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3e93, gbc.sp());
        EXPECT(0xa236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa234));
        EXPECT(0xe3, gbc.readMem(0xa235));
        // CB E3 0153
        gbc.setState(0x6b1a, 0x4c87, 0xb70, 0x7856, 0xb31d, 0xfcc9, 0x1, 0x0);
        gbc.writeMem(0x6b1a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4c87, gbc.sp());
        EXPECT(0x6b1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0155
        gbc.setState(0xa514, 0x8014, 0x7bf0, 0xaeb4, 0x942a, 0x5b69, 0x1, 0x0);
        gbc.writeMem(0xa514, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8014, gbc.sp());
        EXPECT(0xa516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa514));
        EXPECT(0xe3, gbc.readMem(0xa515));
        // CB E3 0156
        gbc.setState(0xb2c3, 0x79ed, 0x8a50, 0x5d52, 0xe9f0, 0xee7a, 0x1, 0x0);
        gbc.writeMem(0xb2c3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x79ed, gbc.sp());
        EXPECT(0xb2c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2c3));
        EXPECT(0xe3, gbc.readMem(0xb2c4));
        // CB E3 0157
        gbc.setState(0xaaac, 0x551d, 0x2f00, 0x50f4, 0x328d, 0x88ab, 0x0, 0x0);
        gbc.writeMem(0xaaac, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x551d, gbc.sp());
        EXPECT(0xaaae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaac));
        EXPECT(0xe3, gbc.readMem(0xaaad));
        // CB E3 0158
        gbc.setState(0x12de, 0x2244, 0x1f60, 0x1640, 0x9e06, 0x471a, 0x1, 0x1);
        gbc.writeMem(0x12de, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2244, gbc.sp());
        EXPECT(0x12e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0159
        gbc.setState(0x219a, 0x224a, 0x46d0, 0xbef9, 0x43d8, 0xa888, 0x0, 0x0);
        gbc.writeMem(0x219a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x224a, gbc.sp());
        EXPECT(0x219c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 015A
        gbc.setState(0x9c93, 0xda3a, 0x8d30, 0xf2ec, 0x2bc, 0x7712, 0x0, 0x0);
        gbc.writeMem(0x9c93, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xda3a, gbc.sp());
        EXPECT(0x9c95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c93));
        EXPECT(0xe3, gbc.readMem(0x9c94));
        // CB E3 015B
        gbc.setState(0xbb88, 0xf0fa, 0x5620, 0x4d64, 0x1698, 0xac9, 0x0, 0x0);
        gbc.writeMem(0xbb88, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf0fa, gbc.sp());
        EXPECT(0xbb8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb88));
        EXPECT(0xe3, gbc.readMem(0xbb89));
        // CB E3 015C
        gbc.setState(0x2815, 0x92b7, 0x3de0, 0x14cc, 0x8a27, 0x4716, 0x1, 0x1);
        gbc.writeMem(0x2815, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x92b7, gbc.sp());
        EXPECT(0x2817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 015D
        gbc.setState(0x6f8b, 0x5c40, 0xd960, 0xadc4, 0x88c4, 0xb2bf, 0x0, 0x0);
        gbc.writeMem(0x6f8b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5c40, gbc.sp());
        EXPECT(0x6f8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 015E
        gbc.setState(0x3536, 0xcf17, 0x1510, 0xd38d, 0x115d, 0xc88d, 0x0, 0x1);
        gbc.writeMem(0x3536, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xcf17, gbc.sp());
        EXPECT(0x3538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 015F
        gbc.setState(0x1d6c, 0x8f96, 0x3030, 0xc044, 0x2580, 0xc5f5, 0x1, 0x1);
        gbc.writeMem(0x1d6c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8f96, gbc.sp());
        EXPECT(0x1d6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0160
        gbc.setState(0x6189, 0x9399, 0xd5b0, 0xc00f, 0xd257, 0x81bc, 0x0, 0x0);
        gbc.writeMem(0x6189, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9399, gbc.sp());
        EXPECT(0x618b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0161
        gbc.setState(0xe1e2, 0x7046, 0xc350, 0x9de4, 0x8630, 0x7f20, 0x0, 0x1);
        gbc.writeMem(0xe1e2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7046, gbc.sp());
        EXPECT(0xe1e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1e2));
        EXPECT(0xe3, gbc.readMem(0xe1e3));
        // CB E3 0162
        gbc.setState(0x4c29, 0x8e65, 0xbf30, 0xd079, 0x6796, 0x1bf2, 0x0, 0x1);
        gbc.writeMem(0x4c29, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8e65, gbc.sp());
        EXPECT(0x4c2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0163
        gbc.setState(0x31cd, 0x307d, 0x2db0, 0x1ef1, 0xac7a, 0x91d, 0x0, 0x0);
        gbc.writeMem(0x31cd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x307d, gbc.sp());
        EXPECT(0x31cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0164
        gbc.setState(0x3801, 0x407b, 0x9480, 0xb494, 0xde81, 0x8cca, 0x0, 0x1);
        gbc.writeMem(0x3801, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x407b, gbc.sp());
        EXPECT(0x3803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0165
        gbc.setState(0x3f61, 0xb55c, 0x3ff0, 0x7793, 0xb26f, 0x9828, 0x1, 0x0);
        gbc.writeMem(0x3f61, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb55c, gbc.sp());
        EXPECT(0x3f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0166
        gbc.setState(0x7d22, 0xb047, 0x79b0, 0xbb82, 0xaefe, 0xebe8, 0x1, 0x1);
        gbc.writeMem(0x7d22, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb047, gbc.sp());
        EXPECT(0x7d24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0167
        gbc.setState(0x968e, 0x9918, 0x4370, 0x64cb, 0x604, 0x28a7, 0x1, 0x0);
        gbc.writeMem(0x968e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9918, gbc.sp());
        EXPECT(0x9690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x968e));
        EXPECT(0xe3, gbc.readMem(0x968f));
        // CB E3 0168
        gbc.setState(0x2ec9, 0xf2f7, 0xb330, 0x9bf0, 0x6c21, 0x541, 0x1, 0x0);
        gbc.writeMem(0x2ec9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf2f7, gbc.sp());
        EXPECT(0x2ecb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0169
        gbc.setState(0xc2dc, 0xd914, 0x3b90, 0x6218, 0x7feb, 0xb888, 0x1, 0x0);
        gbc.writeMem(0xc2dc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd914, gbc.sp());
        EXPECT(0xc2de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2dc));
        EXPECT(0xe3, gbc.readMem(0xc2dd));
        // CB E3 016A
        gbc.setState(0x55c1, 0xc819, 0xf220, 0x1627, 0x5032, 0x8b, 0x1, 0x1);
        gbc.writeMem(0x55c1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc819, gbc.sp());
        EXPECT(0x55c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 016B
        gbc.setState(0xd94c, 0x1503, 0x9d50, 0x19d8, 0x2925, 0x7907, 0x0, 0x1);
        gbc.writeMem(0xd94c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1503, gbc.sp());
        EXPECT(0xd94e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd94c));
        EXPECT(0xe3, gbc.readMem(0xd94d));
        // CB E3 016C
        gbc.setState(0x11d9, 0xa721, 0xcc10, 0x6f94, 0x2f54, 0x56ee, 0x0, 0x1);
        gbc.writeMem(0x11d9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa721, gbc.sp());
        EXPECT(0x11db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 016D
        gbc.setState(0x4f92, 0xdccd, 0xbe30, 0x31b1, 0x80d2, 0x5dd4, 0x1, 0x0);
        gbc.writeMem(0x4f92, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdccd, gbc.sp());
        EXPECT(0x4f94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 016E
        gbc.setState(0x1d9d, 0x6bd7, 0xd040, 0x53f1, 0x2299, 0x9267, 0x1, 0x0);
        gbc.writeMem(0x1d9d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6bd7, gbc.sp());
        EXPECT(0x1d9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 016F
        gbc.setState(0xbaae, 0x678e, 0x6730, 0x3874, 0xa681, 0xf5b9, 0x1, 0x0);
        gbc.writeMem(0xbaae, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x678e, gbc.sp());
        EXPECT(0xbab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaae));
        EXPECT(0xe3, gbc.readMem(0xbaaf));
        // CB E3 0170
        gbc.setState(0x85e2, 0xebff, 0x4b70, 0xa435, 0x43d0, 0x95b8, 0x0, 0x0);
        gbc.writeMem(0x85e2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xebff, gbc.sp());
        EXPECT(0x85e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85e2));
        EXPECT(0xe3, gbc.readMem(0x85e3));
        // CB E3 0171
        gbc.setState(0x390e, 0xfbf1, 0x20b0, 0x27cf, 0x5b42, 0xc9fb, 0x0, 0x1);
        gbc.writeMem(0x390e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfbf1, gbc.sp());
        EXPECT(0x3910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0172
        gbc.setState(0xdbcd, 0x97a7, 0x13c0, 0x90dc, 0x8dec, 0xaeae, 0x1, 0x1);
        gbc.writeMem(0xdbcd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x97a7, gbc.sp());
        EXPECT(0xdbcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbcd));
        EXPECT(0xe3, gbc.readMem(0xdbce));
        // CB E3 0173
        gbc.setState(0xb17d, 0x7855, 0xea00, 0x2fe0, 0x4116, 0xdb83, 0x1, 0x0);
        gbc.writeMem(0xb17d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7855, gbc.sp());
        EXPECT(0xb17f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb17d));
        EXPECT(0xe3, gbc.readMem(0xb17e));
        // CB E3 0174
        gbc.setState(0xecbf, 0x163d, 0x8b70, 0x6851, 0x8627, 0xe2b9, 0x1, 0x0);
        gbc.writeMem(0xecbf, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x163d, gbc.sp());
        EXPECT(0xecc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecbf));
        EXPECT(0xe3, gbc.readMem(0xecc0));
        // CB E3 0175
        gbc.setState(0xcd07, 0x1b20, 0xe500, 0xe112, 0xa062, 0x866c, 0x0, 0x0);
        gbc.writeMem(0xcd07, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1b20, gbc.sp());
        EXPECT(0xcd09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd07));
        EXPECT(0xe3, gbc.readMem(0xcd08));
        // CB E3 0176
        gbc.setState(0x5576, 0x45a8, 0xfdf0, 0xcba8, 0xa9c2, 0x2a92, 0x1, 0x1);
        gbc.writeMem(0x5576, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x45a8, gbc.sp());
        EXPECT(0x5578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0177
        gbc.setState(0xf3a, 0x134a, 0x340, 0xcbf9, 0x3c9b, 0xfc59, 0x1, 0x0);
        gbc.writeMem(0xf3a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x134a, gbc.sp());
        EXPECT(0xf3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0179
        gbc.setState(0x4bee, 0x9a65, 0x33f0, 0xeea7, 0x37d, 0xe08b, 0x0, 0x1);
        gbc.writeMem(0x4bee, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9a65, gbc.sp());
        EXPECT(0x4bf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 017B
        gbc.setState(0x92a8, 0x3449, 0xbf60, 0x376f, 0xd31d, 0xcaa8, 0x0, 0x0);
        gbc.writeMem(0x92a8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3449, gbc.sp());
        EXPECT(0x92aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92a8));
        EXPECT(0xe3, gbc.readMem(0x92a9));
        // CB E3 017C
        gbc.setState(0x6abd, 0xc75b, 0x2c0, 0x9453, 0x12a5, 0xcd24, 0x0, 0x0);
        gbc.writeMem(0x6abd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc75b, gbc.sp());
        EXPECT(0x6abf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 017D
        gbc.setState(0xa1b7, 0x61ab, 0xfd20, 0x1419, 0xe8e3, 0x88cc, 0x0, 0x0);
        gbc.writeMem(0xa1b7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x61ab, gbc.sp());
        EXPECT(0xa1b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b7));
        EXPECT(0xe3, gbc.readMem(0xa1b8));
        // CB E3 017E
        gbc.setState(0x9789, 0x33eb, 0xb980, 0xd858, 0x4060, 0x1c44, 0x0, 0x1);
        gbc.writeMem(0x9789, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x33eb, gbc.sp());
        EXPECT(0x978b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9789));
        EXPECT(0xe3, gbc.readMem(0x978a));
        // CB E3 017F
        gbc.setState(0x1b2e, 0xe638, 0x4df0, 0x9d14, 0x4e28, 0x6b41, 0x0, 0x0);
        gbc.writeMem(0x1b2e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe638, gbc.sp());
        EXPECT(0x1b30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0180
        gbc.setState(0x6b15, 0x699, 0xeab0, 0xa205, 0xfca, 0x3723, 0x1, 0x0);
        gbc.writeMem(0x6b15, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x699, gbc.sp());
        EXPECT(0x6b17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0181
        gbc.setState(0x1a39, 0x4cf1, 0xb680, 0xc329, 0xbdff, 0xe4f5, 0x1, 0x1);
        gbc.writeMem(0x1a39, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4cf1, gbc.sp());
        EXPECT(0x1a3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0183
        gbc.setState(0x2187, 0xbc7e, 0x6910, 0xea09, 0x86c7, 0xc03a, 0x1, 0x1);
        gbc.writeMem(0x2187, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xbc7e, gbc.sp());
        EXPECT(0x2189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0184
        gbc.setState(0x65dc, 0x1204, 0x5950, 0x5529, 0xbcbc, 0x7180, 0x1, 0x0);
        gbc.writeMem(0x65dc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1204, gbc.sp());
        EXPECT(0x65de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0186
        gbc.setState(0x89e5, 0x2af0, 0xa5b0, 0x33d0, 0xa7ed, 0xfc21, 0x1, 0x0);
        gbc.writeMem(0x89e5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2af0, gbc.sp());
        EXPECT(0x89e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89e5));
        EXPECT(0xe3, gbc.readMem(0x89e6));
        // CB E3 0187
        gbc.setState(0x2465, 0x9de1, 0x96d0, 0x76a, 0xb95, 0x6246, 0x0, 0x1);
        gbc.writeMem(0x2465, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9de1, gbc.sp());
        EXPECT(0x2467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0188
        gbc.setState(0x8823, 0xef0, 0x2ae0, 0x9551, 0x80, 0xd72a, 0x1, 0x0);
        gbc.writeMem(0x8823, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xef0, gbc.sp());
        EXPECT(0x8825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8823));
        EXPECT(0xe3, gbc.readMem(0x8824));
        // CB E3 0189
        gbc.setState(0x5c26, 0x68fd, 0x7890, 0xa942, 0x2b8a, 0x7ca, 0x0, 0x0);
        gbc.writeMem(0x5c26, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x68fd, gbc.sp());
        EXPECT(0x5c28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 018A
        gbc.setState(0xe284, 0xc481, 0xad30, 0x7a43, 0x5732, 0x4d2a, 0x0, 0x1);
        gbc.writeMem(0xe284, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc481, gbc.sp());
        EXPECT(0xe286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe284));
        EXPECT(0xe3, gbc.readMem(0xe285));
        // CB E3 018B
        gbc.setState(0x7cf5, 0xb533, 0xdca0, 0x4195, 0x2088, 0xd05e, 0x1, 0x0);
        gbc.writeMem(0x7cf5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb533, gbc.sp());
        EXPECT(0x7cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 018C
        gbc.setState(0xedb4, 0xb6df, 0x2730, 0x2079, 0xf145, 0xa413, 0x1, 0x0);
        gbc.writeMem(0xedb4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb6df, gbc.sp());
        EXPECT(0xedb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb4));
        EXPECT(0xe3, gbc.readMem(0xedb5));
        // CB E3 018D
        gbc.setState(0xa0a5, 0xf989, 0xef80, 0x4340, 0x4564, 0xd9ce, 0x1, 0x0);
        gbc.writeMem(0xa0a5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf989, gbc.sp());
        EXPECT(0xa0a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a5));
        EXPECT(0xe3, gbc.readMem(0xa0a6));
        // CB E3 018E
        gbc.setState(0x33ff, 0x966b, 0x16b0, 0x57c1, 0xfdb1, 0x4855, 0x0, 0x0);
        gbc.writeMem(0x33ff, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x966b, gbc.sp());
        EXPECT(0x3401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 018F
        gbc.setState(0x595, 0x1127, 0x1100, 0x16b6, 0xc5c9, 0x3537, 0x0, 0x1);
        gbc.writeMem(0x595, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1127, gbc.sp());
        EXPECT(0x597, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0190
        gbc.setState(0xdea, 0xa495, 0xee90, 0xe11d, 0x3fe0, 0xab94, 0x1, 0x0);
        gbc.writeMem(0xdea, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa495, gbc.sp());
        EXPECT(0xdec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0191
        gbc.setState(0x85df, 0xe80f, 0x9800, 0x883e, 0xca00, 0xce6, 0x0, 0x0);
        gbc.writeMem(0x85df, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe80f, gbc.sp());
        EXPECT(0x85e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85df));
        EXPECT(0xe3, gbc.readMem(0x85e0));
        // CB E3 0192
        gbc.setState(0xebfe, 0x605d, 0x8890, 0x1a1a, 0x3cee, 0x195d, 0x1, 0x1);
        gbc.writeMem(0xebfe, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x605d, gbc.sp());
        EXPECT(0xec00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebfe));
        EXPECT(0xe3, gbc.readMem(0xebff));
        // CB E3 0193
        gbc.setState(0x3e2, 0x21a3, 0x96b0, 0x345a, 0xfa7f, 0x15a0, 0x1, 0x0);
        gbc.writeMem(0x3e2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x21a3, gbc.sp());
        EXPECT(0x3e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0194
        gbc.setState(0x7e7a, 0x9593, 0xabc0, 0x6194, 0x17f5, 0xab25, 0x1, 0x1);
        gbc.writeMem(0x7e7a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9593, gbc.sp());
        EXPECT(0x7e7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0195
        gbc.setState(0xd288, 0xf38c, 0x9d50, 0x312f, 0x8891, 0x6c7b, 0x1, 0x1);
        gbc.writeMem(0xd288, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf38c, gbc.sp());
        EXPECT(0xd28a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd288));
        EXPECT(0xe3, gbc.readMem(0xd289));
        // CB E3 0196
        gbc.setState(0x7a1f, 0xff5b, 0xf960, 0x60a9, 0x654d, 0x3ca5, 0x0, 0x1);
        gbc.writeMem(0x7a1f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xff5b, gbc.sp());
        EXPECT(0x7a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0197
        gbc.setState(0x732c, 0x43ab, 0x6070, 0x16df, 0x729c, 0x42a9, 0x0, 0x0);
        gbc.writeMem(0x732c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x43ab, gbc.sp());
        EXPECT(0x732e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0198
        gbc.setState(0xa6c3, 0x7300, 0xac30, 0xe843, 0x5543, 0x7ff0, 0x0, 0x1);
        gbc.writeMem(0xa6c3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7300, gbc.sp());
        EXPECT(0xa6c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6c3));
        EXPECT(0xe3, gbc.readMem(0xa6c4));
        // CB E3 0199
        gbc.setState(0xade3, 0xa78c, 0xc2a0, 0x314e, 0x26f5, 0x7fb3, 0x1, 0x1);
        gbc.writeMem(0xade3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa78c, gbc.sp());
        EXPECT(0xade5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xade3));
        EXPECT(0xe3, gbc.readMem(0xade4));
        // CB E3 019A
        gbc.setState(0x1d9a, 0x3417, 0x4d90, 0x4c27, 0x1843, 0xc642, 0x1, 0x0);
        gbc.writeMem(0x1d9a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3417, gbc.sp());
        EXPECT(0x1d9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 019B
        gbc.setState(0xb547, 0xaf03, 0xf0, 0xd644, 0xd58, 0x53b6, 0x1, 0x0);
        gbc.writeMem(0xb547, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xaf03, gbc.sp());
        EXPECT(0xb549, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb547));
        EXPECT(0xe3, gbc.readMem(0xb548));
        // CB E3 019C
        gbc.setState(0x26d8, 0x3730, 0x80e0, 0x7007, 0xd34a, 0x50c2, 0x1, 0x1);
        gbc.writeMem(0x26d8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3730, gbc.sp());
        EXPECT(0x26da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 019D
        gbc.setState(0xa948, 0xcbf3, 0xb130, 0x4802, 0x4bbb, 0xcd79, 0x1, 0x0);
        gbc.writeMem(0xa948, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xcbf3, gbc.sp());
        EXPECT(0xa94a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa948));
        EXPECT(0xe3, gbc.readMem(0xa949));
        // CB E3 019E
        gbc.setState(0x83ac, 0x4acb, 0xb0a0, 0xcbf9, 0x704e, 0xa192, 0x1, 0x1);
        gbc.writeMem(0x83ac, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4acb, gbc.sp());
        EXPECT(0x83ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83ac));
        EXPECT(0xe3, gbc.readMem(0x83ad));
        // CB E3 019F
        gbc.setState(0x76f4, 0x771a, 0x26a0, 0xbf88, 0xb778, 0xf7f9, 0x1, 0x1);
        gbc.writeMem(0x76f4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x771a, gbc.sp());
        EXPECT(0x76f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 01A0
        gbc.setState(0x5586, 0x5def, 0x15c0, 0xa952, 0xe043, 0x766c, 0x1, 0x1);
        gbc.writeMem(0x5586, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5def, gbc.sp());
        EXPECT(0x5588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 01A1
        gbc.setState(0x983a, 0xa967, 0x88a0, 0xecde, 0xcaf3, 0x6182, 0x0, 0x1);
        gbc.writeMem(0x983a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa967, gbc.sp());
        EXPECT(0x983c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x983a));
        EXPECT(0xe3, gbc.readMem(0x983b));
        // CB E3 01A2
        gbc.setState(0xbaa3, 0xa733, 0x3c20, 0x10d7, 0xb2a1, 0x16a, 0x0, 0x1);
        gbc.writeMem(0xbaa3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa733, gbc.sp());
        EXPECT(0xbaa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaa3));
        EXPECT(0xe3, gbc.readMem(0xbaa4));
        // CB E3 01A3
        gbc.setState(0x9530, 0xb27d, 0x8380, 0xf9, 0x34c, 0xd82a, 0x0, 0x1);
        gbc.writeMem(0x9530, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb27d, gbc.sp());
        EXPECT(0x9532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9530));
        EXPECT(0xe3, gbc.readMem(0x9531));
        // CB E3 01A4
        gbc.setState(0x6734, 0xb0a3, 0xa090, 0xfe0d, 0xd3a3, 0x4766, 0x1, 0x1);
        gbc.writeMem(0x6734, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb0a3, gbc.sp());
        EXPECT(0x6736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01A5
        gbc.setState(0x3345, 0x3791, 0xee10, 0x2393, 0x6d7, 0xf7f9, 0x0, 0x1);
        gbc.writeMem(0x3345, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3791, gbc.sp());
        EXPECT(0x3347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01A6
        gbc.setState(0x5977, 0x596a, 0xf8a0, 0x33ba, 0x8f09, 0x2aa6, 0x1, 0x0);
        gbc.writeMem(0x5977, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x596a, gbc.sp());
        EXPECT(0x5979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 01A7
        gbc.setState(0x38f6, 0x28bf, 0x89a0, 0x37f2, 0xef4c, 0x6bb7, 0x1, 0x0);
        gbc.writeMem(0x38f6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x28bf, gbc.sp());
        EXPECT(0x38f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 01A8
        gbc.setState(0x6cce, 0xd66a, 0xb910, 0x7ac2, 0x9748, 0x5848, 0x0, 0x0);
        gbc.writeMem(0x6cce, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd66a, gbc.sp());
        EXPECT(0x6cd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01A9
        gbc.setState(0x56b3, 0xe661, 0x4c90, 0x314c, 0x552d, 0x2673, 0x1, 0x1);
        gbc.writeMem(0x56b3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe661, gbc.sp());
        EXPECT(0x56b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01AA
        gbc.setState(0xe421, 0x6a8a, 0x1aa0, 0x715f, 0xb414, 0x641e, 0x1, 0x1);
        gbc.writeMem(0xe421, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6a8a, gbc.sp());
        EXPECT(0xe423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe421));
        EXPECT(0xe3, gbc.readMem(0xe422));
        // CB E3 01AB
        gbc.setState(0x2c8c, 0x4a23, 0xd030, 0x85fa, 0x2f9f, 0xba1c, 0x0, 0x1);
        gbc.writeMem(0x2c8c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4a23, gbc.sp());
        EXPECT(0x2c8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01AC
        gbc.setState(0x6e4f, 0x4244, 0xf370, 0xa4c0, 0xdb76, 0xb8a2, 0x1, 0x1);
        gbc.writeMem(0x6e4f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4244, gbc.sp());
        EXPECT(0x6e51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01AD
        gbc.setState(0xd27, 0x83c8, 0xf370, 0x4cac, 0x352, 0xbf30, 0x0, 0x0);
        gbc.writeMem(0xd27, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x83c8, gbc.sp());
        EXPECT(0xd29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01AE
        gbc.setState(0x2027, 0x685b, 0x9dd0, 0x7130, 0xf4a0, 0xd6c0, 0x0, 0x1);
        gbc.writeMem(0x2027, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x685b, gbc.sp());
        EXPECT(0x2029, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01AF
        gbc.setState(0x9bd3, 0x94ef, 0xbbe0, 0xb335, 0x50c8, 0x7f95, 0x1, 0x1);
        gbc.writeMem(0x9bd3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x94ef, gbc.sp());
        EXPECT(0x9bd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bd3));
        EXPECT(0xe3, gbc.readMem(0x9bd4));
        // CB E3 01B0
        gbc.setState(0x8a69, 0xc02f, 0x5520, 0xdc02, 0x8dbd, 0x9f62, 0x1, 0x1);
        gbc.writeMem(0x8a69, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc02f, gbc.sp());
        EXPECT(0x8a6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a69));
        EXPECT(0xe3, gbc.readMem(0x8a6a));
        // CB E3 01B1
        gbc.setState(0x5bfa, 0xcb9b, 0x42f0, 0xe0b5, 0xbcf0, 0x764e, 0x0, 0x1);
        gbc.writeMem(0x5bfa, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xcb9b, gbc.sp());
        EXPECT(0x5bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01B2
        gbc.setState(0x354b, 0xd585, 0xf770, 0xd201, 0xeec0, 0xb133, 0x0, 0x1);
        gbc.writeMem(0x354b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd585, gbc.sp());
        EXPECT(0x354d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01B4
        gbc.setState(0x8de9, 0xc9ba, 0x1670, 0xdfdd, 0xbfc6, 0xdea6, 0x1, 0x0);
        gbc.writeMem(0x8de9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc9ba, gbc.sp());
        EXPECT(0x8deb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8de9));
        EXPECT(0xe3, gbc.readMem(0x8dea));
        // CB E3 01B5
        gbc.setState(0x7e6, 0x6bdd, 0xa290, 0x4674, 0xb5ac, 0x761d, 0x1, 0x0);
        gbc.writeMem(0x7e6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6bdd, gbc.sp());
        EXPECT(0x7e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01B7
        gbc.setState(0x8dda, 0xb949, 0xa9d0, 0x278e, 0xe497, 0xd768, 0x0, 0x0);
        gbc.writeMem(0x8dda, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb949, gbc.sp());
        EXPECT(0x8ddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dda));
        EXPECT(0xe3, gbc.readMem(0x8ddb));
        // CB E3 01B8
        gbc.setState(0x234b, 0x8b3e, 0xf990, 0x1273, 0x93d4, 0xb021, 0x1, 0x0);
        gbc.writeMem(0x234b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8b3e, gbc.sp());
        EXPECT(0x234d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01B9
        gbc.setState(0x3fc4, 0xbc04, 0xe9e0, 0xc7b0, 0x8bbc, 0xc1da, 0x0, 0x0);
        gbc.writeMem(0x3fc4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbc04, gbc.sp());
        EXPECT(0x3fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 01BA
        gbc.setState(0x53d0, 0xb302, 0x3b20, 0x9945, 0xcfa4, 0x9ef0, 0x0, 0x0);
        gbc.writeMem(0x53d0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb302, gbc.sp());
        EXPECT(0x53d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 01BB
        gbc.setState(0x32a0, 0x99cd, 0x2a90, 0x728e, 0xfe2d, 0x27b6, 0x1, 0x0);
        gbc.writeMem(0x32a0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x99cd, gbc.sp());
        EXPECT(0x32a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01BC
        gbc.setState(0xb4bc, 0x57f5, 0xa10, 0x63bb, 0x3693, 0x983c, 0x0, 0x1);
        gbc.writeMem(0xb4bc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x57f5, gbc.sp());
        EXPECT(0xb4be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4bc));
        EXPECT(0xe3, gbc.readMem(0xb4bd));
        // CB E3 01BE
        gbc.setState(0x9860, 0x92d4, 0x6150, 0x6139, 0x495a, 0xe688, 0x0, 0x0);
        gbc.writeMem(0x9860, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x92d4, gbc.sp());
        EXPECT(0x9862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9860));
        EXPECT(0xe3, gbc.readMem(0x9861));
        // CB E3 01BF
        gbc.setState(0xbbf9, 0x7d28, 0xb400, 0xba65, 0x5411, 0x7570, 0x1, 0x0);
        gbc.writeMem(0xbbf9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7d28, gbc.sp());
        EXPECT(0xbbfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbf9));
        EXPECT(0xe3, gbc.readMem(0xbbfa));
        // CB E3 01C0
        gbc.setState(0x6053, 0x2f43, 0x4590, 0xc9b1, 0x3bd1, 0xdde, 0x0, 0x0);
        gbc.writeMem(0x6053, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2f43, gbc.sp());
        EXPECT(0x6055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01C1
        gbc.setState(0xa759, 0x52db, 0xcb10, 0xcce8, 0xd755, 0xbd05, 0x0, 0x0);
        gbc.writeMem(0xa759, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x52db, gbc.sp());
        EXPECT(0xa75b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa759));
        EXPECT(0xe3, gbc.readMem(0xa75a));
        // CB E3 01C2
        gbc.setState(0xc8e, 0x719f, 0xf4d0, 0x6ec7, 0x4d0f, 0xe215, 0x0, 0x1);
        gbc.writeMem(0xc8e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x719f, gbc.sp());
        EXPECT(0xc90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01C3
        gbc.setState(0xd7be, 0x9bb6, 0x7e70, 0xa3d3, 0x6f66, 0x2581, 0x0, 0x0);
        gbc.writeMem(0xd7be, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9bb6, gbc.sp());
        EXPECT(0xd7c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7be));
        EXPECT(0xe3, gbc.readMem(0xd7bf));
        // CB E3 01C4
        gbc.setState(0x4388, 0x2fc4, 0xaed0, 0x694a, 0x5220, 0x5632, 0x0, 0x1);
        gbc.writeMem(0x4388, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2fc4, gbc.sp());
        EXPECT(0x438a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01C5
        gbc.setState(0xe31e, 0x5b62, 0x48a0, 0x781f, 0xa7b1, 0x187f, 0x0, 0x1);
        gbc.writeMem(0xe31e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5b62, gbc.sp());
        EXPECT(0xe320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe31e));
        EXPECT(0xe3, gbc.readMem(0xe31f));
        // CB E3 01C6
        gbc.setState(0x436c, 0xf6d1, 0x3370, 0xd537, 0x3247, 0xd825, 0x1, 0x0);
        gbc.writeMem(0x436c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf6d1, gbc.sp());
        EXPECT(0x436e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01C7
        gbc.setState(0x3c45, 0xca3b, 0xded0, 0x17ea, 0xc9db, 0x6f04, 0x1, 0x1);
        gbc.writeMem(0x3c45, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xca3b, gbc.sp());
        EXPECT(0x3c47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01C9
        gbc.setState(0x6592, 0xbd57, 0x89c0, 0x2278, 0xc8c7, 0x9452, 0x1, 0x1);
        gbc.writeMem(0x6592, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xbd57, gbc.sp());
        EXPECT(0x6594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 01CA
        gbc.setState(0x1436, 0xc214, 0x5e20, 0x7af5, 0xa923, 0xe031, 0x0, 0x0);
        gbc.writeMem(0x1436, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc214, gbc.sp());
        EXPECT(0x1438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 01CB
        gbc.setState(0x6bfc, 0x6b67, 0x8380, 0x7759, 0x6a4d, 0x5189, 0x1, 0x1);
        gbc.writeMem(0x6bfc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6b67, gbc.sp());
        EXPECT(0x6bfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 01CC
        gbc.setState(0x12f0, 0x10c3, 0x9380, 0x4e36, 0x114e, 0xc94c, 0x0, 0x0);
        gbc.writeMem(0x12f0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x10c3, gbc.sp());
        EXPECT(0x12f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 01CD
        gbc.setState(0xc6e3, 0xcac0, 0x3c10, 0x223b, 0x6e7, 0x6e35, 0x1, 0x0);
        gbc.writeMem(0xc6e3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xcac0, gbc.sp());
        EXPECT(0xc6e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e3));
        EXPECT(0xe3, gbc.readMem(0xc6e4));
        // CB E3 01CE
        gbc.setState(0xc205, 0x99fe, 0xd830, 0x7755, 0x38bf, 0xc2d8, 0x0, 0x1);
        gbc.writeMem(0xc205, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x99fe, gbc.sp());
        EXPECT(0xc207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc205));
        EXPECT(0xe3, gbc.readMem(0xc206));
        // CB E3 01D0
        gbc.setState(0x7130, 0xd16c, 0x9390, 0x6130, 0x34ba, 0xdd36, 0x0, 0x0);
        gbc.writeMem(0x7130, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd16c, gbc.sp());
        EXPECT(0x7132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01D1
        gbc.setState(0xbdbe, 0xecc3, 0xea90, 0x5d06, 0x6b9, 0x8424, 0x0, 0x0);
        gbc.writeMem(0xbdbe, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xecc3, gbc.sp());
        EXPECT(0xbdc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdbe));
        EXPECT(0xe3, gbc.readMem(0xbdbf));
        // CB E3 01D2
        gbc.setState(0x4aa1, 0xfd0, 0x70b0, 0x34af, 0x4fd1, 0x902e, 0x0, 0x0);
        gbc.writeMem(0x4aa1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xfd0, gbc.sp());
        EXPECT(0x4aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01D3
        gbc.setState(0xdf2e, 0xb996, 0xd410, 0x4e62, 0x5877, 0xcbd9, 0x1, 0x0);
        gbc.writeMem(0xdf2e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb996, gbc.sp());
        EXPECT(0xdf30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf2e));
        EXPECT(0xe3, gbc.readMem(0xdf2f));
        // CB E3 01D4
        gbc.setState(0x1745, 0x7c5f, 0xf020, 0x39b8, 0xf5a8, 0x439a, 0x1, 0x0);
        gbc.writeMem(0x1745, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7c5f, gbc.sp());
        EXPECT(0x1747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 01D5
        gbc.setState(0xe146, 0xbe1d, 0x6a10, 0xaab0, 0xa1ec, 0xbe89, 0x0, 0x1);
        gbc.writeMem(0xe146, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbe1d, gbc.sp());
        EXPECT(0xe148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe146));
        EXPECT(0xe3, gbc.readMem(0xe147));
        // CB E3 01D6
        gbc.setState(0xf42, 0x7f4d, 0xc0f0, 0x363d, 0xb554, 0xbed8, 0x0, 0x1);
        gbc.writeMem(0xf42, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7f4d, gbc.sp());
        EXPECT(0xf44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01D7
        gbc.setState(0x64dd, 0x54af, 0x2250, 0xfcf7, 0x904f, 0x2b0b, 0x0, 0x1);
        gbc.writeMem(0x64dd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x54af, gbc.sp());
        EXPECT(0x64df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01D9
        gbc.setState(0x3ef8, 0x3ece, 0x3ce0, 0x7f6c, 0xb736, 0x53eb, 0x1, 0x1);
        gbc.writeMem(0x3ef8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3ece, gbc.sp());
        EXPECT(0x3efa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 01DA
        gbc.setState(0x9c67, 0xe05a, 0xb310, 0xaa7e, 0xe7d0, 0x13f5, 0x1, 0x0);
        gbc.writeMem(0x9c67, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe05a, gbc.sp());
        EXPECT(0x9c69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c67));
        EXPECT(0xe3, gbc.readMem(0x9c68));
        // CB E3 01DC
        gbc.setState(0xb190, 0xe1e0, 0xc1b0, 0xeca5, 0x4c02, 0xa182, 0x1, 0x1);
        gbc.writeMem(0xb190, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe1e0, gbc.sp());
        EXPECT(0xb192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb190));
        EXPECT(0xe3, gbc.readMem(0xb191));
        // CB E3 01DD
        gbc.setState(0x45e, 0xfb0c, 0xa640, 0xf83a, 0xd7a9, 0x34e4, 0x1, 0x1);
        gbc.writeMem(0x45e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfb0c, gbc.sp());
        EXPECT(0x460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 01DE
        gbc.setState(0x86d8, 0xf7ed, 0x720, 0x7c4d, 0xcc04, 0x8197, 0x1, 0x1);
        gbc.writeMem(0x86d8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf7ed, gbc.sp());
        EXPECT(0x86da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86d8));
        EXPECT(0xe3, gbc.readMem(0x86d9));
        // CB E3 01DF
        gbc.setState(0x710e, 0x4b63, 0x5330, 0x654d, 0xd1c8, 0xc80f, 0x0, 0x0);
        gbc.writeMem(0x710e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4b63, gbc.sp());
        EXPECT(0x7110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01E0
        gbc.setState(0x4140, 0xe5e0, 0x9630, 0xeb27, 0xab26, 0x1471, 0x1, 0x0);
        gbc.writeMem(0x4140, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe5e0, gbc.sp());
        EXPECT(0x4142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01E2
        gbc.setState(0xb6fe, 0x40a8, 0xe360, 0x6f75, 0x11fb, 0x147d, 0x0, 0x1);
        gbc.writeMem(0xb6fe, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x40a8, gbc.sp());
        EXPECT(0xb700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6fe));
        EXPECT(0xe3, gbc.readMem(0xb6ff));
        // CB E3 01E3
        gbc.setState(0x56ab, 0xcba5, 0xba40, 0xb76c, 0xdbb0, 0xee38, 0x0, 0x0);
        gbc.writeMem(0x56ab, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xcba5, gbc.sp());
        EXPECT(0x56ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 01E4
        gbc.setState(0xcce, 0x14b3, 0x2aa0, 0xd8e9, 0x1f47, 0xadff, 0x1, 0x1);
        gbc.writeMem(0xcce, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x14b3, gbc.sp());
        EXPECT(0xcd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 01E5
        gbc.setState(0x99f6, 0xf828, 0x7b50, 0xb91c, 0x42d2, 0x2a9e, 0x1, 0x1);
        gbc.writeMem(0x99f6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf828, gbc.sp());
        EXPECT(0x99f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99f6));
        EXPECT(0xe3, gbc.readMem(0x99f7));
        // CB E3 01E6
        gbc.setState(0x9c3e, 0xd77b, 0xdcf0, 0x3581, 0x69f5, 0x85ff, 0x0, 0x1);
        gbc.writeMem(0x9c3e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd77b, gbc.sp());
        EXPECT(0x9c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c3e));
        EXPECT(0xe3, gbc.readMem(0x9c3f));
        // CB E3 01E7
        gbc.setState(0x8f8e, 0x9fc9, 0x2030, 0xbc86, 0x98e6, 0x4cc8, 0x1, 0x0);
        gbc.writeMem(0x8f8e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9fc9, gbc.sp());
        EXPECT(0x8f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f8e));
        EXPECT(0xe3, gbc.readMem(0x8f8f));
        // CB E3 01E8
        gbc.setState(0x6650, 0xd864, 0xe500, 0xd3f6, 0x1fb6, 0xf114, 0x1, 0x0);
        gbc.writeMem(0x6650, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd864, gbc.sp());
        EXPECT(0x6652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 01E9
        gbc.setState(0x6854, 0xb8b1, 0x6610, 0xc67f, 0xd054, 0x6117, 0x1, 0x1);
        gbc.writeMem(0x6854, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb8b1, gbc.sp());
        EXPECT(0x6856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01EA
        gbc.setState(0x49e, 0x9c1f, 0xa80, 0xf3a, 0x1914, 0xab4a, 0x1, 0x1);
        gbc.writeMem(0x49e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9c1f, gbc.sp());
        EXPECT(0x4a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 01EB
        gbc.setState(0x3fa8, 0xbd87, 0xb590, 0x345c, 0x1d48, 0x3e23, 0x1, 0x0);
        gbc.writeMem(0x3fa8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xbd87, gbc.sp());
        EXPECT(0x3faa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01EC
        gbc.setState(0xd8f9, 0xf30f, 0x4d00, 0x55bd, 0x1286, 0x59cb, 0x0, 0x1);
        gbc.writeMem(0xd8f9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf30f, gbc.sp());
        EXPECT(0xd8fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8f9));
        EXPECT(0xe3, gbc.readMem(0xd8fa));
        // CB E3 01ED
        gbc.setState(0xa7d3, 0xaae6, 0x3de0, 0x684f, 0xf9d, 0x861, 0x1, 0x0);
        gbc.writeMem(0xa7d3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xaae6, gbc.sp());
        EXPECT(0xa7d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d3));
        EXPECT(0xe3, gbc.readMem(0xa7d4));
        // CB E3 01EE
        gbc.setState(0x7ecc, 0x2831, 0xe340, 0x3b07, 0x187, 0x51f9, 0x0, 0x1);
        gbc.writeMem(0x7ecc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2831, gbc.sp());
        EXPECT(0x7ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 01EF
        gbc.setState(0x2eb3, 0xde1c, 0x8cc0, 0x710a, 0xc8c, 0xdef3, 0x1, 0x0);
        gbc.writeMem(0x2eb3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xde1c, gbc.sp());
        EXPECT(0x2eb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 01F0
        gbc.setState(0xa2d7, 0xd987, 0x7dd0, 0x42ac, 0x56a5, 0xfec7, 0x0, 0x0);
        gbc.writeMem(0xa2d7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd987, gbc.sp());
        EXPECT(0xa2d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d7));
        EXPECT(0xe3, gbc.readMem(0xa2d8));
        // CB E3 01F1
        gbc.setState(0xe91f, 0xc3d2, 0xf730, 0x7b1e, 0x79ec, 0xc61e, 0x0, 0x0);
        gbc.writeMem(0xe91f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc3d2, gbc.sp());
        EXPECT(0xe921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe91f));
        EXPECT(0xe3, gbc.readMem(0xe920));
        // CB E3 01F2
        gbc.setState(0x8b54, 0xc1bb, 0x2c00, 0x1a84, 0xccda, 0xe68d, 0x0, 0x0);
        gbc.writeMem(0x8b54, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc1bb, gbc.sp());
        EXPECT(0x8b56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b54));
        EXPECT(0xe3, gbc.readMem(0x8b55));
        // CB E3 01F3
        gbc.setState(0x68ff, 0xa558, 0x2350, 0xbf24, 0x7947, 0x5eaf, 0x0, 0x1);
        gbc.writeMem(0x68ff, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa558, gbc.sp());
        EXPECT(0x6901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01F4
        gbc.setState(0xa4c5, 0x8063, 0xd220, 0x6578, 0xf736, 0x2297, 0x1, 0x0);
        gbc.writeMem(0xa4c5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8063, gbc.sp());
        EXPECT(0xa4c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4c5));
        EXPECT(0xe3, gbc.readMem(0xa4c6));
        // CB E3 01F5
        gbc.setState(0xef34, 0x5e82, 0x3360, 0xf178, 0x32a2, 0x2574, 0x0, 0x1);
        gbc.writeMem(0xef34, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5e82, gbc.sp());
        EXPECT(0xef36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef34));
        EXPECT(0xe3, gbc.readMem(0xef35));
        // CB E3 01F6
        gbc.setState(0x2d04, 0xc228, 0x6440, 0xad42, 0x7542, 0x809e, 0x0, 0x1);
        gbc.writeMem(0x2d04, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc228, gbc.sp());
        EXPECT(0x2d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 01F7
        gbc.setState(0x5149, 0xeecf, 0xb8c0, 0x26fb, 0x92a3, 0x4940, 0x1, 0x0);
        gbc.writeMem(0x5149, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xeecf, gbc.sp());
        EXPECT(0x514b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 01F8
        gbc.setState(0xc7e2, 0xe242, 0x3c40, 0xf379, 0xb9bd, 0xd7c6, 0x0, 0x1);
        gbc.writeMem(0xc7e2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe242, gbc.sp());
        EXPECT(0xc7e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7e2));
        EXPECT(0xe3, gbc.readMem(0xc7e3));
        // CB E3 01F9
        gbc.setState(0x9413, 0x99b8, 0x9900, 0xf5c0, 0xfb8b, 0xd16c, 0x0, 0x1);
        gbc.writeMem(0x9413, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x99b8, gbc.sp());
        EXPECT(0x9415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9413));
        EXPECT(0xe3, gbc.readMem(0x9414));
        // CB E3 01FA
        gbc.setState(0x2ab7, 0xa79b, 0xbce0, 0x5cbe, 0x8cce, 0xfe30, 0x0, 0x0);
        gbc.writeMem(0x2ab7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa79b, gbc.sp());
        EXPECT(0x2ab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 01FB
        gbc.setState(0x16ed, 0xc8b0, 0x73d0, 0xc4db, 0xfbae, 0x5d7c, 0x1, 0x0);
        gbc.writeMem(0x16ed, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc8b0, gbc.sp());
        EXPECT(0x16ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01FC
        gbc.setState(0x2098, 0x5f0c, 0x59b0, 0xd67a, 0x322c, 0x29af, 0x1, 0x0);
        gbc.writeMem(0x2098, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5f0c, gbc.sp());
        EXPECT(0x209a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01FD
        gbc.setState(0x4388, 0x3a18, 0x1b50, 0x61fc, 0xd5ca, 0x729b, 0x1, 0x1);
        gbc.writeMem(0x4388, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3a18, gbc.sp());
        EXPECT(0x438a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 01FE
        gbc.setState(0xe564, 0x597b, 0x8dc0, 0x21a7, 0x5bd3, 0xf77f, 0x0, 0x1);
        gbc.writeMem(0xe564, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x597b, gbc.sp());
        EXPECT(0xe566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe564));
        EXPECT(0xe3, gbc.readMem(0xe565));
        // CB E3 01FF
        gbc.setState(0xcd6b, 0x8326, 0xc000, 0x3c7b, 0x9d10, 0xa987, 0x1, 0x0);
        gbc.writeMem(0xcd6b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8326, gbc.sp());
        EXPECT(0xcd6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd6b));
        EXPECT(0xe3, gbc.readMem(0xcd6c));
        // CB E3 0200
        gbc.setState(0xe548, 0xf684, 0x1740, 0x1af8, 0xd95a, 0x3de0, 0x0, 0x0);
        gbc.writeMem(0xe548, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf684, gbc.sp());
        EXPECT(0xe54a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe548));
        EXPECT(0xe3, gbc.readMem(0xe549));
        // CB E3 0201
        gbc.setState(0x24c7, 0x5c64, 0xbb0, 0xd43a, 0x944c, 0xeda, 0x0, 0x1);
        gbc.writeMem(0x24c7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5c64, gbc.sp());
        EXPECT(0x24c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0202
        gbc.setState(0xad27, 0x98f9, 0xfc10, 0xdf84, 0xc15e, 0xccd2, 0x0, 0x1);
        gbc.writeMem(0xad27, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x98f9, gbc.sp());
        EXPECT(0xad29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad27));
        EXPECT(0xe3, gbc.readMem(0xad28));
        // CB E3 0203
        gbc.setState(0xa25e, 0xc20a, 0x2080, 0xad5f, 0x50c4, 0x1515, 0x0, 0x1);
        gbc.writeMem(0xa25e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc20a, gbc.sp());
        EXPECT(0xa260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa25e));
        EXPECT(0xe3, gbc.readMem(0xa25f));
        // CB E3 0205
        gbc.setState(0x1432, 0x1f5d, 0x71a0, 0x2c64, 0x1a3a, 0xb683, 0x1, 0x0);
        gbc.writeMem(0x1432, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1f5d, gbc.sp());
        EXPECT(0x1434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0206
        gbc.setState(0xc0af, 0xe1f2, 0x73b0, 0x745b, 0x2992, 0x2bc2, 0x1, 0x1);
        gbc.writeMem(0xc0af, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe1f2, gbc.sp());
        EXPECT(0xc0b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0af));
        EXPECT(0xe3, gbc.readMem(0xc0b0));
        // CB E3 0207
        gbc.setState(0x59be, 0x2c93, 0x8e90, 0xad90, 0xa29c, 0x47fe, 0x1, 0x0);
        gbc.writeMem(0x59be, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2c93, gbc.sp());
        EXPECT(0x59c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0208
        gbc.setState(0x81fd, 0x7bf8, 0xc4c0, 0x3567, 0x9614, 0xce9c, 0x0, 0x0);
        gbc.writeMem(0x81fd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7bf8, gbc.sp());
        EXPECT(0x81ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81fd));
        EXPECT(0xe3, gbc.readMem(0x81fe));
        // CB E3 0209
        gbc.setState(0x900b, 0x5faa, 0x5d90, 0x6fda, 0xba1d, 0xb467, 0x1, 0x1);
        gbc.writeMem(0x900b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5faa, gbc.sp());
        EXPECT(0x900d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x900b));
        EXPECT(0xe3, gbc.readMem(0x900c));
        // CB E3 020A
        gbc.setState(0xc690, 0xcdbc, 0xad50, 0xa8fb, 0xecc8, 0xbd58, 0x0, 0x0);
        gbc.writeMem(0xc690, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xcdbc, gbc.sp());
        EXPECT(0xc692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc690));
        EXPECT(0xe3, gbc.readMem(0xc691));
        // CB E3 020B
        gbc.setState(0x876d, 0x7c6b, 0xc7d0, 0x7e4d, 0x3546, 0xa190, 0x0, 0x1);
        gbc.writeMem(0x876d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7c6b, gbc.sp());
        EXPECT(0x876f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x876d));
        EXPECT(0xe3, gbc.readMem(0x876e));
        // CB E3 020C
        gbc.setState(0x5cb, 0xd019, 0xa900, 0xeae8, 0x2d07, 0xc9bb, 0x0, 0x0);
        gbc.writeMem(0x5cb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd019, gbc.sp());
        EXPECT(0x5cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 020D
        gbc.setState(0x3d13, 0x5701, 0xed50, 0x74f4, 0x26de, 0x59a0, 0x0, 0x1);
        gbc.writeMem(0x3d13, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5701, gbc.sp());
        EXPECT(0x3d15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 020E
        gbc.setState(0xf1, 0x5154, 0xd300, 0x68a9, 0xb9f4, 0x1d40, 0x0, 0x1);
        gbc.writeMem(0xf1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5154, gbc.sp());
        EXPECT(0xf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 020F
        gbc.setState(0x7f2b, 0xbd2, 0xed30, 0xf047, 0x9bd5, 0xdfae, 0x0, 0x0);
        gbc.writeMem(0x7f2b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xbd2, gbc.sp());
        EXPECT(0x7f2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0210
        gbc.setState(0xd81a, 0xc94d, 0x1430, 0xc35a, 0x852d, 0x2100, 0x0, 0x0);
        gbc.writeMem(0xd81a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc94d, gbc.sp());
        EXPECT(0xd81c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd81a));
        EXPECT(0xe3, gbc.readMem(0xd81b));
        // CB E3 0212
        gbc.setState(0x2e08, 0xc691, 0x65a0, 0x49f7, 0x7771, 0x600f, 0x1, 0x1);
        gbc.writeMem(0x2e08, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc691, gbc.sp());
        EXPECT(0x2e0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0213
        gbc.setState(0x5ab1, 0xbc3b, 0x330, 0x8343, 0x4eba, 0x4536, 0x1, 0x1);
        gbc.writeMem(0x5ab1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbc3b, gbc.sp());
        EXPECT(0x5ab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0214
        gbc.setState(0x7f58, 0x3aa0, 0xd240, 0x18b5, 0xa26c, 0xb6dd, 0x0, 0x1);
        gbc.writeMem(0x7f58, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3aa0, gbc.sp());
        EXPECT(0x7f5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0216
        gbc.setState(0x1cf, 0x7c10, 0x8680, 0x160d, 0x5b74, 0xe7d6, 0x0, 0x1);
        gbc.writeMem(0x1cf, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7c10, gbc.sp());
        EXPECT(0x1d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0217
        gbc.setState(0x9b7e, 0x96ef, 0xde10, 0x424d, 0xecdf, 0xd1d5, 0x0, 0x1);
        gbc.writeMem(0x9b7e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x96ef, gbc.sp());
        EXPECT(0x9b80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b7e));
        EXPECT(0xe3, gbc.readMem(0x9b7f));
        // CB E3 0218
        gbc.setState(0xc34b, 0x1d0e, 0x5310, 0xbf0e, 0xcb19, 0xeaed, 0x0, 0x1);
        gbc.writeMem(0xc34b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1d0e, gbc.sp());
        EXPECT(0xc34d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc34b));
        EXPECT(0xe3, gbc.readMem(0xc34c));
        // CB E3 0219
        gbc.setState(0x694d, 0x9eaa, 0xcaf0, 0x3444, 0x6b19, 0xeb0e, 0x1, 0x1);
        gbc.writeMem(0x694d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9eaa, gbc.sp());
        EXPECT(0x694f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 021A
        gbc.setState(0xa226, 0xb1f, 0xae30, 0x3ad3, 0xd51c, 0x4e54, 0x1, 0x1);
        gbc.writeMem(0xa226, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb1f, gbc.sp());
        EXPECT(0xa228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa226));
        EXPECT(0xe3, gbc.readMem(0xa227));
        // CB E3 021B
        gbc.setState(0x7d5f, 0xdd84, 0x330, 0x7ca0, 0x1a77, 0xac2, 0x1, 0x0);
        gbc.writeMem(0x7d5f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdd84, gbc.sp());
        EXPECT(0x7d61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 021C
        gbc.setState(0xcaab, 0xab31, 0x2e50, 0x2669, 0x65d6, 0xac36, 0x0, 0x1);
        gbc.writeMem(0xcaab, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xab31, gbc.sp());
        EXPECT(0xcaad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaab));
        EXPECT(0xe3, gbc.readMem(0xcaac));
        // CB E3 021D
        gbc.setState(0x74ab, 0x7458, 0x8ce0, 0x9941, 0x9669, 0x599c, 0x1, 0x0);
        gbc.writeMem(0x74ab, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7458, gbc.sp());
        EXPECT(0x74ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 021E
        gbc.setState(0xdfc5, 0x1f83, 0x5100, 0x9b01, 0xf830, 0xaedd, 0x1, 0x1);
        gbc.writeMem(0xdfc5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1f83, gbc.sp());
        EXPECT(0xdfc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc5));
        EXPECT(0xe3, gbc.readMem(0xdfc6));
        // CB E3 021F
        gbc.setState(0x27d2, 0xc59, 0x4d0, 0x25a3, 0x7f5e, 0xba7a, 0x1, 0x0);
        gbc.writeMem(0x27d2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc59, gbc.sp());
        EXPECT(0x27d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0220
        gbc.setState(0x49e4, 0xc665, 0xda20, 0x66be, 0xb2af, 0xfea3, 0x0, 0x0);
        gbc.writeMem(0x49e4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc665, gbc.sp());
        EXPECT(0x49e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0221
        gbc.setState(0x605b, 0x53ce, 0xa90, 0xdb5a, 0x335a, 0x1a78, 0x1, 0x0);
        gbc.writeMem(0x605b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x53ce, gbc.sp());
        EXPECT(0x605d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0222
        gbc.setState(0x2117, 0x1263, 0x4ba0, 0x9499, 0x93e1, 0xe, 0x0, 0x0);
        gbc.writeMem(0x2117, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1263, gbc.sp());
        EXPECT(0x2119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0223
        gbc.setState(0x5202, 0x20e4, 0x4460, 0xeff3, 0x2837, 0x3331, 0x1, 0x1);
        gbc.writeMem(0x5202, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x20e4, gbc.sp());
        EXPECT(0x5204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0224
        gbc.setState(0xbeb2, 0x39dc, 0x94a0, 0x9d3, 0x9dfe, 0xe65f, 0x0, 0x1);
        gbc.writeMem(0xbeb2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x39dc, gbc.sp());
        EXPECT(0xbeb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeb2));
        EXPECT(0xe3, gbc.readMem(0xbeb3));
        // CB E3 0225
        gbc.setState(0x3a9e, 0xf947, 0x9690, 0xdc19, 0x94f7, 0x54df, 0x0, 0x1);
        gbc.writeMem(0x3a9e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf947, gbc.sp());
        EXPECT(0x3aa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0226
        gbc.setState(0xdcf7, 0x8848, 0x620, 0x9363, 0xfe95, 0xfa5f, 0x0, 0x1);
        gbc.writeMem(0xdcf7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8848, gbc.sp());
        EXPECT(0xdcf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcf7));
        EXPECT(0xe3, gbc.readMem(0xdcf8));
        // CB E3 0227
        gbc.setState(0xab66, 0x6104, 0x4920, 0x2f90, 0x3e18, 0x33c0, 0x0, 0x0);
        gbc.writeMem(0xab66, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6104, gbc.sp());
        EXPECT(0xab68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab66));
        EXPECT(0xe3, gbc.readMem(0xab67));
        // CB E3 0228
        gbc.setState(0x3b96, 0x6077, 0x7610, 0xd303, 0x1775, 0x427f, 0x1, 0x1);
        gbc.writeMem(0x3b96, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6077, gbc.sp());
        EXPECT(0x3b98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0229
        gbc.setState(0x6d97, 0x3f1a, 0x16b0, 0xb8e, 0x7625, 0xc327, 0x0, 0x0);
        gbc.writeMem(0x6d97, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3f1a, gbc.sp());
        EXPECT(0x6d99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 022A
        gbc.setState(0xecd, 0x2dc8, 0x29a0, 0x2bf4, 0xbf0a, 0x60f, 0x1, 0x0);
        gbc.writeMem(0xecd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2dc8, gbc.sp());
        EXPECT(0xecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 022C
        gbc.setState(0xeb1d, 0x1dad, 0x61c0, 0xb73f, 0xd426, 0xbe3, 0x0, 0x1);
        gbc.writeMem(0xeb1d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1dad, gbc.sp());
        EXPECT(0xeb1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb1d));
        EXPECT(0xe3, gbc.readMem(0xeb1e));
        // CB E3 022D
        gbc.setState(0xe2b5, 0xad79, 0x3e70, 0x7a00, 0xe844, 0x7a13, 0x1, 0x1);
        gbc.writeMem(0xe2b5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xad79, gbc.sp());
        EXPECT(0xe2b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b5));
        EXPECT(0xe3, gbc.readMem(0xe2b6));
        // CB E3 022E
        gbc.setState(0x5345, 0x12ff, 0x8b0, 0x6687, 0x1337, 0x3fcb, 0x0, 0x1);
        gbc.writeMem(0x5345, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x12ff, gbc.sp());
        EXPECT(0x5347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 022F
        gbc.setState(0xba0, 0xf2d4, 0x6e30, 0x45d3, 0x6049, 0xfeaf, 0x0, 0x1);
        gbc.writeMem(0xba0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf2d4, gbc.sp());
        EXPECT(0xba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0230
        gbc.setState(0x8c2c, 0xcffa, 0x7e30, 0x98fc, 0xfae3, 0xe95e, 0x0, 0x1);
        gbc.writeMem(0x8c2c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xcffa, gbc.sp());
        EXPECT(0x8c2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c2c));
        EXPECT(0xe3, gbc.readMem(0x8c2d));
        // CB E3 0231
        gbc.setState(0xe993, 0xf360, 0x9680, 0xa5b1, 0x6b3a, 0x997b, 0x0, 0x1);
        gbc.writeMem(0xe993, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf360, gbc.sp());
        EXPECT(0xe995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe993));
        EXPECT(0xe3, gbc.readMem(0xe994));
        // CB E3 0232
        gbc.setState(0x638e, 0x52a2, 0xa8f0, 0x84b, 0xbd46, 0xf0f4, 0x1, 0x0);
        gbc.writeMem(0x638e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x52a2, gbc.sp());
        EXPECT(0x6390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0233
        gbc.setState(0x440a, 0xb616, 0x2c50, 0x3804, 0x5bd4, 0x51a5, 0x1, 0x1);
        gbc.writeMem(0x440a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb616, gbc.sp());
        EXPECT(0x440c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0234
        gbc.setState(0xca7a, 0xe2b4, 0xf210, 0x6868, 0x45b8, 0xb9fd, 0x0, 0x1);
        gbc.writeMem(0xca7a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe2b4, gbc.sp());
        EXPECT(0xca7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca7a));
        EXPECT(0xe3, gbc.readMem(0xca7b));
        // CB E3 0235
        gbc.setState(0xda6a, 0xf412, 0x9c60, 0x8b84, 0xf08b, 0x6f18, 0x0, 0x1);
        gbc.writeMem(0xda6a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf412, gbc.sp());
        EXPECT(0xda6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda6a));
        EXPECT(0xe3, gbc.readMem(0xda6b));
        // CB E3 0236
        gbc.setState(0xdd3e, 0x5e8c, 0xf4b0, 0x50ef, 0x45ba, 0xdc2f, 0x0, 0x0);
        gbc.writeMem(0xdd3e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5e8c, gbc.sp());
        EXPECT(0xdd40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd3e));
        EXPECT(0xe3, gbc.readMem(0xdd3f));
        // CB E3 0237
        gbc.setState(0xdc6e, 0x6c56, 0xc6e0, 0xece3, 0x9c38, 0x3a06, 0x0, 0x0);
        gbc.writeMem(0xdc6e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6c56, gbc.sp());
        EXPECT(0xdc70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc6e));
        EXPECT(0xe3, gbc.readMem(0xdc6f));
        // CB E3 0238
        gbc.setState(0xc0ad, 0x4a44, 0xd270, 0x333e, 0xcd13, 0x85db, 0x0, 0x0);
        gbc.writeMem(0xc0ad, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4a44, gbc.sp());
        EXPECT(0xc0af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ad));
        EXPECT(0xe3, gbc.readMem(0xc0ae));
        // CB E3 0239
        gbc.setState(0x4861, 0x4280, 0xcd60, 0x5ca9, 0xd8e5, 0x7f37, 0x1, 0x0);
        gbc.writeMem(0x4861, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4280, gbc.sp());
        EXPECT(0x4863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 023A
        gbc.setState(0x5f20, 0xc022, 0xd680, 0xa524, 0x5351, 0xf8cd, 0x0, 0x1);
        gbc.writeMem(0x5f20, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc022, gbc.sp());
        EXPECT(0x5f22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 023C
        gbc.setState(0x3c7e, 0x4761, 0xffe0, 0xf08d, 0x9780, 0xa7df, 0x1, 0x0);
        gbc.writeMem(0x3c7e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4761, gbc.sp());
        EXPECT(0x3c80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 023D
        gbc.setState(0x1540, 0x8453, 0xa000, 0xbbb7, 0x5db4, 0xb46d, 0x1, 0x0);
        gbc.writeMem(0x1540, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8453, gbc.sp());
        EXPECT(0x1542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 023E
        gbc.setState(0x47af, 0xe874, 0xfc70, 0x64b1, 0xc9c5, 0xf55e, 0x1, 0x0);
        gbc.writeMem(0x47af, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe874, gbc.sp());
        EXPECT(0x47b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 023F
        gbc.setState(0x742e, 0xb54, 0xccd0, 0xe3df, 0x8a67, 0xf4, 0x0, 0x0);
        gbc.writeMem(0x742e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb54, gbc.sp());
        EXPECT(0x7430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0240
        gbc.setState(0xd267, 0x69b0, 0x52d0, 0x15ee, 0x1a33, 0x4af9, 0x0, 0x0);
        gbc.writeMem(0xd267, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x69b0, gbc.sp());
        EXPECT(0xd269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd267));
        EXPECT(0xe3, gbc.readMem(0xd268));
        // CB E3 0241
        gbc.setState(0x94e7, 0xba93, 0xf2b0, 0xca5b, 0x9cb8, 0xa5e4, 0x0, 0x0);
        gbc.writeMem(0x94e7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xba93, gbc.sp());
        EXPECT(0x94e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94e7));
        EXPECT(0xe3, gbc.readMem(0x94e8));
        // CB E3 0242
        gbc.setState(0x1fdf, 0xf22c, 0x1810, 0xf6d, 0x60c, 0x7ff9, 0x0, 0x0);
        gbc.writeMem(0x1fdf, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf22c, gbc.sp());
        EXPECT(0x1fe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0243
        gbc.setState(0xd8b1, 0x5ece, 0xa380, 0x138f, 0xa59b, 0xb1e3, 0x1, 0x0);
        gbc.writeMem(0xd8b1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5ece, gbc.sp());
        EXPECT(0xd8b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8b1));
        EXPECT(0xe3, gbc.readMem(0xd8b2));
        // CB E3 0244
        gbc.setState(0x641, 0x9e03, 0x43d0, 0x3115, 0x9b6e, 0xd529, 0x1, 0x1);
        gbc.writeMem(0x641, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9e03, gbc.sp());
        EXPECT(0x643, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0245
        gbc.setState(0x98fd, 0x5b43, 0xebd0, 0xfb3c, 0xc141, 0x1352, 0x1, 0x1);
        gbc.writeMem(0x98fd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5b43, gbc.sp());
        EXPECT(0x98ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98fd));
        EXPECT(0xe3, gbc.readMem(0x98fe));
        // CB E3 0246
        gbc.setState(0x587b, 0x343, 0x1e20, 0x8be7, 0x468b, 0xefcb, 0x1, 0x1);
        gbc.writeMem(0x587b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x343, gbc.sp());
        EXPECT(0x587d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0247
        gbc.setState(0x99d9, 0xc1e6, 0x790, 0xf438, 0xad2a, 0x74, 0x1, 0x1);
        gbc.writeMem(0x99d9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc1e6, gbc.sp());
        EXPECT(0x99db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99d9));
        EXPECT(0xe3, gbc.readMem(0x99da));
        // CB E3 0249
        gbc.setState(0x1031, 0x5bbb, 0xb840, 0xbee5, 0x2945, 0xf969, 0x1, 0x0);
        gbc.writeMem(0x1031, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5bbb, gbc.sp());
        EXPECT(0x1033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 024A
        gbc.setState(0x8210, 0xd429, 0x4740, 0x5341, 0xc667, 0xfe16, 0x0, 0x1);
        gbc.writeMem(0x8210, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd429, gbc.sp());
        EXPECT(0x8212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8210));
        EXPECT(0xe3, gbc.readMem(0x8211));
        // CB E3 024B
        gbc.setState(0x8a93, 0x2806, 0x56a0, 0xee9a, 0xe6, 0xe905, 0x0, 0x0);
        gbc.writeMem(0x8a93, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2806, gbc.sp());
        EXPECT(0x8a95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a93));
        EXPECT(0xe3, gbc.readMem(0x8a94));
        // CB E3 024C
        gbc.setState(0xaa69, 0x56cb, 0xa4e0, 0xb09, 0xda06, 0x5aa4, 0x1, 0x0);
        gbc.writeMem(0xaa69, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x56cb, gbc.sp());
        EXPECT(0xaa6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa69));
        EXPECT(0xe3, gbc.readMem(0xaa6a));
        // CB E3 024D
        gbc.setState(0xa2e9, 0xef74, 0x5e10, 0x1440, 0x5d3f, 0x8d89, 0x0, 0x1);
        gbc.writeMem(0xa2e9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xef74, gbc.sp());
        EXPECT(0xa2eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2e9));
        EXPECT(0xe3, gbc.readMem(0xa2ea));
        // CB E3 024E
        gbc.setState(0xd3cd, 0xe956, 0x9880, 0xcffe, 0x771a, 0x22c0, 0x0, 0x0);
        gbc.writeMem(0xd3cd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe956, gbc.sp());
        EXPECT(0xd3cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3cd));
        EXPECT(0xe3, gbc.readMem(0xd3ce));
        // CB E3 024F
        gbc.setState(0x4753, 0x68cd, 0xaff0, 0xa018, 0xda75, 0x6a3a, 0x0, 0x0);
        gbc.writeMem(0x4753, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x68cd, gbc.sp());
        EXPECT(0x4755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0251
        gbc.setState(0x7e1e, 0xa9a6, 0xdf50, 0x4c91, 0xb68, 0xe8e6, 0x0, 0x1);
        gbc.writeMem(0x7e1e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa9a6, gbc.sp());
        EXPECT(0x7e20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0252
        gbc.setState(0x102f, 0x65a2, 0xdcf0, 0x6f50, 0xf1b7, 0x2de8, 0x1, 0x1);
        gbc.writeMem(0x102f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x65a2, gbc.sp());
        EXPECT(0x1031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0254
        gbc.setState(0x997c, 0x8762, 0x87c0, 0x61dc, 0x45c9, 0x8bec, 0x0, 0x1);
        gbc.writeMem(0x997c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8762, gbc.sp());
        EXPECT(0x997e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x997c));
        EXPECT(0xe3, gbc.readMem(0x997d));
        // CB E3 0255
        gbc.setState(0xc493, 0xe3ee, 0xba10, 0x62c4, 0x704, 0x5401, 0x1, 0x1);
        gbc.writeMem(0xc493, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe3ee, gbc.sp());
        EXPECT(0xc495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc493));
        EXPECT(0xe3, gbc.readMem(0xc494));
        // CB E3 0256
        gbc.setState(0x82e0, 0x7925, 0xde40, 0x5755, 0xc8fd, 0x294d, 0x1, 0x0);
        gbc.writeMem(0x82e0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7925, gbc.sp());
        EXPECT(0x82e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82e0));
        EXPECT(0xe3, gbc.readMem(0x82e1));
        // CB E3 0257
        gbc.setState(0x4fc9, 0x1ed2, 0x2d40, 0x83c8, 0x67c9, 0x2ecd, 0x0, 0x0);
        gbc.writeMem(0x4fc9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1ed2, gbc.sp());
        EXPECT(0x4fcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0258
        gbc.setState(0x2557, 0x9d9e, 0x8da0, 0x7a01, 0x1fb, 0xc11d, 0x1, 0x0);
        gbc.writeMem(0x2557, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9d9e, gbc.sp());
        EXPECT(0x2559, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 025A
        gbc.setState(0xa50a, 0x1844, 0xe3e0, 0xaf1b, 0x740a, 0x7576, 0x0, 0x1);
        gbc.writeMem(0xa50a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1844, gbc.sp());
        EXPECT(0xa50c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa50a));
        EXPECT(0xe3, gbc.readMem(0xa50b));
        // CB E3 025B
        gbc.setState(0x3fa2, 0xb5ca, 0x2c50, 0xe49e, 0x5861, 0x3d9c, 0x1, 0x1);
        gbc.writeMem(0x3fa2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb5ca, gbc.sp());
        EXPECT(0x3fa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 025C
        gbc.setState(0xcb17, 0xfd8c, 0x9010, 0xb80b, 0x14a8, 0x4a00, 0x1, 0x1);
        gbc.writeMem(0xcb17, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfd8c, gbc.sp());
        EXPECT(0xcb19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb17));
        EXPECT(0xe3, gbc.readMem(0xcb18));
        // CB E3 025D
        gbc.setState(0x61af, 0x88ef, 0x8ac0, 0x69bb, 0x78cc, 0x539b, 0x0, 0x1);
        gbc.writeMem(0x61af, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x88ef, gbc.sp());
        EXPECT(0x61b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 025E
        gbc.setState(0x82af, 0x9d9e, 0x4b00, 0x3c7, 0x46ed, 0xf3ca, 0x1, 0x1);
        gbc.writeMem(0x82af, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9d9e, gbc.sp());
        EXPECT(0x82b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82af));
        EXPECT(0xe3, gbc.readMem(0x82b0));
        // CB E3 0261
        gbc.setState(0x64e6, 0x8880, 0x790, 0x9fe7, 0x58c7, 0xf1df, 0x0, 0x0);
        gbc.writeMem(0x64e6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8880, gbc.sp());
        EXPECT(0x64e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0262
        gbc.setState(0x7b24, 0x8018, 0xa0b0, 0x84eb, 0xe74d, 0xeb41, 0x0, 0x0);
        gbc.writeMem(0x7b24, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8018, gbc.sp());
        EXPECT(0x7b26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0263
        gbc.setState(0xa0f7, 0x6050, 0xee00, 0xe924, 0xd32a, 0x8956, 0x1, 0x0);
        gbc.writeMem(0xa0f7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6050, gbc.sp());
        EXPECT(0xa0f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f7));
        EXPECT(0xe3, gbc.readMem(0xa0f8));
        // CB E3 0264
        gbc.setState(0x33e8, 0x530a, 0x6040, 0xd309, 0x34b6, 0x3b03, 0x1, 0x1);
        gbc.writeMem(0x33e8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x530a, gbc.sp());
        EXPECT(0x33ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0265
        gbc.setState(0xef37, 0xb655, 0xeea0, 0x2beb, 0x5fb3, 0x8778, 0x1, 0x0);
        gbc.writeMem(0xef37, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb655, gbc.sp());
        EXPECT(0xef39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef37));
        EXPECT(0xe3, gbc.readMem(0xef38));
        // CB E3 0266
        gbc.setState(0xe243, 0xe7a2, 0x2980, 0x2e46, 0x9a01, 0xefb, 0x1, 0x1);
        gbc.writeMem(0xe243, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe7a2, gbc.sp());
        EXPECT(0xe245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe243));
        EXPECT(0xe3, gbc.readMem(0xe244));
        // CB E3 0267
        gbc.setState(0x68f7, 0x57cf, 0xf7f0, 0xd5d5, 0x2231, 0x3c9f, 0x1, 0x0);
        gbc.writeMem(0x68f7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x57cf, gbc.sp());
        EXPECT(0x68f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0268
        gbc.setState(0xd9a2, 0xcae1, 0x1030, 0x65d7, 0xa548, 0x261b, 0x1, 0x0);
        gbc.writeMem(0xd9a2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xcae1, gbc.sp());
        EXPECT(0xd9a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9a2));
        EXPECT(0xe3, gbc.readMem(0xd9a3));
        // CB E3 0269
        gbc.setState(0x489a, 0x53ef, 0x76e0, 0xf0e5, 0xea26, 0xbb63, 0x1, 0x1);
        gbc.writeMem(0x489a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x53ef, gbc.sp());
        EXPECT(0x489c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 026A
        gbc.setState(0x949e, 0xc2cc, 0x6820, 0x215b, 0xaafd, 0xdfb9, 0x0, 0x0);
        gbc.writeMem(0x949e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc2cc, gbc.sp());
        EXPECT(0x94a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x949e));
        EXPECT(0xe3, gbc.readMem(0x949f));
        // CB E3 026B
        gbc.setState(0x3a5c, 0xc2ad, 0x1f30, 0xaeff, 0xa436, 0x31c0, 0x0, 0x1);
        gbc.writeMem(0x3a5c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc2ad, gbc.sp());
        EXPECT(0x3a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 026C
        gbc.setState(0xe1cc, 0x7606, 0x850, 0x5161, 0x7c89, 0x19d2, 0x0, 0x1);
        gbc.writeMem(0xe1cc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7606, gbc.sp());
        EXPECT(0xe1ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1cc));
        EXPECT(0xe3, gbc.readMem(0xe1cd));
        // CB E3 026D
        gbc.setState(0x1dde, 0x3743, 0x770, 0x6152, 0xa7fd, 0x625, 0x0, 0x1);
        gbc.writeMem(0x1dde, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3743, gbc.sp());
        EXPECT(0x1de0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 026E
        gbc.setState(0xa1bd, 0x110f, 0x2290, 0x22e3, 0x6a62, 0xbd00, 0x0, 0x1);
        gbc.writeMem(0xa1bd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x110f, gbc.sp());
        EXPECT(0xa1bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1bd));
        EXPECT(0xe3, gbc.readMem(0xa1be));
        // CB E3 026F
        gbc.setState(0x9549, 0x1c61, 0xe9a0, 0x6d9a, 0x9435, 0xc15a, 0x0, 0x1);
        gbc.writeMem(0x9549, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1c61, gbc.sp());
        EXPECT(0x954b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9549));
        EXPECT(0xe3, gbc.readMem(0x954a));
        // CB E3 0270
        gbc.setState(0x964b, 0x1ec8, 0xaa10, 0x1654, 0x8ee7, 0x3464, 0x1, 0x0);
        gbc.writeMem(0x964b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1ec8, gbc.sp());
        EXPECT(0x964d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x964b));
        EXPECT(0xe3, gbc.readMem(0x964c));
        // CB E3 0271
        gbc.setState(0x7f74, 0x9ac4, 0x3860, 0x50f4, 0x4ebc, 0x4200, 0x0, 0x0);
        gbc.writeMem(0x7f74, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9ac4, gbc.sp());
        EXPECT(0x7f76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0272
        gbc.setState(0x6139, 0xe11b, 0x8830, 0x59a2, 0x93a1, 0x5138, 0x1, 0x0);
        gbc.writeMem(0x6139, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe11b, gbc.sp());
        EXPECT(0x613b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0273
        gbc.setState(0xe68f, 0x9899, 0xfa50, 0xe63, 0x570f, 0x9774, 0x0, 0x0);
        gbc.writeMem(0xe68f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9899, gbc.sp());
        EXPECT(0xe691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe68f));
        EXPECT(0xe3, gbc.readMem(0xe690));
        // CB E3 0274
        gbc.setState(0x4dfb, 0xc445, 0xb5b0, 0xafc4, 0x7eb3, 0x52bd, 0x0, 0x0);
        gbc.writeMem(0x4dfb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc445, gbc.sp());
        EXPECT(0x4dfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0275
        gbc.setState(0x8d6d, 0x9f2, 0xf640, 0xa725, 0x3478, 0xf5fb, 0x0, 0x1);
        gbc.writeMem(0x8d6d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9f2, gbc.sp());
        EXPECT(0x8d6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d6d));
        EXPECT(0xe3, gbc.readMem(0x8d6e));
        // CB E3 0276
        gbc.setState(0xac44, 0x8e2d, 0xa430, 0x3bcc, 0x63b8, 0x7e49, 0x0, 0x0);
        gbc.writeMem(0xac44, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8e2d, gbc.sp());
        EXPECT(0xac46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac44));
        EXPECT(0xe3, gbc.readMem(0xac45));
        // CB E3 0277
        gbc.setState(0x3b11, 0xd80, 0xbef0, 0xcdfa, 0x961d, 0x3e3d, 0x0, 0x1);
        gbc.writeMem(0x3b11, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd80, gbc.sp());
        EXPECT(0x3b13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0278
        gbc.setState(0xa3f9, 0xbfff, 0xea40, 0x57e2, 0x7782, 0x3c01, 0x1, 0x1);
        gbc.writeMem(0xa3f9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbfff, gbc.sp());
        EXPECT(0xa3fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f9));
        EXPECT(0xe3, gbc.readMem(0xa3fa));
        // CB E3 0279
        gbc.setState(0x800d, 0x4903, 0x52b0, 0xc590, 0xad7b, 0xea01, 0x1, 0x0);
        gbc.writeMem(0x800d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4903, gbc.sp());
        EXPECT(0x800f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x800d));
        EXPECT(0xe3, gbc.readMem(0x800e));
        // CB E3 027A
        gbc.setState(0xbaef, 0x97ee, 0x4f50, 0x19a2, 0xf6d7, 0x98a0, 0x1, 0x0);
        gbc.writeMem(0xbaef, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x97ee, gbc.sp());
        EXPECT(0xbaf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaef));
        EXPECT(0xe3, gbc.readMem(0xbaf0));
        // CB E3 027B
        gbc.setState(0x9765, 0x4154, 0x1d50, 0x90ea, 0x5376, 0xa49a, 0x1, 0x0);
        gbc.writeMem(0x9765, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4154, gbc.sp());
        EXPECT(0x9767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9765));
        EXPECT(0xe3, gbc.readMem(0x9766));
        // CB E3 027E
        gbc.setState(0xca21, 0xea3b, 0x39f0, 0xf7d1, 0xfe35, 0x41e2, 0x1, 0x0);
        gbc.writeMem(0xca21, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xea3b, gbc.sp());
        EXPECT(0xca23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca21));
        EXPECT(0xe3, gbc.readMem(0xca22));
        // CB E3 027F
        gbc.setState(0x7b5, 0x5173, 0xae30, 0xb67d, 0x270f, 0xdfa, 0x0, 0x1);
        gbc.writeMem(0x7b5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5173, gbc.sp());
        EXPECT(0x7b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0280
        gbc.setState(0x36c7, 0x555c, 0xa00, 0x723e, 0x8567, 0x78fb, 0x1, 0x1);
        gbc.writeMem(0x36c7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x555c, gbc.sp());
        EXPECT(0x36c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0281
        gbc.setState(0xd77c, 0x5d86, 0xe2b0, 0x74bb, 0x4d10, 0x67fd, 0x0, 0x0);
        gbc.writeMem(0xd77c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5d86, gbc.sp());
        EXPECT(0xd77e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd77c));
        EXPECT(0xe3, gbc.readMem(0xd77d));
        // CB E3 0282
        gbc.setState(0x5656, 0x6965, 0x2d00, 0x89c1, 0xc348, 0x36f4, 0x0, 0x0);
        gbc.writeMem(0x5656, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6965, gbc.sp());
        EXPECT(0x5658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0283
        gbc.setState(0x1a8b, 0xf73e, 0xd220, 0xd620, 0x4fbb, 0x80e3, 0x0, 0x0);
        gbc.writeMem(0x1a8b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf73e, gbc.sp());
        EXPECT(0x1a8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0284
        gbc.setState(0x26d3, 0x6628, 0xbd0, 0x8652, 0x1d0, 0xda83, 0x0, 0x1);
        gbc.writeMem(0x26d3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6628, gbc.sp());
        EXPECT(0x26d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0285
        gbc.setState(0x3afc, 0x2fa0, 0x2600, 0xedb0, 0xe65f, 0x2d6, 0x1, 0x1);
        gbc.writeMem(0x3afc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2fa0, gbc.sp());
        EXPECT(0x3afe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0286
        gbc.setState(0x479f, 0xb828, 0xe4d0, 0x85a9, 0x36f4, 0xbd0, 0x0, 0x0);
        gbc.writeMem(0x479f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb828, gbc.sp());
        EXPECT(0x47a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0287
        gbc.setState(0xe426, 0x8542, 0xff80, 0x1e0e, 0xc7c0, 0x46ff, 0x1, 0x1);
        gbc.writeMem(0xe426, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8542, gbc.sp());
        EXPECT(0xe428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe426));
        EXPECT(0xe3, gbc.readMem(0xe427));
        // CB E3 0288
        gbc.setState(0x9acb, 0xa42f, 0x1fd0, 0xa52b, 0x8d86, 0x797c, 0x0, 0x1);
        gbc.writeMem(0x9acb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa42f, gbc.sp());
        EXPECT(0x9acd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9acb));
        EXPECT(0xe3, gbc.readMem(0x9acc));
        // CB E3 0289
        gbc.setState(0xaf23, 0x16e4, 0x200, 0x3d8e, 0xe5df, 0x6c24, 0x0, 0x1);
        gbc.writeMem(0xaf23, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x16e4, gbc.sp());
        EXPECT(0xaf25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf23));
        EXPECT(0xe3, gbc.readMem(0xaf24));
        // CB E3 028A
        gbc.setState(0xa7f9, 0xc53d, 0x8ae0, 0x77c, 0x5abc, 0x8087, 0x1, 0x0);
        gbc.writeMem(0xa7f9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc53d, gbc.sp());
        EXPECT(0xa7fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f9));
        EXPECT(0xe3, gbc.readMem(0xa7fa));
        // CB E3 028B
        gbc.setState(0x595d, 0x7e34, 0x4890, 0x3280, 0x35eb, 0xc537, 0x1, 0x1);
        gbc.writeMem(0x595d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7e34, gbc.sp());
        EXPECT(0x595f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 028C
        gbc.setState(0x1b8b, 0x5781, 0xcaa0, 0x1349, 0xb96c, 0xcea8, 0x1, 0x0);
        gbc.writeMem(0x1b8b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5781, gbc.sp());
        EXPECT(0x1b8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 028D
        gbc.setState(0x49db, 0x1f35, 0x1ec0, 0x96a3, 0xb4d5, 0x93d2, 0x0, 0x0);
        gbc.writeMem(0x49db, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1f35, gbc.sp());
        EXPECT(0x49dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 028E
        gbc.setState(0xb5fc, 0x7c91, 0xd0a0, 0x1d69, 0x4d20, 0xa5af, 0x1, 0x0);
        gbc.writeMem(0xb5fc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7c91, gbc.sp());
        EXPECT(0xb5fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5fc));
        EXPECT(0xe3, gbc.readMem(0xb5fd));
        // CB E3 028F
        gbc.setState(0xaeba, 0xeaa1, 0xbf50, 0xf63b, 0x836d, 0x6a0d, 0x1, 0x1);
        gbc.writeMem(0xaeba, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xeaa1, gbc.sp());
        EXPECT(0xaebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeba));
        EXPECT(0xe3, gbc.readMem(0xaebb));
        // CB E3 0290
        gbc.setState(0xba05, 0xb043, 0x68c0, 0xadb3, 0x915d, 0xb2ce, 0x0, 0x0);
        gbc.writeMem(0xba05, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb043, gbc.sp());
        EXPECT(0xba07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba05));
        EXPECT(0xe3, gbc.readMem(0xba06));
        // CB E3 0291
        gbc.setState(0x1fab, 0x3ddb, 0x77b0, 0x9580, 0xaf88, 0xde92, 0x1, 0x0);
        gbc.writeMem(0x1fab, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3ddb, gbc.sp());
        EXPECT(0x1fad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0292
        gbc.setState(0x9dcb, 0x26ed, 0xaac0, 0x54a, 0xbb6d, 0xe8f5, 0x1, 0x0);
        gbc.writeMem(0x9dcb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x26ed, gbc.sp());
        EXPECT(0x9dcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dcb));
        EXPECT(0xe3, gbc.readMem(0x9dcc));
        // CB E3 0293
        gbc.setState(0x7c3b, 0x99d8, 0x7470, 0xd46a, 0x6b3e, 0x9add, 0x0, 0x1);
        gbc.writeMem(0x7c3b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x99d8, gbc.sp());
        EXPECT(0x7c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0294
        gbc.setState(0xaef3, 0x8fc8, 0x2c10, 0xf31b, 0xd134, 0xac1f, 0x0, 0x1);
        gbc.writeMem(0xaef3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8fc8, gbc.sp());
        EXPECT(0xaef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaef3));
        EXPECT(0xe3, gbc.readMem(0xaef4));
        // CB E3 0295
        gbc.setState(0x5456, 0x5d92, 0x14c0, 0xb17b, 0x28cd, 0x1308, 0x0, 0x1);
        gbc.writeMem(0x5456, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5d92, gbc.sp());
        EXPECT(0x5458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0296
        gbc.setState(0xc8c, 0x234b, 0xed80, 0x5f1c, 0x3e60, 0xd775, 0x0, 0x1);
        gbc.writeMem(0xc8c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x234b, gbc.sp());
        EXPECT(0xc8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0297
        gbc.setState(0x6aff, 0x38d7, 0xdca0, 0x34a2, 0xddea, 0xbec2, 0x1, 0x1);
        gbc.writeMem(0x6aff, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x38d7, gbc.sp());
        EXPECT(0x6b01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0299
        gbc.setState(0x3cd2, 0x9ea9, 0x2be0, 0x89b4, 0xb60f, 0xbda9, 0x0, 0x1);
        gbc.writeMem(0x3cd2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9ea9, gbc.sp());
        EXPECT(0x3cd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 029A
        gbc.setState(0x951a, 0x162, 0xd9a0, 0x8e32, 0xdbaa, 0x974c, 0x1, 0x0);
        gbc.writeMem(0x951a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x162, gbc.sp());
        EXPECT(0x951c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x951a));
        EXPECT(0xe3, gbc.readMem(0x951b));
        // CB E3 029B
        gbc.setState(0x3760, 0xdc4c, 0x23c0, 0x4dd9, 0x8f04, 0x689a, 0x1, 0x1);
        gbc.writeMem(0x3760, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdc4c, gbc.sp());
        EXPECT(0x3762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 029C
        gbc.setState(0xab79, 0xe0ea, 0xf340, 0xf822, 0x8b87, 0x6b01, 0x0, 0x1);
        gbc.writeMem(0xab79, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe0ea, gbc.sp());
        EXPECT(0xab7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab79));
        EXPECT(0xe3, gbc.readMem(0xab7a));
        // CB E3 029D
        gbc.setState(0xe0ce, 0x8db5, 0x5b90, 0xc0b4, 0x653e, 0x453e, 0x1, 0x0);
        gbc.writeMem(0xe0ce, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8db5, gbc.sp());
        EXPECT(0xe0d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ce));
        EXPECT(0xe3, gbc.readMem(0xe0cf));
        // CB E3 029E
        gbc.setState(0x6dfe, 0x9cb, 0xb9c0, 0xb43b, 0xbba8, 0x55d1, 0x1, 0x0);
        gbc.writeMem(0x6dfe, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9cb, gbc.sp());
        EXPECT(0x6e00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 029F
        gbc.setState(0x5385, 0x6424, 0x59a0, 0xc0b2, 0x10, 0x4f0, 0x0, 0x1);
        gbc.writeMem(0x5385, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6424, gbc.sp());
        EXPECT(0x5387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02A0
        gbc.setState(0xef90, 0x91d6, 0xa4c0, 0xc4e9, 0x4c7f, 0x147f, 0x0, 0x1);
        gbc.writeMem(0xef90, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x91d6, gbc.sp());
        EXPECT(0xef92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef90));
        EXPECT(0xe3, gbc.readMem(0xef91));
        // CB E3 02A1
        gbc.setState(0xe74f, 0xf5fa, 0x6100, 0xced7, 0xeb10, 0xdadb, 0x0, 0x0);
        gbc.writeMem(0xe74f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf5fa, gbc.sp());
        EXPECT(0xe751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe74f));
        EXPECT(0xe3, gbc.readMem(0xe750));
        // CB E3 02A2
        gbc.setState(0x29b4, 0xe26e, 0x2af0, 0x74e1, 0x9dcc, 0xcbbc, 0x1, 0x1);
        gbc.writeMem(0x29b4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe26e, gbc.sp());
        EXPECT(0x29b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 02A3
        gbc.setState(0x7461, 0xc12d, 0xae20, 0x7b09, 0x8b04, 0x635c, 0x1, 0x1);
        gbc.writeMem(0x7461, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc12d, gbc.sp());
        EXPECT(0x7463, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02A4
        gbc.setState(0x9517, 0x8379, 0x1c0, 0x9325, 0xbc20, 0x1778, 0x0, 0x0);
        gbc.writeMem(0x9517, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8379, gbc.sp());
        EXPECT(0x9519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9517));
        EXPECT(0xe3, gbc.readMem(0x9518));
        // CB E3 02A5
        gbc.setState(0x870c, 0x2f03, 0x5df0, 0x9d82, 0x33b9, 0xb996, 0x1, 0x1);
        gbc.writeMem(0x870c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2f03, gbc.sp());
        EXPECT(0x870e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x870c));
        EXPECT(0xe3, gbc.readMem(0x870d));
        // CB E3 02A6
        gbc.setState(0xb29f, 0x90e8, 0xe0c0, 0xb33, 0xac32, 0xa4b0, 0x1, 0x0);
        gbc.writeMem(0xb29f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x90e8, gbc.sp());
        EXPECT(0xb2a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb29f));
        EXPECT(0xe3, gbc.readMem(0xb2a0));
        // CB E3 02A7
        gbc.setState(0x5462, 0x85a0, 0xe500, 0x3ef3, 0x4271, 0x9784, 0x0, 0x0);
        gbc.writeMem(0x5462, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x85a0, gbc.sp());
        EXPECT(0x5464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02A8
        gbc.setState(0x7ac7, 0xc21f, 0xf550, 0x842, 0x834a, 0x45f4, 0x0, 0x1);
        gbc.writeMem(0x7ac7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc21f, gbc.sp());
        EXPECT(0x7ac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 02A9
        gbc.setState(0x1978, 0x9cb6, 0xfc60, 0xfde7, 0x8890, 0x580b, 0x1, 0x0);
        gbc.writeMem(0x1978, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9cb6, gbc.sp());
        EXPECT(0x197a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02AA
        gbc.setState(0xc4ad, 0x12ab, 0x10b0, 0xb8b4, 0xb4ee, 0x3211, 0x1, 0x0);
        gbc.writeMem(0xc4ad, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x12ab, gbc.sp());
        EXPECT(0xc4af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ad));
        EXPECT(0xe3, gbc.readMem(0xc4ae));
        // CB E3 02AB
        gbc.setState(0xc957, 0x80cb, 0x7720, 0x4710, 0x1e4d, 0xb361, 0x1, 0x0);
        gbc.writeMem(0xc957, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x80cb, gbc.sp());
        EXPECT(0xc959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc957));
        EXPECT(0xe3, gbc.readMem(0xc958));
        // CB E3 02AC
        gbc.setState(0x8ccc, 0x2677, 0x2630, 0x8807, 0x2aa6, 0x5612, 0x0, 0x1);
        gbc.writeMem(0x8ccc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2677, gbc.sp());
        EXPECT(0x8cce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ccc));
        EXPECT(0xe3, gbc.readMem(0x8ccd));
        // CB E3 02AD
        gbc.setState(0xa400, 0x1fff, 0x90b0, 0x1b60, 0x229, 0xa7e7, 0x0, 0x1);
        gbc.writeMem(0xa400, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1fff, gbc.sp());
        EXPECT(0xa402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa400));
        EXPECT(0xe3, gbc.readMem(0xa401));
        // CB E3 02AE
        gbc.setState(0x7e1f, 0x1ec8, 0x6760, 0xf397, 0x74a3, 0xcfe3, 0x0, 0x1);
        gbc.writeMem(0x7e1f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1ec8, gbc.sp());
        EXPECT(0x7e21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02AF
        gbc.setState(0xec64, 0xa9f6, 0xdaf0, 0xba00, 0xb56f, 0xb750, 0x1, 0x0);
        gbc.writeMem(0xec64, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa9f6, gbc.sp());
        EXPECT(0xec66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec64));
        EXPECT(0xe3, gbc.readMem(0xec65));
        // CB E3 02B0
        gbc.setState(0xebbb, 0x94d8, 0x8e50, 0x8fd3, 0x7d18, 0x964, 0x1, 0x1);
        gbc.writeMem(0xebbb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x94d8, gbc.sp());
        EXPECT(0xebbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebbb));
        EXPECT(0xe3, gbc.readMem(0xebbc));
        // CB E3 02B1
        gbc.setState(0x3508, 0xbfd5, 0x88e0, 0xc2cb, 0xac36, 0x6e8, 0x1, 0x0);
        gbc.writeMem(0x3508, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbfd5, gbc.sp());
        EXPECT(0x350a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02B2
        gbc.setState(0xcd73, 0x8ee5, 0x3b80, 0x9920, 0xd3a6, 0x84ec, 0x0, 0x1);
        gbc.writeMem(0xcd73, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8ee5, gbc.sp());
        EXPECT(0xcd75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd73));
        EXPECT(0xe3, gbc.readMem(0xcd74));
        // CB E3 02B3
        gbc.setState(0x9339, 0x41ad, 0xe8e0, 0x1314, 0x903e, 0x40ef, 0x0, 0x1);
        gbc.writeMem(0x9339, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x41ad, gbc.sp());
        EXPECT(0x933b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9339));
        EXPECT(0xe3, gbc.readMem(0x933a));
        // CB E3 02B4
        gbc.setState(0xcfd2, 0x52cc, 0xeca0, 0x6d0a, 0x87db, 0x5c2, 0x0, 0x0);
        gbc.writeMem(0xcfd2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x52cc, gbc.sp());
        EXPECT(0xcfd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd2));
        EXPECT(0xe3, gbc.readMem(0xcfd3));
        // CB E3 02B6
        gbc.setState(0xa140, 0x23dd, 0xbce0, 0x94a, 0x5aa7, 0x4a06, 0x0, 0x1);
        gbc.writeMem(0xa140, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x23dd, gbc.sp());
        EXPECT(0xa142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa140));
        EXPECT(0xe3, gbc.readMem(0xa141));
        // CB E3 02B7
        gbc.setState(0x7eee, 0x1003, 0x9710, 0x796b, 0x8968, 0x870b, 0x0, 0x0);
        gbc.writeMem(0x7eee, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1003, gbc.sp());
        EXPECT(0x7ef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 02B8
        gbc.setState(0xe390, 0x344b, 0x49f0, 0x8e65, 0x3eaf, 0xec92, 0x0, 0x0);
        gbc.writeMem(0xe390, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x344b, gbc.sp());
        EXPECT(0xe392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe390));
        EXPECT(0xe3, gbc.readMem(0xe391));
        // CB E3 02B9
        gbc.setState(0xd6de, 0x8361, 0x92c0, 0x5f37, 0x9847, 0x26a8, 0x1, 0x1);
        gbc.writeMem(0xd6de, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8361, gbc.sp());
        EXPECT(0xd6e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6de));
        EXPECT(0xe3, gbc.readMem(0xd6df));
        // CB E3 02BA
        gbc.setState(0x2a4a, 0xad2a, 0x23a0, 0xf66d, 0x1b73, 0xdae5, 0x0, 0x0);
        gbc.writeMem(0x2a4a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xad2a, gbc.sp());
        EXPECT(0x2a4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02BB
        gbc.setState(0x6add, 0x69ac, 0xf190, 0xa0a0, 0x4d72, 0x2ea3, 0x0, 0x1);
        gbc.writeMem(0x6add, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x69ac, gbc.sp());
        EXPECT(0x6adf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 02BC
        gbc.setState(0xcef5, 0xc10c, 0x34a0, 0xc267, 0x9fe6, 0x3e84, 0x1, 0x1);
        gbc.writeMem(0xcef5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc10c, gbc.sp());
        EXPECT(0xcef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef5));
        EXPECT(0xe3, gbc.readMem(0xcef6));
        // CB E3 02BD
        gbc.setState(0x207a, 0xa704, 0xe3d0, 0x9054, 0xdb85, 0xc6cb, 0x0, 0x0);
        gbc.writeMem(0x207a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa704, gbc.sp());
        EXPECT(0x207c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 02BE
        gbc.setState(0x205, 0x7184, 0x50, 0x2034, 0x806a, 0x872, 0x0, 0x0);
        gbc.writeMem(0x205, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7184, gbc.sp());
        EXPECT(0x207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 02BF
        gbc.setState(0x90a4, 0x2294, 0xb270, 0x4117, 0xdc51, 0xe6f8, 0x1, 0x0);
        gbc.writeMem(0x90a4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2294, gbc.sp());
        EXPECT(0x90a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90a4));
        EXPECT(0xe3, gbc.readMem(0x90a5));
        // CB E3 02C0
        gbc.setState(0x64f6, 0xb77, 0x26f0, 0x87d9, 0x9d1d, 0x79f, 0x1, 0x0);
        gbc.writeMem(0x64f6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb77, gbc.sp());
        EXPECT(0x64f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 02C1
        gbc.setState(0x3220, 0xb82e, 0x310, 0xa066, 0x4a17, 0x3bef, 0x1, 0x0);
        gbc.writeMem(0x3220, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb82e, gbc.sp());
        EXPECT(0x3222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 02C2
        gbc.setState(0xdd55, 0x8af4, 0x3230, 0xf57, 0x4231, 0xb366, 0x1, 0x0);
        gbc.writeMem(0xdd55, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8af4, gbc.sp());
        EXPECT(0xdd57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd55));
        EXPECT(0xe3, gbc.readMem(0xdd56));
        // CB E3 02C3
        gbc.setState(0xa255, 0x2252, 0x4480, 0x2d21, 0x397f, 0xb4a5, 0x1, 0x0);
        gbc.writeMem(0xa255, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2252, gbc.sp());
        EXPECT(0xa257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa255));
        EXPECT(0xe3, gbc.readMem(0xa256));
        // CB E3 02C4
        gbc.setState(0x6d1e, 0x1852, 0x24c0, 0x7305, 0xbd6, 0x986, 0x0, 0x1);
        gbc.writeMem(0x6d1e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1852, gbc.sp());
        EXPECT(0x6d20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02C5
        gbc.setState(0xe015, 0x9034, 0x1910, 0xe033, 0xdfbf, 0x8e43, 0x0, 0x0);
        gbc.writeMem(0xe015, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9034, gbc.sp());
        EXPECT(0xe017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe015));
        EXPECT(0xe3, gbc.readMem(0xe016));
        // CB E3 02C6
        gbc.setState(0x2554, 0x4db2, 0x3fb0, 0x838a, 0x6061, 0xec06, 0x0, 0x1);
        gbc.writeMem(0x2554, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4db2, gbc.sp());
        EXPECT(0x2556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 02C7
        gbc.setState(0xdf87, 0xf28a, 0x1f0, 0x3874, 0xba71, 0x6a1b, 0x1, 0x1);
        gbc.writeMem(0xdf87, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf28a, gbc.sp());
        EXPECT(0xdf89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf87));
        EXPECT(0xe3, gbc.readMem(0xdf88));
        // CB E3 02C8
        gbc.setState(0x7942, 0x32b3, 0xc140, 0xccb6, 0x1f40, 0x8459, 0x1, 0x0);
        gbc.writeMem(0x7942, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x32b3, gbc.sp());
        EXPECT(0x7944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02C9
        gbc.setState(0x241, 0xfe81, 0x5ed0, 0x4a31, 0x3cae, 0xe9eb, 0x1, 0x1);
        gbc.writeMem(0x241, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfe81, gbc.sp());
        EXPECT(0x243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 02CA
        gbc.setState(0xbe8b, 0xe567, 0x6ae0, 0xedb0, 0xb759, 0x3f23, 0x0, 0x1);
        gbc.writeMem(0xbe8b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe567, gbc.sp());
        EXPECT(0xbe8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe8b));
        EXPECT(0xe3, gbc.readMem(0xbe8c));
        // CB E3 02CB
        gbc.setState(0x763a, 0x9f74, 0x2b70, 0xe665, 0xf376, 0x3f8f, 0x1, 0x0);
        gbc.writeMem(0x763a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9f74, gbc.sp());
        EXPECT(0x763c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 02CC
        gbc.setState(0xc14c, 0x2ba9, 0xc9f0, 0xe61e, 0x3dac, 0x96df, 0x0, 0x0);
        gbc.writeMem(0xc14c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2ba9, gbc.sp());
        EXPECT(0xc14e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc14c));
        EXPECT(0xe3, gbc.readMem(0xc14d));
        // CB E3 02CD
        gbc.setState(0x3060, 0x53fe, 0xba30, 0xf9d, 0xa98f, 0x14e, 0x0, 0x0);
        gbc.writeMem(0x3060, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x53fe, gbc.sp());
        EXPECT(0x3062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 02CE
        gbc.setState(0x927, 0xa68c, 0x4340, 0x4ae1, 0xddc9, 0x77bf, 0x1, 0x1);
        gbc.writeMem(0x927, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa68c, gbc.sp());
        EXPECT(0x929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02CF
        gbc.setState(0xdce9, 0x81a6, 0x8530, 0x978c, 0xb853, 0xc0a3, 0x0, 0x0);
        gbc.writeMem(0xdce9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x81a6, gbc.sp());
        EXPECT(0xdceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdce9));
        EXPECT(0xe3, gbc.readMem(0xdcea));
        // CB E3 02D0
        gbc.setState(0x6425, 0xf878, 0x5700, 0x8158, 0x7505, 0xd3a0, 0x1, 0x0);
        gbc.writeMem(0x6425, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf878, gbc.sp());
        EXPECT(0x6427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02D1
        gbc.setState(0x7398, 0x8157, 0xc280, 0xd16e, 0x9a56, 0x3f24, 0x1, 0x1);
        gbc.writeMem(0x7398, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8157, gbc.sp());
        EXPECT(0x739a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02D2
        gbc.setState(0xee15, 0xb31c, 0x5380, 0x3462, 0xbed0, 0xa4ec, 0x0, 0x1);
        gbc.writeMem(0xee15, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb31c, gbc.sp());
        EXPECT(0xee17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee15));
        EXPECT(0xe3, gbc.readMem(0xee16));
        // CB E3 02D3
        gbc.setState(0xce25, 0xb550, 0x7a70, 0x3395, 0x912a, 0xb116, 0x1, 0x0);
        gbc.writeMem(0xce25, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb550, gbc.sp());
        EXPECT(0xce27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce25));
        EXPECT(0xe3, gbc.readMem(0xce26));
        // CB E3 02D4
        gbc.setState(0x166b, 0x852, 0xbb60, 0xb1ca, 0x9715, 0xb6a, 0x0, 0x0);
        gbc.writeMem(0x166b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x852, gbc.sp());
        EXPECT(0x166d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02D5
        gbc.setState(0x8afc, 0xea88, 0xb430, 0x95c8, 0x2fca, 0xedee, 0x1, 0x1);
        gbc.writeMem(0x8afc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xea88, gbc.sp());
        EXPECT(0x8afe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8afc));
        EXPECT(0xe3, gbc.readMem(0x8afd));
        // CB E3 02D6
        gbc.setState(0x8e64, 0x4332, 0x4f00, 0xc27, 0x6359, 0x1748, 0x1, 0x1);
        gbc.writeMem(0x8e64, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4332, gbc.sp());
        EXPECT(0x8e66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e64));
        EXPECT(0xe3, gbc.readMem(0x8e65));
        // CB E3 02D7
        gbc.setState(0x4eb0, 0x138b, 0xf440, 0x8bfb, 0x15c7, 0xd54d, 0x0, 0x1);
        gbc.writeMem(0x4eb0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x138b, gbc.sp());
        EXPECT(0x4eb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02D8
        gbc.setState(0x6bb0, 0xf1a5, 0x2460, 0xda8b, 0x59b9, 0x3424, 0x1, 0x1);
        gbc.writeMem(0x6bb0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf1a5, gbc.sp());
        EXPECT(0x6bb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02D9
        gbc.setState(0x9ece, 0x3907, 0xb9d0, 0xb7a7, 0xb224, 0xca5f, 0x1, 0x1);
        gbc.writeMem(0x9ece, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3907, gbc.sp());
        EXPECT(0x9ed0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ece));
        EXPECT(0xe3, gbc.readMem(0x9ecf));
        // CB E3 02DA
        gbc.setState(0x6683, 0xc014, 0x9800, 0x2a5b, 0xf54d, 0xd147, 0x0, 0x1);
        gbc.writeMem(0x6683, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc014, gbc.sp());
        EXPECT(0x6685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02DB
        gbc.setState(0xd76a, 0x4b03, 0x5410, 0xa85d, 0xc721, 0xfce9, 0x0, 0x1);
        gbc.writeMem(0xd76a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4b03, gbc.sp());
        EXPECT(0xd76c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd76a));
        EXPECT(0xe3, gbc.readMem(0xd76b));
        // CB E3 02DC
        gbc.setState(0x3914, 0x7968, 0xee50, 0x948a, 0x61c0, 0xc04e, 0x0, 0x1);
        gbc.writeMem(0x3914, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7968, gbc.sp());
        EXPECT(0x3916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 02DD
        gbc.setState(0x2b5, 0xd638, 0x9440, 0x3fb7, 0x91c9, 0x3154, 0x1, 0x0);
        gbc.writeMem(0x2b5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd638, gbc.sp());
        EXPECT(0x2b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02DE
        gbc.setState(0xa42e, 0x3133, 0xe910, 0xcb21, 0x9b08, 0x4ede, 0x1, 0x0);
        gbc.writeMem(0xa42e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3133, gbc.sp());
        EXPECT(0xa430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa42e));
        EXPECT(0xe3, gbc.readMem(0xa42f));
        // CB E3 02DF
        gbc.setState(0xc694, 0xd8f3, 0x53e0, 0xbe07, 0x9307, 0x8190, 0x0, 0x1);
        gbc.writeMem(0xc694, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd8f3, gbc.sp());
        EXPECT(0xc696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc694));
        EXPECT(0xe3, gbc.readMem(0xc695));
        // CB E3 02E0
        gbc.setState(0x3c0e, 0x28ac, 0xfed0, 0x37f8, 0x9913, 0x651a, 0x0, 0x0);
        gbc.writeMem(0x3c0e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x28ac, gbc.sp());
        EXPECT(0x3c10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 02E1
        gbc.setState(0x2789, 0xf3d1, 0x2d40, 0xedfe, 0x3dde, 0xa64f, 0x0, 0x0);
        gbc.writeMem(0x2789, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf3d1, gbc.sp());
        EXPECT(0x278b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02E2
        gbc.setState(0x65a5, 0x37fa, 0x8240, 0x55b6, 0x4798, 0x9578, 0x1, 0x1);
        gbc.writeMem(0x65a5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x37fa, gbc.sp());
        EXPECT(0x65a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02E4
        gbc.setState(0x2b4, 0xd18c, 0x5460, 0xd074, 0x8b40, 0xa53d, 0x1, 0x1);
        gbc.writeMem(0x2b4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd18c, gbc.sp());
        EXPECT(0x2b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02E5
        gbc.setState(0x9f5e, 0x3ac2, 0x6600, 0xe54a, 0xc4d7, 0x906, 0x1, 0x0);
        gbc.writeMem(0x9f5e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3ac2, gbc.sp());
        EXPECT(0x9f60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f5e));
        EXPECT(0xe3, gbc.readMem(0x9f5f));
        // CB E3 02E6
        gbc.setState(0x1921, 0x3a5e, 0x1200, 0x2454, 0xbf, 0xe7be, 0x1, 0x1);
        gbc.writeMem(0x1921, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3a5e, gbc.sp());
        EXPECT(0x1923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02E7
        gbc.setState(0xc4d7, 0x7770, 0x8d90, 0x466f, 0x7bee, 0x13ff, 0x0, 0x1);
        gbc.writeMem(0xc4d7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7770, gbc.sp());
        EXPECT(0xc4d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d7));
        EXPECT(0xe3, gbc.readMem(0xc4d8));
        // CB E3 02E8
        gbc.setState(0xeed7, 0x1a0d, 0x6bc0, 0x87ae, 0xd04a, 0xec22, 0x1, 0x0);
        gbc.writeMem(0xeed7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1a0d, gbc.sp());
        EXPECT(0xeed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeed7));
        EXPECT(0xe3, gbc.readMem(0xeed8));
        // CB E3 02E9
        gbc.setState(0xbd76, 0xdfd5, 0x7910, 0x7bf1, 0xa38b, 0x8f1e, 0x0, 0x0);
        gbc.writeMem(0xbd76, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xdfd5, gbc.sp());
        EXPECT(0xbd78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd76));
        EXPECT(0xe3, gbc.readMem(0xbd77));
        // CB E3 02EA
        gbc.setState(0x55d9, 0x488e, 0x63c0, 0x4e83, 0x14aa, 0xe95b, 0x1, 0x0);
        gbc.writeMem(0x55d9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x488e, gbc.sp());
        EXPECT(0x55db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02EB
        gbc.setState(0xb9af, 0xb2d8, 0x5200, 0xf598, 0x1a59, 0x8f23, 0x1, 0x0);
        gbc.writeMem(0xb9af, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb2d8, gbc.sp());
        EXPECT(0xb9b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9af));
        EXPECT(0xe3, gbc.readMem(0xb9b0));
        // CB E3 02EC
        gbc.setState(0xbd3a, 0x1183, 0x3400, 0xa45c, 0xf10e, 0xd041, 0x1, 0x1);
        gbc.writeMem(0xbd3a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1183, gbc.sp());
        EXPECT(0xbd3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd3a));
        EXPECT(0xe3, gbc.readMem(0xbd3b));
        // CB E3 02ED
        gbc.setState(0xe855, 0x1aa0, 0xa570, 0x47d2, 0x6c3, 0x7e8b, 0x1, 0x0);
        gbc.writeMem(0xe855, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1aa0, gbc.sp());
        EXPECT(0xe857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe855));
        EXPECT(0xe3, gbc.readMem(0xe856));
        // CB E3 02EE
        gbc.setState(0x53f0, 0x90b1, 0x70, 0x7669, 0x569e, 0x884a, 0x1, 0x1);
        gbc.writeMem(0x53f0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x90b1, gbc.sp());
        EXPECT(0x53f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 02EF
        gbc.setState(0xbc9e, 0x823b, 0xd390, 0x222a, 0x40f8, 0x3872, 0x1, 0x0);
        gbc.writeMem(0xbc9e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x823b, gbc.sp());
        EXPECT(0xbca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc9e));
        EXPECT(0xe3, gbc.readMem(0xbc9f));
        // CB E3 02F0
        gbc.setState(0x8f10, 0xaa7a, 0x10c0, 0x64df, 0x609f, 0xa071, 0x1, 0x1);
        gbc.writeMem(0x8f10, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xaa7a, gbc.sp());
        EXPECT(0x8f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f10));
        EXPECT(0xe3, gbc.readMem(0x8f11));
        // CB E3 02F1
        gbc.setState(0x2890, 0x32de, 0xa260, 0x9aaf, 0x1665, 0x3a3a, 0x1, 0x0);
        gbc.writeMem(0x2890, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x32de, gbc.sp());
        EXPECT(0x2892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02F2
        gbc.setState(0xd964, 0x4e33, 0x7d40, 0x5e, 0xf458, 0xefbf, 0x0, 0x0);
        gbc.writeMem(0xd964, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4e33, gbc.sp());
        EXPECT(0xd966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd964));
        EXPECT(0xe3, gbc.readMem(0xd965));
        // CB E3 02F3
        gbc.setState(0x4b0c, 0xd06a, 0xa6d0, 0xae18, 0x9a85, 0xa6a, 0x1, 0x1);
        gbc.writeMem(0x4b0c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd06a, gbc.sp());
        EXPECT(0x4b0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 02F5
        gbc.setState(0xe91f, 0x836b, 0xa770, 0x9946, 0xd2f1, 0x9676, 0x1, 0x0);
        gbc.writeMem(0xe91f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x836b, gbc.sp());
        EXPECT(0xe921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe91f));
        EXPECT(0xe3, gbc.readMem(0xe920));
        // CB E3 02F6
        gbc.setState(0x2ed8, 0xdfe5, 0x5100, 0x8f30, 0x54d0, 0xbe1b, 0x0, 0x0);
        gbc.writeMem(0x2ed8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xdfe5, gbc.sp());
        EXPECT(0x2eda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02F7
        gbc.setState(0xb31e, 0xdcd4, 0xf5f0, 0x42c0, 0x4d6, 0xd2fe, 0x0, 0x0);
        gbc.writeMem(0xb31e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xdcd4, gbc.sp());
        EXPECT(0xb320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb31e));
        EXPECT(0xe3, gbc.readMem(0xb31f));
        // CB E3 02F8
        gbc.setState(0x58be, 0x985c, 0x4970, 0xfe72, 0xf86a, 0x7e09, 0x0, 0x1);
        gbc.writeMem(0x58be, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x985c, gbc.sp());
        EXPECT(0x58c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 02F9
        gbc.setState(0x8639, 0x4248, 0x8660, 0x102c, 0x4e89, 0xa691, 0x1, 0x1);
        gbc.writeMem(0x8639, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4248, gbc.sp());
        EXPECT(0x863b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8639));
        EXPECT(0xe3, gbc.readMem(0x863a));
        // CB E3 02FA
        gbc.setState(0x69e3, 0x125, 0xb700, 0x2f, 0x71cf, 0x42, 0x1, 0x1);
        gbc.writeMem(0x69e3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x125, gbc.sp());
        EXPECT(0x69e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02FB
        gbc.setState(0xdbb5, 0x9c5, 0x7260, 0x267f, 0xaaf2, 0x3fed, 0x1, 0x1);
        gbc.writeMem(0xdbb5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9c5, gbc.sp());
        EXPECT(0xdbb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbb5));
        EXPECT(0xe3, gbc.readMem(0xdbb6));
        // CB E3 02FC
        gbc.setState(0x51fc, 0x83cf, 0x4500, 0x623d, 0x2584, 0x6910, 0x0, 0x1);
        gbc.writeMem(0x51fc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x83cf, gbc.sp());
        EXPECT(0x51fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 02FD
        gbc.setState(0x5193, 0xc87c, 0x9eb0, 0xba53, 0xa4fb, 0xd900, 0x0, 0x0);
        gbc.writeMem(0x5193, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc87c, gbc.sp());
        EXPECT(0x5195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 02FE
        gbc.setState(0x41b7, 0x27a1, 0x9df0, 0xf835, 0x82d7, 0x6b55, 0x0, 0x1);
        gbc.writeMem(0x41b7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x27a1, gbc.sp());
        EXPECT(0x41b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 02FF
        gbc.setState(0x6211, 0x509e, 0x9080, 0xffe5, 0xe508, 0x41d0, 0x0, 0x0);
        gbc.writeMem(0x6211, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x509e, gbc.sp());
        EXPECT(0x6213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0300
        gbc.setState(0xdb97, 0xeb1, 0x2830, 0x4519, 0xd9a6, 0xf5e6, 0x0, 0x1);
        gbc.writeMem(0xdb97, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xeb1, gbc.sp());
        EXPECT(0xdb99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb97));
        EXPECT(0xe3, gbc.readMem(0xdb98));
        // CB E3 0301
        gbc.setState(0xd0df, 0x5c64, 0xcda0, 0xef6d, 0x8782, 0x49f, 0x1, 0x0);
        gbc.writeMem(0xd0df, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5c64, gbc.sp());
        EXPECT(0xd0e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0df));
        EXPECT(0xe3, gbc.readMem(0xd0e0));
        // CB E3 0302
        gbc.setState(0x422e, 0xea2, 0x7ff0, 0xc514, 0xfa5b, 0xbc1f, 0x0, 0x1);
        gbc.writeMem(0x422e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xea2, gbc.sp());
        EXPECT(0x4230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0303
        gbc.setState(0x5fb5, 0x40ec, 0x2530, 0x8383, 0x90af, 0x7c65, 0x0, 0x0);
        gbc.writeMem(0x5fb5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x40ec, gbc.sp());
        EXPECT(0x5fb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0304
        gbc.setState(0xc6ad, 0xd4ec, 0xda80, 0x71b7, 0x5fdf, 0xbdde, 0x1, 0x0);
        gbc.writeMem(0xc6ad, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd4ec, gbc.sp());
        EXPECT(0xc6af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6ad));
        EXPECT(0xe3, gbc.readMem(0xc6ae));
        // CB E3 0306
        gbc.setState(0x3f14, 0x39bc, 0xcc50, 0xb4a6, 0x3d4a, 0x9989, 0x0, 0x1);
        gbc.writeMem(0x3f14, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x39bc, gbc.sp());
        EXPECT(0x3f16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0307
        gbc.setState(0xbf13, 0xdeef, 0x1e00, 0x7e41, 0x5212, 0xdaf7, 0x1, 0x1);
        gbc.writeMem(0xbf13, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xdeef, gbc.sp());
        EXPECT(0xbf15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf13));
        EXPECT(0xe3, gbc.readMem(0xbf14));
        // CB E3 0308
        gbc.setState(0xcf03, 0x143, 0x8a60, 0x7e55, 0x1ddc, 0x8cf7, 0x0, 0x0);
        gbc.writeMem(0xcf03, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x143, gbc.sp());
        EXPECT(0xcf05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf03));
        EXPECT(0xe3, gbc.readMem(0xcf04));
        // CB E3 0309
        gbc.setState(0xef3, 0x473b, 0xaf30, 0xccb3, 0xb5e1, 0xfc7, 0x0, 0x0);
        gbc.writeMem(0xef3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x473b, gbc.sp());
        EXPECT(0xef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 030A
        gbc.setState(0xac0c, 0x543b, 0x5090, 0x652d, 0x46d3, 0x429d, 0x0, 0x1);
        gbc.writeMem(0xac0c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x543b, gbc.sp());
        EXPECT(0xac0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac0c));
        EXPECT(0xe3, gbc.readMem(0xac0d));
        // CB E3 030C
        gbc.setState(0x6a97, 0xa91b, 0x9370, 0xb4b0, 0xab35, 0x411c, 0x0, 0x0);
        gbc.writeMem(0x6a97, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa91b, gbc.sp());
        EXPECT(0x6a99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 030D
        gbc.setState(0xd414, 0x5b13, 0x3160, 0x8a23, 0xd8bf, 0x4d4c, 0x1, 0x1);
        gbc.writeMem(0xd414, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5b13, gbc.sp());
        EXPECT(0xd416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd414));
        EXPECT(0xe3, gbc.readMem(0xd415));
        // CB E3 030E
        gbc.setState(0x422b, 0x6fba, 0x6da0, 0xda28, 0xd8a8, 0x87fd, 0x0, 0x1);
        gbc.writeMem(0x422b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6fba, gbc.sp());
        EXPECT(0x422d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0310
        gbc.setState(0xc07d, 0x7cd0, 0x5be0, 0xa40d, 0xa08c, 0x2ea6, 0x0, 0x1);
        gbc.writeMem(0xc07d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7cd0, gbc.sp());
        EXPECT(0xc07f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc07d));
        EXPECT(0xe3, gbc.readMem(0xc07e));
        // CB E3 0311
        gbc.setState(0x27a3, 0x1b21, 0x7690, 0xcf6f, 0xed07, 0x88a3, 0x1, 0x1);
        gbc.writeMem(0x27a3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1b21, gbc.sp());
        EXPECT(0x27a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0312
        gbc.setState(0x29f4, 0xe767, 0xe0f0, 0xa03d, 0x757, 0x5112, 0x0, 0x0);
        gbc.writeMem(0x29f4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe767, gbc.sp());
        EXPECT(0x29f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0313
        gbc.setState(0x685d, 0x43dc, 0x5850, 0x5542, 0x49e2, 0xd4eb, 0x1, 0x1);
        gbc.writeMem(0x685d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x43dc, gbc.sp());
        EXPECT(0x685f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0314
        gbc.setState(0x2e5, 0x97e6, 0xf820, 0xfef1, 0x3019, 0x9218, 0x0, 0x0);
        gbc.writeMem(0x2e5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x97e6, gbc.sp());
        EXPECT(0x2e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0315
        gbc.setState(0x33c6, 0xc179, 0xbb40, 0x4b5b, 0xe2e2, 0x5726, 0x0, 0x0);
        gbc.writeMem(0x33c6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc179, gbc.sp());
        EXPECT(0x33c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0316
        gbc.setState(0x930f, 0xa7d9, 0x9de0, 0x67a3, 0x8ef8, 0x6112, 0x1, 0x0);
        gbc.writeMem(0x930f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa7d9, gbc.sp());
        EXPECT(0x9311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x930f));
        EXPECT(0xe3, gbc.readMem(0x9310));
        // CB E3 0317
        gbc.setState(0x904b, 0x10cc, 0x99f0, 0xa3ec, 0xe39c, 0x1d9d, 0x1, 0x1);
        gbc.writeMem(0x904b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x10cc, gbc.sp());
        EXPECT(0x904d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x904b));
        EXPECT(0xe3, gbc.readMem(0x904c));
        // CB E3 0318
        gbc.setState(0xa97d, 0x5f62, 0x9000, 0x7dcc, 0x78de, 0x2e60, 0x0, 0x0);
        gbc.writeMem(0xa97d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5f62, gbc.sp());
        EXPECT(0xa97f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa97d));
        EXPECT(0xe3, gbc.readMem(0xa97e));
        // CB E3 0319
        gbc.setState(0x7ea2, 0xae1a, 0x22b0, 0xd082, 0xbe41, 0xdfe7, 0x0, 0x1);
        gbc.writeMem(0x7ea2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xae1a, gbc.sp());
        EXPECT(0x7ea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 031A
        gbc.setState(0xbb10, 0x399d, 0x7750, 0x22e2, 0xe48b, 0x4300, 0x0, 0x0);
        gbc.writeMem(0xbb10, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x399d, gbc.sp());
        EXPECT(0xbb12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb10));
        EXPECT(0xe3, gbc.readMem(0xbb11));
        // CB E3 031B
        gbc.setState(0x8f40, 0x5cc1, 0x31b0, 0x3dc9, 0xf06a, 0x88e1, 0x0, 0x0);
        gbc.writeMem(0x8f40, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5cc1, gbc.sp());
        EXPECT(0x8f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f40));
        EXPECT(0xe3, gbc.readMem(0x8f41));
        // CB E3 031C
        gbc.setState(0x2c19, 0x8157, 0x450, 0x29ba, 0xfa7f, 0x36e0, 0x1, 0x0);
        gbc.writeMem(0x2c19, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8157, gbc.sp());
        EXPECT(0x2c1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 031D
        gbc.setState(0xb3f6, 0x629a, 0x6cc0, 0xcfa, 0x89d6, 0xf2d3, 0x1, 0x1);
        gbc.writeMem(0xb3f6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x629a, gbc.sp());
        EXPECT(0xb3f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f6));
        EXPECT(0xe3, gbc.readMem(0xb3f7));
        // CB E3 031E
        gbc.setState(0x2c23, 0xd15f, 0x1f70, 0x208c, 0x4152, 0x1e6f, 0x1, 0x0);
        gbc.writeMem(0x2c23, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd15f, gbc.sp());
        EXPECT(0x2c25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 031F
        gbc.setState(0x9b43, 0xd6ad, 0x1f60, 0x146a, 0xdc1, 0xe14, 0x1, 0x0);
        gbc.writeMem(0x9b43, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd6ad, gbc.sp());
        EXPECT(0x9b45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b43));
        EXPECT(0xe3, gbc.readMem(0x9b44));
        // CB E3 0320
        gbc.setState(0x47a3, 0xddef, 0x3750, 0xf4da, 0xc944, 0xff6c, 0x0, 0x0);
        gbc.writeMem(0x47a3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xddef, gbc.sp());
        EXPECT(0x47a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0321
        gbc.setState(0xde3, 0x531, 0x3300, 0xe0b5, 0x1a96, 0x37e7, 0x0, 0x1);
        gbc.writeMem(0xde3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x531, gbc.sp());
        EXPECT(0xde5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0323
        gbc.setState(0x225f, 0xd3db, 0x74e0, 0x859b, 0x80a, 0xcb0f, 0x1, 0x1);
        gbc.writeMem(0x225f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd3db, gbc.sp());
        EXPECT(0x2261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0324
        gbc.setState(0x4c81, 0x12e1, 0x22f0, 0x6355, 0xef27, 0x5538, 0x1, 0x1);
        gbc.writeMem(0x4c81, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x12e1, gbc.sp());
        EXPECT(0x4c83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0325
        gbc.setState(0x94cf, 0x30ec, 0xa750, 0xe409, 0x389b, 0xafd8, 0x0, 0x1);
        gbc.writeMem(0x94cf, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x30ec, gbc.sp());
        EXPECT(0x94d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94cf));
        EXPECT(0xe3, gbc.readMem(0x94d0));
        // CB E3 0326
        gbc.setState(0x680, 0xf855, 0x93a0, 0x8077, 0x1fce, 0x1b9f, 0x0, 0x1);
        gbc.writeMem(0x680, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf855, gbc.sp());
        EXPECT(0x682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0327
        gbc.setState(0xd89b, 0xf318, 0x7790, 0xbb5b, 0xfc92, 0xad89, 0x1, 0x0);
        gbc.writeMem(0xd89b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf318, gbc.sp());
        EXPECT(0xd89d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd89b));
        EXPECT(0xe3, gbc.readMem(0xd89c));
        // CB E3 0328
        gbc.setState(0x98e2, 0x6b90, 0xbc00, 0x7ec1, 0x5dad, 0x6e1e, 0x0, 0x0);
        gbc.writeMem(0x98e2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6b90, gbc.sp());
        EXPECT(0x98e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e2));
        EXPECT(0xe3, gbc.readMem(0x98e3));
        // CB E3 032A
        gbc.setState(0x9b6b, 0xa8b0, 0xc160, 0x789f, 0xaea7, 0x504, 0x0, 0x0);
        gbc.writeMem(0x9b6b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa8b0, gbc.sp());
        EXPECT(0x9b6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b6b));
        EXPECT(0xe3, gbc.readMem(0x9b6c));
        // CB E3 032B
        gbc.setState(0x8ea7, 0xc169, 0xba10, 0xc0c2, 0xf6b9, 0x7ed, 0x1, 0x1);
        gbc.writeMem(0x8ea7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc169, gbc.sp());
        EXPECT(0x8ea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea7));
        EXPECT(0xe3, gbc.readMem(0x8ea8));
        // CB E3 032C
        gbc.setState(0x9210, 0x5567, 0xb380, 0x5ab4, 0xa73, 0x7f92, 0x0, 0x1);
        gbc.writeMem(0x9210, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5567, gbc.sp());
        EXPECT(0x9212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9210));
        EXPECT(0xe3, gbc.readMem(0x9211));
        // CB E3 032D
        gbc.setState(0x3742, 0x8122, 0x6510, 0x63a7, 0x29bc, 0x1ea6, 0x1, 0x0);
        gbc.writeMem(0x3742, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8122, gbc.sp());
        EXPECT(0x3744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 032E
        gbc.setState(0x8d35, 0x1492, 0xdd10, 0xa26a, 0xf2f5, 0x30f2, 0x1, 0x1);
        gbc.writeMem(0x8d35, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1492, gbc.sp());
        EXPECT(0x8d37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d35));
        EXPECT(0xe3, gbc.readMem(0x8d36));
        // CB E3 032F
        gbc.setState(0x13be, 0x18ed, 0x43d0, 0x6e10, 0x877a, 0x2ee7, 0x0, 0x1);
        gbc.writeMem(0x13be, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x18ed, gbc.sp());
        EXPECT(0x13c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0330
        gbc.setState(0xc45, 0xe0f3, 0x28f0, 0x6515, 0x1f28, 0x163d, 0x0, 0x1);
        gbc.writeMem(0xc45, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe0f3, gbc.sp());
        EXPECT(0xc47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0331
        gbc.setState(0xb4c8, 0xb44f, 0xc460, 0x1318, 0x41c7, 0xebea, 0x1, 0x1);
        gbc.writeMem(0xb4c8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb44f, gbc.sp());
        EXPECT(0xb4ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4c8));
        EXPECT(0xe3, gbc.readMem(0xb4c9));
        // CB E3 0332
        gbc.setState(0x4fc6, 0xda98, 0x20d0, 0xd1e, 0x61a9, 0xa0b7, 0x0, 0x1);
        gbc.writeMem(0x4fc6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xda98, gbc.sp());
        EXPECT(0x4fc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0333
        gbc.setState(0xef6e, 0x9a98, 0xcdf0, 0xed73, 0x3f68, 0xa70d, 0x0, 0x0);
        gbc.writeMem(0xef6e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9a98, gbc.sp());
        EXPECT(0xef70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef6e));
        EXPECT(0xe3, gbc.readMem(0xef6f));
        // CB E3 0334
        gbc.setState(0x6935, 0x1853, 0x9d40, 0xb9ff, 0xd732, 0xf5c5, 0x1, 0x0);
        gbc.writeMem(0x6935, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1853, gbc.sp());
        EXPECT(0x6937, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0335
        gbc.setState(0xbd05, 0x8869, 0x8cc0, 0xfa54, 0x9724, 0xa7c, 0x1, 0x1);
        gbc.writeMem(0xbd05, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8869, gbc.sp());
        EXPECT(0xbd07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd05));
        EXPECT(0xe3, gbc.readMem(0xbd06));
        // CB E3 0336
        gbc.setState(0x671c, 0x4352, 0x3e00, 0xc91d, 0xd557, 0xa498, 0x0, 0x0);
        gbc.writeMem(0x671c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4352, gbc.sp());
        EXPECT(0x671e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0337
        gbc.setState(0x9ee9, 0xa60a, 0x3800, 0xcb8c, 0x5a93, 0xb416, 0x1, 0x1);
        gbc.writeMem(0x9ee9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa60a, gbc.sp());
        EXPECT(0x9eeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ee9));
        EXPECT(0xe3, gbc.readMem(0x9eea));
        // CB E3 0338
        gbc.setState(0x7e8d, 0xd69a, 0x5590, 0x4928, 0xfd57, 0xd8b4, 0x0, 0x1);
        gbc.writeMem(0x7e8d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd69a, gbc.sp());
        EXPECT(0x7e8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0339
        gbc.setState(0xd1ee, 0x718, 0xb800, 0x2505, 0xe6, 0xdd33, 0x1, 0x1);
        gbc.writeMem(0xd1ee, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x718, gbc.sp());
        EXPECT(0xd1f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ee));
        EXPECT(0xe3, gbc.readMem(0xd1ef));
        // CB E3 033A
        gbc.setState(0xe280, 0x623, 0x77d0, 0xf140, 0x81e5, 0xfde4, 0x0, 0x0);
        gbc.writeMem(0xe280, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x623, gbc.sp());
        EXPECT(0xe282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe280));
        EXPECT(0xe3, gbc.readMem(0xe281));
        // CB E3 033B
        gbc.setState(0x45e4, 0x1eb9, 0xabd0, 0x68ac, 0x3783, 0xecd4, 0x1, 0x1);
        gbc.writeMem(0x45e4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1eb9, gbc.sp());
        EXPECT(0x45e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 033C
        gbc.setState(0xe282, 0xa1aa, 0xc800, 0x316d, 0x731a, 0xa5a4, 0x0, 0x0);
        gbc.writeMem(0xe282, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa1aa, gbc.sp());
        EXPECT(0xe284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe282));
        EXPECT(0xe3, gbc.readMem(0xe283));
        // CB E3 033D
        gbc.setState(0xd5f0, 0xd96d, 0xda70, 0x6df, 0xa894, 0xdb7a, 0x1, 0x0);
        gbc.writeMem(0xd5f0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd96d, gbc.sp());
        EXPECT(0xd5f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5f0));
        EXPECT(0xe3, gbc.readMem(0xd5f1));
        // CB E3 033E
        gbc.setState(0xde7e, 0x8fc2, 0x3580, 0xa1f2, 0xaa4b, 0x5785, 0x1, 0x1);
        gbc.writeMem(0xde7e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8fc2, gbc.sp());
        EXPECT(0xde80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde7e));
        EXPECT(0xe3, gbc.readMem(0xde7f));
        // CB E3 033F
        gbc.setState(0x90d, 0xbd4, 0x9460, 0xb662, 0x20b, 0xafd4, 0x1, 0x0);
        gbc.writeMem(0x90d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbd4, gbc.sp());
        EXPECT(0x90f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0340
        gbc.setState(0x6302, 0xac65, 0xb930, 0xf6f3, 0xf60a, 0xfdf6, 0x1, 0x0);
        gbc.writeMem(0x6302, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xac65, gbc.sp());
        EXPECT(0x6304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0341
        gbc.setState(0xc997, 0x6a34, 0x65d0, 0xe0f4, 0x5a17, 0x3e57, 0x0, 0x1);
        gbc.writeMem(0xc997, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6a34, gbc.sp());
        EXPECT(0xc999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc997));
        EXPECT(0xe3, gbc.readMem(0xc998));
        // CB E3 0342
        gbc.setState(0x60f8, 0x145c, 0xec20, 0x4f24, 0xbc72, 0x2a83, 0x1, 0x0);
        gbc.writeMem(0x60f8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x145c, gbc.sp());
        EXPECT(0x60fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0343
        gbc.setState(0x7043, 0x293f, 0x7ec0, 0xe44, 0x6fb0, 0xacbf, 0x0, 0x1);
        gbc.writeMem(0x7043, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x293f, gbc.sp());
        EXPECT(0x7045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0344
        gbc.setState(0x5b6c, 0x80c5, 0x8360, 0xf75, 0xcd79, 0x6e1d, 0x0, 0x1);
        gbc.writeMem(0x5b6c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x80c5, gbc.sp());
        EXPECT(0x5b6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0345
        gbc.setState(0xce27, 0x68ac, 0xc4e0, 0x5d3a, 0x9218, 0x1d05, 0x1, 0x0);
        gbc.writeMem(0xce27, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x68ac, gbc.sp());
        EXPECT(0xce29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce27));
        EXPECT(0xe3, gbc.readMem(0xce28));
        // CB E3 0346
        gbc.setState(0xa5e2, 0x8975, 0xc9d0, 0x89f8, 0x9e4f, 0x989d, 0x1, 0x0);
        gbc.writeMem(0xa5e2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8975, gbc.sp());
        EXPECT(0xa5e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5e2));
        EXPECT(0xe3, gbc.readMem(0xa5e3));
        // CB E3 0347
        gbc.setState(0x3469, 0x3d10, 0x59b0, 0x48f7, 0x8c80, 0x8828, 0x0, 0x0);
        gbc.writeMem(0x3469, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3d10, gbc.sp());
        EXPECT(0x346b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0348
        gbc.setState(0x4de, 0xddc2, 0x4a20, 0x169e, 0x1bd, 0x3de7, 0x0, 0x0);
        gbc.writeMem(0x4de, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xddc2, gbc.sp());
        EXPECT(0x4e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0349
        gbc.setState(0x436, 0xe761, 0xfcd0, 0x8365, 0x2d50, 0x1d15, 0x1, 0x0);
        gbc.writeMem(0x436, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe761, gbc.sp());
        EXPECT(0x438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 034B
        gbc.setState(0x7283, 0x38c3, 0xeb80, 0xe8bf, 0x6136, 0x4ed7, 0x0, 0x1);
        gbc.writeMem(0x7283, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x38c3, gbc.sp());
        EXPECT(0x7285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 034C
        gbc.setState(0x6db1, 0x4e4, 0xe6d0, 0x8049, 0x9c50, 0x317d, 0x0, 0x0);
        gbc.writeMem(0x6db1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4e4, gbc.sp());
        EXPECT(0x6db3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 034D
        gbc.setState(0x4c9b, 0x632a, 0xd950, 0x6d5, 0xc23a, 0x2eeb, 0x1, 0x1);
        gbc.writeMem(0x4c9b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x632a, gbc.sp());
        EXPECT(0x4c9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 034E
        gbc.setState(0x67fe, 0xb4cc, 0x4340, 0x6fba, 0x52fe, 0x14a, 0x1, 0x1);
        gbc.writeMem(0x67fe, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb4cc, gbc.sp());
        EXPECT(0x6800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 034F
        gbc.setState(0x17b6, 0xdef7, 0x7140, 0xfcd7, 0xeb0c, 0xc89d, 0x0, 0x0);
        gbc.writeMem(0x17b6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xdef7, gbc.sp());
        EXPECT(0x17b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0351
        gbc.setState(0x6db5, 0xb7f6, 0xcf70, 0xfdfa, 0x7475, 0x8f86, 0x0, 0x0);
        gbc.writeMem(0x6db5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb7f6, gbc.sp());
        EXPECT(0x6db7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0352
        gbc.setState(0xac5, 0x1fa7, 0x1320, 0x9967, 0xd836, 0x87ad, 0x0, 0x0);
        gbc.writeMem(0xac5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1fa7, gbc.sp());
        EXPECT(0xac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0353
        gbc.setState(0xed8e, 0x8637, 0x24e0, 0xdc63, 0xc5cb, 0x7f7d, 0x0, 0x0);
        gbc.writeMem(0xed8e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8637, gbc.sp());
        EXPECT(0xed90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed8e));
        EXPECT(0xe3, gbc.readMem(0xed8f));
        // CB E3 0354
        gbc.setState(0xcf9, 0x64b9, 0x48d0, 0x152d, 0x3e97, 0xd681, 0x0, 0x0);
        gbc.writeMem(0xcf9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x64b9, gbc.sp());
        EXPECT(0xcfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0355
        gbc.setState(0x2df7, 0xc8c3, 0xeb30, 0xb295, 0x330f, 0xfb36, 0x1, 0x1);
        gbc.writeMem(0x2df7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc8c3, gbc.sp());
        EXPECT(0x2df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0357
        gbc.setState(0x9441, 0x297a, 0xfd60, 0x3d8b, 0xd1d, 0xf7ad, 0x0, 0x1);
        gbc.writeMem(0x9441, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x297a, gbc.sp());
        EXPECT(0x9443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9441));
        EXPECT(0xe3, gbc.readMem(0x9442));
        // CB E3 0358
        gbc.setState(0xaf6b, 0x7fad, 0x2950, 0xb2da, 0x9be3, 0x305f, 0x0, 0x1);
        gbc.writeMem(0xaf6b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7fad, gbc.sp());
        EXPECT(0xaf6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf6b));
        EXPECT(0xe3, gbc.readMem(0xaf6c));
        // CB E3 0359
        gbc.setState(0x8a81, 0xb5cf, 0xfda0, 0x1e53, 0x9b2e, 0xdfb3, 0x1, 0x1);
        gbc.writeMem(0x8a81, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb5cf, gbc.sp());
        EXPECT(0x8a83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a81));
        EXPECT(0xe3, gbc.readMem(0x8a82));
        // CB E3 035A
        gbc.setState(0x3c05, 0x3bec, 0xefd0, 0xaea8, 0xcaaa, 0x8dc7, 0x1, 0x1);
        gbc.writeMem(0x3c05, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3bec, gbc.sp());
        EXPECT(0x3c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 035C
        gbc.setState(0x8215, 0xc558, 0xce0, 0x55ab, 0x4489, 0x21b6, 0x0, 0x0);
        gbc.writeMem(0x8215, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc558, gbc.sp());
        EXPECT(0x8217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8215));
        EXPECT(0xe3, gbc.readMem(0x8216));
        // CB E3 035D
        gbc.setState(0x2e99, 0x7b60, 0xf290, 0x8ee5, 0x88a9, 0xdf0d, 0x0, 0x0);
        gbc.writeMem(0x2e99, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7b60, gbc.sp());
        EXPECT(0x2e9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 035E
        gbc.setState(0x74ec, 0x9d55, 0x2280, 0xf60e, 0xe64d, 0xcd53, 0x1, 0x1);
        gbc.writeMem(0x74ec, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9d55, gbc.sp());
        EXPECT(0x74ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 035F
        gbc.setState(0x1126, 0x8554, 0x5ad0, 0xf1, 0x1abb, 0xe109, 0x0, 0x1);
        gbc.writeMem(0x1126, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8554, gbc.sp());
        EXPECT(0x1128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0360
        gbc.setState(0x3665, 0xbb8f, 0xa910, 0xf3b, 0xe73d, 0x3f4c, 0x1, 0x1);
        gbc.writeMem(0x3665, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xbb8f, gbc.sp());
        EXPECT(0x3667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0361
        gbc.setState(0x2f7c, 0x70f8, 0x9e00, 0xbfaa, 0x414b, 0x7479, 0x1, 0x1);
        gbc.writeMem(0x2f7c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x70f8, gbc.sp());
        EXPECT(0x2f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0362
        gbc.setState(0xa09, 0xa07d, 0xd00, 0x72a, 0xcea7, 0x207d, 0x1, 0x1);
        gbc.writeMem(0xa09, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa07d, gbc.sp());
        EXPECT(0xa0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0363
        gbc.setState(0xe8e8, 0x89b, 0xed70, 0x3367, 0x93cb, 0x8692, 0x1, 0x1);
        gbc.writeMem(0xe8e8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x89b, gbc.sp());
        EXPECT(0xe8ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8e8));
        EXPECT(0xe3, gbc.readMem(0xe8e9));
        // CB E3 0364
        gbc.setState(0x5740, 0xd9e4, 0x7c50, 0x90f2, 0x3442, 0x28cd, 0x1, 0x1);
        gbc.writeMem(0x5740, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd9e4, gbc.sp());
        EXPECT(0x5742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0365
        gbc.setState(0x3439, 0xa0fd, 0xea30, 0x22a, 0xdf94, 0x8c67, 0x1, 0x0);
        gbc.writeMem(0x3439, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa0fd, gbc.sp());
        EXPECT(0x343b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0366
        gbc.setState(0xb8af, 0xc57d, 0xe400, 0x63e3, 0xbe9b, 0x5fd9, 0x1, 0x0);
        gbc.writeMem(0xb8af, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc57d, gbc.sp());
        EXPECT(0xb8b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8af));
        EXPECT(0xe3, gbc.readMem(0xb8b0));
        // CB E3 0367
        gbc.setState(0x2baf, 0x7bc9, 0xf2c0, 0x5664, 0xe41f, 0x9cee, 0x0, 0x0);
        gbc.writeMem(0x2baf, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7bc9, gbc.sp());
        EXPECT(0x2bb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0368
        gbc.setState(0xc17f, 0x206, 0xda00, 0xe0e7, 0xf68e, 0xb23c, 0x1, 0x0);
        gbc.writeMem(0xc17f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x206, gbc.sp());
        EXPECT(0xc181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc17f));
        EXPECT(0xe3, gbc.readMem(0xc180));
        // CB E3 0369
        gbc.setState(0xcd65, 0x8120, 0x5300, 0x3c41, 0x58f6, 0x43ea, 0x1, 0x1);
        gbc.writeMem(0xcd65, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8120, gbc.sp());
        EXPECT(0xcd67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd65));
        EXPECT(0xe3, gbc.readMem(0xcd66));
        // CB E3 036A
        gbc.setState(0x75d9, 0xb42e, 0x1ab0, 0x4239, 0xf1b5, 0xc1ab, 0x1, 0x1);
        gbc.writeMem(0x75d9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb42e, gbc.sp());
        EXPECT(0x75db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 036B
        gbc.setState(0xe8ae, 0x4dc1, 0x6b00, 0x8d8f, 0xc303, 0xad0c, 0x0, 0x1);
        gbc.writeMem(0xe8ae, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4dc1, gbc.sp());
        EXPECT(0xe8b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8ae));
        EXPECT(0xe3, gbc.readMem(0xe8af));
        // CB E3 036C
        gbc.setState(0xebc, 0x1e97, 0xd4e0, 0xe999, 0xb0a7, 0x9bc6, 0x1, 0x1);
        gbc.writeMem(0xebc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1e97, gbc.sp());
        EXPECT(0xebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 036D
        gbc.setState(0x5813, 0x80f8, 0x6aa0, 0x796a, 0x9ca, 0x4798, 0x1, 0x0);
        gbc.writeMem(0x5813, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x80f8, gbc.sp());
        EXPECT(0x5815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 036E
        gbc.setState(0xda24, 0xea99, 0xc350, 0xcd25, 0xae12, 0x6d95, 0x0, 0x1);
        gbc.writeMem(0xda24, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xea99, gbc.sp());
        EXPECT(0xda26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda24));
        EXPECT(0xe3, gbc.readMem(0xda25));
        // CB E3 036F
        gbc.setState(0x3d2, 0x6d22, 0x61b0, 0xe395, 0x5864, 0x6f4d, 0x0, 0x1);
        gbc.writeMem(0x3d2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6d22, gbc.sp());
        EXPECT(0x3d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0370
        gbc.setState(0xc9a, 0xc5d8, 0x9a50, 0x1c3a, 0x6630, 0xd64b, 0x0, 0x0);
        gbc.writeMem(0xc9a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc5d8, gbc.sp());
        EXPECT(0xc9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0371
        gbc.setState(0x12a8, 0xb10e, 0x5ab0, 0x8eb1, 0x23a5, 0xa01d, 0x1, 0x1);
        gbc.writeMem(0x12a8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb10e, gbc.sp());
        EXPECT(0x12aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0372
        gbc.setState(0x6852, 0xcca1, 0x51f0, 0x6c39, 0xf760, 0xeeb0, 0x1, 0x0);
        gbc.writeMem(0x6852, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xcca1, gbc.sp());
        EXPECT(0x6854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0373
        gbc.setState(0xcee3, 0x6acf, 0xc9d0, 0x5cc7, 0xa15b, 0x33db, 0x1, 0x0);
        gbc.writeMem(0xcee3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6acf, gbc.sp());
        EXPECT(0xcee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcee3));
        EXPECT(0xe3, gbc.readMem(0xcee4));
        // CB E3 0374
        gbc.setState(0xd6f3, 0x7fa4, 0x62d0, 0xd393, 0xf58b, 0x3d0b, 0x0, 0x1);
        gbc.writeMem(0xd6f3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7fa4, gbc.sp());
        EXPECT(0xd6f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6f3));
        EXPECT(0xe3, gbc.readMem(0xd6f4));
        // CB E3 0375
        gbc.setState(0x2399, 0xfa1e, 0xbe0, 0xd3c6, 0xf292, 0x128e, 0x1, 0x1);
        gbc.writeMem(0x2399, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xfa1e, gbc.sp());
        EXPECT(0x239b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0376
        gbc.setState(0x3f3d, 0xde65, 0x45a0, 0x7c10, 0xebe0, 0x3b09, 0x0, 0x0);
        gbc.writeMem(0x3f3d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xde65, gbc.sp());
        EXPECT(0x3f3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0377
        gbc.setState(0x7b8f, 0x3a4d, 0xc2a0, 0x47e4, 0x8470, 0x9a8b, 0x1, 0x0);
        gbc.writeMem(0x7b8f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3a4d, gbc.sp());
        EXPECT(0x7b91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0378
        gbc.setState(0x53b0, 0x4c96, 0x13a0, 0xf1e1, 0xd9d0, 0x6151, 0x1, 0x1);
        gbc.writeMem(0x53b0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4c96, gbc.sp());
        EXPECT(0x53b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0379
        gbc.setState(0xcb5e, 0x3d98, 0x6410, 0x6bb6, 0x8074, 0xfbc3, 0x0, 0x0);
        gbc.writeMem(0xcb5e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3d98, gbc.sp());
        EXPECT(0xcb60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb5e));
        EXPECT(0xe3, gbc.readMem(0xcb5f));
        // CB E3 037A
        gbc.setState(0x150e, 0x7f40, 0xf4e0, 0xf19b, 0xe2bc, 0xa12d, 0x1, 0x0);
        gbc.writeMem(0x150e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7f40, gbc.sp());
        EXPECT(0x1510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 037B
        gbc.setState(0x93ae, 0x677e, 0x8b90, 0x122a, 0x4157, 0x16be, 0x0, 0x0);
        gbc.writeMem(0x93ae, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x677e, gbc.sp());
        EXPECT(0x93b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ae));
        EXPECT(0xe3, gbc.readMem(0x93af));
        // CB E3 037C
        gbc.setState(0x922a, 0x8008, 0xdd80, 0x3a36, 0x37d1, 0xced8, 0x0, 0x1);
        gbc.writeMem(0x922a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8008, gbc.sp());
        EXPECT(0x922c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x922a));
        EXPECT(0xe3, gbc.readMem(0x922b));
        // CB E3 037D
        gbc.setState(0x51ce, 0x2de1, 0x8320, 0xa555, 0xdf1c, 0x42ab, 0x0, 0x0);
        gbc.writeMem(0x51ce, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2de1, gbc.sp());
        EXPECT(0x51d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 037E
        gbc.setState(0xa5d4, 0x8461, 0xd40, 0x9c8e, 0x8b4b, 0x242a, 0x0, 0x1);
        gbc.writeMem(0xa5d4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8461, gbc.sp());
        EXPECT(0xa5d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5d4));
        EXPECT(0xe3, gbc.readMem(0xa5d5));
        // CB E3 037F
        gbc.setState(0xed8b, 0x18d6, 0x2460, 0x62fd, 0x5bee, 0x2d86, 0x0, 0x1);
        gbc.writeMem(0xed8b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x18d6, gbc.sp());
        EXPECT(0xed8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed8b));
        EXPECT(0xe3, gbc.readMem(0xed8c));
        // CB E3 0380
        gbc.setState(0x9876, 0xebc, 0xe0e0, 0x70b5, 0xa2ea, 0x2106, 0x1, 0x1);
        gbc.writeMem(0x9876, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xebc, gbc.sp());
        EXPECT(0x9878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9876));
        EXPECT(0xe3, gbc.readMem(0x9877));
        // CB E3 0381
        gbc.setState(0x4fe8, 0xef12, 0x1780, 0xdc9a, 0x2b87, 0x45e4, 0x1, 0x0);
        gbc.writeMem(0x4fe8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xef12, gbc.sp());
        EXPECT(0x4fea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0382
        gbc.setState(0x9d0f, 0x3383, 0xfd90, 0x8458, 0x58cc, 0x632c, 0x1, 0x1);
        gbc.writeMem(0x9d0f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3383, gbc.sp());
        EXPECT(0x9d11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d0f));
        EXPECT(0xe3, gbc.readMem(0x9d10));
        // CB E3 0383
        gbc.setState(0x7dd1, 0xe771, 0x52f0, 0x16d7, 0xa54d, 0x58f4, 0x1, 0x0);
        gbc.writeMem(0x7dd1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe771, gbc.sp());
        EXPECT(0x7dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0384
        gbc.setState(0x3917, 0xafdd, 0xa30, 0x7be8, 0xf0db, 0xb6f, 0x0, 0x1);
        gbc.writeMem(0x3917, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xafdd, gbc.sp());
        EXPECT(0x3919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0385
        gbc.setState(0x91e8, 0x823f, 0x62c0, 0xafc0, 0x418d, 0x4c55, 0x1, 0x1);
        gbc.writeMem(0x91e8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x823f, gbc.sp());
        EXPECT(0x91ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91e8));
        EXPECT(0xe3, gbc.readMem(0x91e9));
        // CB E3 0386
        gbc.setState(0x3e4d, 0xc9a1, 0x8340, 0x882, 0xb42d, 0x247b, 0x0, 0x1);
        gbc.writeMem(0x3e4d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc9a1, gbc.sp());
        EXPECT(0x3e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0387
        gbc.setState(0xc013, 0xdb3a, 0xd9b0, 0xdd52, 0x6a3e, 0x7f5c, 0x1, 0x1);
        gbc.writeMem(0xc013, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xdb3a, gbc.sp());
        EXPECT(0xc015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc013));
        EXPECT(0xe3, gbc.readMem(0xc014));
        // CB E3 0388
        gbc.setState(0x2da9, 0x56b3, 0xcee0, 0xc43d, 0x2a9a, 0xb22c, 0x0, 0x1);
        gbc.writeMem(0x2da9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x56b3, gbc.sp());
        EXPECT(0x2dab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0389
        gbc.setState(0x40a7, 0xd8e8, 0x9440, 0x3269, 0x828c, 0x13eb, 0x0, 0x0);
        gbc.writeMem(0x40a7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd8e8, gbc.sp());
        EXPECT(0x40a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 038A
        gbc.setState(0xb402, 0x2616, 0x85c0, 0x9b10, 0x66cd, 0x9394, 0x1, 0x0);
        gbc.writeMem(0xb402, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2616, gbc.sp());
        EXPECT(0xb404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb402));
        EXPECT(0xe3, gbc.readMem(0xb403));
        // CB E3 038B
        gbc.setState(0xb971, 0x8daa, 0x9be0, 0xb5c1, 0x6e1f, 0x400e, 0x1, 0x1);
        gbc.writeMem(0xb971, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8daa, gbc.sp());
        EXPECT(0xb973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb971));
        EXPECT(0xe3, gbc.readMem(0xb972));
        // CB E3 038C
        gbc.setState(0x7e6a, 0xc066, 0x2fe0, 0xa43e, 0xfd2c, 0xb2e6, 0x1, 0x1);
        gbc.writeMem(0x7e6a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc066, gbc.sp());
        EXPECT(0x7e6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 038D
        gbc.setState(0x12b5, 0xc9d0, 0x1590, 0xd8a7, 0xa6c5, 0xf6d2, 0x0, 0x1);
        gbc.writeMem(0x12b5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc9d0, gbc.sp());
        EXPECT(0x12b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 038E
        gbc.setState(0x8600, 0x3898, 0xb7d0, 0xfcf0, 0xb138, 0x15f7, 0x0, 0x1);
        gbc.writeMem(0x8600, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3898, gbc.sp());
        EXPECT(0x8602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8600));
        EXPECT(0xe3, gbc.readMem(0x8601));
        // CB E3 038F
        gbc.setState(0x63aa, 0xef6e, 0xfbf0, 0x6dd9, 0x2084, 0x78f2, 0x1, 0x1);
        gbc.writeMem(0x63aa, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xef6e, gbc.sp());
        EXPECT(0x63ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0390
        gbc.setState(0x2d30, 0x3dcd, 0xf30, 0x7bb4, 0x277c, 0x8954, 0x0, 0x1);
        gbc.writeMem(0x2d30, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3dcd, gbc.sp());
        EXPECT(0x2d32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0391
        gbc.setState(0x2359, 0x3655, 0xeb0, 0xf9ee, 0x6300, 0xa0fe, 0x0, 0x1);
        gbc.writeMem(0x2359, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3655, gbc.sp());
        EXPECT(0x235b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0392
        gbc.setState(0xbba9, 0x8da5, 0xc980, 0xba59, 0x33ce, 0x4243, 0x1, 0x1);
        gbc.writeMem(0xbba9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8da5, gbc.sp());
        EXPECT(0xbbab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbba9));
        EXPECT(0xe3, gbc.readMem(0xbbaa));
        // CB E3 0393
        gbc.setState(0x510e, 0x64b9, 0xe560, 0x36, 0xa44d, 0x1435, 0x1, 0x1);
        gbc.writeMem(0x510e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x64b9, gbc.sp());
        EXPECT(0x5110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0394
        gbc.setState(0xe90d, 0x9d41, 0xb8f0, 0xbbff, 0x8b0e, 0x34ca, 0x1, 0x1);
        gbc.writeMem(0xe90d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9d41, gbc.sp());
        EXPECT(0xe90f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe90d));
        EXPECT(0xe3, gbc.readMem(0xe90e));
        // CB E3 0395
        gbc.setState(0xe840, 0x7c24, 0x80c0, 0x2982, 0x6cf3, 0x75e9, 0x1, 0x0);
        gbc.writeMem(0xe840, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7c24, gbc.sp());
        EXPECT(0xe842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe840));
        EXPECT(0xe3, gbc.readMem(0xe841));
        // CB E3 0396
        gbc.setState(0x4c69, 0x9ef0, 0xd500, 0x2b02, 0xfe7, 0xb1ce, 0x1, 0x0);
        gbc.writeMem(0x4c69, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9ef0, gbc.sp());
        EXPECT(0x4c6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 0397
        gbc.setState(0x68ef, 0x722, 0x95b0, 0xd23c, 0xa45f, 0xab41, 0x1, 0x1);
        gbc.writeMem(0x68ef, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x722, gbc.sp());
        EXPECT(0x68f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 0398
        gbc.setState(0xb703, 0x35df, 0xc700, 0xdb79, 0xd55d, 0xab0d, 0x0, 0x1);
        gbc.writeMem(0xb703, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x35df, gbc.sp());
        EXPECT(0xb705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb703));
        EXPECT(0xe3, gbc.readMem(0xb704));
        // CB E3 0399
        gbc.setState(0x3db4, 0x2c56, 0x9180, 0x824, 0xb943, 0xf9fb, 0x1, 0x0);
        gbc.writeMem(0x3db4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2c56, gbc.sp());
        EXPECT(0x3db6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 039A
        gbc.setState(0x3825, 0xdbeb, 0xfe00, 0xb434, 0xdf68, 0x43ee, 0x1, 0x1);
        gbc.writeMem(0x3825, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdbeb, gbc.sp());
        EXPECT(0x3827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 039B
        gbc.setState(0x1df9, 0x2a5b, 0xfc30, 0xe26b, 0x6a68, 0x3d34, 0x1, 0x1);
        gbc.writeMem(0x1df9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2a5b, gbc.sp());
        EXPECT(0x1dfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 039C
        gbc.setState(0x7db7, 0xef38, 0xcd60, 0x17bf, 0xe031, 0x5e29, 0x0, 0x0);
        gbc.writeMem(0x7db7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xef38, gbc.sp());
        EXPECT(0x7db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 039D
        gbc.setState(0xa887, 0x2a7a, 0xec80, 0x5131, 0xb38c, 0x834e, 0x0, 0x0);
        gbc.writeMem(0xa887, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2a7a, gbc.sp());
        EXPECT(0xa889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa887));
        EXPECT(0xe3, gbc.readMem(0xa888));
        // CB E3 039E
        gbc.setState(0x337a, 0x623c, 0x9430, 0x75ba, 0x5ded, 0xe201, 0x0, 0x1);
        gbc.writeMem(0x337a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x623c, gbc.sp());
        EXPECT(0x337c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 039F
        gbc.setState(0xc04b, 0x768b, 0x9a20, 0x9825, 0x5beb, 0x341d, 0x1, 0x1);
        gbc.writeMem(0xc04b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x768b, gbc.sp());
        EXPECT(0xc04d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc04b));
        EXPECT(0xe3, gbc.readMem(0xc04c));
        // CB E3 03A0
        gbc.setState(0xa46f, 0xb486, 0xef0, 0x25ec, 0xfa22, 0xbc6b, 0x0, 0x1);
        gbc.writeMem(0xa46f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb486, gbc.sp());
        EXPECT(0xa471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa46f));
        EXPECT(0xe3, gbc.readMem(0xa470));
        // CB E3 03A1
        gbc.setState(0x9fac, 0xcadb, 0xd680, 0xbf94, 0xf7d8, 0x5bac, 0x1, 0x1);
        gbc.writeMem(0x9fac, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xcadb, gbc.sp());
        EXPECT(0x9fae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fac));
        EXPECT(0xe3, gbc.readMem(0x9fad));
        // CB E3 03A2
        gbc.setState(0x62ab, 0xeb, 0xf4b0, 0xa3fb, 0x6ee0, 0x4d85, 0x1, 0x1);
        gbc.writeMem(0x62ab, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xeb, gbc.sp());
        EXPECT(0x62ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 03A3
        gbc.setState(0x1007, 0x5ef2, 0xe1d0, 0x259d, 0xd28e, 0x540b, 0x0, 0x0);
        gbc.writeMem(0x1007, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5ef2, gbc.sp());
        EXPECT(0x1009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 03A4
        gbc.setState(0x395c, 0x1e89, 0x8ac0, 0x1873, 0xd371, 0x8c96, 0x0, 0x1);
        gbc.writeMem(0x395c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1e89, gbc.sp());
        EXPECT(0x395e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 03A5
        gbc.setState(0x2ba7, 0xa1cb, 0x5190, 0xc0d, 0x840c, 0x508c, 0x0, 0x0);
        gbc.writeMem(0x2ba7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa1cb, gbc.sp());
        EXPECT(0x2ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 03A6
        gbc.setState(0x3612, 0x2b54, 0x360, 0x232f, 0xe994, 0xfe7b, 0x1, 0x1);
        gbc.writeMem(0x3612, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2b54, gbc.sp());
        EXPECT(0x3614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 03A7
        gbc.setState(0x8090, 0xf2e5, 0x67c0, 0xfe7, 0xbf7a, 0xdde3, 0x0, 0x0);
        gbc.writeMem(0x8090, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf2e5, gbc.sp());
        EXPECT(0x8092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8090));
        EXPECT(0xe3, gbc.readMem(0x8091));
        // CB E3 03A8
        gbc.setState(0xe3e9, 0xfab7, 0x26a0, 0xe07a, 0x355a, 0x9b3a, 0x1, 0x0);
        gbc.writeMem(0xe3e9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xfab7, gbc.sp());
        EXPECT(0xe3eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3e9));
        EXPECT(0xe3, gbc.readMem(0xe3ea));
        // CB E3 03A9
        gbc.setState(0x6f08, 0xccd1, 0x7250, 0xe66a, 0x1bb5, 0x11c3, 0x1, 0x0);
        gbc.writeMem(0x6f08, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xccd1, gbc.sp());
        EXPECT(0x6f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 03AA
        gbc.setState(0xce2a, 0xc66d, 0x15f0, 0x890, 0xdcd5, 0x278f, 0x0, 0x1);
        gbc.writeMem(0xce2a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc66d, gbc.sp());
        EXPECT(0xce2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce2a));
        EXPECT(0xe3, gbc.readMem(0xce2b));
        // CB E3 03AB
        gbc.setState(0x5eb5, 0x2f5b, 0x8000, 0x5f6c, 0xe283, 0x7040, 0x0, 0x0);
        gbc.writeMem(0x5eb5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2f5b, gbc.sp());
        EXPECT(0x5eb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 03AC
        gbc.setState(0x4856, 0xf633, 0x7000, 0xc4a0, 0xef07, 0xabb2, 0x1, 0x0);
        gbc.writeMem(0x4856, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf633, gbc.sp());
        EXPECT(0x4858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 03AE
        gbc.setState(0x4c49, 0x2843, 0xccf0, 0x5694, 0x9572, 0xa855, 0x1, 0x0);
        gbc.writeMem(0x4c49, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2843, gbc.sp());
        EXPECT(0x4c4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 03AF
        gbc.setState(0xde20, 0x4264, 0x4b20, 0x19cc, 0xf9bf, 0x147, 0x0, 0x0);
        gbc.writeMem(0xde20, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4264, gbc.sp());
        EXPECT(0xde22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde20));
        EXPECT(0xe3, gbc.readMem(0xde21));
        // CB E3 03B0
        gbc.setState(0xa514, 0xeca6, 0xdbd0, 0x9405, 0x771b, 0xc05d, 0x1, 0x0);
        gbc.writeMem(0xa514, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xeca6, gbc.sp());
        EXPECT(0xa516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa514));
        EXPECT(0xe3, gbc.readMem(0xa515));
        // CB E3 03B1
        gbc.setState(0x4247, 0xce3c, 0x1ab0, 0xaa, 0xaa8a, 0xa7fb, 0x1, 0x0);
        gbc.writeMem(0x4247, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xce3c, gbc.sp());
        EXPECT(0x4249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 03B2
        gbc.setState(0xedba, 0x6c1e, 0xe3e0, 0x1bab, 0x1f43, 0xd7a2, 0x1, 0x1);
        gbc.writeMem(0xedba, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6c1e, gbc.sp());
        EXPECT(0xedbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedba));
        EXPECT(0xe3, gbc.readMem(0xedbb));
        // CB E3 03B3
        gbc.setState(0x5fa3, 0xd94a, 0x7740, 0xe124, 0x31b2, 0x2ca0, 0x1, 0x1);
        gbc.writeMem(0x5fa3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd94a, gbc.sp());
        EXPECT(0x5fa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 03B4
        gbc.setState(0x87f7, 0xa8a7, 0x45e0, 0x4da6, 0x7c54, 0xfb9a, 0x1, 0x1);
        gbc.writeMem(0x87f7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa8a7, gbc.sp());
        EXPECT(0x87f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f7));
        EXPECT(0xe3, gbc.readMem(0x87f8));
        // CB E3 03B5
        gbc.setState(0x7cf7, 0x3ea9, 0x7070, 0xf6fa, 0xb965, 0x5b90, 0x1, 0x0);
        gbc.writeMem(0x7cf7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3ea9, gbc.sp());
        EXPECT(0x7cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 03B6
        gbc.setState(0x321f, 0xb2fd, 0xbfc0, 0xd02c, 0x9afe, 0x771a, 0x1, 0x1);
        gbc.writeMem(0x321f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb2fd, gbc.sp());
        EXPECT(0x3221, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 03B7
        gbc.setState(0xb778, 0x3e39, 0xa960, 0x965e, 0x4b47, 0x75aa, 0x1, 0x0);
        gbc.writeMem(0xb778, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3e39, gbc.sp());
        EXPECT(0xb77a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb778));
        EXPECT(0xe3, gbc.readMem(0xb779));
        // CB E3 03B8
        gbc.setState(0xbc02, 0x1468, 0x9390, 0xbba8, 0x3015, 0x3272, 0x0, 0x0);
        gbc.writeMem(0xbc02, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1468, gbc.sp());
        EXPECT(0xbc04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc02));
        EXPECT(0xe3, gbc.readMem(0xbc03));
        // CB E3 03B9
        gbc.setState(0x6976, 0xe0bf, 0x8780, 0xdaba, 0x1378, 0x51f8, 0x1, 0x0);
        gbc.writeMem(0x6976, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe0bf, gbc.sp());
        EXPECT(0x6978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 03BA
        gbc.setState(0x7da9, 0xa97b, 0xe820, 0x682e, 0xcb1a, 0xc9a2, 0x1, 0x1);
        gbc.writeMem(0x7da9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa97b, gbc.sp());
        EXPECT(0x7dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 03BB
        gbc.setState(0x4fb3, 0xe1a5, 0xa0d0, 0x1245, 0x7f6a, 0x2fba, 0x0, 0x0);
        gbc.writeMem(0x4fb3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe1a5, gbc.sp());
        EXPECT(0x4fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 03BC
        gbc.setState(0x61d7, 0xc5d9, 0x7540, 0x4517, 0x28c5, 0xcc4b, 0x1, 0x1);
        gbc.writeMem(0x61d7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc5d9, gbc.sp());
        EXPECT(0x61d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 03BD
        gbc.setState(0x3c4f, 0x4109, 0xf360, 0x9e66, 0xf8c3, 0x3b4d, 0x0, 0x0);
        gbc.writeMem(0x3c4f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4109, gbc.sp());
        EXPECT(0x3c51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 03BE
        gbc.setState(0xd7c4, 0xf2e7, 0x5990, 0x34b6, 0xf9f0, 0xcae7, 0x1, 0x0);
        gbc.writeMem(0xd7c4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf2e7, gbc.sp());
        EXPECT(0xd7c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7c4));
        EXPECT(0xe3, gbc.readMem(0xd7c5));
        // CB E3 03BF
        gbc.setState(0x94d5, 0xc555, 0x98d0, 0x618e, 0xca42, 0xb946, 0x1, 0x1);
        gbc.writeMem(0x94d5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc555, gbc.sp());
        EXPECT(0x94d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94d5));
        EXPECT(0xe3, gbc.readMem(0x94d6));
        // CB E3 03C1
        gbc.setState(0x6089, 0xe496, 0x53b0, 0x93ff, 0xf88c, 0x3bd8, 0x0, 0x0);
        gbc.writeMem(0x6089, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe496, gbc.sp());
        EXPECT(0x608b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 03C2
        gbc.setState(0x7df3, 0xc71e, 0x4bc0, 0x1de8, 0xd3f5, 0x2448, 0x0, 0x1);
        gbc.writeMem(0x7df3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc71e, gbc.sp());
        EXPECT(0x7df5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 03C3
        gbc.setState(0x3d77, 0x659b, 0x68d0, 0xc7c5, 0x9f8e, 0xeb2, 0x0, 0x0);
        gbc.writeMem(0x3d77, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x659b, gbc.sp());
        EXPECT(0x3d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 03C4
        gbc.setState(0xdc7c, 0x4ef9, 0x9a50, 0x8ff4, 0x810f, 0x98f9, 0x0, 0x0);
        gbc.writeMem(0xdc7c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4ef9, gbc.sp());
        EXPECT(0xdc7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc7c));
        EXPECT(0xe3, gbc.readMem(0xdc7d));
        // CB E3 03C6
        gbc.setState(0xe316, 0x92fd, 0xbc60, 0xeea2, 0x6a14, 0x2cab, 0x1, 0x1);
        gbc.writeMem(0xe316, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x92fd, gbc.sp());
        EXPECT(0xe318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe316));
        EXPECT(0xe3, gbc.readMem(0xe317));
        // CB E3 03C7
        gbc.setState(0x6d04, 0x81c6, 0x7320, 0x3759, 0x74bf, 0xdd7b, 0x0, 0x1);
        gbc.writeMem(0x6d04, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x81c6, gbc.sp());
        EXPECT(0x6d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 03C8
        gbc.setState(0xe220, 0x5335, 0x21a0, 0x1d36, 0x83af, 0xd63d, 0x0, 0x0);
        gbc.writeMem(0xe220, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5335, gbc.sp());
        EXPECT(0xe222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe220));
        EXPECT(0xe3, gbc.readMem(0xe221));
        // CB E3 03C9
        gbc.setState(0x99d1, 0x80ac, 0x1690, 0x7499, 0x5ba, 0x9c5d, 0x1, 0x0);
        gbc.writeMem(0x99d1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x80ac, gbc.sp());
        EXPECT(0x99d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99d1));
        EXPECT(0xe3, gbc.readMem(0x99d2));
        // CB E3 03CA
        gbc.setState(0xe4ef, 0xf996, 0xaa70, 0x8043, 0xd0a3, 0xb883, 0x1, 0x0);
        gbc.writeMem(0xe4ef, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf996, gbc.sp());
        EXPECT(0xe4f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ef));
        EXPECT(0xe3, gbc.readMem(0xe4f0));
        // CB E3 03CB
        gbc.setState(0xeea, 0x75a4, 0xffe0, 0x1996, 0xcc45, 0xecf0, 0x1, 0x0);
        gbc.writeMem(0xeea, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x75a4, gbc.sp());
        EXPECT(0xeec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 03CC
        gbc.setState(0x3b80, 0x90cf, 0x4800, 0xf8cf, 0x8f0e, 0x4bd6, 0x0, 0x1);
        gbc.writeMem(0x3b80, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x90cf, gbc.sp());
        EXPECT(0x3b82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 03CD
        gbc.setState(0x8894, 0x8c33, 0xe1d0, 0x2b9, 0xbe6f, 0x42fe, 0x0, 0x0);
        gbc.writeMem(0x8894, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8c33, gbc.sp());
        EXPECT(0x8896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8894));
        EXPECT(0xe3, gbc.readMem(0x8895));
        // CB E3 03CE
        gbc.setState(0xc205, 0xbbb6, 0x30d0, 0x6c4a, 0x5876, 0x29db, 0x0, 0x1);
        gbc.writeMem(0xc205, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbbb6, gbc.sp());
        EXPECT(0xc207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc205));
        EXPECT(0xe3, gbc.readMem(0xc206));
        // CB E3 03CF
        gbc.setState(0x246c, 0x39bb, 0x8cf0, 0x392c, 0x69a2, 0x25cb, 0x0, 0x0);
        gbc.writeMem(0x246c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x39bb, gbc.sp());
        EXPECT(0x246e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 03D0
        gbc.setState(0x24a8, 0x71f6, 0x2b10, 0x142b, 0x3ce9, 0xc882, 0x0, 0x1);
        gbc.writeMem(0x24a8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x71f6, gbc.sp());
        EXPECT(0x24aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 03D1
        gbc.setState(0xc34e, 0x9e4d, 0x6440, 0xe556, 0x24a7, 0x5b2a, 0x0, 0x0);
        gbc.writeMem(0xc34e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9e4d, gbc.sp());
        EXPECT(0xc350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc34e));
        EXPECT(0xe3, gbc.readMem(0xc34f));
        // CB E3 03D2
        gbc.setState(0xd602, 0x482a, 0xc3f0, 0x3dae, 0x431, 0xed89, 0x0, 0x1);
        gbc.writeMem(0xd602, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x482a, gbc.sp());
        EXPECT(0xd604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd602));
        EXPECT(0xe3, gbc.readMem(0xd603));
        // CB E3 03D3
        gbc.setState(0x88ed, 0xa52d, 0x4f60, 0xe494, 0x59fa, 0x109b, 0x0, 0x1);
        gbc.writeMem(0x88ed, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa52d, gbc.sp());
        EXPECT(0x88ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ed));
        EXPECT(0xe3, gbc.readMem(0x88ee));
        // CB E3 03D4
        gbc.setState(0xb511, 0x14f1, 0x2810, 0x1b74, 0x1a5f, 0xbeaa, 0x1, 0x1);
        gbc.writeMem(0xb511, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x14f1, gbc.sp());
        EXPECT(0xb513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb511));
        EXPECT(0xe3, gbc.readMem(0xb512));
        // CB E3 03D6
        gbc.setState(0xa037, 0x95fe, 0xb860, 0xfc50, 0x5a33, 0x46f9, 0x0, 0x0);
        gbc.writeMem(0xa037, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x95fe, gbc.sp());
        EXPECT(0xa039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa037));
        EXPECT(0xe3, gbc.readMem(0xa038));
        // CB E3 03D7
        gbc.setState(0x6c4e, 0xdb4e, 0xf400, 0x46a3, 0x3311, 0x98c7, 0x1, 0x0);
        gbc.writeMem(0x6c4e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xdb4e, gbc.sp());
        EXPECT(0x6c50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 03D8
        gbc.setState(0x35c0, 0xcae1, 0xd7c0, 0x5cb1, 0xc6ef, 0x4d50, 0x0, 0x0);
        gbc.writeMem(0x35c0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xcae1, gbc.sp());
        EXPECT(0x35c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 03D9
        gbc.setState(0x1e56, 0x15b8, 0xa5c0, 0xf8a1, 0xa78b, 0x7a3b, 0x0, 0x0);
        gbc.writeMem(0x1e56, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x15b8, gbc.sp());
        EXPECT(0x1e58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 03DA
        gbc.setState(0x25df, 0x15a0, 0xe080, 0xca52, 0x8bd6, 0xcf7c, 0x0, 0x0);
        gbc.writeMem(0x25df, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x15a0, gbc.sp());
        EXPECT(0x25e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 03DB
        gbc.setState(0x3c19, 0x280b, 0xaaa0, 0xad8b, 0xd0c4, 0x2827, 0x1, 0x1);
        gbc.writeMem(0x3c19, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x280b, gbc.sp());
        EXPECT(0x3c1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 03DC
        gbc.setState(0x1738, 0x6f9b, 0x7e10, 0x3c90, 0x9a55, 0xa973, 0x0, 0x0);
        gbc.writeMem(0x1738, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6f9b, gbc.sp());
        EXPECT(0x173a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 03DD
        gbc.setState(0x430b, 0xd86f, 0x7090, 0x9ab5, 0x9c84, 0xb506, 0x1, 0x0);
        gbc.writeMem(0x430b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd86f, gbc.sp());
        EXPECT(0x430d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 03DE
        gbc.setState(0xa3fb, 0x6335, 0x6340, 0xc328, 0xc230, 0xd342, 0x0, 0x0);
        gbc.writeMem(0xa3fb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6335, gbc.sp());
        EXPECT(0xa3fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3fb));
        EXPECT(0xe3, gbc.readMem(0xa3fc));
        // CB E3 03DF
        gbc.setState(0x9a4e, 0x8762, 0x7e00, 0xaa11, 0x5e0a, 0xd285, 0x0, 0x0);
        gbc.writeMem(0x9a4e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8762, gbc.sp());
        EXPECT(0x9a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a4e));
        EXPECT(0xe3, gbc.readMem(0x9a4f));
        // CB E3 03E1
        gbc.setState(0x52d8, 0xe9b3, 0x40c0, 0xac8a, 0xc703, 0xe9f7, 0x1, 0x1);
        gbc.writeMem(0x52d8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe9b3, gbc.sp());
        EXPECT(0x52da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E3 03E2
        gbc.setState(0xb76c, 0xbca5, 0xe7b0, 0xaa79, 0xdc1c, 0xd1a9, 0x1, 0x1);
        gbc.writeMem(0xb76c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xbca5, gbc.sp());
        EXPECT(0xb76e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb76c));
        EXPECT(0xe3, gbc.readMem(0xb76d));
        // CB E3 03E3
        gbc.setState(0x6a7f, 0xbc8d, 0xaf10, 0x835f, 0xbfd1, 0xbe80, 0x1, 0x1);
        gbc.writeMem(0x6a7f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbc8d, gbc.sp());
        EXPECT(0x6a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 03E4
        gbc.setState(0xcac5, 0x2899, 0x800, 0x1fe0, 0x6857, 0x9f7, 0x0, 0x0);
        gbc.writeMem(0xcac5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2899, gbc.sp());
        EXPECT(0xcac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcac5));
        EXPECT(0xe3, gbc.readMem(0xcac6));
        // CB E3 03E5
        gbc.setState(0x2756, 0x8ebb, 0x2290, 0x7806, 0x438, 0xf0d0, 0x0, 0x1);
        gbc.writeMem(0x2756, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8ebb, gbc.sp());
        EXPECT(0x2758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E3 03E6
        gbc.setState(0x9927, 0x8fcc, 0xf860, 0x49ed, 0x5f71, 0xd34c, 0x0, 0x0);
        gbc.writeMem(0x9927, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8fcc, gbc.sp());
        EXPECT(0x9929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9927));
        EXPECT(0xe3, gbc.readMem(0x9928));
        // CB E3 03E7
        gbc.setState(0x895e, 0xfc2, 0x48e0, 0xe4a, 0x40c6, 0x45f0, 0x1, 0x0);
        gbc.writeMem(0x895e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xfc2, gbc.sp());
        EXPECT(0x8960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x895e));
        EXPECT(0xe3, gbc.readMem(0x895f));
    }
