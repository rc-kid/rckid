    TEST(gbcemu, opcode_cb_e3) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB E3 0000
        gbc.setState(0xe156, 0x3406, 0xff40, 0x5da6, 0x1496, 0xc635, 0x1, 0x1);
        gbc.writeMem(0xe156, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3406);
        EXPECT(gbc.pc(), 0xe158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe156), 0xcb);
        EXPECT(gbc.readMem(0xe157), 0xe3);
        // CB E3 0002
        gbc.setState(0x338e, 0x16, 0x7f70, 0xc11c, 0x27ff, 0x45b0, 0x1, 0x1);
        gbc.writeMem(0x338e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x16);
        EXPECT(gbc.pc(), 0x3390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0003
        gbc.setState(0x77ab, 0x87d0, 0xbaa0, 0xa707, 0xc7b9, 0x1b29, 0x1, 0x1);
        gbc.writeMem(0x77ab, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x87d0);
        EXPECT(gbc.pc(), 0x77ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0004
        gbc.setState(0x4d74, 0x1d0e, 0xbaf0, 0x993c, 0x933e, 0xcf93, 0x1, 0x1);
        gbc.writeMem(0x4d74, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1d0e);
        EXPECT(gbc.pc(), 0x4d76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0005
        gbc.setState(0x809a, 0xa435, 0xfe20, 0x2a37, 0x5094, 0x1ba3, 0x1, 0x0);
        gbc.writeMem(0x809a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa435);
        EXPECT(gbc.pc(), 0x809c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x809a), 0xcb);
        EXPECT(gbc.readMem(0x809b), 0xe3);
        // CB E3 0006
        gbc.setState(0x5a01, 0x7fa6, 0x1b30, 0xf39a, 0xae67, 0x52ad, 0x0, 0x0);
        gbc.writeMem(0x5a01, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x7fa6);
        EXPECT(gbc.pc(), 0x5a03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0007
        gbc.setState(0xa74a, 0xb17a, 0x3570, 0x88ef, 0x55eb, 0x9530, 0x0, 0x1);
        gbc.writeMem(0xa74a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb17a);
        EXPECT(gbc.pc(), 0xa74c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa74a), 0xcb);
        EXPECT(gbc.readMem(0xa74b), 0xe3);
        // CB E3 0008
        gbc.setState(0x3528, 0xf0b5, 0xb640, 0x8b36, 0xd179, 0x9fb1, 0x0, 0x0);
        gbc.writeMem(0x3528, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xf0b5);
        EXPECT(gbc.pc(), 0x352a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0009
        gbc.setState(0xd651, 0xbce4, 0xc280, 0x57c, 0x1b11, 0x70a0, 0x0, 0x1);
        gbc.writeMem(0xd651, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xbce4);
        EXPECT(gbc.pc(), 0xd653);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd651), 0xcb);
        EXPECT(gbc.readMem(0xd652), 0xe3);
        // CB E3 000A
        gbc.setState(0x7769, 0x199a, 0xfa60, 0x2e3, 0x3a8c, 0xbf18, 0x1, 0x0);
        gbc.writeMem(0x7769, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x199a);
        EXPECT(gbc.pc(), 0x776b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 000C
        gbc.setState(0xb8db, 0x969, 0xbcd0, 0xd997, 0xf8b2, 0x6e75, 0x0, 0x0);
        gbc.writeMem(0xb8db, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x969);
        EXPECT(gbc.pc(), 0xb8dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8db), 0xcb);
        EXPECT(gbc.readMem(0xb8dc), 0xe3);
        // CB E3 000D
        gbc.setState(0x2e28, 0x2307, 0x6b80, 0xe098, 0x6685, 0x2abf, 0x0, 0x1);
        gbc.writeMem(0x2e28, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x2307);
        EXPECT(gbc.pc(), 0x2e2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 000E
        gbc.setState(0xb5fa, 0xa6d7, 0xad0, 0x3e50, 0x889e, 0x45f2, 0x1, 0x0);
        gbc.writeMem(0xb5fa, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa6d7);
        EXPECT(gbc.pc(), 0xb5fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5fa), 0xcb);
        EXPECT(gbc.readMem(0xb5fb), 0xe3);
        // CB E3 000F
        gbc.setState(0x7038, 0x7f89, 0xc420, 0xeb20, 0x60eb, 0x3fed, 0x0, 0x1);
        gbc.writeMem(0x7038, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x7f89);
        EXPECT(gbc.pc(), 0x703a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0010
        gbc.setState(0x489, 0xad27, 0x80d0, 0x1c09, 0xd1e7, 0x2294, 0x0, 0x0);
        gbc.writeMem(0x489, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xad27);
        EXPECT(gbc.pc(), 0x48b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0011
        gbc.setState(0x84ae, 0xa66a, 0x9f10, 0x1d79, 0x8d04, 0x32d, 0x1, 0x1);
        gbc.writeMem(0x84ae, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xa66a);
        EXPECT(gbc.pc(), 0x84b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84ae), 0xcb);
        EXPECT(gbc.readMem(0x84af), 0xe3);
        // CB E3 0012
        gbc.setState(0x111e, 0xc186, 0xc2a0, 0x1bfa, 0x88a0, 0xdae7, 0x1, 0x0);
        gbc.writeMem(0x111e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc186);
        EXPECT(gbc.pc(), 0x1120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0013
        gbc.setState(0x5921, 0x9068, 0xabe0, 0x665c, 0xaba, 0x9674, 0x1, 0x0);
        gbc.writeMem(0x5921, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9068);
        EXPECT(gbc.pc(), 0x5923);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0014
        gbc.setState(0x40b6, 0x9be9, 0x8360, 0x95d, 0xcbea, 0x116b, 0x1, 0x0);
        gbc.writeMem(0x40b6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x9be9);
        EXPECT(gbc.pc(), 0x40b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0015
        gbc.setState(0xc3fa, 0xbc82, 0x5b80, 0x1dec, 0xa62e, 0x3d80, 0x1, 0x0);
        gbc.writeMem(0xc3fa, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xbc82);
        EXPECT(gbc.pc(), 0xc3fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3fa), 0xcb);
        EXPECT(gbc.readMem(0xc3fb), 0xe3);
        // CB E3 0016
        gbc.setState(0x5d9c, 0xd685, 0xe150, 0x79c9, 0xf0a9, 0xcdda, 0x0, 0x0);
        gbc.writeMem(0x5d9c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xd685);
        EXPECT(gbc.pc(), 0x5d9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0017
        gbc.setState(0x8f7, 0x66ec, 0x3300, 0xa5ab, 0x7377, 0x740e, 0x1, 0x0);
        gbc.writeMem(0x8f7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x66ec);
        EXPECT(gbc.pc(), 0x8f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0019
        gbc.setState(0x903f, 0x3393, 0xe9a0, 0xa3e6, 0xc897, 0x13ac, 0x0, 0x1);
        gbc.writeMem(0x903f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x3393);
        EXPECT(gbc.pc(), 0x9041);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x903f), 0xcb);
        EXPECT(gbc.readMem(0x9040), 0xe3);
        // CB E3 001A
        gbc.setState(0xc28b, 0x1518, 0x140, 0x11ef, 0xafa4, 0x452, 0x1, 0x1);
        gbc.writeMem(0xc28b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x1518);
        EXPECT(gbc.pc(), 0xc28d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc28b), 0xcb);
        EXPECT(gbc.readMem(0xc28c), 0xe3);
        // CB E3 001B
        gbc.setState(0x7901, 0x2df1, 0x68f0, 0x294f, 0x2b3d, 0xaf3e, 0x1, 0x0);
        gbc.writeMem(0x7901, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2df1);
        EXPECT(gbc.pc(), 0x7903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 001C
        gbc.setState(0x7328, 0x3e21, 0x7570, 0x8ff5, 0x5032, 0x2436, 0x0, 0x1);
        gbc.writeMem(0x7328, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3e21);
        EXPECT(gbc.pc(), 0x732a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 001D
        gbc.setState(0xc960, 0xa985, 0xf650, 0x2981, 0x2937, 0xcd6d, 0x1, 0x0);
        gbc.writeMem(0xc960, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa985);
        EXPECT(gbc.pc(), 0xc962);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc960), 0xcb);
        EXPECT(gbc.readMem(0xc961), 0xe3);
        // CB E3 001E
        gbc.setState(0xba5f, 0x544e, 0xa030, 0x2544, 0x17e6, 0x12d, 0x0, 0x1);
        gbc.writeMem(0xba5f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x544e);
        EXPECT(gbc.pc(), 0xba61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba5f), 0xcb);
        EXPECT(gbc.readMem(0xba60), 0xe3);
        // CB E3 001F
        gbc.setState(0xeae2, 0x6115, 0x5920, 0xe3c6, 0xf29, 0xca0c, 0x0, 0x1);
        gbc.writeMem(0xeae2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x6115);
        EXPECT(gbc.pc(), 0xeae4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeae2), 0xcb);
        EXPECT(gbc.readMem(0xeae3), 0xe3);
        // CB E3 0020
        gbc.setState(0x14b, 0xf5f9, 0x780, 0xa8a3, 0x542c, 0xb756, 0x0, 0x0);
        gbc.writeMem(0x14b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xf5f9);
        EXPECT(gbc.pc(), 0x14d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0021
        gbc.setState(0xd28a, 0xfd6c, 0xb100, 0x9f4d, 0x90ee, 0xc423, 0x0, 0x0);
        gbc.writeMem(0xd28a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xfd6c);
        EXPECT(gbc.pc(), 0xd28c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd28a), 0xcb);
        EXPECT(gbc.readMem(0xd28b), 0xe3);
        // CB E3 0022
        gbc.setState(0x43d4, 0xf66e, 0xd7f0, 0x325c, 0x5563, 0x436f, 0x1, 0x0);
        gbc.writeMem(0x43d4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xf66e);
        EXPECT(gbc.pc(), 0x43d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0023
        gbc.setState(0x2532, 0x51b1, 0x6e90, 0x5a3f, 0x3f31, 0xbef8, 0x0, 0x1);
        gbc.writeMem(0x2532, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x51b1);
        EXPECT(gbc.pc(), 0x2534);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0024
        gbc.setState(0x28d0, 0xe1fa, 0x3bf0, 0x4862, 0x3020, 0xc9f1, 0x0, 0x1);
        gbc.writeMem(0x28d0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe1fa);
        EXPECT(gbc.pc(), 0x28d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0025
        gbc.setState(0x141f, 0x342e, 0x3020, 0x72ba, 0xaf8c, 0xa72d, 0x0, 0x0);
        gbc.writeMem(0x141f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x342e);
        EXPECT(gbc.pc(), 0x1421);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0026
        gbc.setState(0x9f3d, 0xb8d7, 0x5660, 0xe938, 0x58a5, 0xb719, 0x1, 0x1);
        gbc.writeMem(0x9f3d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xb8d7);
        EXPECT(gbc.pc(), 0x9f3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f3d), 0xcb);
        EXPECT(gbc.readMem(0x9f3e), 0xe3);
        // CB E3 0027
        gbc.setState(0x3a3d, 0xc704, 0x2990, 0x7784, 0x2507, 0x9c68, 0x0, 0x1);
        gbc.writeMem(0x3a3d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc704);
        EXPECT(gbc.pc(), 0x3a3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0028
        gbc.setState(0x668, 0xcce, 0xa4f0, 0xa20a, 0xadc2, 0xa09b, 0x1, 0x1);
        gbc.writeMem(0x668, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xcce);
        EXPECT(gbc.pc(), 0x66a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0029
        gbc.setState(0x272d, 0x4649, 0x6b30, 0x4b63, 0x97dd, 0xbfed, 0x0, 0x1);
        gbc.writeMem(0x272d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x4649);
        EXPECT(gbc.pc(), 0x272f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 002A
        gbc.setState(0x5ded, 0xc679, 0x56b0, 0xdef4, 0xad02, 0xb606, 0x0, 0x1);
        gbc.writeMem(0x5ded, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc679);
        EXPECT(gbc.pc(), 0x5def);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 002B
        gbc.setState(0xaa00, 0x51e6, 0x5e30, 0x4d34, 0x8f5b, 0xc8d5, 0x0, 0x0);
        gbc.writeMem(0xaa00, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x51e6);
        EXPECT(gbc.pc(), 0xaa02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa00), 0xcb);
        EXPECT(gbc.readMem(0xaa01), 0xe3);
        // CB E3 002C
        gbc.setState(0x60cc, 0x5a59, 0xa930, 0x2aa, 0xb11a, 0x75de, 0x0, 0x1);
        gbc.writeMem(0x60cc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x5a59);
        EXPECT(gbc.pc(), 0x60ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 002D
        gbc.setState(0x830f, 0x37b3, 0x2340, 0xca80, 0xd12d, 0xdb2, 0x1, 0x0);
        gbc.writeMem(0x830f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x37b3);
        EXPECT(gbc.pc(), 0x8311);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x830f), 0xcb);
        EXPECT(gbc.readMem(0x8310), 0xe3);
        // CB E3 002E
        gbc.setState(0x2d64, 0xb395, 0x95c0, 0xa76f, 0xc3bc, 0x947, 0x0, 0x0);
        gbc.writeMem(0x2d64, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb395);
        EXPECT(gbc.pc(), 0x2d66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 002F
        gbc.setState(0x1b27, 0xdb1e, 0x9e90, 0x597c, 0xb2a6, 0xd9d6, 0x0, 0x0);
        gbc.writeMem(0x1b27, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xdb1e);
        EXPECT(gbc.pc(), 0x1b29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0030
        gbc.setState(0x2e6c, 0x657b, 0x5c00, 0x43b5, 0xe3ce, 0x4eb1, 0x1, 0x0);
        gbc.writeMem(0x2e6c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x657b);
        EXPECT(gbc.pc(), 0x2e6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0031
        gbc.setState(0x3afb, 0xb7a4, 0xe670, 0x705b, 0x8d08, 0xc06d, 0x1, 0x1);
        gbc.writeMem(0x3afb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xb7a4);
        EXPECT(gbc.pc(), 0x3afd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0032
        gbc.setState(0xacf7, 0xa8d1, 0x3450, 0x90b5, 0x85d2, 0xd6b5, 0x0, 0x1);
        gbc.writeMem(0xacf7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xa8d1);
        EXPECT(gbc.pc(), 0xacf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacf7), 0xcb);
        EXPECT(gbc.readMem(0xacf8), 0xe3);
        // CB E3 0033
        gbc.setState(0x25ed, 0x30c4, 0x6110, 0xd037, 0x7168, 0x46dc, 0x1, 0x1);
        gbc.writeMem(0x25ed, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x30c4);
        EXPECT(gbc.pc(), 0x25ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0034
        gbc.setState(0x1645, 0x9711, 0xfc30, 0x3933, 0x11cc, 0x4e03, 0x1, 0x1);
        gbc.writeMem(0x1645, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x9711);
        EXPECT(gbc.pc(), 0x1647);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0035
        gbc.setState(0x170b, 0xea75, 0x8830, 0x3ff0, 0x2d88, 0xd026, 0x1, 0x0);
        gbc.writeMem(0x170b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xea75);
        EXPECT(gbc.pc(), 0x170d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0036
        gbc.setState(0xe6be, 0x1260, 0xa260, 0x3709, 0xc520, 0x6651, 0x0, 0x1);
        gbc.writeMem(0xe6be, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x1260);
        EXPECT(gbc.pc(), 0xe6c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6be), 0xcb);
        EXPECT(gbc.readMem(0xe6bf), 0xe3);
        // CB E3 0037
        gbc.setState(0x1641, 0x9ca0, 0x2ba0, 0xe9a4, 0xd483, 0x76d3, 0x0, 0x0);
        gbc.writeMem(0x1641, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9ca0);
        EXPECT(gbc.pc(), 0x1643);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0038
        gbc.setState(0x67fd, 0xf826, 0x9d00, 0xc585, 0xf5b8, 0x3f62, 0x0, 0x1);
        gbc.writeMem(0x67fd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf826);
        EXPECT(gbc.pc(), 0x67ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0039
        gbc.setState(0x6bfd, 0x7942, 0x8030, 0xa2c1, 0xbce1, 0x6429, 0x0, 0x1);
        gbc.writeMem(0x6bfd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7942);
        EXPECT(gbc.pc(), 0x6bff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 003A
        gbc.setState(0xc29e, 0xb74d, 0x2950, 0x58da, 0xf6b3, 0x5942, 0x0, 0x1);
        gbc.writeMem(0xc29e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb74d);
        EXPECT(gbc.pc(), 0xc2a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc29e), 0xcb);
        EXPECT(gbc.readMem(0xc29f), 0xe3);
        // CB E3 003B
        gbc.setState(0x75fb, 0xc725, 0xf900, 0x4498, 0x4bfe, 0x6519, 0x1, 0x1);
        gbc.writeMem(0x75fb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc725);
        EXPECT(gbc.pc(), 0x75fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 003C
        gbc.setState(0xa6e1, 0x59e7, 0x3be0, 0x4648, 0x2ff6, 0xcf01, 0x0, 0x0);
        gbc.writeMem(0xa6e1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x59e7);
        EXPECT(gbc.pc(), 0xa6e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6e1), 0xcb);
        EXPECT(gbc.readMem(0xa6e2), 0xe3);
        // CB E3 003D
        gbc.setState(0x3938, 0x5b95, 0xae70, 0xdd3c, 0xc1f6, 0x4dcf, 0x0, 0x0);
        gbc.writeMem(0x3938, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x5b95);
        EXPECT(gbc.pc(), 0x393a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 003E
        gbc.setState(0xe1d7, 0x97ed, 0x5ca0, 0x22d9, 0xe116, 0xc372, 0x1, 0x1);
        gbc.writeMem(0xe1d7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x97ed);
        EXPECT(gbc.pc(), 0xe1d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1d7), 0xcb);
        EXPECT(gbc.readMem(0xe1d8), 0xe3);
        // CB E3 003F
        gbc.setState(0x4745, 0x45d1, 0x6760, 0xd1bf, 0x411f, 0x374b, 0x0, 0x0);
        gbc.writeMem(0x4745, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x45d1);
        EXPECT(gbc.pc(), 0x4747);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0040
        gbc.setState(0x617c, 0x1900, 0xb990, 0x9477, 0x5a6e, 0x6ecc, 0x1, 0x0);
        gbc.writeMem(0x617c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1900);
        EXPECT(gbc.pc(), 0x617e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0041
        gbc.setState(0x3ff, 0x42d8, 0x7fd0, 0xda35, 0x882d, 0x7908, 0x1, 0x1);
        gbc.writeMem(0x3ff, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x42d8);
        EXPECT(gbc.pc(), 0x401);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0042
        gbc.setState(0x4600, 0x7ae6, 0x83c0, 0xc3c6, 0x4cb2, 0x90e6, 0x1, 0x1);
        gbc.writeMem(0x4600, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7ae6);
        EXPECT(gbc.pc(), 0x4602);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0043
        gbc.setState(0xd925, 0xbf58, 0x8770, 0x64de, 0xf2a6, 0x65d5, 0x1, 0x0);
        gbc.writeMem(0xd925, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xbf58);
        EXPECT(gbc.pc(), 0xd927);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd925), 0xcb);
        EXPECT(gbc.readMem(0xd926), 0xe3);
        // CB E3 0044
        gbc.setState(0x587, 0x344, 0x7e40, 0x6926, 0x6f5a, 0xb4c1, 0x1, 0x1);
        gbc.writeMem(0x587, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x344);
        EXPECT(gbc.pc(), 0x589);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0045
        gbc.setState(0x4158, 0x6210, 0x8350, 0x4cdc, 0x7219, 0x365d, 0x1, 0x0);
        gbc.writeMem(0x4158, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6210);
        EXPECT(gbc.pc(), 0x415a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0046
        gbc.setState(0x7b7, 0x16a2, 0xe300, 0x56c4, 0x5197, 0x7571, 0x1, 0x1);
        gbc.writeMem(0x7b7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x16a2);
        EXPECT(gbc.pc(), 0x7b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0047
        gbc.setState(0x211a, 0xd083, 0x3c90, 0x124d, 0x2e0d, 0x8c63, 0x0, 0x0);
        gbc.writeMem(0x211a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd083);
        EXPECT(gbc.pc(), 0x211c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0048
        gbc.setState(0x9f6a, 0x8d99, 0x8380, 0x8211, 0x8ba7, 0xe782, 0x1, 0x1);
        gbc.writeMem(0x9f6a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8d99);
        EXPECT(gbc.pc(), 0x9f6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f6a), 0xcb);
        EXPECT(gbc.readMem(0x9f6b), 0xe3);
        // CB E3 004A
        gbc.setState(0x1b5, 0xc794, 0x8020, 0x69b0, 0xc286, 0x80b5, 0x0, 0x1);
        gbc.writeMem(0x1b5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc794);
        EXPECT(gbc.pc(), 0x1b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 004B
        gbc.setState(0xd2eb, 0x4709, 0xd870, 0xde82, 0x389d, 0xa628, 0x1, 0x1);
        gbc.writeMem(0xd2eb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x4709);
        EXPECT(gbc.pc(), 0xd2ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2eb), 0xcb);
        EXPECT(gbc.readMem(0xd2ec), 0xe3);
        // CB E3 004C
        gbc.setState(0xb1c1, 0xa537, 0xb940, 0x3f1d, 0x3919, 0x6926, 0x1, 0x1);
        gbc.writeMem(0xb1c1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xa537);
        EXPECT(gbc.pc(), 0xb1c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1c1), 0xcb);
        EXPECT(gbc.readMem(0xb1c2), 0xe3);
        // CB E3 004D
        gbc.setState(0x1838, 0xa4e9, 0x2870, 0xaddb, 0xa195, 0x226a, 0x1, 0x0);
        gbc.writeMem(0x1838, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa4e9);
        EXPECT(gbc.pc(), 0x183a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 004E
        gbc.setState(0xb818, 0x9231, 0xc540, 0x452c, 0xc7f, 0x3bb5, 0x1, 0x0);
        gbc.writeMem(0xb818, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x9231);
        EXPECT(gbc.pc(), 0xb81a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb818), 0xcb);
        EXPECT(gbc.readMem(0xb819), 0xe3);
        // CB E3 004F
        gbc.setState(0x875a, 0x3d80, 0x2d70, 0x9d16, 0x7463, 0x37d2, 0x1, 0x0);
        gbc.writeMem(0x875a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x3d80);
        EXPECT(gbc.pc(), 0x875c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x875a), 0xcb);
        EXPECT(gbc.readMem(0x875b), 0xe3);
        // CB E3 0050
        gbc.setState(0x4497, 0x83d5, 0xd7c0, 0x2c9c, 0xda5d, 0xb7c9, 0x0, 0x1);
        gbc.writeMem(0x4497, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x83d5);
        EXPECT(gbc.pc(), 0x4499);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0051
        gbc.setState(0xe9e2, 0x51f5, 0xff10, 0xba9a, 0xd2c8, 0xadff, 0x1, 0x1);
        gbc.writeMem(0xe9e2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x51f5);
        EXPECT(gbc.pc(), 0xe9e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9e2), 0xcb);
        EXPECT(gbc.readMem(0xe9e3), 0xe3);
        // CB E3 0052
        gbc.setState(0x639d, 0x31a0, 0x6e30, 0x2d71, 0x595c, 0x5bfb, 0x1, 0x1);
        gbc.writeMem(0x639d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x31a0);
        EXPECT(gbc.pc(), 0x639f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0053
        gbc.setState(0x8b98, 0x8de6, 0xb8a0, 0xf5e1, 0x8c72, 0x4a05, 0x0, 0x0);
        gbc.writeMem(0x8b98, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x8de6);
        EXPECT(gbc.pc(), 0x8b9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b98), 0xcb);
        EXPECT(gbc.readMem(0x8b99), 0xe3);
        // CB E3 0054
        gbc.setState(0x81f7, 0x7a36, 0x6990, 0x379c, 0xdc1c, 0x3271, 0x0, 0x1);
        gbc.writeMem(0x81f7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7a36);
        EXPECT(gbc.pc(), 0x81f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81f7), 0xcb);
        EXPECT(gbc.readMem(0x81f8), 0xe3);
        // CB E3 0055
        gbc.setState(0xd584, 0x1f6c, 0x8210, 0x8ce1, 0x793a, 0x852, 0x0, 0x1);
        gbc.writeMem(0xd584, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x1f6c);
        EXPECT(gbc.pc(), 0xd586);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd584), 0xcb);
        EXPECT(gbc.readMem(0xd585), 0xe3);
        // CB E3 0056
        gbc.setState(0xb1e0, 0x7592, 0x41f0, 0xe928, 0xff05, 0x6f09, 0x1, 0x1);
        gbc.writeMem(0xb1e0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x7592);
        EXPECT(gbc.pc(), 0xb1e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1e0), 0xcb);
        EXPECT(gbc.readMem(0xb1e1), 0xe3);
        // CB E3 0057
        gbc.setState(0xcfd9, 0xf51c, 0x4ed0, 0xd315, 0x6ffd, 0x3c81, 0x0, 0x0);
        gbc.writeMem(0xcfd9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xf51c);
        EXPECT(gbc.pc(), 0xcfdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfd9), 0xcb);
        EXPECT(gbc.readMem(0xcfda), 0xe3);
        // CB E3 0058
        gbc.setState(0x32cb, 0xfce9, 0x5360, 0x1d6d, 0x7f96, 0xd177, 0x1, 0x1);
        gbc.writeMem(0x32cb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xfce9);
        EXPECT(gbc.pc(), 0x32cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0059
        gbc.setState(0x3af6, 0x1f79, 0xb400, 0x615e, 0x41b6, 0xed05, 0x1, 0x0);
        gbc.writeMem(0x3af6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x1f79);
        EXPECT(gbc.pc(), 0x3af8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 005B
        gbc.setState(0x1b44, 0xa56f, 0x3a0, 0xc6f1, 0xbadc, 0x42cf, 0x1, 0x0);
        gbc.writeMem(0x1b44, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa56f);
        EXPECT(gbc.pc(), 0x1b46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 005C
        gbc.setState(0x289a, 0xba32, 0xd9e0, 0x8df8, 0x85d1, 0x6a78, 0x0, 0x0);
        gbc.writeMem(0x289a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xba32);
        EXPECT(gbc.pc(), 0x289c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 005D
        gbc.setState(0x2513, 0xa315, 0xbfa0, 0x6c7c, 0xdc01, 0x885, 0x0, 0x0);
        gbc.writeMem(0x2513, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa315);
        EXPECT(gbc.pc(), 0x2515);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 005E
        gbc.setState(0xa7e9, 0x2cfe, 0xc840, 0x6d8e, 0x1ad3, 0xdbb8, 0x1, 0x0);
        gbc.writeMem(0xa7e9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x2cfe);
        EXPECT(gbc.pc(), 0xa7eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7e9), 0xcb);
        EXPECT(gbc.readMem(0xa7ea), 0xe3);
        // CB E3 005F
        gbc.setState(0x3d, 0x3e2, 0x13e0, 0x8163, 0x1c1f, 0x4818, 0x1, 0x1);
        gbc.writeMem(0x3d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3e2);
        EXPECT(gbc.pc(), 0x3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0060
        gbc.setState(0x5c7f, 0xda8d, 0xf70, 0x25dd, 0x46a1, 0xe816, 0x0, 0x0);
        gbc.writeMem(0x5c7f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xda8d);
        EXPECT(gbc.pc(), 0x5c81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0061
        gbc.setState(0xe641, 0x7933, 0xf450, 0x570e, 0xf041, 0xf35e, 0x1, 0x0);
        gbc.writeMem(0xe641, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x7933);
        EXPECT(gbc.pc(), 0xe643);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe641), 0xcb);
        EXPECT(gbc.readMem(0xe642), 0xe3);
        // CB E3 0062
        gbc.setState(0x36, 0x6247, 0xaf0, 0x1e1a, 0xede9, 0x9fe, 0x1, 0x0);
        gbc.writeMem(0x36, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6247);
        EXPECT(gbc.pc(), 0x38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0063
        gbc.setState(0x73ac, 0xce98, 0x9230, 0x94e1, 0x2d9e, 0xef3a, 0x1, 0x0);
        gbc.writeMem(0x73ac, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xce98);
        EXPECT(gbc.pc(), 0x73ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0064
        gbc.setState(0xee9, 0x383a, 0xc430, 0x70ee, 0xd095, 0xe613, 0x0, 0x1);
        gbc.writeMem(0xee9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x383a);
        EXPECT(gbc.pc(), 0xeeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0065
        gbc.setState(0xdb8, 0xe55f, 0x1730, 0xe046, 0x3855, 0x2de3, 0x1, 0x1);
        gbc.writeMem(0xdb8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe55f);
        EXPECT(gbc.pc(), 0xdba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0066
        gbc.setState(0x6038, 0xa745, 0xbe30, 0xea04, 0x93d5, 0x16dc, 0x1, 0x1);
        gbc.writeMem(0x6038, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa745);
        EXPECT(gbc.pc(), 0x603a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0067
        gbc.setState(0x6d52, 0x3ddc, 0xc300, 0x55b5, 0xf769, 0xee3f, 0x0, 0x1);
        gbc.writeMem(0x6d52, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x3ddc);
        EXPECT(gbc.pc(), 0x6d54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0068
        gbc.setState(0xbf88, 0x3465, 0xad70, 0xfb87, 0xe2a5, 0x9bcf, 0x1, 0x0);
        gbc.writeMem(0xbf88, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3465);
        EXPECT(gbc.pc(), 0xbf8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf88), 0xcb);
        EXPECT(gbc.readMem(0xbf89), 0xe3);
        // CB E3 0069
        gbc.setState(0x36b, 0xeb41, 0xdc0, 0x24f9, 0x7186, 0x202f, 0x0, 0x0);
        gbc.writeMem(0x36b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xeb41);
        EXPECT(gbc.pc(), 0x36d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 006A
        gbc.setState(0x26ab, 0x8c8b, 0xda70, 0xd91e, 0x5932, 0x24b1, 0x1, 0x0);
        gbc.writeMem(0x26ab, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8c8b);
        EXPECT(gbc.pc(), 0x26ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 006B
        gbc.setState(0xb298, 0xd23e, 0xc8c0, 0x1bc9, 0x27ea, 0x2862, 0x1, 0x1);
        gbc.writeMem(0xb298, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xd23e);
        EXPECT(gbc.pc(), 0xb29a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb298), 0xcb);
        EXPECT(gbc.readMem(0xb299), 0xe3);
        // CB E3 006C
        gbc.setState(0xd6de, 0x4120, 0x45f0, 0x63d9, 0xa571, 0xf25b, 0x0, 0x1);
        gbc.writeMem(0xd6de, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4120);
        EXPECT(gbc.pc(), 0xd6e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6de), 0xcb);
        EXPECT(gbc.readMem(0xd6df), 0xe3);
        // CB E3 006D
        gbc.setState(0x8381, 0xd61a, 0x4420, 0x1c68, 0x4db3, 0x3d7a, 0x1, 0x0);
        gbc.writeMem(0x8381, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd61a);
        EXPECT(gbc.pc(), 0x8383);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8381), 0xcb);
        EXPECT(gbc.readMem(0x8382), 0xe3);
        // CB E3 006E
        gbc.setState(0xacac, 0xeebc, 0xfa30, 0x8637, 0x9399, 0x738b, 0x1, 0x0);
        gbc.writeMem(0xacac, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xeebc);
        EXPECT(gbc.pc(), 0xacae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacac), 0xcb);
        EXPECT(gbc.readMem(0xacad), 0xe3);
        // CB E3 006F
        gbc.setState(0x9645, 0xffbf, 0x9440, 0x46a4, 0xcaa7, 0x976c, 0x1, 0x1);
        gbc.writeMem(0x9645, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xffbf);
        EXPECT(gbc.pc(), 0x9647);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9645), 0xcb);
        EXPECT(gbc.readMem(0x9646), 0xe3);
        // CB E3 0070
        gbc.setState(0xb2fc, 0x41e7, 0x7720, 0xe97f, 0x94e6, 0xa278, 0x0, 0x0);
        gbc.writeMem(0xb2fc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x41e7);
        EXPECT(gbc.pc(), 0xb2fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2fc), 0xcb);
        EXPECT(gbc.readMem(0xb2fd), 0xe3);
        // CB E3 0071
        gbc.setState(0xa52f, 0xbc13, 0x1d90, 0x2815, 0x7caf, 0xd5cd, 0x1, 0x0);
        gbc.writeMem(0xa52f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xbc13);
        EXPECT(gbc.pc(), 0xa531);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa52f), 0xcb);
        EXPECT(gbc.readMem(0xa530), 0xe3);
        // CB E3 0072
        gbc.setState(0xb3d, 0xb830, 0x9eb0, 0x2b7f, 0x7af, 0x61eb, 0x1, 0x0);
        gbc.writeMem(0xb3d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xb830);
        EXPECT(gbc.pc(), 0xb3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0073
        gbc.setState(0x9c5d, 0x3dee, 0x5a80, 0x4b8b, 0xd774, 0xa2c2, 0x0, 0x0);
        gbc.writeMem(0x9c5d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x3dee);
        EXPECT(gbc.pc(), 0x9c5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c5d), 0xcb);
        EXPECT(gbc.readMem(0x9c5e), 0xe3);
        // CB E3 0074
        gbc.setState(0x942, 0x2983, 0xc940, 0xb994, 0x7e88, 0xe35c, 0x0, 0x1);
        gbc.writeMem(0x942, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x2983);
        EXPECT(gbc.pc(), 0x944);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0075
        gbc.setState(0xd001, 0xe766, 0x6af0, 0x659b, 0xedf4, 0x7d8d, 0x0, 0x1);
        gbc.writeMem(0xd001, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe766);
        EXPECT(gbc.pc(), 0xd003);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd001), 0xcb);
        EXPECT(gbc.readMem(0xd002), 0xe3);
        // CB E3 0076
        gbc.setState(0xb9f8, 0xb219, 0xec90, 0x6953, 0x565e, 0x12b, 0x1, 0x1);
        gbc.writeMem(0xb9f8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb219);
        EXPECT(gbc.pc(), 0xb9fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9f8), 0xcb);
        EXPECT(gbc.readMem(0xb9f9), 0xe3);
        // CB E3 0077
        gbc.setState(0xeebb, 0x5655, 0xce70, 0x7206, 0x357d, 0x3270, 0x0, 0x1);
        gbc.writeMem(0xeebb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5655);
        EXPECT(gbc.pc(), 0xeebd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeebb), 0xcb);
        EXPECT(gbc.readMem(0xeebc), 0xe3);
        // CB E3 0078
        gbc.setState(0x49e7, 0xa05, 0x8810, 0x238e, 0x5946, 0x326d, 0x0, 0x1);
        gbc.writeMem(0x49e7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa05);
        EXPECT(gbc.pc(), 0x49e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0079
        gbc.setState(0x9d67, 0x57dd, 0xf0e0, 0xcc0b, 0x618, 0x7b49, 0x0, 0x0);
        gbc.writeMem(0x9d67, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x57dd);
        EXPECT(gbc.pc(), 0x9d69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d67), 0xcb);
        EXPECT(gbc.readMem(0x9d68), 0xe3);
        // CB E3 007A
        gbc.setState(0x4144, 0x28de, 0xcad0, 0x7ff, 0x120a, 0xa29d, 0x0, 0x1);
        gbc.writeMem(0x4144, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x28de);
        EXPECT(gbc.pc(), 0x4146);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 007B
        gbc.setState(0x1275, 0x7e9, 0x770, 0xd9f3, 0x77d0, 0x3dfd, 0x0, 0x1);
        gbc.writeMem(0x1275, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x7e9);
        EXPECT(gbc.pc(), 0x1277);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 007C
        gbc.setState(0x82c4, 0xc277, 0x98e0, 0xb2c3, 0x4b91, 0x7065, 0x1, 0x1);
        gbc.writeMem(0x82c4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc277);
        EXPECT(gbc.pc(), 0x82c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82c4), 0xcb);
        EXPECT(gbc.readMem(0x82c5), 0xe3);
        // CB E3 007D
        gbc.setState(0x3e4f, 0x4a21, 0x1430, 0x6d83, 0xe399, 0x5d5d, 0x0, 0x0);
        gbc.writeMem(0x3e4f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x4a21);
        EXPECT(gbc.pc(), 0x3e51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 007E
        gbc.setState(0x1920, 0x68f3, 0x560, 0x3927, 0xbffb, 0x8269, 0x0, 0x1);
        gbc.writeMem(0x1920, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x68f3);
        EXPECT(gbc.pc(), 0x1922);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 007F
        gbc.setState(0x25ee, 0xa16a, 0xc690, 0xff2c, 0x5912, 0xe83c, 0x0, 0x0);
        gbc.writeMem(0x25ee, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa16a);
        EXPECT(gbc.pc(), 0x25f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0080
        gbc.setState(0x6884, 0x1790, 0xdf70, 0x8cf0, 0xe250, 0xa624, 0x1, 0x1);
        gbc.writeMem(0x6884, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1790);
        EXPECT(gbc.pc(), 0x6886);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0081
        gbc.setState(0xdfb2, 0x523e, 0xb4f0, 0xb157, 0x59ce, 0xcdad, 0x0, 0x1);
        gbc.writeMem(0xdfb2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x523e);
        EXPECT(gbc.pc(), 0xdfb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfb2), 0xcb);
        EXPECT(gbc.readMem(0xdfb3), 0xe3);
        // CB E3 0082
        gbc.setState(0x878, 0x7d61, 0x52e0, 0xff7f, 0xa108, 0xd526, 0x1, 0x0);
        gbc.writeMem(0x878, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x7d61);
        EXPECT(gbc.pc(), 0x87a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0083
        gbc.setState(0xe771, 0x3b5e, 0xe720, 0x3a30, 0x7549, 0x2d07, 0x1, 0x0);
        gbc.writeMem(0xe771, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3b5e);
        EXPECT(gbc.pc(), 0xe773);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe771), 0xcb);
        EXPECT(gbc.readMem(0xe772), 0xe3);
        // CB E3 0084
        gbc.setState(0x3389, 0xf5a6, 0xe70, 0x7302, 0x1a3f, 0x87b4, 0x0, 0x0);
        gbc.writeMem(0x3389, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf5a6);
        EXPECT(gbc.pc(), 0x338b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0085
        gbc.setState(0x1a9f, 0x219b, 0xfc00, 0xf0f3, 0x2780, 0x9d97, 0x0, 0x0);
        gbc.writeMem(0x1a9f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x219b);
        EXPECT(gbc.pc(), 0x1aa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0086
        gbc.setState(0x8c39, 0xd95, 0xb300, 0x8c19, 0x325a, 0x8a04, 0x1, 0x1);
        gbc.writeMem(0x8c39, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd95);
        EXPECT(gbc.pc(), 0x8c3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c39), 0xcb);
        EXPECT(gbc.readMem(0x8c3a), 0xe3);
        // CB E3 0088
        gbc.setState(0x8970, 0x49eb, 0xaf80, 0x48f8, 0x7ae8, 0xf37e, 0x1, 0x1);
        gbc.writeMem(0x8970, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x49eb);
        EXPECT(gbc.pc(), 0x8972);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8970), 0xcb);
        EXPECT(gbc.readMem(0x8971), 0xe3);
        // CB E3 0089
        gbc.setState(0x3575, 0xb7c0, 0x5310, 0x2, 0xc3da, 0x4648, 0x1, 0x1);
        gbc.writeMem(0x3575, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb7c0);
        EXPECT(gbc.pc(), 0x3577);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 008A
        gbc.setState(0x9114, 0x4323, 0x81c0, 0x7d0e, 0xea11, 0x6562, 0x0, 0x0);
        gbc.writeMem(0x9114, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4323);
        EXPECT(gbc.pc(), 0x9116);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9114), 0xcb);
        EXPECT(gbc.readMem(0x9115), 0xe3);
        // CB E3 008B
        gbc.setState(0xb603, 0x8c8a, 0xae80, 0xb3cf, 0xf0f, 0x29ff, 0x1, 0x0);
        gbc.writeMem(0xb603, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8c8a);
        EXPECT(gbc.pc(), 0xb605);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb603), 0xcb);
        EXPECT(gbc.readMem(0xb604), 0xe3);
        // CB E3 008C
        gbc.setState(0xfc9, 0x681f, 0x50e0, 0xcadc, 0x22c1, 0x306e, 0x0, 0x0);
        gbc.writeMem(0xfc9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x681f);
        EXPECT(gbc.pc(), 0xfcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 008E
        gbc.setState(0x3dc5, 0x1484, 0x3250, 0xea85, 0x25bf, 0x9af4, 0x0, 0x1);
        gbc.writeMem(0x3dc5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1484);
        EXPECT(gbc.pc(), 0x3dc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 008F
        gbc.setState(0x75ac, 0xb1ca, 0xd650, 0x19db, 0xeb22, 0xcaa7, 0x1, 0x0);
        gbc.writeMem(0x75ac, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xb1ca);
        EXPECT(gbc.pc(), 0x75ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0090
        gbc.setState(0x8099, 0x3caf, 0xd0, 0x694, 0xf125, 0xeaa1, 0x0, 0x0);
        gbc.writeMem(0x8099, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3caf);
        EXPECT(gbc.pc(), 0x809b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8099), 0xcb);
        EXPECT(gbc.readMem(0x809a), 0xe3);
        // CB E3 0091
        gbc.setState(0x6c3e, 0x70e8, 0x4970, 0xaffe, 0x40a2, 0xc951, 0x0, 0x1);
        gbc.writeMem(0x6c3e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x70e8);
        EXPECT(gbc.pc(), 0x6c40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0092
        gbc.setState(0xea43, 0x5a39, 0x3760, 0x1a0f, 0x8479, 0xb9e6, 0x1, 0x1);
        gbc.writeMem(0xea43, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5a39);
        EXPECT(gbc.pc(), 0xea45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea43), 0xcb);
        EXPECT(gbc.readMem(0xea44), 0xe3);
        // CB E3 0093
        gbc.setState(0x7969, 0x4ce5, 0xce90, 0xceeb, 0x1e24, 0x64ff, 0x1, 0x1);
        gbc.writeMem(0x7969, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x4ce5);
        EXPECT(gbc.pc(), 0x796b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0095
        gbc.setState(0x1a2c, 0xfa18, 0x6b30, 0x6eac, 0x7b3a, 0x365d, 0x1, 0x0);
        gbc.writeMem(0x1a2c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xfa18);
        EXPECT(gbc.pc(), 0x1a2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0096
        gbc.setState(0x66d6, 0xaedf, 0x1080, 0xec3e, 0x2688, 0x8d52, 0x0, 0x1);
        gbc.writeMem(0x66d6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xaedf);
        EXPECT(gbc.pc(), 0x66d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0097
        gbc.setState(0xdf66, 0x4c6, 0x3480, 0x44e2, 0x1a8d, 0xab25, 0x1, 0x1);
        gbc.writeMem(0xdf66, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4c6);
        EXPECT(gbc.pc(), 0xdf68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf66), 0xcb);
        EXPECT(gbc.readMem(0xdf67), 0xe3);
        // CB E3 0099
        gbc.setState(0xb5fa, 0xa52c, 0x8640, 0xa0b7, 0xcdea, 0xc66d, 0x0, 0x0);
        gbc.writeMem(0xb5fa, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa52c);
        EXPECT(gbc.pc(), 0xb5fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5fa), 0xcb);
        EXPECT(gbc.readMem(0xb5fb), 0xe3);
        // CB E3 009A
        gbc.setState(0xe462, 0xa48f, 0x5490, 0x7884, 0x313e, 0xd62e, 0x0, 0x0);
        gbc.writeMem(0xe462, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa48f);
        EXPECT(gbc.pc(), 0xe464);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe462), 0xcb);
        EXPECT(gbc.readMem(0xe463), 0xe3);
        // CB E3 009B
        gbc.setState(0xeda6, 0x23f6, 0x6a60, 0x25, 0x171e, 0xe452, 0x1, 0x1);
        gbc.writeMem(0xeda6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x23f6);
        EXPECT(gbc.pc(), 0xeda8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeda6), 0xcb);
        EXPECT(gbc.readMem(0xeda7), 0xe3);
        // CB E3 009C
        gbc.setState(0x8b1b, 0xd3e9, 0xa390, 0x7806, 0xad8d, 0xcf71, 0x1, 0x0);
        gbc.writeMem(0x8b1b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd3e9);
        EXPECT(gbc.pc(), 0x8b1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b1b), 0xcb);
        EXPECT(gbc.readMem(0x8b1c), 0xe3);
        // CB E3 009D
        gbc.setState(0x56c3, 0x48cc, 0xcd30, 0xf450, 0x48ae, 0xc681, 0x0, 0x0);
        gbc.writeMem(0x56c3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x48cc);
        EXPECT(gbc.pc(), 0x56c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 009E
        gbc.setState(0xa3a8, 0xaaa6, 0xa960, 0x7854, 0x1a1d, 0x8d72, 0x1, 0x1);
        gbc.writeMem(0xa3a8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xaaa6);
        EXPECT(gbc.pc(), 0xa3aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3a8), 0xcb);
        EXPECT(gbc.readMem(0xa3a9), 0xe3);
        // CB E3 009F
        gbc.setState(0xbd60, 0x52f, 0xd130, 0x48e5, 0x3bf0, 0x5447, 0x1, 0x1);
        gbc.writeMem(0xbd60, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x52f);
        EXPECT(gbc.pc(), 0xbd62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd60), 0xcb);
        EXPECT(gbc.readMem(0xbd61), 0xe3);
        // CB E3 00A0
        gbc.setState(0xad40, 0xf5db, 0x4c50, 0x168f, 0x7026, 0x3ba3, 0x0, 0x1);
        gbc.writeMem(0xad40, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xf5db);
        EXPECT(gbc.pc(), 0xad42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad40), 0xcb);
        EXPECT(gbc.readMem(0xad41), 0xe3);
        // CB E3 00A1
        gbc.setState(0x3ff1, 0x2336, 0x6480, 0x4e43, 0x3fa2, 0x1595, 0x1, 0x1);
        gbc.writeMem(0x3ff1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2336);
        EXPECT(gbc.pc(), 0x3ff3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 00A2
        gbc.setState(0xe808, 0x937e, 0x2110, 0x21d5, 0x5a5a, 0x8c06, 0x1, 0x1);
        gbc.writeMem(0xe808, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x937e);
        EXPECT(gbc.pc(), 0xe80a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe808), 0xcb);
        EXPECT(gbc.readMem(0xe809), 0xe3);
        // CB E3 00A3
        gbc.setState(0x7b4a, 0xdb9f, 0x6d70, 0x1084, 0xbe79, 0xdd79, 0x0, 0x0);
        gbc.writeMem(0x7b4a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xdb9f);
        EXPECT(gbc.pc(), 0x7b4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 00A4
        gbc.setState(0x69a2, 0xc87e, 0x99e0, 0x677d, 0x66f, 0x71d2, 0x0, 0x1);
        gbc.writeMem(0x69a2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc87e);
        EXPECT(gbc.pc(), 0x69a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 00A5
        gbc.setState(0x4516, 0x34eb, 0xc050, 0xc6e7, 0xb366, 0x5f01, 0x0, 0x1);
        gbc.writeMem(0x4516, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x34eb);
        EXPECT(gbc.pc(), 0x4518);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 00A6
        gbc.setState(0x3a7, 0x5a1b, 0xbca0, 0xd0ee, 0xb9aa, 0x3f7b, 0x1, 0x0);
        gbc.writeMem(0x3a7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x5a1b);
        EXPECT(gbc.pc(), 0x3a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 00A7
        gbc.setState(0xddfb, 0x5626, 0x5350, 0xfeff, 0x4ed5, 0xea7d, 0x0, 0x1);
        gbc.writeMem(0xddfb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x5626);
        EXPECT(gbc.pc(), 0xddfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddfb), 0xcb);
        EXPECT(gbc.readMem(0xddfc), 0xe3);
        // CB E3 00A8
        gbc.setState(0x81c8, 0xb79b, 0x5690, 0x11e3, 0x6a72, 0xd74d, 0x0, 0x1);
        gbc.writeMem(0x81c8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb79b);
        EXPECT(gbc.pc(), 0x81ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81c8), 0xcb);
        EXPECT(gbc.readMem(0x81c9), 0xe3);
        // CB E3 00A9
        gbc.setState(0x1730, 0x4159, 0x6280, 0xe7f5, 0x86df, 0x1c21, 0x0, 0x1);
        gbc.writeMem(0x1730, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x4159);
        EXPECT(gbc.pc(), 0x1732);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 00AA
        gbc.setState(0xeb3b, 0xc704, 0x7bc0, 0xb64d, 0x1843, 0x3784, 0x0, 0x0);
        gbc.writeMem(0xeb3b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc704);
        EXPECT(gbc.pc(), 0xeb3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb3b), 0xcb);
        EXPECT(gbc.readMem(0xeb3c), 0xe3);
        // CB E3 00AB
        gbc.setState(0x7efd, 0x39e, 0x3dd0, 0x1f60, 0x8d0b, 0x2d7a, 0x1, 0x1);
        gbc.writeMem(0x7efd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x39e);
        EXPECT(gbc.pc(), 0x7eff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 00AC
        gbc.setState(0x98c1, 0x36f3, 0xdaf0, 0x68c2, 0xa7b4, 0x1f03, 0x1, 0x0);
        gbc.writeMem(0x98c1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x36f3);
        EXPECT(gbc.pc(), 0x98c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98c1), 0xcb);
        EXPECT(gbc.readMem(0x98c2), 0xe3);
        // CB E3 00AD
        gbc.setState(0xdbd3, 0xb8b1, 0xce60, 0x9683, 0x33b9, 0x53ed, 0x0, 0x1);
        gbc.writeMem(0xdbd3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb8b1);
        EXPECT(gbc.pc(), 0xdbd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbd3), 0xcb);
        EXPECT(gbc.readMem(0xdbd4), 0xe3);
        // CB E3 00AE
        gbc.setState(0xbbeb, 0xa31, 0x2b0, 0x2931, 0xbe6d, 0x558d, 0x1, 0x0);
        gbc.writeMem(0xbbeb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa31);
        EXPECT(gbc.pc(), 0xbbed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbeb), 0xcb);
        EXPECT(gbc.readMem(0xbbec), 0xe3);
        // CB E3 00AF
        gbc.setState(0x8669, 0xc91f, 0xbd70, 0x8f05, 0x9f30, 0x6300, 0x1, 0x0);
        gbc.writeMem(0x8669, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc91f);
        EXPECT(gbc.pc(), 0x866b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8669), 0xcb);
        EXPECT(gbc.readMem(0x866a), 0xe3);
        // CB E3 00B0
        gbc.setState(0x448f, 0x9de1, 0x1fa0, 0xcfb9, 0x31e6, 0x5682, 0x1, 0x0);
        gbc.writeMem(0x448f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9de1);
        EXPECT(gbc.pc(), 0x4491);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 00B1
        gbc.setState(0xe537, 0x6bbd, 0xefb0, 0x3, 0xaa32, 0xc5f0, 0x1, 0x0);
        gbc.writeMem(0xe537, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6bbd);
        EXPECT(gbc.pc(), 0xe539);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe537), 0xcb);
        EXPECT(gbc.readMem(0xe538), 0xe3);
        // CB E3 00B2
        gbc.setState(0x9460, 0x8011, 0x6ac0, 0x5fb9, 0xe4c, 0x759, 0x1, 0x1);
        gbc.writeMem(0x9460, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8011);
        EXPECT(gbc.pc(), 0x9462);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9460), 0xcb);
        EXPECT(gbc.readMem(0x9461), 0xe3);
        // CB E3 00B3
        gbc.setState(0x38ce, 0x3051, 0x6bb0, 0x9df1, 0xc729, 0x694c, 0x1, 0x1);
        gbc.writeMem(0x38ce, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x3051);
        EXPECT(gbc.pc(), 0x38d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 00B5
        gbc.setState(0xda9f, 0x289b, 0x6550, 0xaec4, 0x17b2, 0xdabc, 0x0, 0x1);
        gbc.writeMem(0xda9f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x289b);
        EXPECT(gbc.pc(), 0xdaa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda9f), 0xcb);
        EXPECT(gbc.readMem(0xdaa0), 0xe3);
        // CB E3 00B6
        gbc.setState(0x5a0a, 0x971c, 0x63b0, 0x12d9, 0xe6be, 0xb117, 0x0, 0x0);
        gbc.writeMem(0x5a0a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x971c);
        EXPECT(gbc.pc(), 0x5a0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 00B7
        gbc.setState(0x5e6f, 0x46ee, 0x3910, 0xcdf4, 0x7086, 0xaa41, 0x0, 0x0);
        gbc.writeMem(0x5e6f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x46ee);
        EXPECT(gbc.pc(), 0x5e71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 00B9
        gbc.setState(0xe5ad, 0x8d07, 0x2040, 0x86b4, 0xe6e6, 0x2175, 0x1, 0x1);
        gbc.writeMem(0xe5ad, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x8d07);
        EXPECT(gbc.pc(), 0xe5af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5ad), 0xcb);
        EXPECT(gbc.readMem(0xe5ae), 0xe3);
        // CB E3 00BA
        gbc.setState(0x3430, 0xe917, 0x56d0, 0x4f6e, 0x34b, 0xaedd, 0x0, 0x1);
        gbc.writeMem(0x3430, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe917);
        EXPECT(gbc.pc(), 0x3432);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 00BB
        gbc.setState(0x382, 0xbc43, 0x410, 0x800f, 0x947b, 0xe5c2, 0x1, 0x0);
        gbc.writeMem(0x382, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xbc43);
        EXPECT(gbc.pc(), 0x384);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 00BC
        gbc.setState(0x42de, 0x4bbf, 0xc760, 0x4169, 0x79ce, 0x9cf0, 0x0, 0x1);
        gbc.writeMem(0x42de, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4bbf);
        EXPECT(gbc.pc(), 0x42e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 00BD
        gbc.setState(0x56af, 0x73ae, 0xb3f0, 0x9a0e, 0xec6e, 0xba7b, 0x0, 0x0);
        gbc.writeMem(0x56af, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x73ae);
        EXPECT(gbc.pc(), 0x56b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 00BE
        gbc.setState(0xd78, 0xcc8a, 0xd260, 0xda4f, 0xba89, 0xa3c7, 0x1, 0x1);
        gbc.writeMem(0xd78, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xcc8a);
        EXPECT(gbc.pc(), 0xd7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 00BF
        gbc.setState(0x9905, 0x54f7, 0xb700, 0xb753, 0xc89c, 0xe0f1, 0x1, 0x1);
        gbc.writeMem(0x9905, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x54f7);
        EXPECT(gbc.pc(), 0x9907);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9905), 0xcb);
        EXPECT(gbc.readMem(0x9906), 0xe3);
        // CB E3 00C0
        gbc.setState(0xcde, 0xe4be, 0x81d0, 0x9ab, 0xb829, 0xb0fb, 0x1, 0x1);
        gbc.writeMem(0xcde, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe4be);
        EXPECT(gbc.pc(), 0xce0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 00C1
        gbc.setState(0x56a7, 0x12a0, 0x1e60, 0x52d6, 0xafde, 0xfa1e, 0x1, 0x0);
        gbc.writeMem(0x56a7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x12a0);
        EXPECT(gbc.pc(), 0x56a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 00C2
        gbc.setState(0x6cd8, 0x8092, 0xfb80, 0x26f9, 0x7a11, 0x51eb, 0x0, 0x0);
        gbc.writeMem(0x6cd8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x8092);
        EXPECT(gbc.pc(), 0x6cda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 00C3
        gbc.setState(0x6ee2, 0x421, 0x1d80, 0xf3ce, 0xd72, 0x98bc, 0x1, 0x1);
        gbc.writeMem(0x6ee2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x421);
        EXPECT(gbc.pc(), 0x6ee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 00C4
        gbc.setState(0xe960, 0x4e6b, 0xb930, 0x55fe, 0xdb8b, 0x426a, 0x0, 0x1);
        gbc.writeMem(0xe960, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4e6b);
        EXPECT(gbc.pc(), 0xe962);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe960), 0xcb);
        EXPECT(gbc.readMem(0xe961), 0xe3);
        // CB E3 00C5
        gbc.setState(0x1848, 0xd1ba, 0x23a0, 0x368f, 0xd520, 0xea33, 0x1, 0x1);
        gbc.writeMem(0x1848, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd1ba);
        EXPECT(gbc.pc(), 0x184a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 00C6
        gbc.setState(0x1b59, 0xd686, 0xae80, 0xfbdc, 0x39c4, 0x7eb8, 0x1, 0x0);
        gbc.writeMem(0x1b59, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd686);
        EXPECT(gbc.pc(), 0x1b5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 00C7
        gbc.setState(0x8019, 0x9837, 0xeb0, 0xc488, 0xd592, 0x9b0a, 0x1, 0x1);
        gbc.writeMem(0x8019, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x9837);
        EXPECT(gbc.pc(), 0x801b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8019), 0xcb);
        EXPECT(gbc.readMem(0x801a), 0xe3);
        // CB E3 00C8
        gbc.setState(0xcedc, 0x6c1, 0xb250, 0x287a, 0x6f3e, 0x58ac, 0x0, 0x0);
        gbc.writeMem(0xcedc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6c1);
        EXPECT(gbc.pc(), 0xcede);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcedc), 0xcb);
        EXPECT(gbc.readMem(0xcedd), 0xe3);
        // CB E3 00C9
        gbc.setState(0x8f6e, 0x3dca, 0xa8b0, 0xe289, 0xc00c, 0x2517, 0x0, 0x0);
        gbc.writeMem(0x8f6e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x3dca);
        EXPECT(gbc.pc(), 0x8f70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f6e), 0xcb);
        EXPECT(gbc.readMem(0x8f6f), 0xe3);
        // CB E3 00CA
        gbc.setState(0x58dd, 0x3bd8, 0x5a70, 0x899f, 0xae48, 0xb25d, 0x1, 0x0);
        gbc.writeMem(0x58dd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3bd8);
        EXPECT(gbc.pc(), 0x58df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 00CB
        gbc.setState(0xe871, 0x40df, 0x4350, 0x20eb, 0xc99b, 0xf7f7, 0x0, 0x1);
        gbc.writeMem(0xe871, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x40df);
        EXPECT(gbc.pc(), 0xe873);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe871), 0xcb);
        EXPECT(gbc.readMem(0xe872), 0xe3);
        // CB E3 00CC
        gbc.setState(0x8076, 0xdd46, 0xa660, 0xefe2, 0xc50c, 0x46ee, 0x0, 0x0);
        gbc.writeMem(0x8076, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xdd46);
        EXPECT(gbc.pc(), 0x8078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8076), 0xcb);
        EXPECT(gbc.readMem(0x8077), 0xe3);
        // CB E3 00CD
        gbc.setState(0x2566, 0xc06c, 0x9d10, 0x47b6, 0x1277, 0xd0ac, 0x1, 0x0);
        gbc.writeMem(0x2566, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc06c);
        EXPECT(gbc.pc(), 0x2568);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 00CE
        gbc.setState(0xe259, 0xdec5, 0x7fd0, 0x1b93, 0x5ee9, 0x8f28, 0x1, 0x1);
        gbc.writeMem(0xe259, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xdec5);
        EXPECT(gbc.pc(), 0xe25b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe259), 0xcb);
        EXPECT(gbc.readMem(0xe25a), 0xe3);
        // CB E3 00CF
        gbc.setState(0xe56b, 0x5192, 0x81e0, 0x6819, 0xe613, 0x75c6, 0x0, 0x0);
        gbc.writeMem(0xe56b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x5192);
        EXPECT(gbc.pc(), 0xe56d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe56b), 0xcb);
        EXPECT(gbc.readMem(0xe56c), 0xe3);
        // CB E3 00D0
        gbc.setState(0xd491, 0xa0fb, 0xcc80, 0xbeac, 0x86f5, 0xf90f, 0x1, 0x1);
        gbc.writeMem(0xd491, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xa0fb);
        EXPECT(gbc.pc(), 0xd493);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd491), 0xcb);
        EXPECT(gbc.readMem(0xd492), 0xe3);
        // CB E3 00D1
        gbc.setState(0x950a, 0x526a, 0x14a0, 0x78e9, 0x65be, 0x6379, 0x0, 0x0);
        gbc.writeMem(0x950a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x526a);
        EXPECT(gbc.pc(), 0x950c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x950a), 0xcb);
        EXPECT(gbc.readMem(0x950b), 0xe3);
        // CB E3 00D2
        gbc.setState(0xb79a, 0x96ed, 0xccd0, 0x9631, 0x1a59, 0x4970, 0x1, 0x1);
        gbc.writeMem(0xb79a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x96ed);
        EXPECT(gbc.pc(), 0xb79c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb79a), 0xcb);
        EXPECT(gbc.readMem(0xb79b), 0xe3);
        // CB E3 00D3
        gbc.setState(0x78e1, 0xa1a7, 0x6ff0, 0xc916, 0x5a8d, 0x8327, 0x0, 0x1);
        gbc.writeMem(0x78e1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xa1a7);
        EXPECT(gbc.pc(), 0x78e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 00D5
        gbc.setState(0x1760, 0x2645, 0x2cc0, 0x9f01, 0xe64a, 0xe8ec, 0x1, 0x0);
        gbc.writeMem(0x1760, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x2645);
        EXPECT(gbc.pc(), 0x1762);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 00D7
        gbc.setState(0xe92c, 0x50ce, 0x2f20, 0x8a7b, 0x620, 0x1a44, 0x0, 0x0);
        gbc.writeMem(0xe92c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x50ce);
        EXPECT(gbc.pc(), 0xe92e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe92c), 0xcb);
        EXPECT(gbc.readMem(0xe92d), 0xe3);
        // CB E3 00D8
        gbc.setState(0x65fa, 0x7d26, 0xe440, 0x5051, 0xa755, 0x1b19, 0x1, 0x1);
        gbc.writeMem(0x65fa, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x7d26);
        EXPECT(gbc.pc(), 0x65fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 00D9
        gbc.setState(0xeb96, 0xaf54, 0x7570, 0xc9ff, 0x58d0, 0x8eb2, 0x0, 0x1);
        gbc.writeMem(0xeb96, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xaf54);
        EXPECT(gbc.pc(), 0xeb98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb96), 0xcb);
        EXPECT(gbc.readMem(0xeb97), 0xe3);
        // CB E3 00DA
        gbc.setState(0x3176, 0x519a, 0x3770, 0x5e6a, 0x7fb3, 0x465f, 0x0, 0x1);
        gbc.writeMem(0x3176, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x519a);
        EXPECT(gbc.pc(), 0x3178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 00DB
        gbc.setState(0x6d79, 0x5407, 0x5e00, 0x79bc, 0xd85c, 0x9330, 0x1, 0x0);
        gbc.writeMem(0x6d79, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x5407);
        EXPECT(gbc.pc(), 0x6d7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 00DC
        gbc.setState(0x92db, 0xb78f, 0x8bb0, 0x58b8, 0xa946, 0x3417, 0x1, 0x1);
        gbc.writeMem(0x92db, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb78f);
        EXPECT(gbc.pc(), 0x92dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92db), 0xcb);
        EXPECT(gbc.readMem(0x92dc), 0xe3);
        // CB E3 00DD
        gbc.setState(0x9bbd, 0x5d40, 0x7e0, 0x9ba3, 0xbc71, 0x567d, 0x1, 0x0);
        gbc.writeMem(0x9bbd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x5d40);
        EXPECT(gbc.pc(), 0x9bbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bbd), 0xcb);
        EXPECT(gbc.readMem(0x9bbe), 0xe3);
        // CB E3 00DF
        gbc.setState(0x31d1, 0xe3cc, 0x9270, 0x5998, 0xa085, 0xbcb3, 0x0, 0x1);
        gbc.writeMem(0x31d1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe3cc);
        EXPECT(gbc.pc(), 0x31d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 00E0
        gbc.setState(0x8c19, 0xb8aa, 0xe9d0, 0x6664, 0x8057, 0x5e17, 0x0, 0x1);
        gbc.writeMem(0x8c19, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb8aa);
        EXPECT(gbc.pc(), 0x8c1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c19), 0xcb);
        EXPECT(gbc.readMem(0x8c1a), 0xe3);
        // CB E3 00E1
        gbc.setState(0x4abc, 0xcf96, 0x8ee0, 0xef87, 0x9d4b, 0x4b9d, 0x1, 0x0);
        gbc.writeMem(0x4abc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xcf96);
        EXPECT(gbc.pc(), 0x4abe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 00E2
        gbc.setState(0x14ec, 0xf0e3, 0x65e0, 0x8bdc, 0x1e0b, 0x6cf1, 0x1, 0x0);
        gbc.writeMem(0x14ec, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xf0e3);
        EXPECT(gbc.pc(), 0x14ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 00E3
        gbc.setState(0xc761, 0x3ffa, 0x670, 0x7ed5, 0x9168, 0xf0e2, 0x0, 0x1);
        gbc.writeMem(0xc761, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3ffa);
        EXPECT(gbc.pc(), 0xc763);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc761), 0xcb);
        EXPECT(gbc.readMem(0xc762), 0xe3);
        // CB E3 00E4
        gbc.setState(0xca8d, 0xc09d, 0xa150, 0xd23, 0xf7fe, 0x25dc, 0x1, 0x1);
        gbc.writeMem(0xca8d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc09d);
        EXPECT(gbc.pc(), 0xca8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca8d), 0xcb);
        EXPECT(gbc.readMem(0xca8e), 0xe3);
        // CB E3 00E5
        gbc.setState(0xd7f5, 0xd2d8, 0x7e60, 0xb239, 0xe1de, 0x6fdb, 0x0, 0x1);
        gbc.writeMem(0xd7f5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd2d8);
        EXPECT(gbc.pc(), 0xd7f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7f5), 0xcb);
        EXPECT(gbc.readMem(0xd7f6), 0xe3);
        // CB E3 00E6
        gbc.setState(0x75d9, 0x44cc, 0x2180, 0xb726, 0xb487, 0xb0be, 0x0, 0x0);
        gbc.writeMem(0x75d9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x44cc);
        EXPECT(gbc.pc(), 0x75db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 00E7
        gbc.setState(0xcc37, 0x99ef, 0xdb10, 0xa08e, 0x7089, 0xce92, 0x1, 0x0);
        gbc.writeMem(0xcc37, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x99ef);
        EXPECT(gbc.pc(), 0xcc39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc37), 0xcb);
        EXPECT(gbc.readMem(0xcc38), 0xe3);
        // CB E3 00E8
        gbc.setState(0x983b, 0x3bc6, 0x3160, 0xfd32, 0x76fd, 0x10e6, 0x0, 0x0);
        gbc.writeMem(0x983b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x3bc6);
        EXPECT(gbc.pc(), 0x983d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x983b), 0xcb);
        EXPECT(gbc.readMem(0x983c), 0xe3);
        // CB E3 00E9
        gbc.setState(0xe9f0, 0xb3b8, 0xb380, 0x67af, 0x105a, 0x97ed, 0x0, 0x1);
        gbc.writeMem(0xe9f0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb3b8);
        EXPECT(gbc.pc(), 0xe9f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9f0), 0xcb);
        EXPECT(gbc.readMem(0xe9f1), 0xe3);
        // CB E3 00EA
        gbc.setState(0x1366, 0x88a, 0x9520, 0x10f0, 0x86a5, 0x8f62, 0x1, 0x0);
        gbc.writeMem(0x1366, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x88a);
        EXPECT(gbc.pc(), 0x1368);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 00EB
        gbc.setState(0x5b03, 0x1b15, 0x4bd0, 0xa29f, 0xf069, 0x5ef, 0x0, 0x0);
        gbc.writeMem(0x5b03, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x1b15);
        EXPECT(gbc.pc(), 0x5b05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 00ED
        gbc.setState(0x556a, 0x7f3, 0xa10, 0x86cc, 0x1a49, 0x9dbc, 0x0, 0x0);
        gbc.writeMem(0x556a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7f3);
        EXPECT(gbc.pc(), 0x556c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 00EE
        gbc.setState(0xe00a, 0xa33, 0x2ea0, 0x5381, 0x3393, 0x957e, 0x1, 0x0);
        gbc.writeMem(0xe00a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa33);
        EXPECT(gbc.pc(), 0xe00c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe00a), 0xcb);
        EXPECT(gbc.readMem(0xe00b), 0xe3);
        // CB E3 00EF
        gbc.setState(0xa6e9, 0xe87e, 0x1910, 0x3d2c, 0xa9d4, 0xcd15, 0x0, 0x0);
        gbc.writeMem(0xa6e9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xe87e);
        EXPECT(gbc.pc(), 0xa6eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6e9), 0xcb);
        EXPECT(gbc.readMem(0xa6ea), 0xe3);
        // CB E3 00F0
        gbc.setState(0x3979, 0x8d73, 0xb0c0, 0xd24b, 0x5fa2, 0x6dc8, 0x1, 0x1);
        gbc.writeMem(0x3979, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8d73);
        EXPECT(gbc.pc(), 0x397b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 00F1
        gbc.setState(0xe49, 0xc58, 0xce30, 0x306a, 0x6343, 0x74c9, 0x0, 0x1);
        gbc.writeMem(0xe49, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xc58);
        EXPECT(gbc.pc(), 0xe4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 00F2
        gbc.setState(0x93f3, 0xf1b2, 0x3480, 0xece1, 0x5dc3, 0x56dd, 0x1, 0x1);
        gbc.writeMem(0x93f3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xf1b2);
        EXPECT(gbc.pc(), 0x93f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93f3), 0xcb);
        EXPECT(gbc.readMem(0x93f4), 0xe3);
        // CB E3 00F3
        gbc.setState(0xcba4, 0xf396, 0xe1c0, 0xf7c, 0xe7bb, 0x1970, 0x0, 0x0);
        gbc.writeMem(0xcba4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf396);
        EXPECT(gbc.pc(), 0xcba6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcba4), 0xcb);
        EXPECT(gbc.readMem(0xcba5), 0xe3);
        // CB E3 00F5
        gbc.setState(0x38d9, 0x9106, 0x2e0, 0x941, 0x146d, 0x1820, 0x1, 0x1);
        gbc.writeMem(0x38d9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x9106);
        EXPECT(gbc.pc(), 0x38db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 00F6
        gbc.setState(0x5f01, 0x5398, 0xf560, 0x6f7b, 0x41b1, 0x4f68, 0x1, 0x0);
        gbc.writeMem(0x5f01, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5398);
        EXPECT(gbc.pc(), 0x5f03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 00F7
        gbc.setState(0x64a7, 0x3fbb, 0x2050, 0x733b, 0x59c3, 0x9484, 0x0, 0x0);
        gbc.writeMem(0x64a7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3fbb);
        EXPECT(gbc.pc(), 0x64a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 00F8
        gbc.setState(0xc35c, 0xb164, 0xaca0, 0x54f7, 0xa61, 0xac35, 0x0, 0x1);
        gbc.writeMem(0xc35c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb164);
        EXPECT(gbc.pc(), 0xc35e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc35c), 0xcb);
        EXPECT(gbc.readMem(0xc35d), 0xe3);
        // CB E3 00F9
        gbc.setState(0xe17d, 0xbc3c, 0xd10, 0x815f, 0xba50, 0xd14b, 0x1, 0x0);
        gbc.writeMem(0xe17d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xbc3c);
        EXPECT(gbc.pc(), 0xe17f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe17d), 0xcb);
        EXPECT(gbc.readMem(0xe17e), 0xe3);
        // CB E3 00FA
        gbc.setState(0x63bc, 0xfb8a, 0xc450, 0xb5cf, 0x4816, 0xb25c, 0x0, 0x0);
        gbc.writeMem(0x63bc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xfb8a);
        EXPECT(gbc.pc(), 0x63be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 00FB
        gbc.setState(0x2189, 0xc754, 0xa10, 0xcb10, 0xddda, 0x9669, 0x0, 0x1);
        gbc.writeMem(0x2189, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xc754);
        EXPECT(gbc.pc(), 0x218b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 00FC
        gbc.setState(0x5c5e, 0x65b8, 0x4280, 0xaa7e, 0x8655, 0x7869, 0x0, 0x0);
        gbc.writeMem(0x5c5e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x65b8);
        EXPECT(gbc.pc(), 0x5c60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 00FE
        gbc.setState(0x559d, 0x3ed5, 0xa740, 0x3673, 0x7e0e, 0xe43e, 0x1, 0x1);
        gbc.writeMem(0x559d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x3ed5);
        EXPECT(gbc.pc(), 0x559f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 00FF
        gbc.setState(0x862d, 0xed4f, 0xe510, 0xac20, 0xc3f2, 0x4358, 0x1, 0x1);
        gbc.writeMem(0x862d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xed4f);
        EXPECT(gbc.pc(), 0x862f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x862d), 0xcb);
        EXPECT(gbc.readMem(0x862e), 0xe3);
        // CB E3 0100
        gbc.setState(0x2097, 0xa31a, 0x7810, 0x3998, 0x10ef, 0x8740, 0x0, 0x1);
        gbc.writeMem(0x2097, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa31a);
        EXPECT(gbc.pc(), 0x2099);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0101
        gbc.setState(0x4551, 0x89b1, 0x9540, 0x169, 0x1d8e, 0x1c35, 0x1, 0x1);
        gbc.writeMem(0x4551, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x89b1);
        EXPECT(gbc.pc(), 0x4553);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0102
        gbc.setState(0x596, 0x6d24, 0x6090, 0x1723, 0x6bf7, 0x18f1, 0x0, 0x0);
        gbc.writeMem(0x596, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6d24);
        EXPECT(gbc.pc(), 0x598);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0103
        gbc.setState(0xb491, 0x8f7c, 0x3450, 0xadd6, 0xbc6a, 0x6a6f, 0x0, 0x0);
        gbc.writeMem(0xb491, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x8f7c);
        EXPECT(gbc.pc(), 0xb493);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb491), 0xcb);
        EXPECT(gbc.readMem(0xb492), 0xe3);
        // CB E3 0104
        gbc.setState(0x461b, 0xc07b, 0x9740, 0xa708, 0x6e2f, 0x6451, 0x0, 0x0);
        gbc.writeMem(0x461b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xc07b);
        EXPECT(gbc.pc(), 0x461d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0105
        gbc.setState(0xa5d0, 0x7d9c, 0xb9f0, 0x8357, 0xdcb, 0x3e6b, 0x0, 0x1);
        gbc.writeMem(0xa5d0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x7d9c);
        EXPECT(gbc.pc(), 0xa5d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5d0), 0xcb);
        EXPECT(gbc.readMem(0xa5d1), 0xe3);
        // CB E3 0106
        gbc.setState(0xe206, 0xb5ac, 0x4350, 0xbe59, 0xb1df, 0x9c35, 0x0, 0x1);
        gbc.writeMem(0xe206, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb5ac);
        EXPECT(gbc.pc(), 0xe208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe206), 0xcb);
        EXPECT(gbc.readMem(0xe207), 0xe3);
        // CB E3 0107
        gbc.setState(0xfe4, 0xc0aa, 0xa420, 0xe4c8, 0x7c34, 0x102e, 0x1, 0x0);
        gbc.writeMem(0xfe4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xc0aa);
        EXPECT(gbc.pc(), 0xfe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0108
        gbc.setState(0x705a, 0xbf56, 0x6d80, 0x95e7, 0x4f49, 0x9cbd, 0x0, 0x0);
        gbc.writeMem(0x705a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xbf56);
        EXPECT(gbc.pc(), 0x705c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 010A
        gbc.setState(0x99d2, 0x154a, 0xb550, 0xcef8, 0xf68e, 0xa5cf, 0x1, 0x0);
        gbc.writeMem(0x99d2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x154a);
        EXPECT(gbc.pc(), 0x99d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99d2), 0xcb);
        EXPECT(gbc.readMem(0x99d3), 0xe3);
        // CB E3 010B
        gbc.setState(0x4c14, 0xec5, 0x4310, 0xee95, 0x5543, 0xc4ed, 0x1, 0x0);
        gbc.writeMem(0x4c14, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xec5);
        EXPECT(gbc.pc(), 0x4c16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 010C
        gbc.setState(0xd335, 0xf32a, 0x47c0, 0xf5c1, 0x7ad8, 0x9ed6, 0x0, 0x0);
        gbc.writeMem(0xd335, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xf32a);
        EXPECT(gbc.pc(), 0xd337);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd335), 0xcb);
        EXPECT(gbc.readMem(0xd336), 0xe3);
        // CB E3 010E
        gbc.setState(0x6744, 0x3395, 0xc220, 0xa08f, 0x5ea, 0x2dcf, 0x1, 0x0);
        gbc.writeMem(0x6744, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3395);
        EXPECT(gbc.pc(), 0x6746);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 010F
        gbc.setState(0xb682, 0xec03, 0x14f0, 0x25f6, 0x20d3, 0xe1b6, 0x0, 0x1);
        gbc.writeMem(0xb682, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xec03);
        EXPECT(gbc.pc(), 0xb684);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb682), 0xcb);
        EXPECT(gbc.readMem(0xb683), 0xe3);
        // CB E3 0110
        gbc.setState(0x52df, 0x1e05, 0xd690, 0x2888, 0x6d26, 0x81ad, 0x1, 0x0);
        gbc.writeMem(0x52df, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1e05);
        EXPECT(gbc.pc(), 0x52e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0111
        gbc.setState(0xd964, 0x753f, 0xb230, 0xbcb1, 0xaabd, 0x4676, 0x1, 0x0);
        gbc.writeMem(0xd964, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x753f);
        EXPECT(gbc.pc(), 0xd966);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd964), 0xcb);
        EXPECT(gbc.readMem(0xd965), 0xe3);
        // CB E3 0112
        gbc.setState(0x150c, 0x2c31, 0x5400, 0xb8f5, 0xdd11, 0xc73e, 0x1, 0x1);
        gbc.writeMem(0x150c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2c31);
        EXPECT(gbc.pc(), 0x150e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0113
        gbc.setState(0x52e0, 0xd825, 0xec10, 0x11ba, 0x6866, 0xc524, 0x1, 0x1);
        gbc.writeMem(0x52e0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd825);
        EXPECT(gbc.pc(), 0x52e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0114
        gbc.setState(0xb49, 0x9af, 0xb5d0, 0xe383, 0x2f47, 0xe007, 0x1, 0x1);
        gbc.writeMem(0xb49, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9af);
        EXPECT(gbc.pc(), 0xb4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0115
        gbc.setState(0x8c48, 0x5222, 0x2140, 0xc2ef, 0x8ebd, 0x75eb, 0x1, 0x1);
        gbc.writeMem(0x8c48, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5222);
        EXPECT(gbc.pc(), 0x8c4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c48), 0xcb);
        EXPECT(gbc.readMem(0x8c49), 0xe3);
        // CB E3 0116
        gbc.setState(0x1dd0, 0x7cd3, 0xa5f0, 0x172, 0xc38d, 0xc17, 0x0, 0x0);
        gbc.writeMem(0x1dd0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7cd3);
        EXPECT(gbc.pc(), 0x1dd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0117
        gbc.setState(0x4ec1, 0x5932, 0x5e10, 0x14c4, 0xc67e, 0x4ca8, 0x0, 0x1);
        gbc.writeMem(0x4ec1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5932);
        EXPECT(gbc.pc(), 0x4ec3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0118
        gbc.setState(0x956a, 0x903d, 0xf260, 0x5d75, 0x23b0, 0xfa6a, 0x0, 0x0);
        gbc.writeMem(0x956a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x903d);
        EXPECT(gbc.pc(), 0x956c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x956a), 0xcb);
        EXPECT(gbc.readMem(0x956b), 0xe3);
        // CB E3 0119
        gbc.setState(0x4137, 0x45f2, 0x8aa0, 0xb6a1, 0x694a, 0xdfe6, 0x0, 0x0);
        gbc.writeMem(0x4137, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x45f2);
        EXPECT(gbc.pc(), 0x4139);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 011A
        gbc.setState(0xb86d, 0xdcc9, 0xc350, 0xf11d, 0x14f0, 0x321c, 0x1, 0x1);
        gbc.writeMem(0xb86d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xdcc9);
        EXPECT(gbc.pc(), 0xb86f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb86d), 0xcb);
        EXPECT(gbc.readMem(0xb86e), 0xe3);
        // CB E3 011B
        gbc.setState(0x6156, 0xf5f1, 0x9a50, 0x5888, 0x3c32, 0xc683, 0x0, 0x1);
        gbc.writeMem(0x6156, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xf5f1);
        EXPECT(gbc.pc(), 0x6158);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 011C
        gbc.setState(0x4b06, 0xa071, 0x24b0, 0x759e, 0x3eef, 0xe0ee, 0x0, 0x1);
        gbc.writeMem(0x4b06, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xa071);
        EXPECT(gbc.pc(), 0x4b08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 011D
        gbc.setState(0x8e1c, 0x45ee, 0x4c90, 0xdffc, 0x1deb, 0x1b0f, 0x1, 0x1);
        gbc.writeMem(0x8e1c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x45ee);
        EXPECT(gbc.pc(), 0x8e1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e1c), 0xcb);
        EXPECT(gbc.readMem(0x8e1d), 0xe3);
        // CB E3 011E
        gbc.setState(0xcac9, 0x3d4d, 0x9f40, 0x3db6, 0xb749, 0x37c6, 0x1, 0x1);
        gbc.writeMem(0xcac9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x3d4d);
        EXPECT(gbc.pc(), 0xcacb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcac9), 0xcb);
        EXPECT(gbc.readMem(0xcaca), 0xe3);
        // CB E3 011F
        gbc.setState(0x8cb, 0xed8f, 0x1f0, 0x1f0b, 0x4197, 0x26, 0x0, 0x1);
        gbc.writeMem(0x8cb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xed8f);
        EXPECT(gbc.pc(), 0x8cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0120
        gbc.setState(0x63cc, 0x8457, 0xdde0, 0x4e00, 0x1d8a, 0xe02f, 0x1, 0x1);
        gbc.writeMem(0x63cc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8457);
        EXPECT(gbc.pc(), 0x63ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0123
        gbc.setState(0x4514, 0x8fb0, 0x25f0, 0x5cc3, 0x2777, 0xc935, 0x1, 0x1);
        gbc.writeMem(0x4514, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8fb0);
        EXPECT(gbc.pc(), 0x4516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0124
        gbc.setState(0x9ad7, 0x7bcc, 0xb020, 0x18ca, 0x84dc, 0x7b80, 0x0, 0x1);
        gbc.writeMem(0x9ad7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x7bcc);
        EXPECT(gbc.pc(), 0x9ad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ad7), 0xcb);
        EXPECT(gbc.readMem(0x9ad8), 0xe3);
        // CB E3 0126
        gbc.setState(0xabed, 0xeb81, 0xa090, 0x487a, 0x2a5d, 0xd9f5, 0x1, 0x0);
        gbc.writeMem(0xabed, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xeb81);
        EXPECT(gbc.pc(), 0xabef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabed), 0xcb);
        EXPECT(gbc.readMem(0xabee), 0xe3);
        // CB E3 0127
        gbc.setState(0x57a3, 0xf18, 0x630, 0xefb8, 0x3055, 0x847f, 0x0, 0x1);
        gbc.writeMem(0x57a3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf18);
        EXPECT(gbc.pc(), 0x57a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0128
        gbc.setState(0x6e58, 0x490, 0xbdc0, 0x9bf8, 0x8445, 0x86fc, 0x1, 0x1);
        gbc.writeMem(0x6e58, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x490);
        EXPECT(gbc.pc(), 0x6e5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0129
        gbc.setState(0x9c08, 0x2bea, 0xb9d0, 0xfe9e, 0x3fdb, 0x1f3a, 0x0, 0x0);
        gbc.writeMem(0x9c08, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x2bea);
        EXPECT(gbc.pc(), 0x9c0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c08), 0xcb);
        EXPECT(gbc.readMem(0x9c09), 0xe3);
        // CB E3 012A
        gbc.setState(0xcc8c, 0xec16, 0xb940, 0x8c1, 0xcf5d, 0x6e5b, 0x1, 0x1);
        gbc.writeMem(0xcc8c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xec16);
        EXPECT(gbc.pc(), 0xcc8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc8c), 0xcb);
        EXPECT(gbc.readMem(0xcc8d), 0xe3);
        // CB E3 012B
        gbc.setState(0xb6f3, 0x7437, 0xd010, 0xf961, 0x1dde, 0x2c5b, 0x1, 0x1);
        gbc.writeMem(0xb6f3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x7437);
        EXPECT(gbc.pc(), 0xb6f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6f3), 0xcb);
        EXPECT(gbc.readMem(0xb6f4), 0xe3);
        // CB E3 012C
        gbc.setState(0x8066, 0x1c8b, 0xb780, 0xd439, 0x3c2f, 0x2a4b, 0x0, 0x1);
        gbc.writeMem(0x8066, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1c8b);
        EXPECT(gbc.pc(), 0x8068);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8066), 0xcb);
        EXPECT(gbc.readMem(0x8067), 0xe3);
        // CB E3 012D
        gbc.setState(0x95c5, 0x10d5, 0xba30, 0xedbc, 0x2ef5, 0xf50b, 0x0, 0x0);
        gbc.writeMem(0x95c5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x10d5);
        EXPECT(gbc.pc(), 0x95c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95c5), 0xcb);
        EXPECT(gbc.readMem(0x95c6), 0xe3);
        // CB E3 012E
        gbc.setState(0x10b5, 0x5e06, 0x88f0, 0x13fe, 0xe573, 0xf611, 0x0, 0x0);
        gbc.writeMem(0x10b5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5e06);
        EXPECT(gbc.pc(), 0x10b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 012F
        gbc.setState(0x9b51, 0xd292, 0x13b0, 0xa6dd, 0xbcb2, 0xd792, 0x1, 0x0);
        gbc.writeMem(0x9b51, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd292);
        EXPECT(gbc.pc(), 0x9b53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b51), 0xcb);
        EXPECT(gbc.readMem(0x9b52), 0xe3);
        // CB E3 0130
        gbc.setState(0x3436, 0xcabd, 0x8990, 0x283, 0x5b24, 0x288b, 0x0, 0x0);
        gbc.writeMem(0x3436, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xcabd);
        EXPECT(gbc.pc(), 0x3438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0131
        gbc.setState(0xabd3, 0x9ec8, 0x9aa0, 0xa280, 0xbf7f, 0x6808, 0x0, 0x0);
        gbc.writeMem(0xabd3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x9ec8);
        EXPECT(gbc.pc(), 0xabd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabd3), 0xcb);
        EXPECT(gbc.readMem(0xabd4), 0xe3);
        // CB E3 0132
        gbc.setState(0x3811, 0x6d69, 0xbb00, 0x7da1, 0x4d5a, 0x6c46, 0x1, 0x1);
        gbc.writeMem(0x3811, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x6d69);
        EXPECT(gbc.pc(), 0x3813);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0133
        gbc.setState(0x5c67, 0x3d6b, 0x6c50, 0xb1d7, 0xf4ed, 0x864e, 0x1, 0x0);
        gbc.writeMem(0x5c67, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x3d6b);
        EXPECT(gbc.pc(), 0x5c69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0134
        gbc.setState(0x6969, 0xf44b, 0x8050, 0xfc0c, 0xada5, 0x9afa, 0x1, 0x0);
        gbc.writeMem(0x6969, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xf44b);
        EXPECT(gbc.pc(), 0x696b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0136
        gbc.setState(0xefd1, 0x6fab, 0x9f60, 0x6237, 0x2e5d, 0x27fb, 0x1, 0x0);
        gbc.writeMem(0xefd1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6fab);
        EXPECT(gbc.pc(), 0xefd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefd1), 0xcb);
        EXPECT(gbc.readMem(0xefd2), 0xe3);
        // CB E3 0137
        gbc.setState(0x9955, 0x79a5, 0x68c0, 0x15b8, 0xc595, 0x4f33, 0x1, 0x0);
        gbc.writeMem(0x9955, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x79a5);
        EXPECT(gbc.pc(), 0x9957);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9955), 0xcb);
        EXPECT(gbc.readMem(0x9956), 0xe3);
        // CB E3 0138
        gbc.setState(0xb918, 0x27fb, 0xb380, 0xd907, 0xdc2c, 0xe266, 0x0, 0x0);
        gbc.writeMem(0xb918, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x27fb);
        EXPECT(gbc.pc(), 0xb91a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb918), 0xcb);
        EXPECT(gbc.readMem(0xb919), 0xe3);
        // CB E3 0139
        gbc.setState(0xdbb1, 0x2354, 0x1ce0, 0x7c82, 0x42f0, 0x4ad9, 0x1, 0x0);
        gbc.writeMem(0xdbb1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2354);
        EXPECT(gbc.pc(), 0xdbb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbb1), 0xcb);
        EXPECT(gbc.readMem(0xdbb2), 0xe3);
        // CB E3 013A
        gbc.setState(0xcc99, 0x2d4f, 0x6720, 0x62d5, 0x4513, 0x142c, 0x1, 0x1);
        gbc.writeMem(0xcc99, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2d4f);
        EXPECT(gbc.pc(), 0xcc9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc99), 0xcb);
        EXPECT(gbc.readMem(0xcc9a), 0xe3);
        // CB E3 013B
        gbc.setState(0x202c, 0xae2a, 0x5230, 0xdb9, 0x6ee, 0xbbff, 0x1, 0x1);
        gbc.writeMem(0x202c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xae2a);
        EXPECT(gbc.pc(), 0x202e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 013C
        gbc.setState(0x4c5a, 0xf1f, 0xe210, 0x4ec2, 0x66e4, 0xed0, 0x1, 0x0);
        gbc.writeMem(0x4c5a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xf1f);
        EXPECT(gbc.pc(), 0x4c5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 013D
        gbc.setState(0xc5f8, 0x4030, 0x2010, 0xa148, 0xd90a, 0x1b44, 0x0, 0x1);
        gbc.writeMem(0xc5f8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x4030);
        EXPECT(gbc.pc(), 0xc5fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5f8), 0xcb);
        EXPECT(gbc.readMem(0xc5f9), 0xe3);
        // CB E3 013E
        gbc.setState(0xda9a, 0x2709, 0x6410, 0x10ae, 0x24e6, 0x275, 0x1, 0x0);
        gbc.writeMem(0xda9a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x2709);
        EXPECT(gbc.pc(), 0xda9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda9a), 0xcb);
        EXPECT(gbc.readMem(0xda9b), 0xe3);
        // CB E3 013F
        gbc.setState(0xccf4, 0xb147, 0xebd0, 0xe0c2, 0xd9f3, 0x104d, 0x1, 0x1);
        gbc.writeMem(0xccf4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb147);
        EXPECT(gbc.pc(), 0xccf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccf4), 0xcb);
        EXPECT(gbc.readMem(0xccf5), 0xe3);
        // CB E3 0140
        gbc.setState(0x1446, 0x7cf7, 0xf9d0, 0xe8e3, 0x6fff, 0x42f8, 0x1, 0x0);
        gbc.writeMem(0x1446, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x7cf7);
        EXPECT(gbc.pc(), 0x1448);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0141
        gbc.setState(0x9580, 0x8504, 0x62d0, 0x40b6, 0x35c1, 0xfe43, 0x1, 0x0);
        gbc.writeMem(0x9580, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x8504);
        EXPECT(gbc.pc(), 0x9582);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9580), 0xcb);
        EXPECT(gbc.readMem(0x9581), 0xe3);
        // CB E3 0142
        gbc.setState(0x8c84, 0x482a, 0xf330, 0xcdeb, 0xadb9, 0x4f1d, 0x1, 0x1);
        gbc.writeMem(0x8c84, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x482a);
        EXPECT(gbc.pc(), 0x8c86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c84), 0xcb);
        EXPECT(gbc.readMem(0x8c85), 0xe3);
        // CB E3 0143
        gbc.setState(0x7240, 0xb42d, 0x3b20, 0x7f5a, 0xe717, 0x27b6, 0x0, 0x1);
        gbc.writeMem(0x7240, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb42d);
        EXPECT(gbc.pc(), 0x7242);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0144
        gbc.setState(0xed86, 0xa79e, 0x2c20, 0xa76c, 0x92db, 0xa3c2, 0x0, 0x0);
        gbc.writeMem(0xed86, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa79e);
        EXPECT(gbc.pc(), 0xed88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed86), 0xcb);
        EXPECT(gbc.readMem(0xed87), 0xe3);
        // CB E3 0145
        gbc.setState(0x5c6e, 0x1f4c, 0xd620, 0x9fdb, 0x464c, 0x37f3, 0x1, 0x0);
        gbc.writeMem(0x5c6e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1f4c);
        EXPECT(gbc.pc(), 0x5c70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0146
        gbc.setState(0x933d, 0x96e, 0x9680, 0x27dc, 0x5324, 0x543d, 0x0, 0x0);
        gbc.writeMem(0x933d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x96e);
        EXPECT(gbc.pc(), 0x933f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x933d), 0xcb);
        EXPECT(gbc.readMem(0x933e), 0xe3);
        // CB E3 0147
        gbc.setState(0x30ed, 0x4275, 0x4810, 0xb82, 0x898f, 0xa0fd, 0x0, 0x0);
        gbc.writeMem(0x30ed, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4275);
        EXPECT(gbc.pc(), 0x30ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0148
        gbc.setState(0xb4f5, 0xc7ed, 0xa580, 0x15cd, 0x4c4, 0x913f, 0x0, 0x1);
        gbc.writeMem(0xb4f5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xc7ed);
        EXPECT(gbc.pc(), 0xb4f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4f5), 0xcb);
        EXPECT(gbc.readMem(0xb4f6), 0xe3);
        // CB E3 0149
        gbc.setState(0xbcd2, 0xac4d, 0xcd60, 0x967, 0xa82d, 0xc504, 0x0, 0x1);
        gbc.writeMem(0xbcd2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xac4d);
        EXPECT(gbc.pc(), 0xbcd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcd2), 0xcb);
        EXPECT(gbc.readMem(0xbcd3), 0xe3);
        // CB E3 014A
        gbc.setState(0xda80, 0xf48b, 0xff00, 0xb85a, 0xee9, 0xa3e2, 0x1, 0x1);
        gbc.writeMem(0xda80, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf48b);
        EXPECT(gbc.pc(), 0xda82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda80), 0xcb);
        EXPECT(gbc.readMem(0xda81), 0xe3);
        // CB E3 014B
        gbc.setState(0x7f9c, 0x1bae, 0x2230, 0x951e, 0x841e, 0xe6de, 0x0, 0x1);
        gbc.writeMem(0x7f9c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1bae);
        EXPECT(gbc.pc(), 0x7f9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 014C
        gbc.setState(0xd825, 0xef87, 0xbf50, 0x29d9, 0x8edb, 0x31c0, 0x1, 0x0);
        gbc.writeMem(0xd825, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xef87);
        EXPECT(gbc.pc(), 0xd827);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd825), 0xcb);
        EXPECT(gbc.readMem(0xd826), 0xe3);
        // CB E3 014D
        gbc.setState(0x933a, 0x63ad, 0x8e60, 0x7d9a, 0x90f4, 0xcde5, 0x0, 0x1);
        gbc.writeMem(0x933a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x63ad);
        EXPECT(gbc.pc(), 0x933c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x933a), 0xcb);
        EXPECT(gbc.readMem(0x933b), 0xe3);
        // CB E3 014E
        gbc.setState(0x29b4, 0xa56, 0xa5b0, 0x2a22, 0xf2d3, 0x507c, 0x0, 0x0);
        gbc.writeMem(0x29b4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa56);
        EXPECT(gbc.pc(), 0x29b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 014F
        gbc.setState(0x303e, 0x7711, 0xba60, 0x7aa7, 0x79da, 0xd528, 0x1, 0x1);
        gbc.writeMem(0x303e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x7711);
        EXPECT(gbc.pc(), 0x3040);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0150
        gbc.setState(0xa2e1, 0xcce7, 0xa980, 0x4cc7, 0x81ed, 0xec7d, 0x0, 0x0);
        gbc.writeMem(0xa2e1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xcce7);
        EXPECT(gbc.pc(), 0xa2e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2e1), 0xcb);
        EXPECT(gbc.readMem(0xa2e2), 0xe3);
        // CB E3 0151
        gbc.setState(0xce08, 0xf27b, 0x17a0, 0xea30, 0xfa1b, 0xf51e, 0x0, 0x0);
        gbc.writeMem(0xce08, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf27b);
        EXPECT(gbc.pc(), 0xce0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce08), 0xcb);
        EXPECT(gbc.readMem(0xce09), 0xe3);
        // CB E3 0152
        gbc.setState(0xa234, 0x3e93, 0x8800, 0xef5d, 0x835a, 0x51b1, 0x0, 0x0);
        gbc.writeMem(0xa234, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x3e93);
        EXPECT(gbc.pc(), 0xa236);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa234), 0xcb);
        EXPECT(gbc.readMem(0xa235), 0xe3);
        // CB E3 0153
        gbc.setState(0x6b1a, 0x4c87, 0xb70, 0x7856, 0xb31d, 0xfcc9, 0x1, 0x0);
        gbc.writeMem(0x6b1a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4c87);
        EXPECT(gbc.pc(), 0x6b1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0155
        gbc.setState(0xa514, 0x8014, 0x7bf0, 0xaeb4, 0x942a, 0x5b69, 0x1, 0x0);
        gbc.writeMem(0xa514, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8014);
        EXPECT(gbc.pc(), 0xa516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa514), 0xcb);
        EXPECT(gbc.readMem(0xa515), 0xe3);
        // CB E3 0156
        gbc.setState(0xb2c3, 0x79ed, 0x8a50, 0x5d52, 0xe9f0, 0xee7a, 0x1, 0x0);
        gbc.writeMem(0xb2c3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x79ed);
        EXPECT(gbc.pc(), 0xb2c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2c3), 0xcb);
        EXPECT(gbc.readMem(0xb2c4), 0xe3);
        // CB E3 0157
        gbc.setState(0xaaac, 0x551d, 0x2f00, 0x50f4, 0x328d, 0x88ab, 0x0, 0x0);
        gbc.writeMem(0xaaac, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x551d);
        EXPECT(gbc.pc(), 0xaaae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaac), 0xcb);
        EXPECT(gbc.readMem(0xaaad), 0xe3);
        // CB E3 0158
        gbc.setState(0x12de, 0x2244, 0x1f60, 0x1640, 0x9e06, 0x471a, 0x1, 0x1);
        gbc.writeMem(0x12de, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x2244);
        EXPECT(gbc.pc(), 0x12e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0159
        gbc.setState(0x219a, 0x224a, 0x46d0, 0xbef9, 0x43d8, 0xa888, 0x0, 0x0);
        gbc.writeMem(0x219a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x224a);
        EXPECT(gbc.pc(), 0x219c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 015A
        gbc.setState(0x9c93, 0xda3a, 0x8d30, 0xf2ec, 0x2bc, 0x7712, 0x0, 0x0);
        gbc.writeMem(0x9c93, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xda3a);
        EXPECT(gbc.pc(), 0x9c95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c93), 0xcb);
        EXPECT(gbc.readMem(0x9c94), 0xe3);
        // CB E3 015B
        gbc.setState(0xbb88, 0xf0fa, 0x5620, 0x4d64, 0x1698, 0xac9, 0x0, 0x0);
        gbc.writeMem(0xbb88, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xf0fa);
        EXPECT(gbc.pc(), 0xbb8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb88), 0xcb);
        EXPECT(gbc.readMem(0xbb89), 0xe3);
        // CB E3 015C
        gbc.setState(0x2815, 0x92b7, 0x3de0, 0x14cc, 0x8a27, 0x4716, 0x1, 0x1);
        gbc.writeMem(0x2815, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x92b7);
        EXPECT(gbc.pc(), 0x2817);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 015D
        gbc.setState(0x6f8b, 0x5c40, 0xd960, 0xadc4, 0x88c4, 0xb2bf, 0x0, 0x0);
        gbc.writeMem(0x6f8b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x5c40);
        EXPECT(gbc.pc(), 0x6f8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 015E
        gbc.setState(0x3536, 0xcf17, 0x1510, 0xd38d, 0x115d, 0xc88d, 0x0, 0x1);
        gbc.writeMem(0x3536, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xcf17);
        EXPECT(gbc.pc(), 0x3538);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 015F
        gbc.setState(0x1d6c, 0x8f96, 0x3030, 0xc044, 0x2580, 0xc5f5, 0x1, 0x1);
        gbc.writeMem(0x1d6c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x8f96);
        EXPECT(gbc.pc(), 0x1d6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0160
        gbc.setState(0x6189, 0x9399, 0xd5b0, 0xc00f, 0xd257, 0x81bc, 0x0, 0x0);
        gbc.writeMem(0x6189, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9399);
        EXPECT(gbc.pc(), 0x618b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0161
        gbc.setState(0xe1e2, 0x7046, 0xc350, 0x9de4, 0x8630, 0x7f20, 0x0, 0x1);
        gbc.writeMem(0xe1e2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7046);
        EXPECT(gbc.pc(), 0xe1e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1e2), 0xcb);
        EXPECT(gbc.readMem(0xe1e3), 0xe3);
        // CB E3 0162
        gbc.setState(0x4c29, 0x8e65, 0xbf30, 0xd079, 0x6796, 0x1bf2, 0x0, 0x1);
        gbc.writeMem(0x4c29, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x8e65);
        EXPECT(gbc.pc(), 0x4c2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0163
        gbc.setState(0x31cd, 0x307d, 0x2db0, 0x1ef1, 0xac7a, 0x91d, 0x0, 0x0);
        gbc.writeMem(0x31cd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x307d);
        EXPECT(gbc.pc(), 0x31cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0164
        gbc.setState(0x3801, 0x407b, 0x9480, 0xb494, 0xde81, 0x8cca, 0x0, 0x1);
        gbc.writeMem(0x3801, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x407b);
        EXPECT(gbc.pc(), 0x3803);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0165
        gbc.setState(0x3f61, 0xb55c, 0x3ff0, 0x7793, 0xb26f, 0x9828, 0x1, 0x0);
        gbc.writeMem(0x3f61, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xb55c);
        EXPECT(gbc.pc(), 0x3f63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0166
        gbc.setState(0x7d22, 0xb047, 0x79b0, 0xbb82, 0xaefe, 0xebe8, 0x1, 0x1);
        gbc.writeMem(0x7d22, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb047);
        EXPECT(gbc.pc(), 0x7d24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0167
        gbc.setState(0x968e, 0x9918, 0x4370, 0x64cb, 0x604, 0x28a7, 0x1, 0x0);
        gbc.writeMem(0x968e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9918);
        EXPECT(gbc.pc(), 0x9690);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x968e), 0xcb);
        EXPECT(gbc.readMem(0x968f), 0xe3);
        // CB E3 0168
        gbc.setState(0x2ec9, 0xf2f7, 0xb330, 0x9bf0, 0x6c21, 0x541, 0x1, 0x0);
        gbc.writeMem(0x2ec9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xf2f7);
        EXPECT(gbc.pc(), 0x2ecb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0169
        gbc.setState(0xc2dc, 0xd914, 0x3b90, 0x6218, 0x7feb, 0xb888, 0x1, 0x0);
        gbc.writeMem(0xc2dc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd914);
        EXPECT(gbc.pc(), 0xc2de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2dc), 0xcb);
        EXPECT(gbc.readMem(0xc2dd), 0xe3);
        // CB E3 016A
        gbc.setState(0x55c1, 0xc819, 0xf220, 0x1627, 0x5032, 0x8b, 0x1, 0x1);
        gbc.writeMem(0x55c1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xc819);
        EXPECT(gbc.pc(), 0x55c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 016B
        gbc.setState(0xd94c, 0x1503, 0x9d50, 0x19d8, 0x2925, 0x7907, 0x0, 0x1);
        gbc.writeMem(0xd94c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1503);
        EXPECT(gbc.pc(), 0xd94e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd94c), 0xcb);
        EXPECT(gbc.readMem(0xd94d), 0xe3);
        // CB E3 016C
        gbc.setState(0x11d9, 0xa721, 0xcc10, 0x6f94, 0x2f54, 0x56ee, 0x0, 0x1);
        gbc.writeMem(0x11d9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xa721);
        EXPECT(gbc.pc(), 0x11db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 016D
        gbc.setState(0x4f92, 0xdccd, 0xbe30, 0x31b1, 0x80d2, 0x5dd4, 0x1, 0x0);
        gbc.writeMem(0x4f92, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xdccd);
        EXPECT(gbc.pc(), 0x4f94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 016E
        gbc.setState(0x1d9d, 0x6bd7, 0xd040, 0x53f1, 0x2299, 0x9267, 0x1, 0x0);
        gbc.writeMem(0x1d9d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x6bd7);
        EXPECT(gbc.pc(), 0x1d9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 016F
        gbc.setState(0xbaae, 0x678e, 0x6730, 0x3874, 0xa681, 0xf5b9, 0x1, 0x0);
        gbc.writeMem(0xbaae, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x678e);
        EXPECT(gbc.pc(), 0xbab0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaae), 0xcb);
        EXPECT(gbc.readMem(0xbaaf), 0xe3);
        // CB E3 0170
        gbc.setState(0x85e2, 0xebff, 0x4b70, 0xa435, 0x43d0, 0x95b8, 0x0, 0x0);
        gbc.writeMem(0x85e2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xebff);
        EXPECT(gbc.pc(), 0x85e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85e2), 0xcb);
        EXPECT(gbc.readMem(0x85e3), 0xe3);
        // CB E3 0171
        gbc.setState(0x390e, 0xfbf1, 0x20b0, 0x27cf, 0x5b42, 0xc9fb, 0x0, 0x1);
        gbc.writeMem(0x390e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xfbf1);
        EXPECT(gbc.pc(), 0x3910);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0172
        gbc.setState(0xdbcd, 0x97a7, 0x13c0, 0x90dc, 0x8dec, 0xaeae, 0x1, 0x1);
        gbc.writeMem(0xdbcd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x97a7);
        EXPECT(gbc.pc(), 0xdbcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbcd), 0xcb);
        EXPECT(gbc.readMem(0xdbce), 0xe3);
        // CB E3 0173
        gbc.setState(0xb17d, 0x7855, 0xea00, 0x2fe0, 0x4116, 0xdb83, 0x1, 0x0);
        gbc.writeMem(0xb17d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x7855);
        EXPECT(gbc.pc(), 0xb17f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb17d), 0xcb);
        EXPECT(gbc.readMem(0xb17e), 0xe3);
        // CB E3 0174
        gbc.setState(0xecbf, 0x163d, 0x8b70, 0x6851, 0x8627, 0xe2b9, 0x1, 0x0);
        gbc.writeMem(0xecbf, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x163d);
        EXPECT(gbc.pc(), 0xecc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecbf), 0xcb);
        EXPECT(gbc.readMem(0xecc0), 0xe3);
        // CB E3 0175
        gbc.setState(0xcd07, 0x1b20, 0xe500, 0xe112, 0xa062, 0x866c, 0x0, 0x0);
        gbc.writeMem(0xcd07, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1b20);
        EXPECT(gbc.pc(), 0xcd09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd07), 0xcb);
        EXPECT(gbc.readMem(0xcd08), 0xe3);
        // CB E3 0176
        gbc.setState(0x5576, 0x45a8, 0xfdf0, 0xcba8, 0xa9c2, 0x2a92, 0x1, 0x1);
        gbc.writeMem(0x5576, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x45a8);
        EXPECT(gbc.pc(), 0x5578);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0177
        gbc.setState(0xf3a, 0x134a, 0x340, 0xcbf9, 0x3c9b, 0xfc59, 0x1, 0x0);
        gbc.writeMem(0xf3a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x134a);
        EXPECT(gbc.pc(), 0xf3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0179
        gbc.setState(0x4bee, 0x9a65, 0x33f0, 0xeea7, 0x37d, 0xe08b, 0x0, 0x1);
        gbc.writeMem(0x4bee, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x9a65);
        EXPECT(gbc.pc(), 0x4bf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 017B
        gbc.setState(0x92a8, 0x3449, 0xbf60, 0x376f, 0xd31d, 0xcaa8, 0x0, 0x0);
        gbc.writeMem(0x92a8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x3449);
        EXPECT(gbc.pc(), 0x92aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92a8), 0xcb);
        EXPECT(gbc.readMem(0x92a9), 0xe3);
        // CB E3 017C
        gbc.setState(0x6abd, 0xc75b, 0x2c0, 0x9453, 0x12a5, 0xcd24, 0x0, 0x0);
        gbc.writeMem(0x6abd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc75b);
        EXPECT(gbc.pc(), 0x6abf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 017D
        gbc.setState(0xa1b7, 0x61ab, 0xfd20, 0x1419, 0xe8e3, 0x88cc, 0x0, 0x0);
        gbc.writeMem(0xa1b7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x61ab);
        EXPECT(gbc.pc(), 0xa1b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1b7), 0xcb);
        EXPECT(gbc.readMem(0xa1b8), 0xe3);
        // CB E3 017E
        gbc.setState(0x9789, 0x33eb, 0xb980, 0xd858, 0x4060, 0x1c44, 0x0, 0x1);
        gbc.writeMem(0x9789, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x33eb);
        EXPECT(gbc.pc(), 0x978b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9789), 0xcb);
        EXPECT(gbc.readMem(0x978a), 0xe3);
        // CB E3 017F
        gbc.setState(0x1b2e, 0xe638, 0x4df0, 0x9d14, 0x4e28, 0x6b41, 0x0, 0x0);
        gbc.writeMem(0x1b2e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xe638);
        EXPECT(gbc.pc(), 0x1b30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0180
        gbc.setState(0x6b15, 0x699, 0xeab0, 0xa205, 0xfca, 0x3723, 0x1, 0x0);
        gbc.writeMem(0x6b15, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x699);
        EXPECT(gbc.pc(), 0x6b17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0181
        gbc.setState(0x1a39, 0x4cf1, 0xb680, 0xc329, 0xbdff, 0xe4f5, 0x1, 0x1);
        gbc.writeMem(0x1a39, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x4cf1);
        EXPECT(gbc.pc(), 0x1a3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0183
        gbc.setState(0x2187, 0xbc7e, 0x6910, 0xea09, 0x86c7, 0xc03a, 0x1, 0x1);
        gbc.writeMem(0x2187, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xbc7e);
        EXPECT(gbc.pc(), 0x2189);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0184
        gbc.setState(0x65dc, 0x1204, 0x5950, 0x5529, 0xbcbc, 0x7180, 0x1, 0x0);
        gbc.writeMem(0x65dc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1204);
        EXPECT(gbc.pc(), 0x65de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0186
        gbc.setState(0x89e5, 0x2af0, 0xa5b0, 0x33d0, 0xa7ed, 0xfc21, 0x1, 0x0);
        gbc.writeMem(0x89e5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2af0);
        EXPECT(gbc.pc(), 0x89e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89e5), 0xcb);
        EXPECT(gbc.readMem(0x89e6), 0xe3);
        // CB E3 0187
        gbc.setState(0x2465, 0x9de1, 0x96d0, 0x76a, 0xb95, 0x6246, 0x0, 0x1);
        gbc.writeMem(0x2465, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9de1);
        EXPECT(gbc.pc(), 0x2467);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0188
        gbc.setState(0x8823, 0xef0, 0x2ae0, 0x9551, 0x80, 0xd72a, 0x1, 0x0);
        gbc.writeMem(0x8823, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xef0);
        EXPECT(gbc.pc(), 0x8825);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8823), 0xcb);
        EXPECT(gbc.readMem(0x8824), 0xe3);
        // CB E3 0189
        gbc.setState(0x5c26, 0x68fd, 0x7890, 0xa942, 0x2b8a, 0x7ca, 0x0, 0x0);
        gbc.writeMem(0x5c26, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x68fd);
        EXPECT(gbc.pc(), 0x5c28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 018A
        gbc.setState(0xe284, 0xc481, 0xad30, 0x7a43, 0x5732, 0x4d2a, 0x0, 0x1);
        gbc.writeMem(0xe284, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xc481);
        EXPECT(gbc.pc(), 0xe286);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe284), 0xcb);
        EXPECT(gbc.readMem(0xe285), 0xe3);
        // CB E3 018B
        gbc.setState(0x7cf5, 0xb533, 0xdca0, 0x4195, 0x2088, 0xd05e, 0x1, 0x0);
        gbc.writeMem(0x7cf5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb533);
        EXPECT(gbc.pc(), 0x7cf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 018C
        gbc.setState(0xedb4, 0xb6df, 0x2730, 0x2079, 0xf145, 0xa413, 0x1, 0x0);
        gbc.writeMem(0xedb4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xb6df);
        EXPECT(gbc.pc(), 0xedb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedb4), 0xcb);
        EXPECT(gbc.readMem(0xedb5), 0xe3);
        // CB E3 018D
        gbc.setState(0xa0a5, 0xf989, 0xef80, 0x4340, 0x4564, 0xd9ce, 0x1, 0x0);
        gbc.writeMem(0xa0a5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf989);
        EXPECT(gbc.pc(), 0xa0a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0a5), 0xcb);
        EXPECT(gbc.readMem(0xa0a6), 0xe3);
        // CB E3 018E
        gbc.setState(0x33ff, 0x966b, 0x16b0, 0x57c1, 0xfdb1, 0x4855, 0x0, 0x0);
        gbc.writeMem(0x33ff, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x966b);
        EXPECT(gbc.pc(), 0x3401);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 018F
        gbc.setState(0x595, 0x1127, 0x1100, 0x16b6, 0xc5c9, 0x3537, 0x0, 0x1);
        gbc.writeMem(0x595, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x1127);
        EXPECT(gbc.pc(), 0x597);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0190
        gbc.setState(0xdea, 0xa495, 0xee90, 0xe11d, 0x3fe0, 0xab94, 0x1, 0x0);
        gbc.writeMem(0xdea, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa495);
        EXPECT(gbc.pc(), 0xdec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0191
        gbc.setState(0x85df, 0xe80f, 0x9800, 0x883e, 0xca00, 0xce6, 0x0, 0x0);
        gbc.writeMem(0x85df, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe80f);
        EXPECT(gbc.pc(), 0x85e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85df), 0xcb);
        EXPECT(gbc.readMem(0x85e0), 0xe3);
        // CB E3 0192
        gbc.setState(0xebfe, 0x605d, 0x8890, 0x1a1a, 0x3cee, 0x195d, 0x1, 0x1);
        gbc.writeMem(0xebfe, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x605d);
        EXPECT(gbc.pc(), 0xec00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebfe), 0xcb);
        EXPECT(gbc.readMem(0xebff), 0xe3);
        // CB E3 0193
        gbc.setState(0x3e2, 0x21a3, 0x96b0, 0x345a, 0xfa7f, 0x15a0, 0x1, 0x0);
        gbc.writeMem(0x3e2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x21a3);
        EXPECT(gbc.pc(), 0x3e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0194
        gbc.setState(0x7e7a, 0x9593, 0xabc0, 0x6194, 0x17f5, 0xab25, 0x1, 0x1);
        gbc.writeMem(0x7e7a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x9593);
        EXPECT(gbc.pc(), 0x7e7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0195
        gbc.setState(0xd288, 0xf38c, 0x9d50, 0x312f, 0x8891, 0x6c7b, 0x1, 0x1);
        gbc.writeMem(0xd288, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf38c);
        EXPECT(gbc.pc(), 0xd28a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd288), 0xcb);
        EXPECT(gbc.readMem(0xd289), 0xe3);
        // CB E3 0196
        gbc.setState(0x7a1f, 0xff5b, 0xf960, 0x60a9, 0x654d, 0x3ca5, 0x0, 0x1);
        gbc.writeMem(0x7a1f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xff5b);
        EXPECT(gbc.pc(), 0x7a21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0197
        gbc.setState(0x732c, 0x43ab, 0x6070, 0x16df, 0x729c, 0x42a9, 0x0, 0x0);
        gbc.writeMem(0x732c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x43ab);
        EXPECT(gbc.pc(), 0x732e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0198
        gbc.setState(0xa6c3, 0x7300, 0xac30, 0xe843, 0x5543, 0x7ff0, 0x0, 0x1);
        gbc.writeMem(0xa6c3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x7300);
        EXPECT(gbc.pc(), 0xa6c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6c3), 0xcb);
        EXPECT(gbc.readMem(0xa6c4), 0xe3);
        // CB E3 0199
        gbc.setState(0xade3, 0xa78c, 0xc2a0, 0x314e, 0x26f5, 0x7fb3, 0x1, 0x1);
        gbc.writeMem(0xade3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa78c);
        EXPECT(gbc.pc(), 0xade5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xade3), 0xcb);
        EXPECT(gbc.readMem(0xade4), 0xe3);
        // CB E3 019A
        gbc.setState(0x1d9a, 0x3417, 0x4d90, 0x4c27, 0x1843, 0xc642, 0x1, 0x0);
        gbc.writeMem(0x1d9a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3417);
        EXPECT(gbc.pc(), 0x1d9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 019B
        gbc.setState(0xb547, 0xaf03, 0xf0, 0xd644, 0xd58, 0x53b6, 0x1, 0x0);
        gbc.writeMem(0xb547, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xaf03);
        EXPECT(gbc.pc(), 0xb549);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb547), 0xcb);
        EXPECT(gbc.readMem(0xb548), 0xe3);
        // CB E3 019C
        gbc.setState(0x26d8, 0x3730, 0x80e0, 0x7007, 0xd34a, 0x50c2, 0x1, 0x1);
        gbc.writeMem(0x26d8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x3730);
        EXPECT(gbc.pc(), 0x26da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 019D
        gbc.setState(0xa948, 0xcbf3, 0xb130, 0x4802, 0x4bbb, 0xcd79, 0x1, 0x0);
        gbc.writeMem(0xa948, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xcbf3);
        EXPECT(gbc.pc(), 0xa94a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa948), 0xcb);
        EXPECT(gbc.readMem(0xa949), 0xe3);
        // CB E3 019E
        gbc.setState(0x83ac, 0x4acb, 0xb0a0, 0xcbf9, 0x704e, 0xa192, 0x1, 0x1);
        gbc.writeMem(0x83ac, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x4acb);
        EXPECT(gbc.pc(), 0x83ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ac), 0xcb);
        EXPECT(gbc.readMem(0x83ad), 0xe3);
        // CB E3 019F
        gbc.setState(0x76f4, 0x771a, 0x26a0, 0xbf88, 0xb778, 0xf7f9, 0x1, 0x1);
        gbc.writeMem(0x76f4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x771a);
        EXPECT(gbc.pc(), 0x76f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 01A0
        gbc.setState(0x5586, 0x5def, 0x15c0, 0xa952, 0xe043, 0x766c, 0x1, 0x1);
        gbc.writeMem(0x5586, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5def);
        EXPECT(gbc.pc(), 0x5588);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 01A1
        gbc.setState(0x983a, 0xa967, 0x88a0, 0xecde, 0xcaf3, 0x6182, 0x0, 0x1);
        gbc.writeMem(0x983a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa967);
        EXPECT(gbc.pc(), 0x983c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x983a), 0xcb);
        EXPECT(gbc.readMem(0x983b), 0xe3);
        // CB E3 01A2
        gbc.setState(0xbaa3, 0xa733, 0x3c20, 0x10d7, 0xb2a1, 0x16a, 0x0, 0x1);
        gbc.writeMem(0xbaa3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa733);
        EXPECT(gbc.pc(), 0xbaa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaa3), 0xcb);
        EXPECT(gbc.readMem(0xbaa4), 0xe3);
        // CB E3 01A3
        gbc.setState(0x9530, 0xb27d, 0x8380, 0xf9, 0x34c, 0xd82a, 0x0, 0x1);
        gbc.writeMem(0x9530, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb27d);
        EXPECT(gbc.pc(), 0x9532);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9530), 0xcb);
        EXPECT(gbc.readMem(0x9531), 0xe3);
        // CB E3 01A4
        gbc.setState(0x6734, 0xb0a3, 0xa090, 0xfe0d, 0xd3a3, 0x4766, 0x1, 0x1);
        gbc.writeMem(0x6734, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xb0a3);
        EXPECT(gbc.pc(), 0x6736);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01A5
        gbc.setState(0x3345, 0x3791, 0xee10, 0x2393, 0x6d7, 0xf7f9, 0x0, 0x1);
        gbc.writeMem(0x3345, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x3791);
        EXPECT(gbc.pc(), 0x3347);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01A6
        gbc.setState(0x5977, 0x596a, 0xf8a0, 0x33ba, 0x8f09, 0x2aa6, 0x1, 0x0);
        gbc.writeMem(0x5977, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x596a);
        EXPECT(gbc.pc(), 0x5979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 01A7
        gbc.setState(0x38f6, 0x28bf, 0x89a0, 0x37f2, 0xef4c, 0x6bb7, 0x1, 0x0);
        gbc.writeMem(0x38f6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x28bf);
        EXPECT(gbc.pc(), 0x38f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 01A8
        gbc.setState(0x6cce, 0xd66a, 0xb910, 0x7ac2, 0x9748, 0x5848, 0x0, 0x0);
        gbc.writeMem(0x6cce, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xd66a);
        EXPECT(gbc.pc(), 0x6cd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01A9
        gbc.setState(0x56b3, 0xe661, 0x4c90, 0x314c, 0x552d, 0x2673, 0x1, 0x1);
        gbc.writeMem(0x56b3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe661);
        EXPECT(gbc.pc(), 0x56b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01AA
        gbc.setState(0xe421, 0x6a8a, 0x1aa0, 0x715f, 0xb414, 0x641e, 0x1, 0x1);
        gbc.writeMem(0xe421, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6a8a);
        EXPECT(gbc.pc(), 0xe423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe421), 0xcb);
        EXPECT(gbc.readMem(0xe422), 0xe3);
        // CB E3 01AB
        gbc.setState(0x2c8c, 0x4a23, 0xd030, 0x85fa, 0x2f9f, 0xba1c, 0x0, 0x1);
        gbc.writeMem(0x2c8c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x4a23);
        EXPECT(gbc.pc(), 0x2c8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01AC
        gbc.setState(0x6e4f, 0x4244, 0xf370, 0xa4c0, 0xdb76, 0xb8a2, 0x1, 0x1);
        gbc.writeMem(0x6e4f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x4244);
        EXPECT(gbc.pc(), 0x6e51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01AD
        gbc.setState(0xd27, 0x83c8, 0xf370, 0x4cac, 0x352, 0xbf30, 0x0, 0x0);
        gbc.writeMem(0xd27, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x83c8);
        EXPECT(gbc.pc(), 0xd29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01AE
        gbc.setState(0x2027, 0x685b, 0x9dd0, 0x7130, 0xf4a0, 0xd6c0, 0x0, 0x1);
        gbc.writeMem(0x2027, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x685b);
        EXPECT(gbc.pc(), 0x2029);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01AF
        gbc.setState(0x9bd3, 0x94ef, 0xbbe0, 0xb335, 0x50c8, 0x7f95, 0x1, 0x1);
        gbc.writeMem(0x9bd3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x94ef);
        EXPECT(gbc.pc(), 0x9bd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bd3), 0xcb);
        EXPECT(gbc.readMem(0x9bd4), 0xe3);
        // CB E3 01B0
        gbc.setState(0x8a69, 0xc02f, 0x5520, 0xdc02, 0x8dbd, 0x9f62, 0x1, 0x1);
        gbc.writeMem(0x8a69, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xc02f);
        EXPECT(gbc.pc(), 0x8a6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a69), 0xcb);
        EXPECT(gbc.readMem(0x8a6a), 0xe3);
        // CB E3 01B1
        gbc.setState(0x5bfa, 0xcb9b, 0x42f0, 0xe0b5, 0xbcf0, 0x764e, 0x0, 0x1);
        gbc.writeMem(0x5bfa, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xcb9b);
        EXPECT(gbc.pc(), 0x5bfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01B2
        gbc.setState(0x354b, 0xd585, 0xf770, 0xd201, 0xeec0, 0xb133, 0x0, 0x1);
        gbc.writeMem(0x354b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd585);
        EXPECT(gbc.pc(), 0x354d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01B4
        gbc.setState(0x8de9, 0xc9ba, 0x1670, 0xdfdd, 0xbfc6, 0xdea6, 0x1, 0x0);
        gbc.writeMem(0x8de9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc9ba);
        EXPECT(gbc.pc(), 0x8deb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8de9), 0xcb);
        EXPECT(gbc.readMem(0x8dea), 0xe3);
        // CB E3 01B5
        gbc.setState(0x7e6, 0x6bdd, 0xa290, 0x4674, 0xb5ac, 0x761d, 0x1, 0x0);
        gbc.writeMem(0x7e6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x6bdd);
        EXPECT(gbc.pc(), 0x7e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01B7
        gbc.setState(0x8dda, 0xb949, 0xa9d0, 0x278e, 0xe497, 0xd768, 0x0, 0x0);
        gbc.writeMem(0x8dda, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb949);
        EXPECT(gbc.pc(), 0x8ddc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dda), 0xcb);
        EXPECT(gbc.readMem(0x8ddb), 0xe3);
        // CB E3 01B8
        gbc.setState(0x234b, 0x8b3e, 0xf990, 0x1273, 0x93d4, 0xb021, 0x1, 0x0);
        gbc.writeMem(0x234b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8b3e);
        EXPECT(gbc.pc(), 0x234d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01B9
        gbc.setState(0x3fc4, 0xbc04, 0xe9e0, 0xc7b0, 0x8bbc, 0xc1da, 0x0, 0x0);
        gbc.writeMem(0x3fc4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xbc04);
        EXPECT(gbc.pc(), 0x3fc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 01BA
        gbc.setState(0x53d0, 0xb302, 0x3b20, 0x9945, 0xcfa4, 0x9ef0, 0x0, 0x0);
        gbc.writeMem(0x53d0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb302);
        EXPECT(gbc.pc(), 0x53d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 01BB
        gbc.setState(0x32a0, 0x99cd, 0x2a90, 0x728e, 0xfe2d, 0x27b6, 0x1, 0x0);
        gbc.writeMem(0x32a0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x99cd);
        EXPECT(gbc.pc(), 0x32a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01BC
        gbc.setState(0xb4bc, 0x57f5, 0xa10, 0x63bb, 0x3693, 0x983c, 0x0, 0x1);
        gbc.writeMem(0xb4bc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x57f5);
        EXPECT(gbc.pc(), 0xb4be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4bc), 0xcb);
        EXPECT(gbc.readMem(0xb4bd), 0xe3);
        // CB E3 01BE
        gbc.setState(0x9860, 0x92d4, 0x6150, 0x6139, 0x495a, 0xe688, 0x0, 0x0);
        gbc.writeMem(0x9860, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x92d4);
        EXPECT(gbc.pc(), 0x9862);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9860), 0xcb);
        EXPECT(gbc.readMem(0x9861), 0xe3);
        // CB E3 01BF
        gbc.setState(0xbbf9, 0x7d28, 0xb400, 0xba65, 0x5411, 0x7570, 0x1, 0x0);
        gbc.writeMem(0xbbf9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x7d28);
        EXPECT(gbc.pc(), 0xbbfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbf9), 0xcb);
        EXPECT(gbc.readMem(0xbbfa), 0xe3);
        // CB E3 01C0
        gbc.setState(0x6053, 0x2f43, 0x4590, 0xc9b1, 0x3bd1, 0xdde, 0x0, 0x0);
        gbc.writeMem(0x6053, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x2f43);
        EXPECT(gbc.pc(), 0x6055);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01C1
        gbc.setState(0xa759, 0x52db, 0xcb10, 0xcce8, 0xd755, 0xbd05, 0x0, 0x0);
        gbc.writeMem(0xa759, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x52db);
        EXPECT(gbc.pc(), 0xa75b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa759), 0xcb);
        EXPECT(gbc.readMem(0xa75a), 0xe3);
        // CB E3 01C2
        gbc.setState(0xc8e, 0x719f, 0xf4d0, 0x6ec7, 0x4d0f, 0xe215, 0x0, 0x1);
        gbc.writeMem(0xc8e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x719f);
        EXPECT(gbc.pc(), 0xc90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01C3
        gbc.setState(0xd7be, 0x9bb6, 0x7e70, 0xa3d3, 0x6f66, 0x2581, 0x0, 0x0);
        gbc.writeMem(0xd7be, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9bb6);
        EXPECT(gbc.pc(), 0xd7c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7be), 0xcb);
        EXPECT(gbc.readMem(0xd7bf), 0xe3);
        // CB E3 01C4
        gbc.setState(0x4388, 0x2fc4, 0xaed0, 0x694a, 0x5220, 0x5632, 0x0, 0x1);
        gbc.writeMem(0x4388, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x2fc4);
        EXPECT(gbc.pc(), 0x438a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01C5
        gbc.setState(0xe31e, 0x5b62, 0x48a0, 0x781f, 0xa7b1, 0x187f, 0x0, 0x1);
        gbc.writeMem(0xe31e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x5b62);
        EXPECT(gbc.pc(), 0xe320);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe31e), 0xcb);
        EXPECT(gbc.readMem(0xe31f), 0xe3);
        // CB E3 01C6
        gbc.setState(0x436c, 0xf6d1, 0x3370, 0xd537, 0x3247, 0xd825, 0x1, 0x0);
        gbc.writeMem(0x436c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xf6d1);
        EXPECT(gbc.pc(), 0x436e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01C7
        gbc.setState(0x3c45, 0xca3b, 0xded0, 0x17ea, 0xc9db, 0x6f04, 0x1, 0x1);
        gbc.writeMem(0x3c45, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xca3b);
        EXPECT(gbc.pc(), 0x3c47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01C9
        gbc.setState(0x6592, 0xbd57, 0x89c0, 0x2278, 0xc8c7, 0x9452, 0x1, 0x1);
        gbc.writeMem(0x6592, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xbd57);
        EXPECT(gbc.pc(), 0x6594);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 01CA
        gbc.setState(0x1436, 0xc214, 0x5e20, 0x7af5, 0xa923, 0xe031, 0x0, 0x0);
        gbc.writeMem(0x1436, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xc214);
        EXPECT(gbc.pc(), 0x1438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 01CB
        gbc.setState(0x6bfc, 0x6b67, 0x8380, 0x7759, 0x6a4d, 0x5189, 0x1, 0x1);
        gbc.writeMem(0x6bfc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6b67);
        EXPECT(gbc.pc(), 0x6bfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 01CC
        gbc.setState(0x12f0, 0x10c3, 0x9380, 0x4e36, 0x114e, 0xc94c, 0x0, 0x0);
        gbc.writeMem(0x12f0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x10c3);
        EXPECT(gbc.pc(), 0x12f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 01CD
        gbc.setState(0xc6e3, 0xcac0, 0x3c10, 0x223b, 0x6e7, 0x6e35, 0x1, 0x0);
        gbc.writeMem(0xc6e3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xcac0);
        EXPECT(gbc.pc(), 0xc6e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6e3), 0xcb);
        EXPECT(gbc.readMem(0xc6e4), 0xe3);
        // CB E3 01CE
        gbc.setState(0xc205, 0x99fe, 0xd830, 0x7755, 0x38bf, 0xc2d8, 0x0, 0x1);
        gbc.writeMem(0xc205, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x99fe);
        EXPECT(gbc.pc(), 0xc207);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc205), 0xcb);
        EXPECT(gbc.readMem(0xc206), 0xe3);
        // CB E3 01D0
        gbc.setState(0x7130, 0xd16c, 0x9390, 0x6130, 0x34ba, 0xdd36, 0x0, 0x0);
        gbc.writeMem(0x7130, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd16c);
        EXPECT(gbc.pc(), 0x7132);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01D1
        gbc.setState(0xbdbe, 0xecc3, 0xea90, 0x5d06, 0x6b9, 0x8424, 0x0, 0x0);
        gbc.writeMem(0xbdbe, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xecc3);
        EXPECT(gbc.pc(), 0xbdc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdbe), 0xcb);
        EXPECT(gbc.readMem(0xbdbf), 0xe3);
        // CB E3 01D2
        gbc.setState(0x4aa1, 0xfd0, 0x70b0, 0x34af, 0x4fd1, 0x902e, 0x0, 0x0);
        gbc.writeMem(0x4aa1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xfd0);
        EXPECT(gbc.pc(), 0x4aa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01D3
        gbc.setState(0xdf2e, 0xb996, 0xd410, 0x4e62, 0x5877, 0xcbd9, 0x1, 0x0);
        gbc.writeMem(0xdf2e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb996);
        EXPECT(gbc.pc(), 0xdf30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf2e), 0xcb);
        EXPECT(gbc.readMem(0xdf2f), 0xe3);
        // CB E3 01D4
        gbc.setState(0x1745, 0x7c5f, 0xf020, 0x39b8, 0xf5a8, 0x439a, 0x1, 0x0);
        gbc.writeMem(0x1745, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7c5f);
        EXPECT(gbc.pc(), 0x1747);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 01D5
        gbc.setState(0xe146, 0xbe1d, 0x6a10, 0xaab0, 0xa1ec, 0xbe89, 0x0, 0x1);
        gbc.writeMem(0xe146, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xbe1d);
        EXPECT(gbc.pc(), 0xe148);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe146), 0xcb);
        EXPECT(gbc.readMem(0xe147), 0xe3);
        // CB E3 01D6
        gbc.setState(0xf42, 0x7f4d, 0xc0f0, 0x363d, 0xb554, 0xbed8, 0x0, 0x1);
        gbc.writeMem(0xf42, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7f4d);
        EXPECT(gbc.pc(), 0xf44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01D7
        gbc.setState(0x64dd, 0x54af, 0x2250, 0xfcf7, 0x904f, 0x2b0b, 0x0, 0x1);
        gbc.writeMem(0x64dd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x54af);
        EXPECT(gbc.pc(), 0x64df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01D9
        gbc.setState(0x3ef8, 0x3ece, 0x3ce0, 0x7f6c, 0xb736, 0x53eb, 0x1, 0x1);
        gbc.writeMem(0x3ef8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x3ece);
        EXPECT(gbc.pc(), 0x3efa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 01DA
        gbc.setState(0x9c67, 0xe05a, 0xb310, 0xaa7e, 0xe7d0, 0x13f5, 0x1, 0x0);
        gbc.writeMem(0x9c67, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xe05a);
        EXPECT(gbc.pc(), 0x9c69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c67), 0xcb);
        EXPECT(gbc.readMem(0x9c68), 0xe3);
        // CB E3 01DC
        gbc.setState(0xb190, 0xe1e0, 0xc1b0, 0xeca5, 0x4c02, 0xa182, 0x1, 0x1);
        gbc.writeMem(0xb190, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xe1e0);
        EXPECT(gbc.pc(), 0xb192);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb190), 0xcb);
        EXPECT(gbc.readMem(0xb191), 0xe3);
        // CB E3 01DD
        gbc.setState(0x45e, 0xfb0c, 0xa640, 0xf83a, 0xd7a9, 0x34e4, 0x1, 0x1);
        gbc.writeMem(0x45e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xfb0c);
        EXPECT(gbc.pc(), 0x460);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 01DE
        gbc.setState(0x86d8, 0xf7ed, 0x720, 0x7c4d, 0xcc04, 0x8197, 0x1, 0x1);
        gbc.writeMem(0x86d8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf7ed);
        EXPECT(gbc.pc(), 0x86da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86d8), 0xcb);
        EXPECT(gbc.readMem(0x86d9), 0xe3);
        // CB E3 01DF
        gbc.setState(0x710e, 0x4b63, 0x5330, 0x654d, 0xd1c8, 0xc80f, 0x0, 0x0);
        gbc.writeMem(0x710e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x4b63);
        EXPECT(gbc.pc(), 0x7110);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01E0
        gbc.setState(0x4140, 0xe5e0, 0x9630, 0xeb27, 0xab26, 0x1471, 0x1, 0x0);
        gbc.writeMem(0x4140, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe5e0);
        EXPECT(gbc.pc(), 0x4142);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01E2
        gbc.setState(0xb6fe, 0x40a8, 0xe360, 0x6f75, 0x11fb, 0x147d, 0x0, 0x1);
        gbc.writeMem(0xb6fe, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x40a8);
        EXPECT(gbc.pc(), 0xb700);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6fe), 0xcb);
        EXPECT(gbc.readMem(0xb6ff), 0xe3);
        // CB E3 01E3
        gbc.setState(0x56ab, 0xcba5, 0xba40, 0xb76c, 0xdbb0, 0xee38, 0x0, 0x0);
        gbc.writeMem(0x56ab, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xcba5);
        EXPECT(gbc.pc(), 0x56ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 01E4
        gbc.setState(0xcce, 0x14b3, 0x2aa0, 0xd8e9, 0x1f47, 0xadff, 0x1, 0x1);
        gbc.writeMem(0xcce, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x14b3);
        EXPECT(gbc.pc(), 0xcd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 01E5
        gbc.setState(0x99f6, 0xf828, 0x7b50, 0xb91c, 0x42d2, 0x2a9e, 0x1, 0x1);
        gbc.writeMem(0x99f6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xf828);
        EXPECT(gbc.pc(), 0x99f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99f6), 0xcb);
        EXPECT(gbc.readMem(0x99f7), 0xe3);
        // CB E3 01E6
        gbc.setState(0x9c3e, 0xd77b, 0xdcf0, 0x3581, 0x69f5, 0x85ff, 0x0, 0x1);
        gbc.writeMem(0x9c3e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xd77b);
        EXPECT(gbc.pc(), 0x9c40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c3e), 0xcb);
        EXPECT(gbc.readMem(0x9c3f), 0xe3);
        // CB E3 01E7
        gbc.setState(0x8f8e, 0x9fc9, 0x2030, 0xbc86, 0x98e6, 0x4cc8, 0x1, 0x0);
        gbc.writeMem(0x8f8e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9fc9);
        EXPECT(gbc.pc(), 0x8f90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f8e), 0xcb);
        EXPECT(gbc.readMem(0x8f8f), 0xe3);
        // CB E3 01E8
        gbc.setState(0x6650, 0xd864, 0xe500, 0xd3f6, 0x1fb6, 0xf114, 0x1, 0x0);
        gbc.writeMem(0x6650, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd864);
        EXPECT(gbc.pc(), 0x6652);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 01E9
        gbc.setState(0x6854, 0xb8b1, 0x6610, 0xc67f, 0xd054, 0x6117, 0x1, 0x1);
        gbc.writeMem(0x6854, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb8b1);
        EXPECT(gbc.pc(), 0x6856);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01EA
        gbc.setState(0x49e, 0x9c1f, 0xa80, 0xf3a, 0x1914, 0xab4a, 0x1, 0x1);
        gbc.writeMem(0x49e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9c1f);
        EXPECT(gbc.pc(), 0x4a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 01EB
        gbc.setState(0x3fa8, 0xbd87, 0xb590, 0x345c, 0x1d48, 0x3e23, 0x1, 0x0);
        gbc.writeMem(0x3fa8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xbd87);
        EXPECT(gbc.pc(), 0x3faa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01EC
        gbc.setState(0xd8f9, 0xf30f, 0x4d00, 0x55bd, 0x1286, 0x59cb, 0x0, 0x1);
        gbc.writeMem(0xd8f9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xf30f);
        EXPECT(gbc.pc(), 0xd8fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8f9), 0xcb);
        EXPECT(gbc.readMem(0xd8fa), 0xe3);
        // CB E3 01ED
        gbc.setState(0xa7d3, 0xaae6, 0x3de0, 0x684f, 0xf9d, 0x861, 0x1, 0x0);
        gbc.writeMem(0xa7d3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xaae6);
        EXPECT(gbc.pc(), 0xa7d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7d3), 0xcb);
        EXPECT(gbc.readMem(0xa7d4), 0xe3);
        // CB E3 01EE
        gbc.setState(0x7ecc, 0x2831, 0xe340, 0x3b07, 0x187, 0x51f9, 0x0, 0x1);
        gbc.writeMem(0x7ecc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x2831);
        EXPECT(gbc.pc(), 0x7ece);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 01EF
        gbc.setState(0x2eb3, 0xde1c, 0x8cc0, 0x710a, 0xc8c, 0xdef3, 0x1, 0x0);
        gbc.writeMem(0x2eb3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xde1c);
        EXPECT(gbc.pc(), 0x2eb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 01F0
        gbc.setState(0xa2d7, 0xd987, 0x7dd0, 0x42ac, 0x56a5, 0xfec7, 0x0, 0x0);
        gbc.writeMem(0xa2d7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xd987);
        EXPECT(gbc.pc(), 0xa2d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2d7), 0xcb);
        EXPECT(gbc.readMem(0xa2d8), 0xe3);
        // CB E3 01F1
        gbc.setState(0xe91f, 0xc3d2, 0xf730, 0x7b1e, 0x79ec, 0xc61e, 0x0, 0x0);
        gbc.writeMem(0xe91f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xc3d2);
        EXPECT(gbc.pc(), 0xe921);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe91f), 0xcb);
        EXPECT(gbc.readMem(0xe920), 0xe3);
        // CB E3 01F2
        gbc.setState(0x8b54, 0xc1bb, 0x2c00, 0x1a84, 0xccda, 0xe68d, 0x0, 0x0);
        gbc.writeMem(0x8b54, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xc1bb);
        EXPECT(gbc.pc(), 0x8b56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b54), 0xcb);
        EXPECT(gbc.readMem(0x8b55), 0xe3);
        // CB E3 01F3
        gbc.setState(0x68ff, 0xa558, 0x2350, 0xbf24, 0x7947, 0x5eaf, 0x0, 0x1);
        gbc.writeMem(0x68ff, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa558);
        EXPECT(gbc.pc(), 0x6901);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01F4
        gbc.setState(0xa4c5, 0x8063, 0xd220, 0x6578, 0xf736, 0x2297, 0x1, 0x0);
        gbc.writeMem(0xa4c5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8063);
        EXPECT(gbc.pc(), 0xa4c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4c5), 0xcb);
        EXPECT(gbc.readMem(0xa4c6), 0xe3);
        // CB E3 01F5
        gbc.setState(0xef34, 0x5e82, 0x3360, 0xf178, 0x32a2, 0x2574, 0x0, 0x1);
        gbc.writeMem(0xef34, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5e82);
        EXPECT(gbc.pc(), 0xef36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef34), 0xcb);
        EXPECT(gbc.readMem(0xef35), 0xe3);
        // CB E3 01F6
        gbc.setState(0x2d04, 0xc228, 0x6440, 0xad42, 0x7542, 0x809e, 0x0, 0x1);
        gbc.writeMem(0x2d04, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc228);
        EXPECT(gbc.pc(), 0x2d06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 01F7
        gbc.setState(0x5149, 0xeecf, 0xb8c0, 0x26fb, 0x92a3, 0x4940, 0x1, 0x0);
        gbc.writeMem(0x5149, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xeecf);
        EXPECT(gbc.pc(), 0x514b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 01F8
        gbc.setState(0xc7e2, 0xe242, 0x3c40, 0xf379, 0xb9bd, 0xd7c6, 0x0, 0x1);
        gbc.writeMem(0xc7e2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe242);
        EXPECT(gbc.pc(), 0xc7e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7e2), 0xcb);
        EXPECT(gbc.readMem(0xc7e3), 0xe3);
        // CB E3 01F9
        gbc.setState(0x9413, 0x99b8, 0x9900, 0xf5c0, 0xfb8b, 0xd16c, 0x0, 0x1);
        gbc.writeMem(0x9413, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x99b8);
        EXPECT(gbc.pc(), 0x9415);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9413), 0xcb);
        EXPECT(gbc.readMem(0x9414), 0xe3);
        // CB E3 01FA
        gbc.setState(0x2ab7, 0xa79b, 0xbce0, 0x5cbe, 0x8cce, 0xfe30, 0x0, 0x0);
        gbc.writeMem(0x2ab7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xa79b);
        EXPECT(gbc.pc(), 0x2ab9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 01FB
        gbc.setState(0x16ed, 0xc8b0, 0x73d0, 0xc4db, 0xfbae, 0x5d7c, 0x1, 0x0);
        gbc.writeMem(0x16ed, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xc8b0);
        EXPECT(gbc.pc(), 0x16ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01FC
        gbc.setState(0x2098, 0x5f0c, 0x59b0, 0xd67a, 0x322c, 0x29af, 0x1, 0x0);
        gbc.writeMem(0x2098, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x5f0c);
        EXPECT(gbc.pc(), 0x209a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01FD
        gbc.setState(0x4388, 0x3a18, 0x1b50, 0x61fc, 0xd5ca, 0x729b, 0x1, 0x1);
        gbc.writeMem(0x4388, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x3a18);
        EXPECT(gbc.pc(), 0x438a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 01FE
        gbc.setState(0xe564, 0x597b, 0x8dc0, 0x21a7, 0x5bd3, 0xf77f, 0x0, 0x1);
        gbc.writeMem(0xe564, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x597b);
        EXPECT(gbc.pc(), 0xe566);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe564), 0xcb);
        EXPECT(gbc.readMem(0xe565), 0xe3);
        // CB E3 01FF
        gbc.setState(0xcd6b, 0x8326, 0xc000, 0x3c7b, 0x9d10, 0xa987, 0x1, 0x0);
        gbc.writeMem(0xcd6b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8326);
        EXPECT(gbc.pc(), 0xcd6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd6b), 0xcb);
        EXPECT(gbc.readMem(0xcd6c), 0xe3);
        // CB E3 0200
        gbc.setState(0xe548, 0xf684, 0x1740, 0x1af8, 0xd95a, 0x3de0, 0x0, 0x0);
        gbc.writeMem(0xe548, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xf684);
        EXPECT(gbc.pc(), 0xe54a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe548), 0xcb);
        EXPECT(gbc.readMem(0xe549), 0xe3);
        // CB E3 0201
        gbc.setState(0x24c7, 0x5c64, 0xbb0, 0xd43a, 0x944c, 0xeda, 0x0, 0x1);
        gbc.writeMem(0x24c7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5c64);
        EXPECT(gbc.pc(), 0x24c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0202
        gbc.setState(0xad27, 0x98f9, 0xfc10, 0xdf84, 0xc15e, 0xccd2, 0x0, 0x1);
        gbc.writeMem(0xad27, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x98f9);
        EXPECT(gbc.pc(), 0xad29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad27), 0xcb);
        EXPECT(gbc.readMem(0xad28), 0xe3);
        // CB E3 0203
        gbc.setState(0xa25e, 0xc20a, 0x2080, 0xad5f, 0x50c4, 0x1515, 0x0, 0x1);
        gbc.writeMem(0xa25e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc20a);
        EXPECT(gbc.pc(), 0xa260);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa25e), 0xcb);
        EXPECT(gbc.readMem(0xa25f), 0xe3);
        // CB E3 0205
        gbc.setState(0x1432, 0x1f5d, 0x71a0, 0x2c64, 0x1a3a, 0xb683, 0x1, 0x0);
        gbc.writeMem(0x1432, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x1f5d);
        EXPECT(gbc.pc(), 0x1434);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0206
        gbc.setState(0xc0af, 0xe1f2, 0x73b0, 0x745b, 0x2992, 0x2bc2, 0x1, 0x1);
        gbc.writeMem(0xc0af, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe1f2);
        EXPECT(gbc.pc(), 0xc0b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0af), 0xcb);
        EXPECT(gbc.readMem(0xc0b0), 0xe3);
        // CB E3 0207
        gbc.setState(0x59be, 0x2c93, 0x8e90, 0xad90, 0xa29c, 0x47fe, 0x1, 0x0);
        gbc.writeMem(0x59be, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x2c93);
        EXPECT(gbc.pc(), 0x59c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0208
        gbc.setState(0x81fd, 0x7bf8, 0xc4c0, 0x3567, 0x9614, 0xce9c, 0x0, 0x0);
        gbc.writeMem(0x81fd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x7bf8);
        EXPECT(gbc.pc(), 0x81ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81fd), 0xcb);
        EXPECT(gbc.readMem(0x81fe), 0xe3);
        // CB E3 0209
        gbc.setState(0x900b, 0x5faa, 0x5d90, 0x6fda, 0xba1d, 0xb467, 0x1, 0x1);
        gbc.writeMem(0x900b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x5faa);
        EXPECT(gbc.pc(), 0x900d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x900b), 0xcb);
        EXPECT(gbc.readMem(0x900c), 0xe3);
        // CB E3 020A
        gbc.setState(0xc690, 0xcdbc, 0xad50, 0xa8fb, 0xecc8, 0xbd58, 0x0, 0x0);
        gbc.writeMem(0xc690, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xcdbc);
        EXPECT(gbc.pc(), 0xc692);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc690), 0xcb);
        EXPECT(gbc.readMem(0xc691), 0xe3);
        // CB E3 020B
        gbc.setState(0x876d, 0x7c6b, 0xc7d0, 0x7e4d, 0x3546, 0xa190, 0x0, 0x1);
        gbc.writeMem(0x876d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7c6b);
        EXPECT(gbc.pc(), 0x876f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x876d), 0xcb);
        EXPECT(gbc.readMem(0x876e), 0xe3);
        // CB E3 020C
        gbc.setState(0x5cb, 0xd019, 0xa900, 0xeae8, 0x2d07, 0xc9bb, 0x0, 0x0);
        gbc.writeMem(0x5cb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd019);
        EXPECT(gbc.pc(), 0x5cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 020D
        gbc.setState(0x3d13, 0x5701, 0xed50, 0x74f4, 0x26de, 0x59a0, 0x0, 0x1);
        gbc.writeMem(0x3d13, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5701);
        EXPECT(gbc.pc(), 0x3d15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 020E
        gbc.setState(0xf1, 0x5154, 0xd300, 0x68a9, 0xb9f4, 0x1d40, 0x0, 0x1);
        gbc.writeMem(0xf1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x5154);
        EXPECT(gbc.pc(), 0xf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 020F
        gbc.setState(0x7f2b, 0xbd2, 0xed30, 0xf047, 0x9bd5, 0xdfae, 0x0, 0x0);
        gbc.writeMem(0x7f2b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xbd2);
        EXPECT(gbc.pc(), 0x7f2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0210
        gbc.setState(0xd81a, 0xc94d, 0x1430, 0xc35a, 0x852d, 0x2100, 0x0, 0x0);
        gbc.writeMem(0xd81a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc94d);
        EXPECT(gbc.pc(), 0xd81c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd81a), 0xcb);
        EXPECT(gbc.readMem(0xd81b), 0xe3);
        // CB E3 0212
        gbc.setState(0x2e08, 0xc691, 0x65a0, 0x49f7, 0x7771, 0x600f, 0x1, 0x1);
        gbc.writeMem(0x2e08, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xc691);
        EXPECT(gbc.pc(), 0x2e0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0213
        gbc.setState(0x5ab1, 0xbc3b, 0x330, 0x8343, 0x4eba, 0x4536, 0x1, 0x1);
        gbc.writeMem(0x5ab1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xbc3b);
        EXPECT(gbc.pc(), 0x5ab3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0214
        gbc.setState(0x7f58, 0x3aa0, 0xd240, 0x18b5, 0xa26c, 0xb6dd, 0x0, 0x1);
        gbc.writeMem(0x7f58, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3aa0);
        EXPECT(gbc.pc(), 0x7f5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0216
        gbc.setState(0x1cf, 0x7c10, 0x8680, 0x160d, 0x5b74, 0xe7d6, 0x0, 0x1);
        gbc.writeMem(0x1cf, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x7c10);
        EXPECT(gbc.pc(), 0x1d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0217
        gbc.setState(0x9b7e, 0x96ef, 0xde10, 0x424d, 0xecdf, 0xd1d5, 0x0, 0x1);
        gbc.writeMem(0x9b7e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x96ef);
        EXPECT(gbc.pc(), 0x9b80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b7e), 0xcb);
        EXPECT(gbc.readMem(0x9b7f), 0xe3);
        // CB E3 0218
        gbc.setState(0xc34b, 0x1d0e, 0x5310, 0xbf0e, 0xcb19, 0xeaed, 0x0, 0x1);
        gbc.writeMem(0xc34b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1d0e);
        EXPECT(gbc.pc(), 0xc34d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc34b), 0xcb);
        EXPECT(gbc.readMem(0xc34c), 0xe3);
        // CB E3 0219
        gbc.setState(0x694d, 0x9eaa, 0xcaf0, 0x3444, 0x6b19, 0xeb0e, 0x1, 0x1);
        gbc.writeMem(0x694d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x9eaa);
        EXPECT(gbc.pc(), 0x694f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 021A
        gbc.setState(0xa226, 0xb1f, 0xae30, 0x3ad3, 0xd51c, 0x4e54, 0x1, 0x1);
        gbc.writeMem(0xa226, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb1f);
        EXPECT(gbc.pc(), 0xa228);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa226), 0xcb);
        EXPECT(gbc.readMem(0xa227), 0xe3);
        // CB E3 021B
        gbc.setState(0x7d5f, 0xdd84, 0x330, 0x7ca0, 0x1a77, 0xac2, 0x1, 0x0);
        gbc.writeMem(0x7d5f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xdd84);
        EXPECT(gbc.pc(), 0x7d61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 021C
        gbc.setState(0xcaab, 0xab31, 0x2e50, 0x2669, 0x65d6, 0xac36, 0x0, 0x1);
        gbc.writeMem(0xcaab, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xab31);
        EXPECT(gbc.pc(), 0xcaad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaab), 0xcb);
        EXPECT(gbc.readMem(0xcaac), 0xe3);
        // CB E3 021D
        gbc.setState(0x74ab, 0x7458, 0x8ce0, 0x9941, 0x9669, 0x599c, 0x1, 0x0);
        gbc.writeMem(0x74ab, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x7458);
        EXPECT(gbc.pc(), 0x74ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 021E
        gbc.setState(0xdfc5, 0x1f83, 0x5100, 0x9b01, 0xf830, 0xaedd, 0x1, 0x1);
        gbc.writeMem(0xdfc5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1f83);
        EXPECT(gbc.pc(), 0xdfc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfc5), 0xcb);
        EXPECT(gbc.readMem(0xdfc6), 0xe3);
        // CB E3 021F
        gbc.setState(0x27d2, 0xc59, 0x4d0, 0x25a3, 0x7f5e, 0xba7a, 0x1, 0x0);
        gbc.writeMem(0x27d2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xc59);
        EXPECT(gbc.pc(), 0x27d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0220
        gbc.setState(0x49e4, 0xc665, 0xda20, 0x66be, 0xb2af, 0xfea3, 0x0, 0x0);
        gbc.writeMem(0x49e4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xc665);
        EXPECT(gbc.pc(), 0x49e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0221
        gbc.setState(0x605b, 0x53ce, 0xa90, 0xdb5a, 0x335a, 0x1a78, 0x1, 0x0);
        gbc.writeMem(0x605b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x53ce);
        EXPECT(gbc.pc(), 0x605d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0222
        gbc.setState(0x2117, 0x1263, 0x4ba0, 0x9499, 0x93e1, 0xe, 0x0, 0x0);
        gbc.writeMem(0x2117, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1263);
        EXPECT(gbc.pc(), 0x2119);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0223
        gbc.setState(0x5202, 0x20e4, 0x4460, 0xeff3, 0x2837, 0x3331, 0x1, 0x1);
        gbc.writeMem(0x5202, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x20e4);
        EXPECT(gbc.pc(), 0x5204);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0224
        gbc.setState(0xbeb2, 0x39dc, 0x94a0, 0x9d3, 0x9dfe, 0xe65f, 0x0, 0x1);
        gbc.writeMem(0xbeb2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x39dc);
        EXPECT(gbc.pc(), 0xbeb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeb2), 0xcb);
        EXPECT(gbc.readMem(0xbeb3), 0xe3);
        // CB E3 0225
        gbc.setState(0x3a9e, 0xf947, 0x9690, 0xdc19, 0x94f7, 0x54df, 0x0, 0x1);
        gbc.writeMem(0x3a9e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf947);
        EXPECT(gbc.pc(), 0x3aa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0226
        gbc.setState(0xdcf7, 0x8848, 0x620, 0x9363, 0xfe95, 0xfa5f, 0x0, 0x1);
        gbc.writeMem(0xdcf7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x8848);
        EXPECT(gbc.pc(), 0xdcf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcf7), 0xcb);
        EXPECT(gbc.readMem(0xdcf8), 0xe3);
        // CB E3 0227
        gbc.setState(0xab66, 0x6104, 0x4920, 0x2f90, 0x3e18, 0x33c0, 0x0, 0x0);
        gbc.writeMem(0xab66, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x6104);
        EXPECT(gbc.pc(), 0xab68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab66), 0xcb);
        EXPECT(gbc.readMem(0xab67), 0xe3);
        // CB E3 0228
        gbc.setState(0x3b96, 0x6077, 0x7610, 0xd303, 0x1775, 0x427f, 0x1, 0x1);
        gbc.writeMem(0x3b96, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x6077);
        EXPECT(gbc.pc(), 0x3b98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0229
        gbc.setState(0x6d97, 0x3f1a, 0x16b0, 0xb8e, 0x7625, 0xc327, 0x0, 0x0);
        gbc.writeMem(0x6d97, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3f1a);
        EXPECT(gbc.pc(), 0x6d99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 022A
        gbc.setState(0xecd, 0x2dc8, 0x29a0, 0x2bf4, 0xbf0a, 0x60f, 0x1, 0x0);
        gbc.writeMem(0xecd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x2dc8);
        EXPECT(gbc.pc(), 0xecf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 022C
        gbc.setState(0xeb1d, 0x1dad, 0x61c0, 0xb73f, 0xd426, 0xbe3, 0x0, 0x1);
        gbc.writeMem(0xeb1d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1dad);
        EXPECT(gbc.pc(), 0xeb1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb1d), 0xcb);
        EXPECT(gbc.readMem(0xeb1e), 0xe3);
        // CB E3 022D
        gbc.setState(0xe2b5, 0xad79, 0x3e70, 0x7a00, 0xe844, 0x7a13, 0x1, 0x1);
        gbc.writeMem(0xe2b5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xad79);
        EXPECT(gbc.pc(), 0xe2b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2b5), 0xcb);
        EXPECT(gbc.readMem(0xe2b6), 0xe3);
        // CB E3 022E
        gbc.setState(0x5345, 0x12ff, 0x8b0, 0x6687, 0x1337, 0x3fcb, 0x0, 0x1);
        gbc.writeMem(0x5345, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x12ff);
        EXPECT(gbc.pc(), 0x5347);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 022F
        gbc.setState(0xba0, 0xf2d4, 0x6e30, 0x45d3, 0x6049, 0xfeaf, 0x0, 0x1);
        gbc.writeMem(0xba0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf2d4);
        EXPECT(gbc.pc(), 0xba2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0230
        gbc.setState(0x8c2c, 0xcffa, 0x7e30, 0x98fc, 0xfae3, 0xe95e, 0x0, 0x1);
        gbc.writeMem(0x8c2c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xcffa);
        EXPECT(gbc.pc(), 0x8c2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c2c), 0xcb);
        EXPECT(gbc.readMem(0x8c2d), 0xe3);
        // CB E3 0231
        gbc.setState(0xe993, 0xf360, 0x9680, 0xa5b1, 0x6b3a, 0x997b, 0x0, 0x1);
        gbc.writeMem(0xe993, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf360);
        EXPECT(gbc.pc(), 0xe995);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe993), 0xcb);
        EXPECT(gbc.readMem(0xe994), 0xe3);
        // CB E3 0232
        gbc.setState(0x638e, 0x52a2, 0xa8f0, 0x84b, 0xbd46, 0xf0f4, 0x1, 0x0);
        gbc.writeMem(0x638e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x52a2);
        EXPECT(gbc.pc(), 0x6390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0233
        gbc.setState(0x440a, 0xb616, 0x2c50, 0x3804, 0x5bd4, 0x51a5, 0x1, 0x1);
        gbc.writeMem(0x440a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xb616);
        EXPECT(gbc.pc(), 0x440c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0234
        gbc.setState(0xca7a, 0xe2b4, 0xf210, 0x6868, 0x45b8, 0xb9fd, 0x0, 0x1);
        gbc.writeMem(0xca7a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe2b4);
        EXPECT(gbc.pc(), 0xca7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca7a), 0xcb);
        EXPECT(gbc.readMem(0xca7b), 0xe3);
        // CB E3 0235
        gbc.setState(0xda6a, 0xf412, 0x9c60, 0x8b84, 0xf08b, 0x6f18, 0x0, 0x1);
        gbc.writeMem(0xda6a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf412);
        EXPECT(gbc.pc(), 0xda6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda6a), 0xcb);
        EXPECT(gbc.readMem(0xda6b), 0xe3);
        // CB E3 0236
        gbc.setState(0xdd3e, 0x5e8c, 0xf4b0, 0x50ef, 0x45ba, 0xdc2f, 0x0, 0x0);
        gbc.writeMem(0xdd3e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5e8c);
        EXPECT(gbc.pc(), 0xdd40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd3e), 0xcb);
        EXPECT(gbc.readMem(0xdd3f), 0xe3);
        // CB E3 0237
        gbc.setState(0xdc6e, 0x6c56, 0xc6e0, 0xece3, 0x9c38, 0x3a06, 0x0, 0x0);
        gbc.writeMem(0xdc6e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x6c56);
        EXPECT(gbc.pc(), 0xdc70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc6e), 0xcb);
        EXPECT(gbc.readMem(0xdc6f), 0xe3);
        // CB E3 0238
        gbc.setState(0xc0ad, 0x4a44, 0xd270, 0x333e, 0xcd13, 0x85db, 0x0, 0x0);
        gbc.writeMem(0xc0ad, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4a44);
        EXPECT(gbc.pc(), 0xc0af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0ad), 0xcb);
        EXPECT(gbc.readMem(0xc0ae), 0xe3);
        // CB E3 0239
        gbc.setState(0x4861, 0x4280, 0xcd60, 0x5ca9, 0xd8e5, 0x7f37, 0x1, 0x0);
        gbc.writeMem(0x4861, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4280);
        EXPECT(gbc.pc(), 0x4863);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 023A
        gbc.setState(0x5f20, 0xc022, 0xd680, 0xa524, 0x5351, 0xf8cd, 0x0, 0x1);
        gbc.writeMem(0x5f20, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc022);
        EXPECT(gbc.pc(), 0x5f22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 023C
        gbc.setState(0x3c7e, 0x4761, 0xffe0, 0xf08d, 0x9780, 0xa7df, 0x1, 0x0);
        gbc.writeMem(0x3c7e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x4761);
        EXPECT(gbc.pc(), 0x3c80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 023D
        gbc.setState(0x1540, 0x8453, 0xa000, 0xbbb7, 0x5db4, 0xb46d, 0x1, 0x0);
        gbc.writeMem(0x1540, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8453);
        EXPECT(gbc.pc(), 0x1542);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 023E
        gbc.setState(0x47af, 0xe874, 0xfc70, 0x64b1, 0xc9c5, 0xf55e, 0x1, 0x0);
        gbc.writeMem(0x47af, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe874);
        EXPECT(gbc.pc(), 0x47b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 023F
        gbc.setState(0x742e, 0xb54, 0xccd0, 0xe3df, 0x8a67, 0xf4, 0x0, 0x0);
        gbc.writeMem(0x742e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xb54);
        EXPECT(gbc.pc(), 0x7430);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0240
        gbc.setState(0xd267, 0x69b0, 0x52d0, 0x15ee, 0x1a33, 0x4af9, 0x0, 0x0);
        gbc.writeMem(0xd267, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x69b0);
        EXPECT(gbc.pc(), 0xd269);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd267), 0xcb);
        EXPECT(gbc.readMem(0xd268), 0xe3);
        // CB E3 0241
        gbc.setState(0x94e7, 0xba93, 0xf2b0, 0xca5b, 0x9cb8, 0xa5e4, 0x0, 0x0);
        gbc.writeMem(0x94e7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xba93);
        EXPECT(gbc.pc(), 0x94e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94e7), 0xcb);
        EXPECT(gbc.readMem(0x94e8), 0xe3);
        // CB E3 0242
        gbc.setState(0x1fdf, 0xf22c, 0x1810, 0xf6d, 0x60c, 0x7ff9, 0x0, 0x0);
        gbc.writeMem(0x1fdf, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf22c);
        EXPECT(gbc.pc(), 0x1fe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0243
        gbc.setState(0xd8b1, 0x5ece, 0xa380, 0x138f, 0xa59b, 0xb1e3, 0x1, 0x0);
        gbc.writeMem(0xd8b1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x5ece);
        EXPECT(gbc.pc(), 0xd8b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8b1), 0xcb);
        EXPECT(gbc.readMem(0xd8b2), 0xe3);
        // CB E3 0244
        gbc.setState(0x641, 0x9e03, 0x43d0, 0x3115, 0x9b6e, 0xd529, 0x1, 0x1);
        gbc.writeMem(0x641, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x9e03);
        EXPECT(gbc.pc(), 0x643);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0245
        gbc.setState(0x98fd, 0x5b43, 0xebd0, 0xfb3c, 0xc141, 0x1352, 0x1, 0x1);
        gbc.writeMem(0x98fd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5b43);
        EXPECT(gbc.pc(), 0x98ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98fd), 0xcb);
        EXPECT(gbc.readMem(0x98fe), 0xe3);
        // CB E3 0246
        gbc.setState(0x587b, 0x343, 0x1e20, 0x8be7, 0x468b, 0xefcb, 0x1, 0x1);
        gbc.writeMem(0x587b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x343);
        EXPECT(gbc.pc(), 0x587d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0247
        gbc.setState(0x99d9, 0xc1e6, 0x790, 0xf438, 0xad2a, 0x74, 0x1, 0x1);
        gbc.writeMem(0x99d9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc1e6);
        EXPECT(gbc.pc(), 0x99db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99d9), 0xcb);
        EXPECT(gbc.readMem(0x99da), 0xe3);
        // CB E3 0249
        gbc.setState(0x1031, 0x5bbb, 0xb840, 0xbee5, 0x2945, 0xf969, 0x1, 0x0);
        gbc.writeMem(0x1031, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x5bbb);
        EXPECT(gbc.pc(), 0x1033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 024A
        gbc.setState(0x8210, 0xd429, 0x4740, 0x5341, 0xc667, 0xfe16, 0x0, 0x1);
        gbc.writeMem(0x8210, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xd429);
        EXPECT(gbc.pc(), 0x8212);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8210), 0xcb);
        EXPECT(gbc.readMem(0x8211), 0xe3);
        // CB E3 024B
        gbc.setState(0x8a93, 0x2806, 0x56a0, 0xee9a, 0xe6, 0xe905, 0x0, 0x0);
        gbc.writeMem(0x8a93, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x2806);
        EXPECT(gbc.pc(), 0x8a95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a93), 0xcb);
        EXPECT(gbc.readMem(0x8a94), 0xe3);
        // CB E3 024C
        gbc.setState(0xaa69, 0x56cb, 0xa4e0, 0xb09, 0xda06, 0x5aa4, 0x1, 0x0);
        gbc.writeMem(0xaa69, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x56cb);
        EXPECT(gbc.pc(), 0xaa6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa69), 0xcb);
        EXPECT(gbc.readMem(0xaa6a), 0xe3);
        // CB E3 024D
        gbc.setState(0xa2e9, 0xef74, 0x5e10, 0x1440, 0x5d3f, 0x8d89, 0x0, 0x1);
        gbc.writeMem(0xa2e9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xef74);
        EXPECT(gbc.pc(), 0xa2eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2e9), 0xcb);
        EXPECT(gbc.readMem(0xa2ea), 0xe3);
        // CB E3 024E
        gbc.setState(0xd3cd, 0xe956, 0x9880, 0xcffe, 0x771a, 0x22c0, 0x0, 0x0);
        gbc.writeMem(0xd3cd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe956);
        EXPECT(gbc.pc(), 0xd3cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3cd), 0xcb);
        EXPECT(gbc.readMem(0xd3ce), 0xe3);
        // CB E3 024F
        gbc.setState(0x4753, 0x68cd, 0xaff0, 0xa018, 0xda75, 0x6a3a, 0x0, 0x0);
        gbc.writeMem(0x4753, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x68cd);
        EXPECT(gbc.pc(), 0x4755);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0251
        gbc.setState(0x7e1e, 0xa9a6, 0xdf50, 0x4c91, 0xb68, 0xe8e6, 0x0, 0x1);
        gbc.writeMem(0x7e1e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa9a6);
        EXPECT(gbc.pc(), 0x7e20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0252
        gbc.setState(0x102f, 0x65a2, 0xdcf0, 0x6f50, 0xf1b7, 0x2de8, 0x1, 0x1);
        gbc.writeMem(0x102f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x65a2);
        EXPECT(gbc.pc(), 0x1031);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0254
        gbc.setState(0x997c, 0x8762, 0x87c0, 0x61dc, 0x45c9, 0x8bec, 0x0, 0x1);
        gbc.writeMem(0x997c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8762);
        EXPECT(gbc.pc(), 0x997e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x997c), 0xcb);
        EXPECT(gbc.readMem(0x997d), 0xe3);
        // CB E3 0255
        gbc.setState(0xc493, 0xe3ee, 0xba10, 0x62c4, 0x704, 0x5401, 0x1, 0x1);
        gbc.writeMem(0xc493, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe3ee);
        EXPECT(gbc.pc(), 0xc495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc493), 0xcb);
        EXPECT(gbc.readMem(0xc494), 0xe3);
        // CB E3 0256
        gbc.setState(0x82e0, 0x7925, 0xde40, 0x5755, 0xc8fd, 0x294d, 0x1, 0x0);
        gbc.writeMem(0x82e0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x7925);
        EXPECT(gbc.pc(), 0x82e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e0), 0xcb);
        EXPECT(gbc.readMem(0x82e1), 0xe3);
        // CB E3 0257
        gbc.setState(0x4fc9, 0x1ed2, 0x2d40, 0x83c8, 0x67c9, 0x2ecd, 0x0, 0x0);
        gbc.writeMem(0x4fc9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x1ed2);
        EXPECT(gbc.pc(), 0x4fcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0258
        gbc.setState(0x2557, 0x9d9e, 0x8da0, 0x7a01, 0x1fb, 0xc11d, 0x1, 0x0);
        gbc.writeMem(0x2557, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9d9e);
        EXPECT(gbc.pc(), 0x2559);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 025A
        gbc.setState(0xa50a, 0x1844, 0xe3e0, 0xaf1b, 0x740a, 0x7576, 0x0, 0x1);
        gbc.writeMem(0xa50a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x1844);
        EXPECT(gbc.pc(), 0xa50c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa50a), 0xcb);
        EXPECT(gbc.readMem(0xa50b), 0xe3);
        // CB E3 025B
        gbc.setState(0x3fa2, 0xb5ca, 0x2c50, 0xe49e, 0x5861, 0x3d9c, 0x1, 0x1);
        gbc.writeMem(0x3fa2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb5ca);
        EXPECT(gbc.pc(), 0x3fa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 025C
        gbc.setState(0xcb17, 0xfd8c, 0x9010, 0xb80b, 0x14a8, 0x4a00, 0x1, 0x1);
        gbc.writeMem(0xcb17, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xfd8c);
        EXPECT(gbc.pc(), 0xcb19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb17), 0xcb);
        EXPECT(gbc.readMem(0xcb18), 0xe3);
        // CB E3 025D
        gbc.setState(0x61af, 0x88ef, 0x8ac0, 0x69bb, 0x78cc, 0x539b, 0x0, 0x1);
        gbc.writeMem(0x61af, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x88ef);
        EXPECT(gbc.pc(), 0x61b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 025E
        gbc.setState(0x82af, 0x9d9e, 0x4b00, 0x3c7, 0x46ed, 0xf3ca, 0x1, 0x1);
        gbc.writeMem(0x82af, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9d9e);
        EXPECT(gbc.pc(), 0x82b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82af), 0xcb);
        EXPECT(gbc.readMem(0x82b0), 0xe3);
        // CB E3 0261
        gbc.setState(0x64e6, 0x8880, 0x790, 0x9fe7, 0x58c7, 0xf1df, 0x0, 0x0);
        gbc.writeMem(0x64e6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x8880);
        EXPECT(gbc.pc(), 0x64e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0262
        gbc.setState(0x7b24, 0x8018, 0xa0b0, 0x84eb, 0xe74d, 0xeb41, 0x0, 0x0);
        gbc.writeMem(0x7b24, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8018);
        EXPECT(gbc.pc(), 0x7b26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0263
        gbc.setState(0xa0f7, 0x6050, 0xee00, 0xe924, 0xd32a, 0x8956, 0x1, 0x0);
        gbc.writeMem(0xa0f7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x6050);
        EXPECT(gbc.pc(), 0xa0f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0f7), 0xcb);
        EXPECT(gbc.readMem(0xa0f8), 0xe3);
        // CB E3 0264
        gbc.setState(0x33e8, 0x530a, 0x6040, 0xd309, 0x34b6, 0x3b03, 0x1, 0x1);
        gbc.writeMem(0x33e8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x530a);
        EXPECT(gbc.pc(), 0x33ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0265
        gbc.setState(0xef37, 0xb655, 0xeea0, 0x2beb, 0x5fb3, 0x8778, 0x1, 0x0);
        gbc.writeMem(0xef37, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xb655);
        EXPECT(gbc.pc(), 0xef39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef37), 0xcb);
        EXPECT(gbc.readMem(0xef38), 0xe3);
        // CB E3 0266
        gbc.setState(0xe243, 0xe7a2, 0x2980, 0x2e46, 0x9a01, 0xefb, 0x1, 0x1);
        gbc.writeMem(0xe243, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe7a2);
        EXPECT(gbc.pc(), 0xe245);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe243), 0xcb);
        EXPECT(gbc.readMem(0xe244), 0xe3);
        // CB E3 0267
        gbc.setState(0x68f7, 0x57cf, 0xf7f0, 0xd5d5, 0x2231, 0x3c9f, 0x1, 0x0);
        gbc.writeMem(0x68f7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x57cf);
        EXPECT(gbc.pc(), 0x68f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0268
        gbc.setState(0xd9a2, 0xcae1, 0x1030, 0x65d7, 0xa548, 0x261b, 0x1, 0x0);
        gbc.writeMem(0xd9a2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xcae1);
        EXPECT(gbc.pc(), 0xd9a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9a2), 0xcb);
        EXPECT(gbc.readMem(0xd9a3), 0xe3);
        // CB E3 0269
        gbc.setState(0x489a, 0x53ef, 0x76e0, 0xf0e5, 0xea26, 0xbb63, 0x1, 0x1);
        gbc.writeMem(0x489a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x53ef);
        EXPECT(gbc.pc(), 0x489c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 026A
        gbc.setState(0x949e, 0xc2cc, 0x6820, 0x215b, 0xaafd, 0xdfb9, 0x0, 0x0);
        gbc.writeMem(0x949e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xc2cc);
        EXPECT(gbc.pc(), 0x94a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x949e), 0xcb);
        EXPECT(gbc.readMem(0x949f), 0xe3);
        // CB E3 026B
        gbc.setState(0x3a5c, 0xc2ad, 0x1f30, 0xaeff, 0xa436, 0x31c0, 0x0, 0x1);
        gbc.writeMem(0x3a5c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc2ad);
        EXPECT(gbc.pc(), 0x3a5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 026C
        gbc.setState(0xe1cc, 0x7606, 0x850, 0x5161, 0x7c89, 0x19d2, 0x0, 0x1);
        gbc.writeMem(0xe1cc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7606);
        EXPECT(gbc.pc(), 0xe1ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1cc), 0xcb);
        EXPECT(gbc.readMem(0xe1cd), 0xe3);
        // CB E3 026D
        gbc.setState(0x1dde, 0x3743, 0x770, 0x6152, 0xa7fd, 0x625, 0x0, 0x1);
        gbc.writeMem(0x1dde, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x3743);
        EXPECT(gbc.pc(), 0x1de0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 026E
        gbc.setState(0xa1bd, 0x110f, 0x2290, 0x22e3, 0x6a62, 0xbd00, 0x0, 0x1);
        gbc.writeMem(0xa1bd, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x110f);
        EXPECT(gbc.pc(), 0xa1bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1bd), 0xcb);
        EXPECT(gbc.readMem(0xa1be), 0xe3);
        // CB E3 026F
        gbc.setState(0x9549, 0x1c61, 0xe9a0, 0x6d9a, 0x9435, 0xc15a, 0x0, 0x1);
        gbc.writeMem(0x9549, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1c61);
        EXPECT(gbc.pc(), 0x954b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9549), 0xcb);
        EXPECT(gbc.readMem(0x954a), 0xe3);
        // CB E3 0270
        gbc.setState(0x964b, 0x1ec8, 0xaa10, 0x1654, 0x8ee7, 0x3464, 0x1, 0x0);
        gbc.writeMem(0x964b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x1ec8);
        EXPECT(gbc.pc(), 0x964d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x964b), 0xcb);
        EXPECT(gbc.readMem(0x964c), 0xe3);
        // CB E3 0271
        gbc.setState(0x7f74, 0x9ac4, 0x3860, 0x50f4, 0x4ebc, 0x4200, 0x0, 0x0);
        gbc.writeMem(0x7f74, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x9ac4);
        EXPECT(gbc.pc(), 0x7f76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0272
        gbc.setState(0x6139, 0xe11b, 0x8830, 0x59a2, 0x93a1, 0x5138, 0x1, 0x0);
        gbc.writeMem(0x6139, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xe11b);
        EXPECT(gbc.pc(), 0x613b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0273
        gbc.setState(0xe68f, 0x9899, 0xfa50, 0xe63, 0x570f, 0x9774, 0x0, 0x0);
        gbc.writeMem(0xe68f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9899);
        EXPECT(gbc.pc(), 0xe691);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe68f), 0xcb);
        EXPECT(gbc.readMem(0xe690), 0xe3);
        // CB E3 0274
        gbc.setState(0x4dfb, 0xc445, 0xb5b0, 0xafc4, 0x7eb3, 0x52bd, 0x0, 0x0);
        gbc.writeMem(0x4dfb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc445);
        EXPECT(gbc.pc(), 0x4dfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0275
        gbc.setState(0x8d6d, 0x9f2, 0xf640, 0xa725, 0x3478, 0xf5fb, 0x0, 0x1);
        gbc.writeMem(0x8d6d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9f2);
        EXPECT(gbc.pc(), 0x8d6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d6d), 0xcb);
        EXPECT(gbc.readMem(0x8d6e), 0xe3);
        // CB E3 0276
        gbc.setState(0xac44, 0x8e2d, 0xa430, 0x3bcc, 0x63b8, 0x7e49, 0x0, 0x0);
        gbc.writeMem(0xac44, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x8e2d);
        EXPECT(gbc.pc(), 0xac46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac44), 0xcb);
        EXPECT(gbc.readMem(0xac45), 0xe3);
        // CB E3 0277
        gbc.setState(0x3b11, 0xd80, 0xbef0, 0xcdfa, 0x961d, 0x3e3d, 0x0, 0x1);
        gbc.writeMem(0x3b11, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xd80);
        EXPECT(gbc.pc(), 0x3b13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0278
        gbc.setState(0xa3f9, 0xbfff, 0xea40, 0x57e2, 0x7782, 0x3c01, 0x1, 0x1);
        gbc.writeMem(0xa3f9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xbfff);
        EXPECT(gbc.pc(), 0xa3fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3f9), 0xcb);
        EXPECT(gbc.readMem(0xa3fa), 0xe3);
        // CB E3 0279
        gbc.setState(0x800d, 0x4903, 0x52b0, 0xc590, 0xad7b, 0xea01, 0x1, 0x0);
        gbc.writeMem(0x800d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4903);
        EXPECT(gbc.pc(), 0x800f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x800d), 0xcb);
        EXPECT(gbc.readMem(0x800e), 0xe3);
        // CB E3 027A
        gbc.setState(0xbaef, 0x97ee, 0x4f50, 0x19a2, 0xf6d7, 0x98a0, 0x1, 0x0);
        gbc.writeMem(0xbaef, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x97ee);
        EXPECT(gbc.pc(), 0xbaf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaef), 0xcb);
        EXPECT(gbc.readMem(0xbaf0), 0xe3);
        // CB E3 027B
        gbc.setState(0x9765, 0x4154, 0x1d50, 0x90ea, 0x5376, 0xa49a, 0x1, 0x0);
        gbc.writeMem(0x9765, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x4154);
        EXPECT(gbc.pc(), 0x9767);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9765), 0xcb);
        EXPECT(gbc.readMem(0x9766), 0xe3);
        // CB E3 027E
        gbc.setState(0xca21, 0xea3b, 0x39f0, 0xf7d1, 0xfe35, 0x41e2, 0x1, 0x0);
        gbc.writeMem(0xca21, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xea3b);
        EXPECT(gbc.pc(), 0xca23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca21), 0xcb);
        EXPECT(gbc.readMem(0xca22), 0xe3);
        // CB E3 027F
        gbc.setState(0x7b5, 0x5173, 0xae30, 0xb67d, 0x270f, 0xdfa, 0x0, 0x1);
        gbc.writeMem(0x7b5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x5173);
        EXPECT(gbc.pc(), 0x7b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0280
        gbc.setState(0x36c7, 0x555c, 0xa00, 0x723e, 0x8567, 0x78fb, 0x1, 0x1);
        gbc.writeMem(0x36c7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x555c);
        EXPECT(gbc.pc(), 0x36c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0281
        gbc.setState(0xd77c, 0x5d86, 0xe2b0, 0x74bb, 0x4d10, 0x67fd, 0x0, 0x0);
        gbc.writeMem(0xd77c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x5d86);
        EXPECT(gbc.pc(), 0xd77e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd77c), 0xcb);
        EXPECT(gbc.readMem(0xd77d), 0xe3);
        // CB E3 0282
        gbc.setState(0x5656, 0x6965, 0x2d00, 0x89c1, 0xc348, 0x36f4, 0x0, 0x0);
        gbc.writeMem(0x5656, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x6965);
        EXPECT(gbc.pc(), 0x5658);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0283
        gbc.setState(0x1a8b, 0xf73e, 0xd220, 0xd620, 0x4fbb, 0x80e3, 0x0, 0x0);
        gbc.writeMem(0x1a8b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xf73e);
        EXPECT(gbc.pc(), 0x1a8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0284
        gbc.setState(0x26d3, 0x6628, 0xbd0, 0x8652, 0x1d0, 0xda83, 0x0, 0x1);
        gbc.writeMem(0x26d3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6628);
        EXPECT(gbc.pc(), 0x26d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0285
        gbc.setState(0x3afc, 0x2fa0, 0x2600, 0xedb0, 0xe65f, 0x2d6, 0x1, 0x1);
        gbc.writeMem(0x3afc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x2fa0);
        EXPECT(gbc.pc(), 0x3afe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0286
        gbc.setState(0x479f, 0xb828, 0xe4d0, 0x85a9, 0x36f4, 0xbd0, 0x0, 0x0);
        gbc.writeMem(0x479f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xb828);
        EXPECT(gbc.pc(), 0x47a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0287
        gbc.setState(0xe426, 0x8542, 0xff80, 0x1e0e, 0xc7c0, 0x46ff, 0x1, 0x1);
        gbc.writeMem(0xe426, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8542);
        EXPECT(gbc.pc(), 0xe428);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe426), 0xcb);
        EXPECT(gbc.readMem(0xe427), 0xe3);
        // CB E3 0288
        gbc.setState(0x9acb, 0xa42f, 0x1fd0, 0xa52b, 0x8d86, 0x797c, 0x0, 0x1);
        gbc.writeMem(0x9acb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa42f);
        EXPECT(gbc.pc(), 0x9acd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9acb), 0xcb);
        EXPECT(gbc.readMem(0x9acc), 0xe3);
        // CB E3 0289
        gbc.setState(0xaf23, 0x16e4, 0x200, 0x3d8e, 0xe5df, 0x6c24, 0x0, 0x1);
        gbc.writeMem(0xaf23, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x16e4);
        EXPECT(gbc.pc(), 0xaf25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf23), 0xcb);
        EXPECT(gbc.readMem(0xaf24), 0xe3);
        // CB E3 028A
        gbc.setState(0xa7f9, 0xc53d, 0x8ae0, 0x77c, 0x5abc, 0x8087, 0x1, 0x0);
        gbc.writeMem(0xa7f9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xc53d);
        EXPECT(gbc.pc(), 0xa7fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7f9), 0xcb);
        EXPECT(gbc.readMem(0xa7fa), 0xe3);
        // CB E3 028B
        gbc.setState(0x595d, 0x7e34, 0x4890, 0x3280, 0x35eb, 0xc537, 0x1, 0x1);
        gbc.writeMem(0x595d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7e34);
        EXPECT(gbc.pc(), 0x595f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 028C
        gbc.setState(0x1b8b, 0x5781, 0xcaa0, 0x1349, 0xb96c, 0xcea8, 0x1, 0x0);
        gbc.writeMem(0x1b8b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5781);
        EXPECT(gbc.pc(), 0x1b8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 028D
        gbc.setState(0x49db, 0x1f35, 0x1ec0, 0x96a3, 0xb4d5, 0x93d2, 0x0, 0x0);
        gbc.writeMem(0x49db, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x1f35);
        EXPECT(gbc.pc(), 0x49dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 028E
        gbc.setState(0xb5fc, 0x7c91, 0xd0a0, 0x1d69, 0x4d20, 0xa5af, 0x1, 0x0);
        gbc.writeMem(0xb5fc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7c91);
        EXPECT(gbc.pc(), 0xb5fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5fc), 0xcb);
        EXPECT(gbc.readMem(0xb5fd), 0xe3);
        // CB E3 028F
        gbc.setState(0xaeba, 0xeaa1, 0xbf50, 0xf63b, 0x836d, 0x6a0d, 0x1, 0x1);
        gbc.writeMem(0xaeba, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xeaa1);
        EXPECT(gbc.pc(), 0xaebc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeba), 0xcb);
        EXPECT(gbc.readMem(0xaebb), 0xe3);
        // CB E3 0290
        gbc.setState(0xba05, 0xb043, 0x68c0, 0xadb3, 0x915d, 0xb2ce, 0x0, 0x0);
        gbc.writeMem(0xba05, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb043);
        EXPECT(gbc.pc(), 0xba07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba05), 0xcb);
        EXPECT(gbc.readMem(0xba06), 0xe3);
        // CB E3 0291
        gbc.setState(0x1fab, 0x3ddb, 0x77b0, 0x9580, 0xaf88, 0xde92, 0x1, 0x0);
        gbc.writeMem(0x1fab, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x3ddb);
        EXPECT(gbc.pc(), 0x1fad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0292
        gbc.setState(0x9dcb, 0x26ed, 0xaac0, 0x54a, 0xbb6d, 0xe8f5, 0x1, 0x0);
        gbc.writeMem(0x9dcb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x26ed);
        EXPECT(gbc.pc(), 0x9dcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dcb), 0xcb);
        EXPECT(gbc.readMem(0x9dcc), 0xe3);
        // CB E3 0293
        gbc.setState(0x7c3b, 0x99d8, 0x7470, 0xd46a, 0x6b3e, 0x9add, 0x0, 0x1);
        gbc.writeMem(0x7c3b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x99d8);
        EXPECT(gbc.pc(), 0x7c3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0294
        gbc.setState(0xaef3, 0x8fc8, 0x2c10, 0xf31b, 0xd134, 0xac1f, 0x0, 0x1);
        gbc.writeMem(0xaef3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8fc8);
        EXPECT(gbc.pc(), 0xaef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaef3), 0xcb);
        EXPECT(gbc.readMem(0xaef4), 0xe3);
        // CB E3 0295
        gbc.setState(0x5456, 0x5d92, 0x14c0, 0xb17b, 0x28cd, 0x1308, 0x0, 0x1);
        gbc.writeMem(0x5456, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x5d92);
        EXPECT(gbc.pc(), 0x5458);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0296
        gbc.setState(0xc8c, 0x234b, 0xed80, 0x5f1c, 0x3e60, 0xd775, 0x0, 0x1);
        gbc.writeMem(0xc8c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x234b);
        EXPECT(gbc.pc(), 0xc8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0297
        gbc.setState(0x6aff, 0x38d7, 0xdca0, 0x34a2, 0xddea, 0xbec2, 0x1, 0x1);
        gbc.writeMem(0x6aff, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x38d7);
        EXPECT(gbc.pc(), 0x6b01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0299
        gbc.setState(0x3cd2, 0x9ea9, 0x2be0, 0x89b4, 0xb60f, 0xbda9, 0x0, 0x1);
        gbc.writeMem(0x3cd2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x9ea9);
        EXPECT(gbc.pc(), 0x3cd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 029A
        gbc.setState(0x951a, 0x162, 0xd9a0, 0x8e32, 0xdbaa, 0x974c, 0x1, 0x0);
        gbc.writeMem(0x951a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x162);
        EXPECT(gbc.pc(), 0x951c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x951a), 0xcb);
        EXPECT(gbc.readMem(0x951b), 0xe3);
        // CB E3 029B
        gbc.setState(0x3760, 0xdc4c, 0x23c0, 0x4dd9, 0x8f04, 0x689a, 0x1, 0x1);
        gbc.writeMem(0x3760, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xdc4c);
        EXPECT(gbc.pc(), 0x3762);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 029C
        gbc.setState(0xab79, 0xe0ea, 0xf340, 0xf822, 0x8b87, 0x6b01, 0x0, 0x1);
        gbc.writeMem(0xab79, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe0ea);
        EXPECT(gbc.pc(), 0xab7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab79), 0xcb);
        EXPECT(gbc.readMem(0xab7a), 0xe3);
        // CB E3 029D
        gbc.setState(0xe0ce, 0x8db5, 0x5b90, 0xc0b4, 0x653e, 0x453e, 0x1, 0x0);
        gbc.writeMem(0xe0ce, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8db5);
        EXPECT(gbc.pc(), 0xe0d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0ce), 0xcb);
        EXPECT(gbc.readMem(0xe0cf), 0xe3);
        // CB E3 029E
        gbc.setState(0x6dfe, 0x9cb, 0xb9c0, 0xb43b, 0xbba8, 0x55d1, 0x1, 0x0);
        gbc.writeMem(0x6dfe, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x9cb);
        EXPECT(gbc.pc(), 0x6e00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 029F
        gbc.setState(0x5385, 0x6424, 0x59a0, 0xc0b2, 0x10, 0x4f0, 0x0, 0x1);
        gbc.writeMem(0x5385, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6424);
        EXPECT(gbc.pc(), 0x5387);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02A0
        gbc.setState(0xef90, 0x91d6, 0xa4c0, 0xc4e9, 0x4c7f, 0x147f, 0x0, 0x1);
        gbc.writeMem(0xef90, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x91d6);
        EXPECT(gbc.pc(), 0xef92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef90), 0xcb);
        EXPECT(gbc.readMem(0xef91), 0xe3);
        // CB E3 02A1
        gbc.setState(0xe74f, 0xf5fa, 0x6100, 0xced7, 0xeb10, 0xdadb, 0x0, 0x0);
        gbc.writeMem(0xe74f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf5fa);
        EXPECT(gbc.pc(), 0xe751);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe74f), 0xcb);
        EXPECT(gbc.readMem(0xe750), 0xe3);
        // CB E3 02A2
        gbc.setState(0x29b4, 0xe26e, 0x2af0, 0x74e1, 0x9dcc, 0xcbbc, 0x1, 0x1);
        gbc.writeMem(0x29b4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe26e);
        EXPECT(gbc.pc(), 0x29b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 02A3
        gbc.setState(0x7461, 0xc12d, 0xae20, 0x7b09, 0x8b04, 0x635c, 0x1, 0x1);
        gbc.writeMem(0x7461, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xc12d);
        EXPECT(gbc.pc(), 0x7463);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02A4
        gbc.setState(0x9517, 0x8379, 0x1c0, 0x9325, 0xbc20, 0x1778, 0x0, 0x0);
        gbc.writeMem(0x9517, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8379);
        EXPECT(gbc.pc(), 0x9519);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9517), 0xcb);
        EXPECT(gbc.readMem(0x9518), 0xe3);
        // CB E3 02A5
        gbc.setState(0x870c, 0x2f03, 0x5df0, 0x9d82, 0x33b9, 0xb996, 0x1, 0x1);
        gbc.writeMem(0x870c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2f03);
        EXPECT(gbc.pc(), 0x870e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x870c), 0xcb);
        EXPECT(gbc.readMem(0x870d), 0xe3);
        // CB E3 02A6
        gbc.setState(0xb29f, 0x90e8, 0xe0c0, 0xb33, 0xac32, 0xa4b0, 0x1, 0x0);
        gbc.writeMem(0xb29f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x90e8);
        EXPECT(gbc.pc(), 0xb2a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb29f), 0xcb);
        EXPECT(gbc.readMem(0xb2a0), 0xe3);
        // CB E3 02A7
        gbc.setState(0x5462, 0x85a0, 0xe500, 0x3ef3, 0x4271, 0x9784, 0x0, 0x0);
        gbc.writeMem(0x5462, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x85a0);
        EXPECT(gbc.pc(), 0x5464);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02A8
        gbc.setState(0x7ac7, 0xc21f, 0xf550, 0x842, 0x834a, 0x45f4, 0x0, 0x1);
        gbc.writeMem(0x7ac7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc21f);
        EXPECT(gbc.pc(), 0x7ac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 02A9
        gbc.setState(0x1978, 0x9cb6, 0xfc60, 0xfde7, 0x8890, 0x580b, 0x1, 0x0);
        gbc.writeMem(0x1978, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9cb6);
        EXPECT(gbc.pc(), 0x197a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02AA
        gbc.setState(0xc4ad, 0x12ab, 0x10b0, 0xb8b4, 0xb4ee, 0x3211, 0x1, 0x0);
        gbc.writeMem(0xc4ad, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x12ab);
        EXPECT(gbc.pc(), 0xc4af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4ad), 0xcb);
        EXPECT(gbc.readMem(0xc4ae), 0xe3);
        // CB E3 02AB
        gbc.setState(0xc957, 0x80cb, 0x7720, 0x4710, 0x1e4d, 0xb361, 0x1, 0x0);
        gbc.writeMem(0xc957, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x80cb);
        EXPECT(gbc.pc(), 0xc959);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc957), 0xcb);
        EXPECT(gbc.readMem(0xc958), 0xe3);
        // CB E3 02AC
        gbc.setState(0x8ccc, 0x2677, 0x2630, 0x8807, 0x2aa6, 0x5612, 0x0, 0x1);
        gbc.writeMem(0x8ccc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x2677);
        EXPECT(gbc.pc(), 0x8cce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ccc), 0xcb);
        EXPECT(gbc.readMem(0x8ccd), 0xe3);
        // CB E3 02AD
        gbc.setState(0xa400, 0x1fff, 0x90b0, 0x1b60, 0x229, 0xa7e7, 0x0, 0x1);
        gbc.writeMem(0xa400, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1fff);
        EXPECT(gbc.pc(), 0xa402);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa400), 0xcb);
        EXPECT(gbc.readMem(0xa401), 0xe3);
        // CB E3 02AE
        gbc.setState(0x7e1f, 0x1ec8, 0x6760, 0xf397, 0x74a3, 0xcfe3, 0x0, 0x1);
        gbc.writeMem(0x7e1f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1ec8);
        EXPECT(gbc.pc(), 0x7e21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02AF
        gbc.setState(0xec64, 0xa9f6, 0xdaf0, 0xba00, 0xb56f, 0xb750, 0x1, 0x0);
        gbc.writeMem(0xec64, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa9f6);
        EXPECT(gbc.pc(), 0xec66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec64), 0xcb);
        EXPECT(gbc.readMem(0xec65), 0xe3);
        // CB E3 02B0
        gbc.setState(0xebbb, 0x94d8, 0x8e50, 0x8fd3, 0x7d18, 0x964, 0x1, 0x1);
        gbc.writeMem(0xebbb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x94d8);
        EXPECT(gbc.pc(), 0xebbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebbb), 0xcb);
        EXPECT(gbc.readMem(0xebbc), 0xe3);
        // CB E3 02B1
        gbc.setState(0x3508, 0xbfd5, 0x88e0, 0xc2cb, 0xac36, 0x6e8, 0x1, 0x0);
        gbc.writeMem(0x3508, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xbfd5);
        EXPECT(gbc.pc(), 0x350a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02B2
        gbc.setState(0xcd73, 0x8ee5, 0x3b80, 0x9920, 0xd3a6, 0x84ec, 0x0, 0x1);
        gbc.writeMem(0xcd73, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8ee5);
        EXPECT(gbc.pc(), 0xcd75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd73), 0xcb);
        EXPECT(gbc.readMem(0xcd74), 0xe3);
        // CB E3 02B3
        gbc.setState(0x9339, 0x41ad, 0xe8e0, 0x1314, 0x903e, 0x40ef, 0x0, 0x1);
        gbc.writeMem(0x9339, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x41ad);
        EXPECT(gbc.pc(), 0x933b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9339), 0xcb);
        EXPECT(gbc.readMem(0x933a), 0xe3);
        // CB E3 02B4
        gbc.setState(0xcfd2, 0x52cc, 0xeca0, 0x6d0a, 0x87db, 0x5c2, 0x0, 0x0);
        gbc.writeMem(0xcfd2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x52cc);
        EXPECT(gbc.pc(), 0xcfd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfd2), 0xcb);
        EXPECT(gbc.readMem(0xcfd3), 0xe3);
        // CB E3 02B6
        gbc.setState(0xa140, 0x23dd, 0xbce0, 0x94a, 0x5aa7, 0x4a06, 0x0, 0x1);
        gbc.writeMem(0xa140, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x23dd);
        EXPECT(gbc.pc(), 0xa142);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa140), 0xcb);
        EXPECT(gbc.readMem(0xa141), 0xe3);
        // CB E3 02B7
        gbc.setState(0x7eee, 0x1003, 0x9710, 0x796b, 0x8968, 0x870b, 0x0, 0x0);
        gbc.writeMem(0x7eee, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1003);
        EXPECT(gbc.pc(), 0x7ef0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 02B8
        gbc.setState(0xe390, 0x344b, 0x49f0, 0x8e65, 0x3eaf, 0xec92, 0x0, 0x0);
        gbc.writeMem(0xe390, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x344b);
        EXPECT(gbc.pc(), 0xe392);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe390), 0xcb);
        EXPECT(gbc.readMem(0xe391), 0xe3);
        // CB E3 02B9
        gbc.setState(0xd6de, 0x8361, 0x92c0, 0x5f37, 0x9847, 0x26a8, 0x1, 0x1);
        gbc.writeMem(0xd6de, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x8361);
        EXPECT(gbc.pc(), 0xd6e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6de), 0xcb);
        EXPECT(gbc.readMem(0xd6df), 0xe3);
        // CB E3 02BA
        gbc.setState(0x2a4a, 0xad2a, 0x23a0, 0xf66d, 0x1b73, 0xdae5, 0x0, 0x0);
        gbc.writeMem(0x2a4a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xad2a);
        EXPECT(gbc.pc(), 0x2a4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02BB
        gbc.setState(0x6add, 0x69ac, 0xf190, 0xa0a0, 0x4d72, 0x2ea3, 0x0, 0x1);
        gbc.writeMem(0x6add, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x69ac);
        EXPECT(gbc.pc(), 0x6adf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 02BC
        gbc.setState(0xcef5, 0xc10c, 0x34a0, 0xc267, 0x9fe6, 0x3e84, 0x1, 0x1);
        gbc.writeMem(0xcef5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc10c);
        EXPECT(gbc.pc(), 0xcef7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcef5), 0xcb);
        EXPECT(gbc.readMem(0xcef6), 0xe3);
        // CB E3 02BD
        gbc.setState(0x207a, 0xa704, 0xe3d0, 0x9054, 0xdb85, 0xc6cb, 0x0, 0x0);
        gbc.writeMem(0x207a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa704);
        EXPECT(gbc.pc(), 0x207c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 02BE
        gbc.setState(0x205, 0x7184, 0x50, 0x2034, 0x806a, 0x872, 0x0, 0x0);
        gbc.writeMem(0x205, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x7184);
        EXPECT(gbc.pc(), 0x207);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 02BF
        gbc.setState(0x90a4, 0x2294, 0xb270, 0x4117, 0xdc51, 0xe6f8, 0x1, 0x0);
        gbc.writeMem(0x90a4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2294);
        EXPECT(gbc.pc(), 0x90a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90a4), 0xcb);
        EXPECT(gbc.readMem(0x90a5), 0xe3);
        // CB E3 02C0
        gbc.setState(0x64f6, 0xb77, 0x26f0, 0x87d9, 0x9d1d, 0x79f, 0x1, 0x0);
        gbc.writeMem(0x64f6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb77);
        EXPECT(gbc.pc(), 0x64f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 02C1
        gbc.setState(0x3220, 0xb82e, 0x310, 0xa066, 0x4a17, 0x3bef, 0x1, 0x0);
        gbc.writeMem(0x3220, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xb82e);
        EXPECT(gbc.pc(), 0x3222);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 02C2
        gbc.setState(0xdd55, 0x8af4, 0x3230, 0xf57, 0x4231, 0xb366, 0x1, 0x0);
        gbc.writeMem(0xdd55, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8af4);
        EXPECT(gbc.pc(), 0xdd57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd55), 0xcb);
        EXPECT(gbc.readMem(0xdd56), 0xe3);
        // CB E3 02C3
        gbc.setState(0xa255, 0x2252, 0x4480, 0x2d21, 0x397f, 0xb4a5, 0x1, 0x0);
        gbc.writeMem(0xa255, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2252);
        EXPECT(gbc.pc(), 0xa257);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa255), 0xcb);
        EXPECT(gbc.readMem(0xa256), 0xe3);
        // CB E3 02C4
        gbc.setState(0x6d1e, 0x1852, 0x24c0, 0x7305, 0xbd6, 0x986, 0x0, 0x1);
        gbc.writeMem(0x6d1e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1852);
        EXPECT(gbc.pc(), 0x6d20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02C5
        gbc.setState(0xe015, 0x9034, 0x1910, 0xe033, 0xdfbf, 0x8e43, 0x0, 0x0);
        gbc.writeMem(0xe015, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x9034);
        EXPECT(gbc.pc(), 0xe017);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe015), 0xcb);
        EXPECT(gbc.readMem(0xe016), 0xe3);
        // CB E3 02C6
        gbc.setState(0x2554, 0x4db2, 0x3fb0, 0x838a, 0x6061, 0xec06, 0x0, 0x1);
        gbc.writeMem(0x2554, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x4db2);
        EXPECT(gbc.pc(), 0x2556);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 02C7
        gbc.setState(0xdf87, 0xf28a, 0x1f0, 0x3874, 0xba71, 0x6a1b, 0x1, 0x1);
        gbc.writeMem(0xdf87, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf28a);
        EXPECT(gbc.pc(), 0xdf89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf87), 0xcb);
        EXPECT(gbc.readMem(0xdf88), 0xe3);
        // CB E3 02C8
        gbc.setState(0x7942, 0x32b3, 0xc140, 0xccb6, 0x1f40, 0x8459, 0x1, 0x0);
        gbc.writeMem(0x7942, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x32b3);
        EXPECT(gbc.pc(), 0x7944);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02C9
        gbc.setState(0x241, 0xfe81, 0x5ed0, 0x4a31, 0x3cae, 0xe9eb, 0x1, 0x1);
        gbc.writeMem(0x241, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xfe81);
        EXPECT(gbc.pc(), 0x243);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 02CA
        gbc.setState(0xbe8b, 0xe567, 0x6ae0, 0xedb0, 0xb759, 0x3f23, 0x0, 0x1);
        gbc.writeMem(0xbe8b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xe567);
        EXPECT(gbc.pc(), 0xbe8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe8b), 0xcb);
        EXPECT(gbc.readMem(0xbe8c), 0xe3);
        // CB E3 02CB
        gbc.setState(0x763a, 0x9f74, 0x2b70, 0xe665, 0xf376, 0x3f8f, 0x1, 0x0);
        gbc.writeMem(0x763a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x9f74);
        EXPECT(gbc.pc(), 0x763c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 02CC
        gbc.setState(0xc14c, 0x2ba9, 0xc9f0, 0xe61e, 0x3dac, 0x96df, 0x0, 0x0);
        gbc.writeMem(0xc14c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x2ba9);
        EXPECT(gbc.pc(), 0xc14e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc14c), 0xcb);
        EXPECT(gbc.readMem(0xc14d), 0xe3);
        // CB E3 02CD
        gbc.setState(0x3060, 0x53fe, 0xba30, 0xf9d, 0xa98f, 0x14e, 0x0, 0x0);
        gbc.writeMem(0x3060, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x53fe);
        EXPECT(gbc.pc(), 0x3062);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 02CE
        gbc.setState(0x927, 0xa68c, 0x4340, 0x4ae1, 0xddc9, 0x77bf, 0x1, 0x1);
        gbc.writeMem(0x927, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa68c);
        EXPECT(gbc.pc(), 0x929);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02CF
        gbc.setState(0xdce9, 0x81a6, 0x8530, 0x978c, 0xb853, 0xc0a3, 0x0, 0x0);
        gbc.writeMem(0xdce9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x81a6);
        EXPECT(gbc.pc(), 0xdceb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdce9), 0xcb);
        EXPECT(gbc.readMem(0xdcea), 0xe3);
        // CB E3 02D0
        gbc.setState(0x6425, 0xf878, 0x5700, 0x8158, 0x7505, 0xd3a0, 0x1, 0x0);
        gbc.writeMem(0x6425, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xf878);
        EXPECT(gbc.pc(), 0x6427);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02D1
        gbc.setState(0x7398, 0x8157, 0xc280, 0xd16e, 0x9a56, 0x3f24, 0x1, 0x1);
        gbc.writeMem(0x7398, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8157);
        EXPECT(gbc.pc(), 0x739a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02D2
        gbc.setState(0xee15, 0xb31c, 0x5380, 0x3462, 0xbed0, 0xa4ec, 0x0, 0x1);
        gbc.writeMem(0xee15, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb31c);
        EXPECT(gbc.pc(), 0xee17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee15), 0xcb);
        EXPECT(gbc.readMem(0xee16), 0xe3);
        // CB E3 02D3
        gbc.setState(0xce25, 0xb550, 0x7a70, 0x3395, 0x912a, 0xb116, 0x1, 0x0);
        gbc.writeMem(0xce25, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb550);
        EXPECT(gbc.pc(), 0xce27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce25), 0xcb);
        EXPECT(gbc.readMem(0xce26), 0xe3);
        // CB E3 02D4
        gbc.setState(0x166b, 0x852, 0xbb60, 0xb1ca, 0x9715, 0xb6a, 0x0, 0x0);
        gbc.writeMem(0x166b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x852);
        EXPECT(gbc.pc(), 0x166d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02D5
        gbc.setState(0x8afc, 0xea88, 0xb430, 0x95c8, 0x2fca, 0xedee, 0x1, 0x1);
        gbc.writeMem(0x8afc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xea88);
        EXPECT(gbc.pc(), 0x8afe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8afc), 0xcb);
        EXPECT(gbc.readMem(0x8afd), 0xe3);
        // CB E3 02D6
        gbc.setState(0x8e64, 0x4332, 0x4f00, 0xc27, 0x6359, 0x1748, 0x1, 0x1);
        gbc.writeMem(0x8e64, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x4332);
        EXPECT(gbc.pc(), 0x8e66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e64), 0xcb);
        EXPECT(gbc.readMem(0x8e65), 0xe3);
        // CB E3 02D7
        gbc.setState(0x4eb0, 0x138b, 0xf440, 0x8bfb, 0x15c7, 0xd54d, 0x0, 0x1);
        gbc.writeMem(0x4eb0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x138b);
        EXPECT(gbc.pc(), 0x4eb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02D8
        gbc.setState(0x6bb0, 0xf1a5, 0x2460, 0xda8b, 0x59b9, 0x3424, 0x1, 0x1);
        gbc.writeMem(0x6bb0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xf1a5);
        EXPECT(gbc.pc(), 0x6bb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02D9
        gbc.setState(0x9ece, 0x3907, 0xb9d0, 0xb7a7, 0xb224, 0xca5f, 0x1, 0x1);
        gbc.writeMem(0x9ece, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3907);
        EXPECT(gbc.pc(), 0x9ed0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ece), 0xcb);
        EXPECT(gbc.readMem(0x9ecf), 0xe3);
        // CB E3 02DA
        gbc.setState(0x6683, 0xc014, 0x9800, 0x2a5b, 0xf54d, 0xd147, 0x0, 0x1);
        gbc.writeMem(0x6683, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc014);
        EXPECT(gbc.pc(), 0x6685);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02DB
        gbc.setState(0xd76a, 0x4b03, 0x5410, 0xa85d, 0xc721, 0xfce9, 0x0, 0x1);
        gbc.writeMem(0xd76a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4b03);
        EXPECT(gbc.pc(), 0xd76c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd76a), 0xcb);
        EXPECT(gbc.readMem(0xd76b), 0xe3);
        // CB E3 02DC
        gbc.setState(0x3914, 0x7968, 0xee50, 0x948a, 0x61c0, 0xc04e, 0x0, 0x1);
        gbc.writeMem(0x3914, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x7968);
        EXPECT(gbc.pc(), 0x3916);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 02DD
        gbc.setState(0x2b5, 0xd638, 0x9440, 0x3fb7, 0x91c9, 0x3154, 0x1, 0x0);
        gbc.writeMem(0x2b5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd638);
        EXPECT(gbc.pc(), 0x2b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02DE
        gbc.setState(0xa42e, 0x3133, 0xe910, 0xcb21, 0x9b08, 0x4ede, 0x1, 0x0);
        gbc.writeMem(0xa42e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3133);
        EXPECT(gbc.pc(), 0xa430);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa42e), 0xcb);
        EXPECT(gbc.readMem(0xa42f), 0xe3);
        // CB E3 02DF
        gbc.setState(0xc694, 0xd8f3, 0x53e0, 0xbe07, 0x9307, 0x8190, 0x0, 0x1);
        gbc.writeMem(0xc694, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xd8f3);
        EXPECT(gbc.pc(), 0xc696);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc694), 0xcb);
        EXPECT(gbc.readMem(0xc695), 0xe3);
        // CB E3 02E0
        gbc.setState(0x3c0e, 0x28ac, 0xfed0, 0x37f8, 0x9913, 0x651a, 0x0, 0x0);
        gbc.writeMem(0x3c0e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x28ac);
        EXPECT(gbc.pc(), 0x3c10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 02E1
        gbc.setState(0x2789, 0xf3d1, 0x2d40, 0xedfe, 0x3dde, 0xa64f, 0x0, 0x0);
        gbc.writeMem(0x2789, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf3d1);
        EXPECT(gbc.pc(), 0x278b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02E2
        gbc.setState(0x65a5, 0x37fa, 0x8240, 0x55b6, 0x4798, 0x9578, 0x1, 0x1);
        gbc.writeMem(0x65a5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x37fa);
        EXPECT(gbc.pc(), 0x65a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02E4
        gbc.setState(0x2b4, 0xd18c, 0x5460, 0xd074, 0x8b40, 0xa53d, 0x1, 0x1);
        gbc.writeMem(0x2b4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xd18c);
        EXPECT(gbc.pc(), 0x2b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02E5
        gbc.setState(0x9f5e, 0x3ac2, 0x6600, 0xe54a, 0xc4d7, 0x906, 0x1, 0x0);
        gbc.writeMem(0x9f5e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x3ac2);
        EXPECT(gbc.pc(), 0x9f60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f5e), 0xcb);
        EXPECT(gbc.readMem(0x9f5f), 0xe3);
        // CB E3 02E6
        gbc.setState(0x1921, 0x3a5e, 0x1200, 0x2454, 0xbf, 0xe7be, 0x1, 0x1);
        gbc.writeMem(0x1921, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x3a5e);
        EXPECT(gbc.pc(), 0x1923);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02E7
        gbc.setState(0xc4d7, 0x7770, 0x8d90, 0x466f, 0x7bee, 0x13ff, 0x0, 0x1);
        gbc.writeMem(0xc4d7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x7770);
        EXPECT(gbc.pc(), 0xc4d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4d7), 0xcb);
        EXPECT(gbc.readMem(0xc4d8), 0xe3);
        // CB E3 02E8
        gbc.setState(0xeed7, 0x1a0d, 0x6bc0, 0x87ae, 0xd04a, 0xec22, 0x1, 0x0);
        gbc.writeMem(0xeed7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1a0d);
        EXPECT(gbc.pc(), 0xeed9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeed7), 0xcb);
        EXPECT(gbc.readMem(0xeed8), 0xe3);
        // CB E3 02E9
        gbc.setState(0xbd76, 0xdfd5, 0x7910, 0x7bf1, 0xa38b, 0x8f1e, 0x0, 0x0);
        gbc.writeMem(0xbd76, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xdfd5);
        EXPECT(gbc.pc(), 0xbd78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd76), 0xcb);
        EXPECT(gbc.readMem(0xbd77), 0xe3);
        // CB E3 02EA
        gbc.setState(0x55d9, 0x488e, 0x63c0, 0x4e83, 0x14aa, 0xe95b, 0x1, 0x0);
        gbc.writeMem(0x55d9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x488e);
        EXPECT(gbc.pc(), 0x55db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02EB
        gbc.setState(0xb9af, 0xb2d8, 0x5200, 0xf598, 0x1a59, 0x8f23, 0x1, 0x0);
        gbc.writeMem(0xb9af, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb2d8);
        EXPECT(gbc.pc(), 0xb9b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9af), 0xcb);
        EXPECT(gbc.readMem(0xb9b0), 0xe3);
        // CB E3 02EC
        gbc.setState(0xbd3a, 0x1183, 0x3400, 0xa45c, 0xf10e, 0xd041, 0x1, 0x1);
        gbc.writeMem(0xbd3a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x1183);
        EXPECT(gbc.pc(), 0xbd3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd3a), 0xcb);
        EXPECT(gbc.readMem(0xbd3b), 0xe3);
        // CB E3 02ED
        gbc.setState(0xe855, 0x1aa0, 0xa570, 0x47d2, 0x6c3, 0x7e8b, 0x1, 0x0);
        gbc.writeMem(0xe855, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x1aa0);
        EXPECT(gbc.pc(), 0xe857);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe855), 0xcb);
        EXPECT(gbc.readMem(0xe856), 0xe3);
        // CB E3 02EE
        gbc.setState(0x53f0, 0x90b1, 0x70, 0x7669, 0x569e, 0x884a, 0x1, 0x1);
        gbc.writeMem(0x53f0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x90b1);
        EXPECT(gbc.pc(), 0x53f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 02EF
        gbc.setState(0xbc9e, 0x823b, 0xd390, 0x222a, 0x40f8, 0x3872, 0x1, 0x0);
        gbc.writeMem(0xbc9e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x823b);
        EXPECT(gbc.pc(), 0xbca0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc9e), 0xcb);
        EXPECT(gbc.readMem(0xbc9f), 0xe3);
        // CB E3 02F0
        gbc.setState(0x8f10, 0xaa7a, 0x10c0, 0x64df, 0x609f, 0xa071, 0x1, 0x1);
        gbc.writeMem(0x8f10, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xaa7a);
        EXPECT(gbc.pc(), 0x8f12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f10), 0xcb);
        EXPECT(gbc.readMem(0x8f11), 0xe3);
        // CB E3 02F1
        gbc.setState(0x2890, 0x32de, 0xa260, 0x9aaf, 0x1665, 0x3a3a, 0x1, 0x0);
        gbc.writeMem(0x2890, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x32de);
        EXPECT(gbc.pc(), 0x2892);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02F2
        gbc.setState(0xd964, 0x4e33, 0x7d40, 0x5e, 0xf458, 0xefbf, 0x0, 0x0);
        gbc.writeMem(0xd964, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4e33);
        EXPECT(gbc.pc(), 0xd966);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd964), 0xcb);
        EXPECT(gbc.readMem(0xd965), 0xe3);
        // CB E3 02F3
        gbc.setState(0x4b0c, 0xd06a, 0xa6d0, 0xae18, 0x9a85, 0xa6a, 0x1, 0x1);
        gbc.writeMem(0x4b0c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd06a);
        EXPECT(gbc.pc(), 0x4b0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 02F5
        gbc.setState(0xe91f, 0x836b, 0xa770, 0x9946, 0xd2f1, 0x9676, 0x1, 0x0);
        gbc.writeMem(0xe91f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x836b);
        EXPECT(gbc.pc(), 0xe921);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe91f), 0xcb);
        EXPECT(gbc.readMem(0xe920), 0xe3);
        // CB E3 02F6
        gbc.setState(0x2ed8, 0xdfe5, 0x5100, 0x8f30, 0x54d0, 0xbe1b, 0x0, 0x0);
        gbc.writeMem(0x2ed8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xdfe5);
        EXPECT(gbc.pc(), 0x2eda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02F7
        gbc.setState(0xb31e, 0xdcd4, 0xf5f0, 0x42c0, 0x4d6, 0xd2fe, 0x0, 0x0);
        gbc.writeMem(0xb31e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xdcd4);
        EXPECT(gbc.pc(), 0xb320);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb31e), 0xcb);
        EXPECT(gbc.readMem(0xb31f), 0xe3);
        // CB E3 02F8
        gbc.setState(0x58be, 0x985c, 0x4970, 0xfe72, 0xf86a, 0x7e09, 0x0, 0x1);
        gbc.writeMem(0x58be, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x985c);
        EXPECT(gbc.pc(), 0x58c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 02F9
        gbc.setState(0x8639, 0x4248, 0x8660, 0x102c, 0x4e89, 0xa691, 0x1, 0x1);
        gbc.writeMem(0x8639, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x4248);
        EXPECT(gbc.pc(), 0x863b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8639), 0xcb);
        EXPECT(gbc.readMem(0x863a), 0xe3);
        // CB E3 02FA
        gbc.setState(0x69e3, 0x125, 0xb700, 0x2f, 0x71cf, 0x42, 0x1, 0x1);
        gbc.writeMem(0x69e3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x125);
        EXPECT(gbc.pc(), 0x69e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02FB
        gbc.setState(0xdbb5, 0x9c5, 0x7260, 0x267f, 0xaaf2, 0x3fed, 0x1, 0x1);
        gbc.writeMem(0xdbb5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9c5);
        EXPECT(gbc.pc(), 0xdbb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbb5), 0xcb);
        EXPECT(gbc.readMem(0xdbb6), 0xe3);
        // CB E3 02FC
        gbc.setState(0x51fc, 0x83cf, 0x4500, 0x623d, 0x2584, 0x6910, 0x0, 0x1);
        gbc.writeMem(0x51fc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x83cf);
        EXPECT(gbc.pc(), 0x51fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 02FD
        gbc.setState(0x5193, 0xc87c, 0x9eb0, 0xba53, 0xa4fb, 0xd900, 0x0, 0x0);
        gbc.writeMem(0x5193, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc87c);
        EXPECT(gbc.pc(), 0x5195);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 02FE
        gbc.setState(0x41b7, 0x27a1, 0x9df0, 0xf835, 0x82d7, 0x6b55, 0x0, 0x1);
        gbc.writeMem(0x41b7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x27a1);
        EXPECT(gbc.pc(), 0x41b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 02FF
        gbc.setState(0x6211, 0x509e, 0x9080, 0xffe5, 0xe508, 0x41d0, 0x0, 0x0);
        gbc.writeMem(0x6211, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x509e);
        EXPECT(gbc.pc(), 0x6213);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0300
        gbc.setState(0xdb97, 0xeb1, 0x2830, 0x4519, 0xd9a6, 0xf5e6, 0x0, 0x1);
        gbc.writeMem(0xdb97, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xeb1);
        EXPECT(gbc.pc(), 0xdb99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb97), 0xcb);
        EXPECT(gbc.readMem(0xdb98), 0xe3);
        // CB E3 0301
        gbc.setState(0xd0df, 0x5c64, 0xcda0, 0xef6d, 0x8782, 0x49f, 0x1, 0x0);
        gbc.writeMem(0xd0df, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5c64);
        EXPECT(gbc.pc(), 0xd0e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0df), 0xcb);
        EXPECT(gbc.readMem(0xd0e0), 0xe3);
        // CB E3 0302
        gbc.setState(0x422e, 0xea2, 0x7ff0, 0xc514, 0xfa5b, 0xbc1f, 0x0, 0x1);
        gbc.writeMem(0x422e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xea2);
        EXPECT(gbc.pc(), 0x4230);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0303
        gbc.setState(0x5fb5, 0x40ec, 0x2530, 0x8383, 0x90af, 0x7c65, 0x0, 0x0);
        gbc.writeMem(0x5fb5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x40ec);
        EXPECT(gbc.pc(), 0x5fb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0304
        gbc.setState(0xc6ad, 0xd4ec, 0xda80, 0x71b7, 0x5fdf, 0xbdde, 0x1, 0x0);
        gbc.writeMem(0xc6ad, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xd4ec);
        EXPECT(gbc.pc(), 0xc6af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6ad), 0xcb);
        EXPECT(gbc.readMem(0xc6ae), 0xe3);
        // CB E3 0306
        gbc.setState(0x3f14, 0x39bc, 0xcc50, 0xb4a6, 0x3d4a, 0x9989, 0x0, 0x1);
        gbc.writeMem(0x3f14, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x39bc);
        EXPECT(gbc.pc(), 0x3f16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0307
        gbc.setState(0xbf13, 0xdeef, 0x1e00, 0x7e41, 0x5212, 0xdaf7, 0x1, 0x1);
        gbc.writeMem(0xbf13, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xdeef);
        EXPECT(gbc.pc(), 0xbf15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf13), 0xcb);
        EXPECT(gbc.readMem(0xbf14), 0xe3);
        // CB E3 0308
        gbc.setState(0xcf03, 0x143, 0x8a60, 0x7e55, 0x1ddc, 0x8cf7, 0x0, 0x0);
        gbc.writeMem(0xcf03, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x143);
        EXPECT(gbc.pc(), 0xcf05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf03), 0xcb);
        EXPECT(gbc.readMem(0xcf04), 0xe3);
        // CB E3 0309
        gbc.setState(0xef3, 0x473b, 0xaf30, 0xccb3, 0xb5e1, 0xfc7, 0x0, 0x0);
        gbc.writeMem(0xef3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x473b);
        EXPECT(gbc.pc(), 0xef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 030A
        gbc.setState(0xac0c, 0x543b, 0x5090, 0x652d, 0x46d3, 0x429d, 0x0, 0x1);
        gbc.writeMem(0xac0c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x543b);
        EXPECT(gbc.pc(), 0xac0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac0c), 0xcb);
        EXPECT(gbc.readMem(0xac0d), 0xe3);
        // CB E3 030C
        gbc.setState(0x6a97, 0xa91b, 0x9370, 0xb4b0, 0xab35, 0x411c, 0x0, 0x0);
        gbc.writeMem(0x6a97, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xa91b);
        EXPECT(gbc.pc(), 0x6a99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 030D
        gbc.setState(0xd414, 0x5b13, 0x3160, 0x8a23, 0xd8bf, 0x4d4c, 0x1, 0x1);
        gbc.writeMem(0xd414, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x5b13);
        EXPECT(gbc.pc(), 0xd416);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd414), 0xcb);
        EXPECT(gbc.readMem(0xd415), 0xe3);
        // CB E3 030E
        gbc.setState(0x422b, 0x6fba, 0x6da0, 0xda28, 0xd8a8, 0x87fd, 0x0, 0x1);
        gbc.writeMem(0x422b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x6fba);
        EXPECT(gbc.pc(), 0x422d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0310
        gbc.setState(0xc07d, 0x7cd0, 0x5be0, 0xa40d, 0xa08c, 0x2ea6, 0x0, 0x1);
        gbc.writeMem(0xc07d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x7cd0);
        EXPECT(gbc.pc(), 0xc07f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc07d), 0xcb);
        EXPECT(gbc.readMem(0xc07e), 0xe3);
        // CB E3 0311
        gbc.setState(0x27a3, 0x1b21, 0x7690, 0xcf6f, 0xed07, 0x88a3, 0x1, 0x1);
        gbc.writeMem(0x27a3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1b21);
        EXPECT(gbc.pc(), 0x27a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0312
        gbc.setState(0x29f4, 0xe767, 0xe0f0, 0xa03d, 0x757, 0x5112, 0x0, 0x0);
        gbc.writeMem(0x29f4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe767);
        EXPECT(gbc.pc(), 0x29f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0313
        gbc.setState(0x685d, 0x43dc, 0x5850, 0x5542, 0x49e2, 0xd4eb, 0x1, 0x1);
        gbc.writeMem(0x685d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x43dc);
        EXPECT(gbc.pc(), 0x685f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0314
        gbc.setState(0x2e5, 0x97e6, 0xf820, 0xfef1, 0x3019, 0x9218, 0x0, 0x0);
        gbc.writeMem(0x2e5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x97e6);
        EXPECT(gbc.pc(), 0x2e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0315
        gbc.setState(0x33c6, 0xc179, 0xbb40, 0x4b5b, 0xe2e2, 0x5726, 0x0, 0x0);
        gbc.writeMem(0x33c6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc179);
        EXPECT(gbc.pc(), 0x33c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0316
        gbc.setState(0x930f, 0xa7d9, 0x9de0, 0x67a3, 0x8ef8, 0x6112, 0x1, 0x0);
        gbc.writeMem(0x930f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xa7d9);
        EXPECT(gbc.pc(), 0x9311);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x930f), 0xcb);
        EXPECT(gbc.readMem(0x9310), 0xe3);
        // CB E3 0317
        gbc.setState(0x904b, 0x10cc, 0x99f0, 0xa3ec, 0xe39c, 0x1d9d, 0x1, 0x1);
        gbc.writeMem(0x904b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x10cc);
        EXPECT(gbc.pc(), 0x904d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x904b), 0xcb);
        EXPECT(gbc.readMem(0x904c), 0xe3);
        // CB E3 0318
        gbc.setState(0xa97d, 0x5f62, 0x9000, 0x7dcc, 0x78de, 0x2e60, 0x0, 0x0);
        gbc.writeMem(0xa97d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5f62);
        EXPECT(gbc.pc(), 0xa97f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa97d), 0xcb);
        EXPECT(gbc.readMem(0xa97e), 0xe3);
        // CB E3 0319
        gbc.setState(0x7ea2, 0xae1a, 0x22b0, 0xd082, 0xbe41, 0xdfe7, 0x0, 0x1);
        gbc.writeMem(0x7ea2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xae1a);
        EXPECT(gbc.pc(), 0x7ea4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 031A
        gbc.setState(0xbb10, 0x399d, 0x7750, 0x22e2, 0xe48b, 0x4300, 0x0, 0x0);
        gbc.writeMem(0xbb10, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x399d);
        EXPECT(gbc.pc(), 0xbb12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb10), 0xcb);
        EXPECT(gbc.readMem(0xbb11), 0xe3);
        // CB E3 031B
        gbc.setState(0x8f40, 0x5cc1, 0x31b0, 0x3dc9, 0xf06a, 0x88e1, 0x0, 0x0);
        gbc.writeMem(0x8f40, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x5cc1);
        EXPECT(gbc.pc(), 0x8f42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f40), 0xcb);
        EXPECT(gbc.readMem(0x8f41), 0xe3);
        // CB E3 031C
        gbc.setState(0x2c19, 0x8157, 0x450, 0x29ba, 0xfa7f, 0x36e0, 0x1, 0x0);
        gbc.writeMem(0x2c19, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8157);
        EXPECT(gbc.pc(), 0x2c1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 031D
        gbc.setState(0xb3f6, 0x629a, 0x6cc0, 0xcfa, 0x89d6, 0xf2d3, 0x1, 0x1);
        gbc.writeMem(0xb3f6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x629a);
        EXPECT(gbc.pc(), 0xb3f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3f6), 0xcb);
        EXPECT(gbc.readMem(0xb3f7), 0xe3);
        // CB E3 031E
        gbc.setState(0x2c23, 0xd15f, 0x1f70, 0x208c, 0x4152, 0x1e6f, 0x1, 0x0);
        gbc.writeMem(0x2c23, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xd15f);
        EXPECT(gbc.pc(), 0x2c25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 031F
        gbc.setState(0x9b43, 0xd6ad, 0x1f60, 0x146a, 0xdc1, 0xe14, 0x1, 0x0);
        gbc.writeMem(0x9b43, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd6ad);
        EXPECT(gbc.pc(), 0x9b45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b43), 0xcb);
        EXPECT(gbc.readMem(0x9b44), 0xe3);
        // CB E3 0320
        gbc.setState(0x47a3, 0xddef, 0x3750, 0xf4da, 0xc944, 0xff6c, 0x0, 0x0);
        gbc.writeMem(0x47a3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xddef);
        EXPECT(gbc.pc(), 0x47a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0321
        gbc.setState(0xde3, 0x531, 0x3300, 0xe0b5, 0x1a96, 0x37e7, 0x0, 0x1);
        gbc.writeMem(0xde3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x531);
        EXPECT(gbc.pc(), 0xde5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0323
        gbc.setState(0x225f, 0xd3db, 0x74e0, 0x859b, 0x80a, 0xcb0f, 0x1, 0x1);
        gbc.writeMem(0x225f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd3db);
        EXPECT(gbc.pc(), 0x2261);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0324
        gbc.setState(0x4c81, 0x12e1, 0x22f0, 0x6355, 0xef27, 0x5538, 0x1, 0x1);
        gbc.writeMem(0x4c81, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x12e1);
        EXPECT(gbc.pc(), 0x4c83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0325
        gbc.setState(0x94cf, 0x30ec, 0xa750, 0xe409, 0x389b, 0xafd8, 0x0, 0x1);
        gbc.writeMem(0x94cf, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x30ec);
        EXPECT(gbc.pc(), 0x94d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94cf), 0xcb);
        EXPECT(gbc.readMem(0x94d0), 0xe3);
        // CB E3 0326
        gbc.setState(0x680, 0xf855, 0x93a0, 0x8077, 0x1fce, 0x1b9f, 0x0, 0x1);
        gbc.writeMem(0x680, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xf855);
        EXPECT(gbc.pc(), 0x682);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0327
        gbc.setState(0xd89b, 0xf318, 0x7790, 0xbb5b, 0xfc92, 0xad89, 0x1, 0x0);
        gbc.writeMem(0xd89b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xf318);
        EXPECT(gbc.pc(), 0xd89d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd89b), 0xcb);
        EXPECT(gbc.readMem(0xd89c), 0xe3);
        // CB E3 0328
        gbc.setState(0x98e2, 0x6b90, 0xbc00, 0x7ec1, 0x5dad, 0x6e1e, 0x0, 0x0);
        gbc.writeMem(0x98e2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6b90);
        EXPECT(gbc.pc(), 0x98e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98e2), 0xcb);
        EXPECT(gbc.readMem(0x98e3), 0xe3);
        // CB E3 032A
        gbc.setState(0x9b6b, 0xa8b0, 0xc160, 0x789f, 0xaea7, 0x504, 0x0, 0x0);
        gbc.writeMem(0x9b6b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xa8b0);
        EXPECT(gbc.pc(), 0x9b6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b6b), 0xcb);
        EXPECT(gbc.readMem(0x9b6c), 0xe3);
        // CB E3 032B
        gbc.setState(0x8ea7, 0xc169, 0xba10, 0xc0c2, 0xf6b9, 0x7ed, 0x1, 0x1);
        gbc.writeMem(0x8ea7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc169);
        EXPECT(gbc.pc(), 0x8ea9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea7), 0xcb);
        EXPECT(gbc.readMem(0x8ea8), 0xe3);
        // CB E3 032C
        gbc.setState(0x9210, 0x5567, 0xb380, 0x5ab4, 0xa73, 0x7f92, 0x0, 0x1);
        gbc.writeMem(0x9210, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5567);
        EXPECT(gbc.pc(), 0x9212);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9210), 0xcb);
        EXPECT(gbc.readMem(0x9211), 0xe3);
        // CB E3 032D
        gbc.setState(0x3742, 0x8122, 0x6510, 0x63a7, 0x29bc, 0x1ea6, 0x1, 0x0);
        gbc.writeMem(0x3742, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x8122);
        EXPECT(gbc.pc(), 0x3744);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 032E
        gbc.setState(0x8d35, 0x1492, 0xdd10, 0xa26a, 0xf2f5, 0x30f2, 0x1, 0x1);
        gbc.writeMem(0x8d35, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x1492);
        EXPECT(gbc.pc(), 0x8d37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d35), 0xcb);
        EXPECT(gbc.readMem(0x8d36), 0xe3);
        // CB E3 032F
        gbc.setState(0x13be, 0x18ed, 0x43d0, 0x6e10, 0x877a, 0x2ee7, 0x0, 0x1);
        gbc.writeMem(0x13be, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x18ed);
        EXPECT(gbc.pc(), 0x13c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0330
        gbc.setState(0xc45, 0xe0f3, 0x28f0, 0x6515, 0x1f28, 0x163d, 0x0, 0x1);
        gbc.writeMem(0xc45, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xe0f3);
        EXPECT(gbc.pc(), 0xc47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0331
        gbc.setState(0xb4c8, 0xb44f, 0xc460, 0x1318, 0x41c7, 0xebea, 0x1, 0x1);
        gbc.writeMem(0xb4c8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb44f);
        EXPECT(gbc.pc(), 0xb4ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4c8), 0xcb);
        EXPECT(gbc.readMem(0xb4c9), 0xe3);
        // CB E3 0332
        gbc.setState(0x4fc6, 0xda98, 0x20d0, 0xd1e, 0x61a9, 0xa0b7, 0x0, 0x1);
        gbc.writeMem(0x4fc6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xda98);
        EXPECT(gbc.pc(), 0x4fc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0333
        gbc.setState(0xef6e, 0x9a98, 0xcdf0, 0xed73, 0x3f68, 0xa70d, 0x0, 0x0);
        gbc.writeMem(0xef6e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x9a98);
        EXPECT(gbc.pc(), 0xef70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef6e), 0xcb);
        EXPECT(gbc.readMem(0xef6f), 0xe3);
        // CB E3 0334
        gbc.setState(0x6935, 0x1853, 0x9d40, 0xb9ff, 0xd732, 0xf5c5, 0x1, 0x0);
        gbc.writeMem(0x6935, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1853);
        EXPECT(gbc.pc(), 0x6937);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0335
        gbc.setState(0xbd05, 0x8869, 0x8cc0, 0xfa54, 0x9724, 0xa7c, 0x1, 0x1);
        gbc.writeMem(0xbd05, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8869);
        EXPECT(gbc.pc(), 0xbd07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd05), 0xcb);
        EXPECT(gbc.readMem(0xbd06), 0xe3);
        // CB E3 0336
        gbc.setState(0x671c, 0x4352, 0x3e00, 0xc91d, 0xd557, 0xa498, 0x0, 0x0);
        gbc.writeMem(0x671c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x4352);
        EXPECT(gbc.pc(), 0x671e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0337
        gbc.setState(0x9ee9, 0xa60a, 0x3800, 0xcb8c, 0x5a93, 0xb416, 0x1, 0x1);
        gbc.writeMem(0x9ee9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa60a);
        EXPECT(gbc.pc(), 0x9eeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ee9), 0xcb);
        EXPECT(gbc.readMem(0x9eea), 0xe3);
        // CB E3 0338
        gbc.setState(0x7e8d, 0xd69a, 0x5590, 0x4928, 0xfd57, 0xd8b4, 0x0, 0x1);
        gbc.writeMem(0x7e8d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xd69a);
        EXPECT(gbc.pc(), 0x7e8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0339
        gbc.setState(0xd1ee, 0x718, 0xb800, 0x2505, 0xe6, 0xdd33, 0x1, 0x1);
        gbc.writeMem(0xd1ee, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x718);
        EXPECT(gbc.pc(), 0xd1f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1ee), 0xcb);
        EXPECT(gbc.readMem(0xd1ef), 0xe3);
        // CB E3 033A
        gbc.setState(0xe280, 0x623, 0x77d0, 0xf140, 0x81e5, 0xfde4, 0x0, 0x0);
        gbc.writeMem(0xe280, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x623);
        EXPECT(gbc.pc(), 0xe282);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe280), 0xcb);
        EXPECT(gbc.readMem(0xe281), 0xe3);
        // CB E3 033B
        gbc.setState(0x45e4, 0x1eb9, 0xabd0, 0x68ac, 0x3783, 0xecd4, 0x1, 0x1);
        gbc.writeMem(0x45e4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x1eb9);
        EXPECT(gbc.pc(), 0x45e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 033C
        gbc.setState(0xe282, 0xa1aa, 0xc800, 0x316d, 0x731a, 0xa5a4, 0x0, 0x0);
        gbc.writeMem(0xe282, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xa1aa);
        EXPECT(gbc.pc(), 0xe284);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe282), 0xcb);
        EXPECT(gbc.readMem(0xe283), 0xe3);
        // CB E3 033D
        gbc.setState(0xd5f0, 0xd96d, 0xda70, 0x6df, 0xa894, 0xdb7a, 0x1, 0x0);
        gbc.writeMem(0xd5f0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd96d);
        EXPECT(gbc.pc(), 0xd5f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5f0), 0xcb);
        EXPECT(gbc.readMem(0xd5f1), 0xe3);
        // CB E3 033E
        gbc.setState(0xde7e, 0x8fc2, 0x3580, 0xa1f2, 0xaa4b, 0x5785, 0x1, 0x1);
        gbc.writeMem(0xde7e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x8fc2);
        EXPECT(gbc.pc(), 0xde80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde7e), 0xcb);
        EXPECT(gbc.readMem(0xde7f), 0xe3);
        // CB E3 033F
        gbc.setState(0x90d, 0xbd4, 0x9460, 0xb662, 0x20b, 0xafd4, 0x1, 0x0);
        gbc.writeMem(0x90d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xbd4);
        EXPECT(gbc.pc(), 0x90f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0340
        gbc.setState(0x6302, 0xac65, 0xb930, 0xf6f3, 0xf60a, 0xfdf6, 0x1, 0x0);
        gbc.writeMem(0x6302, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xac65);
        EXPECT(gbc.pc(), 0x6304);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0341
        gbc.setState(0xc997, 0x6a34, 0x65d0, 0xe0f4, 0x5a17, 0x3e57, 0x0, 0x1);
        gbc.writeMem(0xc997, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x6a34);
        EXPECT(gbc.pc(), 0xc999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc997), 0xcb);
        EXPECT(gbc.readMem(0xc998), 0xe3);
        // CB E3 0342
        gbc.setState(0x60f8, 0x145c, 0xec20, 0x4f24, 0xbc72, 0x2a83, 0x1, 0x0);
        gbc.writeMem(0x60f8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x145c);
        EXPECT(gbc.pc(), 0x60fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0343
        gbc.setState(0x7043, 0x293f, 0x7ec0, 0xe44, 0x6fb0, 0xacbf, 0x0, 0x1);
        gbc.writeMem(0x7043, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x293f);
        EXPECT(gbc.pc(), 0x7045);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0344
        gbc.setState(0x5b6c, 0x80c5, 0x8360, 0xf75, 0xcd79, 0x6e1d, 0x0, 0x1);
        gbc.writeMem(0x5b6c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x80c5);
        EXPECT(gbc.pc(), 0x5b6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0345
        gbc.setState(0xce27, 0x68ac, 0xc4e0, 0x5d3a, 0x9218, 0x1d05, 0x1, 0x0);
        gbc.writeMem(0xce27, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x68ac);
        EXPECT(gbc.pc(), 0xce29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce27), 0xcb);
        EXPECT(gbc.readMem(0xce28), 0xe3);
        // CB E3 0346
        gbc.setState(0xa5e2, 0x8975, 0xc9d0, 0x89f8, 0x9e4f, 0x989d, 0x1, 0x0);
        gbc.writeMem(0xa5e2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x8975);
        EXPECT(gbc.pc(), 0xa5e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5e2), 0xcb);
        EXPECT(gbc.readMem(0xa5e3), 0xe3);
        // CB E3 0347
        gbc.setState(0x3469, 0x3d10, 0x59b0, 0x48f7, 0x8c80, 0x8828, 0x0, 0x0);
        gbc.writeMem(0x3469, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3d10);
        EXPECT(gbc.pc(), 0x346b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0348
        gbc.setState(0x4de, 0xddc2, 0x4a20, 0x169e, 0x1bd, 0x3de7, 0x0, 0x0);
        gbc.writeMem(0x4de, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xddc2);
        EXPECT(gbc.pc(), 0x4e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0349
        gbc.setState(0x436, 0xe761, 0xfcd0, 0x8365, 0x2d50, 0x1d15, 0x1, 0x0);
        gbc.writeMem(0x436, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xe761);
        EXPECT(gbc.pc(), 0x438);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 034B
        gbc.setState(0x7283, 0x38c3, 0xeb80, 0xe8bf, 0x6136, 0x4ed7, 0x0, 0x1);
        gbc.writeMem(0x7283, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x38c3);
        EXPECT(gbc.pc(), 0x7285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 034C
        gbc.setState(0x6db1, 0x4e4, 0xe6d0, 0x8049, 0x9c50, 0x317d, 0x0, 0x0);
        gbc.writeMem(0x6db1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x4e4);
        EXPECT(gbc.pc(), 0x6db3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 034D
        gbc.setState(0x4c9b, 0x632a, 0xd950, 0x6d5, 0xc23a, 0x2eeb, 0x1, 0x1);
        gbc.writeMem(0x4c9b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x632a);
        EXPECT(gbc.pc(), 0x4c9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 034E
        gbc.setState(0x67fe, 0xb4cc, 0x4340, 0x6fba, 0x52fe, 0x14a, 0x1, 0x1);
        gbc.writeMem(0x67fe, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb4cc);
        EXPECT(gbc.pc(), 0x6800);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 034F
        gbc.setState(0x17b6, 0xdef7, 0x7140, 0xfcd7, 0xeb0c, 0xc89d, 0x0, 0x0);
        gbc.writeMem(0x17b6, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xdef7);
        EXPECT(gbc.pc(), 0x17b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0351
        gbc.setState(0x6db5, 0xb7f6, 0xcf70, 0xfdfa, 0x7475, 0x8f86, 0x0, 0x0);
        gbc.writeMem(0x6db5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xb7f6);
        EXPECT(gbc.pc(), 0x6db7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0352
        gbc.setState(0xac5, 0x1fa7, 0x1320, 0x9967, 0xd836, 0x87ad, 0x0, 0x0);
        gbc.writeMem(0xac5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1fa7);
        EXPECT(gbc.pc(), 0xac7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0353
        gbc.setState(0xed8e, 0x8637, 0x24e0, 0xdc63, 0xc5cb, 0x7f7d, 0x0, 0x0);
        gbc.writeMem(0xed8e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8637);
        EXPECT(gbc.pc(), 0xed90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed8e), 0xcb);
        EXPECT(gbc.readMem(0xed8f), 0xe3);
        // CB E3 0354
        gbc.setState(0xcf9, 0x64b9, 0x48d0, 0x152d, 0x3e97, 0xd681, 0x0, 0x0);
        gbc.writeMem(0xcf9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x64b9);
        EXPECT(gbc.pc(), 0xcfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0355
        gbc.setState(0x2df7, 0xc8c3, 0xeb30, 0xb295, 0x330f, 0xfb36, 0x1, 0x1);
        gbc.writeMem(0x2df7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xc8c3);
        EXPECT(gbc.pc(), 0x2df9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0357
        gbc.setState(0x9441, 0x297a, 0xfd60, 0x3d8b, 0xd1d, 0xf7ad, 0x0, 0x1);
        gbc.writeMem(0x9441, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x297a);
        EXPECT(gbc.pc(), 0x9443);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9441), 0xcb);
        EXPECT(gbc.readMem(0x9442), 0xe3);
        // CB E3 0358
        gbc.setState(0xaf6b, 0x7fad, 0x2950, 0xb2da, 0x9be3, 0x305f, 0x0, 0x1);
        gbc.writeMem(0xaf6b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x7fad);
        EXPECT(gbc.pc(), 0xaf6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf6b), 0xcb);
        EXPECT(gbc.readMem(0xaf6c), 0xe3);
        // CB E3 0359
        gbc.setState(0x8a81, 0xb5cf, 0xfda0, 0x1e53, 0x9b2e, 0xdfb3, 0x1, 0x1);
        gbc.writeMem(0x8a81, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb5cf);
        EXPECT(gbc.pc(), 0x8a83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a81), 0xcb);
        EXPECT(gbc.readMem(0x8a82), 0xe3);
        // CB E3 035A
        gbc.setState(0x3c05, 0x3bec, 0xefd0, 0xaea8, 0xcaaa, 0x8dc7, 0x1, 0x1);
        gbc.writeMem(0x3c05, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x3bec);
        EXPECT(gbc.pc(), 0x3c07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 035C
        gbc.setState(0x8215, 0xc558, 0xce0, 0x55ab, 0x4489, 0x21b6, 0x0, 0x0);
        gbc.writeMem(0x8215, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc558);
        EXPECT(gbc.pc(), 0x8217);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8215), 0xcb);
        EXPECT(gbc.readMem(0x8216), 0xe3);
        // CB E3 035D
        gbc.setState(0x2e99, 0x7b60, 0xf290, 0x8ee5, 0x88a9, 0xdf0d, 0x0, 0x0);
        gbc.writeMem(0x2e99, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7b60);
        EXPECT(gbc.pc(), 0x2e9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 035E
        gbc.setState(0x74ec, 0x9d55, 0x2280, 0xf60e, 0xe64d, 0xcd53, 0x1, 0x1);
        gbc.writeMem(0x74ec, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9d55);
        EXPECT(gbc.pc(), 0x74ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 035F
        gbc.setState(0x1126, 0x8554, 0x5ad0, 0xf1, 0x1abb, 0xe109, 0x0, 0x1);
        gbc.writeMem(0x1126, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x8554);
        EXPECT(gbc.pc(), 0x1128);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0360
        gbc.setState(0x3665, 0xbb8f, 0xa910, 0xf3b, 0xe73d, 0x3f4c, 0x1, 0x1);
        gbc.writeMem(0x3665, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xbb8f);
        EXPECT(gbc.pc(), 0x3667);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0361
        gbc.setState(0x2f7c, 0x70f8, 0x9e00, 0xbfaa, 0x414b, 0x7479, 0x1, 0x1);
        gbc.writeMem(0x2f7c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x70f8);
        EXPECT(gbc.pc(), 0x2f7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0362
        gbc.setState(0xa09, 0xa07d, 0xd00, 0x72a, 0xcea7, 0x207d, 0x1, 0x1);
        gbc.writeMem(0xa09, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa07d);
        EXPECT(gbc.pc(), 0xa0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0363
        gbc.setState(0xe8e8, 0x89b, 0xed70, 0x3367, 0x93cb, 0x8692, 0x1, 0x1);
        gbc.writeMem(0xe8e8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x89b);
        EXPECT(gbc.pc(), 0xe8ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8e8), 0xcb);
        EXPECT(gbc.readMem(0xe8e9), 0xe3);
        // CB E3 0364
        gbc.setState(0x5740, 0xd9e4, 0x7c50, 0x90f2, 0x3442, 0x28cd, 0x1, 0x1);
        gbc.writeMem(0x5740, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd9e4);
        EXPECT(gbc.pc(), 0x5742);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0365
        gbc.setState(0x3439, 0xa0fd, 0xea30, 0x22a, 0xdf94, 0x8c67, 0x1, 0x0);
        gbc.writeMem(0x3439, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xa0fd);
        EXPECT(gbc.pc(), 0x343b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0366
        gbc.setState(0xb8af, 0xc57d, 0xe400, 0x63e3, 0xbe9b, 0x5fd9, 0x1, 0x0);
        gbc.writeMem(0xb8af, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc57d);
        EXPECT(gbc.pc(), 0xb8b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8af), 0xcb);
        EXPECT(gbc.readMem(0xb8b0), 0xe3);
        // CB E3 0367
        gbc.setState(0x2baf, 0x7bc9, 0xf2c0, 0x5664, 0xe41f, 0x9cee, 0x0, 0x0);
        gbc.writeMem(0x2baf, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x7bc9);
        EXPECT(gbc.pc(), 0x2bb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0368
        gbc.setState(0xc17f, 0x206, 0xda00, 0xe0e7, 0xf68e, 0xb23c, 0x1, 0x0);
        gbc.writeMem(0xc17f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x206);
        EXPECT(gbc.pc(), 0xc181);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc17f), 0xcb);
        EXPECT(gbc.readMem(0xc180), 0xe3);
        // CB E3 0369
        gbc.setState(0xcd65, 0x8120, 0x5300, 0x3c41, 0x58f6, 0x43ea, 0x1, 0x1);
        gbc.writeMem(0xcd65, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8120);
        EXPECT(gbc.pc(), 0xcd67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd65), 0xcb);
        EXPECT(gbc.readMem(0xcd66), 0xe3);
        // CB E3 036A
        gbc.setState(0x75d9, 0xb42e, 0x1ab0, 0x4239, 0xf1b5, 0xc1ab, 0x1, 0x1);
        gbc.writeMem(0x75d9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb42e);
        EXPECT(gbc.pc(), 0x75db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 036B
        gbc.setState(0xe8ae, 0x4dc1, 0x6b00, 0x8d8f, 0xc303, 0xad0c, 0x0, 0x1);
        gbc.writeMem(0xe8ae, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4dc1);
        EXPECT(gbc.pc(), 0xe8b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8ae), 0xcb);
        EXPECT(gbc.readMem(0xe8af), 0xe3);
        // CB E3 036C
        gbc.setState(0xebc, 0x1e97, 0xd4e0, 0xe999, 0xb0a7, 0x9bc6, 0x1, 0x1);
        gbc.writeMem(0xebc, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x1e97);
        EXPECT(gbc.pc(), 0xebe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 036D
        gbc.setState(0x5813, 0x80f8, 0x6aa0, 0x796a, 0x9ca, 0x4798, 0x1, 0x0);
        gbc.writeMem(0x5813, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x80f8);
        EXPECT(gbc.pc(), 0x5815);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 036E
        gbc.setState(0xda24, 0xea99, 0xc350, 0xcd25, 0xae12, 0x6d95, 0x0, 0x1);
        gbc.writeMem(0xda24, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xea99);
        EXPECT(gbc.pc(), 0xda26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda24), 0xcb);
        EXPECT(gbc.readMem(0xda25), 0xe3);
        // CB E3 036F
        gbc.setState(0x3d2, 0x6d22, 0x61b0, 0xe395, 0x5864, 0x6f4d, 0x0, 0x1);
        gbc.writeMem(0x3d2, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6d22);
        EXPECT(gbc.pc(), 0x3d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0370
        gbc.setState(0xc9a, 0xc5d8, 0x9a50, 0x1c3a, 0x6630, 0xd64b, 0x0, 0x0);
        gbc.writeMem(0xc9a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc5d8);
        EXPECT(gbc.pc(), 0xc9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0371
        gbc.setState(0x12a8, 0xb10e, 0x5ab0, 0x8eb1, 0x23a5, 0xa01d, 0x1, 0x1);
        gbc.writeMem(0x12a8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb10e);
        EXPECT(gbc.pc(), 0x12aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0372
        gbc.setState(0x6852, 0xcca1, 0x51f0, 0x6c39, 0xf760, 0xeeb0, 0x1, 0x0);
        gbc.writeMem(0x6852, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xcca1);
        EXPECT(gbc.pc(), 0x6854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0373
        gbc.setState(0xcee3, 0x6acf, 0xc9d0, 0x5cc7, 0xa15b, 0x33db, 0x1, 0x0);
        gbc.writeMem(0xcee3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x6acf);
        EXPECT(gbc.pc(), 0xcee5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcee3), 0xcb);
        EXPECT(gbc.readMem(0xcee4), 0xe3);
        // CB E3 0374
        gbc.setState(0xd6f3, 0x7fa4, 0x62d0, 0xd393, 0xf58b, 0x3d0b, 0x0, 0x1);
        gbc.writeMem(0xd6f3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x7fa4);
        EXPECT(gbc.pc(), 0xd6f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6f3), 0xcb);
        EXPECT(gbc.readMem(0xd6f4), 0xe3);
        // CB E3 0375
        gbc.setState(0x2399, 0xfa1e, 0xbe0, 0xd3c6, 0xf292, 0x128e, 0x1, 0x1);
        gbc.writeMem(0x2399, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xfa1e);
        EXPECT(gbc.pc(), 0x239b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0376
        gbc.setState(0x3f3d, 0xde65, 0x45a0, 0x7c10, 0xebe0, 0x3b09, 0x0, 0x0);
        gbc.writeMem(0x3f3d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xde65);
        EXPECT(gbc.pc(), 0x3f3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0377
        gbc.setState(0x7b8f, 0x3a4d, 0xc2a0, 0x47e4, 0x8470, 0x9a8b, 0x1, 0x0);
        gbc.writeMem(0x7b8f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3a4d);
        EXPECT(gbc.pc(), 0x7b91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0378
        gbc.setState(0x53b0, 0x4c96, 0x13a0, 0xf1e1, 0xd9d0, 0x6151, 0x1, 0x1);
        gbc.writeMem(0x53b0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x4c96);
        EXPECT(gbc.pc(), 0x53b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0379
        gbc.setState(0xcb5e, 0x3d98, 0x6410, 0x6bb6, 0x8074, 0xfbc3, 0x0, 0x0);
        gbc.writeMem(0xcb5e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3d98);
        EXPECT(gbc.pc(), 0xcb60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb5e), 0xcb);
        EXPECT(gbc.readMem(0xcb5f), 0xe3);
        // CB E3 037A
        gbc.setState(0x150e, 0x7f40, 0xf4e0, 0xf19b, 0xe2bc, 0xa12d, 0x1, 0x0);
        gbc.writeMem(0x150e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x7f40);
        EXPECT(gbc.pc(), 0x1510);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 037B
        gbc.setState(0x93ae, 0x677e, 0x8b90, 0x122a, 0x4157, 0x16be, 0x0, 0x0);
        gbc.writeMem(0x93ae, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x677e);
        EXPECT(gbc.pc(), 0x93b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93ae), 0xcb);
        EXPECT(gbc.readMem(0x93af), 0xe3);
        // CB E3 037C
        gbc.setState(0x922a, 0x8008, 0xdd80, 0x3a36, 0x37d1, 0xced8, 0x0, 0x1);
        gbc.writeMem(0x922a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x8008);
        EXPECT(gbc.pc(), 0x922c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x922a), 0xcb);
        EXPECT(gbc.readMem(0x922b), 0xe3);
        // CB E3 037D
        gbc.setState(0x51ce, 0x2de1, 0x8320, 0xa555, 0xdf1c, 0x42ab, 0x0, 0x0);
        gbc.writeMem(0x51ce, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x2de1);
        EXPECT(gbc.pc(), 0x51d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 037E
        gbc.setState(0xa5d4, 0x8461, 0xd40, 0x9c8e, 0x8b4b, 0x242a, 0x0, 0x1);
        gbc.writeMem(0xa5d4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x8461);
        EXPECT(gbc.pc(), 0xa5d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5d4), 0xcb);
        EXPECT(gbc.readMem(0xa5d5), 0xe3);
        // CB E3 037F
        gbc.setState(0xed8b, 0x18d6, 0x2460, 0x62fd, 0x5bee, 0x2d86, 0x0, 0x1);
        gbc.writeMem(0xed8b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x18d6);
        EXPECT(gbc.pc(), 0xed8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed8b), 0xcb);
        EXPECT(gbc.readMem(0xed8c), 0xe3);
        // CB E3 0380
        gbc.setState(0x9876, 0xebc, 0xe0e0, 0x70b5, 0xa2ea, 0x2106, 0x1, 0x1);
        gbc.writeMem(0x9876, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xebc);
        EXPECT(gbc.pc(), 0x9878);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9876), 0xcb);
        EXPECT(gbc.readMem(0x9877), 0xe3);
        // CB E3 0381
        gbc.setState(0x4fe8, 0xef12, 0x1780, 0xdc9a, 0x2b87, 0x45e4, 0x1, 0x0);
        gbc.writeMem(0x4fe8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xef12);
        EXPECT(gbc.pc(), 0x4fea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0382
        gbc.setState(0x9d0f, 0x3383, 0xfd90, 0x8458, 0x58cc, 0x632c, 0x1, 0x1);
        gbc.writeMem(0x9d0f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x3383);
        EXPECT(gbc.pc(), 0x9d11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d0f), 0xcb);
        EXPECT(gbc.readMem(0x9d10), 0xe3);
        // CB E3 0383
        gbc.setState(0x7dd1, 0xe771, 0x52f0, 0x16d7, 0xa54d, 0x58f4, 0x1, 0x0);
        gbc.writeMem(0x7dd1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe771);
        EXPECT(gbc.pc(), 0x7dd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0384
        gbc.setState(0x3917, 0xafdd, 0xa30, 0x7be8, 0xf0db, 0xb6f, 0x0, 0x1);
        gbc.writeMem(0x3917, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xafdd);
        EXPECT(gbc.pc(), 0x3919);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0385
        gbc.setState(0x91e8, 0x823f, 0x62c0, 0xafc0, 0x418d, 0x4c55, 0x1, 0x1);
        gbc.writeMem(0x91e8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x823f);
        EXPECT(gbc.pc(), 0x91ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91e8), 0xcb);
        EXPECT(gbc.readMem(0x91e9), 0xe3);
        // CB E3 0386
        gbc.setState(0x3e4d, 0xc9a1, 0x8340, 0x882, 0xb42d, 0x247b, 0x0, 0x1);
        gbc.writeMem(0x3e4d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc9a1);
        EXPECT(gbc.pc(), 0x3e4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0387
        gbc.setState(0xc013, 0xdb3a, 0xd9b0, 0xdd52, 0x6a3e, 0x7f5c, 0x1, 0x1);
        gbc.writeMem(0xc013, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xdb3a);
        EXPECT(gbc.pc(), 0xc015);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc013), 0xcb);
        EXPECT(gbc.readMem(0xc014), 0xe3);
        // CB E3 0388
        gbc.setState(0x2da9, 0x56b3, 0xcee0, 0xc43d, 0x2a9a, 0xb22c, 0x0, 0x1);
        gbc.writeMem(0x2da9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x56b3);
        EXPECT(gbc.pc(), 0x2dab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0389
        gbc.setState(0x40a7, 0xd8e8, 0x9440, 0x3269, 0x828c, 0x13eb, 0x0, 0x0);
        gbc.writeMem(0x40a7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xd8e8);
        EXPECT(gbc.pc(), 0x40a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 038A
        gbc.setState(0xb402, 0x2616, 0x85c0, 0x9b10, 0x66cd, 0x9394, 0x1, 0x0);
        gbc.writeMem(0xb402, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2616);
        EXPECT(gbc.pc(), 0xb404);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb402), 0xcb);
        EXPECT(gbc.readMem(0xb403), 0xe3);
        // CB E3 038B
        gbc.setState(0xb971, 0x8daa, 0x9be0, 0xb5c1, 0x6e1f, 0x400e, 0x1, 0x1);
        gbc.writeMem(0xb971, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8daa);
        EXPECT(gbc.pc(), 0xb973);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb971), 0xcb);
        EXPECT(gbc.readMem(0xb972), 0xe3);
        // CB E3 038C
        gbc.setState(0x7e6a, 0xc066, 0x2fe0, 0xa43e, 0xfd2c, 0xb2e6, 0x1, 0x1);
        gbc.writeMem(0x7e6a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc066);
        EXPECT(gbc.pc(), 0x7e6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 038D
        gbc.setState(0x12b5, 0xc9d0, 0x1590, 0xd8a7, 0xa6c5, 0xf6d2, 0x0, 0x1);
        gbc.writeMem(0x12b5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc9d0);
        EXPECT(gbc.pc(), 0x12b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 038E
        gbc.setState(0x8600, 0x3898, 0xb7d0, 0xfcf0, 0xb138, 0x15f7, 0x0, 0x1);
        gbc.writeMem(0x8600, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3898);
        EXPECT(gbc.pc(), 0x8602);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8600), 0xcb);
        EXPECT(gbc.readMem(0x8601), 0xe3);
        // CB E3 038F
        gbc.setState(0x63aa, 0xef6e, 0xfbf0, 0x6dd9, 0x2084, 0x78f2, 0x1, 0x1);
        gbc.writeMem(0x63aa, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xef6e);
        EXPECT(gbc.pc(), 0x63ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0390
        gbc.setState(0x2d30, 0x3dcd, 0xf30, 0x7bb4, 0x277c, 0x8954, 0x0, 0x1);
        gbc.writeMem(0x2d30, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x3dcd);
        EXPECT(gbc.pc(), 0x2d32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0391
        gbc.setState(0x2359, 0x3655, 0xeb0, 0xf9ee, 0x6300, 0xa0fe, 0x0, 0x1);
        gbc.writeMem(0x2359, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3655);
        EXPECT(gbc.pc(), 0x235b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0392
        gbc.setState(0xbba9, 0x8da5, 0xc980, 0xba59, 0x33ce, 0x4243, 0x1, 0x1);
        gbc.writeMem(0xbba9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x8da5);
        EXPECT(gbc.pc(), 0xbbab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbba9), 0xcb);
        EXPECT(gbc.readMem(0xbbaa), 0xe3);
        // CB E3 0393
        gbc.setState(0x510e, 0x64b9, 0xe560, 0x36, 0xa44d, 0x1435, 0x1, 0x1);
        gbc.writeMem(0x510e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x64b9);
        EXPECT(gbc.pc(), 0x5110);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0394
        gbc.setState(0xe90d, 0x9d41, 0xb8f0, 0xbbff, 0x8b0e, 0x34ca, 0x1, 0x1);
        gbc.writeMem(0xe90d, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9d41);
        EXPECT(gbc.pc(), 0xe90f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe90d), 0xcb);
        EXPECT(gbc.readMem(0xe90e), 0xe3);
        // CB E3 0395
        gbc.setState(0xe840, 0x7c24, 0x80c0, 0x2982, 0x6cf3, 0x75e9, 0x1, 0x0);
        gbc.writeMem(0xe840, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7c24);
        EXPECT(gbc.pc(), 0xe842);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe840), 0xcb);
        EXPECT(gbc.readMem(0xe841), 0xe3);
        // CB E3 0396
        gbc.setState(0x4c69, 0x9ef0, 0xd500, 0x2b02, 0xfe7, 0xb1ce, 0x1, 0x0);
        gbc.writeMem(0x4c69, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x9ef0);
        EXPECT(gbc.pc(), 0x4c6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 0397
        gbc.setState(0x68ef, 0x722, 0x95b0, 0xd23c, 0xa45f, 0xab41, 0x1, 0x1);
        gbc.writeMem(0x68ef, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x722);
        EXPECT(gbc.pc(), 0x68f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 0398
        gbc.setState(0xb703, 0x35df, 0xc700, 0xdb79, 0xd55d, 0xab0d, 0x0, 0x1);
        gbc.writeMem(0xb703, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x35df);
        EXPECT(gbc.pc(), 0xb705);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb703), 0xcb);
        EXPECT(gbc.readMem(0xb704), 0xe3);
        // CB E3 0399
        gbc.setState(0x3db4, 0x2c56, 0x9180, 0x824, 0xb943, 0xf9fb, 0x1, 0x0);
        gbc.writeMem(0x3db4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2c56);
        EXPECT(gbc.pc(), 0x3db6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 039A
        gbc.setState(0x3825, 0xdbeb, 0xfe00, 0xb434, 0xdf68, 0x43ee, 0x1, 0x1);
        gbc.writeMem(0x3825, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xdbeb);
        EXPECT(gbc.pc(), 0x3827);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 039B
        gbc.setState(0x1df9, 0x2a5b, 0xfc30, 0xe26b, 0x6a68, 0x3d34, 0x1, 0x1);
        gbc.writeMem(0x1df9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x2a5b);
        EXPECT(gbc.pc(), 0x1dfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 039C
        gbc.setState(0x7db7, 0xef38, 0xcd60, 0x17bf, 0xe031, 0x5e29, 0x0, 0x0);
        gbc.writeMem(0x7db7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xef38);
        EXPECT(gbc.pc(), 0x7db9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 039D
        gbc.setState(0xa887, 0x2a7a, 0xec80, 0x5131, 0xb38c, 0x834e, 0x0, 0x0);
        gbc.writeMem(0xa887, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2a7a);
        EXPECT(gbc.pc(), 0xa889);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa887), 0xcb);
        EXPECT(gbc.readMem(0xa888), 0xe3);
        // CB E3 039E
        gbc.setState(0x337a, 0x623c, 0x9430, 0x75ba, 0x5ded, 0xe201, 0x0, 0x1);
        gbc.writeMem(0x337a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x623c);
        EXPECT(gbc.pc(), 0x337c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 039F
        gbc.setState(0xc04b, 0x768b, 0x9a20, 0x9825, 0x5beb, 0x341d, 0x1, 0x1);
        gbc.writeMem(0xc04b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x768b);
        EXPECT(gbc.pc(), 0xc04d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc04b), 0xcb);
        EXPECT(gbc.readMem(0xc04c), 0xe3);
        // CB E3 03A0
        gbc.setState(0xa46f, 0xb486, 0xef0, 0x25ec, 0xfa22, 0xbc6b, 0x0, 0x1);
        gbc.writeMem(0xa46f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xb486);
        EXPECT(gbc.pc(), 0xa471);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa46f), 0xcb);
        EXPECT(gbc.readMem(0xa470), 0xe3);
        // CB E3 03A1
        gbc.setState(0x9fac, 0xcadb, 0xd680, 0xbf94, 0xf7d8, 0x5bac, 0x1, 0x1);
        gbc.writeMem(0x9fac, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xcadb);
        EXPECT(gbc.pc(), 0x9fae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fac), 0xcb);
        EXPECT(gbc.readMem(0x9fad), 0xe3);
        // CB E3 03A2
        gbc.setState(0x62ab, 0xeb, 0xf4b0, 0xa3fb, 0x6ee0, 0x4d85, 0x1, 0x1);
        gbc.writeMem(0x62ab, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xeb);
        EXPECT(gbc.pc(), 0x62ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 03A3
        gbc.setState(0x1007, 0x5ef2, 0xe1d0, 0x259d, 0xd28e, 0x540b, 0x0, 0x0);
        gbc.writeMem(0x1007, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x5ef2);
        EXPECT(gbc.pc(), 0x1009);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 03A4
        gbc.setState(0x395c, 0x1e89, 0x8ac0, 0x1873, 0xd371, 0x8c96, 0x0, 0x1);
        gbc.writeMem(0x395c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1e89);
        EXPECT(gbc.pc(), 0x395e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 03A5
        gbc.setState(0x2ba7, 0xa1cb, 0x5190, 0xc0d, 0x840c, 0x508c, 0x0, 0x0);
        gbc.writeMem(0x2ba7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xa1cb);
        EXPECT(gbc.pc(), 0x2ba9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 03A6
        gbc.setState(0x3612, 0x2b54, 0x360, 0x232f, 0xe994, 0xfe7b, 0x1, 0x1);
        gbc.writeMem(0x3612, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x2b54);
        EXPECT(gbc.pc(), 0x3614);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 03A7
        gbc.setState(0x8090, 0xf2e5, 0x67c0, 0xfe7, 0xbf7a, 0xdde3, 0x0, 0x0);
        gbc.writeMem(0x8090, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xf2e5);
        EXPECT(gbc.pc(), 0x8092);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8090), 0xcb);
        EXPECT(gbc.readMem(0x8091), 0xe3);
        // CB E3 03A8
        gbc.setState(0xe3e9, 0xfab7, 0x26a0, 0xe07a, 0x355a, 0x9b3a, 0x1, 0x0);
        gbc.writeMem(0xe3e9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xfab7);
        EXPECT(gbc.pc(), 0xe3eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3e9), 0xcb);
        EXPECT(gbc.readMem(0xe3ea), 0xe3);
        // CB E3 03A9
        gbc.setState(0x6f08, 0xccd1, 0x7250, 0xe66a, 0x1bb5, 0x11c3, 0x1, 0x0);
        gbc.writeMem(0x6f08, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xccd1);
        EXPECT(gbc.pc(), 0x6f0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 03AA
        gbc.setState(0xce2a, 0xc66d, 0x15f0, 0x890, 0xdcd5, 0x278f, 0x0, 0x1);
        gbc.writeMem(0xce2a, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc66d);
        EXPECT(gbc.pc(), 0xce2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce2a), 0xcb);
        EXPECT(gbc.readMem(0xce2b), 0xe3);
        // CB E3 03AB
        gbc.setState(0x5eb5, 0x2f5b, 0x8000, 0x5f6c, 0xe283, 0x7040, 0x0, 0x0);
        gbc.writeMem(0x5eb5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2f5b);
        EXPECT(gbc.pc(), 0x5eb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 03AC
        gbc.setState(0x4856, 0xf633, 0x7000, 0xc4a0, 0xef07, 0xabb2, 0x1, 0x0);
        gbc.writeMem(0x4856, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf633);
        EXPECT(gbc.pc(), 0x4858);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 03AE
        gbc.setState(0x4c49, 0x2843, 0xccf0, 0x5694, 0x9572, 0xa855, 0x1, 0x0);
        gbc.writeMem(0x4c49, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x2843);
        EXPECT(gbc.pc(), 0x4c4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 03AF
        gbc.setState(0xde20, 0x4264, 0x4b20, 0x19cc, 0xf9bf, 0x147, 0x0, 0x0);
        gbc.writeMem(0xde20, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4264);
        EXPECT(gbc.pc(), 0xde22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde20), 0xcb);
        EXPECT(gbc.readMem(0xde21), 0xe3);
        // CB E3 03B0
        gbc.setState(0xa514, 0xeca6, 0xdbd0, 0x9405, 0x771b, 0xc05d, 0x1, 0x0);
        gbc.writeMem(0xa514, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xeca6);
        EXPECT(gbc.pc(), 0xa516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa514), 0xcb);
        EXPECT(gbc.readMem(0xa515), 0xe3);
        // CB E3 03B1
        gbc.setState(0x4247, 0xce3c, 0x1ab0, 0xaa, 0xaa8a, 0xa7fb, 0x1, 0x0);
        gbc.writeMem(0x4247, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xce3c);
        EXPECT(gbc.pc(), 0x4249);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 03B2
        gbc.setState(0xedba, 0x6c1e, 0xe3e0, 0x1bab, 0x1f43, 0xd7a2, 0x1, 0x1);
        gbc.writeMem(0xedba, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x6c1e);
        EXPECT(gbc.pc(), 0xedbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedba), 0xcb);
        EXPECT(gbc.readMem(0xedbb), 0xe3);
        // CB E3 03B3
        gbc.setState(0x5fa3, 0xd94a, 0x7740, 0xe124, 0x31b2, 0x2ca0, 0x1, 0x1);
        gbc.writeMem(0x5fa3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd94a);
        EXPECT(gbc.pc(), 0x5fa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 03B4
        gbc.setState(0x87f7, 0xa8a7, 0x45e0, 0x4da6, 0x7c54, 0xfb9a, 0x1, 0x1);
        gbc.writeMem(0x87f7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa8a7);
        EXPECT(gbc.pc(), 0x87f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87f7), 0xcb);
        EXPECT(gbc.readMem(0x87f8), 0xe3);
        // CB E3 03B5
        gbc.setState(0x7cf7, 0x3ea9, 0x7070, 0xf6fa, 0xb965, 0x5b90, 0x1, 0x0);
        gbc.writeMem(0x7cf7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3ea9);
        EXPECT(gbc.pc(), 0x7cf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 03B6
        gbc.setState(0x321f, 0xb2fd, 0xbfc0, 0xd02c, 0x9afe, 0x771a, 0x1, 0x1);
        gbc.writeMem(0x321f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb2fd);
        EXPECT(gbc.pc(), 0x3221);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 03B7
        gbc.setState(0xb778, 0x3e39, 0xa960, 0x965e, 0x4b47, 0x75aa, 0x1, 0x0);
        gbc.writeMem(0xb778, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3e39);
        EXPECT(gbc.pc(), 0xb77a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb778), 0xcb);
        EXPECT(gbc.readMem(0xb779), 0xe3);
        // CB E3 03B8
        gbc.setState(0xbc02, 0x1468, 0x9390, 0xbba8, 0x3015, 0x3272, 0x0, 0x0);
        gbc.writeMem(0xbc02, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1468);
        EXPECT(gbc.pc(), 0xbc04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc02), 0xcb);
        EXPECT(gbc.readMem(0xbc03), 0xe3);
        // CB E3 03B9
        gbc.setState(0x6976, 0xe0bf, 0x8780, 0xdaba, 0x1378, 0x51f8, 0x1, 0x0);
        gbc.writeMem(0x6976, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe0bf);
        EXPECT(gbc.pc(), 0x6978);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 03BA
        gbc.setState(0x7da9, 0xa97b, 0xe820, 0x682e, 0xcb1a, 0xc9a2, 0x1, 0x1);
        gbc.writeMem(0x7da9, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa97b);
        EXPECT(gbc.pc(), 0x7dab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 03BB
        gbc.setState(0x4fb3, 0xe1a5, 0xa0d0, 0x1245, 0x7f6a, 0x2fba, 0x0, 0x0);
        gbc.writeMem(0x4fb3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xe1a5);
        EXPECT(gbc.pc(), 0x4fb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 03BC
        gbc.setState(0x61d7, 0xc5d9, 0x7540, 0x4517, 0x28c5, 0xcc4b, 0x1, 0x1);
        gbc.writeMem(0x61d7, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc5d9);
        EXPECT(gbc.pc(), 0x61d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 03BD
        gbc.setState(0x3c4f, 0x4109, 0xf360, 0x9e66, 0xf8c3, 0x3b4d, 0x0, 0x0);
        gbc.writeMem(0x3c4f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x4109);
        EXPECT(gbc.pc(), 0x3c51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 03BE
        gbc.setState(0xd7c4, 0xf2e7, 0x5990, 0x34b6, 0xf9f0, 0xcae7, 0x1, 0x0);
        gbc.writeMem(0xd7c4, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf2e7);
        EXPECT(gbc.pc(), 0xd7c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7c4), 0xcb);
        EXPECT(gbc.readMem(0xd7c5), 0xe3);
        // CB E3 03BF
        gbc.setState(0x94d5, 0xc555, 0x98d0, 0x618e, 0xca42, 0xb946, 0x1, 0x1);
        gbc.writeMem(0x94d5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc555);
        EXPECT(gbc.pc(), 0x94d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94d5), 0xcb);
        EXPECT(gbc.readMem(0x94d6), 0xe3);
        // CB E3 03C1
        gbc.setState(0x6089, 0xe496, 0x53b0, 0x93ff, 0xf88c, 0x3bd8, 0x0, 0x0);
        gbc.writeMem(0x6089, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe496);
        EXPECT(gbc.pc(), 0x608b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 03C2
        gbc.setState(0x7df3, 0xc71e, 0x4bc0, 0x1de8, 0xd3f5, 0x2448, 0x0, 0x1);
        gbc.writeMem(0x7df3, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xc71e);
        EXPECT(gbc.pc(), 0x7df5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 03C3
        gbc.setState(0x3d77, 0x659b, 0x68d0, 0xc7c5, 0x9f8e, 0xeb2, 0x0, 0x0);
        gbc.writeMem(0x3d77, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x659b);
        EXPECT(gbc.pc(), 0x3d79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 03C4
        gbc.setState(0xdc7c, 0x4ef9, 0x9a50, 0x8ff4, 0x810f, 0x98f9, 0x0, 0x0);
        gbc.writeMem(0xdc7c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x4ef9);
        EXPECT(gbc.pc(), 0xdc7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc7c), 0xcb);
        EXPECT(gbc.readMem(0xdc7d), 0xe3);
        // CB E3 03C6
        gbc.setState(0xe316, 0x92fd, 0xbc60, 0xeea2, 0x6a14, 0x2cab, 0x1, 0x1);
        gbc.writeMem(0xe316, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x92fd);
        EXPECT(gbc.pc(), 0xe318);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe316), 0xcb);
        EXPECT(gbc.readMem(0xe317), 0xe3);
        // CB E3 03C7
        gbc.setState(0x6d04, 0x81c6, 0x7320, 0x3759, 0x74bf, 0xdd7b, 0x0, 0x1);
        gbc.writeMem(0x6d04, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x81c6);
        EXPECT(gbc.pc(), 0x6d06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 03C8
        gbc.setState(0xe220, 0x5335, 0x21a0, 0x1d36, 0x83af, 0xd63d, 0x0, 0x0);
        gbc.writeMem(0xe220, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5335);
        EXPECT(gbc.pc(), 0xe222);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe220), 0xcb);
        EXPECT(gbc.readMem(0xe221), 0xe3);
        // CB E3 03C9
        gbc.setState(0x99d1, 0x80ac, 0x1690, 0x7499, 0x5ba, 0x9c5d, 0x1, 0x0);
        gbc.writeMem(0x99d1, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x80ac);
        EXPECT(gbc.pc(), 0x99d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99d1), 0xcb);
        EXPECT(gbc.readMem(0x99d2), 0xe3);
        // CB E3 03CA
        gbc.setState(0xe4ef, 0xf996, 0xaa70, 0x8043, 0xd0a3, 0xb883, 0x1, 0x0);
        gbc.writeMem(0xe4ef, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xf996);
        EXPECT(gbc.pc(), 0xe4f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4ef), 0xcb);
        EXPECT(gbc.readMem(0xe4f0), 0xe3);
        // CB E3 03CB
        gbc.setState(0xeea, 0x75a4, 0xffe0, 0x1996, 0xcc45, 0xecf0, 0x1, 0x0);
        gbc.writeMem(0xeea, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x75a4);
        EXPECT(gbc.pc(), 0xeec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 03CC
        gbc.setState(0x3b80, 0x90cf, 0x4800, 0xf8cf, 0x8f0e, 0x4bd6, 0x0, 0x1);
        gbc.writeMem(0x3b80, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x90cf);
        EXPECT(gbc.pc(), 0x3b82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 03CD
        gbc.setState(0x8894, 0x8c33, 0xe1d0, 0x2b9, 0xbe6f, 0x42fe, 0x0, 0x0);
        gbc.writeMem(0x8894, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x8c33);
        EXPECT(gbc.pc(), 0x8896);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8894), 0xcb);
        EXPECT(gbc.readMem(0x8895), 0xe3);
        // CB E3 03CE
        gbc.setState(0xc205, 0xbbb6, 0x30d0, 0x6c4a, 0x5876, 0x29db, 0x0, 0x1);
        gbc.writeMem(0xc205, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xbbb6);
        EXPECT(gbc.pc(), 0xc207);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc205), 0xcb);
        EXPECT(gbc.readMem(0xc206), 0xe3);
        // CB E3 03CF
        gbc.setState(0x246c, 0x39bb, 0x8cf0, 0x392c, 0x69a2, 0x25cb, 0x0, 0x0);
        gbc.writeMem(0x246c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x39bb);
        EXPECT(gbc.pc(), 0x246e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E3 03D0
        gbc.setState(0x24a8, 0x71f6, 0x2b10, 0x142b, 0x3ce9, 0xc882, 0x0, 0x1);
        gbc.writeMem(0x24a8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x71f6);
        EXPECT(gbc.pc(), 0x24aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 03D1
        gbc.setState(0xc34e, 0x9e4d, 0x6440, 0xe556, 0x24a7, 0x5b2a, 0x0, 0x0);
        gbc.writeMem(0xc34e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x9e4d);
        EXPECT(gbc.pc(), 0xc350);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc34e), 0xcb);
        EXPECT(gbc.readMem(0xc34f), 0xe3);
        // CB E3 03D2
        gbc.setState(0xd602, 0x482a, 0xc3f0, 0x3dae, 0x431, 0xed89, 0x0, 0x1);
        gbc.writeMem(0xd602, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x482a);
        EXPECT(gbc.pc(), 0xd604);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd602), 0xcb);
        EXPECT(gbc.readMem(0xd603), 0xe3);
        // CB E3 03D3
        gbc.setState(0x88ed, 0xa52d, 0x4f60, 0xe494, 0x59fa, 0x109b, 0x0, 0x1);
        gbc.writeMem(0x88ed, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa52d);
        EXPECT(gbc.pc(), 0x88ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88ed), 0xcb);
        EXPECT(gbc.readMem(0x88ee), 0xe3);
        // CB E3 03D4
        gbc.setState(0xb511, 0x14f1, 0x2810, 0x1b74, 0x1a5f, 0xbeaa, 0x1, 0x1);
        gbc.writeMem(0xb511, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x14f1);
        EXPECT(gbc.pc(), 0xb513);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb511), 0xcb);
        EXPECT(gbc.readMem(0xb512), 0xe3);
        // CB E3 03D6
        gbc.setState(0xa037, 0x95fe, 0xb860, 0xfc50, 0x5a33, 0x46f9, 0x0, 0x0);
        gbc.writeMem(0xa037, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x95fe);
        EXPECT(gbc.pc(), 0xa039);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa037), 0xcb);
        EXPECT(gbc.readMem(0xa038), 0xe3);
        // CB E3 03D7
        gbc.setState(0x6c4e, 0xdb4e, 0xf400, 0x46a3, 0x3311, 0x98c7, 0x1, 0x0);
        gbc.writeMem(0x6c4e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xdb4e);
        EXPECT(gbc.pc(), 0x6c50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 03D8
        gbc.setState(0x35c0, 0xcae1, 0xd7c0, 0x5cb1, 0xc6ef, 0x4d50, 0x0, 0x0);
        gbc.writeMem(0x35c0, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xcae1);
        EXPECT(gbc.pc(), 0x35c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 03D9
        gbc.setState(0x1e56, 0x15b8, 0xa5c0, 0xf8a1, 0xa78b, 0x7a3b, 0x0, 0x0);
        gbc.writeMem(0x1e56, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x15b8);
        EXPECT(gbc.pc(), 0x1e58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 03DA
        gbc.setState(0x25df, 0x15a0, 0xe080, 0xca52, 0x8bd6, 0xcf7c, 0x0, 0x0);
        gbc.writeMem(0x25df, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x15a0);
        EXPECT(gbc.pc(), 0x25e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 03DB
        gbc.setState(0x3c19, 0x280b, 0xaaa0, 0xad8b, 0xd0c4, 0x2827, 0x1, 0x1);
        gbc.writeMem(0x3c19, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x280b);
        EXPECT(gbc.pc(), 0x3c1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E3 03DC
        gbc.setState(0x1738, 0x6f9b, 0x7e10, 0x3c90, 0x9a55, 0xa973, 0x0, 0x0);
        gbc.writeMem(0x1738, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6f9b);
        EXPECT(gbc.pc(), 0x173a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 03DD
        gbc.setState(0x430b, 0xd86f, 0x7090, 0x9ab5, 0x9c84, 0xb506, 0x1, 0x0);
        gbc.writeMem(0x430b, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd86f);
        EXPECT(gbc.pc(), 0x430d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 03DE
        gbc.setState(0xa3fb, 0x6335, 0x6340, 0xc328, 0xc230, 0xd342, 0x0, 0x0);
        gbc.writeMem(0xa3fb, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x6335);
        EXPECT(gbc.pc(), 0xa3fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3fb), 0xcb);
        EXPECT(gbc.readMem(0xa3fc), 0xe3);
        // CB E3 03DF
        gbc.setState(0x9a4e, 0x8762, 0x7e00, 0xaa11, 0x5e0a, 0xd285, 0x0, 0x0);
        gbc.writeMem(0x9a4e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x8762);
        EXPECT(gbc.pc(), 0x9a50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a4e), 0xcb);
        EXPECT(gbc.readMem(0x9a4f), 0xe3);
        // CB E3 03E1
        gbc.setState(0x52d8, 0xe9b3, 0x40c0, 0xac8a, 0xc703, 0xe9f7, 0x1, 0x1);
        gbc.writeMem(0x52d8, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xe9b3);
        EXPECT(gbc.pc(), 0x52da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E3 03E2
        gbc.setState(0xb76c, 0xbca5, 0xe7b0, 0xaa79, 0xdc1c, 0xd1a9, 0x1, 0x1);
        gbc.writeMem(0xb76c, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xbca5);
        EXPECT(gbc.pc(), 0xb76e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb76c), 0xcb);
        EXPECT(gbc.readMem(0xb76d), 0xe3);
        // CB E3 03E3
        gbc.setState(0x6a7f, 0xbc8d, 0xaf10, 0x835f, 0xbfd1, 0xbe80, 0x1, 0x1);
        gbc.writeMem(0x6a7f, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xbc8d);
        EXPECT(gbc.pc(), 0x6a81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 03E4
        gbc.setState(0xcac5, 0x2899, 0x800, 0x1fe0, 0x6857, 0x9f7, 0x0, 0x0);
        gbc.writeMem(0xcac5, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x2899);
        EXPECT(gbc.pc(), 0xcac7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcac5), 0xcb);
        EXPECT(gbc.readMem(0xcac6), 0xe3);
        // CB E3 03E5
        gbc.setState(0x2756, 0x8ebb, 0x2290, 0x7806, 0x438, 0xf0d0, 0x0, 0x1);
        gbc.writeMem(0x2756, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x8ebb);
        EXPECT(gbc.pc(), 0x2758);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E3 03E6
        gbc.setState(0x9927, 0x8fcc, 0xf860, 0x49ed, 0x5f71, 0xd34c, 0x0, 0x0);
        gbc.writeMem(0x9927, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8fcc);
        EXPECT(gbc.pc(), 0x9929);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9927), 0xcb);
        EXPECT(gbc.readMem(0x9928), 0xe3);
        // CB E3 03E7
        gbc.setState(0x895e, 0xfc2, 0x48e0, 0xe4a, 0x40c6, 0x45f0, 0x1, 0x0);
        gbc.writeMem(0x895e, { 0xcb, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xfc2);
        EXPECT(gbc.pc(), 0x8960);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x895e), 0xcb);
        EXPECT(gbc.readMem(0x895f), 0xe3);
    }
