    TEST(gbcemu, opcode_cb_2d) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 2D 0000
        gbc.setState(0xddcf, 0x8e6b, 0xcee0, 0x1662, 0x238f, 0xa6d1, 0x0, 0x1);
        gbc.writeMem(0xddcf, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8e6b, gbc.sp());
        EXPECT(0xddd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddcf));
        EXPECT(0x2d, gbc.readMem(0xddd0));
        // CB 2D 0001
        gbc.setState(0x9ca5, 0x3b7d, 0xb770, 0x71e5, 0x47a5, 0x1861, 0x1, 0x1);
        gbc.writeMem(0x9ca5, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3b7d, gbc.sp());
        EXPECT(0x9ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ca5));
        EXPECT(0x2d, gbc.readMem(0x9ca6));
        // CB 2D 0002
        gbc.setState(0x8ae2, 0x3a40, 0x3bd0, 0x45bb, 0x713c, 0x8bf4, 0x1, 0x1);
        gbc.writeMem(0x8ae2, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3a40, gbc.sp());
        EXPECT(0x8ae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae2));
        EXPECT(0x2d, gbc.readMem(0x8ae3));
        // CB 2D 0003
        gbc.setState(0x2413, 0x4ba9, 0x1ba0, 0xb233, 0xd768, 0xdd68, 0x0, 0x0);
        gbc.writeMem(0x2413, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4ba9, gbc.sp());
        EXPECT(0x2415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0004
        gbc.setState(0x46d2, 0xe528, 0x8230, 0x820d, 0x8ee0, 0x1ab1, 0x1, 0x1);
        gbc.writeMem(0x46d2, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe528, gbc.sp());
        EXPECT(0x46d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0005
        gbc.setState(0xc26b, 0x3d20, 0xa510, 0x93e4, 0xf0ea, 0x8628, 0x0, 0x1);
        gbc.writeMem(0xc26b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3d20, gbc.sp());
        EXPECT(0xc26d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc26b));
        EXPECT(0x2d, gbc.readMem(0xc26c));
        // CB 2D 0006
        gbc.setState(0x2b10, 0x322d, 0xd4d0, 0xfac8, 0xeb36, 0x1146, 0x0, 0x0);
        gbc.writeMem(0x2b10, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x322d, gbc.sp());
        EXPECT(0x2b12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0007
        gbc.setState(0xe2a3, 0xab29, 0xae10, 0xb30a, 0x5d5, 0xe553, 0x0, 0x1);
        gbc.writeMem(0xe2a3, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xab29, gbc.sp());
        EXPECT(0xe2a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2a3));
        EXPECT(0x2d, gbc.readMem(0xe2a4));
        // CB 2D 0008
        gbc.setState(0xca24, 0x13e9, 0x5ce0, 0x8e95, 0x10de, 0x7346, 0x1, 0x1);
        gbc.writeMem(0xca24, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x13e9, gbc.sp());
        EXPECT(0xca26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca24));
        EXPECT(0x2d, gbc.readMem(0xca25));
        // CB 2D 0009
        gbc.setState(0xd375, 0x2253, 0x4a20, 0x667f, 0x5011, 0x14cc, 0x1, 0x0);
        gbc.writeMem(0xd375, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2253, gbc.sp());
        EXPECT(0xd377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd375));
        EXPECT(0x2d, gbc.readMem(0xd376));
        // CB 2D 000A
        gbc.setState(0xa7d9, 0x6ecb, 0xe1b0, 0x9de6, 0xdab4, 0x5a1b, 0x1, 0x1);
        gbc.writeMem(0xa7d9, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6ecb, gbc.sp());
        EXPECT(0xa7db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d9));
        EXPECT(0x2d, gbc.readMem(0xa7da));
        // CB 2D 000B
        gbc.setState(0x62d5, 0x1405, 0x5320, 0xbc3e, 0x1db7, 0x7895, 0x0, 0x1);
        gbc.writeMem(0x62d5, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1405, gbc.sp());
        EXPECT(0x62d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 000C
        gbc.setState(0x8a76, 0x6330, 0x47a0, 0xea7b, 0x4fcc, 0x7056, 0x1, 0x0);
        gbc.writeMem(0x8a76, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6330, gbc.sp());
        EXPECT(0x8a78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a76));
        EXPECT(0x2d, gbc.readMem(0x8a77));
        // CB 2D 000D
        gbc.setState(0xc6f5, 0x5dae, 0x7a70, 0x268, 0xba80, 0xab93, 0x1, 0x0);
        gbc.writeMem(0xc6f5, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5dae, gbc.sp());
        EXPECT(0xc6f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6f5));
        EXPECT(0x2d, gbc.readMem(0xc6f6));
        // CB 2D 000E
        gbc.setState(0x160a, 0xdf15, 0x5830, 0xa95c, 0x270e, 0x6fb6, 0x0, 0x1);
        gbc.writeMem(0x160a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xdf15, gbc.sp());
        EXPECT(0x160c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 000F
        gbc.setState(0x59b5, 0xd95, 0x6050, 0xdf3b, 0x1aca, 0x4433, 0x0, 0x1);
        gbc.writeMem(0x59b5, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd95, gbc.sp());
        EXPECT(0x59b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0010
        gbc.setState(0xa08b, 0x8c64, 0xe8b0, 0x37b6, 0xfb1e, 0xa960, 0x1, 0x0);
        gbc.writeMem(0xa08b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8c64, gbc.sp());
        EXPECT(0xa08d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa08b));
        EXPECT(0x2d, gbc.readMem(0xa08c));
        // CB 2D 0011
        gbc.setState(0xd745, 0x96fb, 0x6d30, 0xbdf0, 0xce15, 0x8d75, 0x0, 0x0);
        gbc.writeMem(0xd745, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x96fb, gbc.sp());
        EXPECT(0xd747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd745));
        EXPECT(0x2d, gbc.readMem(0xd746));
        // CB 2D 0012
        gbc.setState(0x39a7, 0xd724, 0x4b70, 0x169c, 0x5fec, 0x51b8, 0x1, 0x1);
        gbc.writeMem(0x39a7, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd724, gbc.sp());
        EXPECT(0x39a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0013
        gbc.setState(0x199, 0x3926, 0xf260, 0x9457, 0xcbe6, 0x1f86, 0x0, 0x0);
        gbc.writeMem(0x199, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3926, gbc.sp());
        EXPECT(0x19b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0014
        gbc.setState(0x304e, 0x5cf0, 0x31b0, 0x65f7, 0xf800, 0xc471, 0x1, 0x1);
        gbc.writeMem(0x304e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5cf0, gbc.sp());
        EXPECT(0x3050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0015
        gbc.setState(0xb1dc, 0x5430, 0xf6d0, 0xd8d1, 0xfb85, 0xceee, 0x1, 0x0);
        gbc.writeMem(0xb1dc, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5430, gbc.sp());
        EXPECT(0xb1de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1dc));
        EXPECT(0x2d, gbc.readMem(0xb1dd));
        // CB 2D 0016
        gbc.setState(0xefba, 0x5950, 0xacc0, 0x298a, 0xfb07, 0xd537, 0x0, 0x0);
        gbc.writeMem(0xefba, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5950, gbc.sp());
        EXPECT(0xefbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefba));
        EXPECT(0x2d, gbc.readMem(0xefbb));
        // CB 2D 0017
        gbc.setState(0x4bf5, 0x44cc, 0x7c90, 0xddec, 0x65e0, 0xb04d, 0x1, 0x1);
        gbc.writeMem(0x4bf5, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x44cc, gbc.sp());
        EXPECT(0x4bf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0018
        gbc.setState(0x4240, 0x10aa, 0xfb90, 0x6a88, 0xab5, 0x5fec, 0x1, 0x1);
        gbc.writeMem(0x4240, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x10aa, gbc.sp());
        EXPECT(0x4242, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0019
        gbc.setState(0x5b0d, 0xeb9f, 0xbb60, 0x18fa, 0x4372, 0x49d1, 0x1, 0x0);
        gbc.writeMem(0x5b0d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xeb9f, gbc.sp());
        EXPECT(0x5b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 001B
        gbc.setState(0xc326, 0xc08d, 0x3e50, 0xfa31, 0x5e6, 0x3920, 0x1, 0x0);
        gbc.writeMem(0xc326, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc08d, gbc.sp());
        EXPECT(0xc328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc326));
        EXPECT(0x2d, gbc.readMem(0xc327));
        // CB 2D 001C
        gbc.setState(0x70aa, 0x9a83, 0x4b40, 0xdd65, 0xf734, 0x20c5, 0x1, 0x0);
        gbc.writeMem(0x70aa, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9a83, gbc.sp());
        EXPECT(0x70ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 001D
        gbc.setState(0x7e12, 0xfa44, 0x48e0, 0xebc5, 0xbad6, 0x5c47, 0x0, 0x1);
        gbc.writeMem(0x7e12, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xfa44, gbc.sp());
        EXPECT(0x7e14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 001E
        gbc.setState(0xd323, 0xb6e, 0x9140, 0xf03, 0x61d7, 0x78cf, 0x0, 0x1);
        gbc.writeMem(0xd323, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb6e, gbc.sp());
        EXPECT(0xd325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd323));
        EXPECT(0x2d, gbc.readMem(0xd324));
        // CB 2D 001F
        gbc.setState(0x1d63, 0xbcff, 0x6390, 0x98f6, 0x74b, 0x1173, 0x0, 0x1);
        gbc.writeMem(0x1d63, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbcff, gbc.sp());
        EXPECT(0x1d65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0020
        gbc.setState(0xa403, 0x29ec, 0x9f50, 0x34b2, 0x5536, 0xcc3a, 0x0, 0x1);
        gbc.writeMem(0xa403, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x29ec, gbc.sp());
        EXPECT(0xa405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa403));
        EXPECT(0x2d, gbc.readMem(0xa404));
        // CB 2D 0021
        gbc.setState(0xe126, 0x978, 0xbc20, 0xf354, 0xd88a, 0x2f0a, 0x0, 0x0);
        gbc.writeMem(0xe126, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x978, gbc.sp());
        EXPECT(0xe128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe126));
        EXPECT(0x2d, gbc.readMem(0xe127));
        // CB 2D 0022
        gbc.setState(0x4eca, 0x61ef, 0x59e0, 0xd4fd, 0x1e92, 0x5cda, 0x0, 0x0);
        gbc.writeMem(0x4eca, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x61ef, gbc.sp());
        EXPECT(0x4ecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0023
        gbc.setState(0x2dc4, 0x96f, 0x1a90, 0xe511, 0xa0dc, 0x8aba, 0x0, 0x1);
        gbc.writeMem(0x2dc4, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x96f, gbc.sp());
        EXPECT(0x2dc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0024
        gbc.setState(0x968b, 0xd7a1, 0xa9a0, 0xf345, 0x5430, 0x30d0, 0x1, 0x0);
        gbc.writeMem(0x968b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd7a1, gbc.sp());
        EXPECT(0x968d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x968b));
        EXPECT(0x2d, gbc.readMem(0x968c));
        // CB 2D 0025
        gbc.setState(0x6e28, 0x82bd, 0xd740, 0x7aea, 0x60ed, 0x52e3, 0x0, 0x0);
        gbc.writeMem(0x6e28, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x82bd, gbc.sp());
        EXPECT(0x6e2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0026
        gbc.setState(0x1805, 0x7f2e, 0xfc00, 0xf8c0, 0x6f, 0xae60, 0x0, 0x0);
        gbc.writeMem(0x1805, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7f2e, gbc.sp());
        EXPECT(0x1807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0027
        gbc.setState(0x6e7e, 0x7b6f, 0x7490, 0x6df6, 0x3738, 0xc4b6, 0x0, 0x0);
        gbc.writeMem(0x6e7e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7b6f, gbc.sp());
        EXPECT(0x6e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0028
        gbc.setState(0xa0ba, 0xe44a, 0xfb00, 0x3fe8, 0x4a1b, 0x973e, 0x0, 0x1);
        gbc.writeMem(0xa0ba, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe44a, gbc.sp());
        EXPECT(0xa0bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ba));
        EXPECT(0x2d, gbc.readMem(0xa0bb));
        // CB 2D 0029
        gbc.setState(0x2f56, 0x840f, 0xf350, 0x1c61, 0x39c7, 0x3f80, 0x0, 0x0);
        gbc.writeMem(0x2f56, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x840f, gbc.sp());
        EXPECT(0x2f58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 002A
        gbc.setState(0x1148, 0xf392, 0x80c0, 0x2eb7, 0x9810, 0x2371, 0x0, 0x0);
        gbc.writeMem(0x1148, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf392, gbc.sp());
        EXPECT(0x114a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 002B
        gbc.setState(0xeea5, 0x840, 0x1f80, 0x699, 0xe6a7, 0x266d, 0x1, 0x0);
        gbc.writeMem(0xeea5, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x840, gbc.sp());
        EXPECT(0xeea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea5));
        EXPECT(0x2d, gbc.readMem(0xeea6));
        // CB 2D 002C
        gbc.setState(0xe3d9, 0x7e59, 0x8400, 0x51b9, 0xe64e, 0x4a36, 0x0, 0x1);
        gbc.writeMem(0xe3d9, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7e59, gbc.sp());
        EXPECT(0xe3db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3d9));
        EXPECT(0x2d, gbc.readMem(0xe3da));
        // CB 2D 002D
        gbc.setState(0x3fb5, 0x4225, 0x1890, 0x60ed, 0x6a48, 0x10c4, 0x1, 0x0);
        gbc.writeMem(0x3fb5, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4225, gbc.sp());
        EXPECT(0x3fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 002E
        gbc.setState(0x9384, 0x55cb, 0x8980, 0x874, 0x9d9b, 0xcb41, 0x0, 0x1);
        gbc.writeMem(0x9384, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x55cb, gbc.sp());
        EXPECT(0x9386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9384));
        EXPECT(0x2d, gbc.readMem(0x9385));
        // CB 2D 0030
        gbc.setState(0x426e, 0x43c1, 0x1a50, 0x8334, 0xca87, 0xe377, 0x0, 0x1);
        gbc.writeMem(0x426e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x43c1, gbc.sp());
        EXPECT(0x4270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0031
        gbc.setState(0xac55, 0x1207, 0x3470, 0x562f, 0x997a, 0x6912, 0x1, 0x0);
        gbc.writeMem(0xac55, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1207, gbc.sp());
        EXPECT(0xac57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac55));
        EXPECT(0x2d, gbc.readMem(0xac56));
        // CB 2D 0032
        gbc.setState(0x1640, 0xe9c7, 0xc810, 0xd871, 0x2bbf, 0xaa65, 0x1, 0x1);
        gbc.writeMem(0x1640, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe9c7, gbc.sp());
        EXPECT(0x1642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0033
        gbc.setState(0xdc59, 0xf00e, 0x8f40, 0xbf3a, 0x6ded, 0xaf3c, 0x1, 0x1);
        gbc.writeMem(0xdc59, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf00e, gbc.sp());
        EXPECT(0xdc5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc59));
        EXPECT(0x2d, gbc.readMem(0xdc5a));
        // CB 2D 0034
        gbc.setState(0xe74e, 0xe640, 0xce90, 0x40, 0x9df9, 0x3d67, 0x0, 0x1);
        gbc.writeMem(0xe74e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe640, gbc.sp());
        EXPECT(0xe750, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe74e));
        EXPECT(0x2d, gbc.readMem(0xe74f));
        // CB 2D 0035
        gbc.setState(0xc328, 0x1bc0, 0xf270, 0xe6da, 0x48d1, 0xe8aa, 0x1, 0x0);
        gbc.writeMem(0xc328, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1bc0, gbc.sp());
        EXPECT(0xc32a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc328));
        EXPECT(0x2d, gbc.readMem(0xc329));
        // CB 2D 0036
        gbc.setState(0xeb00, 0x7383, 0xd710, 0x2aec, 0x7a27, 0xe2bb, 0x1, 0x1);
        gbc.writeMem(0xeb00, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7383, gbc.sp());
        EXPECT(0xeb02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb00));
        EXPECT(0x2d, gbc.readMem(0xeb01));
        // CB 2D 0037
        gbc.setState(0x1813, 0xdbc6, 0x3780, 0xb66a, 0x94ec, 0xae79, 0x0, 0x1);
        gbc.writeMem(0x1813, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xdbc6, gbc.sp());
        EXPECT(0x1815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0038
        gbc.setState(0x34b3, 0x7d58, 0x2fc0, 0xf21b, 0x7c1a, 0xf993, 0x1, 0x1);
        gbc.writeMem(0x34b3, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7d58, gbc.sp());
        EXPECT(0x34b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0039
        gbc.setState(0xd30, 0xbc94, 0xe360, 0xeb1d, 0xd27d, 0xa3f2, 0x0, 0x1);
        gbc.writeMem(0xd30, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbc94, gbc.sp());
        EXPECT(0xd32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 003A
        gbc.setState(0xe2e2, 0x99f8, 0xa8c0, 0xd56e, 0x7ab6, 0xc60a, 0x1, 0x0);
        gbc.writeMem(0xe2e2, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x99f8, gbc.sp());
        EXPECT(0xe2e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2e2));
        EXPECT(0x2d, gbc.readMem(0xe2e3));
        // CB 2D 003B
        gbc.setState(0x39d4, 0x4b3a, 0x8e90, 0xbc9b, 0xc098, 0xccbc, 0x0, 0x0);
        gbc.writeMem(0x39d4, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4b3a, gbc.sp());
        EXPECT(0x39d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 003C
        gbc.setState(0x52e7, 0xa259, 0x8780, 0xf85a, 0xea2a, 0xa96e, 0x1, 0x1);
        gbc.writeMem(0x52e7, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa259, gbc.sp());
        EXPECT(0x52e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 003D
        gbc.setState(0x61f, 0x8340, 0x37b0, 0x29ab, 0x4984, 0x6998, 0x1, 0x0);
        gbc.writeMem(0x61f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8340, gbc.sp());
        EXPECT(0x621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 003E
        gbc.setState(0xd3c7, 0x1709, 0xbbd0, 0xcca4, 0xb679, 0xdd9, 0x1, 0x0);
        gbc.writeMem(0xd3c7, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1709, gbc.sp());
        EXPECT(0xd3c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3c7));
        EXPECT(0x2d, gbc.readMem(0xd3c8));
        // CB 2D 003F
        gbc.setState(0x1055, 0x727e, 0xcf30, 0xb078, 0x43c9, 0xa214, 0x1, 0x1);
        gbc.writeMem(0x1055, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x727e, gbc.sp());
        EXPECT(0x1057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0040
        gbc.setState(0x29d5, 0xd367, 0xe5f0, 0x8b2a, 0xac85, 0x4, 0x1, 0x1);
        gbc.writeMem(0x29d5, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd367, gbc.sp());
        EXPECT(0x29d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0041
        gbc.setState(0x1d9d, 0xa527, 0xb4e0, 0xa6e6, 0xd8e1, 0xf66a, 0x0, 0x1);
        gbc.writeMem(0x1d9d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa527, gbc.sp());
        EXPECT(0x1d9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0042
        gbc.setState(0x726c, 0xe9aa, 0xf0d0, 0x6e1c, 0x13c0, 0x5039, 0x1, 0x1);
        gbc.writeMem(0x726c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe9aa, gbc.sp());
        EXPECT(0x726e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0043
        gbc.setState(0xc5c9, 0xd5cb, 0x5d20, 0x5d9d, 0x40f4, 0x98da, 0x1, 0x1);
        gbc.writeMem(0xc5c9, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd5cb, gbc.sp());
        EXPECT(0xc5cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c9));
        EXPECT(0x2d, gbc.readMem(0xc5ca));
        // CB 2D 0044
        gbc.setState(0x16c2, 0xad13, 0x43c0, 0x7cd4, 0x5400, 0x68ca, 0x0, 0x1);
        gbc.writeMem(0x16c2, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xad13, gbc.sp());
        EXPECT(0x16c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0045
        gbc.setState(0x5d82, 0x9274, 0xece0, 0x6336, 0x825b, 0xb9af, 0x1, 0x1);
        gbc.writeMem(0x5d82, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9274, gbc.sp());
        EXPECT(0x5d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0046
        gbc.setState(0x82ef, 0xbdd7, 0xcf00, 0x856, 0x94c5, 0xc74b, 0x0, 0x1);
        gbc.writeMem(0x82ef, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xbdd7, gbc.sp());
        EXPECT(0x82f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ef));
        EXPECT(0x2d, gbc.readMem(0x82f0));
        // CB 2D 0047
        gbc.setState(0x8c76, 0xa356, 0xd8c0, 0x2fb0, 0x9896, 0xd4a2, 0x1, 0x0);
        gbc.writeMem(0x8c76, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa356, gbc.sp());
        EXPECT(0x8c78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c76));
        EXPECT(0x2d, gbc.readMem(0x8c77));
        // CB 2D 0048
        gbc.setState(0xce76, 0x3be3, 0xbbd0, 0x573c, 0xba25, 0x9fba, 0x1, 0x1);
        gbc.writeMem(0xce76, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3be3, gbc.sp());
        EXPECT(0xce78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce76));
        EXPECT(0x2d, gbc.readMem(0xce77));
        // CB 2D 0049
        gbc.setState(0x8fa9, 0xb1ee, 0x3280, 0x3385, 0xa5c1, 0xcab9, 0x1, 0x1);
        gbc.writeMem(0x8fa9, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb1ee, gbc.sp());
        EXPECT(0x8fab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa9));
        EXPECT(0x2d, gbc.readMem(0x8faa));
        // CB 2D 004A
        gbc.setState(0x34cb, 0xeb9b, 0xe560, 0xb8e7, 0x9f0b, 0xf639, 0x0, 0x1);
        gbc.writeMem(0x34cb, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xeb9b, gbc.sp());
        EXPECT(0x34cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 004B
        gbc.setState(0x4027, 0x2da5, 0x97f0, 0xc0f2, 0x96a3, 0x614e, 0x0, 0x0);
        gbc.writeMem(0x4027, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2da5, gbc.sp());
        EXPECT(0x4029, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 004C
        gbc.setState(0x993a, 0x8c62, 0x93b0, 0x8ada, 0x6e33, 0x4653, 0x1, 0x0);
        gbc.writeMem(0x993a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8c62, gbc.sp());
        EXPECT(0x993c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x993a));
        EXPECT(0x2d, gbc.readMem(0x993b));
        // CB 2D 004D
        gbc.setState(0x843, 0x2036, 0x94e0, 0x1c3e, 0x5e5b, 0x969d, 0x1, 0x1);
        gbc.writeMem(0x843, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2036, gbc.sp());
        EXPECT(0x845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 004E
        gbc.setState(0x7103, 0xe65d, 0x2cb0, 0x2e7, 0x24cd, 0x5cae, 0x0, 0x1);
        gbc.writeMem(0x7103, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe65d, gbc.sp());
        EXPECT(0x7105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 004F
        gbc.setState(0x4125, 0x97ba, 0xd0f0, 0x4c8c, 0x90dc, 0xa159, 0x0, 0x1);
        gbc.writeMem(0x4125, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x97ba, gbc.sp());
        EXPECT(0x4127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0050
        gbc.setState(0x9fab, 0x4e2a, 0x26d0, 0xd3f2, 0x5359, 0xd06a, 0x0, 0x1);
        gbc.writeMem(0x9fab, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4e2a, gbc.sp());
        EXPECT(0x9fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fab));
        EXPECT(0x2d, gbc.readMem(0x9fac));
        // CB 2D 0051
        gbc.setState(0x725, 0x585f, 0x80a0, 0xce8d, 0x87cb, 0x16d0, 0x0, 0x0);
        gbc.writeMem(0x725, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x585f, gbc.sp());
        EXPECT(0x727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0052
        gbc.setState(0xdad9, 0x4887, 0x2370, 0x7305, 0x5f13, 0x5e43, 0x1, 0x0);
        gbc.writeMem(0xdad9, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4887, gbc.sp());
        EXPECT(0xdadb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdad9));
        EXPECT(0x2d, gbc.readMem(0xdada));
        // CB 2D 0053
        gbc.setState(0xb536, 0xbd8f, 0xe300, 0x470e, 0xeda, 0xe97f, 0x1, 0x0);
        gbc.writeMem(0xb536, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbd8f, gbc.sp());
        EXPECT(0xb538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb536));
        EXPECT(0x2d, gbc.readMem(0xb537));
        // CB 2D 0054
        gbc.setState(0x9bdb, 0xee00, 0x4000, 0x13e6, 0xf9ab, 0xa4b5, 0x1, 0x0);
        gbc.writeMem(0x9bdb, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xee00, gbc.sp());
        EXPECT(0x9bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bdb));
        EXPECT(0x2d, gbc.readMem(0x9bdc));
        // CB 2D 0055
        gbc.setState(0x49eb, 0xe97b, 0xd070, 0xa0a6, 0x98d8, 0xce22, 0x1, 0x1);
        gbc.writeMem(0x49eb, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe97b, gbc.sp());
        EXPECT(0x49ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0056
        gbc.setState(0x2ff1, 0x16da, 0xd040, 0x3d43, 0xc2d8, 0x7137, 0x0, 0x0);
        gbc.writeMem(0x2ff1, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x16da, gbc.sp());
        EXPECT(0x2ff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0058
        gbc.setState(0xe90c, 0x44a9, 0x2e00, 0xbe18, 0xe9bf, 0x1b67, 0x0, 0x1);
        gbc.writeMem(0xe90c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x44a9, gbc.sp());
        EXPECT(0xe90e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe90c));
        EXPECT(0x2d, gbc.readMem(0xe90d));
        // CB 2D 005A
        gbc.setState(0xdc38, 0x37a8, 0xf2c0, 0x6637, 0xf873, 0x6bb0, 0x1, 0x1);
        gbc.writeMem(0xdc38, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x37a8, gbc.sp());
        EXPECT(0xdc3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc38));
        EXPECT(0x2d, gbc.readMem(0xdc39));
        // CB 2D 005B
        gbc.setState(0x3204, 0x1c0a, 0xe8d0, 0x10f8, 0xcb66, 0xd24a, 0x0, 0x1);
        gbc.writeMem(0x3204, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1c0a, gbc.sp());
        EXPECT(0x3206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 005C
        gbc.setState(0xe0c2, 0xb39b, 0x5a10, 0x4bad, 0xa81f, 0x551f, 0x1, 0x0);
        gbc.writeMem(0xe0c2, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb39b, gbc.sp());
        EXPECT(0xe0c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0c2));
        EXPECT(0x2d, gbc.readMem(0xe0c3));
        // CB 2D 005D
        gbc.setState(0x1c48, 0xc97d, 0x8e80, 0x7d25, 0xaa9f, 0xd53a, 0x0, 0x0);
        gbc.writeMem(0x1c48, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc97d, gbc.sp());
        EXPECT(0x1c4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 005E
        gbc.setState(0xb1cc, 0xb1d1, 0xd570, 0xfdd6, 0xd84b, 0x6942, 0x1, 0x0);
        gbc.writeMem(0xb1cc, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb1d1, gbc.sp());
        EXPECT(0xb1ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1cc));
        EXPECT(0x2d, gbc.readMem(0xb1cd));
        // CB 2D 005F
        gbc.setState(0x2eca, 0x7ffe, 0xc080, 0x387c, 0x398f, 0xfbfd, 0x1, 0x0);
        gbc.writeMem(0x2eca, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7ffe, gbc.sp());
        EXPECT(0x2ecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0060
        gbc.setState(0x4eb1, 0x7028, 0x5340, 0x4b28, 0x1f1c, 0x6f9b, 0x1, 0x1);
        gbc.writeMem(0x4eb1, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7028, gbc.sp());
        EXPECT(0x4eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0061
        gbc.setState(0x22cc, 0xed3e, 0xecb0, 0xe394, 0x8959, 0xbcc2, 0x0, 0x1);
        gbc.writeMem(0x22cc, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xed3e, gbc.sp());
        EXPECT(0x22ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0062
        gbc.setState(0x9125, 0xe93b, 0x4f40, 0x7af, 0x24b1, 0x11d7, 0x0, 0x1);
        gbc.writeMem(0x9125, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe93b, gbc.sp());
        EXPECT(0x9127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9125));
        EXPECT(0x2d, gbc.readMem(0x9126));
        // CB 2D 0063
        gbc.setState(0x7e5e, 0x35ad, 0xe660, 0x5e2d, 0x259b, 0x1354, 0x0, 0x1);
        gbc.writeMem(0x7e5e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x35ad, gbc.sp());
        EXPECT(0x7e60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0064
        gbc.setState(0x2fd7, 0x21b1, 0x230, 0x5f12, 0x13df, 0xf971, 0x0, 0x1);
        gbc.writeMem(0x2fd7, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x21b1, gbc.sp());
        EXPECT(0x2fd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0065
        gbc.setState(0x8d07, 0xfa1d, 0x6000, 0xf236, 0x6586, 0xd674, 0x0, 0x0);
        gbc.writeMem(0x8d07, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xfa1d, gbc.sp());
        EXPECT(0x8d09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d07));
        EXPECT(0x2d, gbc.readMem(0x8d08));
        // CB 2D 0066
        gbc.setState(0x8a4, 0xad9f, 0x23e0, 0xb8ad, 0x68c7, 0x862e, 0x0, 0x0);
        gbc.writeMem(0x8a4, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xad9f, gbc.sp());
        EXPECT(0x8a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0067
        gbc.setState(0x8188, 0xbf18, 0x3a80, 0x3e93, 0x15a4, 0x715a, 0x0, 0x1);
        gbc.writeMem(0x8188, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbf18, gbc.sp());
        EXPECT(0x818a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8188));
        EXPECT(0x2d, gbc.readMem(0x8189));
        // CB 2D 0068
        gbc.setState(0x899f, 0x8048, 0xaf20, 0x4a8f, 0xa76a, 0x78c6, 0x1, 0x0);
        gbc.writeMem(0x899f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8048, gbc.sp());
        EXPECT(0x89a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x899f));
        EXPECT(0x2d, gbc.readMem(0x89a0));
        // CB 2D 0069
        gbc.setState(0xcb06, 0x853a, 0x7be0, 0x7710, 0xe97d, 0x7ba2, 0x1, 0x1);
        gbc.writeMem(0xcb06, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x853a, gbc.sp());
        EXPECT(0xcb08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb06));
        EXPECT(0x2d, gbc.readMem(0xcb07));
        // CB 2D 006A
        gbc.setState(0x44d8, 0x427e, 0xb2b0, 0x28b6, 0xe782, 0xa8, 0x1, 0x1);
        gbc.writeMem(0x44d8, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x427e, gbc.sp());
        EXPECT(0x44da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 006B
        gbc.setState(0x4211, 0x2a17, 0x5890, 0xe3ff, 0x9895, 0xed91, 0x1, 0x1);
        gbc.writeMem(0x4211, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2a17, gbc.sp());
        EXPECT(0x4213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 006C
        gbc.setState(0x9b0b, 0xcf21, 0x5290, 0xcc53, 0x6ad2, 0xbf8f, 0x1, 0x1);
        gbc.writeMem(0x9b0b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xcf21, gbc.sp());
        EXPECT(0x9b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b0b));
        EXPECT(0x2d, gbc.readMem(0x9b0c));
        // CB 2D 006D
        gbc.setState(0xc1bb, 0xb1b6, 0x68c0, 0xa161, 0xd2bc, 0x74e5, 0x1, 0x0);
        gbc.writeMem(0xc1bb, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb1b6, gbc.sp());
        EXPECT(0xc1bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1bb));
        EXPECT(0x2d, gbc.readMem(0xc1bc));
        // CB 2D 006E
        gbc.setState(0xedf5, 0x8865, 0x74f0, 0xdff6, 0x7f72, 0x680f, 0x1, 0x0);
        gbc.writeMem(0xedf5, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8865, gbc.sp());
        EXPECT(0xedf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedf5));
        EXPECT(0x2d, gbc.readMem(0xedf6));
        // CB 2D 006F
        gbc.setState(0x3396, 0x7b19, 0xf250, 0xd3e4, 0x891f, 0x8a53, 0x1, 0x0);
        gbc.writeMem(0x3396, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7b19, gbc.sp());
        EXPECT(0x3398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0070
        gbc.setState(0x6603, 0x9944, 0x8df0, 0x71c2, 0x4caf, 0xa87e, 0x0, 0x0);
        gbc.writeMem(0x6603, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9944, gbc.sp());
        EXPECT(0x6605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0071
        gbc.setState(0xaf98, 0xcc61, 0xf580, 0xa290, 0x16f0, 0xdcc3, 0x0, 0x0);
        gbc.writeMem(0xaf98, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xcc61, gbc.sp());
        EXPECT(0xaf9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf98));
        EXPECT(0x2d, gbc.readMem(0xaf99));
        // CB 2D 0072
        gbc.setState(0x26b7, 0x4b44, 0x8820, 0x562c, 0x42b2, 0x9851, 0x0, 0x1);
        gbc.writeMem(0x26b7, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4b44, gbc.sp());
        EXPECT(0x26b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0073
        gbc.setState(0xe0b0, 0x44dc, 0xecb0, 0x8e94, 0x3061, 0x6d7b, 0x0, 0x0);
        gbc.writeMem(0xe0b0, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x44dc, gbc.sp());
        EXPECT(0xe0b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b0));
        EXPECT(0x2d, gbc.readMem(0xe0b1));
        // CB 2D 0074
        gbc.setState(0xab9a, 0xe51c, 0xda0, 0x2ef4, 0x482f, 0x91b1, 0x0, 0x1);
        gbc.writeMem(0xab9a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe51c, gbc.sp());
        EXPECT(0xab9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab9a));
        EXPECT(0x2d, gbc.readMem(0xab9b));
        // CB 2D 0075
        gbc.setState(0x65be, 0x635f, 0x2050, 0xb43e, 0x3540, 0xac5e, 0x1, 0x1);
        gbc.writeMem(0x65be, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x635f, gbc.sp());
        EXPECT(0x65c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0076
        gbc.setState(0xb387, 0x8234, 0x9510, 0xacd9, 0xe2a4, 0xb6ab, 0x0, 0x1);
        gbc.writeMem(0xb387, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8234, gbc.sp());
        EXPECT(0xb389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb387));
        EXPECT(0x2d, gbc.readMem(0xb388));
        // CB 2D 0078
        gbc.setState(0xd6dd, 0xdcac, 0x8640, 0x2aa0, 0x8410, 0xc833, 0x0, 0x0);
        gbc.writeMem(0xd6dd, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdcac, gbc.sp());
        EXPECT(0xd6df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6dd));
        EXPECT(0x2d, gbc.readMem(0xd6de));
        // CB 2D 0079
        gbc.setState(0xcb6f, 0xa922, 0xd650, 0x719d, 0x3111, 0x2c07, 0x0, 0x0);
        gbc.writeMem(0xcb6f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa922, gbc.sp());
        EXPECT(0xcb71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb6f));
        EXPECT(0x2d, gbc.readMem(0xcb70));
        // CB 2D 007A
        gbc.setState(0xa995, 0xbf8f, 0x6390, 0xbf47, 0x5733, 0x77b, 0x0, 0x1);
        gbc.writeMem(0xa995, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xbf8f, gbc.sp());
        EXPECT(0xa997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa995));
        EXPECT(0x2d, gbc.readMem(0xa996));
        // CB 2D 007B
        gbc.setState(0x4b2a, 0x74c2, 0x5330, 0x89ef, 0xa5d2, 0x1b41, 0x0, 0x1);
        gbc.writeMem(0x4b2a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x74c2, gbc.sp());
        EXPECT(0x4b2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 007C
        gbc.setState(0x8bc2, 0x44c, 0xc4d0, 0x72c2, 0xe138, 0x6607, 0x0, 0x1);
        gbc.writeMem(0x8bc2, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x44c, gbc.sp());
        EXPECT(0x8bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc2));
        EXPECT(0x2d, gbc.readMem(0x8bc3));
        // CB 2D 007D
        gbc.setState(0x2884, 0x8020, 0x9150, 0x39db, 0x3693, 0x1450, 0x0, 0x0);
        gbc.writeMem(0x2884, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8020, gbc.sp());
        EXPECT(0x2886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 007E
        gbc.setState(0x2368, 0x70c5, 0x8050, 0x11e2, 0x76d6, 0xd434, 0x0, 0x0);
        gbc.writeMem(0x2368, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x70c5, gbc.sp());
        EXPECT(0x236a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0080
        gbc.setState(0x7a90, 0xb83a, 0x2ad0, 0x612c, 0xb9cf, 0x97ed, 0x1, 0x1);
        gbc.writeMem(0x7a90, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb83a, gbc.sp());
        EXPECT(0x7a92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0081
        gbc.setState(0x3945, 0xce0, 0x5bd0, 0xebd1, 0x4a57, 0x62e6, 0x0, 0x0);
        gbc.writeMem(0x3945, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xce0, gbc.sp());
        EXPECT(0x3947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0082
        gbc.setState(0x5c8d, 0x2f87, 0x55b0, 0x912b, 0xe73d, 0xbaaf, 0x1, 0x1);
        gbc.writeMem(0x5c8d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2f87, gbc.sp());
        EXPECT(0x5c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0083
        gbc.setState(0xeacf, 0x8038, 0xa3b0, 0x51d9, 0x68d5, 0xb1d2, 0x0, 0x0);
        gbc.writeMem(0xeacf, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8038, gbc.sp());
        EXPECT(0xead1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeacf));
        EXPECT(0x2d, gbc.readMem(0xead0));
        // CB 2D 0084
        gbc.setState(0x35eb, 0x143c, 0xa780, 0x3fa5, 0x16fe, 0x40e, 0x1, 0x1);
        gbc.writeMem(0x35eb, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x143c, gbc.sp());
        EXPECT(0x35ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0085
        gbc.setState(0x6eee, 0x1074, 0xf520, 0x6383, 0x5892, 0x20f6, 0x0, 0x0);
        gbc.writeMem(0x6eee, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1074, gbc.sp());
        EXPECT(0x6ef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0086
        gbc.setState(0xb6e0, 0x6bf1, 0x38d0, 0x7dcc, 0xc674, 0xd91e, 0x0, 0x0);
        gbc.writeMem(0xb6e0, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6bf1, gbc.sp());
        EXPECT(0xb6e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6e0));
        EXPECT(0x2d, gbc.readMem(0xb6e1));
        // CB 2D 0087
        gbc.setState(0xa39c, 0x222a, 0xa820, 0x2e5b, 0xd197, 0xc1e8, 0x0, 0x0);
        gbc.writeMem(0xa39c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x222a, gbc.sp());
        EXPECT(0xa39e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa39c));
        EXPECT(0x2d, gbc.readMem(0xa39d));
        // CB 2D 0088
        gbc.setState(0xcb65, 0xd108, 0x580, 0xa601, 0x32a5, 0xf7bf, 0x0, 0x1);
        gbc.writeMem(0xcb65, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd108, gbc.sp());
        EXPECT(0xcb67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb65));
        EXPECT(0x2d, gbc.readMem(0xcb66));
        // CB 2D 0089
        gbc.setState(0x20f0, 0xc62b, 0xddd0, 0x771b, 0xc0c8, 0x19d4, 0x0, 0x0);
        gbc.writeMem(0x20f0, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc62b, gbc.sp());
        EXPECT(0x20f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 008A
        gbc.setState(0xd202, 0x9133, 0x83b0, 0xd875, 0xf823, 0x6c41, 0x1, 0x1);
        gbc.writeMem(0xd202, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9133, gbc.sp());
        EXPECT(0xd204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd202));
        EXPECT(0x2d, gbc.readMem(0xd203));
        // CB 2D 008B
        gbc.setState(0x620d, 0x585d, 0xfaa0, 0xa9df, 0xdd1, 0x847, 0x1, 0x1);
        gbc.writeMem(0x620d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x585d, gbc.sp());
        EXPECT(0x620f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 008C
        gbc.setState(0xdba, 0x3a26, 0xd490, 0x7a75, 0x84d5, 0x1d5c, 0x1, 0x1);
        gbc.writeMem(0xdba, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3a26, gbc.sp());
        EXPECT(0xdbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 008D
        gbc.setState(0xb2e2, 0x3631, 0xa8b0, 0x21d0, 0x9fde, 0xccae, 0x0, 0x0);
        gbc.writeMem(0xb2e2, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3631, gbc.sp());
        EXPECT(0xb2e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2e2));
        EXPECT(0x2d, gbc.readMem(0xb2e3));
        // CB 2D 008E
        gbc.setState(0x4165, 0x556e, 0x70f0, 0xb008, 0x658f, 0x9a5d, 0x0, 0x0);
        gbc.writeMem(0x4165, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x556e, gbc.sp());
        EXPECT(0x4167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 008F
        gbc.setState(0xd7d8, 0x979, 0xe080, 0x9acb, 0xbc10, 0xb3b, 0x1, 0x1);
        gbc.writeMem(0xd7d8, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x979, gbc.sp());
        EXPECT(0xd7da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7d8));
        EXPECT(0x2d, gbc.readMem(0xd7d9));
        // CB 2D 0090
        gbc.setState(0xee2d, 0xdf55, 0xe290, 0x5f1d, 0xe60b, 0x8571, 0x1, 0x1);
        gbc.writeMem(0xee2d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xdf55, gbc.sp());
        EXPECT(0xee2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee2d));
        EXPECT(0x2d, gbc.readMem(0xee2e));
        // CB 2D 0091
        gbc.setState(0x6a87, 0xaff5, 0xb660, 0x23c2, 0x2b0f, 0xfcbc, 0x0, 0x0);
        gbc.writeMem(0x6a87, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xaff5, gbc.sp());
        EXPECT(0x6a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0092
        gbc.setState(0x3cc0, 0x42f0, 0xcc50, 0x60b0, 0x25b4, 0x9ad9, 0x0, 0x0);
        gbc.writeMem(0x3cc0, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x42f0, gbc.sp());
        EXPECT(0x3cc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0095
        gbc.setState(0xc1af, 0xb948, 0xba40, 0xfb81, 0x7266, 0xa78f, 0x0, 0x0);
        gbc.writeMem(0xc1af, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb948, gbc.sp());
        EXPECT(0xc1b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1af));
        EXPECT(0x2d, gbc.readMem(0xc1b0));
        // CB 2D 0096
        gbc.setState(0x6c9a, 0xcf57, 0x6930, 0xe42d, 0xc4ea, 0x80b6, 0x0, 0x1);
        gbc.writeMem(0x6c9a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcf57, gbc.sp());
        EXPECT(0x6c9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0097
        gbc.setState(0x719, 0x390c, 0x46b0, 0xa7d5, 0x663f, 0xd184, 0x1, 0x1);
        gbc.writeMem(0x719, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x390c, gbc.sp());
        EXPECT(0x71b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0098
        gbc.setState(0xe476, 0x9179, 0x60b0, 0x82ef, 0xe9d2, 0xbd9c, 0x0, 0x1);
        gbc.writeMem(0xe476, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9179, gbc.sp());
        EXPECT(0xe478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe476));
        EXPECT(0x2d, gbc.readMem(0xe477));
        // CB 2D 0099
        gbc.setState(0x1c60, 0x39f9, 0x3500, 0x45c, 0x704, 0x98f5, 0x1, 0x1);
        gbc.writeMem(0x1c60, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x39f9, gbc.sp());
        EXPECT(0x1c62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 009A
        gbc.setState(0x96ea, 0xa61d, 0x8b0, 0x38c, 0x2be9, 0x2a26, 0x0, 0x1);
        gbc.writeMem(0x96ea, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa61d, gbc.sp());
        EXPECT(0x96ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ea));
        EXPECT(0x2d, gbc.readMem(0x96eb));
        // CB 2D 009B
        gbc.setState(0x3d19, 0x8b55, 0xaf80, 0x647b, 0x14b6, 0x208c, 0x1, 0x0);
        gbc.writeMem(0x3d19, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8b55, gbc.sp());
        EXPECT(0x3d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 009C
        gbc.setState(0xb671, 0x98d2, 0xd000, 0xd716, 0x1d3b, 0x7f91, 0x1, 0x1);
        gbc.writeMem(0xb671, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x98d2, gbc.sp());
        EXPECT(0xb673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb671));
        EXPECT(0x2d, gbc.readMem(0xb672));
        // CB 2D 009D
        gbc.setState(0x3e86, 0xef89, 0xd150, 0x3f9a, 0x8a78, 0x309b, 0x1, 0x1);
        gbc.writeMem(0x3e86, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xef89, gbc.sp());
        EXPECT(0x3e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 009E
        gbc.setState(0x8fd2, 0x7121, 0x5e80, 0xaa37, 0x91ac, 0xe85d, 0x1, 0x0);
        gbc.writeMem(0x8fd2, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7121, gbc.sp());
        EXPECT(0x8fd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fd2));
        EXPECT(0x2d, gbc.readMem(0x8fd3));
        // CB 2D 009F
        gbc.setState(0xb160, 0x563a, 0x2800, 0x7f3e, 0x56c9, 0xd7ad, 0x0, 0x1);
        gbc.writeMem(0xb160, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x563a, gbc.sp());
        EXPECT(0xb162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb160));
        EXPECT(0x2d, gbc.readMem(0xb161));
        // CB 2D 00A1
        gbc.setState(0x6ebd, 0x4247, 0x3c70, 0x4ce8, 0x6cb, 0x52a0, 0x1, 0x1);
        gbc.writeMem(0x6ebd, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4247, gbc.sp());
        EXPECT(0x6ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 00A3
        gbc.setState(0x2c20, 0x74d7, 0x3670, 0x20f2, 0x5d1, 0xf041, 0x1, 0x0);
        gbc.writeMem(0x2c20, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x74d7, gbc.sp());
        EXPECT(0x2c22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 00A4
        gbc.setState(0xbd49, 0x3d2f, 0x6920, 0xf52b, 0x9dd1, 0xf662, 0x0, 0x0);
        gbc.writeMem(0xbd49, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3d2f, gbc.sp());
        EXPECT(0xbd4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd49));
        EXPECT(0x2d, gbc.readMem(0xbd4a));
        // CB 2D 00A6
        gbc.setState(0x5bc0, 0x6632, 0x4af0, 0x1437, 0x3e88, 0x8aeb, 0x0, 0x0);
        gbc.writeMem(0x5bc0, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6632, gbc.sp());
        EXPECT(0x5bc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 00A7
        gbc.setState(0xa08, 0xc415, 0x3b00, 0xf5e9, 0x932d, 0x258c, 0x1, 0x0);
        gbc.writeMem(0xa08, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc415, gbc.sp());
        EXPECT(0xa0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 00A8
        gbc.setState(0x5241, 0x9ac4, 0x6dd0, 0x5e25, 0x8af5, 0xf64c, 0x1, 0x0);
        gbc.writeMem(0x5241, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9ac4, gbc.sp());
        EXPECT(0x5243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 00A9
        gbc.setState(0x6d64, 0x6f04, 0x6480, 0x59e, 0x141b, 0x6ffb, 0x0, 0x0);
        gbc.writeMem(0x6d64, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6f04, gbc.sp());
        EXPECT(0x6d66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 00AA
        gbc.setState(0xb25, 0xeefd, 0x3340, 0x63ad, 0xaa8b, 0x3896, 0x0, 0x1);
        gbc.writeMem(0xb25, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xeefd, gbc.sp());
        EXPECT(0xb27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 00AB
        gbc.setState(0x934d, 0x9840, 0x6ae0, 0xe9ee, 0xd19d, 0x22e3, 0x0, 0x0);
        gbc.writeMem(0x934d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9840, gbc.sp());
        EXPECT(0x934f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x934d));
        EXPECT(0x2d, gbc.readMem(0x934e));
        // CB 2D 00AC
        gbc.setState(0xdc59, 0xc1e8, 0xc050, 0x4413, 0xe504, 0x1e33, 0x1, 0x0);
        gbc.writeMem(0xdc59, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc1e8, gbc.sp());
        EXPECT(0xdc5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc59));
        EXPECT(0x2d, gbc.readMem(0xdc5a));
        // CB 2D 00AD
        gbc.setState(0xe96e, 0x1858, 0x8cf0, 0xb667, 0x593d, 0x329f, 0x0, 0x0);
        gbc.writeMem(0xe96e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1858, gbc.sp());
        EXPECT(0xe970, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe96e));
        EXPECT(0x2d, gbc.readMem(0xe96f));
        // CB 2D 00AE
        gbc.setState(0x4f02, 0xf761, 0x6230, 0x2eca, 0xa78d, 0x275e, 0x0, 0x0);
        gbc.writeMem(0x4f02, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf761, gbc.sp());
        EXPECT(0x4f04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 00AF
        gbc.setState(0xe62f, 0xb95f, 0x8100, 0x1df4, 0x65af, 0x50d4, 0x0, 0x1);
        gbc.writeMem(0xe62f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb95f, gbc.sp());
        EXPECT(0xe631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe62f));
        EXPECT(0x2d, gbc.readMem(0xe630));
        // CB 2D 00B0
        gbc.setState(0x5404, 0x501f, 0xf9d0, 0x8023, 0xe65f, 0x2d4e, 0x0, 0x1);
        gbc.writeMem(0x5404, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x501f, gbc.sp());
        EXPECT(0x5406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 00B1
        gbc.setState(0x6eb1, 0xda2e, 0x3f70, 0x7838, 0xc841, 0xd50d, 0x1, 0x0);
        gbc.writeMem(0x6eb1, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xda2e, gbc.sp());
        EXPECT(0x6eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 00B2
        gbc.setState(0x45af, 0x401b, 0xf010, 0x6ca9, 0xa3d1, 0x804d, 0x0, 0x1);
        gbc.writeMem(0x45af, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x401b, gbc.sp());
        EXPECT(0x45b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 00B3
        gbc.setState(0xaee, 0x841, 0x9930, 0x7349, 0xa5b0, 0x3da8, 0x0, 0x1);
        gbc.writeMem(0xaee, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x841, gbc.sp());
        EXPECT(0xaf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 00B4
        gbc.setState(0x867e, 0xf969, 0x6f10, 0xbdf6, 0xd27e, 0x15d6, 0x1, 0x1);
        gbc.writeMem(0x867e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf969, gbc.sp());
        EXPECT(0x8680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x867e));
        EXPECT(0x2d, gbc.readMem(0x867f));
        // CB 2D 00B5
        gbc.setState(0xbbed, 0xa709, 0x39e0, 0x5a85, 0x5d94, 0xb1bd, 0x1, 0x1);
        gbc.writeMem(0xbbed, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa709, gbc.sp());
        EXPECT(0xbbef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbed));
        EXPECT(0x2d, gbc.readMem(0xbbee));
        // CB 2D 00B6
        gbc.setState(0xcf38, 0xed1f, 0x5d50, 0x59b4, 0x44cb, 0xa096, 0x0, 0x1);
        gbc.writeMem(0xcf38, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xed1f, gbc.sp());
        EXPECT(0xcf3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf38));
        EXPECT(0x2d, gbc.readMem(0xcf39));
        // CB 2D 00B7
        gbc.setState(0xcc16, 0xa2d9, 0x6fa0, 0xa2a2, 0xc9cd, 0xcfc9, 0x0, 0x0);
        gbc.writeMem(0xcc16, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa2d9, gbc.sp());
        EXPECT(0xcc18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc16));
        EXPECT(0x2d, gbc.readMem(0xcc17));
        // CB 2D 00B8
        gbc.setState(0xdbe0, 0xe6d2, 0xe4c0, 0x49d0, 0x2966, 0x333b, 0x0, 0x0);
        gbc.writeMem(0xdbe0, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe6d2, gbc.sp());
        EXPECT(0xdbe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe0));
        EXPECT(0x2d, gbc.readMem(0xdbe1));
        // CB 2D 00B9
        gbc.setState(0xaaec, 0x80d3, 0x8b60, 0x1fea, 0xe1aa, 0x545b, 0x0, 0x0);
        gbc.writeMem(0xaaec, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x80d3, gbc.sp());
        EXPECT(0xaaee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaec));
        EXPECT(0x2d, gbc.readMem(0xaaed));
        // CB 2D 00BA
        gbc.setState(0xb441, 0x2a70, 0xc5c0, 0x8340, 0x34b2, 0x28f5, 0x0, 0x1);
        gbc.writeMem(0xb441, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2a70, gbc.sp());
        EXPECT(0xb443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb441));
        EXPECT(0x2d, gbc.readMem(0xb442));
        // CB 2D 00BB
        gbc.setState(0x86ec, 0x6777, 0x5b0, 0x1916, 0x84c5, 0x9d40, 0x0, 0x1);
        gbc.writeMem(0x86ec, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6777, gbc.sp());
        EXPECT(0x86ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ec));
        EXPECT(0x2d, gbc.readMem(0x86ed));
        // CB 2D 00BC
        gbc.setState(0xe3b9, 0x5d59, 0xfb0, 0xc257, 0x5932, 0x4b56, 0x0, 0x1);
        gbc.writeMem(0xe3b9, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5d59, gbc.sp());
        EXPECT(0xe3bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3b9));
        EXPECT(0x2d, gbc.readMem(0xe3ba));
        // CB 2D 00BD
        gbc.setState(0xbab1, 0x81b3, 0xde10, 0xbf6f, 0xbae7, 0x82f0, 0x0, 0x0);
        gbc.writeMem(0xbab1, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x81b3, gbc.sp());
        EXPECT(0xbab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbab1));
        EXPECT(0x2d, gbc.readMem(0xbab2));
        // CB 2D 00BE
        gbc.setState(0x15fa, 0xe96a, 0x530, 0x3ed9, 0x2d9f, 0x2d64, 0x1, 0x1);
        gbc.writeMem(0x15fa, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe96a, gbc.sp());
        EXPECT(0x15fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 00BF
        gbc.setState(0x9de4, 0xb36a, 0x4a30, 0x5e7e, 0xc62b, 0xb4c8, 0x1, 0x0);
        gbc.writeMem(0x9de4, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb36a, gbc.sp());
        EXPECT(0x9de6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de4));
        EXPECT(0x2d, gbc.readMem(0x9de5));
        // CB 2D 00C0
        gbc.setState(0x8135, 0x9598, 0xd930, 0x612, 0x94ca, 0xcfbd, 0x1, 0x0);
        gbc.writeMem(0x8135, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9598, gbc.sp());
        EXPECT(0x8137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8135));
        EXPECT(0x2d, gbc.readMem(0x8136));
        // CB 2D 00C1
        gbc.setState(0x8084, 0x4ce3, 0xe9f0, 0x19f9, 0x595c, 0x9443, 0x1, 0x0);
        gbc.writeMem(0x8084, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4ce3, gbc.sp());
        EXPECT(0x8086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8084));
        EXPECT(0x2d, gbc.readMem(0x8085));
        // CB 2D 00C2
        gbc.setState(0x30e2, 0xe294, 0xc480, 0xac4a, 0xf0ff, 0xd584, 0x1, 0x1);
        gbc.writeMem(0x30e2, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe294, gbc.sp());
        EXPECT(0x30e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 00C3
        gbc.setState(0x21d0, 0x5a77, 0xf8c0, 0x36e, 0xeb1a, 0x20fd, 0x0, 0x1);
        gbc.writeMem(0x21d0, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5a77, gbc.sp());
        EXPECT(0x21d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 00C4
        gbc.setState(0xe220, 0x9d08, 0xa320, 0xa924, 0x3236, 0xd7c4, 0x1, 0x1);
        gbc.writeMem(0xe220, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9d08, gbc.sp());
        EXPECT(0xe222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe220));
        EXPECT(0x2d, gbc.readMem(0xe221));
        // CB 2D 00C5
        gbc.setState(0xae67, 0x43c8, 0xd170, 0x756, 0x463, 0x2ece, 0x1, 0x1);
        gbc.writeMem(0xae67, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x43c8, gbc.sp());
        EXPECT(0xae69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae67));
        EXPECT(0x2d, gbc.readMem(0xae68));
        // CB 2D 00C6
        gbc.setState(0x5531, 0x64ae, 0x3b00, 0x7ef1, 0xd3c6, 0xd3e, 0x1, 0x1);
        gbc.writeMem(0x5531, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x64ae, gbc.sp());
        EXPECT(0x5533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 00C7
        gbc.setState(0xce2f, 0x95e, 0x8d50, 0x301f, 0xa72f, 0x1da4, 0x0, 0x0);
        gbc.writeMem(0xce2f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x95e, gbc.sp());
        EXPECT(0xce31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce2f));
        EXPECT(0x2d, gbc.readMem(0xce30));
        // CB 2D 00C8
        gbc.setState(0xba12, 0xb202, 0x850, 0xd1bb, 0xc7fd, 0x8f31, 0x0, 0x1);
        gbc.writeMem(0xba12, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb202, gbc.sp());
        EXPECT(0xba14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba12));
        EXPECT(0x2d, gbc.readMem(0xba13));
        // CB 2D 00C9
        gbc.setState(0x1ab6, 0x3fc4, 0x6640, 0xf171, 0x85b1, 0x5abd, 0x1, 0x0);
        gbc.writeMem(0x1ab6, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3fc4, gbc.sp());
        EXPECT(0x1ab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 00CA
        gbc.setState(0x83d5, 0xd22, 0x1380, 0x9d48, 0x8e1b, 0xc961, 0x0, 0x0);
        gbc.writeMem(0x83d5, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd22, gbc.sp());
        EXPECT(0x83d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d5));
        EXPECT(0x2d, gbc.readMem(0x83d6));
        // CB 2D 00CB
        gbc.setState(0x1b67, 0xd6f8, 0x5f40, 0x7751, 0x5664, 0xff3a, 0x0, 0x0);
        gbc.writeMem(0x1b67, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd6f8, gbc.sp());
        EXPECT(0x1b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 00CC
        gbc.setState(0x8f77, 0x3144, 0xdb30, 0xdec2, 0xff8d, 0xdf05, 0x1, 0x1);
        gbc.writeMem(0x8f77, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3144, gbc.sp());
        EXPECT(0x8f79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f77));
        EXPECT(0x2d, gbc.readMem(0x8f78));
        // CB 2D 00CD
        gbc.setState(0xa460, 0x7faf, 0xb680, 0x573, 0x485f, 0xced7, 0x1, 0x1);
        gbc.writeMem(0xa460, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7faf, gbc.sp());
        EXPECT(0xa462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa460));
        EXPECT(0x2d, gbc.readMem(0xa461));
        // CB 2D 00CE
        gbc.setState(0xc24d, 0x95d1, 0xc730, 0x71a7, 0x9454, 0x54c, 0x1, 0x1);
        gbc.writeMem(0xc24d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x95d1, gbc.sp());
        EXPECT(0xc24f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc24d));
        EXPECT(0x2d, gbc.readMem(0xc24e));
        // CB 2D 00CF
        gbc.setState(0x58bf, 0x9c4c, 0x9d00, 0x6084, 0xb031, 0x657b, 0x0, 0x0);
        gbc.writeMem(0x58bf, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9c4c, gbc.sp());
        EXPECT(0x58c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 00D0
        gbc.setState(0xa02f, 0x30de, 0xc620, 0xea4f, 0xbdcd, 0x1971, 0x0, 0x0);
        gbc.writeMem(0xa02f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x30de, gbc.sp());
        EXPECT(0xa031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa02f));
        EXPECT(0x2d, gbc.readMem(0xa030));
        // CB 2D 00D1
        gbc.setState(0xb1be, 0xdd30, 0x2270, 0x2f, 0xf1d9, 0xa77d, 0x0, 0x0);
        gbc.writeMem(0xb1be, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xdd30, gbc.sp());
        EXPECT(0xb1c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1be));
        EXPECT(0x2d, gbc.readMem(0xb1bf));
        // CB 2D 00D2
        gbc.setState(0xe285, 0xf513, 0xb350, 0x868c, 0xc53d, 0xfa02, 0x0, 0x0);
        gbc.writeMem(0xe285, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf513, gbc.sp());
        EXPECT(0xe287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe285));
        EXPECT(0x2d, gbc.readMem(0xe286));
        // CB 2D 00D3
        gbc.setState(0x451, 0xa27a, 0x8e80, 0xa2cc, 0xf4be, 0x5d6d, 0x0, 0x1);
        gbc.writeMem(0x451, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa27a, gbc.sp());
        EXPECT(0x453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 00D4
        gbc.setState(0x682b, 0x8482, 0x78c0, 0xa16c, 0xc5a9, 0x6e0b, 0x0, 0x0);
        gbc.writeMem(0x682b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8482, gbc.sp());
        EXPECT(0x682d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 00D5
        gbc.setState(0x5079, 0x2e, 0x9d70, 0xa18c, 0xcbf1, 0x66bc, 0x0, 0x0);
        gbc.writeMem(0x5079, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2e, gbc.sp());
        EXPECT(0x507b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 00D6
        gbc.setState(0xb8f, 0x944b, 0x3ab0, 0x6e18, 0x6b16, 0x712f, 0x0, 0x0);
        gbc.writeMem(0xb8f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x944b, gbc.sp());
        EXPECT(0xb91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 00D7
        gbc.setState(0x1146, 0xcc44, 0x42c0, 0xce55, 0xca25, 0xb238, 0x1, 0x0);
        gbc.writeMem(0x1146, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xcc44, gbc.sp());
        EXPECT(0x1148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 00D8
        gbc.setState(0x7793, 0xbda5, 0x9530, 0x516f, 0x7c86, 0x2e37, 0x1, 0x0);
        gbc.writeMem(0x7793, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xbda5, gbc.sp());
        EXPECT(0x7795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 00D9
        gbc.setState(0xc928, 0x6edc, 0xd130, 0xe0c7, 0x3294, 0xfdc1, 0x0, 0x1);
        gbc.writeMem(0xc928, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6edc, gbc.sp());
        EXPECT(0xc92a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc928));
        EXPECT(0x2d, gbc.readMem(0xc929));
        // CB 2D 00DA
        gbc.setState(0xc8ad, 0xaf8c, 0x7680, 0x9638, 0x89f8, 0xcc4f, 0x1, 0x0);
        gbc.writeMem(0xc8ad, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xaf8c, gbc.sp());
        EXPECT(0xc8af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8ad));
        EXPECT(0x2d, gbc.readMem(0xc8ae));
        // CB 2D 00DB
        gbc.setState(0xc627, 0x2544, 0x1940, 0x4c89, 0xdc12, 0x78b1, 0x0, 0x1);
        gbc.writeMem(0xc627, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2544, gbc.sp());
        EXPECT(0xc629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc627));
        EXPECT(0x2d, gbc.readMem(0xc628));
        // CB 2D 00DD
        gbc.setState(0xb794, 0x1536, 0x6e90, 0x2029, 0x5bc2, 0x45ad, 0x0, 0x0);
        gbc.writeMem(0xb794, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1536, gbc.sp());
        EXPECT(0xb796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb794));
        EXPECT(0x2d, gbc.readMem(0xb795));
        // CB 2D 00DE
        gbc.setState(0x5984, 0xac99, 0x9b70, 0x6adc, 0x6c7, 0xf2a1, 0x1, 0x1);
        gbc.writeMem(0x5984, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xac99, gbc.sp());
        EXPECT(0x5986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 00DF
        gbc.setState(0x76c6, 0x2fe3, 0xc220, 0x59b4, 0xaf98, 0x7dab, 0x1, 0x1);
        gbc.writeMem(0x76c6, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2fe3, gbc.sp());
        EXPECT(0x76c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 00E1
        gbc.setState(0x4fdd, 0x89d7, 0xe880, 0xf211, 0xdd5c, 0xfb39, 0x0, 0x0);
        gbc.writeMem(0x4fdd, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x89d7, gbc.sp());
        EXPECT(0x4fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 00E2
        gbc.setState(0x9851, 0x5737, 0x2a50, 0x54fc, 0x1959, 0xa4a7, 0x1, 0x0);
        gbc.writeMem(0x9851, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5737, gbc.sp());
        EXPECT(0x9853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9851));
        EXPECT(0x2d, gbc.readMem(0x9852));
        // CB 2D 00E3
        gbc.setState(0xe4bf, 0xddf9, 0xa710, 0x3cc0, 0x276b, 0xb353, 0x0, 0x0);
        gbc.writeMem(0xe4bf, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xddf9, gbc.sp());
        EXPECT(0xe4c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4bf));
        EXPECT(0x2d, gbc.readMem(0xe4c0));
        // CB 2D 00E4
        gbc.setState(0x87e9, 0x90fb, 0x2740, 0x42d5, 0x7eb5, 0xae42, 0x0, 0x1);
        gbc.writeMem(0x87e9, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x90fb, gbc.sp());
        EXPECT(0x87eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e9));
        EXPECT(0x2d, gbc.readMem(0x87ea));
        // CB 2D 00E5
        gbc.setState(0xef59, 0x6545, 0x88a0, 0x2d5f, 0x2cb1, 0x34df, 0x1, 0x1);
        gbc.writeMem(0xef59, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6545, gbc.sp());
        EXPECT(0xef5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef59));
        EXPECT(0x2d, gbc.readMem(0xef5a));
        // CB 2D 00E6
        gbc.setState(0x901f, 0xb2bc, 0xda80, 0x25ff, 0xa388, 0x2dba, 0x1, 0x0);
        gbc.writeMem(0x901f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb2bc, gbc.sp());
        EXPECT(0x9021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x901f));
        EXPECT(0x2d, gbc.readMem(0x9020));
        // CB 2D 00E7
        gbc.setState(0x646d, 0xbebd, 0x9480, 0x8a2d, 0x174, 0x43a6, 0x0, 0x1);
        gbc.writeMem(0x646d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbebd, gbc.sp());
        EXPECT(0x646f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 00E8
        gbc.setState(0x2d88, 0x20cc, 0x8e30, 0x8e47, 0x6196, 0x8775, 0x0, 0x1);
        gbc.writeMem(0x2d88, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x20cc, gbc.sp());
        EXPECT(0x2d8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 00E9
        gbc.setState(0x45cb, 0xd56f, 0x8a70, 0xd2a9, 0x9e95, 0x268a, 0x1, 0x0);
        gbc.writeMem(0x45cb, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd56f, gbc.sp());
        EXPECT(0x45cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 00EA
        gbc.setState(0x8059, 0x2a5e, 0xc740, 0x36fb, 0x5c0, 0x65a4, 0x0, 0x0);
        gbc.writeMem(0x8059, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2a5e, gbc.sp());
        EXPECT(0x805b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8059));
        EXPECT(0x2d, gbc.readMem(0x805a));
        // CB 2D 00EB
        gbc.setState(0x99d3, 0xb392, 0xb880, 0xe83b, 0xf06c, 0x2cde, 0x0, 0x1);
        gbc.writeMem(0x99d3, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb392, gbc.sp());
        EXPECT(0x99d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99d3));
        EXPECT(0x2d, gbc.readMem(0x99d4));
        // CB 2D 00EC
        gbc.setState(0x6c4a, 0x4e7d, 0x5490, 0xe186, 0x4083, 0xdbaf, 0x1, 0x0);
        gbc.writeMem(0x6c4a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4e7d, gbc.sp());
        EXPECT(0x6c4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 00ED
        gbc.setState(0x23d, 0x59e9, 0x8210, 0x776a, 0xe170, 0xdd86, 0x0, 0x1);
        gbc.writeMem(0x23d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x59e9, gbc.sp());
        EXPECT(0x23f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 00EE
        gbc.setState(0x9984, 0xf6ac, 0xf500, 0xdabb, 0x3681, 0xe77d, 0x1, 0x1);
        gbc.writeMem(0x9984, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf6ac, gbc.sp());
        EXPECT(0x9986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9984));
        EXPECT(0x2d, gbc.readMem(0x9985));
        // CB 2D 00EF
        gbc.setState(0xaea0, 0x58e7, 0x8f80, 0x82a, 0xaa95, 0x357d, 0x0, 0x0);
        gbc.writeMem(0xaea0, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x58e7, gbc.sp());
        EXPECT(0xaea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaea0));
        EXPECT(0x2d, gbc.readMem(0xaea1));
        // CB 2D 00F0
        gbc.setState(0x6f22, 0xe952, 0x6000, 0xbb95, 0xe0e8, 0x830b, 0x0, 0x0);
        gbc.writeMem(0x6f22, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe952, gbc.sp());
        EXPECT(0x6f24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 00F1
        gbc.setState(0x5090, 0x2305, 0xf1a0, 0x1967, 0x24c4, 0x34fe, 0x1, 0x1);
        gbc.writeMem(0x5090, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2305, gbc.sp());
        EXPECT(0x5092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 00F2
        gbc.setState(0x53e2, 0x14c9, 0x5300, 0x9c24, 0xea3c, 0x5070, 0x1, 0x0);
        gbc.writeMem(0x53e2, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x14c9, gbc.sp());
        EXPECT(0x53e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 00F3
        gbc.setState(0x2a8d, 0xdc59, 0x86f0, 0x91e4, 0x3a66, 0x27a6, 0x0, 0x0);
        gbc.writeMem(0x2a8d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xdc59, gbc.sp());
        EXPECT(0x2a8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 00F4
        gbc.setState(0x4017, 0x59a8, 0x3490, 0xbd85, 0x3bba, 0x6a92, 0x0, 0x0);
        gbc.writeMem(0x4017, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x59a8, gbc.sp());
        EXPECT(0x4019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 00F5
        gbc.setState(0x956f, 0x6a3d, 0xd6c0, 0x7d89, 0xa024, 0xe326, 0x1, 0x1);
        gbc.writeMem(0x956f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6a3d, gbc.sp());
        EXPECT(0x9571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x956f));
        EXPECT(0x2d, gbc.readMem(0x9570));
        // CB 2D 00F6
        gbc.setState(0xbf81, 0x1d0c, 0xe780, 0x8097, 0xb8df, 0x24f8, 0x1, 0x1);
        gbc.writeMem(0xbf81, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1d0c, gbc.sp());
        EXPECT(0xbf83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf81));
        EXPECT(0x2d, gbc.readMem(0xbf82));
        // CB 2D 00F7
        gbc.setState(0x6569, 0x327c, 0xc0a0, 0xabbb, 0xf056, 0x8844, 0x1, 0x0);
        gbc.writeMem(0x6569, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x327c, gbc.sp());
        EXPECT(0x656b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 00F8
        gbc.setState(0x90db, 0x8ddf, 0x4d50, 0x22ad, 0xa819, 0xd818, 0x1, 0x0);
        gbc.writeMem(0x90db, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8ddf, gbc.sp());
        EXPECT(0x90dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90db));
        EXPECT(0x2d, gbc.readMem(0x90dc));
        // CB 2D 00F9
        gbc.setState(0x749c, 0x34ba, 0x9290, 0x6abf, 0x8fd0, 0x1c37, 0x0, 0x0);
        gbc.writeMem(0x749c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x34ba, gbc.sp());
        EXPECT(0x749e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 00FA
        gbc.setState(0x6e7d, 0xab1, 0xf490, 0x2bed, 0x97e4, 0xaacb, 0x1, 0x1);
        gbc.writeMem(0x6e7d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xab1, gbc.sp());
        EXPECT(0x6e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 00FB
        gbc.setState(0x169e, 0x1ed6, 0x7410, 0xf7b9, 0xa82e, 0x1be3, 0x1, 0x0);
        gbc.writeMem(0x169e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1ed6, gbc.sp());
        EXPECT(0x16a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 00FC
        gbc.setState(0x37e6, 0xa508, 0x1dc0, 0x78d, 0xa8f8, 0x8378, 0x0, 0x0);
        gbc.writeMem(0x37e6, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa508, gbc.sp());
        EXPECT(0x37e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 00FD
        gbc.setState(0x9e48, 0x5269, 0x9c50, 0xfed0, 0x8d55, 0x67f5, 0x0, 0x0);
        gbc.writeMem(0x9e48, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5269, gbc.sp());
        EXPECT(0x9e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e48));
        EXPECT(0x2d, gbc.readMem(0x9e49));
        // CB 2D 00FE
        gbc.setState(0x6336, 0x1f57, 0x3500, 0x92b3, 0xc0e8, 0xb74c, 0x1, 0x1);
        gbc.writeMem(0x6336, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1f57, gbc.sp());
        EXPECT(0x6338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 00FF
        gbc.setState(0x7877, 0x72e5, 0x24c0, 0x655d, 0xeef4, 0xa7eb, 0x1, 0x1);
        gbc.writeMem(0x7877, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x72e5, gbc.sp());
        EXPECT(0x7879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0100
        gbc.setState(0x129f, 0x3ac7, 0x66d0, 0xed46, 0x7824, 0xd15c, 0x0, 0x0);
        gbc.writeMem(0x129f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3ac7, gbc.sp());
        EXPECT(0x12a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0101
        gbc.setState(0x53a2, 0x20ee, 0xaaa0, 0xfe43, 0x8ec7, 0xe7b4, 0x0, 0x1);
        gbc.writeMem(0x53a2, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x20ee, gbc.sp());
        EXPECT(0x53a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0102
        gbc.setState(0x63e7, 0xf669, 0xb2f0, 0x42dc, 0xf8da, 0x96f2, 0x1, 0x0);
        gbc.writeMem(0x63e7, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf669, gbc.sp());
        EXPECT(0x63e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0103
        gbc.setState(0x158b, 0x8e2a, 0x7f70, 0x471b, 0x423, 0x6f75, 0x0, 0x1);
        gbc.writeMem(0x158b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8e2a, gbc.sp());
        EXPECT(0x158d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0104
        gbc.setState(0x4ea1, 0x75bf, 0x2f10, 0x2b4a, 0x9391, 0x7a78, 0x1, 0x1);
        gbc.writeMem(0x4ea1, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x75bf, gbc.sp());
        EXPECT(0x4ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0105
        gbc.setState(0x2e30, 0xe4d6, 0x2f40, 0x6845, 0x8242, 0x367d, 0x1, 0x1);
        gbc.writeMem(0x2e30, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe4d6, gbc.sp());
        EXPECT(0x2e32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0106
        gbc.setState(0xc444, 0x9633, 0x89a0, 0xaed3, 0x60f0, 0x1245, 0x0, 0x0);
        gbc.writeMem(0xc444, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9633, gbc.sp());
        EXPECT(0xc446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc444));
        EXPECT(0x2d, gbc.readMem(0xc445));
        // CB 2D 0107
        gbc.setState(0x5995, 0x7605, 0xd060, 0xf222, 0x3ed2, 0x8342, 0x0, 0x0);
        gbc.writeMem(0x5995, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7605, gbc.sp());
        EXPECT(0x5997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0108
        gbc.setState(0xcb63, 0x71d1, 0x1070, 0x1aa5, 0xca88, 0x1414, 0x0, 0x1);
        gbc.writeMem(0xcb63, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x71d1, gbc.sp());
        EXPECT(0xcb65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb63));
        EXPECT(0x2d, gbc.readMem(0xcb64));
        // CB 2D 0109
        gbc.setState(0xe21f, 0x1e6, 0xb80, 0x162e, 0x7976, 0x2f23, 0x1, 0x1);
        gbc.writeMem(0xe21f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1e6, gbc.sp());
        EXPECT(0xe221, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe21f));
        EXPECT(0x2d, gbc.readMem(0xe220));
        // CB 2D 010B
        gbc.setState(0x14dd, 0xdadc, 0x4c50, 0x92c, 0xc5d8, 0x7faa, 0x1, 0x1);
        gbc.writeMem(0x14dd, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xdadc, gbc.sp());
        EXPECT(0x14df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 010C
        gbc.setState(0xca, 0x2b45, 0x4150, 0x752d, 0x5c0f, 0x6230, 0x1, 0x1);
        gbc.writeMem(0xca, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2b45, gbc.sp());
        EXPECT(0xcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 010D
        gbc.setState(0xee5a, 0x4ade, 0xbc60, 0x9eaa, 0x1fe6, 0xff1a, 0x0, 0x0);
        gbc.writeMem(0xee5a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4ade, gbc.sp());
        EXPECT(0xee5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee5a));
        EXPECT(0x2d, gbc.readMem(0xee5b));
        // CB 2D 010E
        gbc.setState(0xa54b, 0x81e, 0xa4a0, 0x2a8f, 0x4cb9, 0x1d76, 0x0, 0x1);
        gbc.writeMem(0xa54b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x81e, gbc.sp());
        EXPECT(0xa54d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa54b));
        EXPECT(0x2d, gbc.readMem(0xa54c));
        // CB 2D 010F
        gbc.setState(0x99e6, 0x82de, 0xbc20, 0x9fed, 0xa55a, 0x1322, 0x0, 0x0);
        gbc.writeMem(0x99e6, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x82de, gbc.sp());
        EXPECT(0x99e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99e6));
        EXPECT(0x2d, gbc.readMem(0x99e7));
        // CB 2D 0110
        gbc.setState(0xeedc, 0x32f, 0xdcd0, 0xc8c6, 0x87ba, 0x11fa, 0x1, 0x1);
        gbc.writeMem(0xeedc, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x32f, gbc.sp());
        EXPECT(0xeede, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeedc));
        EXPECT(0x2d, gbc.readMem(0xeedd));
        // CB 2D 0111
        gbc.setState(0x5c9e, 0xfa02, 0x7690, 0x8100, 0x14fb, 0x360, 0x0, 0x0);
        gbc.writeMem(0x5c9e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfa02, gbc.sp());
        EXPECT(0x5ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0112
        gbc.setState(0x3f12, 0x13f2, 0x1180, 0xf42c, 0x34a0, 0x601e, 0x0, 0x1);
        gbc.writeMem(0x3f12, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x13f2, gbc.sp());
        EXPECT(0x3f14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0113
        gbc.setState(0xe683, 0x96ac, 0x8a50, 0xd668, 0x241c, 0x163f, 0x1, 0x1);
        gbc.writeMem(0xe683, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x96ac, gbc.sp());
        EXPECT(0xe685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe683));
        EXPECT(0x2d, gbc.readMem(0xe684));
        // CB 2D 0114
        gbc.setState(0xa6d7, 0x6f92, 0xff40, 0xf8c4, 0xc62d, 0xaf6d, 0x0, 0x0);
        gbc.writeMem(0xa6d7, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6f92, gbc.sp());
        EXPECT(0xa6d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d7));
        EXPECT(0x2d, gbc.readMem(0xa6d8));
        // CB 2D 0115
        gbc.setState(0x7294, 0xdd94, 0x72d0, 0x3cef, 0x33c0, 0xacc0, 0x1, 0x1);
        gbc.writeMem(0x7294, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xdd94, gbc.sp());
        EXPECT(0x7296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0116
        gbc.setState(0x2fed, 0x15af, 0xc610, 0x172b, 0x86cf, 0xd0e3, 0x0, 0x1);
        gbc.writeMem(0x2fed, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x15af, gbc.sp());
        EXPECT(0x2fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0117
        gbc.setState(0xafb6, 0x8154, 0xb1b0, 0x9ed1, 0x335f, 0xb2b1, 0x1, 0x1);
        gbc.writeMem(0xafb6, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8154, gbc.sp());
        EXPECT(0xafb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafb6));
        EXPECT(0x2d, gbc.readMem(0xafb7));
        // CB 2D 0118
        gbc.setState(0x53af, 0xebb9, 0x5f20, 0x589a, 0xaf21, 0x9cb0, 0x1, 0x0);
        gbc.writeMem(0x53af, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xebb9, gbc.sp());
        EXPECT(0x53b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 011A
        gbc.setState(0x811a, 0x3f89, 0x31b0, 0xacb5, 0xd8f0, 0x27d4, 0x1, 0x1);
        gbc.writeMem(0x811a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3f89, gbc.sp());
        EXPECT(0x811c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x811a));
        EXPECT(0x2d, gbc.readMem(0x811b));
        // CB 2D 011B
        gbc.setState(0xc120, 0xc19a, 0x6230, 0xf25, 0x37c6, 0x7bf4, 0x0, 0x1);
        gbc.writeMem(0xc120, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc19a, gbc.sp());
        EXPECT(0xc122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc120));
        EXPECT(0x2d, gbc.readMem(0xc121));
        // CB 2D 011C
        gbc.setState(0xe9a, 0x2354, 0xe3a0, 0xfdd2, 0x53aa, 0x6d81, 0x1, 0x0);
        gbc.writeMem(0xe9a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2354, gbc.sp());
        EXPECT(0xe9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 011D
        gbc.setState(0x6dbd, 0x12e1, 0x7d20, 0xed7c, 0xba91, 0xe299, 0x1, 0x1);
        gbc.writeMem(0x6dbd, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x12e1, gbc.sp());
        EXPECT(0x6dbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 011E
        gbc.setState(0xd235, 0x8bc5, 0x1f30, 0x1108, 0x6037, 0x203f, 0x1, 0x0);
        gbc.writeMem(0xd235, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8bc5, gbc.sp());
        EXPECT(0xd237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd235));
        EXPECT(0x2d, gbc.readMem(0xd236));
        // CB 2D 011F
        gbc.setState(0x2a6a, 0xbd22, 0x4410, 0x999d, 0x989b, 0xa144, 0x1, 0x1);
        gbc.writeMem(0x2a6a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbd22, gbc.sp());
        EXPECT(0x2a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0120
        gbc.setState(0xa684, 0x9e1, 0x7360, 0xc870, 0x33ac, 0x3437, 0x1, 0x1);
        gbc.writeMem(0xa684, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9e1, gbc.sp());
        EXPECT(0xa686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa684));
        EXPECT(0x2d, gbc.readMem(0xa685));
        // CB 2D 0121
        gbc.setState(0x268f, 0x6ac5, 0xc1f0, 0x5203, 0xe49f, 0xa898, 0x1, 0x1);
        gbc.writeMem(0x268f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6ac5, gbc.sp());
        EXPECT(0x2691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0122
        gbc.setState(0x59b4, 0x3d6b, 0xe730, 0xe00, 0xebbf, 0xe13d, 0x0, 0x0);
        gbc.writeMem(0x59b4, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3d6b, gbc.sp());
        EXPECT(0x59b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0123
        gbc.setState(0x281c, 0xbd3c, 0x3330, 0xef5d, 0x5df7, 0x7189, 0x0, 0x0);
        gbc.writeMem(0x281c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbd3c, gbc.sp());
        EXPECT(0x281e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0124
        gbc.setState(0x1f8a, 0x58e4, 0x16f0, 0x67dc, 0xf5af, 0x9de9, 0x1, 0x0);
        gbc.writeMem(0x1f8a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x58e4, gbc.sp());
        EXPECT(0x1f8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0125
        gbc.setState(0xb014, 0x99ef, 0x1100, 0xbb47, 0xe1da, 0x2604, 0x1, 0x1);
        gbc.writeMem(0xb014, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x99ef, gbc.sp());
        EXPECT(0xb016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb014));
        EXPECT(0x2d, gbc.readMem(0xb015));
        // CB 2D 0126
        gbc.setState(0xe070, 0x58d2, 0x56c0, 0xeb21, 0xb942, 0x53b6, 0x1, 0x1);
        gbc.writeMem(0xe070, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x58d2, gbc.sp());
        EXPECT(0xe072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe070));
        EXPECT(0x2d, gbc.readMem(0xe071));
        // CB 2D 0127
        gbc.setState(0x60ce, 0x5558, 0x57b0, 0xa9e6, 0xb831, 0x6a5b, 0x1, 0x0);
        gbc.writeMem(0x60ce, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5558, gbc.sp());
        EXPECT(0x60d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0128
        gbc.setState(0x2a89, 0xed68, 0x1650, 0x2b4, 0xb7e5, 0x43ac, 0x1, 0x1);
        gbc.writeMem(0x2a89, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xed68, gbc.sp());
        EXPECT(0x2a8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0129
        gbc.setState(0x3d5d, 0xce03, 0xa580, 0xe458, 0x5e57, 0x34c6, 0x1, 0x1);
        gbc.writeMem(0x3d5d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xce03, gbc.sp());
        EXPECT(0x3d5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 012A
        gbc.setState(0x6527, 0x1a79, 0xda0, 0x30ce, 0x8dbf, 0xafac, 0x0, 0x0);
        gbc.writeMem(0x6527, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1a79, gbc.sp());
        EXPECT(0x6529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 012B
        gbc.setState(0x6d6a, 0x5278, 0xef30, 0xcbf2, 0xfe75, 0x429a, 0x0, 0x1);
        gbc.writeMem(0x6d6a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5278, gbc.sp());
        EXPECT(0x6d6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 012D
        gbc.setState(0xd0fe, 0x532b, 0x9300, 0x217e, 0x3062, 0xca8e, 0x0, 0x1);
        gbc.writeMem(0xd0fe, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x532b, gbc.sp());
        EXPECT(0xd100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0fe));
        EXPECT(0x2d, gbc.readMem(0xd0ff));
        // CB 2D 012E
        gbc.setState(0xc910, 0xe49b, 0x57c0, 0xec17, 0x3b72, 0x9369, 0x1, 0x1);
        gbc.writeMem(0xc910, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe49b, gbc.sp());
        EXPECT(0xc912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc910));
        EXPECT(0x2d, gbc.readMem(0xc911));
        // CB 2D 012F
        gbc.setState(0x7cb1, 0x6f44, 0x9ca0, 0x78f9, 0x93ef, 0xe3be, 0x1, 0x1);
        gbc.writeMem(0x7cb1, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6f44, gbc.sp());
        EXPECT(0x7cb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0130
        gbc.setState(0xe6a1, 0xb60d, 0x6570, 0x4ffe, 0xadac, 0xe41a, 0x0, 0x1);
        gbc.writeMem(0xe6a1, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb60d, gbc.sp());
        EXPECT(0xe6a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a1));
        EXPECT(0x2d, gbc.readMem(0xe6a2));
        // CB 2D 0131
        gbc.setState(0x596, 0x4853, 0xeac0, 0xa5ea, 0x1cc8, 0xeff6, 0x0, 0x1);
        gbc.writeMem(0x596, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4853, gbc.sp());
        EXPECT(0x598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0132
        gbc.setState(0x478b, 0x54e6, 0x2d0, 0x5964, 0x7b21, 0xfd1c, 0x1, 0x0);
        gbc.writeMem(0x478b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x54e6, gbc.sp());
        EXPECT(0x478d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0133
        gbc.setState(0x89bb, 0x8785, 0xcd50, 0x698d, 0x5a6e, 0x3fb4, 0x0, 0x0);
        gbc.writeMem(0x89bb, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8785, gbc.sp());
        EXPECT(0x89bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89bb));
        EXPECT(0x2d, gbc.readMem(0x89bc));
        // CB 2D 0134
        gbc.setState(0x16e8, 0x7ffa, 0x5c80, 0x917f, 0x26c9, 0x783b, 0x1, 0x1);
        gbc.writeMem(0x16e8, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7ffa, gbc.sp());
        EXPECT(0x16ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0135
        gbc.setState(0xa559, 0xcbf2, 0x54a0, 0x5153, 0xb629, 0x2043, 0x0, 0x1);
        gbc.writeMem(0xa559, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xcbf2, gbc.sp());
        EXPECT(0xa55b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa559));
        EXPECT(0x2d, gbc.readMem(0xa55a));
        // CB 2D 0136
        gbc.setState(0xb618, 0x99f6, 0xb060, 0x5ee8, 0xb398, 0x3d7c, 0x1, 0x0);
        gbc.writeMem(0xb618, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x99f6, gbc.sp());
        EXPECT(0xb61a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb618));
        EXPECT(0x2d, gbc.readMem(0xb619));
        // CB 2D 0137
        gbc.setState(0x338e, 0xcd97, 0xbfa0, 0x95e7, 0xaab4, 0xd17f, 0x1, 0x0);
        gbc.writeMem(0x338e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xcd97, gbc.sp());
        EXPECT(0x3390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0138
        gbc.setState(0x8e84, 0x12b8, 0x3290, 0x52fe, 0xd439, 0xe6a7, 0x0, 0x0);
        gbc.writeMem(0x8e84, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x12b8, gbc.sp());
        EXPECT(0x8e86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e84));
        EXPECT(0x2d, gbc.readMem(0x8e85));
        // CB 2D 0139
        gbc.setState(0x93e, 0x9585, 0x5210, 0x3daf, 0x31fd, 0x8cc4, 0x1, 0x0);
        gbc.writeMem(0x93e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9585, gbc.sp());
        EXPECT(0x940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 013B
        gbc.setState(0x6f0e, 0x641a, 0x50d0, 0xd877, 0x72df, 0x3fad, 0x1, 0x1);
        gbc.writeMem(0x6f0e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x641a, gbc.sp());
        EXPECT(0x6f10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 013C
        gbc.setState(0xd873, 0xc9d0, 0x2330, 0xea41, 0xe51, 0x6602, 0x0, 0x1);
        gbc.writeMem(0xd873, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc9d0, gbc.sp());
        EXPECT(0xd875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd873));
        EXPECT(0x2d, gbc.readMem(0xd874));
        // CB 2D 013D
        gbc.setState(0xb077, 0x6d70, 0xfc70, 0x8536, 0x270a, 0x1078, 0x1, 0x0);
        gbc.writeMem(0xb077, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6d70, gbc.sp());
        EXPECT(0xb079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb077));
        EXPECT(0x2d, gbc.readMem(0xb078));
        // CB 2D 013E
        gbc.setState(0x66f6, 0x9d99, 0x7090, 0xbec1, 0xc8f4, 0x315f, 0x1, 0x1);
        gbc.writeMem(0x66f6, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9d99, gbc.sp());
        EXPECT(0x66f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 013F
        gbc.setState(0x22b1, 0x3382, 0x87e0, 0xdd9, 0xcfe3, 0xb7a7, 0x0, 0x0);
        gbc.writeMem(0x22b1, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3382, gbc.sp());
        EXPECT(0x22b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0140
        gbc.setState(0x7601, 0x1470, 0xce00, 0x6d94, 0x7e63, 0xc8d3, 0x0, 0x0);
        gbc.writeMem(0x7601, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1470, gbc.sp());
        EXPECT(0x7603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0141
        gbc.setState(0xb9b8, 0x42a5, 0xbac0, 0xc805, 0x4531, 0x64d7, 0x0, 0x0);
        gbc.writeMem(0xb9b8, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x42a5, gbc.sp());
        EXPECT(0xb9ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b8));
        EXPECT(0x2d, gbc.readMem(0xb9b9));
        // CB 2D 0142
        gbc.setState(0xa347, 0x81e5, 0xa730, 0xab03, 0x9f68, 0x5f16, 0x0, 0x1);
        gbc.writeMem(0xa347, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x81e5, gbc.sp());
        EXPECT(0xa349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa347));
        EXPECT(0x2d, gbc.readMem(0xa348));
        // CB 2D 0143
        gbc.setState(0xec24, 0xfc95, 0x2370, 0x691b, 0x15c5, 0x26a4, 0x1, 0x0);
        gbc.writeMem(0xec24, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfc95, gbc.sp());
        EXPECT(0xec26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec24));
        EXPECT(0x2d, gbc.readMem(0xec25));
        // CB 2D 0144
        gbc.setState(0xee06, 0x63d8, 0x9680, 0x3e23, 0x29b2, 0x4d3f, 0x0, 0x1);
        gbc.writeMem(0xee06, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x63d8, gbc.sp());
        EXPECT(0xee08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee06));
        EXPECT(0x2d, gbc.readMem(0xee07));
        // CB 2D 0145
        gbc.setState(0x6b66, 0x458d, 0xe330, 0xeb49, 0x652b, 0x4d0d, 0x0, 0x1);
        gbc.writeMem(0x6b66, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x458d, gbc.sp());
        EXPECT(0x6b68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0146
        gbc.setState(0xe266, 0x6165, 0x7260, 0x351b, 0xb8dd, 0x855d, 0x0, 0x0);
        gbc.writeMem(0xe266, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6165, gbc.sp());
        EXPECT(0xe268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe266));
        EXPECT(0x2d, gbc.readMem(0xe267));
        // CB 2D 0147
        gbc.setState(0x5991, 0x4ebb, 0x890, 0xb0e0, 0x7088, 0x96cf, 0x1, 0x1);
        gbc.writeMem(0x5991, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4ebb, gbc.sp());
        EXPECT(0x5993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0148
        gbc.setState(0x8e93, 0xdcfb, 0x83a0, 0x513e, 0x2367, 0xb87c, 0x0, 0x0);
        gbc.writeMem(0x8e93, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xdcfb, gbc.sp());
        EXPECT(0x8e95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e93));
        EXPECT(0x2d, gbc.readMem(0x8e94));
        // CB 2D 0149
        gbc.setState(0x6bfe, 0xee48, 0xa2f0, 0x4adb, 0x1de, 0x2d06, 0x1, 0x0);
        gbc.writeMem(0x6bfe, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xee48, gbc.sp());
        EXPECT(0x6c00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 014A
        gbc.setState(0x1317, 0xae4, 0x5600, 0xc4cd, 0x18e8, 0x3907, 0x1, 0x0);
        gbc.writeMem(0x1317, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xae4, gbc.sp());
        EXPECT(0x1319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 014B
        gbc.setState(0xd2b6, 0x481f, 0xcc00, 0x8e98, 0x3ff6, 0xa46f, 0x1, 0x0);
        gbc.writeMem(0xd2b6, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x481f, gbc.sp());
        EXPECT(0xd2b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2b6));
        EXPECT(0x2d, gbc.readMem(0xd2b7));
        // CB 2D 014C
        gbc.setState(0x650f, 0x91c8, 0x6e20, 0x74c0, 0x118d, 0x227b, 0x1, 0x0);
        gbc.writeMem(0x650f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x91c8, gbc.sp());
        EXPECT(0x6511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 014D
        gbc.setState(0xcaee, 0xa0a6, 0x7b00, 0xee6e, 0xc88f, 0x7c2a, 0x0, 0x1);
        gbc.writeMem(0xcaee, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa0a6, gbc.sp());
        EXPECT(0xcaf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaee));
        EXPECT(0x2d, gbc.readMem(0xcaef));
        // CB 2D 014E
        gbc.setState(0xd8d7, 0x32e4, 0xb000, 0x62d2, 0xae80, 0x5783, 0x1, 0x1);
        gbc.writeMem(0xd8d7, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x32e4, gbc.sp());
        EXPECT(0xd8d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8d7));
        EXPECT(0x2d, gbc.readMem(0xd8d8));
        // CB 2D 014F
        gbc.setState(0x5061, 0xb179, 0xb8a0, 0x8c6d, 0x6ef8, 0x8ee0, 0x0, 0x0);
        gbc.writeMem(0x5061, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb179, gbc.sp());
        EXPECT(0x5063, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0150
        gbc.setState(0x2fed, 0xf676, 0xf5c0, 0x59d, 0xd928, 0xe456, 0x1, 0x0);
        gbc.writeMem(0x2fed, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf676, gbc.sp());
        EXPECT(0x2fef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0151
        gbc.setState(0xcdae, 0xe11c, 0x99d0, 0x9c79, 0xa58b, 0xba9e, 0x1, 0x0);
        gbc.writeMem(0xcdae, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe11c, gbc.sp());
        EXPECT(0xcdb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdae));
        EXPECT(0x2d, gbc.readMem(0xcdaf));
        // CB 2D 0152
        gbc.setState(0xd01b, 0xf956, 0x29b0, 0xdfe3, 0x67df, 0xc06a, 0x0, 0x0);
        gbc.writeMem(0xd01b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf956, gbc.sp());
        EXPECT(0xd01d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd01b));
        EXPECT(0x2d, gbc.readMem(0xd01c));
        // CB 2D 0153
        gbc.setState(0x340c, 0xcf7, 0xf680, 0x5840, 0x2ef6, 0x6880, 0x0, 0x1);
        gbc.writeMem(0x340c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xcf7, gbc.sp());
        EXPECT(0x340e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0154
        gbc.setState(0x400c, 0xdabe, 0x3890, 0xe9de, 0x7254, 0x934c, 0x0, 0x0);
        gbc.writeMem(0x400c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xdabe, gbc.sp());
        EXPECT(0x400e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0155
        gbc.setState(0x66af, 0xb1f1, 0x7680, 0x6d9, 0xcd4c, 0x57ba, 0x1, 0x1);
        gbc.writeMem(0x66af, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb1f1, gbc.sp());
        EXPECT(0x66b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0156
        gbc.setState(0x2228, 0xbdc4, 0xc480, 0x4df, 0xcc90, 0xd0a5, 0x0, 0x1);
        gbc.writeMem(0x2228, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbdc4, gbc.sp());
        EXPECT(0x222a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0157
        gbc.setState(0x99c2, 0x120, 0x1680, 0xaf04, 0x9a1c, 0xc7de, 0x0, 0x0);
        gbc.writeMem(0x99c2, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x120, gbc.sp());
        EXPECT(0x99c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99c2));
        EXPECT(0x2d, gbc.readMem(0x99c3));
        // CB 2D 0158
        gbc.setState(0x886b, 0xb4ff, 0x19a0, 0x1fe0, 0xedc9, 0xf0ff, 0x0, 0x1);
        gbc.writeMem(0x886b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb4ff, gbc.sp());
        EXPECT(0x886d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x886b));
        EXPECT(0x2d, gbc.readMem(0x886c));
        // CB 2D 015A
        gbc.setState(0xda1f, 0xcd71, 0xa960, 0xc491, 0xaa80, 0xebea, 0x0, 0x1);
        gbc.writeMem(0xda1f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcd71, gbc.sp());
        EXPECT(0xda21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda1f));
        EXPECT(0x2d, gbc.readMem(0xda20));
        // CB 2D 015B
        gbc.setState(0xe688, 0x4148, 0x7230, 0xd85a, 0xed66, 0xfefe, 0x1, 0x1);
        gbc.writeMem(0xe688, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4148, gbc.sp());
        EXPECT(0xe68a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe688));
        EXPECT(0x2d, gbc.readMem(0xe689));
        // CB 2D 015C
        gbc.setState(0xb361, 0xff62, 0xe3e0, 0x3fb5, 0x49a4, 0xfc18, 0x1, 0x0);
        gbc.writeMem(0xb361, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xff62, gbc.sp());
        EXPECT(0xb363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb361));
        EXPECT(0x2d, gbc.readMem(0xb362));
        // CB 2D 015E
        gbc.setState(0x60da, 0xe0b, 0xcd60, 0x871, 0x6669, 0x866b, 0x1, 0x0);
        gbc.writeMem(0x60da, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe0b, gbc.sp());
        EXPECT(0x60dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 015F
        gbc.setState(0xe56f, 0x1441, 0xb3f0, 0xe68, 0x92e4, 0xbacf, 0x0, 0x1);
        gbc.writeMem(0xe56f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1441, gbc.sp());
        EXPECT(0xe571, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe56f));
        EXPECT(0x2d, gbc.readMem(0xe570));
        // CB 2D 0160
        gbc.setState(0x6ac1, 0xe693, 0xcc10, 0xe9cb, 0xfb7f, 0x39b1, 0x0, 0x1);
        gbc.writeMem(0x6ac1, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe693, gbc.sp());
        EXPECT(0x6ac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0161
        gbc.setState(0x38dd, 0xa530, 0xc30, 0x4e27, 0x164b, 0xb68d, 0x0, 0x1);
        gbc.writeMem(0x38dd, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa530, gbc.sp());
        EXPECT(0x38df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0163
        gbc.setState(0x38a3, 0xf61b, 0x1a30, 0x82c, 0x392f, 0x876b, 0x0, 0x0);
        gbc.writeMem(0x38a3, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf61b, gbc.sp());
        EXPECT(0x38a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0164
        gbc.setState(0x6e29, 0x23eb, 0xd220, 0xe583, 0x32e0, 0xf02b, 0x1, 0x0);
        gbc.writeMem(0x6e29, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x23eb, gbc.sp());
        EXPECT(0x6e2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0165
        gbc.setState(0x1a2d, 0xe87b, 0x1370, 0xa322, 0x93ef, 0xc685, 0x1, 0x1);
        gbc.writeMem(0x1a2d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe87b, gbc.sp());
        EXPECT(0x1a2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0166
        gbc.setState(0x141a, 0xaf4e, 0xc9f0, 0x747a, 0x32d2, 0x7224, 0x0, 0x0);
        gbc.writeMem(0x141a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xaf4e, gbc.sp());
        EXPECT(0x141c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0167
        gbc.setState(0x896e, 0x1df7, 0xd9a0, 0x6cf9, 0x322a, 0x20eb, 0x0, 0x0);
        gbc.writeMem(0x896e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1df7, gbc.sp());
        EXPECT(0x8970, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x896e));
        EXPECT(0x2d, gbc.readMem(0x896f));
        // CB 2D 0168
        gbc.setState(0xb3b5, 0x53f6, 0xeb50, 0xeb28, 0xacc1, 0x76df, 0x0, 0x1);
        gbc.writeMem(0xb3b5, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x53f6, gbc.sp());
        EXPECT(0xb3b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b5));
        EXPECT(0x2d, gbc.readMem(0xb3b6));
        // CB 2D 0169
        gbc.setState(0xaf9f, 0x77e2, 0x740, 0x5ea4, 0x636d, 0x40f9, 0x1, 0x0);
        gbc.writeMem(0xaf9f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x77e2, gbc.sp());
        EXPECT(0xafa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf9f));
        EXPECT(0x2d, gbc.readMem(0xafa0));
        // CB 2D 016A
        gbc.setState(0xe5c, 0x19ad, 0x2590, 0x6b25, 0x8b3a, 0xdfb0, 0x0, 0x1);
        gbc.writeMem(0xe5c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x19ad, gbc.sp());
        EXPECT(0xe5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 016B
        gbc.setState(0x7080, 0x8aea, 0x9a20, 0x79ab, 0xb56a, 0x62aa, 0x0, 0x0);
        gbc.writeMem(0x7080, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8aea, gbc.sp());
        EXPECT(0x7082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 016C
        gbc.setState(0x9176, 0x31f4, 0xe930, 0xd21b, 0x3575, 0x9be4, 0x0, 0x1);
        gbc.writeMem(0x9176, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x31f4, gbc.sp());
        EXPECT(0x9178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9176));
        EXPECT(0x2d, gbc.readMem(0x9177));
        // CB 2D 016D
        gbc.setState(0x48e8, 0x7070, 0x7ee0, 0x63b4, 0x6737, 0xe925, 0x1, 0x1);
        gbc.writeMem(0x48e8, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7070, gbc.sp());
        EXPECT(0x48ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 016E
        gbc.setState(0x1457, 0xa27e, 0x9980, 0xe6db, 0xb03, 0xe1b7, 0x0, 0x1);
        gbc.writeMem(0x1457, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa27e, gbc.sp());
        EXPECT(0x1459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 016F
        gbc.setState(0x8740, 0x814b, 0xe9b0, 0x54cd, 0x81a7, 0x6a7b, 0x0, 0x0);
        gbc.writeMem(0x8740, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x814b, gbc.sp());
        EXPECT(0x8742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8740));
        EXPECT(0x2d, gbc.readMem(0x8741));
        // CB 2D 0170
        gbc.setState(0x11be, 0xa71a, 0x6d80, 0x4c99, 0xfec9, 0xb4ca, 0x0, 0x0);
        gbc.writeMem(0x11be, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa71a, gbc.sp());
        EXPECT(0x11c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0171
        gbc.setState(0x5d7b, 0x785f, 0x7e0, 0x67db, 0x6418, 0xa29, 0x1, 0x1);
        gbc.writeMem(0x5d7b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x785f, gbc.sp());
        EXPECT(0x5d7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0172
        gbc.setState(0x300c, 0x1891, 0xbec0, 0x27fc, 0xcb07, 0x905d, 0x0, 0x0);
        gbc.writeMem(0x300c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1891, gbc.sp());
        EXPECT(0x300e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0173
        gbc.setState(0xb46, 0x22ec, 0x5030, 0x2e9b, 0xeb5c, 0x86ab, 0x1, 0x1);
        gbc.writeMem(0xb46, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x22ec, gbc.sp());
        EXPECT(0xb48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0174
        gbc.setState(0x3677, 0x7235, 0x9b0, 0xe313, 0xdff7, 0x15d5, 0x0, 0x0);
        gbc.writeMem(0x3677, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7235, gbc.sp());
        EXPECT(0x3679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0175
        gbc.setState(0x79c3, 0x1169, 0x3670, 0xb0a6, 0xc544, 0x74b3, 0x1, 0x0);
        gbc.writeMem(0x79c3, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1169, gbc.sp());
        EXPECT(0x79c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0176
        gbc.setState(0xc794, 0x11e2, 0x90d0, 0xe692, 0xea40, 0x5a3b, 0x0, 0x1);
        gbc.writeMem(0xc794, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x11e2, gbc.sp());
        EXPECT(0xc796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc794));
        EXPECT(0x2d, gbc.readMem(0xc795));
        // CB 2D 0177
        gbc.setState(0x577a, 0x36e4, 0x94c0, 0x49c7, 0xf831, 0x9373, 0x1, 0x1);
        gbc.writeMem(0x577a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x36e4, gbc.sp());
        EXPECT(0x577c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0178
        gbc.setState(0x4067, 0x9891, 0x4c40, 0x5e3b, 0x1d06, 0x247e, 0x1, 0x1);
        gbc.writeMem(0x4067, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9891, gbc.sp());
        EXPECT(0x4069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0179
        gbc.setState(0x4043, 0x49a9, 0xa0e0, 0x6cde, 0xf3cc, 0x346a, 0x0, 0x1);
        gbc.writeMem(0x4043, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x49a9, gbc.sp());
        EXPECT(0x4045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 017A
        gbc.setState(0x3c15, 0xd004, 0x55c0, 0xc1bd, 0x23eb, 0x436d, 0x0, 0x1);
        gbc.writeMem(0x3c15, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd004, gbc.sp());
        EXPECT(0x3c17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 017B
        gbc.setState(0x3152, 0xed14, 0xe1d0, 0x2a44, 0xecc6, 0x3ea, 0x1, 0x0);
        gbc.writeMem(0x3152, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xed14, gbc.sp());
        EXPECT(0x3154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 017C
        gbc.setState(0xb587, 0xf888, 0xc8a0, 0xa91e, 0xc0c1, 0xb4bd, 0x1, 0x1);
        gbc.writeMem(0xb587, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf888, gbc.sp());
        EXPECT(0xb589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb587));
        EXPECT(0x2d, gbc.readMem(0xb588));
        // CB 2D 017D
        gbc.setState(0x1002, 0x22d3, 0x7ec0, 0x50b0, 0xf0b5, 0x4133, 0x0, 0x1);
        gbc.writeMem(0x1002, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x22d3, gbc.sp());
        EXPECT(0x1004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 017E
        gbc.setState(0x9cd5, 0x5393, 0xa1d0, 0x6a82, 0x4eb4, 0xd53, 0x0, 0x0);
        gbc.writeMem(0x9cd5, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5393, gbc.sp());
        EXPECT(0x9cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd5));
        EXPECT(0x2d, gbc.readMem(0x9cd6));
        // CB 2D 017F
        gbc.setState(0x527f, 0x3482, 0xd1f0, 0x7846, 0x5ad5, 0xc396, 0x0, 0x0);
        gbc.writeMem(0x527f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3482, gbc.sp());
        EXPECT(0x5281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0180
        gbc.setState(0x4436, 0x55db, 0x5e30, 0x77dc, 0xd68, 0x979e, 0x0, 0x1);
        gbc.writeMem(0x4436, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x55db, gbc.sp());
        EXPECT(0x4438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0181
        gbc.setState(0x132e, 0xdd77, 0xfa00, 0x8e52, 0xb940, 0x7f3b, 0x0, 0x1);
        gbc.writeMem(0x132e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xdd77, gbc.sp());
        EXPECT(0x1330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0182
        gbc.setState(0x2185, 0xcbfb, 0x77a0, 0x787, 0x479f, 0xf9d2, 0x0, 0x0);
        gbc.writeMem(0x2185, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcbfb, gbc.sp());
        EXPECT(0x2187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0183
        gbc.setState(0x50c5, 0x9191, 0xc7c0, 0x2310, 0x4211, 0xfae5, 0x1, 0x0);
        gbc.writeMem(0x50c5, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9191, gbc.sp());
        EXPECT(0x50c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0184
        gbc.setState(0xd, 0x29ee, 0x5e30, 0x5e67, 0x4bc4, 0xf087, 0x0, 0x0);
        gbc.writeMem(0xd, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x29ee, gbc.sp());
        EXPECT(0xf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0185
        gbc.setState(0x265, 0x2042, 0x2770, 0x4a62, 0x3ff8, 0xa17d, 0x1, 0x1);
        gbc.writeMem(0x265, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2042, gbc.sp());
        EXPECT(0x267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0186
        gbc.setState(0xdd89, 0xece7, 0xbb20, 0xe763, 0x9c8c, 0x686f, 0x1, 0x1);
        gbc.writeMem(0xdd89, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xece7, gbc.sp());
        EXPECT(0xdd8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd89));
        EXPECT(0x2d, gbc.readMem(0xdd8a));
        // CB 2D 0187
        gbc.setState(0xd4f1, 0x3117, 0x5d50, 0x304a, 0x6e8b, 0xae2f, 0x1, 0x0);
        gbc.writeMem(0xd4f1, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3117, gbc.sp());
        EXPECT(0xd4f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f1));
        EXPECT(0x2d, gbc.readMem(0xd4f2));
        // CB 2D 0188
        gbc.setState(0x7d47, 0x404d, 0xdd60, 0x6d5c, 0xf7a1, 0x29a1, 0x0, 0x0);
        gbc.writeMem(0x7d47, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x404d, gbc.sp());
        EXPECT(0x7d49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0189
        gbc.setState(0x2970, 0x1514, 0x9930, 0xcfd9, 0x926d, 0xa5fb, 0x1, 0x0);
        gbc.writeMem(0x2970, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1514, gbc.sp());
        EXPECT(0x2972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 018A
        gbc.setState(0xeddc, 0xe1, 0xb10, 0x2a7, 0xa065, 0xdb39, 0x0, 0x1);
        gbc.writeMem(0xeddc, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe1, gbc.sp());
        EXPECT(0xedde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeddc));
        EXPECT(0x2d, gbc.readMem(0xeddd));
        // CB 2D 018B
        gbc.setState(0x615e, 0x1587, 0xd8b0, 0xbc84, 0x984e, 0xb9de, 0x0, 0x1);
        gbc.writeMem(0x615e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1587, gbc.sp());
        EXPECT(0x6160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 018C
        gbc.setState(0x611b, 0x77d4, 0x3330, 0x18d3, 0x65af, 0xfd2d, 0x1, 0x1);
        gbc.writeMem(0x611b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x77d4, gbc.sp());
        EXPECT(0x611d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 018D
        gbc.setState(0xe3fb, 0x5a3b, 0x3710, 0x4d3f, 0x8abd, 0xfcc3, 0x1, 0x0);
        gbc.writeMem(0xe3fb, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5a3b, gbc.sp());
        EXPECT(0xe3fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3fb));
        EXPECT(0x2d, gbc.readMem(0xe3fc));
        // CB 2D 018E
        gbc.setState(0x975d, 0xeba, 0xd010, 0xa66d, 0xba67, 0x248a, 0x0, 0x0);
        gbc.writeMem(0x975d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xeba, gbc.sp());
        EXPECT(0x975f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x975d));
        EXPECT(0x2d, gbc.readMem(0x975e));
        // CB 2D 018F
        gbc.setState(0xaf5a, 0xa4fd, 0x9770, 0x4894, 0x85ac, 0xf980, 0x1, 0x1);
        gbc.writeMem(0xaf5a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa4fd, gbc.sp());
        EXPECT(0xaf5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf5a));
        EXPECT(0x2d, gbc.readMem(0xaf5b));
        // CB 2D 0190
        gbc.setState(0x52, 0x1623, 0xd6f0, 0x46fa, 0x8b19, 0x86b8, 0x0, 0x1);
        gbc.writeMem(0x52, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1623, gbc.sp());
        EXPECT(0x54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0191
        gbc.setState(0x59fc, 0x7076, 0xba80, 0xa42b, 0x7a6f, 0xe0b4, 0x1, 0x1);
        gbc.writeMem(0x59fc, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7076, gbc.sp());
        EXPECT(0x59fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0192
        gbc.setState(0xdf78, 0x3ad2, 0x5f70, 0x358b, 0xdf0f, 0xa784, 0x0, 0x1);
        gbc.writeMem(0xdf78, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3ad2, gbc.sp());
        EXPECT(0xdf7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf78));
        EXPECT(0x2d, gbc.readMem(0xdf79));
        // CB 2D 0193
        gbc.setState(0x1b9f, 0x2796, 0xc0d0, 0x6ea0, 0xd40b, 0xc50c, 0x0, 0x1);
        gbc.writeMem(0x1b9f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2796, gbc.sp());
        EXPECT(0x1ba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0194
        gbc.setState(0x9c44, 0x1f83, 0xd8f0, 0x1a2b, 0x5dac, 0x38d2, 0x1, 0x0);
        gbc.writeMem(0x9c44, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1f83, gbc.sp());
        EXPECT(0x9c46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c44));
        EXPECT(0x2d, gbc.readMem(0x9c45));
        // CB 2D 0196
        gbc.setState(0xc639, 0x7598, 0x8bd0, 0xf685, 0x5f09, 0xe67f, 0x1, 0x0);
        gbc.writeMem(0xc639, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7598, gbc.sp());
        EXPECT(0xc63b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc639));
        EXPECT(0x2d, gbc.readMem(0xc63a));
        // CB 2D 0197
        gbc.setState(0x61e, 0x96f2, 0x4f50, 0x8b61, 0x4bfb, 0x5a8d, 0x1, 0x1);
        gbc.writeMem(0x61e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x96f2, gbc.sp());
        EXPECT(0x620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0198
        gbc.setState(0x650c, 0x8a07, 0xd3f0, 0x6d6f, 0x6648, 0x50bb, 0x0, 0x0);
        gbc.writeMem(0x650c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8a07, gbc.sp());
        EXPECT(0x650e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0199
        gbc.setState(0x41a8, 0xd419, 0x4b60, 0x892e, 0x988, 0xd046, 0x0, 0x0);
        gbc.writeMem(0x41a8, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd419, gbc.sp());
        EXPECT(0x41aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 019A
        gbc.setState(0xd4e3, 0x83c5, 0xf6e0, 0x2bac, 0xd9b, 0x7acc, 0x1, 0x0);
        gbc.writeMem(0xd4e3, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x83c5, gbc.sp());
        EXPECT(0xd4e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4e3));
        EXPECT(0x2d, gbc.readMem(0xd4e4));
        // CB 2D 019B
        gbc.setState(0x8b19, 0x9070, 0x3200, 0x8c23, 0x37f8, 0x3a73, 0x0, 0x0);
        gbc.writeMem(0x8b19, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9070, gbc.sp());
        EXPECT(0x8b1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b19));
        EXPECT(0x2d, gbc.readMem(0x8b1a));
        // CB 2D 019C
        gbc.setState(0x78b6, 0xe319, 0xcab0, 0x1a0, 0x43bb, 0x5bd5, 0x0, 0x1);
        gbc.writeMem(0x78b6, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe319, gbc.sp());
        EXPECT(0x78b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 019D
        gbc.setState(0x2fea, 0xbea2, 0xaf80, 0xa325, 0x3b4f, 0xf4d, 0x1, 0x0);
        gbc.writeMem(0x2fea, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbea2, gbc.sp());
        EXPECT(0x2fec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 019E
        gbc.setState(0x1fc5, 0x84f3, 0xbe10, 0xa863, 0x219, 0xd7c9, 0x1, 0x1);
        gbc.writeMem(0x1fc5, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x84f3, gbc.sp());
        EXPECT(0x1fc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 019F
        gbc.setState(0x5117, 0xdbe5, 0x7590, 0xf56e, 0x3027, 0xa865, 0x1, 0x1);
        gbc.writeMem(0x5117, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xdbe5, gbc.sp());
        EXPECT(0x5119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 01A0
        gbc.setState(0x172d, 0xbd4a, 0xda80, 0xeba6, 0xcf93, 0xbea8, 0x0, 0x1);
        gbc.writeMem(0x172d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbd4a, gbc.sp());
        EXPECT(0x172f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 01A1
        gbc.setState(0x845b, 0x761a, 0x7f00, 0x5d6c, 0xc62a, 0x810d, 0x1, 0x0);
        gbc.writeMem(0x845b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x761a, gbc.sp());
        EXPECT(0x845d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x845b));
        EXPECT(0x2d, gbc.readMem(0x845c));
        // CB 2D 01A2
        gbc.setState(0x7b35, 0x33e6, 0x2930, 0x3a4f, 0x273d, 0x7a2d, 0x0, 0x1);
        gbc.writeMem(0x7b35, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x33e6, gbc.sp());
        EXPECT(0x7b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 01A3
        gbc.setState(0xc9c6, 0xf7cf, 0xd010, 0x3ca8, 0xdd95, 0xbf54, 0x1, 0x1);
        gbc.writeMem(0xc9c6, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf7cf, gbc.sp());
        EXPECT(0xc9c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c6));
        EXPECT(0x2d, gbc.readMem(0xc9c7));
        // CB 2D 01A4
        gbc.setState(0xe041, 0x1667, 0x2a20, 0x927a, 0xca4b, 0x209f, 0x0, 0x0);
        gbc.writeMem(0xe041, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1667, gbc.sp());
        EXPECT(0xe043, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe041));
        EXPECT(0x2d, gbc.readMem(0xe042));
        // CB 2D 01A5
        gbc.setState(0x7ffa, 0x14e1, 0x4540, 0xc09e, 0xcc04, 0x9592, 0x0, 0x0);
        gbc.writeMem(0x7ffa, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x14e1, gbc.sp());
        EXPECT(0x7ffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 01A6
        gbc.setState(0xb9a4, 0x3efb, 0xaea0, 0xce63, 0x5d84, 0x7aa3, 0x1, 0x1);
        gbc.writeMem(0xb9a4, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3efb, gbc.sp());
        EXPECT(0xb9a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9a4));
        EXPECT(0x2d, gbc.readMem(0xb9a5));
        // CB 2D 01A7
        gbc.setState(0x8d9a, 0xe238, 0x8fb0, 0x2320, 0xc5a7, 0xda0c, 0x0, 0x1);
        gbc.writeMem(0x8d9a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe238, gbc.sp());
        EXPECT(0x8d9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d9a));
        EXPECT(0x2d, gbc.readMem(0x8d9b));
        // CB 2D 01A8
        gbc.setState(0x1c51, 0x603, 0x40a0, 0x521b, 0x136c, 0x6aa8, 0x0, 0x0);
        gbc.writeMem(0x1c51, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x603, gbc.sp());
        EXPECT(0x1c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 01A9
        gbc.setState(0x9f88, 0x9115, 0xbe0, 0x7597, 0xe44f, 0xa990, 0x1, 0x0);
        gbc.writeMem(0x9f88, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9115, gbc.sp());
        EXPECT(0x9f8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f88));
        EXPECT(0x2d, gbc.readMem(0x9f89));
        // CB 2D 01AA
        gbc.setState(0xd27b, 0xbfe4, 0xac60, 0x1df7, 0x76b, 0x26de, 0x0, 0x0);
        gbc.writeMem(0xd27b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xbfe4, gbc.sp());
        EXPECT(0xd27d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd27b));
        EXPECT(0x2d, gbc.readMem(0xd27c));
        // CB 2D 01AB
        gbc.setState(0x53db, 0xba00, 0x24a0, 0xc588, 0x3f17, 0xb154, 0x0, 0x1);
        gbc.writeMem(0x53db, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xba00, gbc.sp());
        EXPECT(0x53dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 01AC
        gbc.setState(0x8a59, 0xbc8e, 0x28e0, 0xe21d, 0x5e17, 0x5602, 0x1, 0x0);
        gbc.writeMem(0x8a59, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbc8e, gbc.sp());
        EXPECT(0x8a5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a59));
        EXPECT(0x2d, gbc.readMem(0x8a5a));
        // CB 2D 01AD
        gbc.setState(0xb607, 0xec91, 0x21b0, 0x3cc2, 0xc11a, 0x8e4f, 0x1, 0x1);
        gbc.writeMem(0xb607, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xec91, gbc.sp());
        EXPECT(0xb609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb607));
        EXPECT(0x2d, gbc.readMem(0xb608));
        // CB 2D 01AE
        gbc.setState(0x957f, 0x38f8, 0xf4e0, 0x15c3, 0xce8c, 0xae4d, 0x0, 0x1);
        gbc.writeMem(0x957f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x38f8, gbc.sp());
        EXPECT(0x9581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x957f));
        EXPECT(0x2d, gbc.readMem(0x9580));
        // CB 2D 01AF
        gbc.setState(0x1d1c, 0xff5c, 0x9210, 0x7fd6, 0xb47f, 0x4198, 0x1, 0x1);
        gbc.writeMem(0x1d1c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xff5c, gbc.sp());
        EXPECT(0x1d1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 01B2
        gbc.setState(0x69b4, 0xa905, 0xe950, 0xe041, 0xf6f7, 0xd00e, 0x1, 0x0);
        gbc.writeMem(0x69b4, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa905, gbc.sp());
        EXPECT(0x69b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 01B3
        gbc.setState(0xf62, 0x5f14, 0x7d20, 0x91e1, 0x31a8, 0x9c97, 0x0, 0x1);
        gbc.writeMem(0xf62, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5f14, gbc.sp());
        EXPECT(0xf64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 01B4
        gbc.setState(0x4fff, 0x5346, 0x7900, 0xece6, 0x373d, 0xc626, 0x1, 0x1);
        gbc.writeMem(0x4fff, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5346, gbc.sp());
        EXPECT(0x5001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 01B5
        gbc.setState(0xf6c, 0x2acd, 0xa700, 0x2a1, 0x5145, 0xfa1a, 0x0, 0x0);
        gbc.writeMem(0xf6c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2acd, gbc.sp());
        EXPECT(0xf6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 01B6
        gbc.setState(0x3ff0, 0x64c0, 0x3b30, 0x3bf5, 0x4c13, 0x70b9, 0x0, 0x1);
        gbc.writeMem(0x3ff0, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x64c0, gbc.sp());
        EXPECT(0x3ff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 01B7
        gbc.setState(0x640b, 0x20ee, 0x8ae0, 0xed4, 0x7dbb, 0x2af8, 0x1, 0x1);
        gbc.writeMem(0x640b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x20ee, gbc.sp());
        EXPECT(0x640d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 01B8
        gbc.setState(0xdd3, 0xc25e, 0x1530, 0x983c, 0xaf23, 0x83e3, 0x0, 0x0);
        gbc.writeMem(0xdd3, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc25e, gbc.sp());
        EXPECT(0xdd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 01B9
        gbc.setState(0x5871, 0xb6db, 0xea0, 0x692f, 0xbadc, 0x2543, 0x1, 0x0);
        gbc.writeMem(0x5871, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb6db, gbc.sp());
        EXPECT(0x5873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 01BA
        gbc.setState(0xc7b2, 0x4b8c, 0x2ed0, 0xec50, 0xcaec, 0xcf82, 0x0, 0x1);
        gbc.writeMem(0xc7b2, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4b8c, gbc.sp());
        EXPECT(0xc7b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b2));
        EXPECT(0x2d, gbc.readMem(0xc7b3));
        // CB 2D 01BB
        gbc.setState(0x86e1, 0x3e94, 0xa740, 0x2557, 0xfd9b, 0x29bc, 0x0, 0x0);
        gbc.writeMem(0x86e1, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3e94, gbc.sp());
        EXPECT(0x86e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86e1));
        EXPECT(0x2d, gbc.readMem(0x86e2));
        // CB 2D 01BC
        gbc.setState(0xd190, 0x9cf7, 0x5890, 0x898a, 0x3d9c, 0x4a0f, 0x1, 0x0);
        gbc.writeMem(0xd190, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9cf7, gbc.sp());
        EXPECT(0xd192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd190));
        EXPECT(0x2d, gbc.readMem(0xd191));
        // CB 2D 01BD
        gbc.setState(0xd3af, 0x9e73, 0xbb90, 0x2b9, 0xbe28, 0xacaf, 0x1, 0x0);
        gbc.writeMem(0xd3af, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9e73, gbc.sp());
        EXPECT(0xd3b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3af));
        EXPECT(0x2d, gbc.readMem(0xd3b0));
        // CB 2D 01BE
        gbc.setState(0xa98f, 0x7837, 0xdad0, 0xbd4b, 0xb665, 0x5ac1, 0x1, 0x0);
        gbc.writeMem(0xa98f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7837, gbc.sp());
        EXPECT(0xa991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa98f));
        EXPECT(0x2d, gbc.readMem(0xa990));
        // CB 2D 01BF
        gbc.setState(0x807b, 0x818a, 0x290, 0xe409, 0x9d2e, 0x512f, 0x1, 0x0);
        gbc.writeMem(0x807b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x818a, gbc.sp());
        EXPECT(0x807d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x807b));
        EXPECT(0x2d, gbc.readMem(0x807c));
        // CB 2D 01C0
        gbc.setState(0x9c91, 0x217d, 0x9fd0, 0x996b, 0x8314, 0x94e2, 0x1, 0x1);
        gbc.writeMem(0x9c91, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x217d, gbc.sp());
        EXPECT(0x9c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c91));
        EXPECT(0x2d, gbc.readMem(0x9c92));
        // CB 2D 01C1
        gbc.setState(0xbda1, 0x70bf, 0x7e40, 0xf6ca, 0x3150, 0x93cb, 0x1, 0x1);
        gbc.writeMem(0xbda1, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x70bf, gbc.sp());
        EXPECT(0xbda3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbda1));
        EXPECT(0x2d, gbc.readMem(0xbda2));
        // CB 2D 01C2
        gbc.setState(0x1988, 0x540f, 0x96f0, 0x2736, 0xbd0c, 0x4be7, 0x0, 0x0);
        gbc.writeMem(0x1988, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x540f, gbc.sp());
        EXPECT(0x198a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 01C3
        gbc.setState(0x501c, 0x9936, 0xb140, 0xafc8, 0x1da, 0xcf79, 0x0, 0x0);
        gbc.writeMem(0x501c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9936, gbc.sp());
        EXPECT(0x501e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 01C4
        gbc.setState(0xdc5c, 0x5829, 0x44b0, 0xd55a, 0x6d41, 0xebdc, 0x0, 0x1);
        gbc.writeMem(0xdc5c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5829, gbc.sp());
        EXPECT(0xdc5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc5c));
        EXPECT(0x2d, gbc.readMem(0xdc5d));
        // CB 2D 01C5
        gbc.setState(0x3910, 0x5149, 0xfbe0, 0xf8b0, 0x70ac, 0xe383, 0x0, 0x0);
        gbc.writeMem(0x3910, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5149, gbc.sp());
        EXPECT(0x3912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 01C6
        gbc.setState(0x5633, 0xa562, 0x6800, 0x3cdc, 0x3125, 0x877c, 0x0, 0x1);
        gbc.writeMem(0x5633, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa562, gbc.sp());
        EXPECT(0x5635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 01C7
        gbc.setState(0xe266, 0x4204, 0x12e0, 0xc89a, 0x926f, 0xa473, 0x0, 0x0);
        gbc.writeMem(0xe266, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4204, gbc.sp());
        EXPECT(0xe268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe266));
        EXPECT(0x2d, gbc.readMem(0xe267));
        // CB 2D 01C8
        gbc.setState(0xedc3, 0x5527, 0x3210, 0x5f15, 0x8c71, 0xd4fa, 0x1, 0x0);
        gbc.writeMem(0xedc3, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5527, gbc.sp());
        EXPECT(0xedc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedc3));
        EXPECT(0x2d, gbc.readMem(0xedc4));
        // CB 2D 01C9
        gbc.setState(0x53f0, 0x9477, 0x2350, 0x44ea, 0x2951, 0x9ac3, 0x1, 0x1);
        gbc.writeMem(0x53f0, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9477, gbc.sp());
        EXPECT(0x53f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 01CA
        gbc.setState(0x63ab, 0x8dea, 0x4fa0, 0xbb8e, 0xc755, 0x4f11, 0x0, 0x0);
        gbc.writeMem(0x63ab, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8dea, gbc.sp());
        EXPECT(0x63ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 01CB
        gbc.setState(0x68b4, 0xf90, 0x9970, 0xbabb, 0x4e90, 0x5b36, 0x0, 0x0);
        gbc.writeMem(0x68b4, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf90, gbc.sp());
        EXPECT(0x68b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 01CC
        gbc.setState(0xdd6a, 0x44e5, 0xf80, 0xe16c, 0xf082, 0xeffa, 0x0, 0x0);
        gbc.writeMem(0xdd6a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x44e5, gbc.sp());
        EXPECT(0xdd6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd6a));
        EXPECT(0x2d, gbc.readMem(0xdd6b));
        // CB 2D 01CD
        gbc.setState(0x58fd, 0x72ce, 0x6660, 0x4f65, 0x2fa0, 0xd231, 0x1, 0x1);
        gbc.writeMem(0x58fd, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x72ce, gbc.sp());
        EXPECT(0x58ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 01CE
        gbc.setState(0x8ca1, 0x5886, 0xfb50, 0x3363, 0x5316, 0x833d, 0x0, 0x0);
        gbc.writeMem(0x8ca1, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5886, gbc.sp());
        EXPECT(0x8ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca1));
        EXPECT(0x2d, gbc.readMem(0x8ca2));
        // CB 2D 01CF
        gbc.setState(0x6eae, 0x7fbd, 0x7cf0, 0x9b47, 0xe735, 0x4607, 0x1, 0x0);
        gbc.writeMem(0x6eae, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7fbd, gbc.sp());
        EXPECT(0x6eb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 01D0
        gbc.setState(0x3249, 0x148, 0x91e0, 0x7cb1, 0x5be, 0xd7ef, 0x1, 0x0);
        gbc.writeMem(0x3249, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x148, gbc.sp());
        EXPECT(0x324b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 01D1
        gbc.setState(0x9f5d, 0x8eb2, 0xf210, 0xdc38, 0x4f6c, 0x9afb, 0x0, 0x1);
        gbc.writeMem(0x9f5d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8eb2, gbc.sp());
        EXPECT(0x9f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f5d));
        EXPECT(0x2d, gbc.readMem(0x9f5e));
        // CB 2D 01D2
        gbc.setState(0xca74, 0xa3a1, 0xb1a0, 0x95c1, 0xa7bc, 0xb5d4, 0x1, 0x1);
        gbc.writeMem(0xca74, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa3a1, gbc.sp());
        EXPECT(0xca76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca74));
        EXPECT(0x2d, gbc.readMem(0xca75));
        // CB 2D 01D3
        gbc.setState(0xb07f, 0x961d, 0x93d0, 0xd87d, 0xbf95, 0x7cfe, 0x0, 0x0);
        gbc.writeMem(0xb07f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x961d, gbc.sp());
        EXPECT(0xb081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb07f));
        EXPECT(0x2d, gbc.readMem(0xb080));
        // CB 2D 01D4
        gbc.setState(0x34c7, 0x54a1, 0x7e90, 0xc040, 0xa2f5, 0xa887, 0x1, 0x1);
        gbc.writeMem(0x34c7, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x54a1, gbc.sp());
        EXPECT(0x34c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 01D5
        gbc.setState(0xb395, 0xf6a7, 0x7610, 0x93b, 0x99f4, 0x7069, 0x1, 0x1);
        gbc.writeMem(0xb395, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf6a7, gbc.sp());
        EXPECT(0xb397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb395));
        EXPECT(0x2d, gbc.readMem(0xb396));
        // CB 2D 01D6
        gbc.setState(0xedec, 0x1de7, 0x8990, 0x732, 0xdb7b, 0xd613, 0x1, 0x0);
        gbc.writeMem(0xedec, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1de7, gbc.sp());
        EXPECT(0xedee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedec));
        EXPECT(0x2d, gbc.readMem(0xeded));
        // CB 2D 01D7
        gbc.setState(0x534a, 0xbfa2, 0x36f0, 0x44cc, 0x572b, 0xe737, 0x1, 0x0);
        gbc.writeMem(0x534a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xbfa2, gbc.sp());
        EXPECT(0x534c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 01D8
        gbc.setState(0x605f, 0xb931, 0x3570, 0x5a5d, 0x3950, 0x2f77, 0x0, 0x0);
        gbc.writeMem(0x605f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb931, gbc.sp());
        EXPECT(0x6061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 01DA
        gbc.setState(0x87b2, 0xb309, 0x9cb0, 0xe150, 0x6961, 0x6c88, 0x1, 0x0);
        gbc.writeMem(0x87b2, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb309, gbc.sp());
        EXPECT(0x87b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87b2));
        EXPECT(0x2d, gbc.readMem(0x87b3));
        // CB 2D 01DC
        gbc.setState(0xde4d, 0x8a6a, 0x9e90, 0x642f, 0x958e, 0xd87e, 0x1, 0x0);
        gbc.writeMem(0xde4d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8a6a, gbc.sp());
        EXPECT(0xde4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde4d));
        EXPECT(0x2d, gbc.readMem(0xde4e));
        // CB 2D 01DD
        gbc.setState(0x196b, 0x2a19, 0x9700, 0xbd82, 0xb192, 0x38fb, 0x0, 0x1);
        gbc.writeMem(0x196b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2a19, gbc.sp());
        EXPECT(0x196d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 01DE
        gbc.setState(0xae1a, 0xf402, 0xb9b0, 0xfd9b, 0x8689, 0x2a5b, 0x0, 0x0);
        gbc.writeMem(0xae1a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf402, gbc.sp());
        EXPECT(0xae1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae1a));
        EXPECT(0x2d, gbc.readMem(0xae1b));
        // CB 2D 01DF
        gbc.setState(0x2b64, 0x851c, 0xc8e0, 0x9503, 0x38e7, 0xf42c, 0x0, 0x0);
        gbc.writeMem(0x2b64, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x851c, gbc.sp());
        EXPECT(0x2b66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 01E0
        gbc.setState(0xb0ac, 0x3f3f, 0x41b0, 0x4a78, 0x83d5, 0x8d6e, 0x0, 0x1);
        gbc.writeMem(0xb0ac, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3f3f, gbc.sp());
        EXPECT(0xb0ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0ac));
        EXPECT(0x2d, gbc.readMem(0xb0ad));
        // CB 2D 01E1
        gbc.setState(0xa605, 0x4e99, 0x27a0, 0xcc4d, 0xe2e5, 0x3d78, 0x0, 0x0);
        gbc.writeMem(0xa605, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4e99, gbc.sp());
        EXPECT(0xa607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa605));
        EXPECT(0x2d, gbc.readMem(0xa606));
        // CB 2D 01E2
        gbc.setState(0xcf86, 0xd19d, 0xfa20, 0xb13f, 0xb521, 0x1f15, 0x0, 0x0);
        gbc.writeMem(0xcf86, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd19d, gbc.sp());
        EXPECT(0xcf88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf86));
        EXPECT(0x2d, gbc.readMem(0xcf87));
        // CB 2D 01E3
        gbc.setState(0xaa76, 0xb162, 0xf2d0, 0xc8f8, 0x480f, 0x9757, 0x1, 0x1);
        gbc.writeMem(0xaa76, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb162, gbc.sp());
        EXPECT(0xaa78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa76));
        EXPECT(0x2d, gbc.readMem(0xaa77));
        // CB 2D 01E4
        gbc.setState(0x3fa8, 0x8b12, 0xab30, 0xf7f1, 0x31c3, 0x6dcd, 0x0, 0x1);
        gbc.writeMem(0x3fa8, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8b12, gbc.sp());
        EXPECT(0x3faa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 01E5
        gbc.setState(0x4953, 0x396a, 0xdf50, 0x84a6, 0x642a, 0x8606, 0x0, 0x0);
        gbc.writeMem(0x4953, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x396a, gbc.sp());
        EXPECT(0x4955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 01E6
        gbc.setState(0x945b, 0x535c, 0x1ed0, 0x4828, 0x6dc, 0x305b, 0x1, 0x0);
        gbc.writeMem(0x945b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x535c, gbc.sp());
        EXPECT(0x945d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x945b));
        EXPECT(0x2d, gbc.readMem(0x945c));
        // CB 2D 01E8
        gbc.setState(0x4223, 0x2065, 0xc1d0, 0x9242, 0x745d, 0x315a, 0x0, 0x0);
        gbc.writeMem(0x4223, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2065, gbc.sp());
        EXPECT(0x4225, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 01E9
        gbc.setState(0x6e02, 0x8023, 0x65c0, 0x7911, 0x3655, 0x4f6c, 0x0, 0x1);
        gbc.writeMem(0x6e02, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8023, gbc.sp());
        EXPECT(0x6e04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 01EA
        gbc.setState(0x33f4, 0x3957, 0x4c00, 0x5023, 0xee8, 0xa3e6, 0x0, 0x0);
        gbc.writeMem(0x33f4, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3957, gbc.sp());
        EXPECT(0x33f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 01EB
        gbc.setState(0xbef3, 0xbbc0, 0x3eb0, 0xc638, 0x8a45, 0xdfc5, 0x0, 0x1);
        gbc.writeMem(0xbef3, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xbbc0, gbc.sp());
        EXPECT(0xbef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbef3));
        EXPECT(0x2d, gbc.readMem(0xbef4));
        // CB 2D 01EC
        gbc.setState(0xe1ef, 0xf37, 0xdd60, 0xaa76, 0x8370, 0x436e, 0x1, 0x0);
        gbc.writeMem(0xe1ef, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf37, gbc.sp());
        EXPECT(0xe1f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1ef));
        EXPECT(0x2d, gbc.readMem(0xe1f0));
        // CB 2D 01EE
        gbc.setState(0x79ce, 0x81b2, 0x90, 0xf60f, 0xe830, 0xcee4, 0x0, 0x0);
        gbc.writeMem(0x79ce, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x81b2, gbc.sp());
        EXPECT(0x79d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 01EF
        gbc.setState(0x6756, 0xb8be, 0xd980, 0x1dbe, 0xe679, 0x3eea, 0x1, 0x0);
        gbc.writeMem(0x6756, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb8be, gbc.sp());
        EXPECT(0x6758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 01F0
        gbc.setState(0x3fac, 0xe764, 0xca80, 0xdc1e, 0x82cc, 0x4aa, 0x0, 0x0);
        gbc.writeMem(0x3fac, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe764, gbc.sp());
        EXPECT(0x3fae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 01F1
        gbc.setState(0xd0e7, 0xc77c, 0x4bb0, 0xa4d1, 0x683d, 0xab39, 0x1, 0x0);
        gbc.writeMem(0xd0e7, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc77c, gbc.sp());
        EXPECT(0xd0e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0e7));
        EXPECT(0x2d, gbc.readMem(0xd0e8));
        // CB 2D 01F2
        gbc.setState(0xcfa0, 0xd999, 0x360, 0x9e76, 0x38ff, 0xed82, 0x0, 0x1);
        gbc.writeMem(0xcfa0, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd999, gbc.sp());
        EXPECT(0xcfa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfa0));
        EXPECT(0x2d, gbc.readMem(0xcfa1));
        // CB 2D 01F3
        gbc.setState(0x57c8, 0xec38, 0x5440, 0x22f7, 0xd1a9, 0xe0f7, 0x0, 0x0);
        gbc.writeMem(0x57c8, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xec38, gbc.sp());
        EXPECT(0x57ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 01F4
        gbc.setState(0x71bb, 0x9495, 0x4c80, 0x8a9c, 0x37d5, 0x4543, 0x0, 0x0);
        gbc.writeMem(0x71bb, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9495, gbc.sp());
        EXPECT(0x71bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 01F5
        gbc.setState(0xaac3, 0xd717, 0xda10, 0xad08, 0x3599, 0x7fc6, 0x1, 0x1);
        gbc.writeMem(0xaac3, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd717, gbc.sp());
        EXPECT(0xaac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaac3));
        EXPECT(0x2d, gbc.readMem(0xaac4));
        // CB 2D 01F6
        gbc.setState(0x7674, 0xd934, 0xdf50, 0xad67, 0x66ad, 0xe4ca, 0x0, 0x0);
        gbc.writeMem(0x7674, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd934, gbc.sp());
        EXPECT(0x7676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 01F8
        gbc.setState(0x6eb0, 0x147, 0x55c0, 0x44ce, 0xace7, 0x10e, 0x0, 0x0);
        gbc.writeMem(0x6eb0, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x147, gbc.sp());
        EXPECT(0x6eb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 01F9
        gbc.setState(0x23f6, 0x8eab, 0xf880, 0xeffc, 0x47cb, 0x5dbb, 0x0, 0x0);
        gbc.writeMem(0x23f6, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8eab, gbc.sp());
        EXPECT(0x23f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 01FA
        gbc.setState(0x8d66, 0x76aa, 0x790, 0x28d9, 0x962, 0x8890, 0x1, 0x1);
        gbc.writeMem(0x8d66, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x76aa, gbc.sp());
        EXPECT(0x8d68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d66));
        EXPECT(0x2d, gbc.readMem(0x8d67));
        // CB 2D 01FB
        gbc.setState(0xda6f, 0xc33a, 0xa630, 0x8a22, 0xd8df, 0x4f, 0x1, 0x0);
        gbc.writeMem(0xda6f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc33a, gbc.sp());
        EXPECT(0xda71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda6f));
        EXPECT(0x2d, gbc.readMem(0xda70));
        // CB 2D 01FC
        gbc.setState(0x3697, 0xad23, 0x6160, 0x92c4, 0x29af, 0xe96f, 0x1, 0x1);
        gbc.writeMem(0x3697, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xad23, gbc.sp());
        EXPECT(0x3699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 01FD
        gbc.setState(0x7990, 0x74b6, 0xcd20, 0x5b64, 0x96bc, 0xd999, 0x0, 0x1);
        gbc.writeMem(0x7990, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x74b6, gbc.sp());
        EXPECT(0x7992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 01FE
        gbc.setState(0x7402, 0x7a3e, 0x5650, 0xbdff, 0xb6f2, 0xce38, 0x1, 0x1);
        gbc.writeMem(0x7402, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7a3e, gbc.sp());
        EXPECT(0x7404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 01FF
        gbc.setState(0xa9a3, 0xafc6, 0x2b50, 0xb337, 0x9bce, 0xfcc9, 0x0, 0x1);
        gbc.writeMem(0xa9a3, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xafc6, gbc.sp());
        EXPECT(0xa9a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9a3));
        EXPECT(0x2d, gbc.readMem(0xa9a4));
        // CB 2D 0200
        gbc.setState(0xe3e4, 0xb9c8, 0x5ae0, 0xd20, 0xdefb, 0x9dfa, 0x0, 0x0);
        gbc.writeMem(0xe3e4, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb9c8, gbc.sp());
        EXPECT(0xe3e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3e4));
        EXPECT(0x2d, gbc.readMem(0xe3e5));
        // CB 2D 0201
        gbc.setState(0x99d9, 0x7f24, 0xdd90, 0xa74d, 0xdcda, 0x9d88, 0x1, 0x1);
        gbc.writeMem(0x99d9, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7f24, gbc.sp());
        EXPECT(0x99db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99d9));
        EXPECT(0x2d, gbc.readMem(0x99da));
        // CB 2D 0202
        gbc.setState(0x5b6f, 0x7ed0, 0x9f20, 0x778b, 0x2992, 0xfd68, 0x1, 0x1);
        gbc.writeMem(0x5b6f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7ed0, gbc.sp());
        EXPECT(0x5b71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0203
        gbc.setState(0x79a8, 0x3f36, 0xf2a0, 0xcf38, 0xad7a, 0x9e1c, 0x0, 0x0);
        gbc.writeMem(0x79a8, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3f36, gbc.sp());
        EXPECT(0x79aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0204
        gbc.setState(0x1c62, 0xd6a, 0x55c0, 0x2ea, 0x8677, 0x12e0, 0x1, 0x1);
        gbc.writeMem(0x1c62, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd6a, gbc.sp());
        EXPECT(0x1c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0205
        gbc.setState(0xbd15, 0xf5fa, 0xa870, 0x9962, 0x2578, 0x6c7d, 0x1, 0x1);
        gbc.writeMem(0xbd15, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf5fa, gbc.sp());
        EXPECT(0xbd17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd15));
        EXPECT(0x2d, gbc.readMem(0xbd16));
        // CB 2D 0206
        gbc.setState(0x7f89, 0x552, 0x8050, 0x71bd, 0xfba7, 0xa92d, 0x0, 0x1);
        gbc.writeMem(0x7f89, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x552, gbc.sp());
        EXPECT(0x7f8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0207
        gbc.setState(0x162c, 0x518a, 0x7a0, 0x3aa4, 0xee9b, 0x56d3, 0x1, 0x1);
        gbc.writeMem(0x162c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x518a, gbc.sp());
        EXPECT(0x162e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0208
        gbc.setState(0x946c, 0x7df, 0x10d0, 0xa397, 0x92c1, 0x2cc3, 0x0, 0x1);
        gbc.writeMem(0x946c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7df, gbc.sp());
        EXPECT(0x946e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x946c));
        EXPECT(0x2d, gbc.readMem(0x946d));
        // CB 2D 0209
        gbc.setState(0x38ec, 0x5d4e, 0x1400, 0x6153, 0x3ef9, 0xa05, 0x0, 0x0);
        gbc.writeMem(0x38ec, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5d4e, gbc.sp());
        EXPECT(0x38ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 020A
        gbc.setState(0x3028, 0xfb08, 0x24b0, 0x235e, 0xc14b, 0x6986, 0x1, 0x1);
        gbc.writeMem(0x3028, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xfb08, gbc.sp());
        EXPECT(0x302a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 020B
        gbc.setState(0xb1c4, 0x6b0, 0xaaf0, 0x94b, 0xf0b2, 0x5912, 0x1, 0x1);
        gbc.writeMem(0xb1c4, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6b0, gbc.sp());
        EXPECT(0xb1c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1c4));
        EXPECT(0x2d, gbc.readMem(0xb1c5));
        // CB 2D 020C
        gbc.setState(0xa116, 0xcbc1, 0x6fe0, 0x9a1, 0xd3fb, 0x386a, 0x0, 0x1);
        gbc.writeMem(0xa116, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xcbc1, gbc.sp());
        EXPECT(0xa118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa116));
        EXPECT(0x2d, gbc.readMem(0xa117));
        // CB 2D 020D
        gbc.setState(0xbfcd, 0x47c0, 0xd0c0, 0xc7fd, 0xbe81, 0x38c5, 0x0, 0x1);
        gbc.writeMem(0xbfcd, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x47c0, gbc.sp());
        EXPECT(0xbfcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfcd));
        EXPECT(0x2d, gbc.readMem(0xbfce));
        // CB 2D 020E
        gbc.setState(0x5c18, 0xcc11, 0xf150, 0xc37e, 0x91f2, 0x5296, 0x0, 0x0);
        gbc.writeMem(0x5c18, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xcc11, gbc.sp());
        EXPECT(0x5c1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 020F
        gbc.setState(0x7e23, 0xa3f9, 0x1b50, 0x7ad9, 0x296f, 0x8cfe, 0x0, 0x0);
        gbc.writeMem(0x7e23, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa3f9, gbc.sp());
        EXPECT(0x7e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0210
        gbc.setState(0x8b61, 0x9de6, 0xd840, 0x64bd, 0x24fb, 0x87a1, 0x0, 0x0);
        gbc.writeMem(0x8b61, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9de6, gbc.sp());
        EXPECT(0x8b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b61));
        EXPECT(0x2d, gbc.readMem(0x8b62));
        // CB 2D 0211
        gbc.setState(0x3d4f, 0x213e, 0x8160, 0x7022, 0x1b43, 0x2e07, 0x0, 0x0);
        gbc.writeMem(0x3d4f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x213e, gbc.sp());
        EXPECT(0x3d51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0212
        gbc.setState(0x5749, 0xfc54, 0x55f0, 0x1c57, 0x73ca, 0x5188, 0x0, 0x0);
        gbc.writeMem(0x5749, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xfc54, gbc.sp());
        EXPECT(0x574b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0213
        gbc.setState(0x2634, 0x4d9, 0x5810, 0x4945, 0x65c3, 0x7395, 0x0, 0x1);
        gbc.writeMem(0x2634, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4d9, gbc.sp());
        EXPECT(0x2636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0214
        gbc.setState(0x254f, 0x15bb, 0xe4f0, 0x62ec, 0x196d, 0x1e81, 0x1, 0x0);
        gbc.writeMem(0x254f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x15bb, gbc.sp());
        EXPECT(0x2551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0215
        gbc.setState(0xc8a6, 0xfce3, 0x1760, 0x657e, 0xb99d, 0xa62a, 0x0, 0x0);
        gbc.writeMem(0xc8a6, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfce3, gbc.sp());
        EXPECT(0xc8a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a6));
        EXPECT(0x2d, gbc.readMem(0xc8a7));
        // CB 2D 0216
        gbc.setState(0xb8c1, 0xed62, 0x3950, 0x49e2, 0xa1ba, 0x8587, 0x1, 0x0);
        gbc.writeMem(0xb8c1, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xed62, gbc.sp());
        EXPECT(0xb8c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8c1));
        EXPECT(0x2d, gbc.readMem(0xb8c2));
        // CB 2D 021A
        gbc.setState(0x915f, 0x8fa5, 0x7e20, 0xb07c, 0x3475, 0x721b, 0x0, 0x1);
        gbc.writeMem(0x915f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8fa5, gbc.sp());
        EXPECT(0x9161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x915f));
        EXPECT(0x2d, gbc.readMem(0x9160));
        // CB 2D 021B
        gbc.setState(0xd170, 0xf91c, 0xebb0, 0x2fb5, 0x6528, 0x3503, 0x0, 0x1);
        gbc.writeMem(0xd170, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf91c, gbc.sp());
        EXPECT(0xd172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd170));
        EXPECT(0x2d, gbc.readMem(0xd171));
        // CB 2D 021C
        gbc.setState(0xc9fc, 0x883d, 0x7ed0, 0xb272, 0x6ded, 0x6b84, 0x1, 0x1);
        gbc.writeMem(0xc9fc, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x883d, gbc.sp());
        EXPECT(0xc9fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9fc));
        EXPECT(0x2d, gbc.readMem(0xc9fd));
        // CB 2D 021D
        gbc.setState(0xe7df, 0x88c2, 0xa360, 0xfe1c, 0xcad5, 0xa361, 0x1, 0x0);
        gbc.writeMem(0xe7df, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x88c2, gbc.sp());
        EXPECT(0xe7e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7df));
        EXPECT(0x2d, gbc.readMem(0xe7e0));
        // CB 2D 021E
        gbc.setState(0xa24c, 0x327f, 0x5d60, 0x4d6c, 0x8b64, 0x938, 0x1, 0x0);
        gbc.writeMem(0xa24c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x327f, gbc.sp());
        EXPECT(0xa24e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa24c));
        EXPECT(0x2d, gbc.readMem(0xa24d));
        // CB 2D 021F
        gbc.setState(0xcbca, 0xfeed, 0x7bb0, 0x9a8e, 0xca18, 0x8d1, 0x0, 0x0);
        gbc.writeMem(0xcbca, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfeed, gbc.sp());
        EXPECT(0xcbcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbca));
        EXPECT(0x2d, gbc.readMem(0xcbcb));
        // CB 2D 0220
        gbc.setState(0xeb86, 0x331f, 0x510, 0xa655, 0x365d, 0x7763, 0x0, 0x1);
        gbc.writeMem(0xeb86, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x331f, gbc.sp());
        EXPECT(0xeb88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb86));
        EXPECT(0x2d, gbc.readMem(0xeb87));
        // CB 2D 0221
        gbc.setState(0x49ef, 0x9ab4, 0x9100, 0x9ea9, 0x895, 0x973e, 0x1, 0x1);
        gbc.writeMem(0x49ef, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9ab4, gbc.sp());
        EXPECT(0x49f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0222
        gbc.setState(0x1661, 0x9b27, 0x9c70, 0xc9b0, 0x9803, 0xbd60, 0x0, 0x0);
        gbc.writeMem(0x1661, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9b27, gbc.sp());
        EXPECT(0x1663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0223
        gbc.setState(0xbadb, 0xd89a, 0x4250, 0xa9de, 0x23f3, 0xfe63, 0x0, 0x1);
        gbc.writeMem(0xbadb, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd89a, gbc.sp());
        EXPECT(0xbadd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbadb));
        EXPECT(0x2d, gbc.readMem(0xbadc));
        // CB 2D 0224
        gbc.setState(0x9d63, 0xd240, 0x7920, 0x6b30, 0x8d3d, 0xad1, 0x1, 0x1);
        gbc.writeMem(0x9d63, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd240, gbc.sp());
        EXPECT(0x9d65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d63));
        EXPECT(0x2d, gbc.readMem(0x9d64));
        // CB 2D 0225
        gbc.setState(0xaaa5, 0xf899, 0x3210, 0x217, 0xf889, 0xeb48, 0x0, 0x0);
        gbc.writeMem(0xaaa5, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf899, gbc.sp());
        EXPECT(0xaaa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa5));
        EXPECT(0x2d, gbc.readMem(0xaaa6));
        // CB 2D 0226
        gbc.setState(0x1a6, 0xa86f, 0xb9a0, 0x332c, 0x3daa, 0x2eee, 0x1, 0x1);
        gbc.writeMem(0x1a6, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa86f, gbc.sp());
        EXPECT(0x1a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0227
        gbc.setState(0x181a, 0xca0, 0xb7d0, 0x879f, 0x22bf, 0xf91a, 0x0, 0x1);
        gbc.writeMem(0x181a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xca0, gbc.sp());
        EXPECT(0x181c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0228
        gbc.setState(0x3f8, 0x4e9a, 0xf630, 0xae7e, 0xfcb7, 0x918a, 0x0, 0x0);
        gbc.writeMem(0x3f8, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4e9a, gbc.sp());
        EXPECT(0x3fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0229
        gbc.setState(0x650c, 0x356a, 0x43d0, 0x3f3c, 0x6a7f, 0xae19, 0x1, 0x0);
        gbc.writeMem(0x650c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x356a, gbc.sp());
        EXPECT(0x650e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 022A
        gbc.setState(0x737e, 0xea91, 0x4e60, 0xe9b9, 0x8483, 0xa49c, 0x1, 0x1);
        gbc.writeMem(0x737e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xea91, gbc.sp());
        EXPECT(0x7380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 022B
        gbc.setState(0x8b14, 0x43ba, 0xfea0, 0x8917, 0x9b70, 0x72bf, 0x0, 0x0);
        gbc.writeMem(0x8b14, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x43ba, gbc.sp());
        EXPECT(0x8b16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b14));
        EXPECT(0x2d, gbc.readMem(0x8b15));
        // CB 2D 022C
        gbc.setState(0xbf83, 0xd605, 0x1600, 0x922d, 0xcca1, 0xd64c, 0x0, 0x0);
        gbc.writeMem(0xbf83, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd605, gbc.sp());
        EXPECT(0xbf85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf83));
        EXPECT(0x2d, gbc.readMem(0xbf84));
        // CB 2D 022D
        gbc.setState(0x8dd1, 0x1161, 0x7970, 0xa7a0, 0x7fa0, 0x440c, 0x1, 0x0);
        gbc.writeMem(0x8dd1, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1161, gbc.sp());
        EXPECT(0x8dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dd1));
        EXPECT(0x2d, gbc.readMem(0x8dd2));
        // CB 2D 022E
        gbc.setState(0xd9e4, 0xa809, 0xcd20, 0xaa, 0xaa0f, 0x9b65, 0x1, 0x0);
        gbc.writeMem(0xd9e4, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa809, gbc.sp());
        EXPECT(0xd9e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9e4));
        EXPECT(0x2d, gbc.readMem(0xd9e5));
        // CB 2D 022F
        gbc.setState(0xce8c, 0xbd49, 0x4e20, 0xfd5, 0x6dcc, 0x8c4c, 0x0, 0x0);
        gbc.writeMem(0xce8c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbd49, gbc.sp());
        EXPECT(0xce8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce8c));
        EXPECT(0x2d, gbc.readMem(0xce8d));
        // CB 2D 0230
        gbc.setState(0xb8be, 0xab6c, 0xd400, 0x7193, 0x6d3d, 0x69bd, 0x1, 0x1);
        gbc.writeMem(0xb8be, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xab6c, gbc.sp());
        EXPECT(0xb8c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8be));
        EXPECT(0x2d, gbc.readMem(0xb8bf));
        // CB 2D 0231
        gbc.setState(0xcd27, 0x5267, 0x2a40, 0x2506, 0xafec, 0x8d8b, 0x0, 0x1);
        gbc.writeMem(0xcd27, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5267, gbc.sp());
        EXPECT(0xcd29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd27));
        EXPECT(0x2d, gbc.readMem(0xcd28));
        // CB 2D 0233
        gbc.setState(0x2214, 0x8f09, 0x9fb0, 0xcc2, 0x1cec, 0x69d7, 0x0, 0x0);
        gbc.writeMem(0x2214, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8f09, gbc.sp());
        EXPECT(0x2216, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0234
        gbc.setState(0x83b6, 0x9192, 0x39b0, 0x1cb9, 0x5b82, 0x5ba3, 0x1, 0x0);
        gbc.writeMem(0x83b6, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9192, gbc.sp());
        EXPECT(0x83b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83b6));
        EXPECT(0x2d, gbc.readMem(0x83b7));
        // CB 2D 0235
        gbc.setState(0x1357, 0xc8cc, 0x65e0, 0x6925, 0x59fd, 0x118f, 0x1, 0x0);
        gbc.writeMem(0x1357, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc8cc, gbc.sp());
        EXPECT(0x1359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0236
        gbc.setState(0xdab7, 0x6333, 0xe050, 0x323e, 0xd612, 0xb239, 0x0, 0x1);
        gbc.writeMem(0xdab7, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6333, gbc.sp());
        EXPECT(0xdab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdab7));
        EXPECT(0x2d, gbc.readMem(0xdab8));
        // CB 2D 0237
        gbc.setState(0xc743, 0x3a2a, 0x19b0, 0x9a75, 0x6e96, 0x8d9a, 0x0, 0x0);
        gbc.writeMem(0xc743, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3a2a, gbc.sp());
        EXPECT(0xc745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc743));
        EXPECT(0x2d, gbc.readMem(0xc744));
        // CB 2D 0238
        gbc.setState(0x4420, 0xfd97, 0x8fc0, 0x3c68, 0xf7ad, 0x1dd2, 0x0, 0x0);
        gbc.writeMem(0x4420, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xfd97, gbc.sp());
        EXPECT(0x4422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0239
        gbc.setState(0x2c62, 0xc003, 0x52f0, 0xbfb3, 0x813d, 0x9894, 0x1, 0x0);
        gbc.writeMem(0x2c62, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc003, gbc.sp());
        EXPECT(0x2c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 023A
        gbc.setState(0x512, 0xbbd6, 0xc4d0, 0x524, 0xb388, 0x78f2, 0x1, 0x1);
        gbc.writeMem(0x512, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbbd6, gbc.sp());
        EXPECT(0x514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 023B
        gbc.setState(0x7ea1, 0x352c, 0x1dd0, 0x5d34, 0xe880, 0xf2cc, 0x0, 0x1);
        gbc.writeMem(0x7ea1, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x352c, gbc.sp());
        EXPECT(0x7ea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 023C
        gbc.setState(0x2d9a, 0x1f76, 0xacb0, 0xcd02, 0xcf2a, 0x3b60, 0x0, 0x1);
        gbc.writeMem(0x2d9a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1f76, gbc.sp());
        EXPECT(0x2d9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 023D
        gbc.setState(0xb610, 0x4876, 0x9db0, 0x4f5b, 0x9f8f, 0xf990, 0x1, 0x1);
        gbc.writeMem(0xb610, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4876, gbc.sp());
        EXPECT(0xb612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb610));
        EXPECT(0x2d, gbc.readMem(0xb611));
        // CB 2D 023E
        gbc.setState(0xc09c, 0xd9f0, 0x6c40, 0xd8d5, 0x1e70, 0xe9ce, 0x0, 0x0);
        gbc.writeMem(0xc09c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd9f0, gbc.sp());
        EXPECT(0xc09e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc09c));
        EXPECT(0x2d, gbc.readMem(0xc09d));
        // CB 2D 023F
        gbc.setState(0xbd65, 0x7024, 0xac70, 0x9f5c, 0x770f, 0xd400, 0x1, 0x1);
        gbc.writeMem(0xbd65, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7024, gbc.sp());
        EXPECT(0xbd67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd65));
        EXPECT(0x2d, gbc.readMem(0xbd66));
        // CB 2D 0240
        gbc.setState(0x1a61, 0xc34d, 0x9410, 0x881f, 0x8e49, 0xca7f, 0x0, 0x0);
        gbc.writeMem(0x1a61, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc34d, gbc.sp());
        EXPECT(0x1a63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0241
        gbc.setState(0x16fa, 0x321a, 0x8f80, 0xea54, 0xc4a0, 0x1236, 0x0, 0x1);
        gbc.writeMem(0x16fa, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x321a, gbc.sp());
        EXPECT(0x16fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0242
        gbc.setState(0xd557, 0x38b5, 0xea50, 0xc62d, 0x5ef4, 0xb478, 0x1, 0x0);
        gbc.writeMem(0xd557, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x38b5, gbc.sp());
        EXPECT(0xd559, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd557));
        EXPECT(0x2d, gbc.readMem(0xd558));
        // CB 2D 0243
        gbc.setState(0x2c93, 0xd00a, 0x9490, 0xd166, 0xd626, 0x973c, 0x1, 0x1);
        gbc.writeMem(0x2c93, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd00a, gbc.sp());
        EXPECT(0x2c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0244
        gbc.setState(0x125e, 0x904c, 0x28e0, 0x919e, 0xde16, 0x55ba, 0x0, 0x0);
        gbc.writeMem(0x125e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x904c, gbc.sp());
        EXPECT(0x1260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0245
        gbc.setState(0x505e, 0xee9e, 0x7600, 0x16ad, 0xe9ed, 0xd9d2, 0x0, 0x1);
        gbc.writeMem(0x505e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xee9e, gbc.sp());
        EXPECT(0x5060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0246
        gbc.setState(0x6611, 0x81d3, 0x5a90, 0xd44, 0xd1bd, 0x350a, 0x0, 0x1);
        gbc.writeMem(0x6611, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x81d3, gbc.sp());
        EXPECT(0x6613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0247
        gbc.setState(0xce94, 0x2ece, 0x6be0, 0x79b5, 0x8216, 0xc8fb, 0x1, 0x1);
        gbc.writeMem(0xce94, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2ece, gbc.sp());
        EXPECT(0xce96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce94));
        EXPECT(0x2d, gbc.readMem(0xce95));
        // CB 2D 0248
        gbc.setState(0xefa5, 0xaab8, 0xb50, 0xf17e, 0x2dd1, 0xd691, 0x0, 0x0);
        gbc.writeMem(0xefa5, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xaab8, gbc.sp());
        EXPECT(0xefa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefa5));
        EXPECT(0x2d, gbc.readMem(0xefa6));
        // CB 2D 0249
        gbc.setState(0x7674, 0x486d, 0xe7c0, 0x3bdb, 0xb523, 0xcef3, 0x0, 0x0);
        gbc.writeMem(0x7674, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x486d, gbc.sp());
        EXPECT(0x7676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 024A
        gbc.setState(0x4436, 0x4e36, 0x460, 0xf8d3, 0xc111, 0x1d40, 0x1, 0x0);
        gbc.writeMem(0x4436, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4e36, gbc.sp());
        EXPECT(0x4438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 024B
        gbc.setState(0x6cbc, 0xef3d, 0xc010, 0xf4e, 0x51fa, 0xcbb2, 0x1, 0x0);
        gbc.writeMem(0x6cbc, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xef3d, gbc.sp());
        EXPECT(0x6cbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 024C
        gbc.setState(0x8511, 0xd82c, 0xb0c0, 0x536e, 0x1052, 0xcbe6, 0x1, 0x1);
        gbc.writeMem(0x8511, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd82c, gbc.sp());
        EXPECT(0x8513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8511));
        EXPECT(0x2d, gbc.readMem(0x8512));
        // CB 2D 024D
        gbc.setState(0xd38, 0x9b42, 0x1da0, 0x5668, 0x1d4b, 0x81e8, 0x1, 0x0);
        gbc.writeMem(0xd38, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9b42, gbc.sp());
        EXPECT(0xd3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 024E
        gbc.setState(0xd809, 0xd8d2, 0x6770, 0x323a, 0x79bc, 0x3de2, 0x0, 0x0);
        gbc.writeMem(0xd809, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd8d2, gbc.sp());
        EXPECT(0xd80b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd809));
        EXPECT(0x2d, gbc.readMem(0xd80a));
        // CB 2D 0250
        gbc.setState(0x5ae6, 0x7544, 0x4140, 0xdbc, 0x1325, 0x146, 0x0, 0x1);
        gbc.writeMem(0x5ae6, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7544, gbc.sp());
        EXPECT(0x5ae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0251
        gbc.setState(0x636c, 0x8dd0, 0xf940, 0x6293, 0xc58f, 0x3bd0, 0x0, 0x1);
        gbc.writeMem(0x636c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8dd0, gbc.sp());
        EXPECT(0x636e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0252
        gbc.setState(0x8a20, 0xd62a, 0x14d0, 0xa10f, 0x7fb1, 0xa4ee, 0x0, 0x1);
        gbc.writeMem(0x8a20, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd62a, gbc.sp());
        EXPECT(0x8a22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a20));
        EXPECT(0x2d, gbc.readMem(0x8a21));
        // CB 2D 0253
        gbc.setState(0x2a08, 0x334d, 0x6df0, 0x9076, 0x5d0e, 0xddb4, 0x0, 0x1);
        gbc.writeMem(0x2a08, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x334d, gbc.sp());
        EXPECT(0x2a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0254
        gbc.setState(0x9167, 0x4b21, 0x50d0, 0x74d8, 0x9bd4, 0x4845, 0x0, 0x0);
        gbc.writeMem(0x9167, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4b21, gbc.sp());
        EXPECT(0x9169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9167));
        EXPECT(0x2d, gbc.readMem(0x9168));
        // CB 2D 0255
        gbc.setState(0xe299, 0x2f8, 0xed50, 0xfccb, 0x212, 0x200c, 0x0, 0x1);
        gbc.writeMem(0xe299, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2f8, gbc.sp());
        EXPECT(0xe29b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe299));
        EXPECT(0x2d, gbc.readMem(0xe29a));
        // CB 2D 0256
        gbc.setState(0x598c, 0x8dc0, 0x9150, 0xa7a9, 0xd752, 0x36a5, 0x0, 0x0);
        gbc.writeMem(0x598c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8dc0, gbc.sp());
        EXPECT(0x598e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0257
        gbc.setState(0xdfd0, 0xb027, 0x6f50, 0x3804, 0x642a, 0xe8da, 0x1, 0x1);
        gbc.writeMem(0xdfd0, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb027, gbc.sp());
        EXPECT(0xdfd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfd0));
        EXPECT(0x2d, gbc.readMem(0xdfd1));
        // CB 2D 0258
        gbc.setState(0xcd3a, 0x17e1, 0x2e00, 0x5073, 0x4c08, 0x2d68, 0x1, 0x1);
        gbc.writeMem(0xcd3a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x17e1, gbc.sp());
        EXPECT(0xcd3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd3a));
        EXPECT(0x2d, gbc.readMem(0xcd3b));
        // CB 2D 0259
        gbc.setState(0x69d6, 0x658, 0x62f0, 0x8ac7, 0x6f6, 0xe9d8, 0x0, 0x1);
        gbc.writeMem(0x69d6, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x658, gbc.sp());
        EXPECT(0x69d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 025A
        gbc.setState(0xbd82, 0x85f9, 0x1830, 0x4ed7, 0x3c38, 0xc8c5, 0x0, 0x0);
        gbc.writeMem(0xbd82, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x85f9, gbc.sp());
        EXPECT(0xbd84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd82));
        EXPECT(0x2d, gbc.readMem(0xbd83));
        // CB 2D 025B
        gbc.setState(0x564f, 0x804, 0xdf0, 0x759a, 0xf2f0, 0xcc14, 0x1, 0x1);
        gbc.writeMem(0x564f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x804, gbc.sp());
        EXPECT(0x5651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 025C
        gbc.setState(0xcf47, 0x43ee, 0x6230, 0xed6c, 0xcdba, 0x87ca, 0x1, 0x1);
        gbc.writeMem(0xcf47, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x43ee, gbc.sp());
        EXPECT(0xcf49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf47));
        EXPECT(0x2d, gbc.readMem(0xcf48));
        // CB 2D 025D
        gbc.setState(0xec28, 0x1c89, 0x8ed0, 0x7570, 0x397d, 0xff57, 0x1, 0x0);
        gbc.writeMem(0xec28, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1c89, gbc.sp());
        EXPECT(0xec2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec28));
        EXPECT(0x2d, gbc.readMem(0xec29));
        // CB 2D 025E
        gbc.setState(0x83d7, 0x6ba3, 0x2b0, 0x30c7, 0x480b, 0xe149, 0x1, 0x1);
        gbc.writeMem(0x83d7, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6ba3, gbc.sp());
        EXPECT(0x83d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d7));
        EXPECT(0x2d, gbc.readMem(0x83d8));
        // CB 2D 025F
        gbc.setState(0x6e46, 0x11db, 0x8b80, 0x8de3, 0x878f, 0xa61e, 0x0, 0x1);
        gbc.writeMem(0x6e46, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x11db, gbc.sp());
        EXPECT(0x6e48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0260
        gbc.setState(0xe182, 0xc74, 0xf10, 0xaf5a, 0xb306, 0xa108, 0x1, 0x0);
        gbc.writeMem(0xe182, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc74, gbc.sp());
        EXPECT(0xe184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe182));
        EXPECT(0x2d, gbc.readMem(0xe183));
        // CB 2D 0261
        gbc.setState(0x6f2, 0x9457, 0xa010, 0xc1e7, 0xf28c, 0x7eef, 0x1, 0x1);
        gbc.writeMem(0x6f2, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9457, gbc.sp());
        EXPECT(0x6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0262
        gbc.setState(0x2d30, 0x4a48, 0x7fb0, 0x6a97, 0x83b8, 0xcceb, 0x1, 0x1);
        gbc.writeMem(0x2d30, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4a48, gbc.sp());
        EXPECT(0x2d32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0263
        gbc.setState(0x7032, 0x796a, 0xdee0, 0xbcce, 0x7ae9, 0xc18c, 0x1, 0x1);
        gbc.writeMem(0x7032, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x796a, gbc.sp());
        EXPECT(0x7034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0264
        gbc.setState(0x3032, 0x9a28, 0xbec0, 0xcc60, 0xfd2c, 0x634f, 0x1, 0x0);
        gbc.writeMem(0x3032, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9a28, gbc.sp());
        EXPECT(0x3034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0265
        gbc.setState(0xe931, 0x5131, 0xd910, 0xa1fb, 0x6348, 0x8051, 0x1, 0x1);
        gbc.writeMem(0xe931, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5131, gbc.sp());
        EXPECT(0xe933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe931));
        EXPECT(0x2d, gbc.readMem(0xe932));
        // CB 2D 0266
        gbc.setState(0xd3e, 0x5a84, 0xc870, 0xbeca, 0x9b65, 0xef75, 0x0, 0x1);
        gbc.writeMem(0xd3e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5a84, gbc.sp());
        EXPECT(0xd40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0267
        gbc.setState(0xde41, 0xb65c, 0xa130, 0xd130, 0x27f1, 0x4d0a, 0x1, 0x0);
        gbc.writeMem(0xde41, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb65c, gbc.sp());
        EXPECT(0xde43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde41));
        EXPECT(0x2d, gbc.readMem(0xde42));
        // CB 2D 0268
        gbc.setState(0x4bdd, 0x4745, 0xb860, 0x66e4, 0x11c7, 0x515d, 0x0, 0x1);
        gbc.writeMem(0x4bdd, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4745, gbc.sp());
        EXPECT(0x4bdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0269
        gbc.setState(0x9e71, 0x27de, 0x63e0, 0xbb0b, 0x5604, 0xcd37, 0x1, 0x0);
        gbc.writeMem(0x9e71, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x27de, gbc.sp());
        EXPECT(0x9e73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e71));
        EXPECT(0x2d, gbc.readMem(0x9e72));
        // CB 2D 026A
        gbc.setState(0x92af, 0x2076, 0x7c60, 0xc586, 0x654a, 0x3f2c, 0x1, 0x1);
        gbc.writeMem(0x92af, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2076, gbc.sp());
        EXPECT(0x92b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92af));
        EXPECT(0x2d, gbc.readMem(0x92b0));
        // CB 2D 026B
        gbc.setState(0x5061, 0xc9fd, 0x5480, 0x12fa, 0xfdfa, 0xb963, 0x0, 0x1);
        gbc.writeMem(0x5061, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc9fd, gbc.sp());
        EXPECT(0x5063, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 026D
        gbc.setState(0xb4e1, 0xb764, 0xe570, 0x79d8, 0xe970, 0x11ec, 0x0, 0x1);
        gbc.writeMem(0xb4e1, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb764, gbc.sp());
        EXPECT(0xb4e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e1));
        EXPECT(0x2d, gbc.readMem(0xb4e2));
        // CB 2D 026E
        gbc.setState(0xa27a, 0x1fd2, 0x2ec0, 0xcb5, 0xc0a4, 0x81bc, 0x0, 0x0);
        gbc.writeMem(0xa27a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1fd2, gbc.sp());
        EXPECT(0xa27c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa27a));
        EXPECT(0x2d, gbc.readMem(0xa27b));
        // CB 2D 026F
        gbc.setState(0x525f, 0xeb23, 0x5230, 0x6551, 0xbba5, 0x2743, 0x0, 0x1);
        gbc.writeMem(0x525f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xeb23, gbc.sp());
        EXPECT(0x5261, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0270
        gbc.setState(0x1810, 0x8a6, 0xacd0, 0x425a, 0x1043, 0xeabe, 0x0, 0x1);
        gbc.writeMem(0x1810, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8a6, gbc.sp());
        EXPECT(0x1812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0271
        gbc.setState(0x8ee3, 0xc4fa, 0xff0, 0x85f8, 0x618f, 0x2be4, 0x0, 0x0);
        gbc.writeMem(0x8ee3, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc4fa, gbc.sp());
        EXPECT(0x8ee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee3));
        EXPECT(0x2d, gbc.readMem(0x8ee4));
        // CB 2D 0272
        gbc.setState(0x262d, 0x7e9a, 0xd750, 0xe222, 0xbd7f, 0xda0b, 0x1, 0x1);
        gbc.writeMem(0x262d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7e9a, gbc.sp());
        EXPECT(0x262f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0273
        gbc.setState(0x6b25, 0xb748, 0xfcf0, 0xfc14, 0x73ae, 0x3b0, 0x1, 0x1);
        gbc.writeMem(0x6b25, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb748, gbc.sp());
        EXPECT(0x6b27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0274
        gbc.setState(0x6d53, 0xba48, 0x5d70, 0x80da, 0x7987, 0x7c30, 0x1, 0x1);
        gbc.writeMem(0x6d53, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xba48, gbc.sp());
        EXPECT(0x6d55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0275
        gbc.setState(0x12aa, 0x898, 0x2820, 0x774f, 0xc2a8, 0x8aaa, 0x1, 0x1);
        gbc.writeMem(0x12aa, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x898, gbc.sp());
        EXPECT(0x12ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0276
        gbc.setState(0x5a2e, 0xb94c, 0xd6c0, 0x50e0, 0x5d93, 0xf7a6, 0x1, 0x0);
        gbc.writeMem(0x5a2e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb94c, gbc.sp());
        EXPECT(0x5a30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0277
        gbc.setState(0x26, 0x439b, 0xd9b0, 0x1ac1, 0x1099, 0xc38e, 0x1, 0x0);
        gbc.writeMem(0x26, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x439b, gbc.sp());
        EXPECT(0x28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0278
        gbc.setState(0x2c4b, 0x4904, 0x8c90, 0x22fa, 0x18a5, 0xad89, 0x0, 0x1);
        gbc.writeMem(0x2c4b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4904, gbc.sp());
        EXPECT(0x2c4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0279
        gbc.setState(0x8c1d, 0x8e44, 0xac30, 0x6bbb, 0xa2ee, 0x9af3, 0x1, 0x0);
        gbc.writeMem(0x8c1d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8e44, gbc.sp());
        EXPECT(0x8c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c1d));
        EXPECT(0x2d, gbc.readMem(0x8c1e));
        // CB 2D 027A
        gbc.setState(0x9e40, 0xc44f, 0x4fc0, 0xfd43, 0x6cce, 0x6a7c, 0x0, 0x0);
        gbc.writeMem(0x9e40, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc44f, gbc.sp());
        EXPECT(0x9e42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e40));
        EXPECT(0x2d, gbc.readMem(0x9e41));
        // CB 2D 027B
        gbc.setState(0x3115, 0xb7b2, 0x5d0, 0xda85, 0x75f1, 0x8a00, 0x1, 0x0);
        gbc.writeMem(0x3115, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb7b2, gbc.sp());
        EXPECT(0x3117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 027C
        gbc.setState(0xec26, 0x7dc8, 0x8060, 0xd2b, 0x526d, 0x60da, 0x0, 0x1);
        gbc.writeMem(0xec26, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7dc8, gbc.sp());
        EXPECT(0xec28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec26));
        EXPECT(0x2d, gbc.readMem(0xec27));
        // CB 2D 027E
        gbc.setState(0xe31f, 0xd562, 0xe5c0, 0x96b7, 0x773a, 0x78cc, 0x1, 0x0);
        gbc.writeMem(0xe31f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd562, gbc.sp());
        EXPECT(0xe321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe31f));
        EXPECT(0x2d, gbc.readMem(0xe320));
        // CB 2D 027F
        gbc.setState(0x36aa, 0xb695, 0x1bc0, 0xdd5d, 0xf391, 0xf389, 0x1, 0x1);
        gbc.writeMem(0x36aa, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb695, gbc.sp());
        EXPECT(0x36ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0280
        gbc.setState(0x19da, 0x569b, 0x9bd0, 0x5864, 0x26c8, 0x2d52, 0x1, 0x1);
        gbc.writeMem(0x19da, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x569b, gbc.sp());
        EXPECT(0x19dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0281
        gbc.setState(0x2dbd, 0xf348, 0x8f80, 0x3fb2, 0xa50c, 0xbf86, 0x0, 0x1);
        gbc.writeMem(0x2dbd, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf348, gbc.sp());
        EXPECT(0x2dbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0282
        gbc.setState(0x298a, 0x99c7, 0x1ed0, 0xfb6e, 0xc057, 0x3237, 0x0, 0x0);
        gbc.writeMem(0x298a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x99c7, gbc.sp());
        EXPECT(0x298c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0283
        gbc.setState(0xaff6, 0x9056, 0xe9e0, 0x11aa, 0xe4e, 0xe024, 0x0, 0x0);
        gbc.writeMem(0xaff6, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9056, gbc.sp());
        EXPECT(0xaff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff6));
        EXPECT(0x2d, gbc.readMem(0xaff7));
        // CB 2D 0284
        gbc.setState(0x2b38, 0x9c2b, 0x2880, 0x652d, 0x7489, 0x3a33, 0x0, 0x1);
        gbc.writeMem(0x2b38, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9c2b, gbc.sp());
        EXPECT(0x2b3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0285
        gbc.setState(0x53d4, 0xdafe, 0x1f40, 0x6d00, 0x7b9c, 0xbd07, 0x0, 0x1);
        gbc.writeMem(0x53d4, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdafe, gbc.sp());
        EXPECT(0x53d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0286
        gbc.setState(0xee08, 0x99f6, 0xe1d0, 0xddab, 0x564b, 0x426d, 0x1, 0x1);
        gbc.writeMem(0xee08, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x99f6, gbc.sp());
        EXPECT(0xee0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee08));
        EXPECT(0x2d, gbc.readMem(0xee09));
        // CB 2D 0287
        gbc.setState(0x2629, 0xb03c, 0x14f0, 0x67f5, 0xe862, 0xbfd6, 0x0, 0x1);
        gbc.writeMem(0x2629, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb03c, gbc.sp());
        EXPECT(0x262b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0288
        gbc.setState(0x3ca6, 0x8bdf, 0x5560, 0x317c, 0x9af6, 0x5984, 0x0, 0x0);
        gbc.writeMem(0x3ca6, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8bdf, gbc.sp());
        EXPECT(0x3ca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0289
        gbc.setState(0xd73b, 0x2775, 0xe030, 0x7ca5, 0xf0e2, 0xc243, 0x0, 0x1);
        gbc.writeMem(0xd73b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2775, gbc.sp());
        EXPECT(0xd73d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd73b));
        EXPECT(0x2d, gbc.readMem(0xd73c));
        // CB 2D 028A
        gbc.setState(0xafce, 0x33fd, 0x9010, 0xc347, 0x657c, 0xed25, 0x1, 0x0);
        gbc.writeMem(0xafce, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x33fd, gbc.sp());
        EXPECT(0xafd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafce));
        EXPECT(0x2d, gbc.readMem(0xafcf));
        // CB 2D 028B
        gbc.setState(0x8f4, 0x3a1f, 0xd790, 0xe5be, 0x6be4, 0x4d07, 0x0, 0x1);
        gbc.writeMem(0x8f4, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3a1f, gbc.sp());
        EXPECT(0x8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 028C
        gbc.setState(0x4e1b, 0x62cb, 0x4fb0, 0xf2ba, 0x87a1, 0x4332, 0x1, 0x1);
        gbc.writeMem(0x4e1b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x62cb, gbc.sp());
        EXPECT(0x4e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 028D
        gbc.setState(0x169d, 0xa0dc, 0xb890, 0xad09, 0xf4b4, 0x4ff, 0x1, 0x0);
        gbc.writeMem(0x169d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa0dc, gbc.sp());
        EXPECT(0x169f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 028E
        gbc.setState(0x746b, 0xc207, 0xe540, 0xf4aa, 0xe8fd, 0xb28b, 0x0, 0x0);
        gbc.writeMem(0x746b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc207, gbc.sp());
        EXPECT(0x746d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0290
        gbc.setState(0x5755, 0x5323, 0xbe50, 0x17c7, 0x791f, 0x549d, 0x0, 0x1);
        gbc.writeMem(0x5755, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5323, gbc.sp());
        EXPECT(0x5757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0291
        gbc.setState(0x1517, 0xf8df, 0x87e0, 0x5834, 0xa750, 0x7dab, 0x1, 0x0);
        gbc.writeMem(0x1517, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf8df, gbc.sp());
        EXPECT(0x1519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0292
        gbc.setState(0xef08, 0x990b, 0x8d80, 0xea6e, 0x2af8, 0x26cb, 0x1, 0x1);
        gbc.writeMem(0xef08, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x990b, gbc.sp());
        EXPECT(0xef0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef08));
        EXPECT(0x2d, gbc.readMem(0xef09));
        // CB 2D 0293
        gbc.setState(0x36b4, 0x82da, 0x37c0, 0x8cbd, 0xf119, 0xcee4, 0x0, 0x1);
        gbc.writeMem(0x36b4, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x82da, gbc.sp());
        EXPECT(0x36b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0294
        gbc.setState(0x3efc, 0xebcb, 0x2620, 0xe85a, 0x872e, 0x9523, 0x1, 0x1);
        gbc.writeMem(0x3efc, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xebcb, gbc.sp());
        EXPECT(0x3efe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0295
        gbc.setState(0x9092, 0x2667, 0xd30, 0xbeb2, 0xfc5, 0x6b6f, 0x1, 0x0);
        gbc.writeMem(0x9092, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2667, gbc.sp());
        EXPECT(0x9094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9092));
        EXPECT(0x2d, gbc.readMem(0x9093));
        // CB 2D 0296
        gbc.setState(0xbe74, 0xfe07, 0x77f0, 0x5731, 0x9c4a, 0xaeba, 0x0, 0x0);
        gbc.writeMem(0xbe74, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfe07, gbc.sp());
        EXPECT(0xbe76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe74));
        EXPECT(0x2d, gbc.readMem(0xbe75));
        // CB 2D 0298
        gbc.setState(0x7fec, 0x46f, 0x6370, 0xbe90, 0x5b66, 0x510, 0x0, 0x0);
        gbc.writeMem(0x7fec, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x46f, gbc.sp());
        EXPECT(0x7fee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0299
        gbc.setState(0x255a, 0x2814, 0x60d0, 0x21d9, 0xe863, 0x6754, 0x1, 0x0);
        gbc.writeMem(0x255a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2814, gbc.sp());
        EXPECT(0x255c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 029A
        gbc.setState(0xbc36, 0x54db, 0x8980, 0x7fd0, 0x8630, 0x8ed2, 0x1, 0x1);
        gbc.writeMem(0xbc36, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x54db, gbc.sp());
        EXPECT(0xbc38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc36));
        EXPECT(0x2d, gbc.readMem(0xbc37));
        // CB 2D 029B
        gbc.setState(0xeaec, 0xcefb, 0x5c20, 0xa1c, 0xa4ab, 0x23b7, 0x0, 0x0);
        gbc.writeMem(0xeaec, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcefb, gbc.sp());
        EXPECT(0xeaee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaec));
        EXPECT(0x2d, gbc.readMem(0xeaed));
        // CB 2D 029C
        gbc.setState(0x5b1a, 0x802a, 0x7950, 0xd6cf, 0xebee, 0xc178, 0x0, 0x0);
        gbc.writeMem(0x5b1a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x802a, gbc.sp());
        EXPECT(0x5b1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 029D
        gbc.setState(0xcc6f, 0xcda2, 0x46f0, 0x8451, 0xbb21, 0x26d, 0x0, 0x1);
        gbc.writeMem(0xcc6f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xcda2, gbc.sp());
        EXPECT(0xcc71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc6f));
        EXPECT(0x2d, gbc.readMem(0xcc70));
        // CB 2D 029E
        gbc.setState(0x9b0e, 0xc440, 0x8a40, 0x4116, 0x3436, 0xd5b5, 0x1, 0x1);
        gbc.writeMem(0x9b0e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc440, gbc.sp());
        EXPECT(0x9b10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b0e));
        EXPECT(0x2d, gbc.readMem(0x9b0f));
        // CB 2D 029F
        gbc.setState(0xb20d, 0xc756, 0x1110, 0xd3f9, 0x373b, 0xec7, 0x0, 0x0);
        gbc.writeMem(0xb20d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc756, gbc.sp());
        EXPECT(0xb20f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb20d));
        EXPECT(0x2d, gbc.readMem(0xb20e));
        // CB 2D 02A0
        gbc.setState(0xde96, 0x85fa, 0xcd30, 0xd5b2, 0x3466, 0x1678, 0x1, 0x1);
        gbc.writeMem(0xde96, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x85fa, gbc.sp());
        EXPECT(0xde98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde96));
        EXPECT(0x2d, gbc.readMem(0xde97));
        // CB 2D 02A2
        gbc.setState(0x480d, 0x2971, 0xdd40, 0xb65b, 0xa9ec, 0x732e, 0x1, 0x1);
        gbc.writeMem(0x480d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2971, gbc.sp());
        EXPECT(0x480f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 02A3
        gbc.setState(0x927c, 0x3d42, 0x2640, 0x729b, 0x7e06, 0xf9a, 0x1, 0x0);
        gbc.writeMem(0x927c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3d42, gbc.sp());
        EXPECT(0x927e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x927c));
        EXPECT(0x2d, gbc.readMem(0x927d));
        // CB 2D 02A4
        gbc.setState(0xb8e8, 0xdb64, 0xc680, 0x9e49, 0x532d, 0x18e1, 0x1, 0x1);
        gbc.writeMem(0xb8e8, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xdb64, gbc.sp());
        EXPECT(0xb8ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e8));
        EXPECT(0x2d, gbc.readMem(0xb8e9));
        // CB 2D 02A5
        gbc.setState(0x7c30, 0x7758, 0x7260, 0x638d, 0xe36b, 0x3e59, 0x0, 0x1);
        gbc.writeMem(0x7c30, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7758, gbc.sp());
        EXPECT(0x7c32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 02A6
        gbc.setState(0xc6cb, 0xf88, 0x8110, 0x48d3, 0xa6ff, 0x7d9, 0x1, 0x1);
        gbc.writeMem(0xc6cb, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf88, gbc.sp());
        EXPECT(0xc6cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6cb));
        EXPECT(0x2d, gbc.readMem(0xc6cc));
        // CB 2D 02A7
        gbc.setState(0x2e66, 0x63f6, 0xf050, 0xde8, 0x64db, 0x6787, 0x0, 0x0);
        gbc.writeMem(0x2e66, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x63f6, gbc.sp());
        EXPECT(0x2e68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 02A8
        gbc.setState(0x7e46, 0x4d1, 0x660, 0xc554, 0xfb30, 0x674e, 0x1, 0x1);
        gbc.writeMem(0x7e46, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4d1, gbc.sp());
        EXPECT(0x7e48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 02A9
        gbc.setState(0xa233, 0x9388, 0x22d0, 0xbc9b, 0xe75e, 0x31d9, 0x0, 0x1);
        gbc.writeMem(0xa233, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9388, gbc.sp());
        EXPECT(0xa235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa233));
        EXPECT(0x2d, gbc.readMem(0xa234));
        // CB 2D 02AA
        gbc.setState(0x26bf, 0xb69, 0xe880, 0xb4b1, 0x7a60, 0x54a4, 0x0, 0x1);
        gbc.writeMem(0x26bf, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb69, gbc.sp());
        EXPECT(0x26c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 02AB
        gbc.setState(0x509c, 0x52e2, 0xacf0, 0xa565, 0x314b, 0xb89e, 0x0, 0x1);
        gbc.writeMem(0x509c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x52e2, gbc.sp());
        EXPECT(0x509e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 02AC
        gbc.setState(0x8cea, 0x680a, 0xd630, 0x7808, 0xf4b9, 0xfe3c, 0x1, 0x1);
        gbc.writeMem(0x8cea, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x680a, gbc.sp());
        EXPECT(0x8cec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cea));
        EXPECT(0x2d, gbc.readMem(0x8ceb));
        // CB 2D 02AD
        gbc.setState(0xe57d, 0x6138, 0x1a40, 0x7a25, 0x2819, 0x4bcc, 0x0, 0x1);
        gbc.writeMem(0xe57d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6138, gbc.sp());
        EXPECT(0xe57f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe57d));
        EXPECT(0x2d, gbc.readMem(0xe57e));
        // CB 2D 02AE
        gbc.setState(0xe5c2, 0x4c1f, 0xcd10, 0xd06b, 0x5b66, 0x6283, 0x1, 0x0);
        gbc.writeMem(0xe5c2, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4c1f, gbc.sp());
        EXPECT(0xe5c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5c2));
        EXPECT(0x2d, gbc.readMem(0xe5c3));
        // CB 2D 02AF
        gbc.setState(0x9526, 0xc862, 0xc9b0, 0xd837, 0x8d0, 0x20b9, 0x1, 0x1);
        gbc.writeMem(0x9526, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc862, gbc.sp());
        EXPECT(0x9528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9526));
        EXPECT(0x2d, gbc.readMem(0x9527));
        // CB 2D 02B0
        gbc.setState(0x843e, 0xf01d, 0xed0, 0x3c8f, 0x5232, 0xd0ff, 0x1, 0x1);
        gbc.writeMem(0x843e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf01d, gbc.sp());
        EXPECT(0x8440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x843e));
        EXPECT(0x2d, gbc.readMem(0x843f));
        // CB 2D 02B1
        gbc.setState(0x957e, 0x2baf, 0xb4d0, 0x37cf, 0x142a, 0x6e58, 0x1, 0x0);
        gbc.writeMem(0x957e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2baf, gbc.sp());
        EXPECT(0x9580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x957e));
        EXPECT(0x2d, gbc.readMem(0x957f));
        // CB 2D 02B2
        gbc.setState(0x48de, 0x4919, 0x5d00, 0xf281, 0xa486, 0x9c05, 0x1, 0x1);
        gbc.writeMem(0x48de, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4919, gbc.sp());
        EXPECT(0x48e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 02B3
        gbc.setState(0x29cc, 0x2ab5, 0xee0, 0xf900, 0x2d4b, 0x6a24, 0x1, 0x0);
        gbc.writeMem(0x29cc, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2ab5, gbc.sp());
        EXPECT(0x29ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 02B4
        gbc.setState(0xc7e, 0x4118, 0xdd70, 0x8f17, 0x64c0, 0xc83d, 0x1, 0x1);
        gbc.writeMem(0xc7e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4118, gbc.sp());
        EXPECT(0xc80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 02B5
        gbc.setState(0x3d53, 0x7a1f, 0x9920, 0xef9e, 0x73a4, 0x2ef7, 0x0, 0x0);
        gbc.writeMem(0x3d53, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7a1f, gbc.sp());
        EXPECT(0x3d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 02B6
        gbc.setState(0x7eb5, 0x119a, 0xbab0, 0x4ceb, 0xbb60, 0x8536, 0x0, 0x1);
        gbc.writeMem(0x7eb5, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x119a, gbc.sp());
        EXPECT(0x7eb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 02B7
        gbc.setState(0xbb3c, 0xc7e6, 0x10, 0x3e01, 0xc37, 0x80fa, 0x0, 0x0);
        gbc.writeMem(0xbb3c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc7e6, gbc.sp());
        EXPECT(0xbb3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb3c));
        EXPECT(0x2d, gbc.readMem(0xbb3d));
        // CB 2D 02B8
        gbc.setState(0x1964, 0xb43a, 0x2a50, 0xe02d, 0x3f05, 0x662e, 0x1, 0x1);
        gbc.writeMem(0x1964, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb43a, gbc.sp());
        EXPECT(0x1966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 02B9
        gbc.setState(0x329f, 0xf095, 0xbc80, 0xf6a1, 0x997b, 0x65f2, 0x1, 0x0);
        gbc.writeMem(0x329f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf095, gbc.sp());
        EXPECT(0x32a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 02BA
        gbc.setState(0x406c, 0xbd83, 0xbd30, 0xb655, 0xf132, 0x5fb3, 0x0, 0x0);
        gbc.writeMem(0x406c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbd83, gbc.sp());
        EXPECT(0x406e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 02BB
        gbc.setState(0xdcdc, 0x4eb8, 0xa210, 0x99ea, 0xd081, 0xa112, 0x0, 0x1);
        gbc.writeMem(0xdcdc, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4eb8, gbc.sp());
        EXPECT(0xdcde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcdc));
        EXPECT(0x2d, gbc.readMem(0xdcdd));
        // CB 2D 02BC
        gbc.setState(0x6baf, 0x9a90, 0x1590, 0x529d, 0xd9ea, 0xc799, 0x0, 0x0);
        gbc.writeMem(0x6baf, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9a90, gbc.sp());
        EXPECT(0x6bb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 02BD
        gbc.setState(0x6221, 0x78f4, 0x360, 0x9dec, 0x72f, 0x91be, 0x1, 0x1);
        gbc.writeMem(0x6221, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x78f4, gbc.sp());
        EXPECT(0x6223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 02BE
        gbc.setState(0x5c24, 0xdef1, 0x5680, 0xe3ca, 0x9d81, 0xd754, 0x1, 0x1);
        gbc.writeMem(0x5c24, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xdef1, gbc.sp());
        EXPECT(0x5c26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 02BF
        gbc.setState(0xc660, 0xa638, 0x3a40, 0x6162, 0x6c37, 0xefe4, 0x1, 0x1);
        gbc.writeMem(0xc660, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa638, gbc.sp());
        EXPECT(0xc662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc660));
        EXPECT(0x2d, gbc.readMem(0xc661));
        // CB 2D 02C0
        gbc.setState(0x2fd2, 0x8410, 0x6370, 0x2dfe, 0x4dad, 0xa8ad, 0x0, 0x0);
        gbc.writeMem(0x2fd2, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8410, gbc.sp());
        EXPECT(0x2fd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 02C1
        gbc.setState(0x3242, 0x1d12, 0x39f0, 0xfd3d, 0xb979, 0x5756, 0x0, 0x0);
        gbc.writeMem(0x3242, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1d12, gbc.sp());
        EXPECT(0x3244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 02C2
        gbc.setState(0xde10, 0x154c, 0x4dc0, 0x14ed, 0x905b, 0xd381, 0x1, 0x0);
        gbc.writeMem(0xde10, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x154c, gbc.sp());
        EXPECT(0xde12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde10));
        EXPECT(0x2d, gbc.readMem(0xde11));
        // CB 2D 02C3
        gbc.setState(0x8f3e, 0x6e9a, 0xb2a0, 0xac4e, 0x9ff, 0xcc7f, 0x1, 0x0);
        gbc.writeMem(0x8f3e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6e9a, gbc.sp());
        EXPECT(0x8f40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f3e));
        EXPECT(0x2d, gbc.readMem(0x8f3f));
        // CB 2D 02C4
        gbc.setState(0x1f0c, 0xf202, 0xcdf0, 0x3bcc, 0x2d9e, 0x103c, 0x0, 0x0);
        gbc.writeMem(0x1f0c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf202, gbc.sp());
        EXPECT(0x1f0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 02C5
        gbc.setState(0x9ae8, 0xef50, 0x7650, 0xc2ee, 0x9607, 0x78cf, 0x1, 0x1);
        gbc.writeMem(0x9ae8, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xef50, gbc.sp());
        EXPECT(0x9aea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae8));
        EXPECT(0x2d, gbc.readMem(0x9ae9));
        // CB 2D 02C6
        gbc.setState(0x7b2d, 0x7ece, 0xf150, 0x4fb4, 0xc416, 0x4f3b, 0x1, 0x1);
        gbc.writeMem(0x7b2d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7ece, gbc.sp());
        EXPECT(0x7b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 02C7
        gbc.setState(0x7082, 0xced0, 0xa940, 0xe96, 0x9a7a, 0x7087, 0x1, 0x0);
        gbc.writeMem(0x7082, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xced0, gbc.sp());
        EXPECT(0x7084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 02C9
        gbc.setState(0xb2f8, 0x54c3, 0xd040, 0xb620, 0x49a6, 0x11d2, 0x1, 0x1);
        gbc.writeMem(0xb2f8, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x54c3, gbc.sp());
        EXPECT(0xb2fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f8));
        EXPECT(0x2d, gbc.readMem(0xb2f9));
        // CB 2D 02CA
        gbc.setState(0xadf3, 0x558e, 0x9980, 0x9bd0, 0xa0a0, 0x43f6, 0x1, 0x0);
        gbc.writeMem(0xadf3, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x558e, gbc.sp());
        EXPECT(0xadf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf3));
        EXPECT(0x2d, gbc.readMem(0xadf4));
        // CB 2D 02CB
        gbc.setState(0x98de, 0x5b7e, 0x950, 0x22df, 0x4bc8, 0xb621, 0x1, 0x0);
        gbc.writeMem(0x98de, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5b7e, gbc.sp());
        EXPECT(0x98e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98de));
        EXPECT(0x2d, gbc.readMem(0x98df));
        // CB 2D 02CC
        gbc.setState(0xba1d, 0x47d0, 0x190, 0x3db7, 0x4cda, 0x27a0, 0x1, 0x1);
        gbc.writeMem(0xba1d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x47d0, gbc.sp());
        EXPECT(0xba1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba1d));
        EXPECT(0x2d, gbc.readMem(0xba1e));
        // CB 2D 02CD
        gbc.setState(0xe357, 0x3e16, 0x1ab0, 0x1a8a, 0xb1de, 0x2b75, 0x1, 0x0);
        gbc.writeMem(0xe357, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3e16, gbc.sp());
        EXPECT(0xe359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe357));
        EXPECT(0x2d, gbc.readMem(0xe358));
        // CB 2D 02CE
        gbc.setState(0x24be, 0x6f2d, 0x88c0, 0x705c, 0xedf0, 0xc4b5, 0x0, 0x1);
        gbc.writeMem(0x24be, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6f2d, gbc.sp());
        EXPECT(0x24c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 02CF
        gbc.setState(0xa4e8, 0x6a4c, 0x4830, 0x6f8e, 0xc5a0, 0x54c0, 0x1, 0x0);
        gbc.writeMem(0xa4e8, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6a4c, gbc.sp());
        EXPECT(0xa4ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4e8));
        EXPECT(0x2d, gbc.readMem(0xa4e9));
        // CB 2D 02D0
        gbc.setState(0xb31c, 0x4daf, 0xca10, 0x4530, 0xdc95, 0xd467, 0x1, 0x1);
        gbc.writeMem(0xb31c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4daf, gbc.sp());
        EXPECT(0xb31e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb31c));
        EXPECT(0x2d, gbc.readMem(0xb31d));
        // CB 2D 02D2
        gbc.setState(0x91fb, 0x9613, 0xb90, 0xd459, 0xb891, 0x7d47, 0x1, 0x0);
        gbc.writeMem(0x91fb, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9613, gbc.sp());
        EXPECT(0x91fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91fb));
        EXPECT(0x2d, gbc.readMem(0x91fc));
        // CB 2D 02D4
        gbc.setState(0x98bd, 0x83ae, 0x21c0, 0x64fb, 0x4200, 0x51ef, 0x0, 0x0);
        gbc.writeMem(0x98bd, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x83ae, gbc.sp());
        EXPECT(0x98bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98bd));
        EXPECT(0x2d, gbc.readMem(0x98be));
        // CB 2D 02D5
        gbc.setState(0x7d4b, 0x99d5, 0xe920, 0xb7c0, 0x48bc, 0x22cf, 0x0, 0x0);
        gbc.writeMem(0x7d4b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x99d5, gbc.sp());
        EXPECT(0x7d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 02D6
        gbc.setState(0x7cde, 0xb101, 0x6ea0, 0xb1fb, 0xc8e1, 0x266e, 0x1, 0x0);
        gbc.writeMem(0x7cde, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb101, gbc.sp());
        EXPECT(0x7ce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 02D7
        gbc.setState(0x7fbf, 0xd2d7, 0xb530, 0xea59, 0x4560, 0x54c0, 0x1, 0x1);
        gbc.writeMem(0x7fbf, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd2d7, gbc.sp());
        EXPECT(0x7fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 02D8
        gbc.setState(0xe158, 0xd1f6, 0x1d50, 0x10a7, 0x2ce7, 0x70ce, 0x0, 0x0);
        gbc.writeMem(0xe158, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd1f6, gbc.sp());
        EXPECT(0xe15a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe158));
        EXPECT(0x2d, gbc.readMem(0xe159));
        // CB 2D 02D9
        gbc.setState(0xe106, 0x79b1, 0x3be0, 0x8559, 0xcfe4, 0x463, 0x0, 0x1);
        gbc.writeMem(0xe106, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x79b1, gbc.sp());
        EXPECT(0xe108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe106));
        EXPECT(0x2d, gbc.readMem(0xe107));
        // CB 2D 02DA
        gbc.setState(0xd720, 0xd575, 0x6fd0, 0xd7e1, 0xab07, 0x7e0d, 0x0, 0x1);
        gbc.writeMem(0xd720, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd575, gbc.sp());
        EXPECT(0xd722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd720));
        EXPECT(0x2d, gbc.readMem(0xd721));
        // CB 2D 02DB
        gbc.setState(0x37aa, 0xedec, 0x3a40, 0x5839, 0x4518, 0x384, 0x1, 0x0);
        gbc.writeMem(0x37aa, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xedec, gbc.sp());
        EXPECT(0x37ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 02DC
        gbc.setState(0x7892, 0x8dc7, 0x3360, 0x7581, 0xf48a, 0x443b, 0x0, 0x1);
        gbc.writeMem(0x7892, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8dc7, gbc.sp());
        EXPECT(0x7894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 02DD
        gbc.setState(0xa684, 0xc1cf, 0x46a0, 0x1578, 0xd2ca, 0xcffb, 0x0, 0x0);
        gbc.writeMem(0xa684, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc1cf, gbc.sp());
        EXPECT(0xa686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa684));
        EXPECT(0x2d, gbc.readMem(0xa685));
        // CB 2D 02DE
        gbc.setState(0x1f62, 0x1900, 0x4c90, 0x39e8, 0xe5e2, 0xdbb7, 0x0, 0x1);
        gbc.writeMem(0x1f62, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1900, gbc.sp());
        EXPECT(0x1f64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 02DF
        gbc.setState(0x90a2, 0x9115, 0x25f0, 0xa650, 0x815d, 0xe248, 0x0, 0x1);
        gbc.writeMem(0x90a2, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9115, gbc.sp());
        EXPECT(0x90a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90a2));
        EXPECT(0x2d, gbc.readMem(0x90a3));
        // CB 2D 02E0
        gbc.setState(0x7d15, 0xf46d, 0xda0, 0xfae7, 0xdfab, 0x413f, 0x1, 0x0);
        gbc.writeMem(0x7d15, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf46d, gbc.sp());
        EXPECT(0x7d17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 02E1
        gbc.setState(0xc51e, 0x2677, 0xde0, 0xb94c, 0xf3a2, 0x715b, 0x0, 0x1);
        gbc.writeMem(0xc51e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2677, gbc.sp());
        EXPECT(0xc520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc51e));
        EXPECT(0x2d, gbc.readMem(0xc51f));
        // CB 2D 02E2
        gbc.setState(0x95b6, 0xc032, 0x9c70, 0xe19d, 0xe723, 0x9d03, 0x1, 0x1);
        gbc.writeMem(0x95b6, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc032, gbc.sp());
        EXPECT(0x95b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b6));
        EXPECT(0x2d, gbc.readMem(0x95b7));
        // CB 2D 02E3
        gbc.setState(0x85c3, 0x98cd, 0x8320, 0x226a, 0xaa1e, 0x204, 0x0, 0x0);
        gbc.writeMem(0x85c3, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x98cd, gbc.sp());
        EXPECT(0x85c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c3));
        EXPECT(0x2d, gbc.readMem(0x85c4));
        // CB 2D 02E4
        gbc.setState(0xac9d, 0x2757, 0x8180, 0xa4eb, 0x99fe, 0xe597, 0x0, 0x0);
        gbc.writeMem(0xac9d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2757, gbc.sp());
        EXPECT(0xac9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac9d));
        EXPECT(0x2d, gbc.readMem(0xac9e));
        // CB 2D 02E5
        gbc.setState(0xe532, 0xb4d7, 0x4a60, 0xc3fc, 0xae47, 0xe22d, 0x0, 0x1);
        gbc.writeMem(0xe532, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb4d7, gbc.sp());
        EXPECT(0xe534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe532));
        EXPECT(0x2d, gbc.readMem(0xe533));
        // CB 2D 02E6
        gbc.setState(0x195f, 0x689a, 0x1b60, 0x4837, 0xafda, 0x4718, 0x1, 0x1);
        gbc.writeMem(0x195f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x689a, gbc.sp());
        EXPECT(0x1961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 02E7
        gbc.setState(0x498e, 0xd8a5, 0x3dd0, 0x6cae, 0x6a3c, 0x9d4a, 0x1, 0x0);
        gbc.writeMem(0x498e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd8a5, gbc.sp());
        EXPECT(0x4990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 02E9
        gbc.setState(0xd2bb, 0x26ce, 0xfd60, 0x2777, 0x1a39, 0xf50d, 0x0, 0x1);
        gbc.writeMem(0xd2bb, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x26ce, gbc.sp());
        EXPECT(0xd2bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2bb));
        EXPECT(0x2d, gbc.readMem(0xd2bc));
        // CB 2D 02EA
        gbc.setState(0x538a, 0xd1b2, 0xe260, 0xdb8e, 0xa9ac, 0x3306, 0x0, 0x0);
        gbc.writeMem(0x538a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd1b2, gbc.sp());
        EXPECT(0x538c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 02EB
        gbc.setState(0xd909, 0x357e, 0xc350, 0x33a9, 0xf8a3, 0xe170, 0x1, 0x0);
        gbc.writeMem(0xd909, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x357e, gbc.sp());
        EXPECT(0xd90b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd909));
        EXPECT(0x2d, gbc.readMem(0xd90a));
        // CB 2D 02EC
        gbc.setState(0x3482, 0xe2d8, 0xabb0, 0xa949, 0xd445, 0xac4, 0x1, 0x1);
        gbc.writeMem(0x3482, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe2d8, gbc.sp());
        EXPECT(0x3484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 02EE
        gbc.setState(0xc83d, 0xb15a, 0x2e20, 0xa3f8, 0x4dac, 0xdc65, 0x1, 0x1);
        gbc.writeMem(0xc83d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb15a, gbc.sp());
        EXPECT(0xc83f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc83d));
        EXPECT(0x2d, gbc.readMem(0xc83e));
        // CB 2D 02EF
        gbc.setState(0x5721, 0x32e, 0x9c90, 0x3d1f, 0xc0ff, 0x7b0d, 0x0, 0x1);
        gbc.writeMem(0x5721, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x32e, gbc.sp());
        EXPECT(0x5723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 02F0
        gbc.setState(0x2160, 0x5b6d, 0x1a20, 0xc467, 0x7bd3, 0x7fce, 0x1, 0x0);
        gbc.writeMem(0x2160, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5b6d, gbc.sp());
        EXPECT(0x2162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 02F1
        gbc.setState(0x5d2b, 0x1752, 0x2a00, 0xa0a3, 0xd53b, 0x69b5, 0x1, 0x1);
        gbc.writeMem(0x5d2b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1752, gbc.sp());
        EXPECT(0x5d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 02F2
        gbc.setState(0xa84f, 0x37ef, 0xd350, 0x9226, 0x4db3, 0xdd8c, 0x1, 0x0);
        gbc.writeMem(0xa84f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x37ef, gbc.sp());
        EXPECT(0xa851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa84f));
        EXPECT(0x2d, gbc.readMem(0xa850));
        // CB 2D 02F3
        gbc.setState(0xac95, 0xb30e, 0xf1f0, 0x4966, 0xb119, 0xf09c, 0x0, 0x0);
        gbc.writeMem(0xac95, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb30e, gbc.sp());
        EXPECT(0xac97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac95));
        EXPECT(0x2d, gbc.readMem(0xac96));
        // CB 2D 02F4
        gbc.setState(0x8639, 0x1e4e, 0xac0, 0x82e7, 0xe9d7, 0xec68, 0x1, 0x0);
        gbc.writeMem(0x8639, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1e4e, gbc.sp());
        EXPECT(0x863b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8639));
        EXPECT(0x2d, gbc.readMem(0x863a));
        // CB 2D 02F5
        gbc.setState(0x2ad5, 0x613f, 0xe0, 0xedca, 0xc5d6, 0xdbc, 0x0, 0x1);
        gbc.writeMem(0x2ad5, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x613f, gbc.sp());
        EXPECT(0x2ad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 02F6
        gbc.setState(0x4ce, 0x54d0, 0x590, 0xbabe, 0xc9b8, 0x8423, 0x0, 0x1);
        gbc.writeMem(0x4ce, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x54d0, gbc.sp());
        EXPECT(0x4d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 02F7
        gbc.setState(0x7c8b, 0xfdc2, 0x2e20, 0x3578, 0xec41, 0xd5ef, 0x1, 0x0);
        gbc.writeMem(0x7c8b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xfdc2, gbc.sp());
        EXPECT(0x7c8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 02F8
        gbc.setState(0x7b48, 0x176f, 0xd0f0, 0x914c, 0x80d4, 0x2f1c, 0x1, 0x1);
        gbc.writeMem(0x7b48, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x176f, gbc.sp());
        EXPECT(0x7b4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 02F9
        gbc.setState(0x739d, 0xd56b, 0xe280, 0xf034, 0x3200, 0x89e2, 0x1, 0x0);
        gbc.writeMem(0x739d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd56b, gbc.sp());
        EXPECT(0x739f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 02FA
        gbc.setState(0xcfd, 0xf725, 0x5a50, 0x394f, 0xd901, 0xff, 0x0, 0x0);
        gbc.writeMem(0xcfd, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf725, gbc.sp());
        EXPECT(0xcff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 02FB
        gbc.setState(0xe790, 0xa849, 0x4480, 0xfd2d, 0x78c1, 0x4a15, 0x0, 0x0);
        gbc.writeMem(0xe790, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa849, gbc.sp());
        EXPECT(0xe792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe790));
        EXPECT(0x2d, gbc.readMem(0xe791));
        // CB 2D 02FC
        gbc.setState(0xd311, 0x66f5, 0x9e0, 0x31f7, 0xedd8, 0xbfa2, 0x1, 0x0);
        gbc.writeMem(0xd311, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x66f5, gbc.sp());
        EXPECT(0xd313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd311));
        EXPECT(0x2d, gbc.readMem(0xd312));
        // CB 2D 02FE
        gbc.setState(0xbe93, 0x7988, 0x7bd0, 0x104a, 0xa95c, 0xb7d0, 0x0, 0x1);
        gbc.writeMem(0xbe93, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7988, gbc.sp());
        EXPECT(0xbe95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe93));
        EXPECT(0x2d, gbc.readMem(0xbe94));
        // CB 2D 02FF
        gbc.setState(0xb4d0, 0x4b5c, 0x32e0, 0x1815, 0x76c1, 0xe26b, 0x0, 0x1);
        gbc.writeMem(0xb4d0, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4b5c, gbc.sp());
        EXPECT(0xb4d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4d0));
        EXPECT(0x2d, gbc.readMem(0xb4d1));
        // CB 2D 0300
        gbc.setState(0xb9f1, 0xa2ff, 0xfb00, 0x81, 0x200a, 0xbb90, 0x0, 0x1);
        gbc.writeMem(0xb9f1, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa2ff, gbc.sp());
        EXPECT(0xb9f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f1));
        EXPECT(0x2d, gbc.readMem(0xb9f2));
        // CB 2D 0301
        gbc.setState(0x7dad, 0x2e1a, 0xb260, 0x500, 0x9a38, 0xaf55, 0x1, 0x1);
        gbc.writeMem(0x7dad, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2e1a, gbc.sp());
        EXPECT(0x7daf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0303
        gbc.setState(0x5b5, 0xa6a0, 0xf5b0, 0x5bb9, 0x1a17, 0x8c1, 0x1, 0x1);
        gbc.writeMem(0x5b5, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa6a0, gbc.sp());
        EXPECT(0x5b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0304
        gbc.setState(0x824d, 0x341a, 0xbc40, 0xe02c, 0xf925, 0x7fb4, 0x1, 0x0);
        gbc.writeMem(0x824d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x341a, gbc.sp());
        EXPECT(0x824f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x824d));
        EXPECT(0x2d, gbc.readMem(0x824e));
        // CB 2D 0305
        gbc.setState(0x881f, 0xf4ba, 0x6ba0, 0xc5af, 0x475c, 0x5165, 0x0, 0x1);
        gbc.writeMem(0x881f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf4ba, gbc.sp());
        EXPECT(0x8821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x881f));
        EXPECT(0x2d, gbc.readMem(0x8820));
        // CB 2D 0306
        gbc.setState(0x285, 0xd106, 0xa1d0, 0xc3f8, 0x8bca, 0x30fd, 0x1, 0x1);
        gbc.writeMem(0x285, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd106, gbc.sp());
        EXPECT(0x287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0307
        gbc.setState(0xca92, 0xafb9, 0xe170, 0xcf8d, 0x7545, 0xc7b7, 0x1, 0x1);
        gbc.writeMem(0xca92, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xafb9, gbc.sp());
        EXPECT(0xca94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca92));
        EXPECT(0x2d, gbc.readMem(0xca93));
        // CB 2D 0308
        gbc.setState(0x9c48, 0x7914, 0xc5e0, 0x62ae, 0x4120, 0xc807, 0x1, 0x0);
        gbc.writeMem(0x9c48, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7914, gbc.sp());
        EXPECT(0x9c4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c48));
        EXPECT(0x2d, gbc.readMem(0x9c49));
        // CB 2D 0309
        gbc.setState(0x6d2b, 0xaeda, 0x9d20, 0xdcb7, 0x9922, 0xfc5e, 0x1, 0x1);
        gbc.writeMem(0x6d2b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xaeda, gbc.sp());
        EXPECT(0x6d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 030A
        gbc.setState(0x9079, 0xc36c, 0x3820, 0xe566, 0xccde, 0x3e4e, 0x0, 0x0);
        gbc.writeMem(0x9079, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc36c, gbc.sp());
        EXPECT(0x907b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9079));
        EXPECT(0x2d, gbc.readMem(0x907a));
        // CB 2D 030B
        gbc.setState(0x35e4, 0xd8d1, 0x5bf0, 0xdfd1, 0x75b3, 0x5929, 0x1, 0x0);
        gbc.writeMem(0x35e4, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd8d1, gbc.sp());
        EXPECT(0x35e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 030C
        gbc.setState(0x6dda, 0x6452, 0x9c60, 0xc363, 0xe7cf, 0xeb4e, 0x0, 0x1);
        gbc.writeMem(0x6dda, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6452, gbc.sp());
        EXPECT(0x6ddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 030D
        gbc.setState(0x7527, 0xeb7, 0x600, 0x813e, 0xb0c3, 0x1716, 0x1, 0x0);
        gbc.writeMem(0x7527, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xeb7, gbc.sp());
        EXPECT(0x7529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 030E
        gbc.setState(0xafd7, 0x30bd, 0x3f40, 0x2ece, 0x7fa4, 0xf82f, 0x0, 0x0);
        gbc.writeMem(0xafd7, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x30bd, gbc.sp());
        EXPECT(0xafd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd7));
        EXPECT(0x2d, gbc.readMem(0xafd8));
        // CB 2D 030F
        gbc.setState(0xed2d, 0xcd8c, 0xd110, 0xb767, 0x29e3, 0xda10, 0x0, 0x0);
        gbc.writeMem(0xed2d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcd8c, gbc.sp());
        EXPECT(0xed2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed2d));
        EXPECT(0x2d, gbc.readMem(0xed2e));
        // CB 2D 0310
        gbc.setState(0x282b, 0x786a, 0xb940, 0x7905, 0xc3d7, 0x903b, 0x1, 0x0);
        gbc.writeMem(0x282b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x786a, gbc.sp());
        EXPECT(0x282d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0311
        gbc.setState(0x2159, 0xef90, 0x8c0, 0xb170, 0xd8b3, 0x8fe8, 0x0, 0x0);
        gbc.writeMem(0x2159, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xef90, gbc.sp());
        EXPECT(0x215b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0312
        gbc.setState(0x299c, 0x6f2, 0xa890, 0x3fde, 0x9f71, 0xa8e3, 0x0, 0x0);
        gbc.writeMem(0x299c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6f2, gbc.sp());
        EXPECT(0x299e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0313
        gbc.setState(0xca69, 0x3058, 0xe400, 0xc31f, 0x35ec, 0xce17, 0x0, 0x0);
        gbc.writeMem(0xca69, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3058, gbc.sp());
        EXPECT(0xca6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca69));
        EXPECT(0x2d, gbc.readMem(0xca6a));
        // CB 2D 0314
        gbc.setState(0x3451, 0xcbcc, 0xcd20, 0xa9b0, 0xcb8e, 0x87d9, 0x1, 0x1);
        gbc.writeMem(0x3451, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xcbcc, gbc.sp());
        EXPECT(0x3453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0315
        gbc.setState(0x2db8, 0x3ca0, 0x2300, 0xe6d0, 0x3c49, 0xcdd1, 0x0, 0x1);
        gbc.writeMem(0x2db8, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3ca0, gbc.sp());
        EXPECT(0x2dba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0316
        gbc.setState(0x98aa, 0x8ffc, 0xca00, 0x9158, 0x8b91, 0xd1ad, 0x0, 0x0);
        gbc.writeMem(0x98aa, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8ffc, gbc.sp());
        EXPECT(0x98ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98aa));
        EXPECT(0x2d, gbc.readMem(0x98ab));
        // CB 2D 0317
        gbc.setState(0x78f0, 0x28b4, 0xe5b0, 0xe363, 0x43f6, 0xa3c1, 0x1, 0x0);
        gbc.writeMem(0x78f0, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x28b4, gbc.sp());
        EXPECT(0x78f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0318
        gbc.setState(0xcc95, 0xdb41, 0xfc0, 0xe11c, 0x3efc, 0xba11, 0x1, 0x1);
        gbc.writeMem(0xcc95, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xdb41, gbc.sp());
        EXPECT(0xcc97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc95));
        EXPECT(0x2d, gbc.readMem(0xcc96));
        // CB 2D 0319
        gbc.setState(0x6085, 0xbe47, 0xe1b0, 0xec79, 0x6b79, 0x5024, 0x0, 0x1);
        gbc.writeMem(0x6085, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbe47, gbc.sp());
        EXPECT(0x6087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 031A
        gbc.setState(0x2f4c, 0x26d1, 0x400, 0xf9fa, 0x8af8, 0xff0d, 0x1, 0x0);
        gbc.writeMem(0x2f4c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x26d1, gbc.sp());
        EXPECT(0x2f4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 031B
        gbc.setState(0xbc3c, 0xc0a1, 0x9000, 0x5ebd, 0x5a4d, 0x64c2, 0x1, 0x1);
        gbc.writeMem(0xbc3c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc0a1, gbc.sp());
        EXPECT(0xbc3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc3c));
        EXPECT(0x2d, gbc.readMem(0xbc3d));
        // CB 2D 031C
        gbc.setState(0x7b31, 0x67bd, 0xc130, 0xa69c, 0x126c, 0xfe65, 0x0, 0x0);
        gbc.writeMem(0x7b31, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x67bd, gbc.sp());
        EXPECT(0x7b33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 031D
        gbc.setState(0x2fc9, 0x40ab, 0x3bc0, 0x1cd7, 0x9e6f, 0xee95, 0x0, 0x1);
        gbc.writeMem(0x2fc9, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x40ab, gbc.sp());
        EXPECT(0x2fcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 031E
        gbc.setState(0x101c, 0x89e, 0x4fc0, 0xb33e, 0x1dda, 0xc64d, 0x1, 0x0);
        gbc.writeMem(0x101c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x89e, gbc.sp());
        EXPECT(0x101e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 031F
        gbc.setState(0x52a3, 0xd180, 0x2520, 0x5ab8, 0x1439, 0x67ce, 0x1, 0x0);
        gbc.writeMem(0x52a3, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd180, gbc.sp());
        EXPECT(0x52a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0321
        gbc.setState(0x1c85, 0x8c13, 0x7970, 0x7c58, 0x1ac2, 0xedc0, 0x0, 0x0);
        gbc.writeMem(0x1c85, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8c13, gbc.sp());
        EXPECT(0x1c87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0323
        gbc.setState(0x2246, 0x9f92, 0x21e0, 0x7cc0, 0x8458, 0xada2, 0x1, 0x0);
        gbc.writeMem(0x2246, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9f92, gbc.sp());
        EXPECT(0x2248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0324
        gbc.setState(0x7425, 0x8121, 0x6150, 0xaf61, 0x932e, 0x3737, 0x1, 0x0);
        gbc.writeMem(0x7425, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8121, gbc.sp());
        EXPECT(0x7427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0325
        gbc.setState(0xdd27, 0x8b10, 0xcc50, 0x9afb, 0xa196, 0x3bda, 0x1, 0x0);
        gbc.writeMem(0xdd27, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8b10, gbc.sp());
        EXPECT(0xdd29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd27));
        EXPECT(0x2d, gbc.readMem(0xdd28));
        // CB 2D 0326
        gbc.setState(0xbdd9, 0x959b, 0x79e0, 0xd903, 0x9c36, 0x5659, 0x1, 0x1);
        gbc.writeMem(0xbdd9, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x959b, gbc.sp());
        EXPECT(0xbddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdd9));
        EXPECT(0x2d, gbc.readMem(0xbdda));
        // CB 2D 0327
        gbc.setState(0x3190, 0x637b, 0xcb70, 0x1675, 0x4618, 0x8c4f, 0x1, 0x0);
        gbc.writeMem(0x3190, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x637b, gbc.sp());
        EXPECT(0x3192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0328
        gbc.setState(0xd44f, 0x86d4, 0x71b0, 0xd472, 0xfa9, 0x19ff, 0x0, 0x1);
        gbc.writeMem(0xd44f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x86d4, gbc.sp());
        EXPECT(0xd451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd44f));
        EXPECT(0x2d, gbc.readMem(0xd450));
        // CB 2D 0329
        gbc.setState(0x1245, 0xbf5d, 0x29d0, 0x593b, 0x8d18, 0x47f1, 0x1, 0x0);
        gbc.writeMem(0x1245, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbf5d, gbc.sp());
        EXPECT(0x1247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 032A
        gbc.setState(0xca7, 0x34ab, 0xbfa0, 0xa588, 0x773, 0x4a50, 0x1, 0x0);
        gbc.writeMem(0xca7, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x34ab, gbc.sp());
        EXPECT(0xca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 032B
        gbc.setState(0x25a2, 0x6d1c, 0xdc30, 0xa460, 0xfafb, 0x7e0e, 0x0, 0x1);
        gbc.writeMem(0x25a2, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6d1c, gbc.sp());
        EXPECT(0x25a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 032C
        gbc.setState(0xdd2d, 0xa782, 0x3880, 0x49fd, 0xe3fe, 0x9e24, 0x0, 0x1);
        gbc.writeMem(0xdd2d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa782, gbc.sp());
        EXPECT(0xdd2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd2d));
        EXPECT(0x2d, gbc.readMem(0xdd2e));
        // CB 2D 032D
        gbc.setState(0xb242, 0xf24d, 0x13b0, 0x76cd, 0x8257, 0xc39c, 0x1, 0x1);
        gbc.writeMem(0xb242, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf24d, gbc.sp());
        EXPECT(0xb244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb242));
        EXPECT(0x2d, gbc.readMem(0xb243));
        // CB 2D 032E
        gbc.setState(0xb03d, 0x1661, 0x2490, 0xdc56, 0x48e4, 0x34, 0x1, 0x0);
        gbc.writeMem(0xb03d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1661, gbc.sp());
        EXPECT(0xb03f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb03d));
        EXPECT(0x2d, gbc.readMem(0xb03e));
        // CB 2D 032F
        gbc.setState(0xb0ef, 0x10ab, 0xaf10, 0x9027, 0x17ee, 0x68db, 0x1, 0x0);
        gbc.writeMem(0xb0ef, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x10ab, gbc.sp());
        EXPECT(0xb0f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0ef));
        EXPECT(0x2d, gbc.readMem(0xb0f0));
        // CB 2D 0330
        gbc.setState(0x49bc, 0xb62d, 0x5670, 0x70e5, 0x2ec0, 0xfa16, 0x1, 0x1);
        gbc.writeMem(0x49bc, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb62d, gbc.sp());
        EXPECT(0x49be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0332
        gbc.setState(0x12b, 0x961, 0xe520, 0xf288, 0x6745, 0x810, 0x1, 0x0);
        gbc.writeMem(0x12b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x961, gbc.sp());
        EXPECT(0x12d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0333
        gbc.setState(0x8f35, 0x2d8e, 0xe0, 0xdd5, 0xfc7b, 0x1b1b, 0x0, 0x1);
        gbc.writeMem(0x8f35, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2d8e, gbc.sp());
        EXPECT(0x8f37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f35));
        EXPECT(0x2d, gbc.readMem(0x8f36));
        // CB 2D 0334
        gbc.setState(0x84cf, 0xaad6, 0x4ea0, 0xa8f, 0x174b, 0xa4aa, 0x1, 0x0);
        gbc.writeMem(0x84cf, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xaad6, gbc.sp());
        EXPECT(0x84d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84cf));
        EXPECT(0x2d, gbc.readMem(0x84d0));
        // CB 2D 0335
        gbc.setState(0x8cf0, 0x69c8, 0xa190, 0x385b, 0x63b, 0x9554, 0x0, 0x1);
        gbc.writeMem(0x8cf0, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x69c8, gbc.sp());
        EXPECT(0x8cf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf0));
        EXPECT(0x2d, gbc.readMem(0x8cf1));
        // CB 2D 0336
        gbc.setState(0x85e3, 0xeae9, 0xfa0, 0xf5bd, 0xe37d, 0xc0f7, 0x0, 0x1);
        gbc.writeMem(0x85e3, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xeae9, gbc.sp());
        EXPECT(0x85e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85e3));
        EXPECT(0x2d, gbc.readMem(0x85e4));
        // CB 2D 0337
        gbc.setState(0x9fef, 0x2aa3, 0x7b0, 0x2dd5, 0x485f, 0x7539, 0x0, 0x1);
        gbc.writeMem(0x9fef, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2aa3, gbc.sp());
        EXPECT(0x9ff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fef));
        EXPECT(0x2d, gbc.readMem(0x9ff0));
        // CB 2D 0338
        gbc.setState(0x199e, 0xfab9, 0x5f40, 0x1425, 0x2cf, 0xc98f, 0x0, 0x0);
        gbc.writeMem(0x199e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfab9, gbc.sp());
        EXPECT(0x19a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0339
        gbc.setState(0x3b18, 0x5c39, 0xce50, 0x5413, 0xa85d, 0xd9da, 0x0, 0x1);
        gbc.writeMem(0x3b18, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5c39, gbc.sp());
        EXPECT(0x3b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 033A
        gbc.setState(0x3524, 0x6bf8, 0x93e0, 0x203f, 0xf7cb, 0x7272, 0x1, 0x0);
        gbc.writeMem(0x3524, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6bf8, gbc.sp());
        EXPECT(0x3526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 033B
        gbc.setState(0x4411, 0xb5fa, 0x5a80, 0x1879, 0x9e90, 0xdf9d, 0x1, 0x0);
        gbc.writeMem(0x4411, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb5fa, gbc.sp());
        EXPECT(0x4413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 033C
        gbc.setState(0xc5f4, 0x708b, 0x7ef0, 0x6133, 0xd2ed, 0xa7fe, 0x1, 0x1);
        gbc.writeMem(0xc5f4, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x708b, gbc.sp());
        EXPECT(0xc5f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5f4));
        EXPECT(0x2d, gbc.readMem(0xc5f5));
        // CB 2D 033D
        gbc.setState(0xb635, 0x44c5, 0x5080, 0x6a9, 0xc5, 0x6a9e, 0x1, 0x0);
        gbc.writeMem(0xb635, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x44c5, gbc.sp());
        EXPECT(0xb637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb635));
        EXPECT(0x2d, gbc.readMem(0xb636));
        // CB 2D 033E
        gbc.setState(0xe2a5, 0x1546, 0xa600, 0x4aa5, 0x82c, 0xa206, 0x1, 0x0);
        gbc.writeMem(0xe2a5, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1546, gbc.sp());
        EXPECT(0xe2a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2a5));
        EXPECT(0x2d, gbc.readMem(0xe2a6));
        // CB 2D 033F
        gbc.setState(0xf3a, 0x7425, 0xbb90, 0xec5, 0x47cc, 0xd7ae, 0x0, 0x0);
        gbc.writeMem(0xf3a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7425, gbc.sp());
        EXPECT(0xf3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0340
        gbc.setState(0x2ecc, 0xddb5, 0xa10, 0x64a5, 0xd480, 0x9b9e, 0x1, 0x1);
        gbc.writeMem(0x2ecc, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xddb5, gbc.sp());
        EXPECT(0x2ece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0341
        gbc.setState(0x1242, 0xbb42, 0x5a60, 0xc77f, 0xeb73, 0xbe8e, 0x0, 0x0);
        gbc.writeMem(0x1242, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xbb42, gbc.sp());
        EXPECT(0x1244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0342
        gbc.setState(0x8570, 0xec19, 0xff40, 0xd515, 0xa095, 0x9562, 0x1, 0x1);
        gbc.writeMem(0x8570, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xec19, gbc.sp());
        EXPECT(0x8572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8570));
        EXPECT(0x2d, gbc.readMem(0x8571));
        // CB 2D 0343
        gbc.setState(0xe014, 0x92ba, 0x50f0, 0x4417, 0x9333, 0xb3f6, 0x0, 0x0);
        gbc.writeMem(0xe014, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x92ba, gbc.sp());
        EXPECT(0xe016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe014));
        EXPECT(0x2d, gbc.readMem(0xe015));
        // CB 2D 0344
        gbc.setState(0x8fe7, 0xfd23, 0x43f0, 0xe2d1, 0x79ca, 0x6148, 0x1, 0x0);
        gbc.writeMem(0x8fe7, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xfd23, gbc.sp());
        EXPECT(0x8fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fe7));
        EXPECT(0x2d, gbc.readMem(0x8fe8));
        // CB 2D 0345
        gbc.setState(0xf89, 0xe188, 0xe20, 0x337d, 0x9d86, 0x2db3, 0x1, 0x1);
        gbc.writeMem(0xf89, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe188, gbc.sp());
        EXPECT(0xf8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0346
        gbc.setState(0x7d92, 0x6491, 0xec50, 0x7208, 0x72f5, 0x6e53, 0x1, 0x0);
        gbc.writeMem(0x7d92, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6491, gbc.sp());
        EXPECT(0x7d94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0347
        gbc.setState(0x9cff, 0xd434, 0x40f0, 0xe234, 0x2d6c, 0x761c, 0x0, 0x1);
        gbc.writeMem(0x9cff, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd434, gbc.sp());
        EXPECT(0x9d01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cff));
        EXPECT(0x2d, gbc.readMem(0x9d00));
        // CB 2D 0348
        gbc.setState(0x815a, 0x886b, 0x950, 0x8cce, 0x9c30, 0x27b9, 0x1, 0x1);
        gbc.writeMem(0x815a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x886b, gbc.sp());
        EXPECT(0x815c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x815a));
        EXPECT(0x2d, gbc.readMem(0x815b));
        // CB 2D 034A
        gbc.setState(0xc068, 0xc442, 0x6320, 0xb8b9, 0xeb9a, 0x8751, 0x0, 0x1);
        gbc.writeMem(0xc068, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc442, gbc.sp());
        EXPECT(0xc06a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc068));
        EXPECT(0x2d, gbc.readMem(0xc069));
        // CB 2D 034B
        gbc.setState(0x499f, 0xc467, 0xd8e0, 0x503c, 0x79c, 0x925a, 0x0, 0x1);
        gbc.writeMem(0x499f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc467, gbc.sp());
        EXPECT(0x49a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 034C
        gbc.setState(0x1277, 0xe7d1, 0x6500, 0xc04, 0x2437, 0x98f6, 0x0, 0x0);
        gbc.writeMem(0x1277, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe7d1, gbc.sp());
        EXPECT(0x1279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 034D
        gbc.setState(0x854d, 0x3203, 0x8ad0, 0xb81e, 0x7748, 0xab8b, 0x1, 0x1);
        gbc.writeMem(0x854d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3203, gbc.sp());
        EXPECT(0x854f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x854d));
        EXPECT(0x2d, gbc.readMem(0x854e));
        // CB 2D 034E
        gbc.setState(0x4a80, 0x2be3, 0xadb0, 0x2112, 0xaca9, 0x5bd4, 0x0, 0x0);
        gbc.writeMem(0x4a80, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2be3, gbc.sp());
        EXPECT(0x4a82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 034F
        gbc.setState(0x73d3, 0xd769, 0x720, 0xa076, 0xbd4d, 0xb861, 0x1, 0x0);
        gbc.writeMem(0x73d3, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd769, gbc.sp());
        EXPECT(0x73d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0350
        gbc.setState(0x963d, 0xc1ae, 0x5280, 0x2649, 0xf459, 0x7ebe, 0x1, 0x1);
        gbc.writeMem(0x963d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc1ae, gbc.sp());
        EXPECT(0x963f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x963d));
        EXPECT(0x2d, gbc.readMem(0x963e));
        // CB 2D 0351
        gbc.setState(0x5ead, 0x223d, 0xe760, 0xdb6b, 0xb1b0, 0x4190, 0x1, 0x1);
        gbc.writeMem(0x5ead, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x223d, gbc.sp());
        EXPECT(0x5eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0353
        gbc.setState(0x8e5, 0xbbe, 0x1310, 0x4bc, 0x6daa, 0xa97e, 0x0, 0x0);
        gbc.writeMem(0x8e5, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbbe, gbc.sp());
        EXPECT(0x8e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0354
        gbc.setState(0xe022, 0x1267, 0xe9f0, 0x671e, 0xf727, 0x5941, 0x1, 0x1);
        gbc.writeMem(0xe022, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1267, gbc.sp());
        EXPECT(0xe024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe022));
        EXPECT(0x2d, gbc.readMem(0xe023));
        // CB 2D 0355
        gbc.setState(0x9429, 0x7238, 0xd340, 0x48ea, 0x958d, 0xf856, 0x0, 0x1);
        gbc.writeMem(0x9429, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7238, gbc.sp());
        EXPECT(0x942b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9429));
        EXPECT(0x2d, gbc.readMem(0x942a));
        // CB 2D 0356
        gbc.setState(0x8a4b, 0xca11, 0xd090, 0xcc69, 0x4919, 0x7bb0, 0x1, 0x0);
        gbc.writeMem(0x8a4b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xca11, gbc.sp());
        EXPECT(0x8a4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a4b));
        EXPECT(0x2d, gbc.readMem(0x8a4c));
        // CB 2D 0357
        gbc.setState(0x108, 0xde1, 0x5290, 0x95e0, 0x713, 0x3f4c, 0x0, 0x1);
        gbc.writeMem(0x108, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xde1, gbc.sp());
        EXPECT(0x10a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0358
        gbc.setState(0xb3ad, 0x91cd, 0x6340, 0x1ec6, 0xff27, 0x8983, 0x0, 0x1);
        gbc.writeMem(0xb3ad, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x91cd, gbc.sp());
        EXPECT(0xb3af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3ad));
        EXPECT(0x2d, gbc.readMem(0xb3ae));
        // CB 2D 0359
        gbc.setState(0xb58, 0x2866, 0x8b40, 0x5741, 0xcd7a, 0xc0a4, 0x1, 0x1);
        gbc.writeMem(0xb58, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2866, gbc.sp());
        EXPECT(0xb5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 035B
        gbc.setState(0x4c1f, 0xc938, 0xc8f0, 0x2215, 0xe396, 0x86f8, 0x0, 0x1);
        gbc.writeMem(0x4c1f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc938, gbc.sp());
        EXPECT(0x4c21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 035C
        gbc.setState(0x371d, 0xb03, 0xd220, 0x8afc, 0x27a2, 0x79b3, 0x1, 0x0);
        gbc.writeMem(0x371d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb03, gbc.sp());
        EXPECT(0x371f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 035D
        gbc.setState(0x2a47, 0x7960, 0x64e0, 0x4a1d, 0xbbef, 0xb7d1, 0x0, 0x0);
        gbc.writeMem(0x2a47, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7960, gbc.sp());
        EXPECT(0x2a49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 035E
        gbc.setState(0xd12d, 0x943b, 0x1890, 0x8bb6, 0x3f9, 0x1f36, 0x0, 0x1);
        gbc.writeMem(0xd12d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x943b, gbc.sp());
        EXPECT(0xd12f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd12d));
        EXPECT(0x2d, gbc.readMem(0xd12e));
        // CB 2D 035F
        gbc.setState(0x4b96, 0x41cd, 0xe480, 0xe5c2, 0xb753, 0xcd16, 0x1, 0x1);
        gbc.writeMem(0x4b96, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x41cd, gbc.sp());
        EXPECT(0x4b98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0360
        gbc.setState(0x561d, 0x8a49, 0x7400, 0xfcf3, 0x21f1, 0xe3a3, 0x0, 0x1);
        gbc.writeMem(0x561d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8a49, gbc.sp());
        EXPECT(0x561f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0361
        gbc.setState(0x6607, 0x342d, 0x9c50, 0xcb14, 0x640, 0x44c8, 0x0, 0x0);
        gbc.writeMem(0x6607, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x342d, gbc.sp());
        EXPECT(0x6609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0362
        gbc.setState(0xb0c2, 0x7d14, 0xc90, 0xee6e, 0xe941, 0x1c7d, 0x1, 0x1);
        gbc.writeMem(0xb0c2, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7d14, gbc.sp());
        EXPECT(0xb0c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0c2));
        EXPECT(0x2d, gbc.readMem(0xb0c3));
        // CB 2D 0363
        gbc.setState(0x24ba, 0x59bf, 0x5fa0, 0x88b4, 0x30eb, 0xd250, 0x0, 0x1);
        gbc.writeMem(0x24ba, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x59bf, gbc.sp());
        EXPECT(0x24bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0364
        gbc.setState(0xc56b, 0xb7ab, 0xe60, 0xfd9, 0x480, 0xb500, 0x0, 0x0);
        gbc.writeMem(0xc56b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb7ab, gbc.sp());
        EXPECT(0xc56d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc56b));
        EXPECT(0x2d, gbc.readMem(0xc56c));
        // CB 2D 0365
        gbc.setState(0xc4cd, 0xa757, 0x84e0, 0xa57b, 0x46af, 0x65e6, 0x0, 0x1);
        gbc.writeMem(0xc4cd, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa757, gbc.sp());
        EXPECT(0xc4cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4cd));
        EXPECT(0x2d, gbc.readMem(0xc4ce));
        // CB 2D 0366
        gbc.setState(0xb465, 0xcc17, 0xf5c0, 0x93fc, 0x7c9f, 0x8009, 0x0, 0x0);
        gbc.writeMem(0xb465, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xcc17, gbc.sp());
        EXPECT(0xb467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb465));
        EXPECT(0x2d, gbc.readMem(0xb466));
        // CB 2D 0367
        gbc.setState(0xdc73, 0x5903, 0x4720, 0xbf8e, 0xb583, 0x675a, 0x0, 0x1);
        gbc.writeMem(0xdc73, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5903, gbc.sp());
        EXPECT(0xdc75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc73));
        EXPECT(0x2d, gbc.readMem(0xdc74));
        // CB 2D 0368
        gbc.setState(0x5416, 0x542d, 0x7db0, 0xd58c, 0xe598, 0x3e47, 0x0, 0x0);
        gbc.writeMem(0x5416, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x542d, gbc.sp());
        EXPECT(0x5418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0369
        gbc.setState(0xbad, 0xf949, 0xa8f0, 0xc7f0, 0x3d04, 0x40be, 0x1, 0x1);
        gbc.writeMem(0xbad, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf949, gbc.sp());
        EXPECT(0xbaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 036A
        gbc.setState(0x6887, 0xfefc, 0x6be0, 0xb00e, 0x4cec, 0x8722, 0x0, 0x1);
        gbc.writeMem(0x6887, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xfefc, gbc.sp());
        EXPECT(0x6889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 036B
        gbc.setState(0x7644, 0x9794, 0xe410, 0xa674, 0xf936, 0x8397, 0x1, 0x1);
        gbc.writeMem(0x7644, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9794, gbc.sp());
        EXPECT(0x7646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 036C
        gbc.setState(0x6b81, 0xa04d, 0x8210, 0x39, 0x1b1f, 0x2402, 0x0, 0x0);
        gbc.writeMem(0x6b81, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa04d, gbc.sp());
        EXPECT(0x6b83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 036D
        gbc.setState(0x3219, 0xb83e, 0xdc00, 0x1047, 0xcb5d, 0xa6b9, 0x1, 0x0);
        gbc.writeMem(0x3219, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb83e, gbc.sp());
        EXPECT(0x321b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 036E
        gbc.setState(0x2d00, 0x8cd2, 0xe9d0, 0x930f, 0x757a, 0xef2, 0x0, 0x1);
        gbc.writeMem(0x2d00, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8cd2, gbc.sp());
        EXPECT(0x2d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 036F
        gbc.setState(0x62a1, 0x1103, 0xda70, 0x34f7, 0x7bd6, 0xaefd, 0x1, 0x1);
        gbc.writeMem(0x62a1, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1103, gbc.sp());
        EXPECT(0x62a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0370
        gbc.setState(0x8038, 0x7adf, 0x58c0, 0xf374, 0xe0b, 0x5401, 0x1, 0x0);
        gbc.writeMem(0x8038, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7adf, gbc.sp());
        EXPECT(0x803a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8038));
        EXPECT(0x2d, gbc.readMem(0x8039));
        // CB 2D 0371
        gbc.setState(0xb186, 0x2296, 0xc890, 0x489a, 0x9a1f, 0x31a2, 0x1, 0x0);
        gbc.writeMem(0xb186, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2296, gbc.sp());
        EXPECT(0xb188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb186));
        EXPECT(0x2d, gbc.readMem(0xb187));
        // CB 2D 0372
        gbc.setState(0xa753, 0x74f5, 0x7480, 0x5565, 0x1bbc, 0xe1b7, 0x0, 0x0);
        gbc.writeMem(0xa753, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x74f5, gbc.sp());
        EXPECT(0xa755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa753));
        EXPECT(0x2d, gbc.readMem(0xa754));
        // CB 2D 0373
        gbc.setState(0x488f, 0x14b9, 0x34e0, 0xbdc6, 0x8, 0xd631, 0x0, 0x0);
        gbc.writeMem(0x488f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x14b9, gbc.sp());
        EXPECT(0x4891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0374
        gbc.setState(0x3dfc, 0x4b44, 0x6ef0, 0xf220, 0xd910, 0xe2df, 0x1, 0x0);
        gbc.writeMem(0x3dfc, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4b44, gbc.sp());
        EXPECT(0x3dfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0375
        gbc.setState(0x1e44, 0xe90b, 0x6310, 0x183d, 0xe5af, 0xe3d1, 0x0, 0x1);
        gbc.writeMem(0x1e44, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe90b, gbc.sp());
        EXPECT(0x1e46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0376
        gbc.setState(0xef0, 0x722d, 0xc080, 0xc815, 0xa929, 0x7e92, 0x1, 0x0);
        gbc.writeMem(0xef0, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x722d, gbc.sp());
        EXPECT(0xef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0377
        gbc.setState(0x347e, 0xe300, 0xe700, 0xf253, 0x8270, 0x47e8, 0x1, 0x1);
        gbc.writeMem(0x347e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe300, gbc.sp());
        EXPECT(0x3480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0378
        gbc.setState(0x316b, 0x790f, 0x4b90, 0x134b, 0xc198, 0x11b1, 0x0, 0x1);
        gbc.writeMem(0x316b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x790f, gbc.sp());
        EXPECT(0x316d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0379
        gbc.setState(0x4a36, 0x3c27, 0xd0d0, 0x95e8, 0x4b69, 0xb16c, 0x1, 0x0);
        gbc.writeMem(0x4a36, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3c27, gbc.sp());
        EXPECT(0x4a38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 037A
        gbc.setState(0x8c1a, 0xa1d4, 0x1bc0, 0x7592, 0x2d2c, 0xfeca, 0x1, 0x0);
        gbc.writeMem(0x8c1a, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa1d4, gbc.sp());
        EXPECT(0x8c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c1a));
        EXPECT(0x2d, gbc.readMem(0x8c1b));
        // CB 2D 037B
        gbc.setState(0x5479, 0x80a0, 0xc7d0, 0xec49, 0xd363, 0xc734, 0x0, 0x1);
        gbc.writeMem(0x5479, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x80a0, gbc.sp());
        EXPECT(0x547b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 037C
        gbc.setState(0x21b6, 0x6e3a, 0xac80, 0x18ff, 0xa6d0, 0xcf58, 0x0, 0x1);
        gbc.writeMem(0x21b6, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6e3a, gbc.sp());
        EXPECT(0x21b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 037D
        gbc.setState(0x8750, 0x2d62, 0x3ae0, 0xc586, 0x9f0c, 0x1081, 0x1, 0x0);
        gbc.writeMem(0x8750, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2d62, gbc.sp());
        EXPECT(0x8752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8750));
        EXPECT(0x2d, gbc.readMem(0x8751));
        // CB 2D 037E
        gbc.setState(0x7526, 0x7b46, 0xd010, 0x41a6, 0xa22c, 0xfcc5, 0x1, 0x1);
        gbc.writeMem(0x7526, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7b46, gbc.sp());
        EXPECT(0x7528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 037F
        gbc.setState(0xac35, 0xc179, 0x58d0, 0x289f, 0x702a, 0xa030, 0x0, 0x0);
        gbc.writeMem(0xac35, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc179, gbc.sp());
        EXPECT(0xac37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac35));
        EXPECT(0x2d, gbc.readMem(0xac36));
        // CB 2D 0380
        gbc.setState(0xa05d, 0xbf9a, 0x2f20, 0x3694, 0x4645, 0x9e02, 0x0, 0x1);
        gbc.writeMem(0xa05d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbf9a, gbc.sp());
        EXPECT(0xa05f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa05d));
        EXPECT(0x2d, gbc.readMem(0xa05e));
        // CB 2D 0381
        gbc.setState(0xe3a6, 0x5e26, 0x1df0, 0xc4ef, 0x7c9f, 0xd6c0, 0x1, 0x0);
        gbc.writeMem(0xe3a6, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5e26, gbc.sp());
        EXPECT(0xe3a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3a6));
        EXPECT(0x2d, gbc.readMem(0xe3a7));
        // CB 2D 0382
        gbc.setState(0xde06, 0x316, 0xcdc0, 0x10ac, 0x7808, 0x20d6, 0x1, 0x0);
        gbc.writeMem(0xde06, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x316, gbc.sp());
        EXPECT(0xde08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde06));
        EXPECT(0x2d, gbc.readMem(0xde07));
        // CB 2D 0383
        gbc.setState(0xeda0, 0x786b, 0xee40, 0xbd87, 0x7f95, 0xde32, 0x1, 0x0);
        gbc.writeMem(0xeda0, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x786b, gbc.sp());
        EXPECT(0xeda2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeda0));
        EXPECT(0x2d, gbc.readMem(0xeda1));
        // CB 2D 0384
        gbc.setState(0x7a78, 0xb025, 0x5540, 0x58c2, 0xbf16, 0xc321, 0x0, 0x1);
        gbc.writeMem(0x7a78, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb025, gbc.sp());
        EXPECT(0x7a7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0385
        gbc.setState(0x5d6, 0x18c, 0x6590, 0x47e8, 0xcae7, 0xd0ae, 0x1, 0x1);
        gbc.writeMem(0x5d6, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x18c, gbc.sp());
        EXPECT(0x5d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0386
        gbc.setState(0x8360, 0x9bf7, 0xde10, 0x38b, 0x7b25, 0x83a8, 0x1, 0x0);
        gbc.writeMem(0x8360, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9bf7, gbc.sp());
        EXPECT(0x8362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8360));
        EXPECT(0x2d, gbc.readMem(0x8361));
        // CB 2D 0387
        gbc.setState(0x4f60, 0x5c67, 0xf570, 0xf2ab, 0xd12b, 0xea39, 0x1, 0x0);
        gbc.writeMem(0x4f60, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5c67, gbc.sp());
        EXPECT(0x4f62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0388
        gbc.setState(0x6e05, 0x1f41, 0x7e0, 0x6748, 0x530c, 0xe08b, 0x0, 0x0);
        gbc.writeMem(0x6e05, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1f41, gbc.sp());
        EXPECT(0x6e07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0389
        gbc.setState(0xbcfe, 0xafe8, 0x9af0, 0xab43, 0x34fd, 0xe55, 0x1, 0x1);
        gbc.writeMem(0xbcfe, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xafe8, gbc.sp());
        EXPECT(0xbd00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcfe));
        EXPECT(0x2d, gbc.readMem(0xbcff));
        // CB 2D 038A
        gbc.setState(0x85a8, 0xfa38, 0xd070, 0xdeff, 0xa7ea, 0x6688, 0x0, 0x0);
        gbc.writeMem(0x85a8, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xfa38, gbc.sp());
        EXPECT(0x85aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85a8));
        EXPECT(0x2d, gbc.readMem(0x85a9));
        // CB 2D 038B
        gbc.setState(0x1672, 0x53f2, 0x4ad0, 0x1830, 0x5813, 0x1605, 0x0, 0x1);
        gbc.writeMem(0x1672, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x53f2, gbc.sp());
        EXPECT(0x1674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 038C
        gbc.setState(0xadf4, 0x507, 0x6610, 0x4383, 0xd1c2, 0x52cb, 0x0, 0x0);
        gbc.writeMem(0xadf4, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x507, gbc.sp());
        EXPECT(0xadf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf4));
        EXPECT(0x2d, gbc.readMem(0xadf5));
        // CB 2D 038D
        gbc.setState(0x12fd, 0x8733, 0x3a20, 0x5d1a, 0x6d1e, 0x8a8d, 0x1, 0x1);
        gbc.writeMem(0x12fd, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8733, gbc.sp());
        EXPECT(0x12ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 038E
        gbc.setState(0x6685, 0xff77, 0x5660, 0x8a02, 0xe1e6, 0xe8b8, 0x1, 0x1);
        gbc.writeMem(0x6685, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xff77, gbc.sp());
        EXPECT(0x6687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 038F
        gbc.setState(0x96f5, 0x67e7, 0xeb30, 0x6037, 0x7be9, 0x8bfb, 0x0, 0x0);
        gbc.writeMem(0x96f5, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x67e7, gbc.sp());
        EXPECT(0x96f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96f5));
        EXPECT(0x2d, gbc.readMem(0x96f6));
        // CB 2D 0390
        gbc.setState(0x28c, 0x5d5b, 0x1410, 0x85df, 0x1ed6, 0x2213, 0x0, 0x0);
        gbc.writeMem(0x28c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5d5b, gbc.sp());
        EXPECT(0x28e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0391
        gbc.setState(0x31ce, 0x5631, 0xa9c0, 0x1c27, 0xda50, 0xc624, 0x1, 0x0);
        gbc.writeMem(0x31ce, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5631, gbc.sp());
        EXPECT(0x31d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0392
        gbc.setState(0x9c1f, 0x3177, 0x66d0, 0x4719, 0x19a, 0x2b08, 0x0, 0x0);
        gbc.writeMem(0x9c1f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3177, gbc.sp());
        EXPECT(0x9c21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c1f));
        EXPECT(0x2d, gbc.readMem(0x9c20));
        // CB 2D 0393
        gbc.setState(0x5f9c, 0xdc2f, 0x60e0, 0xbeb2, 0xbf92, 0xe0d7, 0x1, 0x0);
        gbc.writeMem(0x5f9c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xdc2f, gbc.sp());
        EXPECT(0x5f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0394
        gbc.setState(0x33be, 0xf957, 0x3020, 0xa91b, 0x3464, 0xb192, 0x1, 0x1);
        gbc.writeMem(0x33be, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf957, gbc.sp());
        EXPECT(0x33c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0395
        gbc.setState(0xa195, 0xf1a2, 0x1040, 0x61fd, 0x91d0, 0x41f2, 0x0, 0x0);
        gbc.writeMem(0xa195, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf1a2, gbc.sp());
        EXPECT(0xa197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa195));
        EXPECT(0x2d, gbc.readMem(0xa196));
        // CB 2D 0396
        gbc.setState(0x5380, 0xd6f2, 0xa450, 0xec97, 0xc954, 0x4d8a, 0x1, 0x1);
        gbc.writeMem(0x5380, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd6f2, gbc.sp());
        EXPECT(0x5382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0397
        gbc.setState(0x6ca7, 0x7f54, 0x84d0, 0x9379, 0x1558, 0x843c, 0x0, 0x1);
        gbc.writeMem(0x6ca7, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7f54, gbc.sp());
        EXPECT(0x6ca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 0398
        gbc.setState(0x2bf4, 0xd436, 0x7830, 0x8c4c, 0xd1cf, 0xe19b, 0x1, 0x1);
        gbc.writeMem(0x2bf4, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd436, gbc.sp());
        EXPECT(0x2bf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 0399
        gbc.setState(0x4c36, 0xb904, 0x88f0, 0x18db, 0x4ce5, 0xc058, 0x1, 0x0);
        gbc.writeMem(0x4c36, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb904, gbc.sp());
        EXPECT(0x4c38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 039A
        gbc.setState(0x2453, 0xfcaf, 0x5030, 0x4d43, 0x634a, 0xc7f7, 0x0, 0x1);
        gbc.writeMem(0x2453, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfcaf, gbc.sp());
        EXPECT(0x2455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 039B
        gbc.setState(0x20ff, 0x2e78, 0xafe0, 0xd23d, 0x1ab0, 0x177c, 0x0, 0x1);
        gbc.writeMem(0x20ff, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2e78, gbc.sp());
        EXPECT(0x2101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 039C
        gbc.setState(0x9fff, 0x7a7b, 0xba0, 0xd23, 0xe5e7, 0xfd93, 0x0, 0x1);
        gbc.writeMem(0x9fff, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7a7b, gbc.sp());
        EXPECT(0xa001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fff));
        EXPECT(0x2d, gbc.readMem(0xa000));
        // CB 2D 039D
        gbc.setState(0x4880, 0x21b, 0xfdf0, 0x542d, 0x4b5c, 0x269e, 0x0, 0x1);
        gbc.writeMem(0x4880, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x21b, gbc.sp());
        EXPECT(0x4882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 039E
        gbc.setState(0x4899, 0x45c8, 0x1f50, 0xd446, 0xbc0a, 0xfcb4, 0x1, 0x0);
        gbc.writeMem(0x4899, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x45c8, gbc.sp());
        EXPECT(0x489b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 039F
        gbc.setState(0x3785, 0x772a, 0x1530, 0x6572, 0x7d04, 0x1d65, 0x0, 0x0);
        gbc.writeMem(0x3785, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x772a, gbc.sp());
        EXPECT(0x3787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 03A0
        gbc.setState(0x5204, 0x484d, 0xeb00, 0xad34, 0xcd5a, 0x299, 0x1, 0x1);
        gbc.writeMem(0x5204, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x484d, gbc.sp());
        EXPECT(0x5206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 03A1
        gbc.setState(0x5382, 0xba6c, 0x4fe0, 0xae92, 0xda18, 0x867c, 0x1, 0x0);
        gbc.writeMem(0x5382, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xba6c, gbc.sp());
        EXPECT(0x5384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 03A2
        gbc.setState(0x4dad, 0x6277, 0x5330, 0x5efe, 0x460e, 0x994, 0x0, 0x0);
        gbc.writeMem(0x4dad, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6277, gbc.sp());
        EXPECT(0x4daf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 03A3
        gbc.setState(0x6d32, 0x8f65, 0x6910, 0xf53f, 0xd23, 0xc770, 0x1, 0x1);
        gbc.writeMem(0x6d32, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8f65, gbc.sp());
        EXPECT(0x6d34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 03A4
        gbc.setState(0xa84f, 0x9d00, 0x3930, 0xc02b, 0x4fd1, 0xf8f7, 0x0, 0x1);
        gbc.writeMem(0xa84f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9d00, gbc.sp());
        EXPECT(0xa851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa84f));
        EXPECT(0x2d, gbc.readMem(0xa850));
        // CB 2D 03A5
        gbc.setState(0xe5ab, 0xb7d0, 0xa910, 0xf1bb, 0xb682, 0x40d4, 0x1, 0x0);
        gbc.writeMem(0xe5ab, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb7d0, gbc.sp());
        EXPECT(0xe5ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ab));
        EXPECT(0x2d, gbc.readMem(0xe5ac));
        // CB 2D 03A6
        gbc.setState(0x73e9, 0x30bc, 0x4a0, 0x82fc, 0x464, 0xab37, 0x0, 0x1);
        gbc.writeMem(0x73e9, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x30bc, gbc.sp());
        EXPECT(0x73eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 03A7
        gbc.setState(0xd804, 0xba25, 0x1680, 0x5f21, 0x73e6, 0xcda9, 0x0, 0x1);
        gbc.writeMem(0xd804, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xba25, gbc.sp());
        EXPECT(0xd806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd804));
        EXPECT(0x2d, gbc.readMem(0xd805));
        // CB 2D 03A8
        gbc.setState(0xb5b4, 0x126b, 0x9b90, 0x20db, 0x3b87, 0x10fb, 0x1, 0x1);
        gbc.writeMem(0xb5b4, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x126b, gbc.sp());
        EXPECT(0xb5b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5b4));
        EXPECT(0x2d, gbc.readMem(0xb5b5));
        // CB 2D 03A9
        gbc.setState(0x7971, 0x7a97, 0x68a0, 0x46bf, 0x3899, 0x1839, 0x0, 0x0);
        gbc.writeMem(0x7971, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7a97, gbc.sp());
        EXPECT(0x7973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 03AA
        gbc.setState(0x34f0, 0x3fab, 0x1ed0, 0xf3c7, 0xf4fa, 0x62c9, 0x0, 0x0);
        gbc.writeMem(0x34f0, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3fab, gbc.sp());
        EXPECT(0x34f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 03AC
        gbc.setState(0xd13c, 0x3ea9, 0xf260, 0xe3b1, 0x4bb9, 0x39d6, 0x0, 0x1);
        gbc.writeMem(0xd13c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3ea9, gbc.sp());
        EXPECT(0xd13e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd13c));
        EXPECT(0x2d, gbc.readMem(0xd13d));
        // CB 2D 03AD
        gbc.setState(0x5f08, 0x60f7, 0xb5e0, 0x6405, 0xe0d3, 0xd570, 0x0, 0x1);
        gbc.writeMem(0x5f08, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x60f7, gbc.sp());
        EXPECT(0x5f0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 03AE
        gbc.setState(0x53be, 0x289, 0xc3d0, 0x8b2b, 0xed08, 0xc600, 0x0, 0x1);
        gbc.writeMem(0x53be, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x289, gbc.sp());
        EXPECT(0x53c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 03AF
        gbc.setState(0xde2, 0x5a9b, 0x5a80, 0x9d4e, 0xaade, 0x21f5, 0x0, 0x0);
        gbc.writeMem(0xde2, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5a9b, gbc.sp());
        EXPECT(0xde4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 03B0
        gbc.setState(0x15d7, 0x5873, 0xb7f0, 0x4b3f, 0xe6e3, 0xad24, 0x0, 0x0);
        gbc.writeMem(0x15d7, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5873, gbc.sp());
        EXPECT(0x15d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 03B1
        gbc.setState(0xafe4, 0x9c0c, 0x9290, 0xe302, 0x29ae, 0x39b4, 0x1, 0x1);
        gbc.writeMem(0xafe4, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9c0c, gbc.sp());
        EXPECT(0xafe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafe4));
        EXPECT(0x2d, gbc.readMem(0xafe5));
        // CB 2D 03B2
        gbc.setState(0x9b44, 0x164b, 0xfa10, 0x2b85, 0x14bd, 0xbcf1, 0x1, 0x0);
        gbc.writeMem(0x9b44, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x164b, gbc.sp());
        EXPECT(0x9b46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b44));
        EXPECT(0x2d, gbc.readMem(0x9b45));
        // CB 2D 03B3
        gbc.setState(0xe09d, 0x1715, 0x4060, 0x7914, 0x39a9, 0x64df, 0x1, 0x0);
        gbc.writeMem(0xe09d, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1715, gbc.sp());
        EXPECT(0xe09f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe09d));
        EXPECT(0x2d, gbc.readMem(0xe09e));
        // CB 2D 03B5
        gbc.setState(0x72b9, 0xa838, 0xfef0, 0x54e7, 0x604b, 0x92b2, 0x0, 0x1);
        gbc.writeMem(0x72b9, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa838, gbc.sp());
        EXPECT(0x72bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 03B6
        gbc.setState(0x92f, 0xb121, 0xa490, 0x178d, 0x125a, 0xa39c, 0x1, 0x1);
        gbc.writeMem(0x92f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb121, gbc.sp());
        EXPECT(0x931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 03B7
        gbc.setState(0x2b1f, 0x9a98, 0xbb60, 0x24fa, 0x4d7e, 0x266a, 0x0, 0x0);
        gbc.writeMem(0x2b1f, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9a98, gbc.sp());
        EXPECT(0x2b21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 03B8
        gbc.setState(0x1970, 0x126e, 0x8a90, 0x41fd, 0x633d, 0x36c1, 0x1, 0x1);
        gbc.writeMem(0x1970, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x126e, gbc.sp());
        EXPECT(0x1972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 03B9
        gbc.setState(0x79ec, 0x9abc, 0xa730, 0x1072, 0xbc64, 0xb1e2, 0x1, 0x1);
        gbc.writeMem(0x79ec, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9abc, gbc.sp());
        EXPECT(0x79ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 03BA
        gbc.setState(0x7670, 0x184b, 0x2d80, 0x3e44, 0xcafa, 0x38fa, 0x1, 0x1);
        gbc.writeMem(0x7670, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x184b, gbc.sp());
        EXPECT(0x7672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 03BB
        gbc.setState(0x6978, 0xb9e8, 0x2670, 0x4bbb, 0x154c, 0x4b11, 0x1, 0x0);
        gbc.writeMem(0x6978, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb9e8, gbc.sp());
        EXPECT(0x697a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 03BC
        gbc.setState(0x713c, 0x7dc5, 0xb380, 0xc1f5, 0x8eb3, 0xc003, 0x0, 0x0);
        gbc.writeMem(0x713c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7dc5, gbc.sp());
        EXPECT(0x713e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 03BD
        gbc.setState(0x38f1, 0xbc1f, 0x81b0, 0x58ff, 0x7463, 0xfc10, 0x0, 0x0);
        gbc.writeMem(0x38f1, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbc1f, gbc.sp());
        EXPECT(0x38f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 03BE
        gbc.setState(0xcd16, 0xa4d8, 0x46d0, 0x2bba, 0x3084, 0x1c1d, 0x1, 0x1);
        gbc.writeMem(0xcd16, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa4d8, gbc.sp());
        EXPECT(0xcd18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd16));
        EXPECT(0x2d, gbc.readMem(0xcd17));
        // CB 2D 03BF
        gbc.setState(0x8c42, 0xb8ec, 0xde30, 0x86e3, 0x77ed, 0x38d6, 0x1, 0x1);
        gbc.writeMem(0x8c42, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb8ec, gbc.sp());
        EXPECT(0x8c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c42));
        EXPECT(0x2d, gbc.readMem(0x8c43));
        // CB 2D 03C0
        gbc.setState(0x88b9, 0x513, 0x0, 0xbd9, 0x3fc1, 0xfbff, 0x0, 0x1);
        gbc.writeMem(0x88b9, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x513, gbc.sp());
        EXPECT(0x88bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b9));
        EXPECT(0x2d, gbc.readMem(0x88ba));
        // CB 2D 03C1
        gbc.setState(0x1331, 0x2453, 0x50b0, 0x63c4, 0x9109, 0xf6bb, 0x1, 0x0);
        gbc.writeMem(0x1331, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2453, gbc.sp());
        EXPECT(0x1333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 03C2
        gbc.setState(0xa1df, 0x1abe, 0xc20, 0x635e, 0x188a, 0xf0a2, 0x1, 0x1);
        gbc.writeMem(0xa1df, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1abe, gbc.sp());
        EXPECT(0xa1e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1df));
        EXPECT(0x2d, gbc.readMem(0xa1e0));
        // CB 2D 03C3
        gbc.setState(0x366c, 0x74ea, 0x1040, 0xccbc, 0x3b9e, 0xec1f, 0x1, 0x1);
        gbc.writeMem(0x366c, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x74ea, gbc.sp());
        EXPECT(0x366e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 03C4
        gbc.setState(0x2f64, 0x40ff, 0x4130, 0x679e, 0x9402, 0x8a31, 0x0, 0x0);
        gbc.writeMem(0x2f64, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x40ff, gbc.sp());
        EXPECT(0x2f66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 03C5
        gbc.setState(0x66d6, 0xb0de, 0xe530, 0x8b79, 0xa69, 0xef5a, 0x0, 0x1);
        gbc.writeMem(0x66d6, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb0de, gbc.sp());
        EXPECT(0x66d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 03C6
        gbc.setState(0xa106, 0xe352, 0xd930, 0xc8b1, 0x3f0a, 0xb375, 0x1, 0x1);
        gbc.writeMem(0xa106, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe352, gbc.sp());
        EXPECT(0xa108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa106));
        EXPECT(0x2d, gbc.readMem(0xa107));
        // CB 2D 03C7
        gbc.setState(0xeac5, 0x9424, 0xc0c0, 0x875, 0x3771, 0xf080, 0x0, 0x0);
        gbc.writeMem(0xeac5, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9424, gbc.sp());
        EXPECT(0xeac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac5));
        EXPECT(0x2d, gbc.readMem(0xeac6));
        // CB 2D 03C8
        gbc.setState(0x826, 0xf089, 0x6520, 0x4c70, 0xe9ed, 0x6985, 0x0, 0x0);
        gbc.writeMem(0x826, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf089, gbc.sp());
        EXPECT(0x828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 03C9
        gbc.setState(0x85d0, 0x738f, 0x2d30, 0x10d2, 0x5beb, 0xe7bd, 0x1, 0x0);
        gbc.writeMem(0x85d0, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x738f, gbc.sp());
        EXPECT(0x85d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d0));
        EXPECT(0x2d, gbc.readMem(0x85d1));
        // CB 2D 03CA
        gbc.setState(0x7d44, 0x7177, 0x3040, 0xc432, 0x1cb4, 0xf93, 0x1, 0x0);
        gbc.writeMem(0x7d44, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7177, gbc.sp());
        EXPECT(0x7d46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 03CB
        gbc.setState(0x96b8, 0xde1a, 0xf980, 0x760c, 0x1fae, 0x7e30, 0x0, 0x0);
        gbc.writeMem(0x96b8, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xde1a, gbc.sp());
        EXPECT(0x96ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b8));
        EXPECT(0x2d, gbc.readMem(0x96b9));
        // CB 2D 03CC
        gbc.setState(0x3674, 0x4b43, 0x6290, 0xba0d, 0x700e, 0x451e, 0x0, 0x1);
        gbc.writeMem(0x3674, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4b43, gbc.sp());
        EXPECT(0x3676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 03CD
        gbc.setState(0x2c87, 0x129e, 0x2200, 0xb19d, 0x20c2, 0x10ed, 0x0, 0x1);
        gbc.writeMem(0x2c87, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x129e, gbc.sp());
        EXPECT(0x2c89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 03CF
        gbc.setState(0x7ded, 0xfa5c, 0x740, 0x164b, 0xb27d, 0x129, 0x0, 0x1);
        gbc.writeMem(0x7ded, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xfa5c, gbc.sp());
        EXPECT(0x7def, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 03D0
        gbc.setState(0x6272, 0x3b21, 0x64f0, 0xf61b, 0xf4b, 0x522f, 0x0, 0x0);
        gbc.writeMem(0x6272, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3b21, gbc.sp());
        EXPECT(0x6274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 03D1
        gbc.setState(0x3951, 0xc3b7, 0x4570, 0x2471, 0x419, 0x52fa, 0x1, 0x1);
        gbc.writeMem(0x3951, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc3b7, gbc.sp());
        EXPECT(0x3953, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 03D2
        gbc.setState(0x2478, 0x2378, 0x8410, 0xda78, 0xe4bb, 0x5820, 0x1, 0x0);
        gbc.writeMem(0x2478, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2378, gbc.sp());
        EXPECT(0x247a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 03D3
        gbc.setState(0x1abf, 0xc208, 0xf620, 0x65e7, 0x9b7c, 0xa389, 0x0, 0x1);
        gbc.writeMem(0x1abf, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc208, gbc.sp());
        EXPECT(0x1ac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 03D4
        gbc.setState(0x5ed9, 0xf3f4, 0xdac0, 0xfd4a, 0xb801, 0xe24c, 0x1, 0x1);
        gbc.writeMem(0x5ed9, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf3f4, gbc.sp());
        EXPECT(0x5edb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 03D5
        gbc.setState(0x982, 0xdd27, 0xf500, 0x41b4, 0x518c, 0xc7, 0x0, 0x0);
        gbc.writeMem(0x982, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xdd27, gbc.sp());
        EXPECT(0x984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 03D6
        gbc.setState(0x3e4b, 0xf272, 0x7fa0, 0x736d, 0xf914, 0x1106, 0x1, 0x1);
        gbc.writeMem(0x3e4b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf272, gbc.sp());
        EXPECT(0x3e4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 03D7
        gbc.setState(0x69e3, 0x7f5a, 0x1050, 0x390d, 0x4555, 0x711e, 0x0, 0x1);
        gbc.writeMem(0x69e3, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7f5a, gbc.sp());
        EXPECT(0x69e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 03D8
        gbc.setState(0x6724, 0xdc2a, 0xe240, 0xe51a, 0x6cb9, 0x6e28, 0x0, 0x0);
        gbc.writeMem(0x6724, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdc2a, gbc.sp());
        EXPECT(0x6726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 03D9
        gbc.setState(0x572b, 0xf823, 0xf0d0, 0xa658, 0x9454, 0x254a, 0x0, 0x1);
        gbc.writeMem(0x572b, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf823, gbc.sp());
        EXPECT(0x572d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 03DA
        gbc.setState(0xa05e, 0x8bf7, 0x2fe0, 0x6017, 0xbb26, 0x3ed3, 0x1, 0x0);
        gbc.writeMem(0xa05e, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8bf7, gbc.sp());
        EXPECT(0xa060, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa05e));
        EXPECT(0x2d, gbc.readMem(0xa05f));
        // CB 2D 03DB
        gbc.setState(0xcebb, 0x2195, 0x4b40, 0xdba9, 0x5cf8, 0xaf27, 0x0, 0x1);
        gbc.writeMem(0xcebb, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2195, gbc.sp());
        EXPECT(0xcebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcebb));
        EXPECT(0x2d, gbc.readMem(0xcebc));
        // CB 2D 03DC
        gbc.setState(0xd63, 0xa08a, 0xb50, 0x86b, 0x1a35, 0x2f2c, 0x0, 0x1);
        gbc.writeMem(0xd63, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa08a, gbc.sp());
        EXPECT(0xd65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 03DD
        gbc.setState(0xe716, 0x2c47, 0xa140, 0xbc7d, 0x65ac, 0xf53, 0x1, 0x1);
        gbc.writeMem(0xe716, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2c47, gbc.sp());
        EXPECT(0xe718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe716));
        EXPECT(0x2d, gbc.readMem(0xe717));
        // CB 2D 03DE
        gbc.setState(0xde0, 0x8151, 0xd960, 0xb8af, 0xbc70, 0xaf7d, 0x1, 0x1);
        gbc.writeMem(0xde0, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8151, gbc.sp());
        EXPECT(0xde2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 03DF
        gbc.setState(0xbcb, 0x5b4c, 0x4a40, 0x75fe, 0x7d59, 0xf2ae, 0x1, 0x0);
        gbc.writeMem(0xbcb, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5b4c, gbc.sp());
        EXPECT(0xbcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 03E0
        gbc.setState(0x43ae, 0x15cf, 0xc140, 0xb59, 0xd172, 0x1842, 0x0, 0x0);
        gbc.writeMem(0x43ae, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x15cf, gbc.sp());
        EXPECT(0x43b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2D 03E1
        gbc.setState(0xc358, 0x9566, 0xdff0, 0x619, 0xba16, 0x1752, 0x1, 0x1);
        gbc.writeMem(0xc358, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9566, gbc.sp());
        EXPECT(0xc35a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc358));
        EXPECT(0x2d, gbc.readMem(0xc359));
        // CB 2D 03E2
        gbc.setState(0xca76, 0x2498, 0xa920, 0x4347, 0xe75b, 0x8040, 0x0, 0x0);
        gbc.writeMem(0xca76, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2498, gbc.sp());
        EXPECT(0xca78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca76));
        EXPECT(0x2d, gbc.readMem(0xca77));
        // CB 2D 03E3
        gbc.setState(0x9286, 0x9edd, 0x25a0, 0x6849, 0x3117, 0x96c7, 0x0, 0x1);
        gbc.writeMem(0x9286, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9edd, gbc.sp());
        EXPECT(0x9288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9286));
        EXPECT(0x2d, gbc.readMem(0x9287));
        // CB 2D 03E4
        gbc.setState(0x9390, 0xa270, 0xd0f0, 0xd37b, 0x7d60, 0xafe3, 0x0, 0x1);
        gbc.writeMem(0x9390, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa270, gbc.sp());
        EXPECT(0x9392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9390));
        EXPECT(0x2d, gbc.readMem(0x9391));
        // CB 2D 03E5
        gbc.setState(0x5a04, 0x7aa2, 0xbc80, 0x7e31, 0x4139, 0xb475, 0x1, 0x1);
        gbc.writeMem(0x5a04, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7aa2, gbc.sp());
        EXPECT(0x5a06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2D 03E6
        gbc.setState(0xd91, 0x8af, 0x47c0, 0x70c7, 0x4183, 0x7dc4, 0x1, 0x0);
        gbc.writeMem(0xd91, { 0xcb, 0x2d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8af, gbc.sp());
        EXPECT(0xd93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
