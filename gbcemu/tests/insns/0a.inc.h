    TEST(gbcemu, opcode_0a) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 0A 0000
        gbc.setState(0x41ba, 0x24a7, 0x4040, 0x5fcd, 0x93a8, 0x62fb, 0x0, 0x0);
        gbc.writeMem(0x41ba, { 0xa });
        gbc.writeMem(0x5fcd, { 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x24a7, gbc.sp());
        EXPECT(0x41bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0001
        gbc.setState(0xe60, 0xc9b1, 0xa680, 0x852f, 0x97e, 0x4f99, 0x0, 0x1);
        gbc.writeMem(0xe60, { 0xa });
        gbc.writeMem(0x852f, { 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc9b1, gbc.sp());
        EXPECT(0xe61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0x852f));
        // 0A 0002
        gbc.setState(0x1bf9, 0xf787, 0xbd0, 0x4bae, 0x67c9, 0xe9aa, 0x1, 0x1);
        gbc.writeMem(0x1bf9, { 0xa });
        gbc.writeMem(0x4bae, { 0x85 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf787, gbc.sp());
        EXPECT(0x1bfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0003
        gbc.setState(0x5002, 0xf395, 0x5c80, 0x23c1, 0xd117, 0x67d1, 0x0, 0x0);
        gbc.writeMem(0x23c1, { 0x1c });
        gbc.writeMem(0x5002, { 0xa });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf395, gbc.sp());
        EXPECT(0x5003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0004
        gbc.setState(0xf62, 0x90fb, 0xac20, 0x3257, 0x1ded, 0xda0f, 0x0, 0x0);
        gbc.writeMem(0xf62, { 0xa });
        gbc.writeMem(0x3257, { 0x5a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x90fb, gbc.sp());
        EXPECT(0xf63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0005
        gbc.setState(0xc28f, 0x7eaf, 0xc860, 0xad83, 0x6831, 0x22c2, 0x1, 0x1);
        gbc.writeMem(0xad83, { 0xa3 });
        gbc.writeMem(0xc28f, { 0xa });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7eaf, gbc.sp());
        EXPECT(0xc290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xad83));
        EXPECT(0xa, gbc.readMem(0xc28f));
        // 0A 0006
        gbc.setState(0x21f1, 0x5aac, 0x7210, 0x3ccf, 0xb8ab, 0x36df, 0x1, 0x0);
        gbc.writeMem(0x21f1, { 0xa });
        gbc.writeMem(0x3ccf, { 0xfb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5aac, gbc.sp());
        EXPECT(0x21f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0008
        gbc.setState(0x1e31, 0xfbb6, 0x1f10, 0x6d6, 0x2af6, 0xe352, 0x1, 0x0);
        gbc.writeMem(0x6d6, { 0x19 });
        gbc.writeMem(0x1e31, { 0xa });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xfbb6, gbc.sp());
        EXPECT(0x1e32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0009
        gbc.setState(0xaeb, 0xdffb, 0xb50, 0x9d1c, 0x107d, 0x1e0b, 0x1, 0x1);
        gbc.writeMem(0xaeb, { 0xa });
        gbc.writeMem(0x9d1c, { 0x69 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xdffb, gbc.sp());
        EXPECT(0xaec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9d1c));
        // 0A 000A
        gbc.setState(0xa0ad, 0xc80a, 0x6a30, 0x29c9, 0x14dc, 0x82d7, 0x1, 0x1);
        gbc.writeMem(0x29c9, { 0xc4 });
        gbc.writeMem(0xa0ad, { 0xa });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc80a, gbc.sp());
        EXPECT(0xa0ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa0ad));
        // 0A 000B
        gbc.setState(0xc100, 0xb9bb, 0x1840, 0x29af, 0xc5a9, 0x8be4, 0x1, 0x0);
        gbc.writeMem(0x29af, { 0x22 });
        gbc.writeMem(0xc100, { 0xa });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb9bb, gbc.sp());
        EXPECT(0xc101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc100));
        // 0A 000C
        gbc.setState(0x2fc5, 0x8ed2, 0x9bf0, 0xfb6f, 0xc551, 0xc5f2, 0x0, 0x0);
        gbc.writeMem(0x2fc5, { 0xa });
        gbc.writeMem(0xfb6f, { 0x54 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8ed2, gbc.sp());
        EXPECT(0x2fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xfb6f));
        // 0A 000D
        gbc.setState(0xa5ee, 0xa300, 0x19b0, 0x59e0, 0x4214, 0x168e, 0x1, 0x1);
        gbc.writeMem(0x59e0, { 0xaf });
        gbc.writeMem(0xa5ee, { 0xa });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa300, gbc.sp());
        EXPECT(0xa5ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa5ee));
        // 0A 000F
        gbc.setState(0xd4a8, 0x8557, 0x1b60, 0x9204, 0x38c8, 0x9fbc, 0x0, 0x0);
        gbc.writeMem(0x9204, { 0x14 });
        gbc.writeMem(0xd4a8, { 0xa });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8557, gbc.sp());
        EXPECT(0xd4a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9204));
        EXPECT(0xa, gbc.readMem(0xd4a8));
        // 0A 0010
        gbc.setState(0xd08b, 0xc5da, 0x4520, 0x889d, 0x95ee, 0xb7ea, 0x0, 0x1);
        gbc.writeMem(0x889d, { 0x0 });
        gbc.writeMem(0xd08b, { 0xa });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc5da, gbc.sp());
        EXPECT(0xd08c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x889d));
        EXPECT(0xa, gbc.readMem(0xd08b));
        // 0A 0011
        gbc.setState(0xb0c2, 0x512f, 0xa40, 0x464f, 0xed45, 0x545d, 0x0, 0x0);
        gbc.writeMem(0x464f, { 0x8e });
        gbc.writeMem(0xb0c2, { 0xa });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x512f, gbc.sp());
        EXPECT(0xb0c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb0c2));
        // 0A 0012
        gbc.setState(0xeed2, 0x7a9, 0x5e0, 0xb4a1, 0xfcae, 0x9eea, 0x0, 0x1);
        gbc.writeMem(0xb4a1, { 0x7a });
        gbc.writeMem(0xeed2, { 0xa });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7a9, gbc.sp());
        EXPECT(0xeed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb4a1));
        EXPECT(0xa, gbc.readMem(0xeed2));
        // 0A 0013
        gbc.setState(0x7a66, 0xff6a, 0x28a0, 0xe04f, 0xd76, 0xe46a, 0x0, 0x1);
        gbc.writeMem(0x7a66, { 0xa });
        gbc.writeMem(0xe04f, { 0x3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xff6a, gbc.sp());
        EXPECT(0x7a67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe04f));
        // 0A 0016
        gbc.setState(0x968, 0x3102, 0x52f0, 0x27c9, 0xaba0, 0xcb57, 0x0, 0x1);
        gbc.writeMem(0x968, { 0xa });
        gbc.writeMem(0x27c9, { 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3102, gbc.sp());
        EXPECT(0x969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0017
        gbc.setState(0xdc03, 0xe6b8, 0x9600, 0x280a, 0x912, 0x3467, 0x0, 0x1);
        gbc.writeMem(0x280a, { 0x4d });
        gbc.writeMem(0xdc03, { 0xa });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe6b8, gbc.sp());
        EXPECT(0xdc04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xdc03));
        // 0A 0018
        gbc.setState(0xd3f5, 0x3151, 0x80f0, 0xc81b, 0x2913, 0xc700, 0x0, 0x1);
        gbc.writeMem(0xc81b, { 0x7b });
        gbc.writeMem(0xd3f5, { 0xa });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3151, gbc.sp());
        EXPECT(0xd3f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc81b));
        EXPECT(0xa, gbc.readMem(0xd3f5));
        // 0A 0019
        gbc.setState(0xed34, 0x343c, 0xca80, 0xdfd1, 0xe9f2, 0xb4f3, 0x1, 0x0);
        gbc.writeMem(0xdfd1, { 0x25 });
        gbc.writeMem(0xed34, { 0xa });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x343c, gbc.sp());
        EXPECT(0xed35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xdfd1));
        EXPECT(0xa, gbc.readMem(0xed34));
        // 0A 001A
        gbc.setState(0x80fd, 0xd94f, 0xd4d0, 0xc4f8, 0xcabb, 0x89f9, 0x0, 0x1);
        gbc.writeMem(0x80fd, { 0xa });
        gbc.writeMem(0xc4f8, { 0x50 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd94f, gbc.sp());
        EXPECT(0x80fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x80fd));
        EXPECT(0x50, gbc.readMem(0xc4f8));
        // 0A 001B
        gbc.setState(0x2da0, 0x5f13, 0x4e40, 0xd825, 0x2c53, 0xddcb, 0x0, 0x0);
        gbc.writeMem(0x2da0, { 0xa });
        gbc.writeMem(0xd825, { 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5f13, gbc.sp());
        EXPECT(0x2da1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xd825));
        // 0A 001C
        gbc.setState(0x8496, 0x5f2, 0x7a90, 0xc6ef, 0x7d12, 0x5796, 0x1, 0x0);
        gbc.writeMem(0x8496, { 0xa });
        gbc.writeMem(0xc6ef, { 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5f2, gbc.sp());
        EXPECT(0x8497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8496));
        EXPECT(0x2c, gbc.readMem(0xc6ef));
        // 0A 001D
        gbc.setState(0x27ed, 0x74d8, 0xec90, 0x6614, 0x5d1e, 0xf0b3, 0x1, 0x0);
        gbc.writeMem(0x27ed, { 0xa });
        gbc.writeMem(0x6614, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x74d8, gbc.sp());
        EXPECT(0x27ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 001E
        gbc.setState(0xebe1, 0xf091, 0x7fd0, 0x417c, 0x9a17, 0xe771, 0x1, 0x1);
        gbc.writeMem(0x417c, { 0x89 });
        gbc.writeMem(0xebe1, { 0xa });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf091, gbc.sp());
        EXPECT(0xebe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xebe1));
        // 0A 001F
        gbc.setState(0x8e6c, 0x65f3, 0xaec0, 0xc982, 0x65c4, 0xcb68, 0x1, 0x1);
        gbc.writeMem(0x8e6c, { 0xa });
        gbc.writeMem(0xc982, { 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x65f3, gbc.sp());
        EXPECT(0x8e6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8e6c));
        EXPECT(0x18, gbc.readMem(0xc982));
        // 0A 0020
        gbc.setState(0x2d22, 0x61ed, 0xa460, 0xe0a5, 0x67e4, 0xd92e, 0x0, 0x0);
        gbc.writeMem(0x2d22, { 0xa });
        gbc.writeMem(0xe0a5, { 0xda });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x61ed, gbc.sp());
        EXPECT(0x2d23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe0a5));
        // 0A 0021
        gbc.setState(0x8b0e, 0xf712, 0x6a50, 0x49c2, 0x706e, 0x493d, 0x1, 0x0);
        gbc.writeMem(0x49c2, { 0xde });
        gbc.writeMem(0x8b0e, { 0xa });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf712, gbc.sp());
        EXPECT(0x8b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8b0e));
        // 0A 0022
        gbc.setState(0xef5f, 0x42eb, 0xc6e0, 0x3559, 0x4670, 0x322e, 0x0, 0x0);
        gbc.writeMem(0x3559, { 0x9a });
        gbc.writeMem(0xef5f, { 0xa });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x42eb, gbc.sp());
        EXPECT(0xef60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xef5f));
        // 0A 0023
        gbc.setState(0xaee4, 0x3edf, 0xfb20, 0x4664, 0xf8e5, 0x9381, 0x0, 0x1);
        gbc.writeMem(0x4664, { 0x85 });
        gbc.writeMem(0xaee4, { 0xa });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3edf, gbc.sp());
        EXPECT(0xaee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xaee4));
        // 0A 0024
        gbc.setState(0x7cb5, 0x5492, 0xea0, 0x5a71, 0x813e, 0xe892, 0x1, 0x0);
        gbc.writeMem(0x5a71, { 0xeb });
        gbc.writeMem(0x7cb5, { 0xa });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5492, gbc.sp());
        EXPECT(0x7cb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0025
        gbc.setState(0xef59, 0x301b, 0xb60, 0x1bcb, 0xf887, 0x44f4, 0x0, 0x1);
        gbc.writeMem(0x1bcb, { 0x29 });
        gbc.writeMem(0xef59, { 0xa });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x301b, gbc.sp());
        EXPECT(0xef5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xef59));
        // 0A 0026
        gbc.setState(0x484b, 0x29d3, 0x1c30, 0x9a0f, 0xbc2b, 0x305b, 0x1, 0x1);
        gbc.writeMem(0x484b, { 0xa });
        gbc.writeMem(0x9a0f, { 0x20 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x29d3, gbc.sp());
        EXPECT(0x484c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9a0f));
        // 0A 0027
        gbc.setState(0x753e, 0x1bc4, 0x5970, 0xc9eb, 0xe147, 0x41b0, 0x1, 0x0);
        gbc.writeMem(0x753e, { 0xa });
        gbc.writeMem(0xc9eb, { 0x26 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1bc4, gbc.sp());
        EXPECT(0x753f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc9eb));
        // 0A 0028
        gbc.setState(0x36e6, 0xae54, 0xffe0, 0x1fa7, 0xf04a, 0x716e, 0x1, 0x0);
        gbc.writeMem(0x1fa7, { 0xbf });
        gbc.writeMem(0x36e6, { 0xa });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xae54, gbc.sp());
        EXPECT(0x36e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0029
        gbc.setState(0x2bf4, 0xf667, 0x3df0, 0x2030, 0xa376, 0x8c79, 0x1, 0x0);
        gbc.writeMem(0x2030, { 0xea });
        gbc.writeMem(0x2bf4, { 0xa });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf667, gbc.sp());
        EXPECT(0x2bf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 002A
        gbc.setState(0xd22e, 0xbdea, 0x32f0, 0x33b9, 0x2235, 0x1090, 0x0, 0x0);
        gbc.writeMem(0x33b9, { 0x23 });
        gbc.writeMem(0xd22e, { 0xa });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xbdea, gbc.sp());
        EXPECT(0xd22f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd22e));
        // 0A 002B
        gbc.setState(0x8520, 0xdcea, 0xddf0, 0x5e99, 0xcd98, 0x5cf2, 0x1, 0x1);
        gbc.writeMem(0x5e99, { 0x57 });
        gbc.writeMem(0x8520, { 0xa });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xdcea, gbc.sp());
        EXPECT(0x8521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8520));
        // 0A 002C
        gbc.setState(0xc48d, 0x8468, 0x940, 0xce30, 0x23d3, 0x358d, 0x0, 0x1);
        gbc.writeMem(0xc48d, { 0xa });
        gbc.writeMem(0xce30, { 0x96 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8468, gbc.sp());
        EXPECT(0xc48e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc48d));
        EXPECT(0x96, gbc.readMem(0xce30));
        // 0A 002D
        gbc.setState(0x8c8b, 0xbd31, 0x890, 0x99bd, 0x2f53, 0x2af9, 0x0, 0x0);
        gbc.writeMem(0x8c8b, { 0xa });
        gbc.writeMem(0x99bd, { 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbd31, gbc.sp());
        EXPECT(0x8c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8c8b));
        EXPECT(0xa9, gbc.readMem(0x99bd));
        // 0A 002E
        gbc.setState(0xed97, 0x71f, 0x20d0, 0xb745, 0xdb4f, 0x62b1, 0x0, 0x1);
        gbc.writeMem(0xb745, { 0xd5 });
        gbc.writeMem(0xed97, { 0xa });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x71f, gbc.sp());
        EXPECT(0xed98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb745));
        EXPECT(0xa, gbc.readMem(0xed97));
        // 0A 002F
        gbc.setState(0x79df, 0x30eb, 0xbb60, 0x79e4, 0x70a9, 0x8a87, 0x0, 0x0);
        gbc.writeMem(0x79df, { 0xa });
        gbc.writeMem(0x79e4, { 0xf3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x30eb, gbc.sp());
        EXPECT(0x79e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0030
        gbc.setState(0x8c0b, 0x90cb, 0x9490, 0x2c32, 0xdaee, 0xf57e, 0x1, 0x0);
        gbc.writeMem(0x2c32, { 0x61 });
        gbc.writeMem(0x8c0b, { 0xa });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x90cb, gbc.sp());
        EXPECT(0x8c0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8c0b));
        // 0A 0031
        gbc.setState(0x16c2, 0x52be, 0x9a00, 0xc85c, 0x8e98, 0x2e0a, 0x1, 0x1);
        gbc.writeMem(0x16c2, { 0xa });
        gbc.writeMem(0xc85c, { 0x50 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x52be, gbc.sp());
        EXPECT(0x16c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc85c));
        // 0A 0033
        gbc.setState(0xcc76, 0x9825, 0xe3c0, 0xe4bd, 0xf21, 0x56f9, 0x1, 0x0);
        gbc.writeMem(0xcc76, { 0xa });
        gbc.writeMem(0xe4bd, { 0x1b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9825, gbc.sp());
        EXPECT(0xcc77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xcc76));
        EXPECT(0x1b, gbc.readMem(0xe4bd));
        // 0A 0034
        gbc.setState(0x37ea, 0x8892, 0x9030, 0x215, 0x92bd, 0x58e0, 0x1, 0x1);
        gbc.writeMem(0x215, { 0xbe });
        gbc.writeMem(0x37ea, { 0xa });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8892, gbc.sp());
        EXPECT(0x37eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0035
        gbc.setState(0x735a, 0x44c0, 0x25f0, 0xdaab, 0x51e6, 0x3fe0, 0x0, 0x0);
        gbc.writeMem(0x735a, { 0xa });
        gbc.writeMem(0xdaab, { 0xc5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x44c0, gbc.sp());
        EXPECT(0x735b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xdaab));
        // 0A 0036
        gbc.setState(0x6a84, 0x9f94, 0x9130, 0x597b, 0x2d6a, 0x1a87, 0x1, 0x1);
        gbc.writeMem(0x597b, { 0x55 });
        gbc.writeMem(0x6a84, { 0xa });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9f94, gbc.sp());
        EXPECT(0x6a85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0037
        gbc.setState(0xd826, 0x9672, 0x290, 0xf59, 0xbc57, 0x5664, 0x1, 0x0);
        gbc.writeMem(0xf59, { 0x1d });
        gbc.writeMem(0xd826, { 0xa });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9672, gbc.sp());
        EXPECT(0xd827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd826));
        // 0A 0038
        gbc.setState(0x9d5f, 0x79c7, 0xd2f0, 0x6ad3, 0xa8ea, 0xfd0a, 0x1, 0x0);
        gbc.writeMem(0x6ad3, { 0x1 });
        gbc.writeMem(0x9d5f, { 0xa });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x79c7, gbc.sp());
        EXPECT(0x9d60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9d5f));
        // 0A 0039
        gbc.setState(0xae7e, 0xa069, 0xc8d0, 0x7990, 0x7db9, 0x9d5f, 0x1, 0x1);
        gbc.writeMem(0x7990, { 0xcc });
        gbc.writeMem(0xae7e, { 0xa });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa069, gbc.sp());
        EXPECT(0xae7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xae7e));
        // 0A 003A
        gbc.setState(0x269b, 0xc466, 0xe660, 0xadb5, 0xedf6, 0x5621, 0x0, 0x1);
        gbc.writeMem(0x269b, { 0xa });
        gbc.writeMem(0xadb5, { 0xdb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc466, gbc.sp());
        EXPECT(0x269c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xadb5));
        // 0A 003B
        gbc.setState(0xa4e8, 0x2092, 0xd7b0, 0x672d, 0x261, 0x82e4, 0x0, 0x0);
        gbc.writeMem(0x672d, { 0xc9 });
        gbc.writeMem(0xa4e8, { 0xa });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2092, gbc.sp());
        EXPECT(0xa4e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa4e8));
        // 0A 003C
        gbc.setState(0xbafe, 0xd966, 0xce0, 0x741f, 0xe011, 0xdcd9, 0x0, 0x0);
        gbc.writeMem(0x741f, { 0xc1 });
        gbc.writeMem(0xbafe, { 0xa });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd966, gbc.sp());
        EXPECT(0xbaff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xbafe));
        // 0A 003D
        gbc.setState(0x368e, 0xff31, 0x6860, 0x278, 0x525c, 0x17d1, 0x0, 0x0);
        gbc.writeMem(0x278, { 0x24 });
        gbc.writeMem(0x368e, { 0xa });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xff31, gbc.sp());
        EXPECT(0x368f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 003E
        gbc.setState(0x7b94, 0x47e3, 0x4500, 0x5426, 0x76ca, 0xa808, 0x1, 0x1);
        gbc.writeMem(0x5426, { 0xea });
        gbc.writeMem(0x7b94, { 0xa });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x47e3, gbc.sp());
        EXPECT(0x7b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 003F
        gbc.setState(0x9fc5, 0x3f75, 0xfc0, 0xb7ee, 0x3841, 0x5170, 0x0, 0x0);
        gbc.writeMem(0x9fc5, { 0xa });
        gbc.writeMem(0xb7ee, { 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3f75, gbc.sp());
        EXPECT(0x9fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9fc5));
        EXPECT(0x7a, gbc.readMem(0xb7ee));
        // 0A 0040
        gbc.setState(0x63eb, 0xa6d5, 0x200, 0xc4a4, 0x7b68, 0xcd4d, 0x1, 0x1);
        gbc.writeMem(0x63eb, { 0xa });
        gbc.writeMem(0xc4a4, { 0x7f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa6d5, gbc.sp());
        EXPECT(0x63ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xc4a4));
        // 0A 0041
        gbc.setState(0x5987, 0x65fb, 0x1b60, 0x9de, 0x6f36, 0xe36c, 0x1, 0x1);
        gbc.writeMem(0x9de, { 0x81 });
        gbc.writeMem(0x5987, { 0xa });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x65fb, gbc.sp());
        EXPECT(0x5988, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0042
        gbc.setState(0x5ff2, 0x6f5b, 0x2170, 0xbd4e, 0x6479, 0x945b, 0x1, 0x0);
        gbc.writeMem(0x5ff2, { 0xa });
        gbc.writeMem(0xbd4e, { 0xdb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6f5b, gbc.sp());
        EXPECT(0x5ff3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xbd4e));
        // 0A 0043
        gbc.setState(0xa1d2, 0xdcd5, 0x1120, 0xff93, 0xeaed, 0xb3ad, 0x0, 0x1);
        gbc.writeMem(0xa1d2, { 0xa });
        gbc.writeMem(0xff93, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xdcd5, gbc.sp());
        EXPECT(0xa1d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa1d2));
        EXPECT(0x63, gbc.readMem(0xff93));
        // 0A 0044
        gbc.setState(0x10cb, 0x166f, 0xb080, 0xfad3, 0x8a05, 0x85, 0x1, 0x0);
        gbc.writeMem(0x10cb, { 0xa });
        gbc.writeMem(0xfad3, { 0x8b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x166f, gbc.sp());
        EXPECT(0x10cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xfad3));
        // 0A 0045
        gbc.setState(0x3b1a, 0xa549, 0xf000, 0x2e2c, 0x1c84, 0x4699, 0x1, 0x0);
        gbc.writeMem(0x2e2c, { 0xfd });
        gbc.writeMem(0x3b1a, { 0xa });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa549, gbc.sp());
        EXPECT(0x3b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0046
        gbc.setState(0xc0b7, 0xfa67, 0xc880, 0x6f1, 0xe65, 0xfc44, 0x1, 0x0);
        gbc.writeMem(0x6f1, { 0x44 });
        gbc.writeMem(0xc0b7, { 0xa });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfa67, gbc.sp());
        EXPECT(0xc0b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc0b7));
        // 0A 0047
        gbc.setState(0x53c8, 0xecf8, 0xad90, 0xb4be, 0xb9c8, 0x4fa0, 0x1, 0x1);
        gbc.writeMem(0x53c8, { 0xa });
        gbc.writeMem(0xb4be, { 0x93 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xecf8, gbc.sp());
        EXPECT(0x53c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb4be));
        // 0A 0048
        gbc.setState(0x37c0, 0x12bc, 0xc4c0, 0xdd6e, 0xaddb, 0xc2f4, 0x1, 0x0);
        gbc.writeMem(0x37c0, { 0xa });
        gbc.writeMem(0xdd6e, { 0x5a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x12bc, gbc.sp());
        EXPECT(0x37c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xdd6e));
        // 0A 0049
        gbc.setState(0x3ed9, 0xccd8, 0x2350, 0xe968, 0xa350, 0xbce7, 0x0, 0x1);
        gbc.writeMem(0x3ed9, { 0xa });
        gbc.writeMem(0xe968, { 0x38 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xccd8, gbc.sp());
        EXPECT(0x3eda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe968));
        // 0A 004A
        gbc.setState(0x834b, 0x7eb7, 0xeb0, 0xe62c, 0x78de, 0x97d7, 0x0, 0x1);
        gbc.writeMem(0x834b, { 0xa });
        gbc.writeMem(0xe62c, { 0xf5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7eb7, gbc.sp());
        EXPECT(0x834c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x834b));
        EXPECT(0xf5, gbc.readMem(0xe62c));
        // 0A 004B
        gbc.setState(0x3829, 0x6702, 0xfd30, 0xf731, 0x6073, 0x6633, 0x1, 0x0);
        gbc.writeMem(0x3829, { 0xa });
        gbc.writeMem(0xf731, { 0xb3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6702, gbc.sp());
        EXPECT(0x382a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xf731));
        // 0A 004C
        gbc.setState(0x10c9, 0x4a7d, 0x2df0, 0x9f66, 0xb5c7, 0x216, 0x0, 0x0);
        gbc.writeMem(0x10c9, { 0xa });
        gbc.writeMem(0x9f66, { 0xbf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4a7d, gbc.sp());
        EXPECT(0x10ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x9f66));
        // 0A 004D
        gbc.setState(0xd829, 0x5133, 0x9420, 0xcaa6, 0xd6aa, 0x5301, 0x0, 0x1);
        gbc.writeMem(0xcaa6, { 0x88 });
        gbc.writeMem(0xd829, { 0xa });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5133, gbc.sp());
        EXPECT(0xd82a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xcaa6));
        EXPECT(0xa, gbc.readMem(0xd829));
        // 0A 004E
        gbc.setState(0x3fcf, 0x93c4, 0x9b30, 0xb852, 0xe276, 0x67bd, 0x1, 0x0);
        gbc.writeMem(0x3fcf, { 0xa });
        gbc.writeMem(0xb852, { 0xc6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x93c4, gbc.sp());
        EXPECT(0x3fd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb852));
        // 0A 0050
        gbc.setState(0x453c, 0x9bf5, 0x90a0, 0x17cc, 0x8acf, 0x9e27, 0x1, 0x1);
        gbc.writeMem(0x17cc, { 0x71 });
        gbc.writeMem(0x453c, { 0xa });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9bf5, gbc.sp());
        EXPECT(0x453d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0051
        gbc.setState(0xe985, 0xf53a, 0x2bc0, 0x30b6, 0x19c2, 0xd295, 0x1, 0x0);
        gbc.writeMem(0x30b6, { 0xb5 });
        gbc.writeMem(0xe985, { 0xa });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf53a, gbc.sp());
        EXPECT(0xe986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xe985));
        // 0A 0052
        gbc.setState(0x1f42, 0xdabe, 0x29d0, 0xfc94, 0xb6af, 0xb94c, 0x0, 0x1);
        gbc.writeMem(0x1f42, { 0xa });
        gbc.writeMem(0xfc94, { 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdabe, gbc.sp());
        EXPECT(0x1f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xfc94));
        // 0A 0053
        gbc.setState(0xb7d0, 0x73a4, 0x8960, 0x683, 0x9739, 0xf5e2, 0x1, 0x0);
        gbc.writeMem(0x683, { 0xf6 });
        gbc.writeMem(0xb7d0, { 0xa });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x73a4, gbc.sp());
        EXPECT(0xb7d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb7d0));
        // 0A 0055
        gbc.setState(0x110e, 0x9beb, 0x7390, 0x196e, 0xb148, 0x840, 0x0, 0x0);
        gbc.writeMem(0x110e, { 0xa });
        gbc.writeMem(0x196e, { 0xe6 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9beb, gbc.sp());
        EXPECT(0x110f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0057
        gbc.setState(0x56f9, 0x2fd3, 0x4350, 0xe580, 0x6c7a, 0x6905, 0x1, 0x0);
        gbc.writeMem(0x56f9, { 0xa });
        gbc.writeMem(0xe580, { 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2fd3, gbc.sp());
        EXPECT(0x56fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe580));
        // 0A 0058
        gbc.setState(0xc2b6, 0xf7c6, 0x1ee0, 0x80b9, 0xce01, 0xc420, 0x0, 0x1);
        gbc.writeMem(0x80b9, { 0xc2 });
        gbc.writeMem(0xc2b6, { 0xa });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf7c6, gbc.sp());
        EXPECT(0xc2b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x80b9));
        EXPECT(0xa, gbc.readMem(0xc2b6));
        // 0A 0059
        gbc.setState(0xc06d, 0x3849, 0xd340, 0xc739, 0x4bce, 0xa801, 0x0, 0x1);
        gbc.writeMem(0xc06d, { 0xa });
        gbc.writeMem(0xc739, { 0xa3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3849, gbc.sp());
        EXPECT(0xc06e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc06d));
        EXPECT(0xa3, gbc.readMem(0xc739));
        // 0A 005B
        gbc.setState(0x1e08, 0xa25a, 0x63d0, 0x8ed1, 0x7aba, 0x2203, 0x0, 0x0);
        gbc.writeMem(0x1e08, { 0xa });
        gbc.writeMem(0x8ed1, { 0xb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa25a, gbc.sp());
        EXPECT(0x1e09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8ed1));
        // 0A 005D
        gbc.setState(0x94cb, 0x9849, 0x81f0, 0xb44b, 0x495f, 0xed2c, 0x1, 0x0);
        gbc.writeMem(0x94cb, { 0xa });
        gbc.writeMem(0xb44b, { 0x16 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9849, gbc.sp());
        EXPECT(0x94cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x94cb));
        EXPECT(0x16, gbc.readMem(0xb44b));
        // 0A 005E
        gbc.setState(0x6b8b, 0x3816, 0x7380, 0x4910, 0xaf65, 0x4464, 0x0, 0x1);
        gbc.writeMem(0x4910, { 0xe5 });
        gbc.writeMem(0x6b8b, { 0xa });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3816, gbc.sp());
        EXPECT(0x6b8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 005F
        gbc.setState(0x9e7f, 0x6c65, 0xe200, 0x699c, 0x12e0, 0x37a4, 0x1, 0x0);
        gbc.writeMem(0x699c, { 0xfe });
        gbc.writeMem(0x9e7f, { 0xa });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6c65, gbc.sp());
        EXPECT(0x9e80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9e7f));
        // 0A 0060
        gbc.setState(0xb2b3, 0x177e, 0x2110, 0x24ea, 0x4434, 0xd18, 0x0, 0x1);
        gbc.writeMem(0x24ea, { 0x4d });
        gbc.writeMem(0xb2b3, { 0xa });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x177e, gbc.sp());
        EXPECT(0xb2b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb2b3));
        // 0A 0061
        gbc.setState(0xc493, 0x2c8a, 0x5880, 0xee4d, 0xd441, 0xeaba, 0x0, 0x0);
        gbc.writeMem(0xc493, { 0xa });
        gbc.writeMem(0xee4d, { 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2c8a, gbc.sp());
        EXPECT(0xc494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc493));
        EXPECT(0x37, gbc.readMem(0xee4d));
        // 0A 0062
        gbc.setState(0x4f86, 0xdd9d, 0x7200, 0xead7, 0xa9b, 0xe015, 0x1, 0x0);
        gbc.writeMem(0x4f86, { 0xa });
        gbc.writeMem(0xead7, { 0x68 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xdd9d, gbc.sp());
        EXPECT(0x4f87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xead7));
        // 0A 0063
        gbc.setState(0xe5d9, 0x387d, 0x5960, 0x72da, 0x2db6, 0x121a, 0x1, 0x0);
        gbc.writeMem(0x72da, { 0xd8 });
        gbc.writeMem(0xe5d9, { 0xa });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x387d, gbc.sp());
        EXPECT(0xe5da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xe5d9));
        // 0A 0064
        gbc.setState(0xd6bc, 0xfb9c, 0x57b0, 0x7257, 0x97ea, 0x47e, 0x1, 0x0);
        gbc.writeMem(0x7257, { 0xff });
        gbc.writeMem(0xd6bc, { 0xa });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xfb9c, gbc.sp());
        EXPECT(0xd6bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd6bc));
        // 0A 0065
        gbc.setState(0x262, 0xb8a7, 0xaef0, 0xafd5, 0x2755, 0xe80b, 0x1, 0x0);
        gbc.writeMem(0x262, { 0xa });
        gbc.writeMem(0xafd5, { 0xd3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb8a7, gbc.sp());
        EXPECT(0x263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xafd5));
        // 0A 0066
        gbc.setState(0xbc34, 0x5b7b, 0x6930, 0x41d, 0x47c, 0x1262, 0x0, 0x1);
        gbc.writeMem(0x41d, { 0x3 });
        gbc.writeMem(0xbc34, { 0xa });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5b7b, gbc.sp());
        EXPECT(0xbc35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xbc34));
        // 0A 0067
        gbc.setState(0xb4b9, 0xb915, 0xff20, 0x697c, 0x9031, 0x25a4, 0x1, 0x0);
        gbc.writeMem(0x697c, { 0x72 });
        gbc.writeMem(0xb4b9, { 0xa });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb915, gbc.sp());
        EXPECT(0xb4ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb4b9));
        // 0A 0068
        gbc.setState(0xb0f3, 0x9cea, 0x69b0, 0x51fc, 0xa795, 0x71c4, 0x0, 0x1);
        gbc.writeMem(0x51fc, { 0x3d });
        gbc.writeMem(0xb0f3, { 0xa });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9cea, gbc.sp());
        EXPECT(0xb0f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb0f3));
        // 0A 0069
        gbc.setState(0x2510, 0xc051, 0xd6d0, 0x362, 0x8737, 0x19a1, 0x1, 0x1);
        gbc.writeMem(0x362, { 0x25 });
        gbc.writeMem(0x2510, { 0xa });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc051, gbc.sp());
        EXPECT(0x2511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 006A
        gbc.setState(0x6507, 0xe7d6, 0x9450, 0x24de, 0x53a0, 0xdd48, 0x1, 0x1);
        gbc.writeMem(0x24de, { 0x7d });
        gbc.writeMem(0x6507, { 0xa });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe7d6, gbc.sp());
        EXPECT(0x6508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 006B
        gbc.setState(0x6529, 0x8ef6, 0xf4b0, 0x52f6, 0x2ebd, 0xfc9c, 0x0, 0x1);
        gbc.writeMem(0x52f6, { 0x11 });
        gbc.writeMem(0x6529, { 0xa });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8ef6, gbc.sp());
        EXPECT(0x652a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 006C
        gbc.setState(0xd4d1, 0x5568, 0xcca0, 0xa5d6, 0x16d9, 0x493e, 0x0, 0x0);
        gbc.writeMem(0xa5d6, { 0xbe });
        gbc.writeMem(0xd4d1, { 0xa });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5568, gbc.sp());
        EXPECT(0xd4d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xa5d6));
        EXPECT(0xa, gbc.readMem(0xd4d1));
        // 0A 006D
        gbc.setState(0x2caf, 0x3a16, 0xbab0, 0x3ee6, 0x4a6a, 0xc212, 0x1, 0x1);
        gbc.writeMem(0x2caf, { 0xa });
        gbc.writeMem(0x3ee6, { 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3a16, gbc.sp());
        EXPECT(0x2cb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 006E
        gbc.setState(0x21db, 0xe243, 0x9a80, 0xad32, 0x814a, 0xd78f, 0x1, 0x1);
        gbc.writeMem(0x21db, { 0xa });
        gbc.writeMem(0xad32, { 0xc2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe243, gbc.sp());
        EXPECT(0x21dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xad32));
        // 0A 006F
        gbc.setState(0x7b5c, 0x7b17, 0xbd90, 0xf658, 0xd878, 0x4535, 0x1, 0x1);
        gbc.writeMem(0x7b5c, { 0xa });
        gbc.writeMem(0xf658, { 0x1c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7b17, gbc.sp());
        EXPECT(0x7b5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xf658));
        // 0A 0070
        gbc.setState(0x12f1, 0x946e, 0x52a0, 0x6ddd, 0xe8f, 0x7459, 0x0, 0x0);
        gbc.writeMem(0x12f1, { 0xa });
        gbc.writeMem(0x6ddd, { 0xda });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x946e, gbc.sp());
        EXPECT(0x12f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0072
        gbc.setState(0xb50c, 0x1f31, 0xe860, 0xa64f, 0xf238, 0x2d7f, 0x0, 0x0);
        gbc.writeMem(0xa64f, { 0xef });
        gbc.writeMem(0xb50c, { 0xa });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1f31, gbc.sp());
        EXPECT(0xb50d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xa64f));
        EXPECT(0xa, gbc.readMem(0xb50c));
        // 0A 0073
        gbc.setState(0xa362, 0x2c1f, 0xd480, 0x7995, 0x6235, 0xb3a5, 0x0, 0x0);
        gbc.writeMem(0x7995, { 0x81 });
        gbc.writeMem(0xa362, { 0xa });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2c1f, gbc.sp());
        EXPECT(0xa363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa362));
        // 0A 0074
        gbc.setState(0xbbf, 0xec9, 0xf5a0, 0x9630, 0x1a3e, 0xfbcf, 0x1, 0x1);
        gbc.writeMem(0xbbf, { 0xa });
        gbc.writeMem(0x9630, { 0x8a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xec9, gbc.sp());
        EXPECT(0xbc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9630));
        // 0A 0075
        gbc.setState(0x9c99, 0x8ddf, 0x4a50, 0x50d4, 0x4875, 0x5fc1, 0x0, 0x1);
        gbc.writeMem(0x50d4, { 0x39 });
        gbc.writeMem(0x9c99, { 0xa });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8ddf, gbc.sp());
        EXPECT(0x9c9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9c99));
        // 0A 0076
        gbc.setState(0x8dbf, 0x1f9b, 0x3570, 0x243e, 0xcef8, 0x2d90, 0x1, 0x0);
        gbc.writeMem(0x243e, { 0x33 });
        gbc.writeMem(0x8dbf, { 0xa });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1f9b, gbc.sp());
        EXPECT(0x8dc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8dbf));
        // 0A 0077
        gbc.setState(0x3ba7, 0xa28c, 0xfe80, 0xf61e, 0x6b4e, 0x7def, 0x0, 0x0);
        gbc.writeMem(0x3ba7, { 0xa });
        gbc.writeMem(0xf61e, { 0x1d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa28c, gbc.sp());
        EXPECT(0x3ba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xf61e));
        // 0A 0078
        gbc.setState(0x2479, 0x5b0c, 0xda80, 0x9ed7, 0x345, 0x1531, 0x0, 0x0);
        gbc.writeMem(0x2479, { 0xa });
        gbc.writeMem(0x9ed7, { 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5b0c, gbc.sp());
        EXPECT(0x247a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x9ed7));
        // 0A 0079
        gbc.setState(0x348f, 0xb66f, 0xc190, 0xec3f, 0x3648, 0xb7f, 0x0, 0x1);
        gbc.writeMem(0x348f, { 0xa });
        gbc.writeMem(0xec3f, { 0xe6 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb66f, gbc.sp());
        EXPECT(0x3490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xec3f));
        // 0A 007A
        gbc.setState(0xd666, 0x2a3e, 0x1f40, 0xbb3, 0x35ee, 0xdd93, 0x1, 0x0);
        gbc.writeMem(0xbb3, { 0xc6 });
        gbc.writeMem(0xd666, { 0xa });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2a3e, gbc.sp());
        EXPECT(0xd667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd666));
        // 0A 007B
        gbc.setState(0xc03a, 0xbbf0, 0x1e00, 0x2e24, 0xc4e2, 0xa2b1, 0x1, 0x0);
        gbc.writeMem(0x2e24, { 0xd8 });
        gbc.writeMem(0xc03a, { 0xa });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbbf0, gbc.sp());
        EXPECT(0xc03b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc03a));
        // 0A 007C
        gbc.setState(0x88de, 0xcc4e, 0x1860, 0x4a71, 0x3613, 0xa76f, 0x1, 0x0);
        gbc.writeMem(0x4a71, { 0x7a });
        gbc.writeMem(0x88de, { 0xa });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcc4e, gbc.sp());
        EXPECT(0x88df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x88de));
        // 0A 007D
        gbc.setState(0xb9b0, 0x2eeb, 0x6030, 0x5d64, 0x71aa, 0x451a, 0x1, 0x1);
        gbc.writeMem(0x5d64, { 0xfb });
        gbc.writeMem(0xb9b0, { 0xa });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2eeb, gbc.sp());
        EXPECT(0xb9b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb9b0));
        // 0A 007E
        gbc.setState(0x827e, 0xbcb1, 0x6160, 0x875f, 0xf303, 0xb2f5, 0x0, 0x1);
        gbc.writeMem(0x827e, { 0xa });
        gbc.writeMem(0x875f, { 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbcb1, gbc.sp());
        EXPECT(0x827f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x827e));
        EXPECT(0xc3, gbc.readMem(0x875f));
        // 0A 007F
        gbc.setState(0xf87, 0x25f5, 0x5f60, 0x4130, 0xaf6, 0x6653, 0x1, 0x0);
        gbc.writeMem(0xf87, { 0xa });
        gbc.writeMem(0x4130, { 0x17 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x25f5, gbc.sp());
        EXPECT(0xf88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0080
        gbc.setState(0x9e4e, 0x6dc4, 0x8a20, 0x49b, 0x6b73, 0x3730, 0x1, 0x1);
        gbc.writeMem(0x49b, { 0xf3 });
        gbc.writeMem(0x9e4e, { 0xa });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6dc4, gbc.sp());
        EXPECT(0x9e4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9e4e));
        // 0A 0081
        gbc.setState(0xa61c, 0xca86, 0x58f0, 0xd0c9, 0xe8e6, 0x3803, 0x0, 0x0);
        gbc.writeMem(0xa61c, { 0xa });
        gbc.writeMem(0xd0c9, { 0xfb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xca86, gbc.sp());
        EXPECT(0xa61d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa61c));
        EXPECT(0xfb, gbc.readMem(0xd0c9));
        // 0A 0082
        gbc.setState(0xb27c, 0x5b0f, 0xc0d0, 0x3f11, 0x6e6e, 0x2354, 0x1, 0x0);
        gbc.writeMem(0x3f11, { 0xf2 });
        gbc.writeMem(0xb27c, { 0xa });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5b0f, gbc.sp());
        EXPECT(0xb27d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb27c));
        // 0A 0083
        gbc.setState(0x290f, 0x868f, 0x8300, 0x2d0c, 0xe9b8, 0xb0e3, 0x1, 0x1);
        gbc.writeMem(0x290f, { 0xa });
        gbc.writeMem(0x2d0c, { 0x47 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x868f, gbc.sp());
        EXPECT(0x2910, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0084
        gbc.setState(0x34d9, 0x5602, 0x2bc0, 0x27e5, 0x8aee, 0xee10, 0x0, 0x1);
        gbc.writeMem(0x27e5, { 0x27 });
        gbc.writeMem(0x34d9, { 0xa });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5602, gbc.sp());
        EXPECT(0x34da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0085
        gbc.setState(0x8732, 0xf83e, 0x9ba0, 0x371a, 0x188d, 0xb53, 0x0, 0x1);
        gbc.writeMem(0x371a, { 0x78 });
        gbc.writeMem(0x8732, { 0xa });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf83e, gbc.sp());
        EXPECT(0x8733, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8732));
        // 0A 0086
        gbc.setState(0xab0b, 0x4887, 0x3720, 0x1632, 0x1156, 0xa5b8, 0x0, 0x1);
        gbc.writeMem(0x1632, { 0x27 });
        gbc.writeMem(0xab0b, { 0xa });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4887, gbc.sp());
        EXPECT(0xab0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xab0b));
        // 0A 0087
        gbc.setState(0x3f46, 0xd87e, 0xc1f0, 0x89ca, 0x1aba, 0x5db7, 0x0, 0x0);
        gbc.writeMem(0x3f46, { 0xa });
        gbc.writeMem(0x89ca, { 0xe8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd87e, gbc.sp());
        EXPECT(0x3f47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0x89ca));
        // 0A 0088
        gbc.setState(0x33e3, 0xb1a7, 0x1270, 0x252c, 0xb3f4, 0x89e5, 0x0, 0x1);
        gbc.writeMem(0x252c, { 0xb7 });
        gbc.writeMem(0x33e3, { 0xa });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb1a7, gbc.sp());
        EXPECT(0x33e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0089
        gbc.setState(0x931f, 0xa941, 0x2450, 0xd958, 0x5a41, 0xae23, 0x1, 0x1);
        gbc.writeMem(0x931f, { 0xa });
        gbc.writeMem(0xd958, { 0xaa });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa941, gbc.sp());
        EXPECT(0x9320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x931f));
        EXPECT(0xaa, gbc.readMem(0xd958));
        // 0A 008A
        gbc.setState(0x5506, 0x9e68, 0xf890, 0x24d4, 0x88d3, 0x588c, 0x0, 0x1);
        gbc.writeMem(0x24d4, { 0x14 });
        gbc.writeMem(0x5506, { 0xa });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9e68, gbc.sp());
        EXPECT(0x5507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 008B
        gbc.setState(0x5b5c, 0x231a, 0x91d0, 0x99bf, 0xb4a2, 0x3fb7, 0x1, 0x0);
        gbc.writeMem(0x5b5c, { 0xa });
        gbc.writeMem(0x99bf, { 0xf0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x231a, gbc.sp());
        EXPECT(0x5b5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x99bf));
        // 0A 008C
        gbc.setState(0x9c2a, 0xda77, 0x8290, 0x3c, 0x6671, 0x7d18, 0x1, 0x1);
        gbc.writeMem(0x3c, { 0x1 });
        gbc.writeMem(0x9c2a, { 0xa });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xda77, gbc.sp());
        EXPECT(0x9c2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9c2a));
        // 0A 008D
        gbc.setState(0xd220, 0xd346, 0x1410, 0xb14b, 0x7346, 0xae4b, 0x0, 0x0);
        gbc.writeMem(0xb14b, { 0xb7 });
        gbc.writeMem(0xd220, { 0xa });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd346, gbc.sp());
        EXPECT(0xd221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb14b));
        EXPECT(0xa, gbc.readMem(0xd220));
        // 0A 008E
        gbc.setState(0x4208, 0x917e, 0xf190, 0xb2f2, 0xacc6, 0x6e16, 0x0, 0x0);
        gbc.writeMem(0x4208, { 0xa });
        gbc.writeMem(0xb2f2, { 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x917e, gbc.sp());
        EXPECT(0x4209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb2f2));
        // 0A 008F
        gbc.setState(0xe88f, 0xf7, 0xa70, 0x621, 0x3c87, 0xe446, 0x1, 0x1);
        gbc.writeMem(0x621, { 0x63 });
        gbc.writeMem(0xe88f, { 0xa });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf7, gbc.sp());
        EXPECT(0xe890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xe88f));
        // 0A 0090
        gbc.setState(0x1d9c, 0x292b, 0xb6d0, 0xbd07, 0x355b, 0x4654, 0x0, 0x0);
        gbc.writeMem(0x1d9c, { 0xa });
        gbc.writeMem(0xbd07, { 0x93 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x292b, gbc.sp());
        EXPECT(0x1d9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbd07));
        // 0A 0091
        gbc.setState(0xa014, 0x4e98, 0x3740, 0x11bb, 0xec98, 0x6233, 0x0, 0x0);
        gbc.writeMem(0x11bb, { 0x75 });
        gbc.writeMem(0xa014, { 0xa });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4e98, gbc.sp());
        EXPECT(0xa015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa014));
        // 0A 0092
        gbc.setState(0xa464, 0xd62d, 0xd320, 0xca12, 0xf6b4, 0x3a21, 0x0, 0x0);
        gbc.writeMem(0xa464, { 0xa });
        gbc.writeMem(0xca12, { 0xd8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd62d, gbc.sp());
        EXPECT(0xa465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa464));
        EXPECT(0xd8, gbc.readMem(0xca12));
        // 0A 0094
        gbc.setState(0x6b5b, 0x1f68, 0x32d0, 0x197d, 0x637d, 0xa431, 0x0, 0x0);
        gbc.writeMem(0x197d, { 0x30 });
        gbc.writeMem(0x6b5b, { 0xa });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1f68, gbc.sp());
        EXPECT(0x6b5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0095
        gbc.setState(0xe062, 0xa74d, 0x3d20, 0x5bd4, 0xf97b, 0xa51c, 0x0, 0x0);
        gbc.writeMem(0x5bd4, { 0x3c });
        gbc.writeMem(0xe062, { 0xa });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa74d, gbc.sp());
        EXPECT(0xe063, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xe062));
        // 0A 0096
        gbc.setState(0x5dcc, 0x896e, 0x8f80, 0x7b6f, 0x5754, 0x1cd2, 0x0, 0x1);
        gbc.writeMem(0x5dcc, { 0xa });
        gbc.writeMem(0x7b6f, { 0xee });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x896e, gbc.sp());
        EXPECT(0x5dcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0097
        gbc.setState(0x29b6, 0x14e5, 0xbe00, 0x2d86, 0xea4c, 0xa4fe, 0x1, 0x1);
        gbc.writeMem(0x29b6, { 0xa });
        gbc.writeMem(0x2d86, { 0xf2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x14e5, gbc.sp());
        EXPECT(0x29b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0098
        gbc.setState(0x9ce6, 0x2996, 0x65a0, 0x9f7c, 0x430a, 0x5565, 0x1, 0x0);
        gbc.writeMem(0x9ce6, { 0xa });
        gbc.writeMem(0x9f7c, { 0x17 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2996, gbc.sp());
        EXPECT(0x9ce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9ce6));
        EXPECT(0x17, gbc.readMem(0x9f7c));
        // 0A 0099
        gbc.setState(0xa33c, 0x35a8, 0x4100, 0x27e, 0xd8e0, 0xe91a, 0x1, 0x0);
        gbc.writeMem(0x27e, { 0xd5 });
        gbc.writeMem(0xa33c, { 0xa });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x35a8, gbc.sp());
        EXPECT(0xa33d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa33c));
        // 0A 009A
        gbc.setState(0xcae5, 0x3abd, 0x5620, 0x8c04, 0x9634, 0x898e, 0x1, 0x0);
        gbc.writeMem(0x8c04, { 0x43 });
        gbc.writeMem(0xcae5, { 0xa });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3abd, gbc.sp());
        EXPECT(0xcae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8c04));
        EXPECT(0xa, gbc.readMem(0xcae5));
        // 0A 009C
        gbc.setState(0x6624, 0xd6c3, 0xcc40, 0x3be3, 0x30e5, 0xeb09, 0x0, 0x0);
        gbc.writeMem(0x3be3, { 0xc6 });
        gbc.writeMem(0x6624, { 0xa });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd6c3, gbc.sp());
        EXPECT(0x6625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 009D
        gbc.setState(0x6d24, 0x71d9, 0xa6b0, 0xcef2, 0x1762, 0xaf91, 0x1, 0x1);
        gbc.writeMem(0x6d24, { 0xa });
        gbc.writeMem(0xcef2, { 0x25 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x71d9, gbc.sp());
        EXPECT(0x6d25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xcef2));
        // 0A 009E
        gbc.setState(0xa19c, 0xd657, 0x48e0, 0xba02, 0x1b91, 0xae1f, 0x1, 0x0);
        gbc.writeMem(0xa19c, { 0xa });
        gbc.writeMem(0xba02, { 0x33 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd657, gbc.sp());
        EXPECT(0xa19d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa19c));
        EXPECT(0x33, gbc.readMem(0xba02));
        // 0A 009F
        gbc.setState(0x784f, 0x1e8a, 0x56a0, 0x5ca, 0x2442, 0x6313, 0x1, 0x0);
        gbc.writeMem(0x5ca, { 0x10 });
        gbc.writeMem(0x784f, { 0xa });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1e8a, gbc.sp());
        EXPECT(0x7850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 00A0
        gbc.setState(0xd66a, 0x4301, 0xca90, 0xde9e, 0xdce3, 0x9083, 0x1, 0x1);
        gbc.writeMem(0xd66a, { 0xa });
        gbc.writeMem(0xde9e, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4301, gbc.sp());
        EXPECT(0xd66b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd66a));
        EXPECT(0x5e, gbc.readMem(0xde9e));
        // 0A 00A1
        gbc.setState(0x213a, 0x4cc8, 0x7800, 0xe82c, 0x8a32, 0x7b6b, 0x0, 0x0);
        gbc.writeMem(0x213a, { 0xa });
        gbc.writeMem(0xe82c, { 0xf7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4cc8, gbc.sp());
        EXPECT(0x213b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xe82c));
        // 0A 00A2
        gbc.setState(0xbea1, 0x6f23, 0xc950, 0xa9d0, 0xb7a5, 0x4b7a, 0x1, 0x0);
        gbc.writeMem(0xa9d0, { 0x45 });
        gbc.writeMem(0xbea1, { 0xa });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6f23, gbc.sp());
        EXPECT(0xbea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xa9d0));
        EXPECT(0xa, gbc.readMem(0xbea1));
        // 0A 00A3
        gbc.setState(0xc2d3, 0xcc9f, 0x9900, 0x532f, 0x9a9b, 0x8a5b, 0x0, 0x0);
        gbc.writeMem(0x532f, { 0xe5 });
        gbc.writeMem(0xc2d3, { 0xa });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xcc9f, gbc.sp());
        EXPECT(0xc2d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc2d3));
        // 0A 00A4
        gbc.setState(0x22c8, 0x3820, 0xaac0, 0xe773, 0x1308, 0x71f1, 0x0, 0x1);
        gbc.writeMem(0x22c8, { 0xa });
        gbc.writeMem(0xe773, { 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3820, gbc.sp());
        EXPECT(0x22c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe773));
        // 0A 00A5
        gbc.setState(0xac6e, 0x75e6, 0xd0, 0x6dff, 0xcba1, 0x9d5c, 0x1, 0x0);
        gbc.writeMem(0x6dff, { 0x45 });
        gbc.writeMem(0xac6e, { 0xa });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x75e6, gbc.sp());
        EXPECT(0xac6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xac6e));
        // 0A 00A6
        gbc.setState(0x2392, 0x74cd, 0x5ac0, 0xa673, 0x2141, 0xcfad, 0x0, 0x0);
        gbc.writeMem(0x2392, { 0xa });
        gbc.writeMem(0xa673, { 0xda });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x74cd, gbc.sp());
        EXPECT(0x2393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa673));
        // 0A 00A7
        gbc.setState(0x553c, 0x19f6, 0xcbe0, 0x6c04, 0xfd91, 0xe76a, 0x1, 0x1);
        gbc.writeMem(0x553c, { 0xa });
        gbc.writeMem(0x6c04, { 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x19f6, gbc.sp());
        EXPECT(0x553d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 00A8
        gbc.setState(0x567c, 0xe6bb, 0xc880, 0xbf6d, 0xc950, 0xee4, 0x0, 0x0);
        gbc.writeMem(0x567c, { 0xa });
        gbc.writeMem(0xbf6d, { 0xe9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe6bb, gbc.sp());
        EXPECT(0x567d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xbf6d));
        // 0A 00A9
        gbc.setState(0x51a1, 0x57a5, 0xf8e0, 0x5242, 0x1c97, 0x77bb, 0x1, 0x0);
        gbc.writeMem(0x51a1, { 0xa });
        gbc.writeMem(0x5242, { 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x57a5, gbc.sp());
        EXPECT(0x51a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 00AA
        gbc.setState(0x9b14, 0xfa61, 0xe900, 0x53b0, 0x1bb9, 0xb9a8, 0x1, 0x0);
        gbc.writeMem(0x53b0, { 0xec });
        gbc.writeMem(0x9b14, { 0xa });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xfa61, gbc.sp());
        EXPECT(0x9b15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9b14));
        // 0A 00AB
        gbc.setState(0xe168, 0x1493, 0x68d0, 0xd4dd, 0x43a7, 0xe654, 0x0, 0x0);
        gbc.writeMem(0xd4dd, { 0x7a });
        gbc.writeMem(0xe168, { 0xa });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1493, gbc.sp());
        EXPECT(0xe169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd4dd));
        EXPECT(0xa, gbc.readMem(0xe168));
        // 0A 00AC
        gbc.setState(0x4a13, 0x8240, 0xbe40, 0xb8ee, 0x9f57, 0xa734, 0x0, 0x1);
        gbc.writeMem(0x4a13, { 0xa });
        gbc.writeMem(0xb8ee, { 0x5d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8240, gbc.sp());
        EXPECT(0x4a14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb8ee));
        // 0A 00AD
        gbc.setState(0x18e6, 0x2849, 0x9f10, 0x870, 0x2eb7, 0x444a, 0x0, 0x1);
        gbc.writeMem(0x870, { 0x18 });
        gbc.writeMem(0x18e6, { 0xa });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2849, gbc.sp());
        EXPECT(0x18e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 00AE
        gbc.setState(0x59f2, 0xba4d, 0xd70, 0x2bbd, 0x951a, 0xe991, 0x0, 0x1);
        gbc.writeMem(0x2bbd, { 0x78 });
        gbc.writeMem(0x59f2, { 0xa });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xba4d, gbc.sp());
        EXPECT(0x59f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 00AF
        gbc.setState(0x921c, 0x69eb, 0x7080, 0x25fc, 0xf4f2, 0x4969, 0x0, 0x1);
        gbc.writeMem(0x25fc, { 0x29 });
        gbc.writeMem(0x921c, { 0xa });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x69eb, gbc.sp());
        EXPECT(0x921d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x921c));
        // 0A 00B0
        gbc.setState(0x6aa5, 0x95e7, 0xbb80, 0x8cd5, 0xcacc, 0x106e, 0x0, 0x1);
        gbc.writeMem(0x6aa5, { 0xa });
        gbc.writeMem(0x8cd5, { 0x2a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x95e7, gbc.sp());
        EXPECT(0x6aa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x8cd5));
        // 0A 00B1
        gbc.setState(0xb9f, 0xa662, 0xee90, 0x8e5d, 0x59da, 0xd1ee, 0x1, 0x0);
        gbc.writeMem(0xb9f, { 0xa });
        gbc.writeMem(0x8e5d, { 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa662, gbc.sp());
        EXPECT(0xba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8e5d));
        // 0A 00B2
        gbc.setState(0x32a3, 0x8f6a, 0x6d00, 0x90f, 0x83d5, 0x3242, 0x0, 0x1);
        gbc.writeMem(0x90f, { 0xe8 });
        gbc.writeMem(0x32a3, { 0xa });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8f6a, gbc.sp());
        EXPECT(0x32a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 00B3
        gbc.setState(0x9648, 0xf634, 0x47e0, 0x6e52, 0xd43c, 0x6fcc, 0x0, 0x0);
        gbc.writeMem(0x6e52, { 0xb1 });
        gbc.writeMem(0x9648, { 0xa });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf634, gbc.sp());
        EXPECT(0x9649, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9648));
        // 0A 00B4
        gbc.setState(0x26bf, 0x19ed, 0x5f60, 0xa48b, 0x99e5, 0x3b49, 0x0, 0x0);
        gbc.writeMem(0x26bf, { 0xa });
        gbc.writeMem(0xa48b, { 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x19ed, gbc.sp());
        EXPECT(0x26c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa48b));
        // 0A 00B5
        gbc.setState(0x7a9a, 0x6d45, 0xfa80, 0x6090, 0xcb89, 0x2db5, 0x0, 0x1);
        gbc.writeMem(0x6090, { 0xfc });
        gbc.writeMem(0x7a9a, { 0xa });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6d45, gbc.sp());
        EXPECT(0x7a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 00B7
        gbc.setState(0x4e22, 0x4914, 0x5450, 0xf7bc, 0x3d21, 0x35b9, 0x0, 0x0);
        gbc.writeMem(0x4e22, { 0xa });
        gbc.writeMem(0xf7bc, { 0xbc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4914, gbc.sp());
        EXPECT(0x4e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xf7bc));
        // 0A 00B8
        gbc.setState(0x62da, 0x85d7, 0x5930, 0x84cd, 0x4744, 0xe2f8, 0x1, 0x0);
        gbc.writeMem(0x62da, { 0xa });
        gbc.writeMem(0x84cd, { 0x73 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x85d7, gbc.sp());
        EXPECT(0x62db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x84cd));
        // 0A 00B9
        gbc.setState(0x31cc, 0x4693, 0x4240, 0xe583, 0xded7, 0x8fd9, 0x0, 0x0);
        gbc.writeMem(0x31cc, { 0xa });
        gbc.writeMem(0xe583, { 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4693, gbc.sp());
        EXPECT(0x31cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe583));
        // 0A 00BA
        gbc.setState(0xa6af, 0x7fef, 0x52e0, 0x4322, 0x96ec, 0x7937, 0x1, 0x1);
        gbc.writeMem(0x4322, { 0x89 });
        gbc.writeMem(0xa6af, { 0xa });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7fef, gbc.sp());
        EXPECT(0xa6b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa6af));
        // 0A 00BB
        gbc.setState(0xe4b3, 0x454f, 0x8540, 0x967c, 0x2ac0, 0x750a, 0x0, 0x0);
        gbc.writeMem(0x967c, { 0x5c });
        gbc.writeMem(0xe4b3, { 0xa });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x454f, gbc.sp());
        EXPECT(0xe4b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x967c));
        EXPECT(0xa, gbc.readMem(0xe4b3));
        // 0A 00BC
        gbc.setState(0xb724, 0x46d0, 0xf960, 0x47b1, 0xd8e4, 0x4d82, 0x1, 0x1);
        gbc.writeMem(0x47b1, { 0x2b });
        gbc.writeMem(0xb724, { 0xa });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x46d0, gbc.sp());
        EXPECT(0xb725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb724));
        // 0A 00BD
        gbc.setState(0xbf7a, 0x4f78, 0xbdc0, 0x8af0, 0x92d4, 0xfa9, 0x1, 0x0);
        gbc.writeMem(0x8af0, { 0x40 });
        gbc.writeMem(0xbf7a, { 0xa });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4f78, gbc.sp());
        EXPECT(0xbf7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8af0));
        EXPECT(0xa, gbc.readMem(0xbf7a));
        // 0A 00BE
        gbc.setState(0xc12f, 0x210d, 0xfef0, 0xc09e, 0xed50, 0xc46e, 0x1, 0x0);
        gbc.writeMem(0xc09e, { 0xf6 });
        gbc.writeMem(0xc12f, { 0xa });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x210d, gbc.sp());
        EXPECT(0xc130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xc09e));
        EXPECT(0xa, gbc.readMem(0xc12f));
        // 0A 00BF
        gbc.setState(0x9426, 0xa0f1, 0x7600, 0x2858, 0xbb5c, 0x7f88, 0x0, 0x0);
        gbc.writeMem(0x2858, { 0x6d });
        gbc.writeMem(0x9426, { 0xa });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa0f1, gbc.sp());
        EXPECT(0x9427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9426));
        // 0A 00C0
        gbc.setState(0x3892, 0x7aa, 0xc880, 0x93c5, 0xf224, 0x8295, 0x0, 0x1);
        gbc.writeMem(0x3892, { 0xa });
        gbc.writeMem(0x93c5, { 0x9b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7aa, gbc.sp());
        EXPECT(0x3893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x93c5));
        // 0A 00C1
        gbc.setState(0x14b0, 0x227e, 0xbb80, 0x2474, 0x2e6, 0x6843, 0x1, 0x1);
        gbc.writeMem(0x14b0, { 0xa });
        gbc.writeMem(0x2474, { 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x227e, gbc.sp());
        EXPECT(0x14b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 00C2
        gbc.setState(0x7946, 0x1a0f, 0x92d0, 0x15e3, 0x9b5e, 0x75a7, 0x0, 0x1);
        gbc.writeMem(0x15e3, { 0x23 });
        gbc.writeMem(0x7946, { 0xa });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1a0f, gbc.sp());
        EXPECT(0x7947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 00C3
        gbc.setState(0x7b39, 0x9ee8, 0xf0a0, 0x8ba4, 0x76bc, 0x5771, 0x1, 0x0);
        gbc.writeMem(0x7b39, { 0xa });
        gbc.writeMem(0x8ba4, { 0x33 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9ee8, gbc.sp());
        EXPECT(0x7b3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8ba4));
        // 0A 00C4
        gbc.setState(0x4b73, 0xc5af, 0x1140, 0x1d92, 0x3eed, 0xeff2, 0x1, 0x1);
        gbc.writeMem(0x1d92, { 0xb5 });
        gbc.writeMem(0x4b73, { 0xa });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc5af, gbc.sp());
        EXPECT(0x4b74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 00C5
        gbc.setState(0x42b7, 0x18c3, 0xfa50, 0xb4d5, 0x45ac, 0xc605, 0x0, 0x1);
        gbc.writeMem(0x42b7, { 0xa });
        gbc.writeMem(0xb4d5, { 0xe4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x18c3, gbc.sp());
        EXPECT(0x42b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xb4d5));
        // 0A 00C7
        gbc.setState(0x203f, 0x2289, 0x9ef0, 0xc76c, 0xe7f, 0x8d99, 0x1, 0x0);
        gbc.writeMem(0x203f, { 0xa });
        gbc.writeMem(0xc76c, { 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2289, gbc.sp());
        EXPECT(0x2040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc76c));
        // 0A 00C8
        gbc.setState(0x244b, 0xda5e, 0xf4a0, 0xedf1, 0xc9a6, 0xe19a, 0x0, 0x1);
        gbc.writeMem(0x244b, { 0xa });
        gbc.writeMem(0xedf1, { 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xda5e, gbc.sp());
        EXPECT(0x244c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xedf1));
        // 0A 00C9
        gbc.setState(0x17eb, 0xad4f, 0xf0d0, 0xd64e, 0x43cb, 0xb035, 0x1, 0x0);
        gbc.writeMem(0x17eb, { 0xa });
        gbc.writeMem(0xd64e, { 0x82 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xad4f, gbc.sp());
        EXPECT(0x17ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd64e));
        // 0A 00CA
        gbc.setState(0x4da2, 0xf758, 0xc170, 0xeaa7, 0xf33c, 0xaee4, 0x1, 0x1);
        gbc.writeMem(0x4da2, { 0xa });
        gbc.writeMem(0xeaa7, { 0x58 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf758, gbc.sp());
        EXPECT(0x4da3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xeaa7));
        // 0A 00CB
        gbc.setState(0x595d, 0x29fe, 0x1ae0, 0x1ec7, 0x4cbb, 0xb21f, 0x1, 0x1);
        gbc.writeMem(0x1ec7, { 0x43 });
        gbc.writeMem(0x595d, { 0xa });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x29fe, gbc.sp());
        EXPECT(0x595e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 00CC
        gbc.setState(0xef1d, 0x3875, 0x1160, 0xdea8, 0x8663, 0xc944, 0x1, 0x1);
        gbc.writeMem(0xdea8, { 0x7f });
        gbc.writeMem(0xef1d, { 0xa });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3875, gbc.sp());
        EXPECT(0xef1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xdea8));
        EXPECT(0xa, gbc.readMem(0xef1d));
        // 0A 00CE
        gbc.setState(0x9e1e, 0x5204, 0x9ea0, 0xc841, 0xed0f, 0xe92, 0x0, 0x1);
        gbc.writeMem(0x9e1e, { 0xa });
        gbc.writeMem(0xc841, { 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5204, gbc.sp());
        EXPECT(0x9e1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9e1e));
        EXPECT(0xec, gbc.readMem(0xc841));
        // 0A 00CF
        gbc.setState(0x15b9, 0xa6e1, 0x210, 0x70a3, 0x796c, 0x64c3, 0x0, 0x0);
        gbc.writeMem(0x15b9, { 0xa });
        gbc.writeMem(0x70a3, { 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa6e1, gbc.sp());
        EXPECT(0x15ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 00D0
        gbc.setState(0x9743, 0xa6a, 0x3de0, 0x7d15, 0x68ef, 0xd2e, 0x0, 0x1);
        gbc.writeMem(0x7d15, { 0x2a });
        gbc.writeMem(0x9743, { 0xa });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa6a, gbc.sp());
        EXPECT(0x9744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9743));
        // 0A 00D1
        gbc.setState(0x9c9a, 0xc0f6, 0x7e00, 0x2b09, 0x396c, 0x5b1a, 0x1, 0x1);
        gbc.writeMem(0x2b09, { 0x2f });
        gbc.writeMem(0x9c9a, { 0xa });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc0f6, gbc.sp());
        EXPECT(0x9c9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9c9a));
        // 0A 00D2
        gbc.setState(0x7664, 0xc029, 0x7440, 0x8d71, 0x4c9b, 0x5673, 0x1, 0x0);
        gbc.writeMem(0x7664, { 0xa });
        gbc.writeMem(0x8d71, { 0xba });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc029, gbc.sp());
        EXPECT(0x7665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x8d71));
        // 0A 00D3
        gbc.setState(0x4381, 0x3c94, 0x1940, 0x43d0, 0xe5c5, 0x57c5, 0x1, 0x0);
        gbc.writeMem(0x4381, { 0xa });
        gbc.writeMem(0x43d0, { 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3c94, gbc.sp());
        EXPECT(0x4382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 00D4
        gbc.setState(0x385e, 0x610d, 0x7bc0, 0x3545, 0x208e, 0xebd, 0x1, 0x1);
        gbc.writeMem(0x3545, { 0x54 });
        gbc.writeMem(0x385e, { 0xa });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x610d, gbc.sp());
        EXPECT(0x385f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 00D5
        gbc.setState(0xe256, 0xdd05, 0xa2f0, 0xe192, 0x49f0, 0xacc2, 0x1, 0x1);
        gbc.writeMem(0xe192, { 0x0 });
        gbc.writeMem(0xe256, { 0xa });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdd05, gbc.sp());
        EXPECT(0xe257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe192));
        EXPECT(0xa, gbc.readMem(0xe256));
        // 0A 00D6
        gbc.setState(0xe8fc, 0xc96d, 0x9b80, 0x1fbe, 0x3156, 0x2715, 0x1, 0x1);
        gbc.writeMem(0x1fbe, { 0x4 });
        gbc.writeMem(0xe8fc, { 0xa });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc96d, gbc.sp());
        EXPECT(0xe8fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xe8fc));
        // 0A 00D7
        gbc.setState(0x3091, 0x91f0, 0x5e30, 0x2e8a, 0xaaee, 0x895c, 0x0, 0x0);
        gbc.writeMem(0x2e8a, { 0xcf });
        gbc.writeMem(0x3091, { 0xa });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x91f0, gbc.sp());
        EXPECT(0x3092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 00D9
        gbc.setState(0xbb3b, 0x13f, 0x800, 0x8738, 0xd96b, 0xbb43, 0x1, 0x1);
        gbc.writeMem(0x8738, { 0xd });
        gbc.writeMem(0xbb3b, { 0xa });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x13f, gbc.sp());
        EXPECT(0xbb3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x8738));
        EXPECT(0xa, gbc.readMem(0xbb3b));
        // 0A 00DA
        gbc.setState(0x9a93, 0xca5e, 0x6880, 0x1b8d, 0xe80a, 0x2566, 0x0, 0x1);
        gbc.writeMem(0x1b8d, { 0x9b });
        gbc.writeMem(0x9a93, { 0xa });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xca5e, gbc.sp());
        EXPECT(0x9a94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9a93));
        // 0A 00DB
        gbc.setState(0xe4fe, 0xdaf3, 0x54e0, 0x210f, 0x800d, 0x34fe, 0x0, 0x0);
        gbc.writeMem(0x210f, { 0xe5 });
        gbc.writeMem(0xe4fe, { 0xa });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xdaf3, gbc.sp());
        EXPECT(0xe4ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xe4fe));
        // 0A 00DC
        gbc.setState(0x8497, 0xe487, 0x2440, 0x55a7, 0xb2fc, 0xad4e, 0x1, 0x1);
        gbc.writeMem(0x55a7, { 0x42 });
        gbc.writeMem(0x8497, { 0xa });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe487, gbc.sp());
        EXPECT(0x8498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8497));
        // 0A 00DD
        gbc.setState(0x186f, 0x48b1, 0xfd50, 0x3be5, 0xe3c9, 0x1f6a, 0x0, 0x0);
        gbc.writeMem(0x186f, { 0xa });
        gbc.writeMem(0x3be5, { 0x5f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x48b1, gbc.sp());
        EXPECT(0x1870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 00DE
        gbc.setState(0xc17d, 0x97b4, 0x40a0, 0xff66, 0xbd11, 0x99d0, 0x0, 0x1);
        gbc.writeMem(0xc17d, { 0xa });
        gbc.writeMem(0xff66, { 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x97b4, gbc.sp());
        EXPECT(0xc17e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc17d));
        EXPECT(0x2c, gbc.readMem(0xff66));
        // 0A 00E0
        gbc.setState(0x279a, 0x4556, 0x80, 0x48f8, 0xf760, 0x605, 0x0, 0x1);
        gbc.writeMem(0x279a, { 0xa });
        gbc.writeMem(0x48f8, { 0x80 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4556, gbc.sp());
        EXPECT(0x279b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 00E1
        gbc.setState(0x1baf, 0xd0d0, 0x2bb0, 0x9ef4, 0xa263, 0x6e1d, 0x1, 0x0);
        gbc.writeMem(0x1baf, { 0xa });
        gbc.writeMem(0x9ef4, { 0x70 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd0d0, gbc.sp());
        EXPECT(0x1bb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x9ef4));
        // 0A 00E2
        gbc.setState(0xc4fd, 0x62a9, 0x51f0, 0xebbc, 0xd164, 0xdaa4, 0x1, 0x0);
        gbc.writeMem(0xc4fd, { 0xa });
        gbc.writeMem(0xebbc, { 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x62a9, gbc.sp());
        EXPECT(0xc4fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc4fd));
        EXPECT(0x21, gbc.readMem(0xebbc));
        // 0A 00E3
        gbc.setState(0x9b39, 0x8427, 0x370, 0x5323, 0xa923, 0xce45, 0x0, 0x1);
        gbc.writeMem(0x5323, { 0x81 });
        gbc.writeMem(0x9b39, { 0xa });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8427, gbc.sp());
        EXPECT(0x9b3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9b39));
        // 0A 00E4
        gbc.setState(0x697b, 0x9944, 0x11e0, 0xf376, 0x4dd3, 0xaa7, 0x0, 0x1);
        gbc.writeMem(0x697b, { 0xa });
        gbc.writeMem(0xf376, { 0xd1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9944, gbc.sp());
        EXPECT(0x697c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xf376));
        // 0A 00E6
        gbc.setState(0xbb20, 0xdf47, 0x56f0, 0x6e43, 0xf618, 0xc6ae, 0x0, 0x0);
        gbc.writeMem(0x6e43, { 0x81 });
        gbc.writeMem(0xbb20, { 0xa });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xdf47, gbc.sp());
        EXPECT(0xbb21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xbb20));
        // 0A 00E7
        gbc.setState(0x822b, 0x7bef, 0x9770, 0xd08d, 0xfa1b, 0x701b, 0x0, 0x1);
        gbc.writeMem(0x822b, { 0xa });
        gbc.writeMem(0xd08d, { 0xb0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7bef, gbc.sp());
        EXPECT(0x822c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x822b));
        EXPECT(0xb0, gbc.readMem(0xd08d));
        // 0A 00E8
        gbc.setState(0x9156, 0xb597, 0x1000, 0xa22d, 0xc1c6, 0xb1bd, 0x0, 0x1);
        gbc.writeMem(0x9156, { 0xa });
        gbc.writeMem(0xa22d, { 0x99 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb597, gbc.sp());
        EXPECT(0x9157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9156));
        EXPECT(0x99, gbc.readMem(0xa22d));
        // 0A 00E9
        gbc.setState(0xb409, 0x4279, 0x6d0, 0x7a25, 0xe151, 0x1f3e, 0x1, 0x1);
        gbc.writeMem(0x7a25, { 0x5a });
        gbc.writeMem(0xb409, { 0xa });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4279, gbc.sp());
        EXPECT(0xb40a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb409));
        // 0A 00EA
        gbc.setState(0x8f4c, 0x1574, 0xa150, 0x41a6, 0x7fa1, 0x1417, 0x0, 0x0);
        gbc.writeMem(0x41a6, { 0xa6 });
        gbc.writeMem(0x8f4c, { 0xa });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1574, gbc.sp());
        EXPECT(0x8f4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8f4c));
        // 0A 00EB
        gbc.setState(0x2d86, 0xcb84, 0xc4a0, 0x71ce, 0x1c9, 0x62df, 0x0, 0x0);
        gbc.writeMem(0x2d86, { 0xa });
        gbc.writeMem(0x71ce, { 0x7d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xcb84, gbc.sp());
        EXPECT(0x2d87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 00ED
        gbc.setState(0xb904, 0xc928, 0xfdc0, 0x9833, 0x55d8, 0xb40b, 0x1, 0x0);
        gbc.writeMem(0x9833, { 0x91 });
        gbc.writeMem(0xb904, { 0xa });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc928, gbc.sp());
        EXPECT(0xb905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9833));
        EXPECT(0xa, gbc.readMem(0xb904));
        // 0A 00EE
        gbc.setState(0x66f5, 0xb546, 0x4ef0, 0x8bb3, 0x30c0, 0xc94a, 0x1, 0x0);
        gbc.writeMem(0x66f5, { 0xa });
        gbc.writeMem(0x8bb3, { 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb546, gbc.sp());
        EXPECT(0x66f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8bb3));
        // 0A 00EF
        gbc.setState(0x198, 0x7fb2, 0x80d0, 0xe911, 0x8d83, 0x9742, 0x0, 0x0);
        gbc.writeMem(0x198, { 0xa });
        gbc.writeMem(0xe911, { 0x5a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7fb2, gbc.sp());
        EXPECT(0x199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xe911));
        // 0A 00F0
        gbc.setState(0x765f, 0x13b1, 0x51d0, 0x7513, 0xd762, 0xca65, 0x1, 0x1);
        gbc.writeMem(0x7513, { 0xc3 });
        gbc.writeMem(0x765f, { 0xa });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x13b1, gbc.sp());
        EXPECT(0x7660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 00F1
        gbc.setState(0xb37, 0x9225, 0xf460, 0xb21a, 0xc032, 0xfa59, 0x0, 0x1);
        gbc.writeMem(0xb37, { 0xa });
        gbc.writeMem(0xb21a, { 0xf5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9225, gbc.sp());
        EXPECT(0xb38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb21a));
        // 0A 00F3
        gbc.setState(0x7b8f, 0x20f, 0x92c0, 0x5178, 0xc01d, 0x867, 0x1, 0x0);
        gbc.writeMem(0x5178, { 0x50 });
        gbc.writeMem(0x7b8f, { 0xa });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x20f, gbc.sp());
        EXPECT(0x7b90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 00F4
        gbc.setState(0xee0e, 0xfde4, 0x2fe0, 0xb138, 0x3f68, 0xab01, 0x1, 0x0);
        gbc.writeMem(0xb138, { 0x2f });
        gbc.writeMem(0xee0e, { 0xa });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xfde4, gbc.sp());
        EXPECT(0xee0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb138));
        EXPECT(0xa, gbc.readMem(0xee0e));
        // 0A 00F5
        gbc.setState(0x706, 0x84ca, 0xc160, 0xbc1d, 0xade5, 0xd11c, 0x0, 0x1);
        gbc.writeMem(0x706, { 0xa });
        gbc.writeMem(0xbc1d, { 0x44 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x84ca, gbc.sp());
        EXPECT(0x707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xbc1d));
        // 0A 00F6
        gbc.setState(0x90ea, 0x5050, 0xfa10, 0xe200, 0x7dc1, 0x7254, 0x0, 0x0);
        gbc.writeMem(0x90ea, { 0xa });
        gbc.writeMem(0xe200, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5050, gbc.sp());
        EXPECT(0x90eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x90ea));
        EXPECT(0x5e, gbc.readMem(0xe200));
        // 0A 00F7
        gbc.setState(0x7820, 0x3ba0, 0xd360, 0xa14d, 0x2f5b, 0xb7c0, 0x1, 0x0);
        gbc.writeMem(0x7820, { 0xa });
        gbc.writeMem(0xa14d, { 0x58 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3ba0, gbc.sp());
        EXPECT(0x7821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xa14d));
        // 0A 00F8
        gbc.setState(0xd460, 0x28c2, 0xe120, 0x6d8f, 0xa6d, 0x40f1, 0x0, 0x0);
        gbc.writeMem(0x6d8f, { 0xcb });
        gbc.writeMem(0xd460, { 0xa });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x28c2, gbc.sp());
        EXPECT(0xd461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd460));
        // 0A 00F9
        gbc.setState(0xcf14, 0xc6a8, 0xc260, 0x5b7f, 0xcd50, 0x8168, 0x0, 0x1);
        gbc.writeMem(0x5b7f, { 0x4a });
        gbc.writeMem(0xcf14, { 0xa });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc6a8, gbc.sp());
        EXPECT(0xcf15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xcf14));
        // 0A 00FA
        gbc.setState(0x9e78, 0xec0c, 0x21b0, 0xe375, 0x8c1, 0xf4ab, 0x0, 0x1);
        gbc.writeMem(0x9e78, { 0xa });
        gbc.writeMem(0xe375, { 0xe6 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xec0c, gbc.sp());
        EXPECT(0x9e79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9e78));
        EXPECT(0xe6, gbc.readMem(0xe375));
        // 0A 00FB
        gbc.setState(0x27ca, 0x9c64, 0xa430, 0x5daf, 0xb280, 0x2c4d, 0x0, 0x1);
        gbc.writeMem(0x27ca, { 0xa });
        gbc.writeMem(0x5daf, { 0x65 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9c64, gbc.sp());
        EXPECT(0x27cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 00FD
        gbc.setState(0x4865, 0x9ab5, 0x37a0, 0x946c, 0x86d0, 0xb875, 0x1, 0x0);
        gbc.writeMem(0x4865, { 0xa });
        gbc.writeMem(0x946c, { 0x8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9ab5, gbc.sp());
        EXPECT(0x4866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x946c));
        // 0A 00FE
        gbc.setState(0x1d44, 0x102b, 0x5800, 0xe27e, 0x6dc0, 0x14c9, 0x1, 0x1);
        gbc.writeMem(0x1d44, { 0xa });
        gbc.writeMem(0xe27e, { 0x33 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x102b, gbc.sp());
        EXPECT(0x1d45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe27e));
        // 0A 00FF
        gbc.setState(0x657c, 0x15d, 0x390, 0x6722, 0x3c96, 0xb15, 0x0, 0x0);
        gbc.writeMem(0x657c, { 0xa });
        gbc.writeMem(0x6722, { 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x15d, gbc.sp());
        EXPECT(0x657d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0100
        gbc.setState(0x12ef, 0x2243, 0x9ff0, 0x7566, 0x4c8f, 0x50d, 0x1, 0x0);
        gbc.writeMem(0x12ef, { 0xa });
        gbc.writeMem(0x7566, { 0xcf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2243, gbc.sp());
        EXPECT(0x12f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0101
        gbc.setState(0x31aa, 0xff7c, 0xea80, 0xa0aa, 0xd92d, 0xeae8, 0x1, 0x1);
        gbc.writeMem(0x31aa, { 0xa });
        gbc.writeMem(0xa0aa, { 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xff7c, gbc.sp());
        EXPECT(0x31ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xa0aa));
        // 0A 0102
        gbc.setState(0x3786, 0xeb7a, 0xfa90, 0x596d, 0xf89a, 0x1036, 0x0, 0x1);
        gbc.writeMem(0x3786, { 0xa });
        gbc.writeMem(0x596d, { 0x41 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xeb7a, gbc.sp());
        EXPECT(0x3787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0103
        gbc.setState(0x8b90, 0xe4c0, 0x8c0, 0x80b9, 0xc815, 0x3912, 0x0, 0x1);
        gbc.writeMem(0x80b9, { 0xc2 });
        gbc.writeMem(0x8b90, { 0xa });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe4c0, gbc.sp());
        EXPECT(0x8b91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x80b9));
        EXPECT(0xa, gbc.readMem(0x8b90));
        // 0A 0105
        gbc.setState(0x937f, 0x795f, 0x21d0, 0xb7d1, 0x47b, 0xf1ba, 0x0, 0x1);
        gbc.writeMem(0x937f, { 0xa });
        gbc.writeMem(0xb7d1, { 0x96 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x795f, gbc.sp());
        EXPECT(0x9380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x937f));
        EXPECT(0x96, gbc.readMem(0xb7d1));
        // 0A 0106
        gbc.setState(0x902a, 0xb81e, 0x5e0, 0xf652, 0xddd0, 0xda49, 0x1, 0x1);
        gbc.writeMem(0x902a, { 0xa });
        gbc.writeMem(0xf652, { 0x6c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb81e, gbc.sp());
        EXPECT(0x902b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x902a));
        EXPECT(0x6c, gbc.readMem(0xf652));
        // 0A 0107
        gbc.setState(0xb665, 0x2fb6, 0x95b0, 0x63be, 0x5684, 0x169b, 0x0, 0x1);
        gbc.writeMem(0x63be, { 0x27 });
        gbc.writeMem(0xb665, { 0xa });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2fb6, gbc.sp());
        EXPECT(0xb666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb665));
        // 0A 0108
        gbc.setState(0x758c, 0xe0e, 0x2b0, 0x8e7e, 0x51cf, 0xb91, 0x1, 0x0);
        gbc.writeMem(0x758c, { 0xa });
        gbc.writeMem(0x8e7e, { 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe0e, gbc.sp());
        EXPECT(0x758d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8e7e));
        // 0A 0109
        gbc.setState(0x9416, 0xb4c6, 0xa7b0, 0x4133, 0x8ec4, 0x97cf, 0x1, 0x1);
        gbc.writeMem(0x4133, { 0x66 });
        gbc.writeMem(0x9416, { 0xa });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb4c6, gbc.sp());
        EXPECT(0x9417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9416));
        // 0A 010A
        gbc.setState(0x66a4, 0x9a66, 0x10b0, 0x4fb, 0x9d5f, 0xe4f9, 0x0, 0x1);
        gbc.writeMem(0x4fb, { 0xa2 });
        gbc.writeMem(0x66a4, { 0xa });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9a66, gbc.sp());
        EXPECT(0x66a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 010B
        gbc.setState(0xb8a2, 0x240b, 0x45e0, 0x4775, 0xa822, 0xcc5, 0x0, 0x1);
        gbc.writeMem(0x4775, { 0x4e });
        gbc.writeMem(0xb8a2, { 0xa });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x240b, gbc.sp());
        EXPECT(0xb8a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb8a2));
        // 0A 010C
        gbc.setState(0x9a0a, 0xfc0d, 0x1f40, 0xb21e, 0x4bbd, 0x76ea, 0x0, 0x1);
        gbc.writeMem(0x9a0a, { 0xa });
        gbc.writeMem(0xb21e, { 0xe9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xfc0d, gbc.sp());
        EXPECT(0x9a0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9a0a));
        EXPECT(0xe9, gbc.readMem(0xb21e));
        // 0A 010D
        gbc.setState(0x377e, 0x95fd, 0x4dd0, 0x741d, 0xc4d1, 0x48e4, 0x0, 0x1);
        gbc.writeMem(0x377e, { 0xa });
        gbc.writeMem(0x741d, { 0x12 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x95fd, gbc.sp());
        EXPECT(0x377f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 010E
        gbc.setState(0x8bba, 0xccde, 0x8f00, 0x6fa5, 0x34e8, 0x67e7, 0x0, 0x0);
        gbc.writeMem(0x6fa5, { 0x2d });
        gbc.writeMem(0x8bba, { 0xa });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xccde, gbc.sp());
        EXPECT(0x8bbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8bba));
        // 0A 010F
        gbc.setState(0xe6f5, 0x9173, 0x2880, 0xcded, 0x7fda, 0x1e95, 0x1, 0x1);
        gbc.writeMem(0xcded, { 0x7d });
        gbc.writeMem(0xe6f5, { 0xa });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9173, gbc.sp());
        EXPECT(0xe6f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xcded));
        EXPECT(0xa, gbc.readMem(0xe6f5));
        // 0A 0110
        gbc.setState(0x858a, 0x7ce, 0xe9f0, 0x177e, 0xfbcf, 0xfc17, 0x0, 0x0);
        gbc.writeMem(0x177e, { 0xdc });
        gbc.writeMem(0x858a, { 0xa });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7ce, gbc.sp());
        EXPECT(0x858b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x858a));
        // 0A 0111
        gbc.setState(0x5141, 0xb8a6, 0xcd0, 0xc6c1, 0xe06c, 0xb5a6, 0x1, 0x0);
        gbc.writeMem(0x5141, { 0xa });
        gbc.writeMem(0xc6c1, { 0x58 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb8a6, gbc.sp());
        EXPECT(0x5142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc6c1));
        // 0A 0112
        gbc.setState(0x207a, 0x951a, 0x9f0, 0x3f53, 0x5c71, 0x46c6, 0x1, 0x1);
        gbc.writeMem(0x207a, { 0xa });
        gbc.writeMem(0x3f53, { 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x951a, gbc.sp());
        EXPECT(0x207b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0113
        gbc.setState(0xb1e2, 0x847b, 0x65d0, 0xbd8, 0xf563, 0x3da3, 0x1, 0x1);
        gbc.writeMem(0xbd8, { 0xbf });
        gbc.writeMem(0xb1e2, { 0xa });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x847b, gbc.sp());
        EXPECT(0xb1e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb1e2));
        // 0A 0114
        gbc.setState(0x4d20, 0xfca2, 0x4e20, 0x194, 0x175e, 0xd8b1, 0x1, 0x1);
        gbc.writeMem(0x194, { 0x69 });
        gbc.writeMem(0x4d20, { 0xa });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xfca2, gbc.sp());
        EXPECT(0x4d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0115
        gbc.setState(0xa4bb, 0x3b54, 0x20b0, 0x67f9, 0xe7d1, 0x901b, 0x0, 0x1);
        gbc.writeMem(0x67f9, { 0x3a });
        gbc.writeMem(0xa4bb, { 0xa });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3b54, gbc.sp());
        EXPECT(0xa4bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa4bb));
        // 0A 0116
        gbc.setState(0x8b36, 0x9330, 0x4c90, 0x9956, 0xf5a1, 0x946d, 0x0, 0x1);
        gbc.writeMem(0x8b36, { 0xa });
        gbc.writeMem(0x9956, { 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9330, gbc.sp());
        EXPECT(0x8b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8b36));
        EXPECT(0xb2, gbc.readMem(0x9956));
        // 0A 0118
        gbc.setState(0xe44c, 0xa98e, 0xed60, 0x597e, 0x6056, 0x1831, 0x1, 0x1);
        gbc.writeMem(0x597e, { 0x6e });
        gbc.writeMem(0xe44c, { 0xa });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa98e, gbc.sp());
        EXPECT(0xe44d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xe44c));
        // 0A 0119
        gbc.setState(0xc05f, 0x395b, 0xeb70, 0x22a7, 0xc04f, 0x326d, 0x0, 0x1);
        gbc.writeMem(0x22a7, { 0x62 });
        gbc.writeMem(0xc05f, { 0xa });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x395b, gbc.sp());
        EXPECT(0xc060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc05f));
        // 0A 011A
        gbc.setState(0xb09a, 0xa180, 0xc920, 0x3f85, 0xa013, 0xaf64, 0x1, 0x0);
        gbc.writeMem(0x3f85, { 0x64 });
        gbc.writeMem(0xb09a, { 0xa });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa180, gbc.sp());
        EXPECT(0xb09b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb09a));
        // 0A 011B
        gbc.setState(0x9db6, 0x7786, 0x40e0, 0x474f, 0xb6b6, 0xb8, 0x1, 0x0);
        gbc.writeMem(0x474f, { 0x92 });
        gbc.writeMem(0x9db6, { 0xa });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7786, gbc.sp());
        EXPECT(0x9db7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9db6));
        // 0A 011C
        gbc.setState(0x91bb, 0x9604, 0xcc60, 0x6f4c, 0x2182, 0xd00c, 0x0, 0x1);
        gbc.writeMem(0x6f4c, { 0x72 });
        gbc.writeMem(0x91bb, { 0xa });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9604, gbc.sp());
        EXPECT(0x91bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x91bb));
        // 0A 011D
        gbc.setState(0x5ff1, 0xfd48, 0xf230, 0x487, 0x473f, 0x981d, 0x1, 0x1);
        gbc.writeMem(0x487, { 0xec });
        gbc.writeMem(0x5ff1, { 0xa });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfd48, gbc.sp());
        EXPECT(0x5ff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 011E
        gbc.setState(0x8ef1, 0x824, 0x8980, 0x9c25, 0x10f4, 0x20c1, 0x1, 0x0);
        gbc.writeMem(0x8ef1, { 0xa });
        gbc.writeMem(0x9c25, { 0x8a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x824, gbc.sp());
        EXPECT(0x8ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8ef1));
        EXPECT(0x8a, gbc.readMem(0x9c25));
        // 0A 011F
        gbc.setState(0x2f2f, 0x6813, 0x7a90, 0x76f0, 0x3081, 0xb3e5, 0x0, 0x0);
        gbc.writeMem(0x2f2f, { 0xa });
        gbc.writeMem(0x76f0, { 0x4b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6813, gbc.sp());
        EXPECT(0x2f30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0120
        gbc.setState(0xa469, 0xe2f5, 0xff20, 0x5f2d, 0x4451, 0xced3, 0x1, 0x0);
        gbc.writeMem(0x5f2d, { 0x58 });
        gbc.writeMem(0xa469, { 0xa });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe2f5, gbc.sp());
        EXPECT(0xa46a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa469));
        // 0A 0121
        gbc.setState(0x4a2c, 0x9e9a, 0x10c0, 0xfc9, 0x658f, 0x51f0, 0x0, 0x0);
        gbc.writeMem(0xfc9, { 0x63 });
        gbc.writeMem(0x4a2c, { 0xa });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9e9a, gbc.sp());
        EXPECT(0x4a2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0122
        gbc.setState(0xe41c, 0xa6bd, 0x2980, 0xf62d, 0xe512, 0x2b30, 0x0, 0x1);
        gbc.writeMem(0xe41c, { 0xa });
        gbc.writeMem(0xf62d, { 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa6bd, gbc.sp());
        EXPECT(0xe41d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xe41c));
        EXPECT(0x94, gbc.readMem(0xf62d));
        // 0A 0123
        gbc.setState(0x69a8, 0x6214, 0xc260, 0xc822, 0x50dd, 0xab23, 0x1, 0x0);
        gbc.writeMem(0x69a8, { 0xa });
        gbc.writeMem(0xc822, { 0x34 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6214, gbc.sp());
        EXPECT(0x69a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xc822));
        // 0A 0124
        gbc.setState(0x1080, 0x844d, 0xacf0, 0x474, 0x70c3, 0xe63b, 0x0, 0x1);
        gbc.writeMem(0x474, { 0xf6 });
        gbc.writeMem(0x1080, { 0xa });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x844d, gbc.sp());
        EXPECT(0x1081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0125
        gbc.setState(0x60a2, 0x794b, 0x8460, 0x255a, 0x9974, 0x915e, 0x1, 0x0);
        gbc.writeMem(0x255a, { 0xb4 });
        gbc.writeMem(0x60a2, { 0xa });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x794b, gbc.sp());
        EXPECT(0x60a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0126
        gbc.setState(0xea0f, 0xa11, 0xdb30, 0x1c89, 0x6219, 0x23eb, 0x0, 0x1);
        gbc.writeMem(0x1c89, { 0x42 });
        gbc.writeMem(0xea0f, { 0xa });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa11, gbc.sp());
        EXPECT(0xea10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xea0f));
        // 0A 0127
        gbc.setState(0x458c, 0x2a07, 0x48e0, 0x50f5, 0x42a9, 0x3448, 0x1, 0x1);
        gbc.writeMem(0x458c, { 0xa });
        gbc.writeMem(0x50f5, { 0x84 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2a07, gbc.sp());
        EXPECT(0x458d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0128
        gbc.setState(0xd2d8, 0xadbc, 0xbd70, 0x87ab, 0xd2c4, 0x167b, 0x0, 0x1);
        gbc.writeMem(0x87ab, { 0xc5 });
        gbc.writeMem(0xd2d8, { 0xa });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xadbc, gbc.sp());
        EXPECT(0xd2d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x87ab));
        EXPECT(0xa, gbc.readMem(0xd2d8));
        // 0A 0129
        gbc.setState(0xc191, 0xc61a, 0x8180, 0x6d16, 0xa642, 0x5ac1, 0x0, 0x1);
        gbc.writeMem(0x6d16, { 0x9a });
        gbc.writeMem(0xc191, { 0xa });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc61a, gbc.sp());
        EXPECT(0xc192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc191));
        // 0A 012A
        gbc.setState(0x9d17, 0x556f, 0x31d0, 0x61ba, 0xe765, 0x470e, 0x0, 0x0);
        gbc.writeMem(0x61ba, { 0xeb });
        gbc.writeMem(0x9d17, { 0xa });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x556f, gbc.sp());
        EXPECT(0x9d18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9d17));
        // 0A 012B
        gbc.setState(0x1b96, 0x492f, 0x91f0, 0x4c17, 0xf5d8, 0x47ff, 0x1, 0x0);
        gbc.writeMem(0x1b96, { 0xa });
        gbc.writeMem(0x4c17, { 0x14 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x492f, gbc.sp());
        EXPECT(0x1b97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 012C
        gbc.setState(0xc32f, 0x5d1b, 0x6c80, 0x59f9, 0xabe1, 0x88b5, 0x1, 0x0);
        gbc.writeMem(0x59f9, { 0x5a });
        gbc.writeMem(0xc32f, { 0xa });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5d1b, gbc.sp());
        EXPECT(0xc330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc32f));
        // 0A 012D
        gbc.setState(0xd342, 0xb173, 0xcd20, 0xe348, 0xf612, 0xe8eb, 0x0, 0x0);
        gbc.writeMem(0xd342, { 0xa });
        gbc.writeMem(0xe348, { 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb173, gbc.sp());
        EXPECT(0xd343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd342));
        EXPECT(0xc0, gbc.readMem(0xe348));
        // 0A 012E
        gbc.setState(0x78c2, 0x34fb, 0x97e0, 0xc237, 0xb121, 0xd591, 0x1, 0x1);
        gbc.writeMem(0x78c2, { 0xa });
        gbc.writeMem(0xc237, { 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x34fb, gbc.sp());
        EXPECT(0x78c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc237));
        // 0A 012F
        gbc.setState(0xd26d, 0x4418, 0x5360, 0xc2b5, 0xb126, 0xe7e4, 0x0, 0x0);
        gbc.writeMem(0xc2b5, { 0x58 });
        gbc.writeMem(0xd26d, { 0xa });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4418, gbc.sp());
        EXPECT(0xd26e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc2b5));
        EXPECT(0xa, gbc.readMem(0xd26d));
        // 0A 0130
        gbc.setState(0xc1d9, 0xf889, 0x49f0, 0x8e46, 0x450f, 0x4337, 0x0, 0x1);
        gbc.writeMem(0x8e46, { 0x2d });
        gbc.writeMem(0xc1d9, { 0xa });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf889, gbc.sp());
        EXPECT(0xc1da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8e46));
        EXPECT(0xa, gbc.readMem(0xc1d9));
        // 0A 0131
        gbc.setState(0x8272, 0x223b, 0xcef0, 0xd7f, 0xea15, 0xb3f, 0x0, 0x1);
        gbc.writeMem(0xd7f, { 0xfc });
        gbc.writeMem(0x8272, { 0xa });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x223b, gbc.sp());
        EXPECT(0x8273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8272));
        // 0A 0132
        gbc.setState(0x871f, 0xbd4f, 0xe970, 0xd3fc, 0x8136, 0xc57d, 0x0, 0x0);
        gbc.writeMem(0x871f, { 0xa });
        gbc.writeMem(0xd3fc, { 0xa6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbd4f, gbc.sp());
        EXPECT(0x8720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x871f));
        EXPECT(0xa6, gbc.readMem(0xd3fc));
        // 0A 0133
        gbc.setState(0xd6b1, 0x82b2, 0x5460, 0xaa0c, 0xd5f0, 0x1c88, 0x1, 0x0);
        gbc.writeMem(0xaa0c, { 0xc8 });
        gbc.writeMem(0xd6b1, { 0xa });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x82b2, gbc.sp());
        EXPECT(0xd6b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xaa0c));
        EXPECT(0xa, gbc.readMem(0xd6b1));
        // 0A 0134
        gbc.setState(0xee92, 0xef12, 0x9c30, 0x22c5, 0x6239, 0x21d7, 0x0, 0x1);
        gbc.writeMem(0x22c5, { 0xce });
        gbc.writeMem(0xee92, { 0xa });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xef12, gbc.sp());
        EXPECT(0xee93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xee92));
        // 0A 0135
        gbc.setState(0xd162, 0xb62b, 0xc2a0, 0x6768, 0x2005, 0xd90a, 0x0, 0x0);
        gbc.writeMem(0x6768, { 0x59 });
        gbc.writeMem(0xd162, { 0xa });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb62b, gbc.sp());
        EXPECT(0xd163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd162));
        // 0A 0136
        gbc.setState(0x5662, 0x59bf, 0x1c0, 0x918f, 0x12aa, 0xca0d, 0x0, 0x1);
        gbc.writeMem(0x5662, { 0xa });
        gbc.writeMem(0x918f, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x59bf, gbc.sp());
        EXPECT(0x5663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x918f));
        // 0A 0137
        gbc.setState(0x8f7d, 0x7693, 0xb810, 0x413e, 0xa181, 0xc392, 0x1, 0x1);
        gbc.writeMem(0x413e, { 0x3 });
        gbc.writeMem(0x8f7d, { 0xa });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7693, gbc.sp());
        EXPECT(0x8f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8f7d));
        // 0A 0138
        gbc.setState(0x7718, 0xdde, 0x3050, 0xb93a, 0xe6e6, 0x1b03, 0x0, 0x0);
        gbc.writeMem(0x7718, { 0xa });
        gbc.writeMem(0xb93a, { 0xf3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdde, gbc.sp());
        EXPECT(0x7719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xb93a));
        // 0A 0139
        gbc.setState(0xe743, 0xba5, 0xb0a0, 0xffb, 0x4f10, 0x3551, 0x0, 0x0);
        gbc.writeMem(0xffb, { 0x26 });
        gbc.writeMem(0xe743, { 0xa });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xba5, gbc.sp());
        EXPECT(0xe744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xe743));
        // 0A 013A
        gbc.setState(0x188e, 0xda8e, 0x1ff0, 0x81c2, 0xe107, 0x55ef, 0x1, 0x1);
        gbc.writeMem(0x188e, { 0xa });
        gbc.writeMem(0x81c2, { 0xc6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xda8e, gbc.sp());
        EXPECT(0x188f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x81c2));
        // 0A 013B
        gbc.setState(0xed4, 0x4fc6, 0x1010, 0xa97c, 0x1296, 0x9a86, 0x0, 0x0);
        gbc.writeMem(0xed4, { 0xa });
        gbc.writeMem(0xa97c, { 0x6c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4fc6, gbc.sp());
        EXPECT(0xed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa97c));
        // 0A 013C
        gbc.setState(0x8b82, 0x6034, 0xf850, 0xa3e9, 0x8f9d, 0x7a4e, 0x0, 0x0);
        gbc.writeMem(0x8b82, { 0xa });
        gbc.writeMem(0xa3e9, { 0x93 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6034, gbc.sp());
        EXPECT(0x8b83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8b82));
        EXPECT(0x93, gbc.readMem(0xa3e9));
        // 0A 013D
        gbc.setState(0xb4bd, 0xa84, 0xbbe0, 0xd908, 0xd023, 0x1c61, 0x0, 0x0);
        gbc.writeMem(0xb4bd, { 0xa });
        gbc.writeMem(0xd908, { 0xd4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa84, gbc.sp());
        EXPECT(0xb4be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb4bd));
        EXPECT(0xd4, gbc.readMem(0xd908));
        // 0A 013E
        gbc.setState(0x3167, 0xfe65, 0x2390, 0x9e6b, 0x907b, 0x68b4, 0x0, 0x0);
        gbc.writeMem(0x3167, { 0xa });
        gbc.writeMem(0x9e6b, { 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfe65, gbc.sp());
        EXPECT(0x3168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x9e6b));
        // 0A 0140
        gbc.setState(0x9729, 0x68de, 0x5b80, 0x414d, 0x201a, 0xbe1, 0x0, 0x0);
        gbc.writeMem(0x414d, { 0xf1 });
        gbc.writeMem(0x9729, { 0xa });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x68de, gbc.sp());
        EXPECT(0x972a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9729));
        // 0A 0141
        gbc.setState(0x3188, 0xcb3f, 0xba10, 0x4141, 0xb5d0, 0x65d0, 0x1, 0x1);
        gbc.writeMem(0x3188, { 0xa });
        gbc.writeMem(0x4141, { 0x4f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcb3f, gbc.sp());
        EXPECT(0x3189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0142
        gbc.setState(0x4434, 0x5bdd, 0x7130, 0xbe74, 0x6e1d, 0xed03, 0x1, 0x0);
        gbc.writeMem(0x4434, { 0xa });
        gbc.writeMem(0xbe74, { 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5bdd, gbc.sp());
        EXPECT(0x4435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xbe74));
        // 0A 0143
        gbc.setState(0x264f, 0x5e44, 0x8730, 0x83de, 0xcbe7, 0x2ee5, 0x1, 0x1);
        gbc.writeMem(0x264f, { 0xa });
        gbc.writeMem(0x83de, { 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5e44, gbc.sp());
        EXPECT(0x2650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x83de));
        // 0A 0144
        gbc.setState(0x4c60, 0xc661, 0x83b0, 0x2f59, 0x6fcb, 0x7c45, 0x1, 0x1);
        gbc.writeMem(0x2f59, { 0x2b });
        gbc.writeMem(0x4c60, { 0xa });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc661, gbc.sp());
        EXPECT(0x4c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0145
        gbc.setState(0x1a48, 0xd489, 0x9930, 0xa382, 0xc8de, 0x5b2f, 0x0, 0x1);
        gbc.writeMem(0x1a48, { 0xa });
        gbc.writeMem(0xa382, { 0xd9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd489, gbc.sp());
        EXPECT(0x1a49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa382));
        // 0A 0146
        gbc.setState(0xbfee, 0xfd1c, 0x1740, 0xdd4d, 0x4161, 0xe8d1, 0x0, 0x0);
        gbc.writeMem(0xbfee, { 0xa });
        gbc.writeMem(0xdd4d, { 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xfd1c, gbc.sp());
        EXPECT(0xbfef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xbfee));
        EXPECT(0x4, gbc.readMem(0xdd4d));
        // 0A 0147
        gbc.setState(0x469e, 0x22bb, 0xd560, 0xa993, 0x6af3, 0x1ddd, 0x0, 0x0);
        gbc.writeMem(0x469e, { 0xa });
        gbc.writeMem(0xa993, { 0xc9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x22bb, gbc.sp());
        EXPECT(0x469f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa993));
        // 0A 0148
        gbc.setState(0x1724, 0x1e4b, 0xfce0, 0x6316, 0x5e4, 0xe00a, 0x0, 0x0);
        gbc.writeMem(0x1724, { 0xa });
        gbc.writeMem(0x6316, { 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1e4b, gbc.sp());
        EXPECT(0x1725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0149
        gbc.setState(0x5372, 0x85b4, 0x9470, 0x9220, 0x8a54, 0x80fd, 0x1, 0x1);
        gbc.writeMem(0x5372, { 0xa });
        gbc.writeMem(0x9220, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x85b4, gbc.sp());
        EXPECT(0x5373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x9220));
        // 0A 014A
        gbc.setState(0x7895, 0xa367, 0xd360, 0x7929, 0xe9e7, 0x2f48, 0x0, 0x1);
        gbc.writeMem(0x7895, { 0xa });
        gbc.writeMem(0x7929, { 0x41 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa367, gbc.sp());
        EXPECT(0x7896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 014B
        gbc.setState(0x86bd, 0x7bc9, 0xa430, 0x7926, 0x353, 0x161a, 0x1, 0x0);
        gbc.writeMem(0x7926, { 0xaa });
        gbc.writeMem(0x86bd, { 0xa });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7bc9, gbc.sp());
        EXPECT(0x86be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x86bd));
        // 0A 014C
        gbc.setState(0x1e9e, 0xcb97, 0x9480, 0xadbd, 0x7e2a, 0xe10a, 0x1, 0x1);
        gbc.writeMem(0x1e9e, { 0xa });
        gbc.writeMem(0xadbd, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcb97, gbc.sp());
        EXPECT(0x1e9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xadbd));
        // 0A 014D
        gbc.setState(0x6c87, 0x96ad, 0xdaa0, 0x3f2, 0x7618, 0x3a59, 0x0, 0x1);
        gbc.writeMem(0x3f2, { 0x77 });
        gbc.writeMem(0x6c87, { 0xa });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x96ad, gbc.sp());
        EXPECT(0x6c88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 014E
        gbc.setState(0x5586, 0xfb7c, 0x6c00, 0xe73d, 0xa1d2, 0x525, 0x1, 0x0);
        gbc.writeMem(0x5586, { 0xa });
        gbc.writeMem(0xe73d, { 0x36 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xfb7c, gbc.sp());
        EXPECT(0x5587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xe73d));
        // 0A 0150
        gbc.setState(0xc771, 0x65e5, 0xe300, 0xb2ee, 0xf644, 0x9fae, 0x1, 0x1);
        gbc.writeMem(0xb2ee, { 0xce });
        gbc.writeMem(0xc771, { 0xa });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x65e5, gbc.sp());
        EXPECT(0xc772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xb2ee));
        EXPECT(0xa, gbc.readMem(0xc771));
        // 0A 0151
        gbc.setState(0xc229, 0x3d23, 0xacf0, 0x856f, 0x22d, 0x4013, 0x0, 0x0);
        gbc.writeMem(0x856f, { 0x68 });
        gbc.writeMem(0xc229, { 0xa });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3d23, gbc.sp());
        EXPECT(0xc22a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x856f));
        EXPECT(0xa, gbc.readMem(0xc229));
        // 0A 0152
        gbc.setState(0x5cab, 0xb0ed, 0x2930, 0xb3d1, 0x9dba, 0xf16f, 0x1, 0x0);
        gbc.writeMem(0x5cab, { 0xa });
        gbc.writeMem(0xb3d1, { 0xa3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb0ed, gbc.sp());
        EXPECT(0x5cac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb3d1));
        // 0A 0153
        gbc.setState(0x1371, 0x19d7, 0x3390, 0x7af8, 0x8c1e, 0xb37, 0x0, 0x1);
        gbc.writeMem(0x1371, { 0xa });
        gbc.writeMem(0x7af8, { 0x8d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x19d7, gbc.sp());
        EXPECT(0x1372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0154
        gbc.setState(0x588d, 0x6635, 0x4520, 0x6e32, 0x58c2, 0xebe9, 0x1, 0x0);
        gbc.writeMem(0x588d, { 0xa });
        gbc.writeMem(0x6e32, { 0x5b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6635, gbc.sp());
        EXPECT(0x588e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0155
        gbc.setState(0x6e59, 0x88e4, 0x36d0, 0x18a5, 0x4796, 0x9d3e, 0x0, 0x0);
        gbc.writeMem(0x18a5, { 0xf4 });
        gbc.writeMem(0x6e59, { 0xa });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x88e4, gbc.sp());
        EXPECT(0x6e5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0156
        gbc.setState(0x7013, 0xf5db, 0x3320, 0x3be7, 0xcccc, 0x4367, 0x1, 0x1);
        gbc.writeMem(0x3be7, { 0xe3 });
        gbc.writeMem(0x7013, { 0xa });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf5db, gbc.sp());
        EXPECT(0x7014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0157
        gbc.setState(0x5dab, 0xcfe6, 0x53b0, 0xd66d, 0xe380, 0x8902, 0x0, 0x0);
        gbc.writeMem(0x5dab, { 0xa });
        gbc.writeMem(0xd66d, { 0x57 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcfe6, gbc.sp());
        EXPECT(0x5dac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd66d));
        // 0A 0158
        gbc.setState(0x71dd, 0xf2ff, 0xb300, 0xfccb, 0xf860, 0x4d04, 0x0, 0x1);
        gbc.writeMem(0x71dd, { 0xa });
        gbc.writeMem(0xfccb, { 0xf2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf2ff, gbc.sp());
        EXPECT(0x71de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xfccb));
        // 0A 0159
        gbc.setState(0xcb25, 0x90c3, 0x7350, 0x6d76, 0xe877, 0x7e70, 0x1, 0x1);
        gbc.writeMem(0x6d76, { 0xbf });
        gbc.writeMem(0xcb25, { 0xa });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x90c3, gbc.sp());
        EXPECT(0xcb26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xcb25));
        // 0A 015A
        gbc.setState(0x6d28, 0x2554, 0x6080, 0x5ba9, 0x6cd, 0xd7c9, 0x0, 0x0);
        gbc.writeMem(0x5ba9, { 0x66 });
        gbc.writeMem(0x6d28, { 0xa });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2554, gbc.sp());
        EXPECT(0x6d29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 015B
        gbc.setState(0x6c88, 0x18d5, 0x6c50, 0x5d44, 0xef3, 0xd92e, 0x0, 0x1);
        gbc.writeMem(0x5d44, { 0x95 });
        gbc.writeMem(0x6c88, { 0xa });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x18d5, gbc.sp());
        EXPECT(0x6c89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 015C
        gbc.setState(0x4616, 0xcbee, 0x6ad0, 0xe4ca, 0x3e9e, 0x9d45, 0x1, 0x0);
        gbc.writeMem(0x4616, { 0xa });
        gbc.writeMem(0xe4ca, { 0x32 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xcbee, gbc.sp());
        EXPECT(0x4617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xe4ca));
        // 0A 015D
        gbc.setState(0x9169, 0xfb6f, 0x4770, 0x7c31, 0xaca, 0xcb16, 0x0, 0x0);
        gbc.writeMem(0x7c31, { 0x71 });
        gbc.writeMem(0x9169, { 0xa });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xfb6f, gbc.sp());
        EXPECT(0x916a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9169));
        // 0A 015E
        gbc.setState(0x5338, 0xeef9, 0x6a30, 0x5b58, 0x3333, 0xa293, 0x1, 0x0);
        gbc.writeMem(0x5338, { 0xa });
        gbc.writeMem(0x5b58, { 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xeef9, gbc.sp());
        EXPECT(0x5339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 015F
        gbc.setState(0xd7d3, 0x89d1, 0xd840, 0x9797, 0x7669, 0x1064, 0x0, 0x1);
        gbc.writeMem(0x9797, { 0x64 });
        gbc.writeMem(0xd7d3, { 0xa });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x89d1, gbc.sp());
        EXPECT(0xd7d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9797));
        EXPECT(0xa, gbc.readMem(0xd7d3));
        // 0A 0160
        gbc.setState(0xecf9, 0x8842, 0x39d0, 0xdb4c, 0x3b79, 0x490d, 0x1, 0x1);
        gbc.writeMem(0xdb4c, { 0xde });
        gbc.writeMem(0xecf9, { 0xa });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8842, gbc.sp());
        EXPECT(0xecfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xdb4c));
        EXPECT(0xa, gbc.readMem(0xecf9));
        // 0A 0161
        gbc.setState(0x9f54, 0xfb51, 0x44b0, 0x2334, 0x77eb, 0x58c2, 0x1, 0x1);
        gbc.writeMem(0x2334, { 0xcd });
        gbc.writeMem(0x9f54, { 0xa });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xfb51, gbc.sp());
        EXPECT(0x9f55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9f54));
        // 0A 0162
        gbc.setState(0xa81f, 0x2fce, 0x4140, 0x87c0, 0x2d56, 0xd95, 0x0, 0x1);
        gbc.writeMem(0x87c0, { 0xd4 });
        gbc.writeMem(0xa81f, { 0xa });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2fce, gbc.sp());
        EXPECT(0xa820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x87c0));
        EXPECT(0xa, gbc.readMem(0xa81f));
        // 0A 0163
        gbc.setState(0x35d3, 0x94c6, 0x6cc0, 0x7881, 0x16a3, 0xde3d, 0x0, 0x0);
        gbc.writeMem(0x35d3, { 0xa });
        gbc.writeMem(0x7881, { 0x73 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x94c6, gbc.sp());
        EXPECT(0x35d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0164
        gbc.setState(0xe713, 0x7531, 0x20, 0xe4fd, 0x2994, 0x12ee, 0x0, 0x1);
        gbc.writeMem(0xe4fd, { 0x9f });
        gbc.writeMem(0xe713, { 0xa });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7531, gbc.sp());
        EXPECT(0xe714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe4fd));
        EXPECT(0xa, gbc.readMem(0xe713));
        // 0A 0165
        gbc.setState(0x8144, 0x7aaa, 0x9220, 0x4b9d, 0xab7d, 0xdfab, 0x1, 0x1);
        gbc.writeMem(0x4b9d, { 0x23 });
        gbc.writeMem(0x8144, { 0xa });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7aaa, gbc.sp());
        EXPECT(0x8145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8144));
        // 0A 0166
        gbc.setState(0x5caa, 0x93a2, 0xd3b0, 0x428e, 0x2f54, 0x8eb, 0x0, 0x0);
        gbc.writeMem(0x428e, { 0xe0 });
        gbc.writeMem(0x5caa, { 0xa });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x93a2, gbc.sp());
        EXPECT(0x5cab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0167
        gbc.setState(0xb649, 0xa98f, 0xce30, 0xb9fc, 0x4694, 0x2f1a, 0x1, 0x1);
        gbc.writeMem(0xb649, { 0xa });
        gbc.writeMem(0xb9fc, { 0xf0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa98f, gbc.sp());
        EXPECT(0xb64a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb649));
        EXPECT(0xf0, gbc.readMem(0xb9fc));
        // 0A 0168
        gbc.setState(0xe60c, 0xdbe1, 0xde80, 0xa3d8, 0x78e8, 0x43a, 0x0, 0x1);
        gbc.writeMem(0xa3d8, { 0x18 });
        gbc.writeMem(0xe60c, { 0xa });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdbe1, gbc.sp());
        EXPECT(0xe60d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xa3d8));
        EXPECT(0xa, gbc.readMem(0xe60c));
        // 0A 016A
        gbc.setState(0x20d2, 0x2cec, 0xadf0, 0x70cc, 0x2c78, 0x4136, 0x0, 0x1);
        gbc.writeMem(0x20d2, { 0xa });
        gbc.writeMem(0x70cc, { 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2cec, gbc.sp());
        EXPECT(0x20d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 016B
        gbc.setState(0x1ec3, 0x833a, 0x4bd0, 0xad0d, 0x2fb2, 0x3668, 0x1, 0x0);
        gbc.writeMem(0x1ec3, { 0xa });
        gbc.writeMem(0xad0d, { 0xb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x833a, gbc.sp());
        EXPECT(0x1ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xad0d));
        // 0A 016C
        gbc.setState(0x62dd, 0x924e, 0x310, 0xdaa1, 0x7de0, 0x6dd5, 0x1, 0x1);
        gbc.writeMem(0x62dd, { 0xa });
        gbc.writeMem(0xdaa1, { 0x68 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x924e, gbc.sp());
        EXPECT(0x62de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xdaa1));
        // 0A 016D
        gbc.setState(0x3b51, 0xc425, 0x1240, 0x5b14, 0x15df, 0x238c, 0x0, 0x1);
        gbc.writeMem(0x3b51, { 0xa });
        gbc.writeMem(0x5b14, { 0x38 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc425, gbc.sp());
        EXPECT(0x3b52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 016E
        gbc.setState(0xcfe5, 0x2b73, 0xcb00, 0x20c2, 0x6fde, 0x4c85, 0x0, 0x0);
        gbc.writeMem(0x20c2, { 0x4 });
        gbc.writeMem(0xcfe5, { 0xa });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2b73, gbc.sp());
        EXPECT(0xcfe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xcfe5));
        // 0A 016F
        gbc.setState(0xd397, 0xe7eb, 0xe0a0, 0x3dc1, 0x1fce, 0x48f7, 0x0, 0x1);
        gbc.writeMem(0x3dc1, { 0xc7 });
        gbc.writeMem(0xd397, { 0xa });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe7eb, gbc.sp());
        EXPECT(0xd398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd397));
        // 0A 0170
        gbc.setState(0x679a, 0x72cb, 0x5150, 0x79af, 0x548c, 0x1658, 0x0, 0x0);
        gbc.writeMem(0x679a, { 0xa });
        gbc.writeMem(0x79af, { 0x60 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x72cb, gbc.sp());
        EXPECT(0x679b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0171
        gbc.setState(0xe247, 0xc95c, 0x5b90, 0x8f15, 0x93b6, 0x5f84, 0x0, 0x0);
        gbc.writeMem(0x8f15, { 0x16 });
        gbc.writeMem(0xe247, { 0xa });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc95c, gbc.sp());
        EXPECT(0xe248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8f15));
        EXPECT(0xa, gbc.readMem(0xe247));
        // 0A 0172
        gbc.setState(0xc9e3, 0xd079, 0x5200, 0xba1b, 0x2525, 0xc3b4, 0x0, 0x1);
        gbc.writeMem(0xba1b, { 0xda });
        gbc.writeMem(0xc9e3, { 0xa });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd079, gbc.sp());
        EXPECT(0xc9e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xba1b));
        EXPECT(0xa, gbc.readMem(0xc9e3));
        // 0A 0173
        gbc.setState(0x8f48, 0x9b65, 0xfbf0, 0xcae1, 0xdb92, 0xe70b, 0x0, 0x0);
        gbc.writeMem(0x8f48, { 0xa });
        gbc.writeMem(0xcae1, { 0xbc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9b65, gbc.sp());
        EXPECT(0x8f49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8f48));
        EXPECT(0xbc, gbc.readMem(0xcae1));
        // 0A 0174
        gbc.setState(0x294f, 0x6490, 0x2bf0, 0x15c6, 0x49a, 0x366b, 0x0, 0x1);
        gbc.writeMem(0x15c6, { 0x50 });
        gbc.writeMem(0x294f, { 0xa });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6490, gbc.sp());
        EXPECT(0x2950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0175
        gbc.setState(0xb4c9, 0x2593, 0x19b0, 0xe6bd, 0x3323, 0x5972, 0x0, 0x1);
        gbc.writeMem(0xb4c9, { 0xa });
        gbc.writeMem(0xe6bd, { 0xfd });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2593, gbc.sp());
        EXPECT(0xb4ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb4c9));
        EXPECT(0xfd, gbc.readMem(0xe6bd));
        // 0A 0176
        gbc.setState(0x5788, 0x32dc, 0xb7c0, 0xfac2, 0xd867, 0x899f, 0x0, 0x0);
        gbc.writeMem(0x5788, { 0xa });
        gbc.writeMem(0xfac2, { 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x32dc, gbc.sp());
        EXPECT(0x5789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xfac2));
        // 0A 0177
        gbc.setState(0x5b3b, 0x3a28, 0xb530, 0x7385, 0x8cd4, 0xfe4, 0x1, 0x0);
        gbc.writeMem(0x5b3b, { 0xa });
        gbc.writeMem(0x7385, { 0x8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3a28, gbc.sp());
        EXPECT(0x5b3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0178
        gbc.setState(0xc9d3, 0x35d4, 0xfe10, 0xe93e, 0x2a9e, 0x3670, 0x1, 0x0);
        gbc.writeMem(0xc9d3, { 0xa });
        gbc.writeMem(0xe93e, { 0x15 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x35d4, gbc.sp());
        EXPECT(0xc9d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc9d3));
        EXPECT(0x15, gbc.readMem(0xe93e));
        // 0A 0179
        gbc.setState(0x381b, 0x11de, 0x9560, 0xe102, 0xf06a, 0x505, 0x1, 0x0);
        gbc.writeMem(0x381b, { 0xa });
        gbc.writeMem(0xe102, { 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x11de, gbc.sp());
        EXPECT(0x381c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe102));
        // 0A 017A
        gbc.setState(0xb59a, 0x2a5, 0xfc90, 0xeafc, 0xc054, 0x7f4, 0x0, 0x1);
        gbc.writeMem(0xb59a, { 0xa });
        gbc.writeMem(0xeafc, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2a5, gbc.sp());
        EXPECT(0xb59b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb59a));
        EXPECT(0x98, gbc.readMem(0xeafc));
        // 0A 017B
        gbc.setState(0x16d3, 0x9a6d, 0xd090, 0xc4ee, 0xc8ab, 0x930c, 0x1, 0x0);
        gbc.writeMem(0x16d3, { 0xa });
        gbc.writeMem(0xc4ee, { 0x71 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9a6d, gbc.sp());
        EXPECT(0x16d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xc4ee));
        // 0A 017C
        gbc.setState(0xadf2, 0xb600, 0x67c0, 0x7a04, 0xe5be, 0xeed2, 0x1, 0x0);
        gbc.writeMem(0x7a04, { 0x52 });
        gbc.writeMem(0xadf2, { 0xa });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb600, gbc.sp());
        EXPECT(0xadf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xadf2));
        // 0A 017D
        gbc.setState(0xcd7e, 0x784f, 0xb070, 0xcf05, 0x5dcb, 0xee3b, 0x1, 0x1);
        gbc.writeMem(0xcd7e, { 0xa });
        gbc.writeMem(0xcf05, { 0xe9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x784f, gbc.sp());
        EXPECT(0xcd7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xcd7e));
        EXPECT(0xe9, gbc.readMem(0xcf05));
        // 0A 017E
        gbc.setState(0x5661, 0x19b8, 0x560, 0x42bb, 0xb791, 0x2c0f, 0x0, 0x0);
        gbc.writeMem(0x42bb, { 0x85 });
        gbc.writeMem(0x5661, { 0xa });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x19b8, gbc.sp());
        EXPECT(0x5662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 017F
        gbc.setState(0x7d7, 0xa1dc, 0x1dd0, 0xb9e0, 0xc32b, 0x1048, 0x1, 0x1);
        gbc.writeMem(0x7d7, { 0xa });
        gbc.writeMem(0xb9e0, { 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa1dc, gbc.sp());
        EXPECT(0x7d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb9e0));
        // 0A 0180
        gbc.setState(0x9c70, 0xc2cc, 0xa2f0, 0x76e6, 0xd8fb, 0xccd8, 0x1, 0x1);
        gbc.writeMem(0x76e6, { 0x99 });
        gbc.writeMem(0x9c70, { 0xa });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc2cc, gbc.sp());
        EXPECT(0x9c71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9c70));
        // 0A 0182
        gbc.setState(0xc738, 0xe578, 0x6030, 0xec94, 0x934e, 0x422f, 0x0, 0x0);
        gbc.writeMem(0xc738, { 0xa });
        gbc.writeMem(0xec94, { 0x84 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe578, gbc.sp());
        EXPECT(0xc739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc738));
        EXPECT(0x84, gbc.readMem(0xec94));
        // 0A 0183
        gbc.setState(0xed1, 0xf5e5, 0x3780, 0x3e77, 0x96ed, 0x3c2f, 0x1, 0x1);
        gbc.writeMem(0xed1, { 0xa });
        gbc.writeMem(0x3e77, { 0xca });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf5e5, gbc.sp());
        EXPECT(0xed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0184
        gbc.setState(0x6e7, 0x4e5d, 0xd60, 0xd6a3, 0x3084, 0xd175, 0x0, 0x0);
        gbc.writeMem(0x6e7, { 0xa });
        gbc.writeMem(0xd6a3, { 0x6f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4e5d, gbc.sp());
        EXPECT(0x6e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xd6a3));
        // 0A 0186
        gbc.setState(0xc82, 0xdef3, 0x4cc0, 0xd26f, 0x7d87, 0xaaaf, 0x1, 0x0);
        gbc.writeMem(0xc82, { 0xa });
        gbc.writeMem(0xd26f, { 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xdef3, gbc.sp());
        EXPECT(0xc83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xd26f));
        // 0A 0187
        gbc.setState(0x7424, 0x39bf, 0xbff0, 0x119e, 0x363b, 0xfb0f, 0x0, 0x1);
        gbc.writeMem(0x119e, { 0x3 });
        gbc.writeMem(0x7424, { 0xa });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x39bf, gbc.sp());
        EXPECT(0x7425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0188
        gbc.setState(0x8677, 0xfdb0, 0x43f0, 0x49c6, 0xdb8f, 0x236d, 0x0, 0x0);
        gbc.writeMem(0x49c6, { 0xa });
        gbc.writeMem(0x8677, { 0xa });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfdb0, gbc.sp());
        EXPECT(0x8678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8677));
        // 0A 0189
        gbc.setState(0x15b4, 0x786c, 0x77d0, 0xe2d5, 0x7e79, 0x4edd, 0x1, 0x0);
        gbc.writeMem(0x15b4, { 0xa });
        gbc.writeMem(0xe2d5, { 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x786c, gbc.sp());
        EXPECT(0x15b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe2d5));
        // 0A 018A
        gbc.setState(0xced1, 0xc5f7, 0xe0, 0x6648, 0x156a, 0x7f79, 0x1, 0x0);
        gbc.writeMem(0x6648, { 0xd1 });
        gbc.writeMem(0xced1, { 0xa });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc5f7, gbc.sp());
        EXPECT(0xced2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xced1));
        // 0A 018B
        gbc.setState(0x1947, 0x5df, 0x5ac0, 0x7d9c, 0x4d3a, 0x238, 0x1, 0x0);
        gbc.writeMem(0x1947, { 0xa });
        gbc.writeMem(0x7d9c, { 0x71 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5df, gbc.sp());
        EXPECT(0x1948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 018C
        gbc.setState(0xc912, 0x7df6, 0x6280, 0xbdf9, 0x44f4, 0xf40f, 0x0, 0x1);
        gbc.writeMem(0xbdf9, { 0xb });
        gbc.writeMem(0xc912, { 0xa });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7df6, gbc.sp());
        EXPECT(0xc913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xbdf9));
        EXPECT(0xa, gbc.readMem(0xc912));
        // 0A 018D
        gbc.setState(0xdc81, 0x7c4c, 0x3e50, 0x2e68, 0xecc4, 0xb2b5, 0x0, 0x1);
        gbc.writeMem(0x2e68, { 0xf2 });
        gbc.writeMem(0xdc81, { 0xa });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7c4c, gbc.sp());
        EXPECT(0xdc82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xdc81));
        // 0A 018E
        gbc.setState(0x9314, 0xf0b0, 0x7220, 0xa56a, 0x99fb, 0x7b90, 0x1, 0x0);
        gbc.writeMem(0x9314, { 0xa });
        gbc.writeMem(0xa56a, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf0b0, gbc.sp());
        EXPECT(0x9315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9314));
        EXPECT(0x98, gbc.readMem(0xa56a));
        // 0A 018F
        gbc.setState(0x7acf, 0x73c6, 0x14d0, 0x95a2, 0xc282, 0xeedb, 0x1, 0x0);
        gbc.writeMem(0x7acf, { 0xa });
        gbc.writeMem(0x95a2, { 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x73c6, gbc.sp());
        EXPECT(0x7ad0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x95a2));
        // 0A 0190
        gbc.setState(0x15b5, 0xbc7, 0xc040, 0xe864, 0xdc5, 0x28ef, 0x1, 0x0);
        gbc.writeMem(0x15b5, { 0xa });
        gbc.writeMem(0xe864, { 0xbd });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xbc7, gbc.sp());
        EXPECT(0x15b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe864));
        // 0A 0191
        gbc.setState(0x5e6d, 0xda76, 0xbb10, 0x6f38, 0x348d, 0x2007, 0x0, 0x0);
        gbc.writeMem(0x5e6d, { 0xa });
        gbc.writeMem(0x6f38, { 0x8b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xda76, gbc.sp());
        EXPECT(0x5e6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0192
        gbc.setState(0xc11c, 0x1e5a, 0xd850, 0xee5b, 0xb2cd, 0x97da, 0x1, 0x1);
        gbc.writeMem(0xc11c, { 0xa });
        gbc.writeMem(0xee5b, { 0x9f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1e5a, gbc.sp());
        EXPECT(0xc11d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc11c));
        EXPECT(0x9f, gbc.readMem(0xee5b));
        // 0A 0193
        gbc.setState(0x1230, 0x2506, 0xcb40, 0x7293, 0xbfac, 0x939b, 0x1, 0x0);
        gbc.writeMem(0x1230, { 0xa });
        gbc.writeMem(0x7293, { 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2506, gbc.sp());
        EXPECT(0x1231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0194
        gbc.setState(0xcbf8, 0x8d4b, 0x25b0, 0xe13d, 0x3725, 0x588c, 0x1, 0x0);
        gbc.writeMem(0xcbf8, { 0xa });
        gbc.writeMem(0xe13d, { 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8d4b, gbc.sp());
        EXPECT(0xcbf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xcbf8));
        EXPECT(0x8c, gbc.readMem(0xe13d));
        // 0A 0195
        gbc.setState(0xd7b3, 0x3bec, 0xc090, 0x71b0, 0xd7bd, 0x3ed0, 0x0, 0x0);
        gbc.writeMem(0x71b0, { 0x1b });
        gbc.writeMem(0xd7b3, { 0xa });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3bec, gbc.sp());
        EXPECT(0xd7b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd7b3));
        // 0A 0197
        gbc.setState(0xe0ab, 0x4cf0, 0x10b0, 0x65dd, 0xb2ec, 0x3aa, 0x1, 0x0);
        gbc.writeMem(0x65dd, { 0xaf });
        gbc.writeMem(0xe0ab, { 0xa });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4cf0, gbc.sp());
        EXPECT(0xe0ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xe0ab));
        // 0A 0198
        gbc.setState(0xc497, 0x9e35, 0x4dc0, 0x24b9, 0xe403, 0xab75, 0x0, 0x0);
        gbc.writeMem(0x24b9, { 0x52 });
        gbc.writeMem(0xc497, { 0xa });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9e35, gbc.sp());
        EXPECT(0xc498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc497));
        // 0A 0199
        gbc.setState(0xb03b, 0xf5a0, 0xada0, 0x6999, 0xf747, 0x29d8, 0x0, 0x0);
        gbc.writeMem(0x6999, { 0x53 });
        gbc.writeMem(0xb03b, { 0xa });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf5a0, gbc.sp());
        EXPECT(0xb03c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb03b));
        // 0A 019A
        gbc.setState(0xa2ff, 0xcc89, 0xcd50, 0x6a29, 0xb83, 0x7f9b, 0x0, 0x1);
        gbc.writeMem(0x6a29, { 0x8f });
        gbc.writeMem(0xa2ff, { 0xa });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcc89, gbc.sp());
        EXPECT(0xa300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa2ff));
        // 0A 019B
        gbc.setState(0x4457, 0xba32, 0x1c90, 0x50d, 0xd8af, 0xf0c0, 0x0, 0x0);
        gbc.writeMem(0x50d, { 0xad });
        gbc.writeMem(0x4457, { 0xa });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xba32, gbc.sp());
        EXPECT(0x4458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 019C
        gbc.setState(0x1dc3, 0x2e79, 0x21a0, 0x2d51, 0x33ec, 0xe21c, 0x0, 0x0);
        gbc.writeMem(0x1dc3, { 0xa });
        gbc.writeMem(0x2d51, { 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2e79, gbc.sp());
        EXPECT(0x1dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 019D
        gbc.setState(0x524f, 0xbfb, 0x6e40, 0x5f5b, 0x7de7, 0x8daa, 0x1, 0x1);
        gbc.writeMem(0x524f, { 0xa });
        gbc.writeMem(0x5f5b, { 0x5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbfb, gbc.sp());
        EXPECT(0x5250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 019E
        gbc.setState(0x3d1d, 0xf34e, 0xb360, 0x4552, 0xb3a3, 0x2713, 0x0, 0x1);
        gbc.writeMem(0x3d1d, { 0xa });
        gbc.writeMem(0x4552, { 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf34e, gbc.sp());
        EXPECT(0x3d1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 01A0
        gbc.setState(0x6ad5, 0x7927, 0x5080, 0x99ef, 0xbc6b, 0x550c, 0x0, 0x1);
        gbc.writeMem(0x6ad5, { 0xa });
        gbc.writeMem(0x99ef, { 0x2e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7927, gbc.sp());
        EXPECT(0x6ad6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x99ef));
        // 0A 01A1
        gbc.setState(0x6d07, 0xd8a, 0x8740, 0xa3c4, 0x9a70, 0x83a7, 0x0, 0x1);
        gbc.writeMem(0x6d07, { 0xa });
        gbc.writeMem(0xa3c4, { 0x61 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd8a, gbc.sp());
        EXPECT(0x6d08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa3c4));
        // 0A 01A2
        gbc.setState(0x2d1b, 0xb0e9, 0xf250, 0x730e, 0xb3a1, 0x5a5b, 0x1, 0x1);
        gbc.writeMem(0x2d1b, { 0xa });
        gbc.writeMem(0x730e, { 0xd6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb0e9, gbc.sp());
        EXPECT(0x2d1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 01A3
        gbc.setState(0xe8d2, 0xf9dc, 0xa2d0, 0x1400, 0x338c, 0x5651, 0x1, 0x0);
        gbc.writeMem(0x1400, { 0xe9 });
        gbc.writeMem(0xe8d2, { 0xa });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf9dc, gbc.sp());
        EXPECT(0xe8d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xe8d2));
        // 0A 01A4
        gbc.setState(0x67dd, 0x90be, 0xfbe0, 0xac70, 0x151f, 0x9b11, 0x1, 0x1);
        gbc.writeMem(0x67dd, { 0xa });
        gbc.writeMem(0xac70, { 0xbd });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x90be, gbc.sp());
        EXPECT(0x67de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xac70));
        // 0A 01A5
        gbc.setState(0x3bb3, 0x6a7e, 0xe4e0, 0xefd8, 0x6e9a, 0x7a72, 0x0, 0x0);
        gbc.writeMem(0x3bb3, { 0xa });
        gbc.writeMem(0xefd8, { 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6a7e, gbc.sp());
        EXPECT(0x3bb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xefd8));
        // 0A 01A6
        gbc.setState(0xa96e, 0x91b4, 0x3d10, 0xfd69, 0x538, 0x9654, 0x0, 0x0);
        gbc.writeMem(0xa96e, { 0xa });
        gbc.writeMem(0xfd69, { 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x91b4, gbc.sp());
        EXPECT(0xa96f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa96e));
        EXPECT(0xcc, gbc.readMem(0xfd69));
        // 0A 01A7
        gbc.setState(0xbbdc, 0xf554, 0xd150, 0xc9d6, 0x9f13, 0x9b11, 0x1, 0x0);
        gbc.writeMem(0xbbdc, { 0xa });
        gbc.writeMem(0xc9d6, { 0xa });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf554, gbc.sp());
        EXPECT(0xbbdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xbbdc));
        EXPECT(0xa, gbc.readMem(0xc9d6));
        // 0A 01A8
        gbc.setState(0x7ee0, 0xeebc, 0xa4c0, 0xc80a, 0x385c, 0xa0ea, 0x1, 0x1);
        gbc.writeMem(0x7ee0, { 0xa });
        gbc.writeMem(0xc80a, { 0x8a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xeebc, gbc.sp());
        EXPECT(0x7ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc80a));
        // 0A 01A9
        gbc.setState(0xcf05, 0x42fd, 0x8d30, 0x527b, 0x2368, 0xaec3, 0x0, 0x1);
        gbc.writeMem(0x527b, { 0xec });
        gbc.writeMem(0xcf05, { 0xa });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x42fd, gbc.sp());
        EXPECT(0xcf06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xcf05));
        // 0A 01AA
        gbc.setState(0xd009, 0x7d43, 0x9d70, 0x2430, 0x1014, 0x6feb, 0x1, 0x1);
        gbc.writeMem(0x2430, { 0x32 });
        gbc.writeMem(0xd009, { 0xa });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7d43, gbc.sp());
        EXPECT(0xd00a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd009));
        // 0A 01AB
        gbc.setState(0x1736, 0x967a, 0xf070, 0x498e, 0x4888, 0x873a, 0x1, 0x0);
        gbc.writeMem(0x1736, { 0xa });
        gbc.writeMem(0x498e, { 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x967a, gbc.sp());
        EXPECT(0x1737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 01AC
        gbc.setState(0x46dc, 0x86e7, 0x3c20, 0xf88, 0x63c7, 0xe6, 0x1, 0x1);
        gbc.writeMem(0xf88, { 0x32 });
        gbc.writeMem(0x46dc, { 0xa });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x86e7, gbc.sp());
        EXPECT(0x46dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 01AD
        gbc.setState(0x2904, 0x92e8, 0xdee0, 0xcf02, 0x2378, 0xfb28, 0x0, 0x0);
        gbc.writeMem(0x2904, { 0xa });
        gbc.writeMem(0xcf02, { 0xd3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x92e8, gbc.sp());
        EXPECT(0x2905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xcf02));
        // 0A 01AE
        gbc.setState(0xc2c0, 0xe6d3, 0xb9a0, 0xea54, 0x1f5, 0x18bc, 0x1, 0x0);
        gbc.writeMem(0xc2c0, { 0xa });
        gbc.writeMem(0xea54, { 0x29 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe6d3, gbc.sp());
        EXPECT(0xc2c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc2c0));
        EXPECT(0x29, gbc.readMem(0xea54));
        // 0A 01AF
        gbc.setState(0x861b, 0x3b14, 0x6220, 0x1379, 0xc14d, 0x268c, 0x1, 0x1);
        gbc.writeMem(0x1379, { 0x27 });
        gbc.writeMem(0x861b, { 0xa });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3b14, gbc.sp());
        EXPECT(0x861c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x861b));
        // 0A 01B1
        gbc.setState(0xac3e, 0x8607, 0x8230, 0xdc81, 0x6c2e, 0x973a, 0x0, 0x1);
        gbc.writeMem(0xac3e, { 0xa });
        gbc.writeMem(0xdc81, { 0xbd });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8607, gbc.sp());
        EXPECT(0xac3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xac3e));
        EXPECT(0xbd, gbc.readMem(0xdc81));
        // 0A 01B2
        gbc.setState(0x5acb, 0xfa4, 0xc3c0, 0x2fc, 0x241e, 0x6c13, 0x1, 0x1);
        gbc.writeMem(0x2fc, { 0x13 });
        gbc.writeMem(0x5acb, { 0xa });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xfa4, gbc.sp());
        EXPECT(0x5acc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 01B3
        gbc.setState(0xad70, 0xfddd, 0xfea0, 0x3eb0, 0x21ed, 0xb838, 0x0, 0x0);
        gbc.writeMem(0x3eb0, { 0x4f });
        gbc.writeMem(0xad70, { 0xa });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfddd, gbc.sp());
        EXPECT(0xad71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xad70));
        // 0A 01B4
        gbc.setState(0xc9da, 0x2ac0, 0xed10, 0xaf31, 0x2643, 0x19d8, 0x1, 0x0);
        gbc.writeMem(0xaf31, { 0x7a });
        gbc.writeMem(0xc9da, { 0xa });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2ac0, gbc.sp());
        EXPECT(0xc9db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xaf31));
        EXPECT(0xa, gbc.readMem(0xc9da));
        // 0A 01B5
        gbc.setState(0x6f95, 0xe4cc, 0x6a10, 0xe82f, 0x5448, 0xde39, 0x1, 0x1);
        gbc.writeMem(0x6f95, { 0xa });
        gbc.writeMem(0xe82f, { 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe4cc, gbc.sp());
        EXPECT(0x6f96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xe82f));
        // 0A 01B6
        gbc.setState(0x8549, 0xb359, 0xd940, 0x4567, 0xb2af, 0x6587, 0x1, 0x0);
        gbc.writeMem(0x4567, { 0x98 });
        gbc.writeMem(0x8549, { 0xa });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb359, gbc.sp());
        EXPECT(0x854a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8549));
        // 0A 01B7
        gbc.setState(0xd40, 0x7583, 0xaa70, 0x531d, 0xa0be, 0x3763, 0x1, 0x0);
        gbc.writeMem(0xd40, { 0xa });
        gbc.writeMem(0x531d, { 0x70 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7583, gbc.sp());
        EXPECT(0xd41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 01B8
        gbc.setState(0xeac2, 0xf32a, 0xdec0, 0x95ab, 0x99f0, 0xde5, 0x0, 0x0);
        gbc.writeMem(0x95ab, { 0x28 });
        gbc.writeMem(0xeac2, { 0xa });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf32a, gbc.sp());
        EXPECT(0xeac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0x95ab));
        EXPECT(0xa, gbc.readMem(0xeac2));
        // 0A 01B9
        gbc.setState(0x8fda, 0x9908, 0xcf80, 0xe6cb, 0x36e6, 0xf211, 0x0, 0x0);
        gbc.writeMem(0x8fda, { 0xa });
        gbc.writeMem(0xe6cb, { 0x96 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9908, gbc.sp());
        EXPECT(0x8fdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8fda));
        EXPECT(0x96, gbc.readMem(0xe6cb));
        // 0A 01BA
        gbc.setState(0x6e82, 0x6520, 0x6970, 0x66ac, 0x2b06, 0x87c6, 0x0, 0x1);
        gbc.writeMem(0x66ac, { 0xdf });
        gbc.writeMem(0x6e82, { 0xa });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6520, gbc.sp());
        EXPECT(0x6e83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 01BB
        gbc.setState(0xdbd5, 0x8385, 0x5240, 0x4ea8, 0x685f, 0xed03, 0x0, 0x0);
        gbc.writeMem(0x4ea8, { 0x3d });
        gbc.writeMem(0xdbd5, { 0xa });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8385, gbc.sp());
        EXPECT(0xdbd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xdbd5));
        // 0A 01BC
        gbc.setState(0xee2d, 0xb8bf, 0x7fb0, 0x6b5e, 0x816c, 0xbfa9, 0x0, 0x1);
        gbc.writeMem(0x6b5e, { 0xe3 });
        gbc.writeMem(0xee2d, { 0xa });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb8bf, gbc.sp());
        EXPECT(0xee2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xee2d));
        // 0A 01BD
        gbc.setState(0x6926, 0x39da, 0x86c0, 0x7107, 0x12d7, 0x5474, 0x0, 0x0);
        gbc.writeMem(0x6926, { 0xa });
        gbc.writeMem(0x7107, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x39da, gbc.sp());
        EXPECT(0x6927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 01BE
        gbc.setState(0x7fc8, 0x4d4d, 0xb950, 0xa986, 0xa6d7, 0xd5ec, 0x0, 0x1);
        gbc.writeMem(0x7fc8, { 0xa });
        gbc.writeMem(0xa986, { 0xf0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4d4d, gbc.sp());
        EXPECT(0x7fc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa986));
        // 0A 01BF
        gbc.setState(0x321f, 0x92eb, 0x3370, 0xf893, 0xbf05, 0x5602, 0x0, 0x1);
        gbc.writeMem(0x321f, { 0xa });
        gbc.writeMem(0xf893, { 0xc7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x92eb, gbc.sp());
        EXPECT(0x3220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xf893));
        // 0A 01C0
        gbc.setState(0xa7cf, 0xc24a, 0x59a0, 0xdb8d, 0x23e2, 0xc176, 0x0, 0x1);
        gbc.writeMem(0xa7cf, { 0xa });
        gbc.writeMem(0xdb8d, { 0x3f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc24a, gbc.sp());
        EXPECT(0xa7d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa7cf));
        EXPECT(0x3f, gbc.readMem(0xdb8d));
        // 0A 01C1
        gbc.setState(0x25f8, 0xa767, 0x9170, 0xb102, 0x1c73, 0x61d6, 0x1, 0x1);
        gbc.writeMem(0x25f8, { 0xa });
        gbc.writeMem(0xb102, { 0xd5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa767, gbc.sp());
        EXPECT(0x25f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb102));
        // 0A 01C2
        gbc.setState(0xc97e, 0xe744, 0x88b0, 0x3f03, 0xc4e8, 0xbc6, 0x1, 0x1);
        gbc.writeMem(0x3f03, { 0x1c });
        gbc.writeMem(0xc97e, { 0xa });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe744, gbc.sp());
        EXPECT(0xc97f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc97e));
        // 0A 01C3
        gbc.setState(0xa34d, 0x682c, 0x760, 0xa9b1, 0x970d, 0xea6b, 0x1, 0x1);
        gbc.writeMem(0xa34d, { 0xa });
        gbc.writeMem(0xa9b1, { 0xaf });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x682c, gbc.sp());
        EXPECT(0xa34e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa34d));
        EXPECT(0xaf, gbc.readMem(0xa9b1));
        // 0A 01C4
        gbc.setState(0x5373, 0x786e, 0xfc00, 0xe1bd, 0x7fae, 0x4f6d, 0x0, 0x1);
        gbc.writeMem(0x5373, { 0xa });
        gbc.writeMem(0xe1bd, { 0x83 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x786e, gbc.sp());
        EXPECT(0x5374, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xe1bd));
        // 0A 01C5
        gbc.setState(0x9e44, 0x5d1, 0xe5e0, 0xd6d9, 0x45b3, 0xfde2, 0x1, 0x1);
        gbc.writeMem(0x9e44, { 0xa });
        gbc.writeMem(0xd6d9, { 0x55 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5d1, gbc.sp());
        EXPECT(0x9e45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9e44));
        EXPECT(0x55, gbc.readMem(0xd6d9));
        // 0A 01C6
        gbc.setState(0x891f, 0xfa5a, 0x1130, 0x2695, 0xb0f4, 0xe927, 0x0, 0x1);
        gbc.writeMem(0x2695, { 0x56 });
        gbc.writeMem(0x891f, { 0xa });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xfa5a, gbc.sp());
        EXPECT(0x8920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x891f));
        // 0A 01C7
        gbc.setState(0x33d1, 0x8c70, 0x1e30, 0xcbda, 0x61fb, 0x51ba, 0x1, 0x0);
        gbc.writeMem(0x33d1, { 0xa });
        gbc.writeMem(0xcbda, { 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8c70, gbc.sp());
        EXPECT(0x33d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xcbda));
        // 0A 01C9
        gbc.setState(0xa2cd, 0x614a, 0x9530, 0x549, 0x5601, 0x7b47, 0x0, 0x1);
        gbc.writeMem(0x549, { 0x2f });
        gbc.writeMem(0xa2cd, { 0xa });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x614a, gbc.sp());
        EXPECT(0xa2ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa2cd));
        // 0A 01CA
        gbc.setState(0x5d3c, 0x32f2, 0x8c90, 0xf35b, 0x93e6, 0xd367, 0x0, 0x0);
        gbc.writeMem(0x5d3c, { 0xa });
        gbc.writeMem(0xf35b, { 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x32f2, gbc.sp());
        EXPECT(0x5d3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xf35b));
        // 0A 01CB
        gbc.setState(0x6d3d, 0x5385, 0x3290, 0xe802, 0x79c2, 0x55b4, 0x1, 0x0);
        gbc.writeMem(0x6d3d, { 0xa });
        gbc.writeMem(0xe802, { 0xc8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5385, gbc.sp());
        EXPECT(0x6d3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe802));
        // 0A 01CC
        gbc.setState(0xaeb8, 0x1057, 0x3e70, 0x7c7e, 0xae19, 0x7a97, 0x0, 0x1);
        gbc.writeMem(0x7c7e, { 0x63 });
        gbc.writeMem(0xaeb8, { 0xa });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1057, gbc.sp());
        EXPECT(0xaeb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xaeb8));
        // 0A 01CD
        gbc.setState(0x7a42, 0x94, 0xab30, 0x1dc6, 0x3c4c, 0x4e82, 0x1, 0x1);
        gbc.writeMem(0x1dc6, { 0xa9 });
        gbc.writeMem(0x7a42, { 0xa });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x94, gbc.sp());
        EXPECT(0x7a43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 01CE
        gbc.setState(0x98e5, 0x66d2, 0xc710, 0x7352, 0xd7f3, 0x96ab, 0x1, 0x0);
        gbc.writeMem(0x7352, { 0x23 });
        gbc.writeMem(0x98e5, { 0xa });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x66d2, gbc.sp());
        EXPECT(0x98e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x98e5));
        // 0A 01CF
        gbc.setState(0x52aa, 0x72d3, 0xb1d0, 0xdea3, 0x393e, 0x8a14, 0x0, 0x1);
        gbc.writeMem(0x52aa, { 0xa });
        gbc.writeMem(0xdea3, { 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x72d3, gbc.sp());
        EXPECT(0x52ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xdea3));
        // 0A 01D0
        gbc.setState(0x4a1c, 0x57b, 0x1210, 0xaadc, 0xbe12, 0xa92, 0x0, 0x0);
        gbc.writeMem(0x4a1c, { 0xa });
        gbc.writeMem(0xaadc, { 0xbc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x57b, gbc.sp());
        EXPECT(0x4a1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xaadc));
        // 0A 01D1
        gbc.setState(0x86f7, 0xa793, 0x3db0, 0x1c1a, 0x4562, 0xcd15, 0x0, 0x0);
        gbc.writeMem(0x1c1a, { 0x5e });
        gbc.writeMem(0x86f7, { 0xa });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa793, gbc.sp());
        EXPECT(0x86f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x86f7));
        // 0A 01D2
        gbc.setState(0xa261, 0x17c5, 0xe500, 0xc4ee, 0x92db, 0x64ca, 0x0, 0x1);
        gbc.writeMem(0xa261, { 0xa });
        gbc.writeMem(0xc4ee, { 0x71 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x17c5, gbc.sp());
        EXPECT(0xa262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa261));
        EXPECT(0x71, gbc.readMem(0xc4ee));
        // 0A 01D3
        gbc.setState(0xb041, 0xee45, 0x8b90, 0xf4d7, 0xe55d, 0x1163, 0x1, 0x0);
        gbc.writeMem(0xb041, { 0xa });
        gbc.writeMem(0xf4d7, { 0x78 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xee45, gbc.sp());
        EXPECT(0xb042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb041));
        EXPECT(0x78, gbc.readMem(0xf4d7));
        // 0A 01D4
        gbc.setState(0x2481, 0x66b6, 0x9b20, 0x2b46, 0xb276, 0xc257, 0x0, 0x0);
        gbc.writeMem(0x2481, { 0xa });
        gbc.writeMem(0x2b46, { 0x3c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x66b6, gbc.sp());
        EXPECT(0x2482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 01D5
        gbc.setState(0x5293, 0x21b5, 0x1b80, 0x8529, 0x4b89, 0x8442, 0x0, 0x1);
        gbc.writeMem(0x5293, { 0xa });
        gbc.writeMem(0x8529, { 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x21b5, gbc.sp());
        EXPECT(0x5294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x8529));
        // 0A 01D6
        gbc.setState(0x4fe8, 0x75a, 0x6ac0, 0x8130, 0xc86c, 0x1aef, 0x1, 0x1);
        gbc.writeMem(0x4fe8, { 0xa });
        gbc.writeMem(0x8130, { 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x75a, gbc.sp());
        EXPECT(0x4fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8130));
        // 0A 01D7
        gbc.setState(0xce9c, 0x61c6, 0x4e70, 0xf5ee, 0xb591, 0x209e, 0x0, 0x0);
        gbc.writeMem(0xce9c, { 0xa });
        gbc.writeMem(0xf5ee, { 0xab });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x61c6, gbc.sp());
        EXPECT(0xce9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xce9c));
        EXPECT(0xab, gbc.readMem(0xf5ee));
        // 0A 01D8
        gbc.setState(0xe13c, 0x7f14, 0x32e0, 0x2546, 0xd1c2, 0x28f3, 0x0, 0x0);
        gbc.writeMem(0x2546, { 0x66 });
        gbc.writeMem(0xe13c, { 0xa });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7f14, gbc.sp());
        EXPECT(0xe13d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xe13c));
        // 0A 01D9
        gbc.setState(0xce0b, 0x6ec3, 0xecb0, 0x5497, 0x81c1, 0xda14, 0x0, 0x0);
        gbc.writeMem(0x5497, { 0xc0 });
        gbc.writeMem(0xce0b, { 0xa });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6ec3, gbc.sp());
        EXPECT(0xce0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xce0b));
        // 0A 01DA
        gbc.setState(0x4669, 0x18c3, 0x5bb0, 0xb25a, 0xf9a5, 0xb3ee, 0x0, 0x0);
        gbc.writeMem(0x4669, { 0xa });
        gbc.writeMem(0xb25a, { 0xda });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x18c3, gbc.sp());
        EXPECT(0x466a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb25a));
        // 0A 01DC
        gbc.setState(0xa966, 0x9706, 0x180, 0x32b0, 0x892d, 0x4430, 0x0, 0x1);
        gbc.writeMem(0x32b0, { 0xf1 });
        gbc.writeMem(0xa966, { 0xa });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9706, gbc.sp());
        EXPECT(0xa967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa966));
        // 0A 01DD
        gbc.setState(0x3dcf, 0x7d6f, 0xf440, 0x7b65, 0x4263, 0xa61e, 0x0, 0x0);
        gbc.writeMem(0x3dcf, { 0xa });
        gbc.writeMem(0x7b65, { 0xd1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7d6f, gbc.sp());
        EXPECT(0x3dd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 01DE
        gbc.setState(0xc85e, 0xd700, 0x1cd0, 0xed1f, 0x14c7, 0x4a12, 0x1, 0x0);
        gbc.writeMem(0xc85e, { 0xa });
        gbc.writeMem(0xed1f, { 0x5a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd700, gbc.sp());
        EXPECT(0xc85f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc85e));
        EXPECT(0x5a, gbc.readMem(0xed1f));
        // 0A 01DF
        gbc.setState(0x2bb3, 0x85f8, 0x8ea0, 0x7c1e, 0xe34a, 0x4bbe, 0x0, 0x1);
        gbc.writeMem(0x2bb3, { 0xa });
        gbc.writeMem(0x7c1e, { 0x6f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x85f8, gbc.sp());
        EXPECT(0x2bb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 01E0
        gbc.setState(0x62d9, 0xc2c8, 0xb60, 0xea1, 0xc66d, 0x80ad, 0x0, 0x1);
        gbc.writeMem(0xea1, { 0xb3 });
        gbc.writeMem(0x62d9, { 0xa });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc2c8, gbc.sp());
        EXPECT(0x62da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 01E1
        gbc.setState(0x4419, 0x5cbd, 0x7ae0, 0x2634, 0x4404, 0xbf80, 0x1, 0x1);
        gbc.writeMem(0x2634, { 0xb0 });
        gbc.writeMem(0x4419, { 0xa });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5cbd, gbc.sp());
        EXPECT(0x441a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 01E2
        gbc.setState(0x6167, 0xa879, 0x3330, 0x419d, 0x362c, 0xa7e0, 0x0, 0x0);
        gbc.writeMem(0x419d, { 0x93 });
        gbc.writeMem(0x6167, { 0xa });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa879, gbc.sp());
        EXPECT(0x6168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 01E3
        gbc.setState(0xb7df, 0x4f3c, 0x5d50, 0x2af, 0x47ee, 0x4d2c, 0x0, 0x1);
        gbc.writeMem(0x2af, { 0xb0 });
        gbc.writeMem(0xb7df, { 0xa });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4f3c, gbc.sp());
        EXPECT(0xb7e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb7df));
        // 0A 01E5
        gbc.setState(0x699, 0xe8ca, 0xe890, 0xfc37, 0xea51, 0x6f50, 0x0, 0x0);
        gbc.writeMem(0x699, { 0xa });
        gbc.writeMem(0xfc37, { 0xba });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe8ca, gbc.sp());
        EXPECT(0x69a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xfc37));
        // 0A 01E6
        gbc.setState(0x55cd, 0x1b7, 0x7120, 0xa80a, 0xeba0, 0x2c, 0x1, 0x0);
        gbc.writeMem(0x55cd, { 0xa });
        gbc.writeMem(0xa80a, { 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1b7, gbc.sp());
        EXPECT(0x55ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa80a));
        // 0A 01E7
        gbc.setState(0x73c9, 0x6bf9, 0xecd0, 0xc1f9, 0xac3b, 0xfe57, 0x1, 0x0);
        gbc.writeMem(0x73c9, { 0xa });
        gbc.writeMem(0xc1f9, { 0x38 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6bf9, gbc.sp());
        EXPECT(0x73ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc1f9));
        // 0A 01E9
        gbc.setState(0xcdb4, 0x9943, 0x6460, 0x4a91, 0xa68e, 0xc3d6, 0x0, 0x1);
        gbc.writeMem(0x4a91, { 0x77 });
        gbc.writeMem(0xcdb4, { 0xa });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9943, gbc.sp());
        EXPECT(0xcdb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xcdb4));
        // 0A 01EA
        gbc.setState(0x83a3, 0x3449, 0xe920, 0xeaa5, 0x1b30, 0x4016, 0x0, 0x1);
        gbc.writeMem(0x83a3, { 0xa });
        gbc.writeMem(0xeaa5, { 0xf3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3449, gbc.sp());
        EXPECT(0x83a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x83a3));
        EXPECT(0xf3, gbc.readMem(0xeaa5));
        // 0A 01EB
        gbc.setState(0x3432, 0x4e39, 0x2a80, 0x3724, 0x544e, 0xcb81, 0x0, 0x0);
        gbc.writeMem(0x3432, { 0xa });
        gbc.writeMem(0x3724, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4e39, gbc.sp());
        EXPECT(0x3433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 01EC
        gbc.setState(0x1b1a, 0xf48, 0xae20, 0x220f, 0xfe1f, 0x72ee, 0x0, 0x1);
        gbc.writeMem(0x1b1a, { 0xa });
        gbc.writeMem(0x220f, { 0x29 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf48, gbc.sp());
        EXPECT(0x1b1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 01ED
        gbc.setState(0x7906, 0x9f6, 0xf0b0, 0x2737, 0x396d, 0xe04d, 0x1, 0x1);
        gbc.writeMem(0x2737, { 0xb3 });
        gbc.writeMem(0x7906, { 0xa });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9f6, gbc.sp());
        EXPECT(0x7907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 01EE
        gbc.setState(0x15c1, 0x3690, 0x6a80, 0x25c0, 0xce06, 0x335e, 0x1, 0x0);
        gbc.writeMem(0x15c1, { 0xa });
        gbc.writeMem(0x25c0, { 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3690, gbc.sp());
        EXPECT(0x15c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 01EF
        gbc.setState(0x860c, 0xc497, 0xde00, 0x913b, 0xcb0b, 0x6095, 0x1, 0x0);
        gbc.writeMem(0x860c, { 0xa });
        gbc.writeMem(0x913b, { 0xee });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc497, gbc.sp());
        EXPECT(0x860d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x860c));
        EXPECT(0xee, gbc.readMem(0x913b));
        // 0A 01F0
        gbc.setState(0x1483, 0x2030, 0x5ec0, 0x286d, 0x64f7, 0x3445, 0x1, 0x1);
        gbc.writeMem(0x1483, { 0xa });
        gbc.writeMem(0x286d, { 0xbc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2030, gbc.sp());
        EXPECT(0x1484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 01F2
        gbc.setState(0xefd7, 0xe13c, 0x6a70, 0x52da, 0x91a6, 0xa523, 0x1, 0x1);
        gbc.writeMem(0x52da, { 0x56 });
        gbc.writeMem(0xefd7, { 0xa });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe13c, gbc.sp());
        EXPECT(0xefd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xefd7));
        // 0A 01F3
        gbc.setState(0x1fab, 0x5126, 0x2410, 0x72ed, 0x4774, 0x37fe, 0x1, 0x1);
        gbc.writeMem(0x1fab, { 0xa });
        gbc.writeMem(0x72ed, { 0xe0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5126, gbc.sp());
        EXPECT(0x1fac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 01F4
        gbc.setState(0x287b, 0xcf11, 0x3080, 0xf8b6, 0xb71e, 0x9d20, 0x0, 0x1);
        gbc.writeMem(0x287b, { 0xa });
        gbc.writeMem(0xf8b6, { 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xcf11, gbc.sp());
        EXPECT(0x287c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xf8b6));
        // 0A 01F5
        gbc.setState(0x284d, 0x5eeb, 0x5de0, 0x22c6, 0xdd6, 0x5293, 0x0, 0x1);
        gbc.writeMem(0x22c6, { 0xef });
        gbc.writeMem(0x284d, { 0xa });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5eeb, gbc.sp());
        EXPECT(0x284e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 01F6
        gbc.setState(0xd93b, 0xe311, 0xd380, 0x682d, 0x63e4, 0x651b, 0x1, 0x0);
        gbc.writeMem(0x682d, { 0x65 });
        gbc.writeMem(0xd93b, { 0xa });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe311, gbc.sp());
        EXPECT(0xd93c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd93b));
        // 0A 01F7
        gbc.setState(0x5874, 0x4d7c, 0xc040, 0x74e7, 0x59dc, 0x237d, 0x0, 0x0);
        gbc.writeMem(0x5874, { 0xa });
        gbc.writeMem(0x74e7, { 0x1b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4d7c, gbc.sp());
        EXPECT(0x5875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 01F8
        gbc.setState(0xa536, 0x5484, 0xf9f0, 0xfc35, 0x3802, 0x9e21, 0x1, 0x0);
        gbc.writeMem(0xa536, { 0xa });
        gbc.writeMem(0xfc35, { 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5484, gbc.sp());
        EXPECT(0xa537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa536));
        EXPECT(0x94, gbc.readMem(0xfc35));
        // 0A 01F9
        gbc.setState(0xde06, 0x18eb, 0xecc0, 0x9a05, 0x45e0, 0xb4eb, 0x0, 0x1);
        gbc.writeMem(0x9a05, { 0xd9 });
        gbc.writeMem(0xde06, { 0xa });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x18eb, gbc.sp());
        EXPECT(0xde07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9a05));
        EXPECT(0xa, gbc.readMem(0xde06));
        // 0A 01FA
        gbc.setState(0x1795, 0xc58f, 0x4fd0, 0x7fb, 0x12cf, 0x7a4e, 0x0, 0x0);
        gbc.writeMem(0x7fb, { 0xe6 });
        gbc.writeMem(0x1795, { 0xa });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc58f, gbc.sp());
        EXPECT(0x1796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 01FB
        gbc.setState(0x52d9, 0x3bfd, 0x99f0, 0x8769, 0xc263, 0x5c5f, 0x0, 0x1);
        gbc.writeMem(0x52d9, { 0xa });
        gbc.writeMem(0x8769, { 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3bfd, gbc.sp());
        EXPECT(0x52da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8769));
        // 0A 01FC
        gbc.setState(0xd153, 0x648f, 0x1230, 0xc727, 0x4559, 0xe553, 0x1, 0x0);
        gbc.writeMem(0xc727, { 0x8b });
        gbc.writeMem(0xd153, { 0xa });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x648f, gbc.sp());
        EXPECT(0xd154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xc727));
        EXPECT(0xa, gbc.readMem(0xd153));
        // 0A 01FD
        gbc.setState(0xa163, 0x6904, 0xb4c0, 0xbe1, 0xf3d0, 0x658d, 0x0, 0x0);
        gbc.writeMem(0xbe1, { 0xeb });
        gbc.writeMem(0xa163, { 0xa });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6904, gbc.sp());
        EXPECT(0xa164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa163));
        // 0A 01FF
        gbc.setState(0x2c5a, 0x8b19, 0x7500, 0x3040, 0xc483, 0xcf68, 0x0, 0x0);
        gbc.writeMem(0x2c5a, { 0xa });
        gbc.writeMem(0x3040, { 0xda });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8b19, gbc.sp());
        EXPECT(0x2c5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0200
        gbc.setState(0xedde, 0xe972, 0x1540, 0xebe4, 0x7fcb, 0x3a95, 0x1, 0x1);
        gbc.writeMem(0xebe4, { 0x9f });
        gbc.writeMem(0xedde, { 0xa });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe972, gbc.sp());
        EXPECT(0xeddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xebe4));
        EXPECT(0xa, gbc.readMem(0xedde));
        // 0A 0201
        gbc.setState(0xaec7, 0x79bf, 0xc620, 0xe5f0, 0x7f1e, 0xe26e, 0x1, 0x0);
        gbc.writeMem(0xaec7, { 0xa });
        gbc.writeMem(0xe5f0, { 0x23 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x79bf, gbc.sp());
        EXPECT(0xaec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xaec7));
        EXPECT(0x23, gbc.readMem(0xe5f0));
        // 0A 0202
        gbc.setState(0x2df5, 0x78de, 0x6170, 0x9a05, 0x3164, 0x628e, 0x1, 0x1);
        gbc.writeMem(0x2df5, { 0xa });
        gbc.writeMem(0x9a05, { 0xd9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x78de, gbc.sp());
        EXPECT(0x2df6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9a05));
        // 0A 0203
        gbc.setState(0xcec6, 0x3a1b, 0xb3f0, 0x51e4, 0xb6a8, 0x5ddc, 0x1, 0x1);
        gbc.writeMem(0x51e4, { 0xf8 });
        gbc.writeMem(0xcec6, { 0xa });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3a1b, gbc.sp());
        EXPECT(0xcec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xcec6));
        // 0A 0204
        gbc.setState(0xe204, 0x3015, 0xb7e0, 0xcd4b, 0x9cc0, 0xe29, 0x0, 0x1);
        gbc.writeMem(0xcd4b, { 0x38 });
        gbc.writeMem(0xe204, { 0xa });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3015, gbc.sp());
        EXPECT(0xe205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcd4b));
        EXPECT(0xa, gbc.readMem(0xe204));
        // 0A 0205
        gbc.setState(0x176f, 0xffd0, 0x8410, 0x547a, 0xa97c, 0x82c8, 0x1, 0x1);
        gbc.writeMem(0x176f, { 0xa });
        gbc.writeMem(0x547a, { 0x15 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xffd0, gbc.sp());
        EXPECT(0x1770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0206
        gbc.setState(0x6d6e, 0xb86b, 0x8530, 0x1016, 0x1e8c, 0x13b7, 0x0, 0x1);
        gbc.writeMem(0x1016, { 0x2d });
        gbc.writeMem(0x6d6e, { 0xa });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb86b, gbc.sp());
        EXPECT(0x6d6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0207
        gbc.setState(0x8045, 0x566c, 0x5650, 0x6dc9, 0x3f8c, 0x1dcb, 0x0, 0x1);
        gbc.writeMem(0x6dc9, { 0x1d });
        gbc.writeMem(0x8045, { 0xa });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x566c, gbc.sp());
        EXPECT(0x8046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8045));
        // 0A 0208
        gbc.setState(0xda51, 0x5698, 0x2ff0, 0xd362, 0x99b6, 0x3d12, 0x1, 0x1);
        gbc.writeMem(0xd362, { 0x35 });
        gbc.writeMem(0xda51, { 0xa });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5698, gbc.sp());
        EXPECT(0xda52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xd362));
        EXPECT(0xa, gbc.readMem(0xda51));
        // 0A 0209
        gbc.setState(0x7aaa, 0xe45a, 0xc700, 0xe7d2, 0x17bd, 0xc3e8, 0x0, 0x1);
        gbc.writeMem(0x7aaa, { 0xa });
        gbc.writeMem(0xe7d2, { 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe45a, gbc.sp());
        EXPECT(0x7aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xe7d2));
        // 0A 020A
        gbc.setState(0x6c3d, 0x43a3, 0x7aa0, 0x907b, 0x33b8, 0x547d, 0x1, 0x0);
        gbc.writeMem(0x6c3d, { 0xa });
        gbc.writeMem(0x907b, { 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x43a3, gbc.sp());
        EXPECT(0x6c3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x907b));
        // 0A 020B
        gbc.setState(0x3a03, 0xb3b4, 0x5530, 0xdd85, 0x58e4, 0xfe15, 0x0, 0x0);
        gbc.writeMem(0x3a03, { 0xa });
        gbc.writeMem(0xdd85, { 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb3b4, gbc.sp());
        EXPECT(0x3a04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xdd85));
        // 0A 020C
        gbc.setState(0xc8fc, 0x1583, 0x77a0, 0x929d, 0x35df, 0xa35f, 0x1, 0x0);
        gbc.writeMem(0x929d, { 0x64 });
        gbc.writeMem(0xc8fc, { 0xa });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1583, gbc.sp());
        EXPECT(0xc8fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x929d));
        EXPECT(0xa, gbc.readMem(0xc8fc));
        // 0A 020D
        gbc.setState(0xa451, 0x2c0d, 0x7cb0, 0xf2ed, 0xb44b, 0x85af, 0x1, 0x0);
        gbc.writeMem(0xa451, { 0xa });
        gbc.writeMem(0xf2ed, { 0xa8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2c0d, gbc.sp());
        EXPECT(0xa452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa451));
        EXPECT(0xa8, gbc.readMem(0xf2ed));
        // 0A 020F
        gbc.setState(0x3e23, 0x77dd, 0x6c40, 0x781d, 0x7adf, 0x9fce, 0x0, 0x1);
        gbc.writeMem(0x3e23, { 0xa });
        gbc.writeMem(0x781d, { 0x1b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x77dd, gbc.sp());
        EXPECT(0x3e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0210
        gbc.setState(0xa5c2, 0xf640, 0x83b0, 0xf8a6, 0xeda5, 0x2d2b, 0x1, 0x1);
        gbc.writeMem(0xa5c2, { 0xa });
        gbc.writeMem(0xf8a6, { 0x50 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf640, gbc.sp());
        EXPECT(0xa5c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa5c2));
        EXPECT(0x50, gbc.readMem(0xf8a6));
        // 0A 0212
        gbc.setState(0xd9fa, 0x909d, 0x55d0, 0xed07, 0xaf29, 0x9f70, 0x0, 0x0);
        gbc.writeMem(0xd9fa, { 0xa });
        gbc.writeMem(0xed07, { 0xc2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x909d, gbc.sp());
        EXPECT(0xd9fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd9fa));
        EXPECT(0xc2, gbc.readMem(0xed07));
        // 0A 0213
        gbc.setState(0xe983, 0xbcef, 0x5f0, 0x772, 0x35f7, 0x1e97, 0x1, 0x1);
        gbc.writeMem(0x772, { 0x7e });
        gbc.writeMem(0xe983, { 0xa });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbcef, gbc.sp());
        EXPECT(0xe984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xe983));
        // 0A 0214
        gbc.setState(0x2c20, 0x56ea, 0x5150, 0x894b, 0x689e, 0x1ae3, 0x0, 0x1);
        gbc.writeMem(0x2c20, { 0xa });
        gbc.writeMem(0x894b, { 0x92 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x56ea, gbc.sp());
        EXPECT(0x2c21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x894b));
        // 0A 0215
        gbc.setState(0x8945, 0x2208, 0x7fa0, 0x33bd, 0x652, 0x4e43, 0x0, 0x1);
        gbc.writeMem(0x33bd, { 0x51 });
        gbc.writeMem(0x8945, { 0xa });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2208, gbc.sp());
        EXPECT(0x8946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8945));
        // 0A 0216
        gbc.setState(0x4d22, 0x3824, 0xb170, 0x4658, 0xbe40, 0x2383, 0x0, 0x0);
        gbc.writeMem(0x4658, { 0xe1 });
        gbc.writeMem(0x4d22, { 0xa });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3824, gbc.sp());
        EXPECT(0x4d23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0217
        gbc.setState(0x2b49, 0x45a3, 0x96a0, 0x7ec3, 0x5408, 0x62bc, 0x0, 0x1);
        gbc.writeMem(0x2b49, { 0xa });
        gbc.writeMem(0x7ec3, { 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x45a3, gbc.sp());
        EXPECT(0x2b4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0218
        gbc.setState(0x457f, 0x1eb4, 0xd480, 0xceac, 0x241d, 0x5458, 0x1, 0x1);
        gbc.writeMem(0x457f, { 0xa });
        gbc.writeMem(0xceac, { 0x50 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1eb4, gbc.sp());
        EXPECT(0x4580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xceac));
        // 0A 0219
        gbc.setState(0x98a0, 0xa29b, 0xc320, 0x9e79, 0x169e, 0x5096, 0x1, 0x0);
        gbc.writeMem(0x98a0, { 0xa });
        gbc.writeMem(0x9e79, { 0x68 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa29b, gbc.sp());
        EXPECT(0x98a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x98a0));
        EXPECT(0x68, gbc.readMem(0x9e79));
        // 0A 021A
        gbc.setState(0xe573, 0x67dc, 0x4290, 0x43b7, 0x1b21, 0x4d4c, 0x0, 0x1);
        gbc.writeMem(0x43b7, { 0x69 });
        gbc.writeMem(0xe573, { 0xa });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x67dc, gbc.sp());
        EXPECT(0xe574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xe573));
        // 0A 021B
        gbc.setState(0xe1ac, 0x8d3d, 0x16b0, 0xde6e, 0x9c2e, 0xb132, 0x0, 0x1);
        gbc.writeMem(0xde6e, { 0x73 });
        gbc.writeMem(0xe1ac, { 0xa });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8d3d, gbc.sp());
        EXPECT(0xe1ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xde6e));
        EXPECT(0xa, gbc.readMem(0xe1ac));
        // 0A 021C
        gbc.setState(0xe765, 0x9ee2, 0x6810, 0xeada, 0x4319, 0x7108, 0x1, 0x0);
        gbc.writeMem(0xe765, { 0xa });
        gbc.writeMem(0xeada, { 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9ee2, gbc.sp());
        EXPECT(0xe766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xe765));
        EXPECT(0xd, gbc.readMem(0xeada));
        // 0A 021D
        gbc.setState(0xbbcf, 0xacc3, 0x7800, 0x5d73, 0xb7cc, 0x4196, 0x1, 0x1);
        gbc.writeMem(0x5d73, { 0xb8 });
        gbc.writeMem(0xbbcf, { 0xa });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xacc3, gbc.sp());
        EXPECT(0xbbd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xbbcf));
        // 0A 021E
        gbc.setState(0x2ef8, 0xaaec, 0x6090, 0x3c38, 0xafd3, 0xbde1, 0x0, 0x0);
        gbc.writeMem(0x2ef8, { 0xa });
        gbc.writeMem(0x3c38, { 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xaaec, gbc.sp());
        EXPECT(0x2ef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 021F
        gbc.setState(0xeeb6, 0x3d5e, 0x50a0, 0x75e4, 0xddb9, 0x394f, 0x1, 0x1);
        gbc.writeMem(0x75e4, { 0x50 });
        gbc.writeMem(0xeeb6, { 0xa });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3d5e, gbc.sp());
        EXPECT(0xeeb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xeeb6));
        // 0A 0220
        gbc.setState(0x9d13, 0xe999, 0x5d50, 0x2de2, 0xc60e, 0xf527, 0x0, 0x0);
        gbc.writeMem(0x2de2, { 0x57 });
        gbc.writeMem(0x9d13, { 0xa });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe999, gbc.sp());
        EXPECT(0x9d14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9d13));
        // 0A 0221
        gbc.setState(0xbcc1, 0xb590, 0xe8e0, 0x185d, 0x5e71, 0xd0a9, 0x0, 0x1);
        gbc.writeMem(0x185d, { 0xb });
        gbc.writeMem(0xbcc1, { 0xa });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb590, gbc.sp());
        EXPECT(0xbcc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xbcc1));
        // 0A 0222
        gbc.setState(0x1331, 0x3a9c, 0x5990, 0x22dd, 0x454, 0xd382, 0x0, 0x0);
        gbc.writeMem(0x1331, { 0xa });
        gbc.writeMem(0x22dd, { 0x7c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3a9c, gbc.sp());
        EXPECT(0x1332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0223
        gbc.setState(0x5f45, 0xa0f1, 0xc5e0, 0x78c2, 0x6907, 0xece6, 0x1, 0x0);
        gbc.writeMem(0x5f45, { 0xa });
        gbc.writeMem(0x78c2, { 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa0f1, gbc.sp());
        EXPECT(0x5f46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0224
        gbc.setState(0x5556, 0x3feb, 0x9c0, 0x4ffe, 0x3b07, 0x5b83, 0x0, 0x1);
        gbc.writeMem(0x4ffe, { 0x5a });
        gbc.writeMem(0x5556, { 0xa });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3feb, gbc.sp());
        EXPECT(0x5557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0225
        gbc.setState(0xaaa5, 0x7395, 0x8210, 0x31c8, 0xea67, 0xcb2c, 0x0, 0x0);
        gbc.writeMem(0x31c8, { 0xc6 });
        gbc.writeMem(0xaaa5, { 0xa });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7395, gbc.sp());
        EXPECT(0xaaa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xaaa5));
        // 0A 0226
        gbc.setState(0x9df2, 0x3ec8, 0xd2b0, 0x2915, 0x59fa, 0x2f0b, 0x0, 0x0);
        gbc.writeMem(0x2915, { 0xd7 });
        gbc.writeMem(0x9df2, { 0xa });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3ec8, gbc.sp());
        EXPECT(0x9df3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9df2));
        // 0A 0228
        gbc.setState(0xb44e, 0xb8d7, 0xbc60, 0xee2a, 0x3173, 0xfe08, 0x0, 0x1);
        gbc.writeMem(0xb44e, { 0xa });
        gbc.writeMem(0xee2a, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb8d7, gbc.sp());
        EXPECT(0xb44f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb44e));
        EXPECT(0x52, gbc.readMem(0xee2a));
        // 0A 0229
        gbc.setState(0x45ae, 0xdabf, 0xde70, 0xa9f9, 0x4d16, 0x5f18, 0x0, 0x0);
        gbc.writeMem(0x45ae, { 0xa });
        gbc.writeMem(0xa9f9, { 0x3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xdabf, gbc.sp());
        EXPECT(0x45af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa9f9));
        // 0A 022A
        gbc.setState(0xac5, 0xf3e6, 0xf00, 0xa1d5, 0x38a2, 0x69c5, 0x0, 0x1);
        gbc.writeMem(0xac5, { 0xa });
        gbc.writeMem(0xa1d5, { 0xcd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf3e6, gbc.sp());
        EXPECT(0xac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xa1d5));
        // 0A 022B
        gbc.setState(0x2d03, 0x3263, 0xd100, 0x63da, 0x7ba1, 0x7d3c, 0x1, 0x1);
        gbc.writeMem(0x2d03, { 0xa });
        gbc.writeMem(0x63da, { 0x25 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3263, gbc.sp());
        EXPECT(0x2d04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 022C
        gbc.setState(0xb18a, 0x36e, 0x9e10, 0x4a1e, 0xaf0, 0x94ee, 0x1, 0x1);
        gbc.writeMem(0x4a1e, { 0xa6 });
        gbc.writeMem(0xb18a, { 0xa });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x36e, gbc.sp());
        EXPECT(0xb18b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb18a));
        // 0A 022D
        gbc.setState(0xcf32, 0x21a8, 0x5b50, 0x61f, 0xd90, 0xfa81, 0x0, 0x0);
        gbc.writeMem(0x61f, { 0x1e });
        gbc.writeMem(0xcf32, { 0xa });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x21a8, gbc.sp());
        EXPECT(0xcf33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xcf32));
        // 0A 022E
        gbc.setState(0xda17, 0x6828, 0xc4c0, 0x6fea, 0x34a, 0x497a, 0x1, 0x1);
        gbc.writeMem(0x6fea, { 0x51 });
        gbc.writeMem(0xda17, { 0xa });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6828, gbc.sp());
        EXPECT(0xda18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xda17));
        // 0A 022F
        gbc.setState(0x9ff1, 0x12b8, 0xd200, 0xb18, 0x3639, 0x1c2d, 0x0, 0x1);
        gbc.writeMem(0xb18, { 0x78 });
        gbc.writeMem(0x9ff1, { 0xa });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x12b8, gbc.sp());
        EXPECT(0x9ff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9ff1));
        // 0A 0230
        gbc.setState(0x6c47, 0x73e8, 0x990, 0x2f6d, 0xbed9, 0xfecb, 0x0, 0x1);
        gbc.writeMem(0x2f6d, { 0x43 });
        gbc.writeMem(0x6c47, { 0xa });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x73e8, gbc.sp());
        EXPECT(0x6c48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0232
        gbc.setState(0xc904, 0x7c92, 0x8b00, 0x6c84, 0x4cec, 0x7e88, 0x0, 0x1);
        gbc.writeMem(0x6c84, { 0xe3 });
        gbc.writeMem(0xc904, { 0xa });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7c92, gbc.sp());
        EXPECT(0xc905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc904));
        // 0A 0233
        gbc.setState(0x602a, 0x6f2e, 0x7090, 0xce95, 0xd9b3, 0x1dd6, 0x0, 0x1);
        gbc.writeMem(0x602a, { 0xa });
        gbc.writeMem(0xce95, { 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6f2e, gbc.sp());
        EXPECT(0x602b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xce95));
        // 0A 0234
        gbc.setState(0x7afc, 0x4c9e, 0xd60, 0x3964, 0x11e2, 0xc3c6, 0x0, 0x0);
        gbc.writeMem(0x3964, { 0x54 });
        gbc.writeMem(0x7afc, { 0xa });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4c9e, gbc.sp());
        EXPECT(0x7afd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0235
        gbc.setState(0x3b9b, 0x9edf, 0x3500, 0x4a2b, 0x574f, 0x51d8, 0x0, 0x0);
        gbc.writeMem(0x3b9b, { 0xa });
        gbc.writeMem(0x4a2b, { 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x9edf, gbc.sp());
        EXPECT(0x3b9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0236
        gbc.setState(0xde77, 0x38fc, 0x6b10, 0x907a, 0xbcad, 0xeaad, 0x0, 0x0);
        gbc.writeMem(0x907a, { 0xc3 });
        gbc.writeMem(0xde77, { 0xa });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x38fc, gbc.sp());
        EXPECT(0xde78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x907a));
        EXPECT(0xa, gbc.readMem(0xde77));
        // 0A 0237
        gbc.setState(0x1404, 0xdc0e, 0xac40, 0xdf78, 0x75d4, 0x5031, 0x1, 0x0);
        gbc.writeMem(0x1404, { 0xa });
        gbc.writeMem(0xdf78, { 0x7f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xdc0e, gbc.sp());
        EXPECT(0x1405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xdf78));
        // 0A 0238
        gbc.setState(0x8b0c, 0xbc43, 0x9d70, 0xed8b, 0x93a, 0x85c9, 0x0, 0x0);
        gbc.writeMem(0x8b0c, { 0xa });
        gbc.writeMem(0xed8b, { 0xdc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xbc43, gbc.sp());
        EXPECT(0x8b0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8b0c));
        EXPECT(0xdc, gbc.readMem(0xed8b));
        // 0A 023A
        gbc.setState(0xa4ae, 0x24aa, 0xb6d0, 0xb3c8, 0x5363, 0xf3de, 0x1, 0x0);
        gbc.writeMem(0xa4ae, { 0xa });
        gbc.writeMem(0xb3c8, { 0x61 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x24aa, gbc.sp());
        EXPECT(0xa4af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa4ae));
        EXPECT(0x61, gbc.readMem(0xb3c8));
        // 0A 023B
        gbc.setState(0xe273, 0x20df, 0x9a0, 0x96f2, 0x92ef, 0x33a6, 0x0, 0x1);
        gbc.writeMem(0x96f2, { 0xc5 });
        gbc.writeMem(0xe273, { 0xa });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x20df, gbc.sp());
        EXPECT(0xe274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x96f2));
        EXPECT(0xa, gbc.readMem(0xe273));
        // 0A 023C
        gbc.setState(0x9f53, 0x885, 0x67a0, 0xf9d4, 0x313f, 0xa101, 0x1, 0x0);
        gbc.writeMem(0x9f53, { 0xa });
        gbc.writeMem(0xf9d4, { 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x885, gbc.sp());
        EXPECT(0x9f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9f53));
        EXPECT(0xad, gbc.readMem(0xf9d4));
        // 0A 023D
        gbc.setState(0x2e75, 0x66a7, 0x40f0, 0x7a17, 0xcc35, 0xddf4, 0x0, 0x1);
        gbc.writeMem(0x2e75, { 0xa });
        gbc.writeMem(0x7a17, { 0xb4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x66a7, gbc.sp());
        EXPECT(0x2e76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 023F
        gbc.setState(0x29c7, 0x9ed, 0xfbd0, 0x8021, 0x9333, 0xf0af, 0x0, 0x1);
        gbc.writeMem(0x29c7, { 0xa });
        gbc.writeMem(0x8021, { 0x3e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9ed, gbc.sp());
        EXPECT(0x29c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8021));
        // 0A 0240
        gbc.setState(0xbb40, 0x8493, 0x7df0, 0x295b, 0x2cf1, 0x701f, 0x1, 0x0);
        gbc.writeMem(0x295b, { 0x0 });
        gbc.writeMem(0xbb40, { 0xa });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8493, gbc.sp());
        EXPECT(0xbb41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xbb40));
        // 0A 0241
        gbc.setState(0xec9d, 0xc492, 0x9110, 0x523c, 0xec70, 0xe25d, 0x0, 0x0);
        gbc.writeMem(0x523c, { 0xb9 });
        gbc.writeMem(0xec9d, { 0xa });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc492, gbc.sp());
        EXPECT(0xec9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xec9d));
        // 0A 0242
        gbc.setState(0x4fe2, 0xcf5, 0xe5e0, 0xf5ab, 0x505f, 0x633c, 0x1, 0x0);
        gbc.writeMem(0x4fe2, { 0xa });
        gbc.writeMem(0xf5ab, { 0x83 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xcf5, gbc.sp());
        EXPECT(0x4fe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xf5ab));
        // 0A 0243
        gbc.setState(0xd9bc, 0x1c50, 0xec0, 0x9ca9, 0x2e0b, 0x2c51, 0x0, 0x0);
        gbc.writeMem(0x9ca9, { 0x4c });
        gbc.writeMem(0xd9bc, { 0xa });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1c50, gbc.sp());
        EXPECT(0xd9bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9ca9));
        EXPECT(0xa, gbc.readMem(0xd9bc));
        // 0A 0244
        gbc.setState(0x8b82, 0xb6c0, 0xa530, 0x1217, 0xf5c5, 0x152, 0x0, 0x0);
        gbc.writeMem(0x1217, { 0xef });
        gbc.writeMem(0x8b82, { 0xa });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb6c0, gbc.sp());
        EXPECT(0x8b83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8b82));
        // 0A 0245
        gbc.setState(0xb665, 0x42d, 0x29a0, 0x68f9, 0x16df, 0xd288, 0x1, 0x1);
        gbc.writeMem(0x68f9, { 0x81 });
        gbc.writeMem(0xb665, { 0xa });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x42d, gbc.sp());
        EXPECT(0xb666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb665));
        // 0A 0246
        gbc.setState(0xc2a8, 0xcd32, 0x3fe0, 0xc323, 0x7e09, 0x73c3, 0x1, 0x0);
        gbc.writeMem(0xc2a8, { 0xa });
        gbc.writeMem(0xc323, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xcd32, gbc.sp());
        EXPECT(0xc2a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc2a8));
        EXPECT(0xf, gbc.readMem(0xc323));
        // 0A 0247
        gbc.setState(0x8c44, 0x781c, 0x4440, 0x117, 0x7aae, 0xd9b4, 0x0, 0x1);
        gbc.writeMem(0x117, { 0xb1 });
        gbc.writeMem(0x8c44, { 0xa });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x781c, gbc.sp());
        EXPECT(0x8c45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8c44));
        // 0A 0248
        gbc.setState(0xec1a, 0xf842, 0xd2b0, 0xba46, 0x93bb, 0x8944, 0x0, 0x1);
        gbc.writeMem(0xba46, { 0xf6 });
        gbc.writeMem(0xec1a, { 0xa });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf842, gbc.sp());
        EXPECT(0xec1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xba46));
        EXPECT(0xa, gbc.readMem(0xec1a));
        // 0A 024A
        gbc.setState(0xaade, 0xacfa, 0x4610, 0x8455, 0x6a25, 0x17fc, 0x0, 0x0);
        gbc.writeMem(0x8455, { 0xa7 });
        gbc.writeMem(0xaade, { 0xa });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xacfa, gbc.sp());
        EXPECT(0xaadf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8455));
        EXPECT(0xa, gbc.readMem(0xaade));
        // 0A 024B
        gbc.setState(0x4c4a, 0x919e, 0x7d50, 0xcf75, 0x98d1, 0xa785, 0x0, 0x0);
        gbc.writeMem(0x4c4a, { 0xa });
        gbc.writeMem(0xcf75, { 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x919e, gbc.sp());
        EXPECT(0x4c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xcf75));
        // 0A 024C
        gbc.setState(0xd138, 0x2eda, 0x24d0, 0x236, 0x4c80, 0x35d, 0x1, 0x0);
        gbc.writeMem(0x236, { 0xc3 });
        gbc.writeMem(0xd138, { 0xa });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2eda, gbc.sp());
        EXPECT(0xd139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd138));
        // 0A 024F
        gbc.setState(0x6daa, 0x64c8, 0x4f30, 0xe6ec, 0x2524, 0x74c9, 0x1, 0x0);
        gbc.writeMem(0x6daa, { 0xa });
        gbc.writeMem(0xe6ec, { 0xdd });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x64c8, gbc.sp());
        EXPECT(0x6dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xe6ec));
        // 0A 0250
        gbc.setState(0xc109, 0xa56b, 0x6c0, 0xc889, 0xbbe8, 0xd491, 0x1, 0x1);
        gbc.writeMem(0xc109, { 0xa });
        gbc.writeMem(0xc889, { 0x74 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa56b, gbc.sp());
        EXPECT(0xc10a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc109));
        EXPECT(0x74, gbc.readMem(0xc889));
        // 0A 0251
        gbc.setState(0x9022, 0x6419, 0x1c20, 0x23f1, 0xde93, 0x2174, 0x0, 0x0);
        gbc.writeMem(0x23f1, { 0x32 });
        gbc.writeMem(0x9022, { 0xa });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6419, gbc.sp());
        EXPECT(0x9023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9022));
        // 0A 0252
        gbc.setState(0x78d7, 0xde13, 0x1de0, 0x8191, 0x727, 0xc355, 0x0, 0x1);
        gbc.writeMem(0x78d7, { 0xa });
        gbc.writeMem(0x8191, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xde13, gbc.sp());
        EXPECT(0x78d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x8191));
        // 0A 0253
        gbc.setState(0xa081, 0x8fb4, 0x4f60, 0x3e20, 0xb7d9, 0xbdd8, 0x0, 0x0);
        gbc.writeMem(0x3e20, { 0x31 });
        gbc.writeMem(0xa081, { 0xa });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8fb4, gbc.sp());
        EXPECT(0xa082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa081));
        // 0A 0254
        gbc.setState(0x5d48, 0x82f9, 0xeae0, 0x389e, 0xf34d, 0x76f4, 0x0, 0x1);
        gbc.writeMem(0x389e, { 0x41 });
        gbc.writeMem(0x5d48, { 0xa });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x82f9, gbc.sp());
        EXPECT(0x5d49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0255
        gbc.setState(0x8930, 0xb8ae, 0x4bd0, 0x138b, 0x61a0, 0xf6d2, 0x0, 0x1);
        gbc.writeMem(0x138b, { 0x78 });
        gbc.writeMem(0x8930, { 0xa });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb8ae, gbc.sp());
        EXPECT(0x8931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8930));
        // 0A 0256
        gbc.setState(0x7256, 0x35ed, 0xb520, 0x45f7, 0x75a3, 0x805a, 0x1, 0x0);
        gbc.writeMem(0x45f7, { 0xf9 });
        gbc.writeMem(0x7256, { 0xa });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x35ed, gbc.sp());
        EXPECT(0x7257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0257
        gbc.setState(0x4f1a, 0x77bf, 0xdc80, 0x6357, 0x348, 0x46bf, 0x1, 0x1);
        gbc.writeMem(0x4f1a, { 0xa });
        gbc.writeMem(0x6357, { 0x75 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x77bf, gbc.sp());
        EXPECT(0x4f1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0258
        gbc.setState(0x6d77, 0xaf22, 0xc8e0, 0x14cd, 0xaab1, 0x93f8, 0x0, 0x0);
        gbc.writeMem(0x14cd, { 0x37 });
        gbc.writeMem(0x6d77, { 0xa });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xaf22, gbc.sp());
        EXPECT(0x6d78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0259
        gbc.setState(0x6d3e, 0xb3ec, 0x6140, 0x3cfa, 0xf663, 0x350e, 0x1, 0x0);
        gbc.writeMem(0x3cfa, { 0xeb });
        gbc.writeMem(0x6d3e, { 0xa });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb3ec, gbc.sp());
        EXPECT(0x6d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 025A
        gbc.setState(0x3e5c, 0xab14, 0xd980, 0x1756, 0x8560, 0x7168, 0x1, 0x1);
        gbc.writeMem(0x1756, { 0x1d });
        gbc.writeMem(0x3e5c, { 0xa });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xab14, gbc.sp());
        EXPECT(0x3e5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 025D
        gbc.setState(0x50f, 0x5f50, 0xe5d0, 0x240f, 0x54e4, 0xed2e, 0x1, 0x0);
        gbc.writeMem(0x50f, { 0xa });
        gbc.writeMem(0x240f, { 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5f50, gbc.sp());
        EXPECT(0x510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 025E
        gbc.setState(0x6dbf, 0x301a, 0xaa10, 0xc9d1, 0xc089, 0x4fa2, 0x1, 0x0);
        gbc.writeMem(0x6dbf, { 0xa });
        gbc.writeMem(0xc9d1, { 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x301a, gbc.sp());
        EXPECT(0x6dc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xc9d1));
        // 0A 025F
        gbc.setState(0x4791, 0xbe23, 0xf950, 0xc21d, 0x4362, 0x2bc2, 0x0, 0x1);
        gbc.writeMem(0x4791, { 0xa });
        gbc.writeMem(0xc21d, { 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xbe23, gbc.sp());
        EXPECT(0x4792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xc21d));
        // 0A 0260
        gbc.setState(0x2bae, 0x1bbb, 0xa780, 0xbe3b, 0xaa3, 0xdab3, 0x0, 0x0);
        gbc.writeMem(0x2bae, { 0xa });
        gbc.writeMem(0xbe3b, { 0x4d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1bbb, gbc.sp());
        EXPECT(0x2baf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbe3b));
        // 0A 0261
        gbc.setState(0x1957, 0x4e24, 0xbfc0, 0x4b23, 0x8c14, 0x7778, 0x0, 0x1);
        gbc.writeMem(0x1957, { 0xa });
        gbc.writeMem(0x4b23, { 0x68 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4e24, gbc.sp());
        EXPECT(0x1958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0262
        gbc.setState(0xa325, 0x551a, 0xade0, 0x1499, 0x3c25, 0xefd8, 0x1, 0x0);
        gbc.writeMem(0x1499, { 0xb3 });
        gbc.writeMem(0xa325, { 0xa });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x551a, gbc.sp());
        EXPECT(0xa326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa325));
        // 0A 0263
        gbc.setState(0x6f25, 0x499b, 0x1e50, 0x7f51, 0xf08b, 0x7afe, 0x0, 0x1);
        gbc.writeMem(0x6f25, { 0xa });
        gbc.writeMem(0x7f51, { 0x5a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x499b, gbc.sp());
        EXPECT(0x6f26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0265
        gbc.setState(0x3f0a, 0xd98b, 0xca80, 0xd533, 0xffd3, 0xd912, 0x1, 0x1);
        gbc.writeMem(0x3f0a, { 0xa });
        gbc.writeMem(0xd533, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd98b, gbc.sp());
        EXPECT(0x3f0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd533));
        // 0A 0266
        gbc.setState(0x904c, 0xfa57, 0x4380, 0xc56e, 0xe7d9, 0x4393, 0x1, 0x0);
        gbc.writeMem(0x904c, { 0xa });
        gbc.writeMem(0xc56e, { 0xd1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xfa57, gbc.sp());
        EXPECT(0x904d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x904c));
        EXPECT(0xd1, gbc.readMem(0xc56e));
        // 0A 0267
        gbc.setState(0x78ce, 0x800d, 0x7a60, 0xad8d, 0x352e, 0x2c87, 0x1, 0x1);
        gbc.writeMem(0x78ce, { 0xa });
        gbc.writeMem(0xad8d, { 0x64 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x800d, gbc.sp());
        EXPECT(0x78cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xad8d));
        // 0A 0268
        gbc.setState(0xaf39, 0x9ee6, 0x9d30, 0xb6a, 0x6cc3, 0xf9bc, 0x0, 0x1);
        gbc.writeMem(0xb6a, { 0xeb });
        gbc.writeMem(0xaf39, { 0xa });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9ee6, gbc.sp());
        EXPECT(0xaf3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xaf39));
        // 0A 0269
        gbc.setState(0xdfff, 0x21e6, 0xb230, 0x425c, 0x2ea8, 0x4d81, 0x0, 0x0);
        gbc.writeMem(0x425c, { 0x99 });
        gbc.writeMem(0xdfff, { 0xa });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x21e6, gbc.sp());
        EXPECT(0xe000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xdfff));
        // 0A 026A
        gbc.setState(0x4213, 0x7208, 0x6e30, 0x90b6, 0x458, 0xe00b, 0x1, 0x1);
        gbc.writeMem(0x4213, { 0xa });
        gbc.writeMem(0x90b6, { 0x40 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7208, gbc.sp());
        EXPECT(0x4214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x90b6));
        // 0A 026B
        gbc.setState(0xdf90, 0x8229, 0xad30, 0xfd6, 0x854b, 0x4bf6, 0x0, 0x1);
        gbc.writeMem(0xfd6, { 0x80 });
        gbc.writeMem(0xdf90, { 0xa });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8229, gbc.sp());
        EXPECT(0xdf91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xdf90));
        // 0A 026C
        gbc.setState(0x37c, 0xda96, 0xfd80, 0xdedd, 0x7be4, 0x66a6, 0x1, 0x1);
        gbc.writeMem(0x37c, { 0xa });
        gbc.writeMem(0xdedd, { 0x45 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xda96, gbc.sp());
        EXPECT(0x37d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xdedd));
        // 0A 026D
        gbc.setState(0x24f0, 0xd87e, 0x71c0, 0xe787, 0x5e00, 0xc0a7, 0x1, 0x0);
        gbc.writeMem(0x24f0, { 0xa });
        gbc.writeMem(0xe787, { 0x8e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd87e, gbc.sp());
        EXPECT(0x24f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xe787));
        // 0A 026E
        gbc.setState(0xb333, 0x4aea, 0xbe40, 0xaac7, 0x6f21, 0xbd9e, 0x0, 0x1);
        gbc.writeMem(0xaac7, { 0x82 });
        gbc.writeMem(0xb333, { 0xa });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4aea, gbc.sp());
        EXPECT(0xb334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xaac7));
        EXPECT(0xa, gbc.readMem(0xb333));
        // 0A 026F
        gbc.setState(0xe7d8, 0x5c5c, 0x2130, 0x7952, 0x4f84, 0x8f9f, 0x0, 0x1);
        gbc.writeMem(0x7952, { 0x4c });
        gbc.writeMem(0xe7d8, { 0xa });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5c5c, gbc.sp());
        EXPECT(0xe7d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xe7d8));
        // 0A 0270
        gbc.setState(0x48a9, 0x5ac9, 0xd400, 0x3d5c, 0xef12, 0xc6c1, 0x0, 0x0);
        gbc.writeMem(0x3d5c, { 0x9a });
        gbc.writeMem(0x48a9, { 0xa });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5ac9, gbc.sp());
        EXPECT(0x48aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0272
        gbc.setState(0x7fef, 0xb389, 0x61a0, 0x32db, 0x9db2, 0xbc31, 0x0, 0x0);
        gbc.writeMem(0x32db, { 0x64 });
        gbc.writeMem(0x7fef, { 0xa });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb389, gbc.sp());
        EXPECT(0x7ff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0273
        gbc.setState(0xcb9e, 0x6d7e, 0x51a0, 0xd1fd, 0x1393, 0x41b3, 0x0, 0x0);
        gbc.writeMem(0xcb9e, { 0xa });
        gbc.writeMem(0xd1fd, { 0x57 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6d7e, gbc.sp());
        EXPECT(0xcb9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xcb9e));
        EXPECT(0x57, gbc.readMem(0xd1fd));
        // 0A 0274
        gbc.setState(0x616a, 0x4811, 0x7860, 0xe9f9, 0x242e, 0x63bd, 0x1, 0x1);
        gbc.writeMem(0x616a, { 0xa });
        gbc.writeMem(0xe9f9, { 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4811, gbc.sp());
        EXPECT(0x616b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe9f9));
        // 0A 0276
        gbc.setState(0xe6cc, 0x821, 0x3f0, 0x1c39, 0xf4ce, 0x9865, 0x1, 0x0);
        gbc.writeMem(0x1c39, { 0xb0 });
        gbc.writeMem(0xe6cc, { 0xa });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x821, gbc.sp());
        EXPECT(0xe6cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xe6cc));
        // 0A 0277
        gbc.setState(0xb958, 0xf117, 0xf6c0, 0xd1db, 0xae95, 0xc170, 0x1, 0x0);
        gbc.writeMem(0xb958, { 0xa });
        gbc.writeMem(0xd1db, { 0xaf });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf117, gbc.sp());
        EXPECT(0xb959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb958));
        EXPECT(0xaf, gbc.readMem(0xd1db));
        // 0A 0278
        gbc.setState(0x4993, 0xe9a2, 0x3400, 0x462a, 0x687d, 0x5b45, 0x1, 0x1);
        gbc.writeMem(0x462a, { 0x26 });
        gbc.writeMem(0x4993, { 0xa });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe9a2, gbc.sp());
        EXPECT(0x4994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0279
        gbc.setState(0xfbf, 0x9898, 0x40c0, 0xd6bc, 0x7b8e, 0xfc01, 0x0, 0x0);
        gbc.writeMem(0xfbf, { 0xa });
        gbc.writeMem(0xd6bc, { 0x23 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9898, gbc.sp());
        EXPECT(0xfc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xd6bc));
        // 0A 027A
        gbc.setState(0x48ca, 0x56bc, 0xe8c0, 0x1b61, 0x5574, 0x232d, 0x0, 0x0);
        gbc.writeMem(0x1b61, { 0x13 });
        gbc.writeMem(0x48ca, { 0xa });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x56bc, gbc.sp());
        EXPECT(0x48cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 027B
        gbc.setState(0x22b6, 0x84cf, 0x8890, 0xaad8, 0xc225, 0xaf0a, 0x1, 0x0);
        gbc.writeMem(0x22b6, { 0xa });
        gbc.writeMem(0xaad8, { 0xd9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x84cf, gbc.sp());
        EXPECT(0x22b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xaad8));
        // 0A 027C
        gbc.setState(0x993d, 0xb6c, 0x90e0, 0xf9d9, 0xafc2, 0x549f, 0x1, 0x1);
        gbc.writeMem(0x993d, { 0xa });
        gbc.writeMem(0xf9d9, { 0xc2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb6c, gbc.sp());
        EXPECT(0x993e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x993d));
        EXPECT(0xc2, gbc.readMem(0xf9d9));
        // 0A 027D
        gbc.setState(0x7d62, 0xae01, 0xf150, 0x82c3, 0xcf2f, 0x498e, 0x1, 0x1);
        gbc.writeMem(0x7d62, { 0xa });
        gbc.writeMem(0x82c3, { 0xe5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xae01, gbc.sp());
        EXPECT(0x7d63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x82c3));
        // 0A 027E
        gbc.setState(0x473b, 0x4e56, 0xa070, 0x3b4, 0x503, 0xad25, 0x0, 0x1);
        gbc.writeMem(0x3b4, { 0x96 });
        gbc.writeMem(0x473b, { 0xa });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4e56, gbc.sp());
        EXPECT(0x473c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 027F
        gbc.setState(0x6c4, 0xe917, 0xd950, 0xa13a, 0xf021, 0xda8f, 0x1, 0x1);
        gbc.writeMem(0x6c4, { 0xa });
        gbc.writeMem(0xa13a, { 0xd1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe917, gbc.sp());
        EXPECT(0x6c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xa13a));
        // 0A 0280
        gbc.setState(0x7b3a, 0xcffb, 0x9e20, 0xa484, 0x365e, 0x3810, 0x0, 0x0);
        gbc.writeMem(0x7b3a, { 0xa });
        gbc.writeMem(0xa484, { 0xac });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcffb, gbc.sp());
        EXPECT(0x7b3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa484));
        // 0A 0281
        gbc.setState(0x5268, 0xb7e3, 0x8980, 0x508b, 0xfd8a, 0x9c00, 0x1, 0x1);
        gbc.writeMem(0x508b, { 0xa7 });
        gbc.writeMem(0x5268, { 0xa });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb7e3, gbc.sp());
        EXPECT(0x5269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0282
        gbc.setState(0xc6fa, 0x6ded, 0x6f0, 0x2bb6, 0x7d37, 0xb53, 0x1, 0x1);
        gbc.writeMem(0x2bb6, { 0x51 });
        gbc.writeMem(0xc6fa, { 0xa });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6ded, gbc.sp());
        EXPECT(0xc6fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc6fa));
        // 0A 0283
        gbc.setState(0x5de7, 0x38e9, 0x8a20, 0x34c2, 0x6b4, 0x63a7, 0x0, 0x1);
        gbc.writeMem(0x34c2, { 0x39 });
        gbc.writeMem(0x5de7, { 0xa });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x38e9, gbc.sp());
        EXPECT(0x5de8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0284
        gbc.setState(0x3a9e, 0xaa3b, 0x7830, 0x61e3, 0x873, 0x7978, 0x0, 0x0);
        gbc.writeMem(0x3a9e, { 0xa });
        gbc.writeMem(0x61e3, { 0xb3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xaa3b, gbc.sp());
        EXPECT(0x3a9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0285
        gbc.setState(0xa426, 0x2979, 0xd3b0, 0xaab1, 0x1dda, 0xb6d3, 0x0, 0x0);
        gbc.writeMem(0xa426, { 0xa });
        gbc.writeMem(0xaab1, { 0xb6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2979, gbc.sp());
        EXPECT(0xa427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa426));
        EXPECT(0xb6, gbc.readMem(0xaab1));
        // 0A 0286
        gbc.setState(0x7c9d, 0xfb39, 0xae80, 0xd96c, 0xbe5b, 0xbab7, 0x0, 0x0);
        gbc.writeMem(0x7c9d, { 0xa });
        gbc.writeMem(0xd96c, { 0xb4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xfb39, gbc.sp());
        EXPECT(0x7c9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xd96c));
        // 0A 0287
        gbc.setState(0xc900, 0xc4d4, 0xbfd0, 0x9a1a, 0x10f6, 0xeecc, 0x1, 0x1);
        gbc.writeMem(0x9a1a, { 0xb9 });
        gbc.writeMem(0xc900, { 0xa });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc4d4, gbc.sp());
        EXPECT(0xc901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9a1a));
        EXPECT(0xa, gbc.readMem(0xc900));
        // 0A 0289
        gbc.setState(0x64e5, 0xaafc, 0x7c50, 0x17b3, 0x6288, 0x947c, 0x1, 0x0);
        gbc.writeMem(0x17b3, { 0x68 });
        gbc.writeMem(0x64e5, { 0xa });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xaafc, gbc.sp());
        EXPECT(0x64e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 028A
        gbc.setState(0xd72f, 0xc700, 0x8f20, 0x9eb3, 0xb1d, 0x6d96, 0x0, 0x1);
        gbc.writeMem(0x9eb3, { 0xcd });
        gbc.writeMem(0xd72f, { 0xa });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc700, gbc.sp());
        EXPECT(0xd730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0x9eb3));
        EXPECT(0xa, gbc.readMem(0xd72f));
        // 0A 028B
        gbc.setState(0x88b1, 0xa208, 0x7f20, 0x1007, 0x98ff, 0x71e5, 0x1, 0x0);
        gbc.writeMem(0x1007, { 0x88 });
        gbc.writeMem(0x88b1, { 0xa });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa208, gbc.sp());
        EXPECT(0x88b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x88b1));
        // 0A 028C
        gbc.setState(0xc587, 0x48d, 0x8e70, 0xbc07, 0x3fd1, 0xd8be, 0x1, 0x1);
        gbc.writeMem(0xbc07, { 0x2c });
        gbc.writeMem(0xc587, { 0xa });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x48d, gbc.sp());
        EXPECT(0xc588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xbc07));
        EXPECT(0xa, gbc.readMem(0xc587));
        // 0A 028D
        gbc.setState(0x210f, 0x1a4c, 0xb2a0, 0x1907, 0x8618, 0x6442, 0x0, 0x1);
        gbc.writeMem(0x1907, { 0x77 });
        gbc.writeMem(0x210f, { 0xa });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1a4c, gbc.sp());
        EXPECT(0x2110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 028E
        gbc.setState(0x87a4, 0x906c, 0x6850, 0x4698, 0x802a, 0x6f3a, 0x0, 0x1);
        gbc.writeMem(0x4698, { 0x96 });
        gbc.writeMem(0x87a4, { 0xa });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x906c, gbc.sp());
        EXPECT(0x87a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x87a4));
        // 0A 028F
        gbc.setState(0x7aa2, 0x618b, 0x4c60, 0x1cf8, 0x8b95, 0x3877, 0x1, 0x1);
        gbc.writeMem(0x1cf8, { 0x10 });
        gbc.writeMem(0x7aa2, { 0xa });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x618b, gbc.sp());
        EXPECT(0x7aa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0290
        gbc.setState(0xa5d3, 0x49a, 0x7850, 0x99a, 0x4f54, 0xa6ba, 0x0, 0x0);
        gbc.writeMem(0x99a, { 0xf6 });
        gbc.writeMem(0xa5d3, { 0xa });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x49a, gbc.sp());
        EXPECT(0xa5d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa5d3));
        // 0A 0291
        gbc.setState(0xba4d, 0x63b8, 0x40f0, 0xdfa1, 0x7639, 0x89f0, 0x0, 0x0);
        gbc.writeMem(0xba4d, { 0xa });
        gbc.writeMem(0xdfa1, { 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x63b8, gbc.sp());
        EXPECT(0xba4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xba4d));
        EXPECT(0x21, gbc.readMem(0xdfa1));
        // 0A 0292
        gbc.setState(0xaac3, 0xef1f, 0xb740, 0x48d1, 0xf19d, 0xbb8a, 0x1, 0x1);
        gbc.writeMem(0x48d1, { 0x98 });
        gbc.writeMem(0xaac3, { 0xa });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xef1f, gbc.sp());
        EXPECT(0xaac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xaac3));
        // 0A 0294
        gbc.setState(0x1cc2, 0x6f67, 0x8060, 0xcff3, 0x7570, 0xcc50, 0x0, 0x1);
        gbc.writeMem(0x1cc2, { 0xa });
        gbc.writeMem(0xcff3, { 0x1b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6f67, gbc.sp());
        EXPECT(0x1cc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xcff3));
        // 0A 0295
        gbc.setState(0x8596, 0x873b, 0x4d0, 0x969c, 0xe630, 0xd3c, 0x1, 0x1);
        gbc.writeMem(0x8596, { 0xa });
        gbc.writeMem(0x969c, { 0x60 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x873b, gbc.sp());
        EXPECT(0x8597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8596));
        EXPECT(0x60, gbc.readMem(0x969c));
        // 0A 0297
        gbc.setState(0xb5de, 0x7dac, 0x70d0, 0x9d11, 0x7c0e, 0x2ae7, 0x1, 0x0);
        gbc.writeMem(0x9d11, { 0x97 });
        gbc.writeMem(0xb5de, { 0xa });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7dac, gbc.sp());
        EXPECT(0xb5df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9d11));
        EXPECT(0xa, gbc.readMem(0xb5de));
        // 0A 0298
        gbc.setState(0xac3c, 0xd98e, 0x95d0, 0x93dc, 0x1dad, 0x5f6b, 0x1, 0x1);
        gbc.writeMem(0x93dc, { 0xe3 });
        gbc.writeMem(0xac3c, { 0xa });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd98e, gbc.sp());
        EXPECT(0xac3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x93dc));
        EXPECT(0xa, gbc.readMem(0xac3c));
        // 0A 0299
        gbc.setState(0x71cb, 0x4c34, 0x3630, 0x3a6c, 0x7074, 0x9741, 0x1, 0x1);
        gbc.writeMem(0x3a6c, { 0xd });
        gbc.writeMem(0x71cb, { 0xa });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4c34, gbc.sp());
        EXPECT(0x71cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 029A
        gbc.setState(0x1f0a, 0x5fbf, 0x630, 0xe87a, 0xe8a8, 0x4195, 0x0, 0x0);
        gbc.writeMem(0x1f0a, { 0xa });
        gbc.writeMem(0xe87a, { 0x4b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5fbf, gbc.sp());
        EXPECT(0x1f0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe87a));
        // 0A 029C
        gbc.setState(0x5bc8, 0xf3df, 0xc8c0, 0x5a8b, 0x8e1a, 0x726e, 0x0, 0x1);
        gbc.writeMem(0x5a8b, { 0x4 });
        gbc.writeMem(0x5bc8, { 0xa });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf3df, gbc.sp());
        EXPECT(0x5bc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 029D
        gbc.setState(0x4ff8, 0x7213, 0x8850, 0xb8f2, 0xc54b, 0xc65f, 0x0, 0x0);
        gbc.writeMem(0x4ff8, { 0xa });
        gbc.writeMem(0xb8f2, { 0x4d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7213, gbc.sp());
        EXPECT(0x4ff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb8f2));
        // 0A 029E
        gbc.setState(0x1318, 0x2983, 0x6fa0, 0xae99, 0xe4ac, 0xb804, 0x1, 0x0);
        gbc.writeMem(0x1318, { 0xa });
        gbc.writeMem(0xae99, { 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2983, gbc.sp());
        EXPECT(0x1319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xae99));
        // 0A 029F
        gbc.setState(0x740f, 0x8b16, 0xee70, 0x5dac, 0x4e26, 0xc7f3, 0x1, 0x1);
        gbc.writeMem(0x5dac, { 0x14 });
        gbc.writeMem(0x740f, { 0xa });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8b16, gbc.sp());
        EXPECT(0x7410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 02A0
        gbc.setState(0x90af, 0x691f, 0xc420, 0xef7, 0xf0d, 0x1cd3, 0x0, 0x1);
        gbc.writeMem(0xef7, { 0x2b });
        gbc.writeMem(0x90af, { 0xa });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x691f, gbc.sp());
        EXPECT(0x90b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x90af));
        // 0A 02A1
        gbc.setState(0xc2b2, 0x407c, 0x68f0, 0x4d8e, 0xb19b, 0x5a10, 0x0, 0x0);
        gbc.writeMem(0x4d8e, { 0xe7 });
        gbc.writeMem(0xc2b2, { 0xa });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x407c, gbc.sp());
        EXPECT(0xc2b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc2b2));
        // 0A 02A2
        gbc.setState(0x57a2, 0xc119, 0x7540, 0x9c6a, 0xedf5, 0x4c8d, 0x1, 0x1);
        gbc.writeMem(0x57a2, { 0xa });
        gbc.writeMem(0x9c6a, { 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc119, gbc.sp());
        EXPECT(0x57a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9c6a));
        // 0A 02A3
        gbc.setState(0x2f6, 0x4363, 0x3cf0, 0x7ce0, 0xb1bf, 0xcf2d, 0x0, 0x1);
        gbc.writeMem(0x2f6, { 0xa });
        gbc.writeMem(0x7ce0, { 0x1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4363, gbc.sp());
        EXPECT(0x2f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 02A4
        gbc.setState(0xa1e6, 0xf7bd, 0x27c0, 0xd329, 0x1b3b, 0x1bd9, 0x0, 0x1);
        gbc.writeMem(0xa1e6, { 0xa });
        gbc.writeMem(0xd329, { 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf7bd, gbc.sp());
        EXPECT(0xa1e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa1e6));
        EXPECT(0x8c, gbc.readMem(0xd329));
        // 0A 02A5
        gbc.setState(0x1417, 0xe7c3, 0x34d0, 0x5ede, 0x630f, 0xb196, 0x1, 0x1);
        gbc.writeMem(0x1417, { 0xa });
        gbc.writeMem(0x5ede, { 0xc2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe7c3, gbc.sp());
        EXPECT(0x1418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 02A6
        gbc.setState(0x8f66, 0xdf2f, 0x2720, 0xf5c1, 0x2f75, 0xb3ba, 0x0, 0x1);
        gbc.writeMem(0x8f66, { 0xa });
        gbc.writeMem(0xf5c1, { 0x8e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xdf2f, gbc.sp());
        EXPECT(0x8f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8f66));
        EXPECT(0x8e, gbc.readMem(0xf5c1));
        // 0A 02A7
        gbc.setState(0x731, 0xf433, 0x23d0, 0xbd33, 0x5fd7, 0x500d, 0x1, 0x1);
        gbc.writeMem(0x731, { 0xa });
        gbc.writeMem(0xbd33, { 0xe3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf433, gbc.sp());
        EXPECT(0x732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xbd33));
        // 0A 02A8
        gbc.setState(0x5753, 0x5d93, 0x3cb0, 0xbd26, 0xdc6b, 0x1f24, 0x1, 0x1);
        gbc.writeMem(0x5753, { 0xa });
        gbc.writeMem(0xbd26, { 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5d93, gbc.sp());
        EXPECT(0x5754, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xbd26));
        // 0A 02A9
        gbc.setState(0x90a7, 0x896f, 0xccd0, 0x36a, 0xe85d, 0x3437, 0x1, 0x1);
        gbc.writeMem(0x36a, { 0x7a });
        gbc.writeMem(0x90a7, { 0xa });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x896f, gbc.sp());
        EXPECT(0x90a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x90a7));
        // 0A 02AA
        gbc.setState(0x3533, 0x6518, 0xa5a0, 0xb683, 0x81ee, 0x3d25, 0x0, 0x1);
        gbc.writeMem(0x3533, { 0xa });
        gbc.writeMem(0xb683, { 0x31 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6518, gbc.sp());
        EXPECT(0x3534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb683));
        // 0A 02AB
        gbc.setState(0x214d, 0x25a1, 0xf960, 0x5693, 0xec2b, 0x91, 0x1, 0x0);
        gbc.writeMem(0x214d, { 0xa });
        gbc.writeMem(0x5693, { 0x58 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x25a1, gbc.sp());
        EXPECT(0x214e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 02AC
        gbc.setState(0x9656, 0xf75, 0xaf0, 0x78d0, 0x9306, 0x1dae, 0x1, 0x0);
        gbc.writeMem(0x78d0, { 0xae });
        gbc.writeMem(0x9656, { 0xa });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf75, gbc.sp());
        EXPECT(0x9657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9656));
        // 0A 02AD
        gbc.setState(0xc243, 0x24e0, 0xeaf0, 0x9a06, 0x15eb, 0x39d2, 0x0, 0x1);
        gbc.writeMem(0x9a06, { 0xe7 });
        gbc.writeMem(0xc243, { 0xa });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x24e0, gbc.sp());
        EXPECT(0xc244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x9a06));
        EXPECT(0xa, gbc.readMem(0xc243));
        // 0A 02AE
        gbc.setState(0x11ca, 0xccb3, 0xa990, 0xb7ed, 0xf776, 0xec21, 0x1, 0x1);
        gbc.writeMem(0x11ca, { 0xa });
        gbc.writeMem(0xb7ed, { 0xaf });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xccb3, gbc.sp());
        EXPECT(0x11cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xb7ed));
        // 0A 02AF
        gbc.setState(0xdb6b, 0x599e, 0x73f0, 0x667e, 0x8e00, 0x3c7c, 0x1, 0x0);
        gbc.writeMem(0x667e, { 0x48 });
        gbc.writeMem(0xdb6b, { 0xa });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x599e, gbc.sp());
        EXPECT(0xdb6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xdb6b));
        // 0A 02B0
        gbc.setState(0x7a61, 0xeb73, 0xe6f0, 0xf87f, 0xcc5f, 0x60b2, 0x1, 0x1);
        gbc.writeMem(0x7a61, { 0xa });
        gbc.writeMem(0xf87f, { 0x99 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xeb73, gbc.sp());
        EXPECT(0x7a62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xf87f));
        // 0A 02B1
        gbc.setState(0x46c8, 0xae82, 0x7600, 0x8468, 0x6d19, 0xe958, 0x1, 0x0);
        gbc.writeMem(0x46c8, { 0xa });
        gbc.writeMem(0x8468, { 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xae82, gbc.sp());
        EXPECT(0x46c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8468));
        // 0A 02B2
        gbc.setState(0xa7d, 0xeebc, 0x61a0, 0x27c9, 0xfc71, 0x2f79, 0x1, 0x0);
        gbc.writeMem(0xa7d, { 0xa });
        gbc.writeMem(0x27c9, { 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xeebc, gbc.sp());
        EXPECT(0xa7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 02B3
        gbc.setState(0xa09d, 0x50d9, 0xe7e0, 0x5309, 0x7d83, 0x2e7a, 0x1, 0x0);
        gbc.writeMem(0x5309, { 0x80 });
        gbc.writeMem(0xa09d, { 0xa });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x50d9, gbc.sp());
        EXPECT(0xa09e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa09d));
        // 0A 02B4
        gbc.setState(0xbc07, 0x5adc, 0xbd80, 0x7f94, 0x58f9, 0x8054, 0x0, 0x1);
        gbc.writeMem(0x7f94, { 0x3a });
        gbc.writeMem(0xbc07, { 0xa });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5adc, gbc.sp());
        EXPECT(0xbc08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xbc07));
        // 0A 02B5
        gbc.setState(0x3eb2, 0xef25, 0x1ad0, 0xeff1, 0xcabe, 0x935d, 0x1, 0x0);
        gbc.writeMem(0x3eb2, { 0xa });
        gbc.writeMem(0xeff1, { 0x8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xef25, gbc.sp());
        EXPECT(0x3eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xeff1));
        // 0A 02B6
        gbc.setState(0x8725, 0xdca2, 0x1870, 0x8d57, 0xc538, 0x8d61, 0x0, 0x0);
        gbc.writeMem(0x8725, { 0xa });
        gbc.writeMem(0x8d57, { 0xc5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xdca2, gbc.sp());
        EXPECT(0x8726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8725));
        EXPECT(0xc5, gbc.readMem(0x8d57));
        // 0A 02B7
        gbc.setState(0x6b07, 0x241, 0x44c0, 0xbdd8, 0x9ff4, 0x913, 0x0, 0x0);
        gbc.writeMem(0x6b07, { 0xa });
        gbc.writeMem(0xbdd8, { 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x241, gbc.sp());
        EXPECT(0x6b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbdd8));
        // 0A 02B8
        gbc.setState(0xa94e, 0x696a, 0x3eb0, 0x767e, 0xb9cf, 0xc1ff, 0x1, 0x0);
        gbc.writeMem(0x767e, { 0x91 });
        gbc.writeMem(0xa94e, { 0xa });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x696a, gbc.sp());
        EXPECT(0xa94f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa94e));
        // 0A 02B9
        gbc.setState(0x2cfc, 0xd61a, 0xb9b0, 0x9d4c, 0xe0d, 0xfd6b, 0x1, 0x0);
        gbc.writeMem(0x2cfc, { 0xa });
        gbc.writeMem(0x9d4c, { 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd61a, gbc.sp());
        EXPECT(0x2cfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9d4c));
        // 0A 02BA
        gbc.setState(0xc1db, 0x9cd4, 0x1920, 0xe8c6, 0x9bc6, 0x90f4, 0x1, 0x0);
        gbc.writeMem(0xc1db, { 0xa });
        gbc.writeMem(0xe8c6, { 0x8b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9cd4, gbc.sp());
        EXPECT(0xc1dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc1db));
        EXPECT(0x8b, gbc.readMem(0xe8c6));
        // 0A 02BB
        gbc.setState(0x133f, 0xf910, 0xc30, 0x5f3e, 0x486e, 0x80d3, 0x0, 0x0);
        gbc.writeMem(0x133f, { 0xa });
        gbc.writeMem(0x5f3e, { 0xaa });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf910, gbc.sp());
        EXPECT(0x1340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 02BC
        gbc.setState(0x4a8c, 0x6ae, 0xb850, 0x7a88, 0xee84, 0xc351, 0x1, 0x0);
        gbc.writeMem(0x4a8c, { 0xa });
        gbc.writeMem(0x7a88, { 0x4b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6ae, gbc.sp());
        EXPECT(0x4a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 02BD
        gbc.setState(0x6c32, 0xc074, 0x9230, 0x11c3, 0x3b78, 0x80f6, 0x1, 0x0);
        gbc.writeMem(0x11c3, { 0xef });
        gbc.writeMem(0x6c32, { 0xa });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc074, gbc.sp());
        EXPECT(0x6c33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 02BE
        gbc.setState(0xb49f, 0xdd25, 0xffc0, 0x41cb, 0x4e36, 0x8c19, 0x1, 0x0);
        gbc.writeMem(0x41cb, { 0xd7 });
        gbc.writeMem(0xb49f, { 0xa });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdd25, gbc.sp());
        EXPECT(0xb4a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb49f));
        // 0A 02BF
        gbc.setState(0x6182, 0x5aa7, 0x4790, 0xe760, 0xd7ae, 0x2916, 0x1, 0x0);
        gbc.writeMem(0x6182, { 0xa });
        gbc.writeMem(0xe760, { 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5aa7, gbc.sp());
        EXPECT(0x6183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe760));
        // 0A 02C0
        gbc.setState(0x77b, 0x17e2, 0x4e60, 0xacd3, 0xcacc, 0x6751, 0x1, 0x0);
        gbc.writeMem(0x77b, { 0xa });
        gbc.writeMem(0xacd3, { 0xee });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x17e2, gbc.sp());
        EXPECT(0x77c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xacd3));
        // 0A 02C1
        gbc.setState(0x6edb, 0x4d71, 0x4250, 0x7574, 0xd907, 0xbe73, 0x1, 0x1);
        gbc.writeMem(0x6edb, { 0xa });
        gbc.writeMem(0x7574, { 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4d71, gbc.sp());
        EXPECT(0x6edc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 02C2
        gbc.setState(0x33df, 0x56fb, 0x8f90, 0x4a72, 0xb844, 0x4d0e, 0x1, 0x1);
        gbc.writeMem(0x33df, { 0xa });
        gbc.writeMem(0x4a72, { 0xee });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x56fb, gbc.sp());
        EXPECT(0x33e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 02C3
        gbc.setState(0x8059, 0xcc40, 0x88d0, 0x4205, 0x876c, 0x4d7c, 0x0, 0x1);
        gbc.writeMem(0x4205, { 0x76 });
        gbc.writeMem(0x8059, { 0xa });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xcc40, gbc.sp());
        EXPECT(0x805a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8059));
        // 0A 02C4
        gbc.setState(0xd805, 0x50e3, 0x69f0, 0x8f57, 0xe7bd, 0x4b58, 0x0, 0x1);
        gbc.writeMem(0x8f57, { 0xb9 });
        gbc.writeMem(0xd805, { 0xa });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x50e3, gbc.sp());
        EXPECT(0xd806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8f57));
        EXPECT(0xa, gbc.readMem(0xd805));
        // 0A 02C5
        gbc.setState(0x61e0, 0x3fa6, 0x8f80, 0x4752, 0xf096, 0x7c0e, 0x0, 0x0);
        gbc.writeMem(0x4752, { 0x58 });
        gbc.writeMem(0x61e0, { 0xa });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3fa6, gbc.sp());
        EXPECT(0x61e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 02C6
        gbc.setState(0xd9a, 0xab7c, 0x6260, 0xea0b, 0xb5b5, 0xee81, 0x1, 0x0);
        gbc.writeMem(0xd9a, { 0xa });
        gbc.writeMem(0xea0b, { 0xe3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xab7c, gbc.sp());
        EXPECT(0xd9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xea0b));
        // 0A 02C7
        gbc.setState(0x950f, 0x108, 0x5310, 0xbe3b, 0x776d, 0xa5d9, 0x0, 0x1);
        gbc.writeMem(0x950f, { 0xa });
        gbc.writeMem(0xbe3b, { 0x4d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x108, gbc.sp());
        EXPECT(0x9510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x950f));
        EXPECT(0x4d, gbc.readMem(0xbe3b));
        // 0A 02C8
        gbc.setState(0x4ed, 0x1e8, 0xee80, 0x1d2, 0x6b7c, 0xf481, 0x1, 0x1);
        gbc.writeMem(0x1d2, { 0x3a });
        gbc.writeMem(0x4ed, { 0xa });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1e8, gbc.sp());
        EXPECT(0x4ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 02C9
        gbc.setState(0x6995, 0xd9e9, 0xe080, 0xa35, 0xb782, 0x4a2, 0x0, 0x0);
        gbc.writeMem(0xa35, { 0x5d });
        gbc.writeMem(0x6995, { 0xa });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd9e9, gbc.sp());
        EXPECT(0x6996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 02CA
        gbc.setState(0x9758, 0xc85f, 0x4bd0, 0xe000, 0x245d, 0x7a7c, 0x1, 0x1);
        gbc.writeMem(0x9758, { 0xa });
        gbc.writeMem(0xe000, { 0x17 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc85f, gbc.sp());
        EXPECT(0x9759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9758));
        EXPECT(0x17, gbc.readMem(0xe000));
        // 0A 02CB
        gbc.setState(0x665b, 0xb57c, 0x4f30, 0x2ec2, 0xc95b, 0xceba, 0x1, 0x0);
        gbc.writeMem(0x2ec2, { 0xce });
        gbc.writeMem(0x665b, { 0xa });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb57c, gbc.sp());
        EXPECT(0x665c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 02CC
        gbc.setState(0x6f3d, 0xfa41, 0x18c0, 0x6270, 0x639a, 0x9cb6, 0x0, 0x0);
        gbc.writeMem(0x6270, { 0x30 });
        gbc.writeMem(0x6f3d, { 0xa });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xfa41, gbc.sp());
        EXPECT(0x6f3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 02CD
        gbc.setState(0xab1e, 0xf0ed, 0xebf0, 0x6a84, 0x7e4b, 0x8582, 0x0, 0x1);
        gbc.writeMem(0x6a84, { 0x17 });
        gbc.writeMem(0xab1e, { 0xa });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf0ed, gbc.sp());
        EXPECT(0xab1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xab1e));
        // 0A 02CF
        gbc.setState(0xe4c4, 0x6110, 0x72a0, 0x819a, 0x4ab9, 0x3968, 0x0, 0x1);
        gbc.writeMem(0x819a, { 0xb2 });
        gbc.writeMem(0xe4c4, { 0xa });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6110, gbc.sp());
        EXPECT(0xe4c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x819a));
        EXPECT(0xa, gbc.readMem(0xe4c4));
        // 0A 02D0
        gbc.setState(0xd05b, 0x121c, 0x79e0, 0xf82c, 0x7409, 0x4a8d, 0x1, 0x1);
        gbc.writeMem(0xd05b, { 0xa });
        gbc.writeMem(0xf82c, { 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x121c, gbc.sp());
        EXPECT(0xd05c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd05b));
        EXPECT(0xa2, gbc.readMem(0xf82c));
        // 0A 02D1
        gbc.setState(0xecc5, 0x5a33, 0x3530, 0x900f, 0x9848, 0x11fb, 0x0, 0x0);
        gbc.writeMem(0x900f, { 0x4c });
        gbc.writeMem(0xecc5, { 0xa });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5a33, gbc.sp());
        EXPECT(0xecc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x900f));
        EXPECT(0xa, gbc.readMem(0xecc5));
        // 0A 02D2
        gbc.setState(0x9202, 0x531f, 0xfa70, 0x7ca6, 0x3fb2, 0x1da2, 0x1, 0x1);
        gbc.writeMem(0x7ca6, { 0xba });
        gbc.writeMem(0x9202, { 0xa });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x531f, gbc.sp());
        EXPECT(0x9203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9202));
        // 0A 02D3
        gbc.setState(0x21cc, 0x5a85, 0x45d0, 0x6af8, 0x5868, 0x25c6, 0x0, 0x0);
        gbc.writeMem(0x21cc, { 0xa });
        gbc.writeMem(0x6af8, { 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5a85, gbc.sp());
        EXPECT(0x21cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 02D4
        gbc.setState(0x413, 0x1e36, 0x26b0, 0x1bbd, 0x6af6, 0x1ebc, 0x1, 0x1);
        gbc.writeMem(0x413, { 0xa });
        gbc.writeMem(0x1bbd, { 0x68 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1e36, gbc.sp());
        EXPECT(0x414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 02D5
        gbc.setState(0x3e91, 0x9d91, 0x1420, 0xbcb6, 0xc84, 0x6eb5, 0x0, 0x1);
        gbc.writeMem(0x3e91, { 0xa });
        gbc.writeMem(0xbcb6, { 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9d91, gbc.sp());
        EXPECT(0x3e92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbcb6));
        // 0A 02D6
        gbc.setState(0xd291, 0xf727, 0x9350, 0xa867, 0xb485, 0x9848, 0x0, 0x1);
        gbc.writeMem(0xa867, { 0x75 });
        gbc.writeMem(0xd291, { 0xa });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf727, gbc.sp());
        EXPECT(0xd292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xa867));
        EXPECT(0xa, gbc.readMem(0xd291));
        // 0A 02D7
        gbc.setState(0xd51c, 0x381b, 0xce0, 0x66ad, 0xb55d, 0x607e, 0x1, 0x0);
        gbc.writeMem(0x66ad, { 0xd2 });
        gbc.writeMem(0xd51c, { 0xa });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x381b, gbc.sp());
        EXPECT(0xd51d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd51c));
        // 0A 02D8
        gbc.setState(0x21e8, 0x24a4, 0x8210, 0xa61, 0xa32f, 0x392d, 0x0, 0x0);
        gbc.writeMem(0xa61, { 0x50 });
        gbc.writeMem(0x21e8, { 0xa });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x24a4, gbc.sp());
        EXPECT(0x21e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 02D9
        gbc.setState(0x7693, 0x9c10, 0x6060, 0xc209, 0x2cdc, 0xcf7b, 0x0, 0x0);
        gbc.writeMem(0x7693, { 0xa });
        gbc.writeMem(0xc209, { 0x1c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9c10, gbc.sp());
        EXPECT(0x7694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xc209));
        // 0A 02DA
        gbc.setState(0x6c9a, 0x9d9d, 0x5420, 0xaa4a, 0x2fbd, 0x59c4, 0x1, 0x0);
        gbc.writeMem(0x6c9a, { 0xa });
        gbc.writeMem(0xaa4a, { 0x96 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9d9d, gbc.sp());
        EXPECT(0x6c9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xaa4a));
        // 0A 02DB
        gbc.setState(0x3dc3, 0xcd80, 0xa060, 0xa258, 0x6c97, 0x7914, 0x1, 0x1);
        gbc.writeMem(0x3dc3, { 0xa });
        gbc.writeMem(0xa258, { 0xf9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xcd80, gbc.sp());
        EXPECT(0x3dc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xa258));
        // 0A 02DC
        gbc.setState(0x913f, 0x4b, 0xe9f0, 0xdb51, 0x5eb3, 0xe038, 0x1, 0x1);
        gbc.writeMem(0x913f, { 0xa });
        gbc.writeMem(0xdb51, { 0xd1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4b, gbc.sp());
        EXPECT(0x9140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x913f));
        EXPECT(0xd1, gbc.readMem(0xdb51));
        // 0A 02DD
        gbc.setState(0x56f, 0x8b40, 0xb040, 0x77c0, 0xa59d, 0xb38d, 0x1, 0x1);
        gbc.writeMem(0x56f, { 0xa });
        gbc.writeMem(0x77c0, { 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8b40, gbc.sp());
        EXPECT(0x570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 02DF
        gbc.setState(0x8269, 0x3632, 0x19e0, 0x3107, 0xaef1, 0xac10, 0x1, 0x0);
        gbc.writeMem(0x3107, { 0xba });
        gbc.writeMem(0x8269, { 0xa });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3632, gbc.sp());
        EXPECT(0x826a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8269));
        // 0A 02E0
        gbc.setState(0x7f22, 0xf19c, 0x5080, 0x75e1, 0x205b, 0xcd64, 0x0, 0x0);
        gbc.writeMem(0x75e1, { 0xd2 });
        gbc.writeMem(0x7f22, { 0xa });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf19c, gbc.sp());
        EXPECT(0x7f23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 02E1
        gbc.setState(0xef63, 0x57b, 0x620, 0x20f3, 0xe9e6, 0x8983, 0x1, 0x1);
        gbc.writeMem(0x20f3, { 0x9b });
        gbc.writeMem(0xef63, { 0xa });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x57b, gbc.sp());
        EXPECT(0xef64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xef63));
        // 0A 02E2
        gbc.setState(0xe75b, 0x3bc, 0x45a0, 0xc488, 0x535, 0xf969, 0x0, 0x0);
        gbc.writeMem(0xc488, { 0xae });
        gbc.writeMem(0xe75b, { 0xa });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3bc, gbc.sp());
        EXPECT(0xe75c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xc488));
        EXPECT(0xa, gbc.readMem(0xe75b));
        // 0A 02E3
        gbc.setState(0x2955, 0x9b60, 0xa360, 0x9cba, 0x3568, 0xb61d, 0x0, 0x1);
        gbc.writeMem(0x2955, { 0xa });
        gbc.writeMem(0x9cba, { 0xf5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9b60, gbc.sp());
        EXPECT(0x2956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x9cba));
        // 0A 02E4
        gbc.setState(0xad15, 0xee9d, 0x9340, 0xe355, 0x52f7, 0x6e8d, 0x0, 0x1);
        gbc.writeMem(0xad15, { 0xa });
        gbc.writeMem(0xe355, { 0xe9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xee9d, gbc.sp());
        EXPECT(0xad16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xad15));
        EXPECT(0xe9, gbc.readMem(0xe355));
        // 0A 02E5
        gbc.setState(0x384b, 0x6ac, 0xe70, 0x9f05, 0xfc99, 0x2560, 0x1, 0x1);
        gbc.writeMem(0x384b, { 0xa });
        gbc.writeMem(0x9f05, { 0xbb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6ac, gbc.sp());
        EXPECT(0x384c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9f05));
        // 0A 02E6
        gbc.setState(0x11d7, 0x50ce, 0xb1a0, 0x99a1, 0x50d9, 0x6420, 0x1, 0x0);
        gbc.writeMem(0x11d7, { 0xa });
        gbc.writeMem(0x99a1, { 0xd4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x50ce, gbc.sp());
        EXPECT(0x11d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x99a1));
        // 0A 02E7
        gbc.setState(0xa81, 0x2e40, 0x3850, 0xf706, 0x3824, 0xe952, 0x0, 0x0);
        gbc.writeMem(0xa81, { 0xa });
        gbc.writeMem(0xf706, { 0x55 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2e40, gbc.sp());
        EXPECT(0xa82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xf706));
        // 0A 02E8
        gbc.setState(0x9f98, 0xac4b, 0xb340, 0xb050, 0xec0f, 0xfeb9, 0x0, 0x1);
        gbc.writeMem(0x9f98, { 0xa });
        gbc.writeMem(0xb050, { 0x47 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xac4b, gbc.sp());
        EXPECT(0x9f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9f98));
        EXPECT(0x47, gbc.readMem(0xb050));
        // 0A 02E9
        gbc.setState(0x3fb4, 0x4d54, 0x4bc0, 0xb352, 0x87a4, 0x5787, 0x1, 0x1);
        gbc.writeMem(0x3fb4, { 0xa });
        gbc.writeMem(0xb352, { 0x4c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4d54, gbc.sp());
        EXPECT(0x3fb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb352));
        // 0A 02EA
        gbc.setState(0x93a6, 0x6bc8, 0x2d50, 0x5d7a, 0x212, 0xa0b4, 0x0, 0x0);
        gbc.writeMem(0x5d7a, { 0x13 });
        gbc.writeMem(0x93a6, { 0xa });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6bc8, gbc.sp());
        EXPECT(0x93a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x93a6));
        // 0A 02EB
        gbc.setState(0x44d7, 0x55ed, 0x7270, 0xbfc1, 0x32bf, 0x7c94, 0x0, 0x1);
        gbc.writeMem(0x44d7, { 0xa });
        gbc.writeMem(0xbfc1, { 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x55ed, gbc.sp());
        EXPECT(0x44d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbfc1));
        // 0A 02EC
        gbc.setState(0x6cb3, 0x55bc, 0xe890, 0xa93b, 0x7c4, 0x38c4, 0x1, 0x0);
        gbc.writeMem(0x6cb3, { 0xa });
        gbc.writeMem(0xa93b, { 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x55bc, gbc.sp());
        EXPECT(0x6cb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xa93b));
        // 0A 02ED
        gbc.setState(0x1b31, 0xa26a, 0x53a0, 0x8e3d, 0xca3e, 0x8e5a, 0x1, 0x0);
        gbc.writeMem(0x1b31, { 0xa });
        gbc.writeMem(0x8e3d, { 0x54 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa26a, gbc.sp());
        EXPECT(0x1b32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x8e3d));
        // 0A 02EE
        gbc.setState(0xa343, 0xbba, 0x9c40, 0x9811, 0xd3bf, 0x7643, 0x1, 0x0);
        gbc.writeMem(0x9811, { 0x13 });
        gbc.writeMem(0xa343, { 0xa });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbba, gbc.sp());
        EXPECT(0xa344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9811));
        EXPECT(0xa, gbc.readMem(0xa343));
        // 0A 02EF
        gbc.setState(0x52bd, 0x3c45, 0x4ca0, 0xa189, 0xdd78, 0xeac5, 0x0, 0x0);
        gbc.writeMem(0x52bd, { 0xa });
        gbc.writeMem(0xa189, { 0xcd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3c45, gbc.sp());
        EXPECT(0x52be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xa189));
        // 0A 02F0
        gbc.setState(0x2d23, 0x81de, 0x6240, 0x8171, 0xb712, 0x6aa0, 0x0, 0x1);
        gbc.writeMem(0x2d23, { 0xa });
        gbc.writeMem(0x8171, { 0x48 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x81de, gbc.sp());
        EXPECT(0x2d24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8171));
        // 0A 02F2
        gbc.setState(0xa78b, 0x9591, 0x1300, 0x77f4, 0x7b94, 0xff6e, 0x0, 0x1);
        gbc.writeMem(0x77f4, { 0x6 });
        gbc.writeMem(0xa78b, { 0xa });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9591, gbc.sp());
        EXPECT(0xa78c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa78b));
        // 0A 02F3
        gbc.setState(0x2109, 0x674d, 0xce20, 0x9800, 0xac44, 0x16fa, 0x1, 0x1);
        gbc.writeMem(0x2109, { 0xa });
        gbc.writeMem(0x9800, { 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x674d, gbc.sp());
        EXPECT(0x210a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9800));
        // 0A 02F4
        gbc.setState(0x1091, 0xaa55, 0xd470, 0xd8ae, 0xe19b, 0xa552, 0x0, 0x1);
        gbc.writeMem(0x1091, { 0xa });
        gbc.writeMem(0xd8ae, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xaa55, gbc.sp());
        EXPECT(0x1092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd8ae));
        // 0A 02F5
        gbc.setState(0x420c, 0x2233, 0xf6f0, 0x4459, 0x2c27, 0x3fdd, 0x0, 0x1);
        gbc.writeMem(0x420c, { 0xa });
        gbc.writeMem(0x4459, { 0xd3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2233, gbc.sp());
        EXPECT(0x420d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 02F6
        gbc.setState(0xe30d, 0xe0ed, 0x84f0, 0x8f3d, 0x5d6c, 0x5371, 0x0, 0x0);
        gbc.writeMem(0x8f3d, { 0x64 });
        gbc.writeMem(0xe30d, { 0xa });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe0ed, gbc.sp());
        EXPECT(0xe30e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8f3d));
        EXPECT(0xa, gbc.readMem(0xe30d));
        // 0A 02F7
        gbc.setState(0xc608, 0x4dfa, 0x9920, 0x391a, 0x869d, 0xb782, 0x0, 0x1);
        gbc.writeMem(0x391a, { 0xb4 });
        gbc.writeMem(0xc608, { 0xa });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4dfa, gbc.sp());
        EXPECT(0xc609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc608));
        // 0A 02F8
        gbc.setState(0x972b, 0x4254, 0xd1b0, 0x75fe, 0x62ad, 0xdf1b, 0x1, 0x1);
        gbc.writeMem(0x75fe, { 0x19 });
        gbc.writeMem(0x972b, { 0xa });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4254, gbc.sp());
        EXPECT(0x972c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x972b));
        // 0A 02F9
        gbc.setState(0x884b, 0x8e55, 0x9df0, 0x8e4, 0x26ee, 0xdd81, 0x0, 0x1);
        gbc.writeMem(0x8e4, { 0x52 });
        gbc.writeMem(0x884b, { 0xa });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8e55, gbc.sp());
        EXPECT(0x884c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x884b));
        // 0A 02FA
        gbc.setState(0x392f, 0x7fd2, 0xffc0, 0xe046, 0x32bb, 0x6675, 0x0, 0x1);
        gbc.writeMem(0x392f, { 0xa });
        gbc.writeMem(0xe046, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7fd2, gbc.sp());
        EXPECT(0x3930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe046));
        // 0A 02FB
        gbc.setState(0x675d, 0xb01e, 0xc730, 0xfada, 0xda40, 0x7f2c, 0x1, 0x1);
        gbc.writeMem(0x675d, { 0xa });
        gbc.writeMem(0xfada, { 0xe8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb01e, gbc.sp());
        EXPECT(0x675e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xfada));
        // 0A 02FC
        gbc.setState(0x605c, 0x5a9, 0xc9e0, 0x14e1, 0xca7e, 0xa664, 0x0, 0x1);
        gbc.writeMem(0x14e1, { 0xb5 });
        gbc.writeMem(0x605c, { 0xa });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5a9, gbc.sp());
        EXPECT(0x605d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 02FD
        gbc.setState(0x8cb7, 0x89fa, 0x2e70, 0x643c, 0xa16f, 0xe434, 0x0, 0x0);
        gbc.writeMem(0x643c, { 0xdf });
        gbc.writeMem(0x8cb7, { 0xa });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x89fa, gbc.sp());
        EXPECT(0x8cb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8cb7));
        // 0A 02FF
        gbc.setState(0x59f9, 0xaf1c, 0x3ec0, 0xf4ec, 0x4dfb, 0x1a5c, 0x0, 0x0);
        gbc.writeMem(0x59f9, { 0xa });
        gbc.writeMem(0xf4ec, { 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xaf1c, gbc.sp());
        EXPECT(0x59fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xf4ec));
        // 0A 0300
        gbc.setState(0xc281, 0xab27, 0x8800, 0x8cba, 0x255a, 0xf2bb, 0x1, 0x1);
        gbc.writeMem(0x8cba, { 0x1 });
        gbc.writeMem(0xc281, { 0xa });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xab27, gbc.sp());
        EXPECT(0xc282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x8cba));
        EXPECT(0xa, gbc.readMem(0xc281));
        // 0A 0301
        gbc.setState(0xcb68, 0x4d59, 0xb4d0, 0xaf82, 0x61a4, 0x4702, 0x1, 0x0);
        gbc.writeMem(0xaf82, { 0xfe });
        gbc.writeMem(0xcb68, { 0xa });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4d59, gbc.sp());
        EXPECT(0xcb69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xaf82));
        EXPECT(0xa, gbc.readMem(0xcb68));
        // 0A 0302
        gbc.setState(0xe791, 0x7efe, 0xe420, 0x851, 0xa3e2, 0x36fe, 0x0, 0x1);
        gbc.writeMem(0x851, { 0xbd });
        gbc.writeMem(0xe791, { 0xa });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7efe, gbc.sp());
        EXPECT(0xe792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xe791));
        // 0A 0303
        gbc.setState(0x2e19, 0xeb20, 0x3b50, 0xdc89, 0x26fa, 0xb9b, 0x1, 0x1);
        gbc.writeMem(0x2e19, { 0xa });
        gbc.writeMem(0xdc89, { 0x26 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xeb20, gbc.sp());
        EXPECT(0x2e1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xdc89));
        // 0A 0304
        gbc.setState(0xaaae, 0x47c7, 0x2b0, 0x1f96, 0x4432, 0xcaff, 0x1, 0x0);
        gbc.writeMem(0x1f96, { 0xc5 });
        gbc.writeMem(0xaaae, { 0xa });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x47c7, gbc.sp());
        EXPECT(0xaaaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xaaae));
        // 0A 0305
        gbc.setState(0xb1c5, 0x98e0, 0x6d20, 0xebcc, 0x3635, 0xb56e, 0x0, 0x0);
        gbc.writeMem(0xb1c5, { 0xa });
        gbc.writeMem(0xebcc, { 0xd3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x98e0, gbc.sp());
        EXPECT(0xb1c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb1c5));
        EXPECT(0xd3, gbc.readMem(0xebcc));
        // 0A 0306
        gbc.setState(0xdb2d, 0x9c1f, 0x180, 0x3508, 0xe5ad, 0x3337, 0x0, 0x1);
        gbc.writeMem(0x3508, { 0x6e });
        gbc.writeMem(0xdb2d, { 0xa });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9c1f, gbc.sp());
        EXPECT(0xdb2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xdb2d));
        // 0A 0307
        gbc.setState(0xcfc4, 0xeeef, 0x69e0, 0xd72f, 0x89a5, 0x847c, 0x1, 0x0);
        gbc.writeMem(0xcfc4, { 0xa });
        gbc.writeMem(0xd72f, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xeeef, gbc.sp());
        EXPECT(0xcfc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xcfc4));
        EXPECT(0xf, gbc.readMem(0xd72f));
        // 0A 0308
        gbc.setState(0x4a45, 0x96d1, 0xaa00, 0x60cb, 0xc8d, 0x8b0b, 0x0, 0x1);
        gbc.writeMem(0x4a45, { 0xa });
        gbc.writeMem(0x60cb, { 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x96d1, gbc.sp());
        EXPECT(0x4a46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0309
        gbc.setState(0x77bd, 0xcf6f, 0xccb0, 0xd7c1, 0xad9c, 0xb673, 0x1, 0x0);
        gbc.writeMem(0x77bd, { 0xa });
        gbc.writeMem(0xd7c1, { 0xcf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xcf6f, gbc.sp());
        EXPECT(0x77be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xd7c1));
        // 0A 030A
        gbc.setState(0x1f68, 0x4b62, 0x5110, 0x910c, 0x58b3, 0xbdf1, 0x1, 0x0);
        gbc.writeMem(0x1f68, { 0xa });
        gbc.writeMem(0x910c, { 0xe8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4b62, gbc.sp());
        EXPECT(0x1f69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0x910c));
        // 0A 030C
        gbc.setState(0xaa04, 0xe03c, 0x89a0, 0x6776, 0x6ed2, 0xdff6, 0x0, 0x0);
        gbc.writeMem(0x6776, { 0x28 });
        gbc.writeMem(0xaa04, { 0xa });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe03c, gbc.sp());
        EXPECT(0xaa05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xaa04));
        // 0A 030D
        gbc.setState(0xc573, 0xd74a, 0x3bf0, 0x587d, 0x8b49, 0x38df, 0x1, 0x1);
        gbc.writeMem(0x587d, { 0x45 });
        gbc.writeMem(0xc573, { 0xa });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd74a, gbc.sp());
        EXPECT(0xc574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc573));
        // 0A 030E
        gbc.setState(0x1d2f, 0x1c7a, 0x9d70, 0x4154, 0x7e3b, 0x396e, 0x1, 0x0);
        gbc.writeMem(0x1d2f, { 0xa });
        gbc.writeMem(0x4154, { 0x32 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1c7a, gbc.sp());
        EXPECT(0x1d30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 030F
        gbc.setState(0x549b, 0x6933, 0xd8e0, 0xb548, 0x5566, 0xea4e, 0x1, 0x0);
        gbc.writeMem(0x549b, { 0xa });
        gbc.writeMem(0xb548, { 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6933, gbc.sp());
        EXPECT(0x549c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb548));
        // 0A 0310
        gbc.setState(0x4f4f, 0x221c, 0xf570, 0x166f, 0x7990, 0xcb16, 0x0, 0x0);
        gbc.writeMem(0x166f, { 0x1e });
        gbc.writeMem(0x4f4f, { 0xa });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x221c, gbc.sp());
        EXPECT(0x4f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0311
        gbc.setState(0xa657, 0x80b3, 0x97a0, 0xa43b, 0x70cd, 0x7e2a, 0x1, 0x0);
        gbc.writeMem(0xa43b, { 0xcd });
        gbc.writeMem(0xa657, { 0xa });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x80b3, gbc.sp());
        EXPECT(0xa658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xa43b));
        EXPECT(0xa, gbc.readMem(0xa657));
        // 0A 0312
        gbc.setState(0x19e8, 0x95c1, 0xa720, 0x3384, 0x6916, 0x4493, 0x0, 0x1);
        gbc.writeMem(0x19e8, { 0xa });
        gbc.writeMem(0x3384, { 0x23 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x95c1, gbc.sp());
        EXPECT(0x19e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0313
        gbc.setState(0x832d, 0xb0a5, 0xcc20, 0x6045, 0xb586, 0x7b9b, 0x0, 0x1);
        gbc.writeMem(0x6045, { 0x52 });
        gbc.writeMem(0x832d, { 0xa });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb0a5, gbc.sp());
        EXPECT(0x832e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x832d));
        // 0A 0314
        gbc.setState(0x657d, 0xdd1c, 0xa600, 0x77ea, 0xbd73, 0xac91, 0x0, 0x1);
        gbc.writeMem(0x657d, { 0xa });
        gbc.writeMem(0x77ea, { 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdd1c, gbc.sp());
        EXPECT(0x657e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0315
        gbc.setState(0x8648, 0xc76c, 0xa120, 0xf19, 0x8de2, 0x846e, 0x1, 0x0);
        gbc.writeMem(0xf19, { 0x3d });
        gbc.writeMem(0x8648, { 0xa });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc76c, gbc.sp());
        EXPECT(0x8649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8648));
        // 0A 0316
        gbc.setState(0x2ca8, 0x10e2, 0xc9f0, 0x8bd8, 0xf71e, 0x7b35, 0x1, 0x1);
        gbc.writeMem(0x2ca8, { 0xa });
        gbc.writeMem(0x8bd8, { 0x5a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x10e2, gbc.sp());
        EXPECT(0x2ca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x8bd8));
        // 0A 0317
        gbc.setState(0x2aab, 0x6246, 0x37d0, 0xce94, 0x23d5, 0xcbc2, 0x0, 0x1);
        gbc.writeMem(0x2aab, { 0xa });
        gbc.writeMem(0xce94, { 0x1c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6246, gbc.sp());
        EXPECT(0x2aac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xce94));
        // 0A 0318
        gbc.setState(0x6190, 0xf2ef, 0x6ce0, 0x9769, 0xd380, 0xb207, 0x0, 0x1);
        gbc.writeMem(0x6190, { 0xa });
        gbc.writeMem(0x9769, { 0x12 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf2ef, gbc.sp());
        EXPECT(0x6191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9769));
        // 0A 0319
        gbc.setState(0xa8d4, 0x4ea7, 0x3dc0, 0x5e1e, 0x25f3, 0x6be4, 0x1, 0x0);
        gbc.writeMem(0x5e1e, { 0x6e });
        gbc.writeMem(0xa8d4, { 0xa });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4ea7, gbc.sp());
        EXPECT(0xa8d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa8d4));
        // 0A 031A
        gbc.setState(0x41a6, 0x9e10, 0xc670, 0xfeb2, 0xc447, 0xd8e3, 0x0, 0x1);
        gbc.writeMem(0x41a6, { 0xa });
        gbc.writeMem(0xfeb2, { 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9e10, gbc.sp());
        EXPECT(0x41a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xfeb2));
        // 0A 031B
        gbc.setState(0x90be, 0x9102, 0x4420, 0x3505, 0xec23, 0x3663, 0x0, 0x1);
        gbc.writeMem(0x3505, { 0xa1 });
        gbc.writeMem(0x90be, { 0xa });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9102, gbc.sp());
        EXPECT(0x90bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x90be));
        // 0A 031C
        gbc.setState(0xd8e6, 0xb441, 0xc7c0, 0xe4e0, 0xa8de, 0x9af1, 0x0, 0x0);
        gbc.writeMem(0xd8e6, { 0xa });
        gbc.writeMem(0xe4e0, { 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb441, gbc.sp());
        EXPECT(0xd8e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd8e6));
        EXPECT(0xf8, gbc.readMem(0xe4e0));
        // 0A 031D
        gbc.setState(0xc8f1, 0x74a5, 0x5da0, 0x82b6, 0xc402, 0xc7b9, 0x0, 0x1);
        gbc.writeMem(0x82b6, { 0x55 });
        gbc.writeMem(0xc8f1, { 0xa });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x74a5, gbc.sp());
        EXPECT(0xc8f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x82b6));
        EXPECT(0xa, gbc.readMem(0xc8f1));
        // 0A 031F
        gbc.setState(0xba2d, 0xd878, 0x43c0, 0x39d, 0x6409, 0xb252, 0x0, 0x0);
        gbc.writeMem(0x39d, { 0x2f });
        gbc.writeMem(0xba2d, { 0xa });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd878, gbc.sp());
        EXPECT(0xba2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xba2d));
        // 0A 0320
        gbc.setState(0xee5, 0x9bf8, 0xd370, 0xebd3, 0xd4f6, 0xc6ec, 0x0, 0x0);
        gbc.writeMem(0xee5, { 0xa });
        gbc.writeMem(0xebd3, { 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9bf8, gbc.sp());
        EXPECT(0xee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xebd3));
        // 0A 0321
        gbc.setState(0x9c2d, 0x25ba, 0x420, 0xb8f, 0x7399, 0xd8aa, 0x1, 0x1);
        gbc.writeMem(0xb8f, { 0xdd });
        gbc.writeMem(0x9c2d, { 0xa });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x25ba, gbc.sp());
        EXPECT(0x9c2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9c2d));
        // 0A 0322
        gbc.setState(0x6077, 0xba4b, 0x6490, 0x5d85, 0x896c, 0xfc69, 0x1, 0x1);
        gbc.writeMem(0x5d85, { 0x4 });
        gbc.writeMem(0x6077, { 0xa });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xba4b, gbc.sp());
        EXPECT(0x6078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0323
        gbc.setState(0x358, 0x3259, 0x81c0, 0x3dac, 0xc88, 0x94eb, 0x0, 0x1);
        gbc.writeMem(0x358, { 0xa });
        gbc.writeMem(0x3dac, { 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3259, gbc.sp());
        EXPECT(0x359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0324
        gbc.setState(0xa04b, 0x443a, 0x9e50, 0xc810, 0xb2e7, 0x7189, 0x0, 0x1);
        gbc.writeMem(0xa04b, { 0xa });
        gbc.writeMem(0xc810, { 0x6f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x443a, gbc.sp());
        EXPECT(0xa04c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa04b));
        EXPECT(0x6f, gbc.readMem(0xc810));
        // 0A 0325
        gbc.setState(0x128a, 0x8f44, 0x4890, 0xd002, 0x2f91, 0x1581, 0x1, 0x0);
        gbc.writeMem(0x128a, { 0xa });
        gbc.writeMem(0xd002, { 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8f44, gbc.sp());
        EXPECT(0x128b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd002));
        // 0A 0326
        gbc.setState(0x4918, 0x5a26, 0xc8a0, 0x5c6e, 0x97e1, 0xf0cf, 0x0, 0x0);
        gbc.writeMem(0x4918, { 0xa });
        gbc.writeMem(0x5c6e, { 0xd9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5a26, gbc.sp());
        EXPECT(0x4919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0327
        gbc.setState(0x8e29, 0x8a03, 0xcd90, 0xddde, 0xaa97, 0xeec5, 0x1, 0x1);
        gbc.writeMem(0x8e29, { 0xa });
        gbc.writeMem(0xddde, { 0xce });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8a03, gbc.sp());
        EXPECT(0x8e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8e29));
        EXPECT(0xce, gbc.readMem(0xddde));
        // 0A 0328
        gbc.setState(0x8245, 0x4d38, 0x60f0, 0x6f03, 0x8a14, 0x1351, 0x1, 0x1);
        gbc.writeMem(0x6f03, { 0x37 });
        gbc.writeMem(0x8245, { 0xa });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4d38, gbc.sp());
        EXPECT(0x8246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8245));
        // 0A 0329
        gbc.setState(0x99d8, 0x29e7, 0x4710, 0x5bc0, 0xf969, 0x8c41, 0x0, 0x0);
        gbc.writeMem(0x5bc0, { 0x86 });
        gbc.writeMem(0x99d8, { 0xa });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x29e7, gbc.sp());
        EXPECT(0x99d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x99d8));
        // 0A 032A
        gbc.setState(0x7b97, 0xb31d, 0x240, 0x92ec, 0x9c9a, 0xe2ce, 0x0, 0x1);
        gbc.writeMem(0x7b97, { 0xa });
        gbc.writeMem(0x92ec, { 0x6e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb31d, gbc.sp());
        EXPECT(0x7b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x92ec));
        // 0A 032B
        gbc.setState(0x4d93, 0x1378, 0xad70, 0x7f52, 0xb751, 0x7966, 0x1, 0x1);
        gbc.writeMem(0x4d93, { 0xa });
        gbc.writeMem(0x7f52, { 0x34 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1378, gbc.sp());
        EXPECT(0x4d94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 032C
        gbc.setState(0x91d7, 0xa92, 0x3d00, 0xdbe3, 0x5183, 0xe358, 0x0, 0x1);
        gbc.writeMem(0x91d7, { 0xa });
        gbc.writeMem(0xdbe3, { 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa92, gbc.sp());
        EXPECT(0x91d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x91d7));
        EXPECT(0xcc, gbc.readMem(0xdbe3));
        // 0A 032D
        gbc.setState(0xaded, 0xb194, 0x9190, 0xd26c, 0x1f66, 0xae2c, 0x1, 0x1);
        gbc.writeMem(0xaded, { 0xa });
        gbc.writeMem(0xd26c, { 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb194, gbc.sp());
        EXPECT(0xadee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xaded));
        EXPECT(0xd0, gbc.readMem(0xd26c));
        // 0A 032E
        gbc.setState(0xed33, 0xb42b, 0xbf70, 0x2498, 0x3510, 0xb2ae, 0x0, 0x0);
        gbc.writeMem(0x2498, { 0x86 });
        gbc.writeMem(0xed33, { 0xa });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb42b, gbc.sp());
        EXPECT(0xed34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xed33));
        // 0A 032F
        gbc.setState(0x9f95, 0x2e0d, 0x4120, 0x6dfd, 0xd970, 0x8ac, 0x1, 0x0);
        gbc.writeMem(0x6dfd, { 0xc1 });
        gbc.writeMem(0x9f95, { 0xa });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2e0d, gbc.sp());
        EXPECT(0x9f96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9f95));
        // 0A 0330
        gbc.setState(0x2b17, 0x678b, 0xbca0, 0xd1cd, 0xe205, 0x2de, 0x0, 0x1);
        gbc.writeMem(0x2b17, { 0xa });
        gbc.writeMem(0xd1cd, { 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x678b, gbc.sp());
        EXPECT(0x2b18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xd1cd));
        // 0A 0331
        gbc.setState(0x8e76, 0x416, 0x7220, 0xe199, 0x997e, 0x267, 0x1, 0x1);
        gbc.writeMem(0x8e76, { 0xa });
        gbc.writeMem(0xe199, { 0xa5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x416, gbc.sp());
        EXPECT(0x8e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8e76));
        EXPECT(0xa5, gbc.readMem(0xe199));
        // 0A 0332
        gbc.setState(0xb88c, 0x4a61, 0xc750, 0x3086, 0x163, 0x79c7, 0x0, 0x0);
        gbc.writeMem(0x3086, { 0x43 });
        gbc.writeMem(0xb88c, { 0xa });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4a61, gbc.sp());
        EXPECT(0xb88d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb88c));
        // 0A 0333
        gbc.setState(0xd65e, 0xb848, 0x1fe0, 0x679f, 0x753b, 0xc73e, 0x1, 0x0);
        gbc.writeMem(0x679f, { 0x38 });
        gbc.writeMem(0xd65e, { 0xa });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb848, gbc.sp());
        EXPECT(0xd65f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd65e));
        // 0A 0335
        gbc.setState(0xa289, 0x5f03, 0x7160, 0x25cc, 0x648e, 0xf589, 0x1, 0x0);
        gbc.writeMem(0x25cc, { 0xb6 });
        gbc.writeMem(0xa289, { 0xa });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5f03, gbc.sp());
        EXPECT(0xa28a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa289));
        // 0A 0336
        gbc.setState(0x33aa, 0x950e, 0x6860, 0x308a, 0xe05a, 0x5da8, 0x0, 0x0);
        gbc.writeMem(0x308a, { 0x33 });
        gbc.writeMem(0x33aa, { 0xa });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x950e, gbc.sp());
        EXPECT(0x33ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0337
        gbc.setState(0x4a85, 0x9f21, 0x3e20, 0x96ad, 0xc146, 0x535, 0x1, 0x0);
        gbc.writeMem(0x4a85, { 0xa });
        gbc.writeMem(0x96ad, { 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9f21, gbc.sp());
        EXPECT(0x4a86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x96ad));
        // 0A 0338
        gbc.setState(0x2bfc, 0x8931, 0x87b0, 0xd76f, 0xef62, 0x4777, 0x0, 0x0);
        gbc.writeMem(0x2bfc, { 0xa });
        gbc.writeMem(0xd76f, { 0x34 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8931, gbc.sp());
        EXPECT(0x2bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xd76f));
        // 0A 0339
        gbc.setState(0x15a6, 0x9cac, 0x67c0, 0x4e5a, 0x1a21, 0x8a5a, 0x1, 0x1);
        gbc.writeMem(0x15a6, { 0xa });
        gbc.writeMem(0x4e5a, { 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9cac, gbc.sp());
        EXPECT(0x15a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 033A
        gbc.setState(0xb64e, 0xa57e, 0x3620, 0x289f, 0xf741, 0xfddb, 0x0, 0x0);
        gbc.writeMem(0x289f, { 0x85 });
        gbc.writeMem(0xb64e, { 0xa });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa57e, gbc.sp());
        EXPECT(0xb64f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb64e));
        // 0A 033B
        gbc.setState(0x6d3, 0xb2c1, 0x9b70, 0x86d1, 0x3874, 0x3a6d, 0x0, 0x1);
        gbc.writeMem(0x6d3, { 0xa });
        gbc.writeMem(0x86d1, { 0x5c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb2c1, gbc.sp());
        EXPECT(0x6d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x86d1));
        // 0A 033C
        gbc.setState(0xd661, 0x1a09, 0x9ae0, 0x606c, 0x7cfb, 0xbd00, 0x0, 0x0);
        gbc.writeMem(0x606c, { 0x1e });
        gbc.writeMem(0xd661, { 0xa });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1a09, gbc.sp());
        EXPECT(0xd662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd661));
        // 0A 033D
        gbc.setState(0x6a87, 0xd43b, 0x690, 0x3885, 0xae15, 0xe0c, 0x0, 0x0);
        gbc.writeMem(0x3885, { 0x10 });
        gbc.writeMem(0x6a87, { 0xa });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd43b, gbc.sp());
        EXPECT(0x6a88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 033E
        gbc.setState(0x321a, 0xf7ee, 0xb40, 0x95d2, 0x81f4, 0xc3f9, 0x0, 0x1);
        gbc.writeMem(0x321a, { 0xa });
        gbc.writeMem(0x95d2, { 0xc5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf7ee, gbc.sp());
        EXPECT(0x321b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x95d2));
        // 0A 033F
        gbc.setState(0x96ab, 0xb065, 0x7720, 0xa09b, 0xcb47, 0x7698, 0x1, 0x0);
        gbc.writeMem(0x96ab, { 0xa });
        gbc.writeMem(0xa09b, { 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb065, gbc.sp());
        EXPECT(0x96ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x96ab));
        EXPECT(0xc4, gbc.readMem(0xa09b));
        // 0A 0340
        gbc.setState(0xa973, 0xa5b, 0xa260, 0xed22, 0x213a, 0x7949, 0x1, 0x0);
        gbc.writeMem(0xa973, { 0xa });
        gbc.writeMem(0xed22, { 0xaf });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa5b, gbc.sp());
        EXPECT(0xa974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa973));
        EXPECT(0xaf, gbc.readMem(0xed22));
        // 0A 0341
        gbc.setState(0x425b, 0x79e2, 0x3af0, 0xe12, 0x1882, 0x20c1, 0x1, 0x1);
        gbc.writeMem(0xe12, { 0xc4 });
        gbc.writeMem(0x425b, { 0xa });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x79e2, gbc.sp());
        EXPECT(0x425c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0342
        gbc.setState(0x16f2, 0x8fad, 0x5990, 0x5202, 0x388c, 0xa67e, 0x0, 0x1);
        gbc.writeMem(0x16f2, { 0xa });
        gbc.writeMem(0x5202, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8fad, gbc.sp());
        EXPECT(0x16f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0343
        gbc.setState(0x3279, 0xee9f, 0xad40, 0xf644, 0x9fc8, 0x631b, 0x0, 0x0);
        gbc.writeMem(0x3279, { 0xa });
        gbc.writeMem(0xf644, { 0x23 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xee9f, gbc.sp());
        EXPECT(0x327a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xf644));
        // 0A 0345
        gbc.setState(0x9240, 0xea09, 0x3170, 0x2d38, 0x3bd8, 0x7340, 0x1, 0x1);
        gbc.writeMem(0x2d38, { 0x52 });
        gbc.writeMem(0x9240, { 0xa });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xea09, gbc.sp());
        EXPECT(0x9241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9240));
        // 0A 0346
        gbc.setState(0x746b, 0x5464, 0x4b70, 0x49ab, 0x3d31, 0xa89d, 0x0, 0x0);
        gbc.writeMem(0x49ab, { 0x2d });
        gbc.writeMem(0x746b, { 0xa });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5464, gbc.sp());
        EXPECT(0x746c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0347
        gbc.setState(0xc72a, 0xcfbe, 0x6740, 0xf5cd, 0xf9b4, 0x399d, 0x0, 0x0);
        gbc.writeMem(0xc72a, { 0xa });
        gbc.writeMem(0xf5cd, { 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xcfbe, gbc.sp());
        EXPECT(0xc72b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc72a));
        EXPECT(0xed, gbc.readMem(0xf5cd));
        // 0A 0348
        gbc.setState(0x563e, 0xbf8b, 0x2cc0, 0xedd1, 0x7a0d, 0xd840, 0x0, 0x1);
        gbc.writeMem(0x563e, { 0xa });
        gbc.writeMem(0xedd1, { 0xc7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xbf8b, gbc.sp());
        EXPECT(0x563f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xedd1));
        // 0A 0349
        gbc.setState(0x984, 0x6c60, 0x210, 0xf4ad, 0xe5fe, 0xada4, 0x1, 0x1);
        gbc.writeMem(0x984, { 0xa });
        gbc.writeMem(0xf4ad, { 0x16 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6c60, gbc.sp());
        EXPECT(0x985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xf4ad));
        // 0A 034A
        gbc.setState(0x668d, 0xc4d1, 0xfaf0, 0xf90a, 0xe0fb, 0x6240, 0x0, 0x1);
        gbc.writeMem(0x668d, { 0xa });
        gbc.writeMem(0xf90a, { 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc4d1, gbc.sp());
        EXPECT(0x668e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xf90a));
        // 0A 034B
        gbc.setState(0xcd2, 0xbb83, 0xddc0, 0x9867, 0xfc7c, 0x5940, 0x0, 0x1);
        gbc.writeMem(0xcd2, { 0xa });
        gbc.writeMem(0x9867, { 0x69 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xbb83, gbc.sp());
        EXPECT(0xcd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9867));
        // 0A 034C
        gbc.setState(0xcbb, 0x703f, 0x6980, 0x5b84, 0xc9ea, 0xabfc, 0x0, 0x0);
        gbc.writeMem(0xcbb, { 0xa });
        gbc.writeMem(0x5b84, { 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x703f, gbc.sp());
        EXPECT(0xcbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 034D
        gbc.setState(0xb17c, 0xa517, 0xe90, 0x879c, 0xc26b, 0x8129, 0x1, 0x1);
        gbc.writeMem(0x879c, { 0x5c });
        gbc.writeMem(0xb17c, { 0xa });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa517, gbc.sp());
        EXPECT(0xb17d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x879c));
        EXPECT(0xa, gbc.readMem(0xb17c));
        // 0A 034F
        gbc.setState(0x7286, 0xd710, 0x3210, 0x8fdb, 0xf966, 0x1265, 0x1, 0x1);
        gbc.writeMem(0x7286, { 0xa });
        gbc.writeMem(0x8fdb, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd710, gbc.sp());
        EXPECT(0x7287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8fdb));
        // 0A 0350
        gbc.setState(0xd4e, 0x31a2, 0x6b60, 0x57eb, 0x85a5, 0x3bfa, 0x1, 0x0);
        gbc.writeMem(0xd4e, { 0xa });
        gbc.writeMem(0x57eb, { 0x34 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x31a2, gbc.sp());
        EXPECT(0xd4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0351
        gbc.setState(0x9b22, 0x8391, 0xef0, 0x95c6, 0x7818, 0xa777, 0x1, 0x1);
        gbc.writeMem(0x95c6, { 0xcd });
        gbc.writeMem(0x9b22, { 0xa });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8391, gbc.sp());
        EXPECT(0x9b23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0x95c6));
        EXPECT(0xa, gbc.readMem(0x9b22));
        // 0A 0352
        gbc.setState(0xf08, 0x2e1a, 0x2ff0, 0x21c0, 0x623f, 0xbb9f, 0x1, 0x0);
        gbc.writeMem(0xf08, { 0xa });
        gbc.writeMem(0x21c0, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2e1a, gbc.sp());
        EXPECT(0xf09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0353
        gbc.setState(0xeb15, 0x4a1b, 0x2710, 0xa78e, 0x200f, 0x7b89, 0x1, 0x1);
        gbc.writeMem(0xa78e, { 0xd9 });
        gbc.writeMem(0xeb15, { 0xa });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4a1b, gbc.sp());
        EXPECT(0xeb16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa78e));
        EXPECT(0xa, gbc.readMem(0xeb15));
        // 0A 0354
        gbc.setState(0x306e, 0xa9b8, 0x3040, 0xa596, 0xef9c, 0xafc3, 0x0, 0x1);
        gbc.writeMem(0x306e, { 0xa });
        gbc.writeMem(0xa596, { 0x7c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa9b8, gbc.sp());
        EXPECT(0x306f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xa596));
        // 0A 0355
        gbc.setState(0xeb2, 0x9928, 0x31e0, 0xeb94, 0xe08d, 0xefe5, 0x1, 0x1);
        gbc.writeMem(0xeb2, { 0xa });
        gbc.writeMem(0xeb94, { 0x16 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9928, gbc.sp());
        EXPECT(0xeb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xeb94));
        // 0A 0357
        gbc.setState(0xbacd, 0xe8b2, 0x9260, 0xce1c, 0x42a8, 0x2567, 0x0, 0x1);
        gbc.writeMem(0xbacd, { 0xa });
        gbc.writeMem(0xce1c, { 0xd3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe8b2, gbc.sp());
        EXPECT(0xbace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xbacd));
        EXPECT(0xd3, gbc.readMem(0xce1c));
        // 0A 0358
        gbc.setState(0x1873, 0x297e, 0x8530, 0x4ff7, 0x7415, 0xd5df, 0x0, 0x1);
        gbc.writeMem(0x1873, { 0xa });
        gbc.writeMem(0x4ff7, { 0xaa });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x297e, gbc.sp());
        EXPECT(0x1874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0359
        gbc.setState(0x5be9, 0xa3d2, 0x6650, 0xbcd3, 0x7b61, 0x293e, 0x0, 0x1);
        gbc.writeMem(0x5be9, { 0xa });
        gbc.writeMem(0xbcd3, { 0x88 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa3d2, gbc.sp());
        EXPECT(0x5bea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xbcd3));
        // 0A 035A
        gbc.setState(0x57a4, 0x556f, 0x3a80, 0x7815, 0xf62, 0xc0c9, 0x1, 0x1);
        gbc.writeMem(0x57a4, { 0xa });
        gbc.writeMem(0x7815, { 0xea });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x556f, gbc.sp());
        EXPECT(0x57a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 035B
        gbc.setState(0xbf7f, 0xb7ab, 0x7ee0, 0xec03, 0x40c0, 0xdc75, 0x0, 0x1);
        gbc.writeMem(0xbf7f, { 0xa });
        gbc.writeMem(0xec03, { 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb7ab, gbc.sp());
        EXPECT(0xbf80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xbf7f));
        EXPECT(0xc4, gbc.readMem(0xec03));
        // 0A 035C
        gbc.setState(0x53d, 0x5662, 0xd380, 0x641f, 0xe0be, 0x3ac6, 0x1, 0x1);
        gbc.writeMem(0x53d, { 0xa });
        gbc.writeMem(0x641f, { 0x38 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5662, gbc.sp());
        EXPECT(0x53e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 035D
        gbc.setState(0xbbb8, 0xa0eb, 0x36e0, 0x6834, 0xc2ba, 0x3c51, 0x1, 0x0);
        gbc.writeMem(0x6834, { 0xc9 });
        gbc.writeMem(0xbbb8, { 0xa });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa0eb, gbc.sp());
        EXPECT(0xbbb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xbbb8));
        // 0A 035E
        gbc.setState(0xbb4a, 0xefb6, 0xd4d0, 0x7c1b, 0x6162, 0xd33e, 0x1, 0x0);
        gbc.writeMem(0x7c1b, { 0x42 });
        gbc.writeMem(0xbb4a, { 0xa });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xefb6, gbc.sp());
        EXPECT(0xbb4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xbb4a));
        // 0A 035F
        gbc.setState(0x155d, 0x6d95, 0x1930, 0xa808, 0xe91f, 0x7e63, 0x0, 0x1);
        gbc.writeMem(0x155d, { 0xa });
        gbc.writeMem(0xa808, { 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6d95, gbc.sp());
        EXPECT(0x155e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa808));
        // 0A 0361
        gbc.setState(0x9cea, 0x1890, 0xeda0, 0xafa3, 0xaa1, 0xd012, 0x0, 0x0);
        gbc.writeMem(0x9cea, { 0xa });
        gbc.writeMem(0xafa3, { 0xb0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1890, gbc.sp());
        EXPECT(0x9ceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9cea));
        EXPECT(0xb0, gbc.readMem(0xafa3));
        // 0A 0362
        gbc.setState(0xd0d8, 0xfb07, 0x6bb0, 0xdf5, 0xf4eb, 0x4d74, 0x0, 0x1);
        gbc.writeMem(0xdf5, { 0x13 });
        gbc.writeMem(0xd0d8, { 0xa });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfb07, gbc.sp());
        EXPECT(0xd0d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd0d8));
        // 0A 0363
        gbc.setState(0x140a, 0xcfd0, 0x6180, 0x62fc, 0x3731, 0x22bc, 0x1, 0x0);
        gbc.writeMem(0x140a, { 0xa });
        gbc.writeMem(0x62fc, { 0x73 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xcfd0, gbc.sp());
        EXPECT(0x140b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0364
        gbc.setState(0xc60b, 0x2acc, 0xb0d0, 0x7b01, 0xf56b, 0x3464, 0x1, 0x0);
        gbc.writeMem(0x7b01, { 0x8 });
        gbc.writeMem(0xc60b, { 0xa });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2acc, gbc.sp());
        EXPECT(0xc60c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc60b));
        // 0A 0365
        gbc.setState(0x93bd, 0x5832, 0x80e0, 0x1354, 0xf117, 0xed7b, 0x0, 0x1);
        gbc.writeMem(0x1354, { 0x66 });
        gbc.writeMem(0x93bd, { 0xa });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5832, gbc.sp());
        EXPECT(0x93be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x93bd));
        // 0A 0367
        gbc.setState(0xea97, 0x8f3, 0xb5e0, 0x2244, 0x8adc, 0x2e7b, 0x0, 0x0);
        gbc.writeMem(0x2244, { 0xb });
        gbc.writeMem(0xea97, { 0xa });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8f3, gbc.sp());
        EXPECT(0xea98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xea97));
        // 0A 0368
        gbc.setState(0x7135, 0x32c9, 0x59d0, 0x9f8d, 0x51ac, 0x3597, 0x1, 0x0);
        gbc.writeMem(0x7135, { 0xa });
        gbc.writeMem(0x9f8d, { 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x32c9, gbc.sp());
        EXPECT(0x7136, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0x9f8d));
        // 0A 0369
        gbc.setState(0x7f3b, 0x94a6, 0x6e90, 0xe161, 0x9ba8, 0x7875, 0x1, 0x0);
        gbc.writeMem(0x7f3b, { 0xa });
        gbc.writeMem(0xe161, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x94a6, gbc.sp());
        EXPECT(0x7f3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe161));
        // 0A 036A
        gbc.setState(0x14eb, 0xf80, 0xde80, 0x26c9, 0x7965, 0x705e, 0x1, 0x1);
        gbc.writeMem(0x14eb, { 0xa });
        gbc.writeMem(0x26c9, { 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf80, gbc.sp());
        EXPECT(0x14ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 036B
        gbc.setState(0x763d, 0x20f0, 0x8bf0, 0x161d, 0xb310, 0x5a00, 0x1, 0x1);
        gbc.writeMem(0x161d, { 0x2a });
        gbc.writeMem(0x763d, { 0xa });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x20f0, gbc.sp());
        EXPECT(0x763e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 036C
        gbc.setState(0x855c, 0x2776, 0x2340, 0x2e36, 0x4ef5, 0x3fc3, 0x0, 0x1);
        gbc.writeMem(0x2e36, { 0x1b });
        gbc.writeMem(0x855c, { 0xa });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2776, gbc.sp());
        EXPECT(0x855d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x855c));
        // 0A 036D
        gbc.setState(0xada6, 0x65fe, 0x91b0, 0xd78b, 0xb31a, 0xf126, 0x0, 0x0);
        gbc.writeMem(0xada6, { 0xa });
        gbc.writeMem(0xd78b, { 0xb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x65fe, gbc.sp());
        EXPECT(0xada7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xada6));
        EXPECT(0xb, gbc.readMem(0xd78b));
        // 0A 036E
        gbc.setState(0x75d7, 0x7a0c, 0xc240, 0xdf33, 0x433c, 0xaf89, 0x1, 0x1);
        gbc.writeMem(0x75d7, { 0xa });
        gbc.writeMem(0xdf33, { 0x86 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7a0c, gbc.sp());
        EXPECT(0x75d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xdf33));
        // 0A 036F
        gbc.setState(0xd41a, 0x207b, 0x12e0, 0x6291, 0x4417, 0xcad3, 0x1, 0x0);
        gbc.writeMem(0x6291, { 0x3a });
        gbc.writeMem(0xd41a, { 0xa });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x207b, gbc.sp());
        EXPECT(0xd41b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd41a));
        // 0A 0370
        gbc.setState(0x3dd2, 0xcf7d, 0xb820, 0x739f, 0xf158, 0xf44c, 0x1, 0x1);
        gbc.writeMem(0x3dd2, { 0xa });
        gbc.writeMem(0x739f, { 0x74 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xcf7d, gbc.sp());
        EXPECT(0x3dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0371
        gbc.setState(0x9347, 0x84f5, 0x5e10, 0x9296, 0x8593, 0xffb8, 0x1, 0x1);
        gbc.writeMem(0x9296, { 0xf });
        gbc.writeMem(0x9347, { 0xa });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x84f5, gbc.sp());
        EXPECT(0x9348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0x9296));
        EXPECT(0xa, gbc.readMem(0x9347));
        // 0A 0372
        gbc.setState(0xb32b, 0xd944, 0x7930, 0xf4e0, 0xc47b, 0xe933, 0x1, 0x0);
        gbc.writeMem(0xb32b, { 0xa });
        gbc.writeMem(0xf4e0, { 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd944, gbc.sp());
        EXPECT(0xb32c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb32b));
        EXPECT(0x1a, gbc.readMem(0xf4e0));
        // 0A 0373
        gbc.setState(0x5a23, 0x426, 0xf900, 0x660a, 0x5b34, 0xb86c, 0x0, 0x1);
        gbc.writeMem(0x5a23, { 0xa });
        gbc.writeMem(0x660a, { 0xf9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x426, gbc.sp());
        EXPECT(0x5a24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0374
        gbc.setState(0x8f36, 0x8fa0, 0x4ef0, 0x71a9, 0x130d, 0x56c8, 0x0, 0x1);
        gbc.writeMem(0x71a9, { 0x39 });
        gbc.writeMem(0x8f36, { 0xa });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8fa0, gbc.sp());
        EXPECT(0x8f37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8f36));
        // 0A 0375
        gbc.setState(0xa57d, 0x657f, 0xa6c0, 0x34f5, 0x84f7, 0x23c8, 0x0, 0x1);
        gbc.writeMem(0x34f5, { 0xc9 });
        gbc.writeMem(0xa57d, { 0xa });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x657f, gbc.sp());
        EXPECT(0xa57e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa57d));
        // 0A 0376
        gbc.setState(0xd982, 0x8d86, 0x3bc0, 0x4c38, 0xc640, 0xb404, 0x0, 0x1);
        gbc.writeMem(0x4c38, { 0x6e });
        gbc.writeMem(0xd982, { 0xa });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8d86, gbc.sp());
        EXPECT(0xd983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd982));
        // 0A 0377
        gbc.setState(0x4a08, 0xda83, 0xe210, 0xb0be, 0xfb79, 0x1e8c, 0x0, 0x0);
        gbc.writeMem(0x4a08, { 0xa });
        gbc.writeMem(0xb0be, { 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xda83, gbc.sp());
        EXPECT(0x4a09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb0be));
        // 0A 0378
        gbc.setState(0x9f9e, 0xdd0f, 0x9340, 0xd959, 0x970d, 0x1b34, 0x1, 0x0);
        gbc.writeMem(0x9f9e, { 0xa });
        gbc.writeMem(0xd959, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xdd0f, gbc.sp());
        EXPECT(0x9f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9f9e));
        EXPECT(0xff, gbc.readMem(0xd959));
        // 0A 0379
        gbc.setState(0x8023, 0xacc8, 0xd030, 0xd6eb, 0x5bbf, 0x8028, 0x0, 0x0);
        gbc.writeMem(0x8023, { 0xa });
        gbc.writeMem(0xd6eb, { 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xacc8, gbc.sp());
        EXPECT(0x8024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8023));
        EXPECT(0x95, gbc.readMem(0xd6eb));
        // 0A 037B
        gbc.setState(0x45e, 0x11a1, 0xb580, 0x5091, 0xbd23, 0xb9f4, 0x0, 0x0);
        gbc.writeMem(0x45e, { 0xa });
        gbc.writeMem(0x5091, { 0x5d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x11a1, gbc.sp());
        EXPECT(0x45f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 037C
        gbc.setState(0x30f7, 0x2364, 0xdbf0, 0x681a, 0x7e7a, 0x9471, 0x0, 0x1);
        gbc.writeMem(0x30f7, { 0xa });
        gbc.writeMem(0x681a, { 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2364, gbc.sp());
        EXPECT(0x30f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 037D
        gbc.setState(0x8e3b, 0x20a9, 0x7810, 0x36d3, 0x7f9b, 0xb639, 0x0, 0x1);
        gbc.writeMem(0x36d3, { 0x7e });
        gbc.writeMem(0x8e3b, { 0xa });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x20a9, gbc.sp());
        EXPECT(0x8e3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8e3b));
        // 0A 037E
        gbc.setState(0x349f, 0x35cd, 0x5c10, 0xc7fa, 0xe8d, 0xb743, 0x0, 0x1);
        gbc.writeMem(0x349f, { 0xa });
        gbc.writeMem(0xc7fa, { 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x35cd, gbc.sp());
        EXPECT(0x34a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xc7fa));
        // 0A 037F
        gbc.setState(0x448, 0xa704, 0xbcf0, 0x4a67, 0xc887, 0xa100, 0x0, 0x0);
        gbc.writeMem(0x448, { 0xa });
        gbc.writeMem(0x4a67, { 0x9f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa704, gbc.sp());
        EXPECT(0x449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0380
        gbc.setState(0x2f2a, 0xb078, 0x2d80, 0x969, 0x81bf, 0x6239, 0x1, 0x1);
        gbc.writeMem(0x969, { 0x62 });
        gbc.writeMem(0x2f2a, { 0xa });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb078, gbc.sp());
        EXPECT(0x2f2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0381
        gbc.setState(0x14bd, 0xe8ba, 0x7d20, 0x25de, 0x5e74, 0xe581, 0x1, 0x1);
        gbc.writeMem(0x14bd, { 0xa });
        gbc.writeMem(0x25de, { 0x5f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe8ba, gbc.sp());
        EXPECT(0x14be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0382
        gbc.setState(0x6a57, 0x7ee, 0xb870, 0xa119, 0x1634, 0x5970, 0x0, 0x0);
        gbc.writeMem(0x6a57, { 0xa });
        gbc.writeMem(0xa119, { 0x3c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7ee, gbc.sp());
        EXPECT(0x6a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa119));
        // 0A 0383
        gbc.setState(0x4590, 0xcf90, 0x9e00, 0x775, 0x862b, 0xca1e, 0x1, 0x0);
        gbc.writeMem(0x775, { 0x2f });
        gbc.writeMem(0x4590, { 0xa });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xcf90, gbc.sp());
        EXPECT(0x4591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0384
        gbc.setState(0x78b, 0x2722, 0x89b0, 0x261c, 0xc537, 0xbd46, 0x1, 0x0);
        gbc.writeMem(0x78b, { 0xa });
        gbc.writeMem(0x261c, { 0x75 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2722, gbc.sp());
        EXPECT(0x78c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0385
        gbc.setState(0xea44, 0x3b15, 0x70b0, 0x924a, 0x83fa, 0x74ab, 0x1, 0x0);
        gbc.writeMem(0x924a, { 0x8d });
        gbc.writeMem(0xea44, { 0xa });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3b15, gbc.sp());
        EXPECT(0xea45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x924a));
        EXPECT(0xa, gbc.readMem(0xea44));
        // 0A 0386
        gbc.setState(0xc4cb, 0x25f5, 0xb2f0, 0x9cae, 0xecaf, 0x1eed, 0x1, 0x1);
        gbc.writeMem(0x9cae, { 0xc6 });
        gbc.writeMem(0xc4cb, { 0xa });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x25f5, gbc.sp());
        EXPECT(0xc4cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9cae));
        EXPECT(0xa, gbc.readMem(0xc4cb));
        // 0A 0388
        gbc.setState(0x3ae2, 0xf8e7, 0x3930, 0x1a1c, 0xff1d, 0x3ae2, 0x0, 0x1);
        gbc.writeMem(0x1a1c, { 0x40 });
        gbc.writeMem(0x3ae2, { 0xa });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf8e7, gbc.sp());
        EXPECT(0x3ae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 0389
        gbc.setState(0xeca6, 0xb673, 0x7640, 0xf2e6, 0x2500, 0x747a, 0x0, 0x0);
        gbc.writeMem(0xeca6, { 0xa });
        gbc.writeMem(0xf2e6, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb673, gbc.sp());
        EXPECT(0xeca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xeca6));
        EXPECT(0x10, gbc.readMem(0xf2e6));
        // 0A 038A
        gbc.setState(0xbc0c, 0x5cfd, 0xe3f0, 0xe0b9, 0xdcc7, 0xe19e, 0x0, 0x0);
        gbc.writeMem(0xbc0c, { 0xa });
        gbc.writeMem(0xe0b9, { 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5cfd, gbc.sp());
        EXPECT(0xbc0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xbc0c));
        EXPECT(0xed, gbc.readMem(0xe0b9));
        // 0A 038B
        gbc.setState(0x887e, 0xc60, 0x4240, 0x16ca, 0x90c5, 0x4e94, 0x1, 0x1);
        gbc.writeMem(0x16ca, { 0x2c });
        gbc.writeMem(0x887e, { 0xa });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc60, gbc.sp());
        EXPECT(0x887f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x887e));
        // 0A 038C
        gbc.setState(0x89a6, 0xcb53, 0x8dc0, 0x780b, 0x98ba, 0x7ccf, 0x0, 0x0);
        gbc.writeMem(0x780b, { 0xad });
        gbc.writeMem(0x89a6, { 0xa });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xcb53, gbc.sp());
        EXPECT(0x89a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x89a6));
        // 0A 038D
        gbc.setState(0xc337, 0xea95, 0x5040, 0xacf1, 0xfe74, 0xc413, 0x1, 0x0);
        gbc.writeMem(0xacf1, { 0x59 });
        gbc.writeMem(0xc337, { 0xa });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xea95, gbc.sp());
        EXPECT(0xc338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xacf1));
        EXPECT(0xa, gbc.readMem(0xc337));
        // 0A 038F
        gbc.setState(0x2601, 0xf430, 0xc700, 0xd76f, 0xac9d, 0x61d, 0x1, 0x1);
        gbc.writeMem(0x2601, { 0xa });
        gbc.writeMem(0xd76f, { 0x34 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf430, gbc.sp());
        EXPECT(0x2602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xd76f));
        // 0A 0390
        gbc.setState(0x1537, 0x3053, 0x8000, 0x3d1c, 0x84e7, 0x2502, 0x1, 0x1);
        gbc.writeMem(0x1537, { 0xa });
        gbc.writeMem(0x3d1c, { 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3053, gbc.sp());
        EXPECT(0x1538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 0391
        gbc.setState(0x81e8, 0xe3e5, 0xf410, 0xdb12, 0xecd6, 0x6ec9, 0x0, 0x1);
        gbc.writeMem(0x81e8, { 0xa });
        gbc.writeMem(0xdb12, { 0xa });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe3e5, gbc.sp());
        EXPECT(0x81e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x81e8));
        EXPECT(0xa, gbc.readMem(0xdb12));
        // 0A 0392
        gbc.setState(0x16a7, 0xd908, 0xeee0, 0xd90a, 0x1487, 0xfb37, 0x0, 0x1);
        gbc.writeMem(0x16a7, { 0xa });
        gbc.writeMem(0xd90a, { 0xe9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd908, gbc.sp());
        EXPECT(0x16a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd90a));
        // 0A 0393
        gbc.setState(0x723f, 0xa047, 0xb840, 0xf9a4, 0x5ed8, 0xf1c4, 0x0, 0x1);
        gbc.writeMem(0x723f, { 0xa });
        gbc.writeMem(0xf9a4, { 0x87 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa047, gbc.sp());
        EXPECT(0x7240, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xf9a4));
        // 0A 0394
        gbc.setState(0xe126, 0xacba, 0x2ce0, 0xe90b, 0x7b17, 0x5ce2, 0x1, 0x0);
        gbc.writeMem(0xe126, { 0xa });
        gbc.writeMem(0xe90b, { 0x73 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xacba, gbc.sp());
        EXPECT(0xe127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xe126));
        EXPECT(0x73, gbc.readMem(0xe90b));
        // 0A 0395
        gbc.setState(0xb5c4, 0x61ad, 0x2ec0, 0xb3db, 0x7cf3, 0x4a5b, 0x0, 0x1);
        gbc.writeMem(0xb3db, { 0x60 });
        gbc.writeMem(0xb5c4, { 0xa });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x61ad, gbc.sp());
        EXPECT(0xb5c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xb3db));
        EXPECT(0xa, gbc.readMem(0xb5c4));
        // 0A 0396
        gbc.setState(0x8f7d, 0x7fe4, 0xbe80, 0x1c3b, 0x3987, 0x3f3, 0x0, 0x0);
        gbc.writeMem(0x1c3b, { 0x24 });
        gbc.writeMem(0x8f7d, { 0xa });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7fe4, gbc.sp());
        EXPECT(0x8f7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8f7d));
        // 0A 0397
        gbc.setState(0x13df, 0xf382, 0x2e80, 0xde49, 0x683b, 0x2a48, 0x1, 0x1);
        gbc.writeMem(0x13df, { 0xa });
        gbc.writeMem(0xde49, { 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf382, gbc.sp());
        EXPECT(0x13e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xde49));
        // 0A 0398
        gbc.setState(0xe129, 0xba6, 0x15e0, 0x925c, 0x4fad, 0x71f2, 0x0, 0x1);
        gbc.writeMem(0x925c, { 0x0 });
        gbc.writeMem(0xe129, { 0xa });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xba6, gbc.sp());
        EXPECT(0xe12a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x925c));
        EXPECT(0xa, gbc.readMem(0xe129));
        // 0A 0399
        gbc.setState(0x913d, 0x685a, 0x7f80, 0xebfc, 0xa7cc, 0xa1cd, 0x0, 0x1);
        gbc.writeMem(0x913d, { 0xa });
        gbc.writeMem(0xebfc, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x685a, gbc.sp());
        EXPECT(0x913e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x913d));
        EXPECT(0xb7, gbc.readMem(0xebfc));
        // 0A 039A
        gbc.setState(0x794c, 0x82ae, 0xd790, 0xbb12, 0xfd26, 0x2cb7, 0x0, 0x0);
        gbc.writeMem(0x794c, { 0xa });
        gbc.writeMem(0xbb12, { 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x82ae, gbc.sp());
        EXPECT(0x794d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xbb12));
        // 0A 039B
        gbc.setState(0x1269, 0x5d34, 0xed20, 0x9cfd, 0x610f, 0xa9f7, 0x1, 0x0);
        gbc.writeMem(0x1269, { 0xa });
        gbc.writeMem(0x9cfd, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5d34, gbc.sp());
        EXPECT(0x126a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x9cfd));
        // 0A 039C
        gbc.setState(0xec55, 0x35fc, 0x8090, 0xe040, 0x31b0, 0x91a8, 0x1, 0x1);
        gbc.writeMem(0xe040, { 0x46 });
        gbc.writeMem(0xec55, { 0xa });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x35fc, gbc.sp());
        EXPECT(0xec56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xe040));
        EXPECT(0xa, gbc.readMem(0xec55));
        // 0A 039D
        gbc.setState(0xd66a, 0x44a1, 0x20e0, 0x9dc0, 0x966d, 0x851e, 0x1, 0x1);
        gbc.writeMem(0x9dc0, { 0xda });
        gbc.writeMem(0xd66a, { 0xa });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x44a1, gbc.sp());
        EXPECT(0xd66b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9dc0));
        EXPECT(0xa, gbc.readMem(0xd66a));
        // 0A 039E
        gbc.setState(0x78d3, 0x4f36, 0xe0a0, 0xd438, 0xf9bd, 0x8cfc, 0x0, 0x0);
        gbc.writeMem(0x78d3, { 0xa });
        gbc.writeMem(0xd438, { 0xdb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4f36, gbc.sp());
        EXPECT(0x78d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xd438));
        // 0A 039F
        gbc.setState(0x3fa0, 0x8e5, 0x2640, 0x4282, 0xeee8, 0x728, 0x1, 0x1);
        gbc.writeMem(0x3fa0, { 0xa });
        gbc.writeMem(0x4282, { 0xf0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8e5, gbc.sp());
        EXPECT(0x3fa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 03A0
        gbc.setState(0xb9c9, 0xef17, 0xef70, 0x6fea, 0x46f, 0xf05a, 0x0, 0x1);
        gbc.writeMem(0x6fea, { 0x51 });
        gbc.writeMem(0xb9c9, { 0xa });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xef17, gbc.sp());
        EXPECT(0xb9ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb9c9));
        // 0A 03A1
        gbc.setState(0x1c96, 0xbe5b, 0xf070, 0x5a13, 0xcf44, 0x8ad8, 0x0, 0x0);
        gbc.writeMem(0x1c96, { 0xa });
        gbc.writeMem(0x5a13, { 0x25 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xbe5b, gbc.sp());
        EXPECT(0x1c97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 03A2
        gbc.setState(0xbe46, 0x94d4, 0xdcc0, 0x9015, 0xdd06, 0x1a04, 0x0, 0x0);
        gbc.writeMem(0x9015, { 0x45 });
        gbc.writeMem(0xbe46, { 0xa });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x94d4, gbc.sp());
        EXPECT(0xbe47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x9015));
        EXPECT(0xa, gbc.readMem(0xbe46));
        // 0A 03A4
        gbc.setState(0xd8ac, 0xf147, 0x10c0, 0x4ac5, 0x98f2, 0xa57f, 0x1, 0x0);
        gbc.writeMem(0x4ac5, { 0x28 });
        gbc.writeMem(0xd8ac, { 0xa });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf147, gbc.sp());
        EXPECT(0xd8ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd8ac));
        // 0A 03A5
        gbc.setState(0x2e52, 0xad63, 0xe650, 0x5a72, 0x2191, 0xc0d6, 0x0, 0x0);
        gbc.writeMem(0x2e52, { 0xa });
        gbc.writeMem(0x5a72, { 0xac });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xad63, gbc.sp());
        EXPECT(0x2e53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 03A6
        gbc.setState(0x329e, 0x22c5, 0x8a30, 0x638d, 0x1e17, 0x4602, 0x1, 0x1);
        gbc.writeMem(0x329e, { 0xa });
        gbc.writeMem(0x638d, { 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x22c5, gbc.sp());
        EXPECT(0x329f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 03A7
        gbc.setState(0x5361, 0x7e30, 0x1b30, 0xf9bc, 0xbb18, 0xd9bf, 0x0, 0x0);
        gbc.writeMem(0x5361, { 0xa });
        gbc.writeMem(0xf9bc, { 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7e30, gbc.sp());
        EXPECT(0x5362, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xf9bc));
        // 0A 03A8
        gbc.setState(0x9fe5, 0xa3cd, 0x1990, 0x354e, 0x97cd, 0x259b, 0x1, 0x0);
        gbc.writeMem(0x354e, { 0xd4 });
        gbc.writeMem(0x9fe5, { 0xa });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa3cd, gbc.sp());
        EXPECT(0x9fe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9fe5));
        // 0A 03A9
        gbc.setState(0x849a, 0xeb65, 0x5240, 0xa002, 0x11b4, 0x6d70, 0x1, 0x1);
        gbc.writeMem(0x849a, { 0xa });
        gbc.writeMem(0xa002, { 0xfd });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xeb65, gbc.sp());
        EXPECT(0x849b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x849a));
        EXPECT(0xfd, gbc.readMem(0xa002));
        // 0A 03AA
        gbc.setState(0x1859, 0x2d26, 0x9a10, 0xbe3b, 0x5c3f, 0x115e, 0x0, 0x0);
        gbc.writeMem(0x1859, { 0xa });
        gbc.writeMem(0xbe3b, { 0x4d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2d26, gbc.sp());
        EXPECT(0x185a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbe3b));
        // 0A 03AB
        gbc.setState(0x8e22, 0xb0f9, 0x6570, 0x8672, 0x29f5, 0xb429, 0x1, 0x1);
        gbc.writeMem(0x8672, { 0xaa });
        gbc.writeMem(0x8e22, { 0xa });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb0f9, gbc.sp());
        EXPECT(0x8e23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x8672));
        EXPECT(0xa, gbc.readMem(0x8e22));
        // 0A 03AC
        gbc.setState(0xd3a6, 0x9303, 0xd870, 0xf6cc, 0xc8fa, 0xcfca, 0x1, 0x0);
        gbc.writeMem(0xd3a6, { 0xa });
        gbc.writeMem(0xf6cc, { 0x8d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9303, gbc.sp());
        EXPECT(0xd3a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd3a6));
        EXPECT(0x8d, gbc.readMem(0xf6cc));
        // 0A 03AD
        gbc.setState(0xeb55, 0x28a3, 0x5940, 0x9aeb, 0x8bde, 0x50f, 0x1, 0x0);
        gbc.writeMem(0x9aeb, { 0x91 });
        gbc.writeMem(0xeb55, { 0xa });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x28a3, gbc.sp());
        EXPECT(0xeb56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9aeb));
        EXPECT(0xa, gbc.readMem(0xeb55));
        // 0A 03AE
        gbc.setState(0xd251, 0x4c59, 0xd040, 0x8b9e, 0x58cb, 0xac01, 0x0, 0x1);
        gbc.writeMem(0x8b9e, { 0x76 });
        gbc.writeMem(0xd251, { 0xa });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4c59, gbc.sp());
        EXPECT(0xd252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8b9e));
        EXPECT(0xa, gbc.readMem(0xd251));
        // 0A 03AF
        gbc.setState(0x865d, 0x9ee5, 0x6860, 0x4949, 0x4f15, 0x72f6, 0x0, 0x1);
        gbc.writeMem(0x4949, { 0x51 });
        gbc.writeMem(0x865d, { 0xa });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9ee5, gbc.sp());
        EXPECT(0x865e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x865d));
        // 0A 03B0
        gbc.setState(0xc397, 0xd8f5, 0xf930, 0x1bd8, 0xbb86, 0xc07a, 0x0, 0x1);
        gbc.writeMem(0x1bd8, { 0x82 });
        gbc.writeMem(0xc397, { 0xa });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd8f5, gbc.sp());
        EXPECT(0xc398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc397));
        // 0A 03B1
        gbc.setState(0xc740, 0x3e78, 0xc30, 0xdacb, 0x564c, 0x6318, 0x1, 0x0);
        gbc.writeMem(0xc740, { 0xa });
        gbc.writeMem(0xdacb, { 0x47 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3e78, gbc.sp());
        EXPECT(0xc741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc740));
        EXPECT(0x47, gbc.readMem(0xdacb));
        // 0A 03B2
        gbc.setState(0xcfed, 0x2da5, 0xd640, 0x6b40, 0xf23b, 0xc9b7, 0x0, 0x0);
        gbc.writeMem(0x6b40, { 0x77 });
        gbc.writeMem(0xcfed, { 0xa });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2da5, gbc.sp());
        EXPECT(0xcfee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xcfed));
        // 0A 03B3
        gbc.setState(0x1b87, 0x45ff, 0x86f0, 0x8e05, 0x129b, 0x9637, 0x0, 0x1);
        gbc.writeMem(0x1b87, { 0xa });
        gbc.writeMem(0x8e05, { 0x96 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x45ff, gbc.sp());
        EXPECT(0x1b88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x8e05));
        // 0A 03B4
        gbc.setState(0x8402, 0x75a5, 0xa200, 0xd114, 0xc11c, 0x20af, 0x0, 0x1);
        gbc.writeMem(0x8402, { 0xa });
        gbc.writeMem(0xd114, { 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x75a5, gbc.sp());
        EXPECT(0x8403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8402));
        EXPECT(0xc0, gbc.readMem(0xd114));
        // 0A 03B5
        gbc.setState(0x9576, 0xf3e3, 0x14f0, 0xa478, 0x12dd, 0x1d, 0x0, 0x0);
        gbc.writeMem(0x9576, { 0xa });
        gbc.writeMem(0xa478, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf3e3, gbc.sp());
        EXPECT(0x9577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9576));
        EXPECT(0xa0, gbc.readMem(0xa478));
        // 0A 03B6
        gbc.setState(0x13da, 0x9b3c, 0x1440, 0xbfea, 0x7133, 0x7e2e, 0x1, 0x0);
        gbc.writeMem(0x13da, { 0xa });
        gbc.writeMem(0xbfea, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9b3c, gbc.sp());
        EXPECT(0x13db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbfea));
        // 0A 03B7
        gbc.setState(0x5bd2, 0x1daa, 0xabc0, 0x338a, 0x7fe4, 0x88bc, 0x1, 0x0);
        gbc.writeMem(0x338a, { 0x38 });
        gbc.writeMem(0x5bd2, { 0xa });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1daa, gbc.sp());
        EXPECT(0x5bd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 03B8
        gbc.setState(0x7df5, 0xe317, 0x5720, 0x58d5, 0x40ba, 0xf930, 0x1, 0x1);
        gbc.writeMem(0x58d5, { 0x97 });
        gbc.writeMem(0x7df5, { 0xa });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe317, gbc.sp());
        EXPECT(0x7df6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 03B9
        gbc.setState(0xe92e, 0xf4c6, 0x5f30, 0x94bc, 0x6b3d, 0x1fab, 0x1, 0x0);
        gbc.writeMem(0x94bc, { 0x3 });
        gbc.writeMem(0xe92e, { 0xa });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf4c6, gbc.sp());
        EXPECT(0xe92f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x94bc));
        EXPECT(0xa, gbc.readMem(0xe92e));
        // 0A 03BA
        gbc.setState(0x9319, 0xf66b, 0x61f0, 0xea77, 0xa7b1, 0x68ea, 0x1, 0x1);
        gbc.writeMem(0x9319, { 0xa });
        gbc.writeMem(0xea77, { 0xdb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf66b, gbc.sp());
        EXPECT(0x931a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9319));
        EXPECT(0xdb, gbc.readMem(0xea77));
        // 0A 03BB
        gbc.setState(0x4052, 0xc4db, 0xba90, 0xa58b, 0xbaa8, 0x619b, 0x0, 0x1);
        gbc.writeMem(0x4052, { 0xa });
        gbc.writeMem(0xa58b, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc4db, gbc.sp());
        EXPECT(0x4053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xa58b));
        // 0A 03BC
        gbc.setState(0xc5fe, 0xd2c6, 0x23b0, 0x57a, 0xdd7, 0x4ec8, 0x1, 0x0);
        gbc.writeMem(0x57a, { 0xa3 });
        gbc.writeMem(0xc5fe, { 0xa });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd2c6, gbc.sp());
        EXPECT(0xc5ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc5fe));
        // 0A 03BD
        gbc.setState(0x682b, 0x441c, 0x9720, 0x5233, 0xdd3a, 0x3f6d, 0x1, 0x0);
        gbc.writeMem(0x5233, { 0x68 });
        gbc.writeMem(0x682b, { 0xa });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x441c, gbc.sp());
        EXPECT(0x682c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 03BE
        gbc.setState(0x6e2e, 0x6fdc, 0x2ac0, 0xca13, 0xf67f, 0xed40, 0x1, 0x0);
        gbc.writeMem(0x6e2e, { 0xa });
        gbc.writeMem(0xca13, { 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6fdc, gbc.sp());
        EXPECT(0x6e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xca13));
        // 0A 03BF
        gbc.setState(0x49fe, 0x31ed, 0xd580, 0xaa09, 0x6d23, 0xb348, 0x1, 0x1);
        gbc.writeMem(0x49fe, { 0xa });
        gbc.writeMem(0xaa09, { 0x56 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x31ed, gbc.sp());
        EXPECT(0x49ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xaa09));
        // 0A 03C0
        gbc.setState(0x1941, 0xea44, 0xb0f0, 0xca1c, 0x3b1f, 0xaeea, 0x1, 0x0);
        gbc.writeMem(0x1941, { 0xa });
        gbc.writeMem(0xca1c, { 0x84 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xea44, gbc.sp());
        EXPECT(0x1942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xca1c));
        // 0A 03C1
        gbc.setState(0xce4b, 0x984f, 0x6ce0, 0x9a9e, 0x93fb, 0xb878, 0x1, 0x0);
        gbc.writeMem(0x9a9e, { 0x73 });
        gbc.writeMem(0xce4b, { 0xa });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x984f, gbc.sp());
        EXPECT(0xce4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x9a9e));
        EXPECT(0xa, gbc.readMem(0xce4b));
        // 0A 03C2
        gbc.setState(0xac93, 0xaec, 0x69d0, 0xb86a, 0xcdf7, 0xce2f, 0x1, 0x1);
        gbc.writeMem(0xac93, { 0xa });
        gbc.writeMem(0xb86a, { 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xaec, gbc.sp());
        EXPECT(0xac94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xac93));
        EXPECT(0x8f, gbc.readMem(0xb86a));
        // 0A 03C3
        gbc.setState(0xab98, 0x89d, 0x3830, 0x1810, 0xd77b, 0x71a2, 0x0, 0x0);
        gbc.writeMem(0x1810, { 0x8f });
        gbc.writeMem(0xab98, { 0xa });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x89d, gbc.sp());
        EXPECT(0xab99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xab98));
        // 0A 03C4
        gbc.setState(0xcf1b, 0x9e22, 0x5660, 0xf901, 0x1fb7, 0x136f, 0x1, 0x1);
        gbc.writeMem(0xcf1b, { 0xa });
        gbc.writeMem(0xf901, { 0x3e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9e22, gbc.sp());
        EXPECT(0xcf1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xcf1b));
        EXPECT(0x3e, gbc.readMem(0xf901));
        // 0A 03C5
        gbc.setState(0xb691, 0x4e94, 0xf850, 0x95f6, 0x1029, 0x2697, 0x1, 0x0);
        gbc.writeMem(0x95f6, { 0x92 });
        gbc.writeMem(0xb691, { 0xa });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4e94, gbc.sp());
        EXPECT(0xb692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x95f6));
        EXPECT(0xa, gbc.readMem(0xb691));
        // 0A 03C6
        gbc.setState(0x7374, 0x5d94, 0xfb50, 0xf3b5, 0x98c3, 0xe7ff, 0x1, 0x0);
        gbc.writeMem(0x7374, { 0xa });
        gbc.writeMem(0xf3b5, { 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5d94, gbc.sp());
        EXPECT(0x7375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xf3b5));
        // 0A 03C7
        gbc.setState(0x2fbb, 0x20df, 0xc3b0, 0x9a06, 0x3718, 0x5e2f, 0x0, 0x0);
        gbc.writeMem(0x2fbb, { 0xa });
        gbc.writeMem(0x9a06, { 0xe7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x20df, gbc.sp());
        EXPECT(0x2fbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x9a06));
        // 0A 03C9
        gbc.setState(0xee18, 0x864e, 0x9580, 0xd6a9, 0xbd3b, 0x2ed9, 0x1, 0x1);
        gbc.writeMem(0xd6a9, { 0x97 });
        gbc.writeMem(0xee18, { 0xa });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x864e, gbc.sp());
        EXPECT(0xee19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd6a9));
        EXPECT(0xa, gbc.readMem(0xee18));
        // 0A 03CA
        gbc.setState(0xfee, 0xc18a, 0x3c0, 0x8eec, 0xdcde, 0x1404, 0x0, 0x0);
        gbc.writeMem(0xfee, { 0xa });
        gbc.writeMem(0x8eec, { 0x83 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc18a, gbc.sp());
        EXPECT(0xfef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x8eec));
        // 0A 03CB
        gbc.setState(0x339d, 0xb5ea, 0xedf0, 0x6b5d, 0x695d, 0x703c, 0x1, 0x1);
        gbc.writeMem(0x339d, { 0xa });
        gbc.writeMem(0x6b5d, { 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb5ea, gbc.sp());
        EXPECT(0x339e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 03CC
        gbc.setState(0x8da7, 0xfb9f, 0x4cb0, 0x572c, 0x49d8, 0x9c9c, 0x0, 0x1);
        gbc.writeMem(0x572c, { 0xdc });
        gbc.writeMem(0x8da7, { 0xa });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xfb9f, gbc.sp());
        EXPECT(0x8da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8da7));
        // 0A 03CE
        gbc.setState(0x9b83, 0x3409, 0x96b0, 0x93a4, 0x234e, 0xbbce, 0x0, 0x1);
        gbc.writeMem(0x93a4, { 0xb3 });
        gbc.writeMem(0x9b83, { 0xa });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3409, gbc.sp());
        EXPECT(0x9b84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x93a4));
        EXPECT(0xa, gbc.readMem(0x9b83));
        // 0A 03CF
        gbc.setState(0xaad3, 0x5d7e, 0xcce0, 0x9e16, 0xafb3, 0x9bb7, 0x0, 0x1);
        gbc.writeMem(0x9e16, { 0x2e });
        gbc.writeMem(0xaad3, { 0xa });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5d7e, gbc.sp());
        EXPECT(0xaad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9e16));
        EXPECT(0xa, gbc.readMem(0xaad3));
        // 0A 03D0
        gbc.setState(0x87ce, 0x5b3f, 0xde10, 0xadc6, 0x9a10, 0x7624, 0x1, 0x1);
        gbc.writeMem(0x87ce, { 0xa });
        gbc.writeMem(0xadc6, { 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5b3f, gbc.sp());
        EXPECT(0x87cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x87ce));
        EXPECT(0xde, gbc.readMem(0xadc6));
        // 0A 03D1
        gbc.setState(0x5ce5, 0x3137, 0x94f0, 0x6b1f, 0x250e, 0x48f8, 0x0, 0x1);
        gbc.writeMem(0x5ce5, { 0xa });
        gbc.writeMem(0x6b1f, { 0x31 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3137, gbc.sp());
        EXPECT(0x5ce6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 03D2
        gbc.setState(0xec35, 0x3e60, 0x46f0, 0x5d42, 0xb9fb, 0x6c38, 0x1, 0x0);
        gbc.writeMem(0x5d42, { 0xf9 });
        gbc.writeMem(0xec35, { 0xa });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3e60, gbc.sp());
        EXPECT(0xec36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xec35));
        // 0A 03D3
        gbc.setState(0xc9fc, 0x9df6, 0x6600, 0xa95f, 0x1b20, 0x318b, 0x1, 0x0);
        gbc.writeMem(0xa95f, { 0xd9 });
        gbc.writeMem(0xc9fc, { 0xa });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9df6, gbc.sp());
        EXPECT(0xc9fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa95f));
        EXPECT(0xa, gbc.readMem(0xc9fc));
        // 0A 03D4
        gbc.setState(0xb11f, 0x20a2, 0x5260, 0xa4a, 0xafc5, 0x82d6, 0x1, 0x1);
        gbc.writeMem(0xa4a, { 0xf4 });
        gbc.writeMem(0xb11f, { 0xa });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x20a2, gbc.sp());
        EXPECT(0xb120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb11f));
        // 0A 03D5
        gbc.setState(0x7535, 0xf5e7, 0x8190, 0x84cb, 0x4a6d, 0xc112, 0x1, 0x1);
        gbc.writeMem(0x7535, { 0xa });
        gbc.writeMem(0x84cb, { 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf5e7, gbc.sp());
        EXPECT(0x7536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x84cb));
        // 0A 03D6
        gbc.setState(0xb6c7, 0xbe6c, 0x90d0, 0xc05d, 0xe514, 0x490c, 0x1, 0x0);
        gbc.writeMem(0xb6c7, { 0xa });
        gbc.writeMem(0xc05d, { 0x42 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbe6c, gbc.sp());
        EXPECT(0xb6c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xb6c7));
        EXPECT(0x42, gbc.readMem(0xc05d));
        // 0A 03D7
        gbc.setState(0x6ea2, 0x4e49, 0x2e0, 0x1488, 0xbc7e, 0x551e, 0x1, 0x1);
        gbc.writeMem(0x1488, { 0xbf });
        gbc.writeMem(0x6ea2, { 0xa });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4e49, gbc.sp());
        EXPECT(0x6ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 03D8
        gbc.setState(0x8591, 0xd67, 0x4c00, 0xae91, 0xfe04, 0x1e91, 0x1, 0x0);
        gbc.writeMem(0x8591, { 0xa });
        gbc.writeMem(0xae91, { 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd67, gbc.sp());
        EXPECT(0x8592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8591));
        EXPECT(0x18, gbc.readMem(0xae91));
        // 0A 03D9
        gbc.setState(0xc81a, 0x6b21, 0xb2f0, 0xfc4, 0xadfb, 0xdda0, 0x0, 0x0);
        gbc.writeMem(0xfc4, { 0xb4 });
        gbc.writeMem(0xc81a, { 0xa });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6b21, gbc.sp());
        EXPECT(0xc81b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc81a));
        // 0A 03DA
        gbc.setState(0x50e4, 0xea71, 0xec70, 0xd17, 0x1037, 0x7574, 0x1, 0x0);
        gbc.writeMem(0xd17, { 0xed });
        gbc.writeMem(0x50e4, { 0xa });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xea71, gbc.sp());
        EXPECT(0x50e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 03DB
        gbc.setState(0x22aa, 0xaed6, 0xe9f0, 0xc243, 0xac3e, 0xac0f, 0x0, 0x0);
        gbc.writeMem(0x22aa, { 0xa });
        gbc.writeMem(0xc243, { 0x74 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xaed6, gbc.sp());
        EXPECT(0x22ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xc243));
        // 0A 03DC
        gbc.setState(0x5689, 0xea0e, 0x8840, 0x719a, 0xa43d, 0x9939, 0x0, 0x0);
        gbc.writeMem(0x5689, { 0xa });
        gbc.writeMem(0x719a, { 0x97 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xea0e, gbc.sp());
        EXPECT(0x568a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 03DD
        gbc.setState(0xc358, 0x4cbb, 0x5520, 0x590, 0x2c88, 0xeeed, 0x1, 0x0);
        gbc.writeMem(0x590, { 0x91 });
        gbc.writeMem(0xc358, { 0xa });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4cbb, gbc.sp());
        EXPECT(0xc359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc358));
        // 0A 03DF
        gbc.setState(0x168d, 0x3615, 0x12c0, 0x6024, 0x5b8f, 0xd0dd, 0x1, 0x1);
        gbc.writeMem(0x168d, { 0xa });
        gbc.writeMem(0x6024, { 0x19 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3615, gbc.sp());
        EXPECT(0x168e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0A 03E0
        gbc.setState(0x743a, 0xe7cd, 0xcca0, 0xed28, 0x6d03, 0x45d9, 0x1, 0x0);
        gbc.writeMem(0x743a, { 0xa });
        gbc.writeMem(0xed28, { 0x38 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe7cd, gbc.sp());
        EXPECT(0x743b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xed28));
        // 0A 03E1
        gbc.setState(0x9d26, 0x2721, 0x7950, 0xfe47, 0xfbe4, 0x9c60, 0x0, 0x1);
        gbc.writeMem(0x9d26, { 0xa });
        gbc.writeMem(0xfe47, { 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2721, gbc.sp());
        EXPECT(0x9d27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9d26));
        EXPECT(0xb2, gbc.readMem(0xfe47));
        // 0A 03E2
        gbc.setState(0x2b16, 0x69d0, 0x2470, 0x1b01, 0x3599, 0xa663, 0x0, 0x0);
        gbc.writeMem(0x1b01, { 0xc });
        gbc.writeMem(0x2b16, { 0xa });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x69d0, gbc.sp());
        EXPECT(0x2b17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0A 03E3
        gbc.setState(0x8076, 0xba07, 0xf3c0, 0x1c61, 0xd4f0, 0x87b5, 0x0, 0x1);
        gbc.writeMem(0x1c61, { 0xe });
        gbc.writeMem(0x8076, { 0xa });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xba07, gbc.sp());
        EXPECT(0x8077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8076));
        // 0A 03E4
        gbc.setState(0x9653, 0xbb8, 0xb2a0, 0x4bf5, 0xf037, 0x6b8c, 0x0, 0x0);
        gbc.writeMem(0x4bf5, { 0xdf });
        gbc.writeMem(0x9653, { 0xa });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xbb8, gbc.sp());
        EXPECT(0x9654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9653));
        // 0A 03E7
        gbc.setState(0xb6c7, 0xcfed, 0xaa50, 0x802c, 0x687b, 0x9579, 0x1, 0x0);
        gbc.writeMem(0x802c, { 0xb3 });
        gbc.writeMem(0xb6c7, { 0xa });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xcfed, gbc.sp());
        EXPECT(0xb6c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x802c));
        EXPECT(0xa, gbc.readMem(0xb6c7));
    }
