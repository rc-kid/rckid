#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_96)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_96) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 96 0000
        gbc.setState(0x5446, 0xcfc6, 0x1050, 0xbf98, 0xb2fb, 0x51c2, 0x1, 0x0);
        gbc.writeMem(0x51c2, { 0x60 });
        gbc.writeMem(0x5446, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xcfc6);
        EXPECT(gbc.pc(), 0x5447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0001
        gbc.setState(0xc54d, 0xda7a, 0x6a10, 0xf066, 0x66cb, 0xb6da, 0x0, 0x0);
        gbc.writeMem(0xb6da, { 0xa0 });
        gbc.writeMem(0xc54d, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xda7a);
        EXPECT(gbc.pc(), 0xc54e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6da), 0xa0);
        EXPECT(gbc.readMem(0xc54d), 0x96);
        // 96 0002
        gbc.setState(0x392f, 0xd5db, 0x9750, 0xbdcd, 0xfd5c, 0x4b2, 0x0, 0x0);
        gbc.writeMem(0x4b2, { 0xc });
        gbc.writeMem(0x392f, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xd5db);
        EXPECT(gbc.pc(), 0x3930);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 0003
        gbc.setState(0xacd4, 0xbc32, 0x84b0, 0x1b9, 0xee48, 0x9bb4, 0x1, 0x0);
        gbc.writeMem(0x9bb4, { 0xe9 });
        gbc.writeMem(0xacd4, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xbc32);
        EXPECT(gbc.pc(), 0xacd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bb4), 0xe9);
        EXPECT(gbc.readMem(0xacd4), 0x96);
        // 96 0004
        gbc.setState(0x9117, 0xc2c7, 0x3c00, 0xd99f, 0x9945, 0x7e11, 0x0, 0x0);
        gbc.writeMem(0x7e11, { 0xbe });
        gbc.writeMem(0x9117, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc2c7);
        EXPECT(gbc.pc(), 0x9118);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9117), 0x96);
        // 96 0005
        gbc.setState(0x1315, 0x3ee3, 0x85d0, 0x2462, 0x8280, 0x46cd, 0x1, 0x1);
        gbc.writeMem(0x1315, { 0x96 });
        gbc.writeMem(0x46cd, { 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x3ee3);
        EXPECT(gbc.pc(), 0x1316);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0006
        gbc.setState(0x241, 0x8d83, 0x850, 0x7c7e, 0x85b9, 0xc452, 0x0, 0x0);
        gbc.writeMem(0x241, { 0x96 });
        gbc.writeMem(0xc452, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8d83);
        EXPECT(gbc.pc(), 0x242);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc452), 0x7b);
        // 96 0007
        gbc.setState(0x783f, 0x69f, 0xded0, 0xc2ad, 0x1f9, 0x32fa, 0x0, 0x0);
        gbc.writeMem(0x32fa, { 0x92 });
        gbc.writeMem(0x783f, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x69f);
        EXPECT(gbc.pc(), 0x7840);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 0009
        gbc.setState(0x200c, 0x69c7, 0x1840, 0x3c78, 0x7914, 0x7455, 0x0, 0x1);
        gbc.writeMem(0x200c, { 0x96 });
        gbc.writeMem(0x7455, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x69c7);
        EXPECT(gbc.pc(), 0x200d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 000A
        gbc.setState(0x106c, 0xfb5a, 0x2c40, 0x67ad, 0xd93c, 0xab62, 0x0, 0x1);
        gbc.writeMem(0x106c, { 0x96 });
        gbc.writeMem(0xab62, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xfb5a);
        EXPECT(gbc.pc(), 0x106d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab62), 0x3e);
        // 96 000B
        gbc.setState(0x187, 0xab61, 0xd8b0, 0xf1ea, 0x5bf6, 0x9b2d, 0x0, 0x0);
        gbc.writeMem(0x187, { 0x96 });
        gbc.writeMem(0x9b2d, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xab61);
        EXPECT(gbc.pc(), 0x188);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b2d), 0x3a);
        // 96 000C
        gbc.setState(0xa8f9, 0x4483, 0x9790, 0x78ea, 0xc2e3, 0xec08, 0x1, 0x0);
        gbc.writeMem(0xa8f9, { 0x96 });
        gbc.writeMem(0xec08, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x4483);
        EXPECT(gbc.pc(), 0xa8fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8f9), 0x96);
        EXPECT(gbc.readMem(0xec08), 0x11);
        // 96 000D
        gbc.setState(0x599f, 0x9315, 0x22b0, 0xb8f4, 0x5b03, 0xa262, 0x0, 0x1);
        gbc.writeMem(0x599f, { 0x96 });
        gbc.writeMem(0xa262, { 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x9315);
        EXPECT(gbc.pc(), 0x59a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa262), 0x9);
        // 96 000E
        gbc.setState(0xd08c, 0x3374, 0xe510, 0x8744, 0xa40b, 0xcb19, 0x0, 0x1);
        gbc.writeMem(0xcb19, { 0x7b });
        gbc.writeMem(0xd08c, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x3374);
        EXPECT(gbc.pc(), 0xd08d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb19), 0x7b);
        EXPECT(gbc.readMem(0xd08c), 0x96);
        // 96 000F
        gbc.setState(0xe449, 0xee72, 0x63d0, 0xb23e, 0x847f, 0x31c5, 0x0, 0x1);
        gbc.writeMem(0x31c5, { 0xe5 });
        gbc.writeMem(0xe449, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xee72);
        EXPECT(gbc.pc(), 0xe44a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe449), 0x96);
        // 96 0010
        gbc.setState(0xd290, 0x533b, 0x7df0, 0x65a6, 0x1fa9, 0x6c41, 0x0, 0x1);
        gbc.writeMem(0x6c41, { 0x55 });
        gbc.writeMem(0xd290, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x533b);
        EXPECT(gbc.pc(), 0xd291);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd290), 0x96);
        // 96 0011
        gbc.setState(0xa093, 0x2505, 0xff60, 0x9632, 0x8242, 0xe304, 0x0, 0x1);
        gbc.writeMem(0xa093, { 0x96 });
        gbc.writeMem(0xe304, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2505);
        EXPECT(gbc.pc(), 0xa094);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa093), 0x96);
        EXPECT(gbc.readMem(0xe304), 0xa0);
        // 96 0012
        gbc.setState(0x6cc3, 0xd708, 0x5560, 0x5e1c, 0x881e, 0x5b0f, 0x1, 0x0);
        gbc.writeMem(0x5b0f, { 0x97 });
        gbc.writeMem(0x6cc3, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd708);
        EXPECT(gbc.pc(), 0x6cc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 0013
        gbc.setState(0x6ab0, 0x73b5, 0xd370, 0x1f8c, 0xbfc3, 0xec3e, 0x0, 0x0);
        gbc.writeMem(0x6ab0, { 0x96 });
        gbc.writeMem(0xec3e, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x73b5);
        EXPECT(gbc.pc(), 0x6ab1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec3e), 0x5c);
        // 96 0014
        gbc.setState(0xa3d1, 0xf0b8, 0x5b50, 0x2e04, 0x6132, 0x2718, 0x1, 0x0);
        gbc.writeMem(0x2718, { 0xe3 });
        gbc.writeMem(0xa3d1, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf0b8);
        EXPECT(gbc.pc(), 0xa3d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3d1), 0x96);
        // 96 0015
        gbc.setState(0x93a0, 0xb5f6, 0xd2d0, 0x1f87, 0x31bb, 0x3875, 0x0, 0x1);
        gbc.writeMem(0x3875, { 0x24 });
        gbc.writeMem(0x93a0, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xb5f6);
        EXPECT(gbc.pc(), 0x93a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93a0), 0x96);
        // 96 0016
        gbc.setState(0xab31, 0xecb6, 0x7560, 0x13ef, 0x2aed, 0x2909, 0x0, 0x0);
        gbc.writeMem(0x2909, { 0x50 });
        gbc.writeMem(0xab31, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xecb6);
        EXPECT(gbc.pc(), 0xab32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab31), 0x96);
        // 96 0017
        gbc.setState(0x1556, 0x2d, 0x8700, 0x8c56, 0x99df, 0x3dd6, 0x1, 0x0);
        gbc.writeMem(0x1556, { 0x96 });
        gbc.writeMem(0x3dd6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x2d);
        EXPECT(gbc.pc(), 0x1557);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0018
        gbc.setState(0xe024, 0x1b22, 0xb540, 0xea55, 0x726e, 0x5c3, 0x0, 0x1);
        gbc.writeMem(0x5c3, { 0xce });
        gbc.writeMem(0xe024, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1b22);
        EXPECT(gbc.pc(), 0xe025);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe024), 0x96);
        // 96 0019
        gbc.setState(0xab4a, 0xc953, 0xb390, 0x4aa9, 0x42bb, 0x769e, 0x1, 0x0);
        gbc.writeMem(0x769e, { 0x33 });
        gbc.writeMem(0xab4a, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc953);
        EXPECT(gbc.pc(), 0xab4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab4a), 0x96);
        // 96 001A
        gbc.setState(0x7566, 0x8107, 0xd7a0, 0x8492, 0xb69e, 0xbccf, 0x0, 0x0);
        gbc.writeMem(0x7566, { 0x96 });
        gbc.writeMem(0xbccf, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x8107);
        EXPECT(gbc.pc(), 0x7567);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbccf), 0x92);
        // 96 001B
        gbc.setState(0xd0bc, 0x6e39, 0x20e0, 0x2e21, 0xb676, 0x2756, 0x1, 0x1);
        gbc.writeMem(0x2756, { 0x31 });
        gbc.writeMem(0xd0bc, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x6e39);
        EXPECT(gbc.pc(), 0xd0bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0bc), 0x96);
        // 96 001C
        gbc.setState(0x7ee8, 0xf0ab, 0x7760, 0x56d4, 0x3f13, 0xa22d, 0x0, 0x0);
        gbc.writeMem(0x7ee8, { 0x96 });
        gbc.writeMem(0xa22d, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xf0ab);
        EXPECT(gbc.pc(), 0x7ee9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa22d), 0x99);
        // 96 001D
        gbc.setState(0x47d9, 0x7d2b, 0xb1c0, 0x5a1d, 0xd90, 0x2704, 0x0, 0x0);
        gbc.writeMem(0x2704, { 0x1b });
        gbc.writeMem(0x47d9, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x7d2b);
        EXPECT(gbc.pc(), 0x47da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 001E
        gbc.setState(0x2df2, 0xf58d, 0x57e0, 0x3a7a, 0x8096, 0x6fd1, 0x0, 0x0);
        gbc.writeMem(0x2df2, { 0x96 });
        gbc.writeMem(0x6fd1, { 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf58d);
        EXPECT(gbc.pc(), 0x2df3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 001F
        gbc.setState(0x166c, 0xe2fa, 0x9e20, 0xa7a0, 0x666f, 0x1645, 0x0, 0x1);
        gbc.writeMem(0x1645, { 0x26 });
        gbc.writeMem(0x166c, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xe2fa);
        EXPECT(gbc.pc(), 0x166d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 0020
        gbc.setState(0x7e2f, 0xa6fa, 0x6ae0, 0x7a02, 0x52b9, 0x276d, 0x0, 0x0);
        gbc.writeMem(0x276d, { 0x8a });
        gbc.writeMem(0x7e2f, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa6fa);
        EXPECT(gbc.pc(), 0x7e30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0021
        gbc.setState(0x3984, 0x9ae8, 0xa5c0, 0x793e, 0x6aae, 0x50be, 0x0, 0x0);
        gbc.writeMem(0x3984, { 0x96 });
        gbc.writeMem(0x50be, { 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x9ae8);
        EXPECT(gbc.pc(), 0x3985);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 0022
        gbc.setState(0xb878, 0xcdb, 0x2020, 0x32cb, 0x246f, 0x9212, 0x1, 0x1);
        gbc.writeMem(0x9212, { 0xe2 });
        gbc.writeMem(0xb878, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xcdb);
        EXPECT(gbc.pc(), 0xb879);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9212), 0xe2);
        EXPECT(gbc.readMem(0xb878), 0x96);
        // 96 0023
        gbc.setState(0x4a05, 0x5214, 0x6420, 0x487a, 0x2816, 0x67d1, 0x0, 0x0);
        gbc.writeMem(0x4a05, { 0x96 });
        gbc.writeMem(0x67d1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x5214);
        EXPECT(gbc.pc(), 0x4a06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 0024
        gbc.setState(0xa8bf, 0x2065, 0x6090, 0xeff0, 0x3f34, 0xf750, 0x0, 0x1);
        gbc.writeMem(0xa8bf, { 0x96 });
        gbc.writeMem(0xf750, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2065);
        EXPECT(gbc.pc(), 0xa8c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8bf), 0x96);
        EXPECT(gbc.readMem(0xf750), 0xca);
        // 96 0025
        gbc.setState(0x17b8, 0x5ea2, 0x9e60, 0x6ea7, 0xdafc, 0x927d, 0x0, 0x1);
        gbc.writeMem(0x17b8, { 0x96 });
        gbc.writeMem(0x927d, { 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x5ea2);
        EXPECT(gbc.pc(), 0x17b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x927d), 0x20);
        // 96 0026
        gbc.setState(0x2b47, 0xd9db, 0x8260, 0xcc4c, 0xec77, 0xd00c, 0x1, 0x0);
        gbc.writeMem(0x2b47, { 0x96 });
        gbc.writeMem(0xd00c, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xd9db);
        EXPECT(gbc.pc(), 0x2b48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd00c), 0x57);
        // 96 0027
        gbc.setState(0x39ac, 0xa8b3, 0xa0f0, 0x2f00, 0xac57, 0x429d, 0x0, 0x1);
        gbc.writeMem(0x39ac, { 0x96 });
        gbc.writeMem(0x429d, { 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa8b3);
        EXPECT(gbc.pc(), 0x39ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0028
        gbc.setState(0xd354, 0xb45b, 0x2d0, 0x1966, 0x7752, 0xb75a, 0x1, 0x1);
        gbc.writeMem(0xb75a, { 0xd2 });
        gbc.writeMem(0xd354, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb45b);
        EXPECT(gbc.pc(), 0xd355);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb75a), 0xd2);
        EXPECT(gbc.readMem(0xd354), 0x96);
        // 96 0029
        gbc.setState(0x8eec, 0xc096, 0xdba0, 0xe20a, 0x1cfb, 0x1dc6, 0x1, 0x1);
        gbc.writeMem(0x1dc6, { 0xa9 });
        gbc.writeMem(0x8eec, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc096);
        EXPECT(gbc.pc(), 0x8eed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eec), 0x96);
        // 96 002A
        gbc.setState(0xcc82, 0xcf, 0x1f70, 0x9597, 0x4930, 0x35ca, 0x0, 0x1);
        gbc.writeMem(0x35ca, { 0xe6 });
        gbc.writeMem(0xcc82, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xcf);
        EXPECT(gbc.pc(), 0xcc83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc82), 0x96);
        // 96 002B
        gbc.setState(0xc18a, 0x2a47, 0x9f40, 0xeb10, 0x9694, 0xa699, 0x1, 0x0);
        gbc.writeMem(0xa699, { 0xbb });
        gbc.writeMem(0xc18a, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2a47);
        EXPECT(gbc.pc(), 0xc18b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa699), 0xbb);
        EXPECT(gbc.readMem(0xc18a), 0x96);
        // 96 002C
        gbc.setState(0x603b, 0x1caa, 0x2550, 0x6c26, 0x8d3a, 0x8a46, 0x1, 0x1);
        gbc.writeMem(0x603b, { 0x96 });
        gbc.writeMem(0x8a46, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x1caa);
        EXPECT(gbc.pc(), 0x603c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a46), 0xa5);
        // 96 002D
        gbc.setState(0x1d3, 0xa548, 0xbc50, 0x4ee, 0x13d8, 0xf016, 0x0, 0x0);
        gbc.writeMem(0x1d3, { 0x96 });
        gbc.writeMem(0xf016, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa548);
        EXPECT(gbc.pc(), 0x1d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf016), 0xe7);
        // 96 002E
        gbc.setState(0xe7ac, 0x75d5, 0xd860, 0xbbde, 0xa06e, 0xd9b0, 0x1, 0x0);
        gbc.writeMem(0xd9b0, { 0x49 });
        gbc.writeMem(0xe7ac, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x75d5);
        EXPECT(gbc.pc(), 0xe7ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9b0), 0x49);
        EXPECT(gbc.readMem(0xe7ac), 0x96);
        // 96 002F
        gbc.setState(0xc2bb, 0xf64f, 0xba10, 0xe568, 0x6c46, 0x5ec, 0x0, 0x1);
        gbc.writeMem(0x5ec, { 0x9a });
        gbc.writeMem(0xc2bb, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xf64f);
        EXPECT(gbc.pc(), 0xc2bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2bb), 0x96);
        // 96 0030
        gbc.setState(0x3c87, 0xbda0, 0x8850, 0xf5a7, 0x1c63, 0x7715, 0x1, 0x1);
        gbc.writeMem(0x3c87, { 0x96 });
        gbc.writeMem(0x7715, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xbda0);
        EXPECT(gbc.pc(), 0x3c88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0031
        gbc.setState(0x3dec, 0xd06d, 0x3700, 0x5d88, 0x1f24, 0x8975, 0x0, 0x1);
        gbc.writeMem(0x3dec, { 0x96 });
        gbc.writeMem(0x8975, { 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd06d);
        EXPECT(gbc.pc(), 0x3ded);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8975), 0xc9);
        // 96 0032
        gbc.setState(0xed54, 0x927a, 0xff0, 0x64a6, 0x7caf, 0xabf5, 0x0, 0x1);
        gbc.writeMem(0xabf5, { 0x14 });
        gbc.writeMem(0xed54, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x927a);
        EXPECT(gbc.pc(), 0xed55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabf5), 0x14);
        EXPECT(gbc.readMem(0xed54), 0x96);
        // 96 0033
        gbc.setState(0xdbe5, 0x4be4, 0x41d0, 0xac45, 0x18a1, 0x233d, 0x1, 0x0);
        gbc.writeMem(0x233d, { 0x79 });
        gbc.writeMem(0xdbe5, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4be4);
        EXPECT(gbc.pc(), 0xdbe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbe5), 0x96);
        // 96 0034
        gbc.setState(0x46b, 0x1280, 0x7340, 0xe9b9, 0x3a5e, 0x5f40, 0x1, 0x1);
        gbc.writeMem(0x46b, { 0x96 });
        gbc.writeMem(0x5f40, { 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1280);
        EXPECT(gbc.pc(), 0x46c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 0035
        gbc.setState(0x3e76, 0x8ab7, 0x4a0, 0x9234, 0x8841, 0x7ed8, 0x1, 0x0);
        gbc.writeMem(0x3e76, { 0x96 });
        gbc.writeMem(0x7ed8, { 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x8ab7);
        EXPECT(gbc.pc(), 0x3e77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 0036
        gbc.setState(0x74bb, 0x1e40, 0xf590, 0xb897, 0x5ba2, 0x9edb, 0x0, 0x0);
        gbc.writeMem(0x74bb, { 0x96 });
        gbc.writeMem(0x9edb, { 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1e40);
        EXPECT(gbc.pc(), 0x74bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9edb), 0x14);
        // 96 0038
        gbc.setState(0x2248, 0xef27, 0xeb40, 0xae35, 0x95dc, 0x3d59, 0x1, 0x1);
        gbc.writeMem(0x2248, { 0x96 });
        gbc.writeMem(0x3d59, { 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xef27);
        EXPECT(gbc.pc(), 0x2249);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0039
        gbc.setState(0xb495, 0x6565, 0xc520, 0x6dea, 0x628e, 0x99bb, 0x0, 0x1);
        gbc.writeMem(0x99bb, { 0x3e });
        gbc.writeMem(0xb495, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6565);
        EXPECT(gbc.pc(), 0xb496);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99bb), 0x3e);
        EXPECT(gbc.readMem(0xb495), 0x96);
        // 96 003A
        gbc.setState(0x185e, 0x87ae, 0x8960, 0x99ac, 0x915d, 0xea79, 0x0, 0x1);
        gbc.writeMem(0x185e, { 0x96 });
        gbc.writeMem(0xea79, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x87ae);
        EXPECT(gbc.pc(), 0x185f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea79), 0x4d);
        // 96 003B
        gbc.setState(0xd5ea, 0x1fbe, 0x87b0, 0x4807, 0x8aef, 0xa337, 0x1, 0x0);
        gbc.writeMem(0xa337, { 0xd4 });
        gbc.writeMem(0xd5ea, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x1fbe);
        EXPECT(gbc.pc(), 0xd5eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa337), 0xd4);
        EXPECT(gbc.readMem(0xd5ea), 0x96);
        // 96 003C
        gbc.setState(0xa117, 0xa008, 0x7370, 0xe4ea, 0x9ad5, 0xe524, 0x1, 0x1);
        gbc.writeMem(0xa117, { 0x96 });
        gbc.writeMem(0xe524, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa008);
        EXPECT(gbc.pc(), 0xa118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa117), 0x96);
        EXPECT(gbc.readMem(0xe524), 0x5b);
        // 96 003D
        gbc.setState(0x5f4c, 0x1a8c, 0x11e0, 0x8f28, 0x86b5, 0x3745, 0x1, 0x0);
        gbc.writeMem(0x3745, { 0x38 });
        gbc.writeMem(0x5f4c, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x1a8c);
        EXPECT(gbc.pc(), 0x5f4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 003E
        gbc.setState(0x2a3, 0xf990, 0xe820, 0x55d6, 0x9c99, 0xd8f6, 0x0, 0x1);
        gbc.writeMem(0x2a3, { 0x96 });
        gbc.writeMem(0xd8f6, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xf990);
        EXPECT(gbc.pc(), 0x2a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8f6), 0x44);
        // 96 003F
        gbc.setState(0x4b6c, 0x950b, 0xf1c0, 0x84c5, 0xf193, 0x89da, 0x0, 0x1);
        gbc.writeMem(0x4b6c, { 0x96 });
        gbc.writeMem(0x89da, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x950b);
        EXPECT(gbc.pc(), 0x4b6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89da), 0x8d);
        // 96 0040
        gbc.setState(0x5f60, 0xe825, 0xe710, 0xd07b, 0x55a5, 0xcb73, 0x1, 0x1);
        gbc.writeMem(0x5f60, { 0x96 });
        gbc.writeMem(0xcb73, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe825);
        EXPECT(gbc.pc(), 0x5f61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb73), 0x77);
        // 96 0041
        gbc.setState(0x9ab5, 0x5d77, 0x5fe0, 0x1d60, 0xe035, 0x8bf5, 0x0, 0x1);
        gbc.writeMem(0x8bf5, { 0xe8 });
        gbc.writeMem(0x9ab5, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5d77);
        EXPECT(gbc.pc(), 0x9ab6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bf5), 0xe8);
        EXPECT(gbc.readMem(0x9ab5), 0x96);
        // 96 0043
        gbc.setState(0xc84, 0x1d70, 0xb5e0, 0xcdd1, 0x3867, 0xb7d8, 0x1, 0x1);
        gbc.writeMem(0xc84, { 0x96 });
        gbc.writeMem(0xb7d8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1d70);
        EXPECT(gbc.pc(), 0xc85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7d8), 0x90);
        // 96 0044
        gbc.setState(0x1a58, 0x2ce9, 0xdad0, 0x8586, 0xd8da, 0xfb4f, 0x0, 0x0);
        gbc.writeMem(0x1a58, { 0x96 });
        gbc.writeMem(0xfb4f, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x2ce9);
        EXPECT(gbc.pc(), 0x1a59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfb4f), 0x8d);
        // 96 0045
        gbc.setState(0x7456, 0xbde9, 0xca40, 0xe08d, 0xca5d, 0xef07, 0x1, 0x1);
        gbc.writeMem(0x7456, { 0x96 });
        gbc.writeMem(0xef07, { 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xbde9);
        EXPECT(gbc.pc(), 0x7457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef07), 0xeb);
        // 96 0046
        gbc.setState(0x2228, 0xb4b0, 0x5e80, 0x9196, 0x26ed, 0xa5be, 0x1, 0x0);
        gbc.writeMem(0x2228, { 0x96 });
        gbc.writeMem(0xa5be, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb4b0);
        EXPECT(gbc.pc(), 0x2229);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5be), 0x67);
        // 96 0047
        gbc.setState(0x187c, 0x84d0, 0xc1c0, 0x9245, 0x9074, 0x5595, 0x1, 0x0);
        gbc.writeMem(0x187c, { 0x96 });
        gbc.writeMem(0x5595, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x84d0);
        EXPECT(gbc.pc(), 0x187d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 0048
        gbc.setState(0xb9b5, 0xe684, 0xd970, 0xfe92, 0x68ee, 0xf807, 0x0, 0x0);
        gbc.writeMem(0xb9b5, { 0x96 });
        gbc.writeMem(0xf807, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe684);
        EXPECT(gbc.pc(), 0xb9b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9b5), 0x96);
        EXPECT(gbc.readMem(0xf807), 0x8a);
        // 96 0049
        gbc.setState(0x8ea9, 0x53a7, 0x1610, 0xd999, 0x99c0, 0x33b0, 0x1, 0x1);
        gbc.writeMem(0x33b0, { 0xa0 });
        gbc.writeMem(0x8ea9, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x53a7);
        EXPECT(gbc.pc(), 0x8eaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea9), 0x96);
        // 96 004A
        gbc.setState(0xbd47, 0xa629, 0xe530, 0xbd06, 0xf506, 0x9118, 0x1, 0x0);
        gbc.writeMem(0x9118, { 0x91 });
        gbc.writeMem(0xbd47, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa629);
        EXPECT(gbc.pc(), 0xbd48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9118), 0x91);
        EXPECT(gbc.readMem(0xbd47), 0x96);
        // 96 004B
        gbc.setState(0x7da, 0x2cd, 0xf3b0, 0xc654, 0x138e, 0xdfb, 0x1, 0x0);
        gbc.writeMem(0x7da, { 0x96 });
        gbc.writeMem(0xdfb, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2cd);
        EXPECT(gbc.pc(), 0x7db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 004C
        gbc.setState(0xd45e, 0xb2f, 0xddb0, 0xbe51, 0x5b7f, 0xb2f3, 0x1, 0x0);
        gbc.writeMem(0xb2f3, { 0xbe });
        gbc.writeMem(0xd45e, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xb2f);
        EXPECT(gbc.pc(), 0xd45f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2f3), 0xbe);
        EXPECT(gbc.readMem(0xd45e), 0x96);
        // 96 004D
        gbc.setState(0x4664, 0x67b6, 0xee60, 0x3d4c, 0xdec4, 0xde86, 0x1, 0x0);
        gbc.writeMem(0x4664, { 0x96 });
        gbc.writeMem(0xde86, { 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x67b6);
        EXPECT(gbc.pc(), 0x4665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde86), 0x9f);
        // 96 004E
        gbc.setState(0xd53c, 0xcd8a, 0xf130, 0xbb1e, 0x18e1, 0x666f, 0x1, 0x1);
        gbc.writeMem(0x666f, { 0xb8 });
        gbc.writeMem(0xd53c, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xcd8a);
        EXPECT(gbc.pc(), 0xd53d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd53c), 0x96);
        // 96 004F
        gbc.setState(0x2b47, 0x2521, 0x100, 0xee59, 0x6de1, 0x9b38, 0x0, 0x1);
        gbc.writeMem(0x2b47, { 0x96 });
        gbc.writeMem(0x9b38, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2521);
        EXPECT(gbc.pc(), 0x2b48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b38), 0x58);
        // 96 0050
        gbc.setState(0x7884, 0x2f86, 0xa3c0, 0xa0cb, 0xc6e8, 0xa316, 0x1, 0x1);
        gbc.writeMem(0x7884, { 0x96 });
        gbc.writeMem(0xa316, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x2f86);
        EXPECT(gbc.pc(), 0x7885);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa316), 0x97);
        // 96 0051
        gbc.setState(0xcbfd, 0x9660, 0xc520, 0x8160, 0x101c, 0x86f1, 0x1, 0x1);
        gbc.writeMem(0x86f1, { 0xb });
        gbc.writeMem(0xcbfd, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x9660);
        EXPECT(gbc.pc(), 0xcbfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86f1), 0xb);
        EXPECT(gbc.readMem(0xcbfd), 0x96);
        // 96 0052
        gbc.setState(0xde33, 0x97c7, 0x5cc0, 0x2e0e, 0x5107, 0xd3af, 0x1, 0x0);
        gbc.writeMem(0xd3af, { 0xa3 });
        gbc.writeMem(0xde33, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x97c7);
        EXPECT(gbc.pc(), 0xde34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3af), 0xa3);
        EXPECT(gbc.readMem(0xde33), 0x96);
        // 96 0053
        gbc.setState(0x21df, 0xdfc1, 0xa080, 0x759, 0x567f, 0x659a, 0x1, 0x0);
        gbc.writeMem(0x21df, { 0x96 });
        gbc.writeMem(0x659a, { 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xdfc1);
        EXPECT(gbc.pc(), 0x21e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 0054
        gbc.setState(0xa8c1, 0xc8e8, 0xaf60, 0x41f1, 0x300d, 0xe175, 0x1, 0x0);
        gbc.writeMem(0xa8c1, { 0x96 });
        gbc.writeMem(0xe175, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc8e8);
        EXPECT(gbc.pc(), 0xa8c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8c1), 0x96);
        EXPECT(gbc.readMem(0xe175), 0x70);
        // 96 0055
        gbc.setState(0x4c12, 0x3268, 0xb1b0, 0xaa1f, 0xb668, 0xfe9f, 0x1, 0x1);
        gbc.writeMem(0x4c12, { 0x96 });
        gbc.writeMem(0xfe9f, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x3268);
        EXPECT(gbc.pc(), 0x4c13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfe9f), 0x30);
        // 96 0056
        gbc.setState(0x8e26, 0x3866, 0x6040, 0x1639, 0x8abf, 0xbf1e, 0x0, 0x1);
        gbc.writeMem(0x8e26, { 0x96 });
        gbc.writeMem(0xbf1e, { 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3866);
        EXPECT(gbc.pc(), 0x8e27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e26), 0x96);
        EXPECT(gbc.readMem(0xbf1e), 0x63);
        // 96 0057
        gbc.setState(0xdc73, 0x3bed, 0xabb0, 0x7f4c, 0xb240, 0xa736, 0x0, 0x1);
        gbc.writeMem(0xa736, { 0xd3 });
        gbc.writeMem(0xdc73, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3bed);
        EXPECT(gbc.pc(), 0xdc74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa736), 0xd3);
        EXPECT(gbc.readMem(0xdc73), 0x96);
        // 96 0058
        gbc.setState(0xbf7d, 0xbc30, 0x6230, 0x4f63, 0x94e7, 0x9521, 0x1, 0x0);
        gbc.writeMem(0x9521, { 0xef });
        gbc.writeMem(0xbf7d, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xbc30);
        EXPECT(gbc.pc(), 0xbf7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9521), 0xef);
        EXPECT(gbc.readMem(0xbf7d), 0x96);
        // 96 0059
        gbc.setState(0xf07, 0xcdd1, 0x3000, 0x8a93, 0x4eb, 0xfe32, 0x1, 0x0);
        gbc.writeMem(0xf07, { 0x96 });
        gbc.writeMem(0xfe32, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xcdd1);
        EXPECT(gbc.pc(), 0xf08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfe32), 0x6d);
        // 96 005A
        gbc.setState(0x1b61, 0x7b5c, 0xcc50, 0x21d3, 0x3052, 0x602f, 0x1, 0x0);
        gbc.writeMem(0x1b61, { 0x96 });
        gbc.writeMem(0x602f, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7b5c);
        EXPECT(gbc.pc(), 0x1b62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 005B
        gbc.setState(0xc8fc, 0x4aa4, 0x1d90, 0x4370, 0xfa9e, 0xa84e, 0x1, 0x1);
        gbc.writeMem(0xa84e, { 0x75 });
        gbc.writeMem(0xc8fc, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x4aa4);
        EXPECT(gbc.pc(), 0xc8fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa84e), 0x75);
        EXPECT(gbc.readMem(0xc8fc), 0x96);
        // 96 005C
        gbc.setState(0x5cf, 0x414, 0x9c60, 0x4f6d, 0xd045, 0xbea6, 0x0, 0x1);
        gbc.writeMem(0x5cf, { 0x96 });
        gbc.writeMem(0xbea6, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x414);
        EXPECT(gbc.pc(), 0x5d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbea6), 0x6b);
        // 96 005D
        gbc.setState(0xb0c2, 0xface, 0x7280, 0xe317, 0xe372, 0xd20c, 0x0, 0x0);
        gbc.writeMem(0xb0c2, { 0x96 });
        gbc.writeMem(0xd20c, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xface);
        EXPECT(gbc.pc(), 0xb0c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0c2), 0x96);
        EXPECT(gbc.readMem(0xd20c), 0xc);
        // 96 005E
        gbc.setState(0xa1f5, 0x86f2, 0x1850, 0x201d, 0x66ff, 0x2a1, 0x0, 0x1);
        gbc.writeMem(0x2a1, { 0x54 });
        gbc.writeMem(0xa1f5, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x86f2);
        EXPECT(gbc.pc(), 0xa1f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1f5), 0x96);
        // 96 005F
        gbc.setState(0x4cb3, 0x6cac, 0x47a0, 0x733e, 0xda63, 0x6567, 0x0, 0x1);
        gbc.writeMem(0x4cb3, { 0x96 });
        gbc.writeMem(0x6567, { 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x6cac);
        EXPECT(gbc.pc(), 0x4cb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0060
        gbc.setState(0x50e0, 0x2db, 0x7620, 0xb796, 0x1938, 0x9099, 0x0, 0x1);
        gbc.writeMem(0x50e0, { 0x96 });
        gbc.writeMem(0x9099, { 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2db);
        EXPECT(gbc.pc(), 0x50e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9099), 0xbc);
        // 96 0061
        gbc.setState(0xa97f, 0x5a31, 0xe9d0, 0x646c, 0xc738, 0x7df5, 0x1, 0x0);
        gbc.writeMem(0x7df5, { 0x9 });
        gbc.writeMem(0xa97f, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5a31);
        EXPECT(gbc.pc(), 0xa980);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa97f), 0x96);
        // 96 0062
        gbc.setState(0x6ac6, 0x694d, 0x4230, 0xb527, 0x6d83, 0xd5c2, 0x0, 0x0);
        gbc.writeMem(0x6ac6, { 0x96 });
        gbc.writeMem(0xd5c2, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x694d);
        EXPECT(gbc.pc(), 0x6ac7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5c2), 0xcb);
        // 96 0063
        gbc.setState(0xce76, 0x18f, 0x8f60, 0x4033, 0xa5ef, 0xe763, 0x1, 0x0);
        gbc.writeMem(0xce76, { 0x96 });
        gbc.writeMem(0xe763, { 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x18f);
        EXPECT(gbc.pc(), 0xce77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce76), 0x96);
        EXPECT(gbc.readMem(0xe763), 0xfa);
        // 96 0064
        gbc.setState(0x82cc, 0x9bc1, 0xc880, 0x5580, 0x43da, 0x4232, 0x1, 0x1);
        gbc.writeMem(0x4232, { 0xd8 });
        gbc.writeMem(0x82cc, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9bc1);
        EXPECT(gbc.pc(), 0x82cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82cc), 0x96);
        // 96 0065
        gbc.setState(0x7c25, 0xbc0c, 0x4660, 0xf877, 0x7f44, 0x2b6e, 0x0, 0x0);
        gbc.writeMem(0x2b6e, { 0x34 });
        gbc.writeMem(0x7c25, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xbc0c);
        EXPECT(gbc.pc(), 0x7c26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 0066
        gbc.setState(0x7b9d, 0x914c, 0x7660, 0x73a6, 0xac15, 0x5d2d, 0x1, 0x0);
        gbc.writeMem(0x5d2d, { 0xeb });
        gbc.writeMem(0x7b9d, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x914c);
        EXPECT(gbc.pc(), 0x7b9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 0067
        gbc.setState(0x19c0, 0x411f, 0x6bc0, 0x5516, 0x80d9, 0xf002, 0x0, 0x0);
        gbc.writeMem(0x19c0, { 0x96 });
        gbc.writeMem(0xf002, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x411f);
        EXPECT(gbc.pc(), 0x19c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf002), 0x89);
        // 96 0068
        gbc.setState(0x6002, 0x1005, 0x8d0, 0x818d, 0xd24e, 0x39be, 0x0, 0x1);
        gbc.writeMem(0x39be, { 0xbc });
        gbc.writeMem(0x6002, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1005);
        EXPECT(gbc.pc(), 0x6003);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 0069
        gbc.setState(0x5c4, 0xb4b2, 0x2180, 0xf544, 0x9f83, 0x5795, 0x1, 0x0);
        gbc.writeMem(0x5c4, { 0x96 });
        gbc.writeMem(0x5795, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb4b2);
        EXPECT(gbc.pc(), 0x5c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 006A
        gbc.setState(0x9f0b, 0x877b, 0xf010, 0xef90, 0x4099, 0xc438, 0x1, 0x1);
        gbc.writeMem(0x9f0b, { 0x96 });
        gbc.writeMem(0xc438, { 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x877b);
        EXPECT(gbc.pc(), 0x9f0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f0b), 0x96);
        EXPECT(gbc.readMem(0xc438), 0x7d);
        // 96 006B
        gbc.setState(0xef87, 0x6991, 0x4760, 0x4da2, 0x6a04, 0x7f3d, 0x1, 0x0);
        gbc.writeMem(0x7f3d, { 0xb3 });
        gbc.writeMem(0xef87, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x6991);
        EXPECT(gbc.pc(), 0xef88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef87), 0x96);
        // 96 006C
        gbc.setState(0x4f23, 0xd89b, 0x2a40, 0x1151, 0xd8f7, 0x7ab0, 0x0, 0x1);
        gbc.writeMem(0x4f23, { 0x96 });
        gbc.writeMem(0x7ab0, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd89b);
        EXPECT(gbc.pc(), 0x4f24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 006D
        gbc.setState(0x66a0, 0xc28b, 0xf900, 0x40fe, 0xb845, 0x72d4, 0x1, 0x1);
        gbc.writeMem(0x66a0, { 0x96 });
        gbc.writeMem(0x72d4, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc28b);
        EXPECT(gbc.pc(), 0x66a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 006E
        gbc.setState(0x343, 0x66f0, 0xa990, 0x68b3, 0xf4d9, 0xa26, 0x1, 0x0);
        gbc.writeMem(0x343, { 0x96 });
        gbc.writeMem(0xa26, { 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x66f0);
        EXPECT(gbc.pc(), 0x344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 006F
        gbc.setState(0x6cd1, 0x4ccf, 0x93c0, 0x9f8a, 0x6413, 0x182c, 0x0, 0x1);
        gbc.writeMem(0x182c, { 0xf });
        gbc.writeMem(0x6cd1, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4ccf);
        EXPECT(gbc.pc(), 0x6cd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 0070
        gbc.setState(0xe214, 0x5fae, 0xfac0, 0x7a23, 0x3a72, 0x13, 0x1, 0x1);
        gbc.writeMem(0x13, { 0x5d });
        gbc.writeMem(0xe214, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x5fae);
        EXPECT(gbc.pc(), 0xe215);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe214), 0x96);
        // 96 0072
        gbc.setState(0xdb6f, 0x7bd2, 0x5920, 0xd257, 0x7a1e, 0xcca1, 0x0, 0x1);
        gbc.writeMem(0xcca1, { 0xd0 });
        gbc.writeMem(0xdb6f, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7bd2);
        EXPECT(gbc.pc(), 0xdb70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcca1), 0xd0);
        EXPECT(gbc.readMem(0xdb6f), 0x96);
        // 96 0073
        gbc.setState(0x40a3, 0x412e, 0xb790, 0x1060, 0x2355, 0xc271, 0x0, 0x1);
        gbc.writeMem(0x40a3, { 0x96 });
        gbc.writeMem(0xc271, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x412e);
        EXPECT(gbc.pc(), 0x40a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc271), 0x15);
        // 96 0074
        gbc.setState(0x8fba, 0xc542, 0x3c40, 0xb167, 0x60ac, 0xebb0, 0x1, 0x1);
        gbc.writeMem(0x8fba, { 0x96 });
        gbc.writeMem(0xebb0, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc542);
        EXPECT(gbc.pc(), 0x8fbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fba), 0x96);
        EXPECT(gbc.readMem(0xebb0), 0x7c);
        // 96 0075
        gbc.setState(0xcbe8, 0x2391, 0x6390, 0x6bbc, 0xed3c, 0x8e95, 0x1, 0x0);
        gbc.writeMem(0x8e95, { 0x2f });
        gbc.writeMem(0xcbe8, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2391);
        EXPECT(gbc.pc(), 0xcbe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e95), 0x2f);
        EXPECT(gbc.readMem(0xcbe8), 0x96);
        // 96 0076
        gbc.setState(0x77a, 0xe140, 0x44c0, 0x145e, 0x2e19, 0x45ce, 0x1, 0x1);
        gbc.writeMem(0x77a, { 0x96 });
        gbc.writeMem(0x45ce, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe140);
        EXPECT(gbc.pc(), 0x77b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0077
        gbc.setState(0x27aa, 0x2df2, 0xa480, 0xc461, 0x6172, 0x1951, 0x1, 0x0);
        gbc.writeMem(0x1951, { 0x8e });
        gbc.writeMem(0x27aa, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x2df2);
        EXPECT(gbc.pc(), 0x27ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 0078
        gbc.setState(0x8e7d, 0x206a, 0xb180, 0xa132, 0x189f, 0x3390, 0x1, 0x1);
        gbc.writeMem(0x3390, { 0x8d });
        gbc.writeMem(0x8e7d, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x206a);
        EXPECT(gbc.pc(), 0x8e7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e7d), 0x96);
        // 96 0079
        gbc.setState(0xa734, 0x4cda, 0x6fa0, 0xfbe7, 0x1252, 0x6ce2, 0x0, 0x1);
        gbc.writeMem(0x6ce2, { 0xa9 });
        gbc.writeMem(0xa734, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x4cda);
        EXPECT(gbc.pc(), 0xa735);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa734), 0x96);
        // 96 007A
        gbc.setState(0x9170, 0x889a, 0x5d80, 0x10da, 0x6ea, 0x9631, 0x0, 0x0);
        gbc.writeMem(0x9170, { 0x96 });
        gbc.writeMem(0x9631, { 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x889a);
        EXPECT(gbc.pc(), 0x9171);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9170), 0x96);
        EXPECT(gbc.readMem(0x9631), 0x13);
        // 96 007B
        gbc.setState(0xca41, 0x94c, 0x5d30, 0xdb8, 0x582f, 0x6a37, 0x1, 0x0);
        gbc.writeMem(0x6a37, { 0x8b });
        gbc.writeMem(0xca41, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x94c);
        EXPECT(gbc.pc(), 0xca42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca41), 0x96);
        // 96 007C
        gbc.setState(0xbaf2, 0xae3f, 0x15c0, 0x2a0b, 0x31fd, 0xe421, 0x0, 0x0);
        gbc.writeMem(0xbaf2, { 0x96 });
        gbc.writeMem(0xe421, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xae3f);
        EXPECT(gbc.pc(), 0xbaf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaf2), 0x96);
        EXPECT(gbc.readMem(0xe421), 0x80);
        // 96 007D
        gbc.setState(0x55ec, 0xb484, 0xfc30, 0xedb1, 0xe947, 0x98b9, 0x0, 0x0);
        gbc.writeMem(0x55ec, { 0x96 });
        gbc.writeMem(0x98b9, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb484);
        EXPECT(gbc.pc(), 0x55ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98b9), 0xdf);
        // 96 007E
        gbc.setState(0x8843, 0xcc03, 0x52f0, 0x84b5, 0x97c1, 0x8624, 0x0, 0x1);
        gbc.writeMem(0x8624, { 0x5f });
        gbc.writeMem(0x8843, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xcc03);
        EXPECT(gbc.pc(), 0x8844);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8624), 0x5f);
        EXPECT(gbc.readMem(0x8843), 0x96);
        // 96 007F
        gbc.setState(0x4b43, 0x6506, 0xe710, 0x9962, 0x8f6c, 0x68d9, 0x1, 0x0);
        gbc.writeMem(0x4b43, { 0x96 });
        gbc.writeMem(0x68d9, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x6506);
        EXPECT(gbc.pc(), 0x4b44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 0081
        gbc.setState(0x2b40, 0xe59, 0x8030, 0x4063, 0xba7, 0xdc23, 0x0, 0x1);
        gbc.writeMem(0x2b40, { 0x96 });
        gbc.writeMem(0xdc23, { 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xe59);
        EXPECT(gbc.pc(), 0x2b41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc23), 0x34);
        // 96 0082
        gbc.setState(0x4c1f, 0x6a7c, 0x3550, 0x7a91, 0x8c16, 0x42ed, 0x0, 0x0);
        gbc.writeMem(0x42ed, { 0xa3 });
        gbc.writeMem(0x4c1f, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6a7c);
        EXPECT(gbc.pc(), 0x4c20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0083
        gbc.setState(0x15b4, 0xf75e, 0x3f80, 0x6ebb, 0x64f0, 0x511a, 0x1, 0x0);
        gbc.writeMem(0x15b4, { 0x96 });
        gbc.writeMem(0x511a, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf75e);
        EXPECT(gbc.pc(), 0x15b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0084
        gbc.setState(0xe03c, 0x1670, 0xf770, 0xe48d, 0x5268, 0x80a8, 0x1, 0x1);
        gbc.writeMem(0x80a8, { 0x81 });
        gbc.writeMem(0xe03c, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1670);
        EXPECT(gbc.pc(), 0xe03d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80a8), 0x81);
        EXPECT(gbc.readMem(0xe03c), 0x96);
        // 96 0085
        gbc.setState(0xb5fc, 0x10cf, 0x4c10, 0xe7de, 0xc282, 0x7776, 0x0, 0x0);
        gbc.writeMem(0x7776, { 0x7e });
        gbc.writeMem(0xb5fc, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x10cf);
        EXPECT(gbc.pc(), 0xb5fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5fc), 0x96);
        // 96 0089
        gbc.setState(0x48c5, 0xd545, 0xf4c0, 0x1f7, 0x8f1e, 0x83ca, 0x1, 0x0);
        gbc.writeMem(0x48c5, { 0x96 });
        gbc.writeMem(0x83ca, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xd545);
        EXPECT(gbc.pc(), 0x48c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ca), 0xd8);
        // 96 008A
        gbc.setState(0x3088, 0xa00f, 0xcec0, 0x1b89, 0x681d, 0xbf0c, 0x0, 0x1);
        gbc.writeMem(0x3088, { 0x96 });
        gbc.writeMem(0xbf0c, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa00f);
        EXPECT(gbc.pc(), 0x3089);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf0c), 0xaa);
        // 96 008B
        gbc.setState(0xdfab, 0xd417, 0x7d0, 0x32f2, 0xea82, 0xe12, 0x1, 0x0);
        gbc.writeMem(0xe12, { 0xc4 });
        gbc.writeMem(0xdfab, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd417);
        EXPECT(gbc.pc(), 0xdfac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfab), 0x96);
        // 96 008C
        gbc.setState(0x7bf4, 0x7869, 0x6d30, 0x9e21, 0x3e0, 0xbc42, 0x1, 0x1);
        gbc.writeMem(0x7bf4, { 0x96 });
        gbc.writeMem(0xbc42, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x7869);
        EXPECT(gbc.pc(), 0x7bf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc42), 0x59);
        // 96 008E
        gbc.setState(0x75cb, 0xd01f, 0x71b0, 0x9e2b, 0x8737, 0xc58b, 0x1, 0x1);
        gbc.writeMem(0x75cb, { 0x96 });
        gbc.writeMem(0xc58b, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xd01f);
        EXPECT(gbc.pc(), 0x75cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc58b), 0x44);
        // 96 0090
        gbc.setState(0x2055, 0x38ff, 0xc6e0, 0xaa2e, 0x6add, 0x7f5d, 0x1, 0x0);
        gbc.writeMem(0x2055, { 0x96 });
        gbc.writeMem(0x7f5d, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x38ff);
        EXPECT(gbc.pc(), 0x2056);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 0091
        gbc.setState(0x48bd, 0x2470, 0x97a0, 0x691f, 0x8eb4, 0x3bc4, 0x1, 0x1);
        gbc.writeMem(0x3bc4, { 0x25 });
        gbc.writeMem(0x48bd, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x2470);
        EXPECT(gbc.pc(), 0x48be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 0092
        gbc.setState(0x28d7, 0x881d, 0x7ec0, 0x303, 0xf045, 0x7dc1, 0x0, 0x1);
        gbc.writeMem(0x28d7, { 0x96 });
        gbc.writeMem(0x7dc1, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x881d);
        EXPECT(gbc.pc(), 0x28d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0093
        gbc.setState(0xc712, 0xfedd, 0xc5c0, 0xd650, 0x9bcb, 0x22b0, 0x0, 0x0);
        gbc.writeMem(0x22b0, { 0x50 });
        gbc.writeMem(0xc712, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xfedd);
        EXPECT(gbc.pc(), 0xc713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc712), 0x96);
        // 96 0094
        gbc.setState(0xac64, 0xf32a, 0x6890, 0x8cae, 0x3c10, 0x245a, 0x0, 0x1);
        gbc.writeMem(0x245a, { 0xa9 });
        gbc.writeMem(0xac64, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xf32a);
        EXPECT(gbc.pc(), 0xac65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac64), 0x96);
        // 96 0095
        gbc.setState(0x6fd9, 0x149a, 0x8210, 0xa256, 0x79f4, 0x7c91, 0x0, 0x0);
        gbc.writeMem(0x6fd9, { 0x96 });
        gbc.writeMem(0x7c91, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x149a);
        EXPECT(gbc.pc(), 0x6fda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 0096
        gbc.setState(0xee55, 0x706, 0x79a0, 0xf481, 0x2e54, 0x631f, 0x0, 0x1);
        gbc.writeMem(0x631f, { 0x8c });
        gbc.writeMem(0xee55, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x706);
        EXPECT(gbc.pc(), 0xee56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee55), 0x96);
        // 96 0097
        gbc.setState(0x322e, 0xdd9, 0x9620, 0x724, 0xefd4, 0xcd58, 0x0, 0x1);
        gbc.writeMem(0x322e, { 0x96 });
        gbc.writeMem(0xcd58, { 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xdd9);
        EXPECT(gbc.pc(), 0x322f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd58), 0x17);
        // 96 0098
        gbc.setState(0x1fad, 0xfe7f, 0x2370, 0x5d37, 0xc5e1, 0x61cb, 0x0, 0x0);
        gbc.writeMem(0x1fad, { 0x96 });
        gbc.writeMem(0x61cb, { 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xfe7f);
        EXPECT(gbc.pc(), 0x1fae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 009B
        gbc.setState(0x504c, 0x13a9, 0x24b0, 0x7ceb, 0xf853, 0x62f, 0x0, 0x0);
        gbc.writeMem(0x62f, { 0x9b });
        gbc.writeMem(0x504c, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x13a9);
        EXPECT(gbc.pc(), 0x504d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 009C
        gbc.setState(0x517, 0x8ee8, 0xc470, 0x6ad4, 0x9dbe, 0x7d08, 0x1, 0x1);
        gbc.writeMem(0x517, { 0x96 });
        gbc.writeMem(0x7d08, { 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8ee8);
        EXPECT(gbc.pc(), 0x518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 009D
        gbc.setState(0xebe, 0xef45, 0x7cd0, 0xb65b, 0x38df, 0xf0ac, 0x0, 0x1);
        gbc.writeMem(0xebe, { 0x96 });
        gbc.writeMem(0xf0ac, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xef45);
        EXPECT(gbc.pc(), 0xebf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf0ac), 0x5f);
        // 96 009E
        gbc.setState(0x5cbc, 0x8955, 0xc030, 0xe96, 0x8762, 0x6a56, 0x1, 0x0);
        gbc.writeMem(0x5cbc, { 0x96 });
        gbc.writeMem(0x6a56, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8955);
        EXPECT(gbc.pc(), 0x5cbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 00A0
        gbc.setState(0x8db4, 0x3ed9, 0x1290, 0x607a, 0x4da, 0x6961, 0x0, 0x0);
        gbc.writeMem(0x6961, { 0x10 });
        gbc.writeMem(0x8db4, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3ed9);
        EXPECT(gbc.pc(), 0x8db5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8db4), 0x96);
        // 96 00A1
        gbc.setState(0x1664, 0xc4d, 0x45a0, 0x38ee, 0x1425, 0xb372, 0x1, 0x0);
        gbc.writeMem(0x1664, { 0x96 });
        gbc.writeMem(0xb372, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xc4d);
        EXPECT(gbc.pc(), 0x1665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb372), 0xfe);
        // 96 00A2
        gbc.setState(0x98c7, 0xa8b9, 0x7fd0, 0xf1e, 0xd73a, 0xb807, 0x1, 0x1);
        gbc.writeMem(0x98c7, { 0x96 });
        gbc.writeMem(0xb807, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa8b9);
        EXPECT(gbc.pc(), 0x98c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98c7), 0x96);
        EXPECT(gbc.readMem(0xb807), 0x6d);
        // 96 00A3
        gbc.setState(0x758f, 0x6035, 0x3b20, 0x59f5, 0x8a52, 0x7d6b, 0x1, 0x0);
        gbc.writeMem(0x758f, { 0x96 });
        gbc.writeMem(0x7d6b, { 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x6035);
        EXPECT(gbc.pc(), 0x7590);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 00A4
        gbc.setState(0x4178, 0xac47, 0x1860, 0xcff9, 0xec3a, 0x68b2, 0x1, 0x0);
        gbc.writeMem(0x4178, { 0x96 });
        gbc.writeMem(0x68b2, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xac47);
        EXPECT(gbc.pc(), 0x4179);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 00A5
        gbc.setState(0x3c3, 0xbed2, 0x8890, 0x75fa, 0x1439, 0x4cf4, 0x1, 0x0);
        gbc.writeMem(0x3c3, { 0x96 });
        gbc.writeMem(0x4cf4, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xbed2);
        EXPECT(gbc.pc(), 0x3c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 00A6
        gbc.setState(0x39c3, 0xc5e0, 0xbe00, 0x76c, 0x9141, 0x123d, 0x1, 0x0);
        gbc.writeMem(0x123d, { 0x8d });
        gbc.writeMem(0x39c3, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc5e0);
        EXPECT(gbc.pc(), 0x39c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 00A7
        gbc.setState(0x2d0b, 0xfbc1, 0xdce0, 0x34f3, 0x2e2d, 0xefa8, 0x0, 0x0);
        gbc.writeMem(0x2d0b, { 0x96 });
        gbc.writeMem(0xefa8, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xfbc1);
        EXPECT(gbc.pc(), 0x2d0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefa8), 0xf0);
        // 96 00A8
        gbc.setState(0x798d, 0x87b9, 0x15a0, 0xe25e, 0x5ffb, 0xf573, 0x0, 0x0);
        gbc.writeMem(0x798d, { 0x96 });
        gbc.writeMem(0xf573, { 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x87b9);
        EXPECT(gbc.pc(), 0x798e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf573), 0x1d);
        // 96 00A9
        gbc.setState(0x7f34, 0xefa0, 0xdb90, 0xe0eb, 0x319a, 0x18dd, 0x0, 0x1);
        gbc.writeMem(0x18dd, { 0x10 });
        gbc.writeMem(0x7f34, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xefa0);
        EXPECT(gbc.pc(), 0x7f35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 00AA
        gbc.setState(0x784a, 0xc72e, 0xce60, 0x5a3e, 0x64f8, 0xbaf6, 0x0, 0x1);
        gbc.writeMem(0x784a, { 0x96 });
        gbc.writeMem(0xbaf6, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xc72e);
        EXPECT(gbc.pc(), 0x784b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaf6), 0xa6);
        // 96 00AB
        gbc.setState(0x1161, 0x7083, 0xc3f0, 0x4d59, 0xde34, 0x6f2a, 0x0, 0x0);
        gbc.writeMem(0x1161, { 0x96 });
        gbc.writeMem(0x6f2a, { 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x7083);
        EXPECT(gbc.pc(), 0x1162);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 00AC
        gbc.setState(0x2aa4, 0xf81c, 0xad0, 0xb662, 0x1cf3, 0xc82a, 0x1, 0x0);
        gbc.writeMem(0x2aa4, { 0x96 });
        gbc.writeMem(0xc82a, { 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf81c);
        EXPECT(gbc.pc(), 0x2aa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc82a), 0xe5);
        // 96 00AD
        gbc.setState(0x6772, 0x7e91, 0xfb0, 0xd624, 0x59ad, 0xd639, 0x1, 0x1);
        gbc.writeMem(0x6772, { 0x96 });
        gbc.writeMem(0xd639, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7e91);
        EXPECT(gbc.pc(), 0x6773);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd639), 0x8c);
        // 96 00AE
        gbc.setState(0x887, 0x572a, 0x1f50, 0xa131, 0x61e, 0xe78, 0x0, 0x1);
        gbc.writeMem(0x887, { 0x96 });
        gbc.writeMem(0xe78, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x572a);
        EXPECT(gbc.pc(), 0x888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 00AF
        gbc.setState(0x687a, 0xd7cf, 0x100, 0x7cd9, 0x743a, 0x2c64, 0x1, 0x1);
        gbc.writeMem(0x2c64, { 0x24 });
        gbc.writeMem(0x687a, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd7cf);
        EXPECT(gbc.pc(), 0x687b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 00B1
        gbc.setState(0xdf9c, 0xafca, 0x5360, 0xa6ae, 0x1078, 0x42b9, 0x0, 0x0);
        gbc.writeMem(0x42b9, { 0x6d });
        gbc.writeMem(0xdf9c, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xafca);
        EXPECT(gbc.pc(), 0xdf9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf9c), 0x96);
        // 96 00B2
        gbc.setState(0x6067, 0xcfb, 0xd100, 0x249f, 0xdb4a, 0x9011, 0x0, 0x0);
        gbc.writeMem(0x6067, { 0x96 });
        gbc.writeMem(0x9011, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xcfb);
        EXPECT(gbc.pc(), 0x6068);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9011), 0xe4);
        // 96 00B3
        gbc.setState(0x40d1, 0x2630, 0xe620, 0x397, 0x6b63, 0xce5e, 0x0, 0x0);
        gbc.writeMem(0x40d1, { 0x96 });
        gbc.writeMem(0xce5e, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2630);
        EXPECT(gbc.pc(), 0x40d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce5e), 0x66);
        // 96 00B4
        gbc.setState(0x7960, 0xaa60, 0xf5d0, 0x63e6, 0xb4ae, 0x8a01, 0x1, 0x1);
        gbc.writeMem(0x7960, { 0x96 });
        gbc.writeMem(0x8a01, { 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xaa60);
        EXPECT(gbc.pc(), 0x7961);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a01), 0x1c);
        // 96 00B5
        gbc.setState(0xb39f, 0x6fe3, 0x99d0, 0x2f07, 0xd7bf, 0x784, 0x1, 0x1);
        gbc.writeMem(0x784, { 0x36 });
        gbc.writeMem(0xb39f, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6fe3);
        EXPECT(gbc.pc(), 0xb3a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb39f), 0x96);
        // 96 00B6
        gbc.setState(0x50e6, 0x4d3b, 0xb610, 0xf2db, 0x7144, 0x4d3b, 0x0, 0x1);
        gbc.writeMem(0x4d3b, { 0xfa });
        gbc.writeMem(0x50e6, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4d3b);
        EXPECT(gbc.pc(), 0x50e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 00B7
        gbc.setState(0x7d13, 0x428a, 0x3840, 0xfa74, 0x5a15, 0xa70d, 0x1, 0x0);
        gbc.writeMem(0x7d13, { 0x96 });
        gbc.writeMem(0xa70d, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x428a);
        EXPECT(gbc.pc(), 0x7d14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa70d), 0x60);
        // 96 00B8
        gbc.setState(0x5494, 0xb8c4, 0xea00, 0x82cd, 0xbee0, 0x8b49, 0x0, 0x0);
        gbc.writeMem(0x5494, { 0x96 });
        gbc.writeMem(0x8b49, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xb8c4);
        EXPECT(gbc.pc(), 0x5495);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b49), 0xcb);
        // 96 00B9
        gbc.setState(0xe99d, 0x166d, 0x7740, 0x496d, 0x9c6f, 0xa264, 0x1, 0x0);
        gbc.writeMem(0xa264, { 0x75 });
        gbc.writeMem(0xe99d, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x166d);
        EXPECT(gbc.pc(), 0xe99e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa264), 0x75);
        EXPECT(gbc.readMem(0xe99d), 0x96);
        // 96 00BA
        gbc.setState(0x7510, 0xcd2f, 0x8580, 0x317f, 0xf74a, 0xd629, 0x0, 0x0);
        gbc.writeMem(0x7510, { 0x96 });
        gbc.writeMem(0xd629, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xcd2f);
        EXPECT(gbc.pc(), 0x7511);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd629), 0x97);
        // 96 00BB
        gbc.setState(0xe7d, 0x5427, 0x6e70, 0x63c6, 0x737d, 0xaae2, 0x0, 0x0);
        gbc.writeMem(0xe7d, { 0x96 });
        gbc.writeMem(0xaae2, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5427);
        EXPECT(gbc.pc(), 0xe7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaae2), 0x86);
        // 96 00BC
        gbc.setState(0xb050, 0x40a, 0x2090, 0x4dfb, 0xd695, 0x2802, 0x1, 0x1);
        gbc.writeMem(0x2802, { 0x9c });
        gbc.writeMem(0xb050, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x40a);
        EXPECT(gbc.pc(), 0xb051);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb050), 0x96);
        // 96 00BD
        gbc.setState(0xd728, 0x7925, 0xe50, 0x3163, 0x2701, 0xb164, 0x1, 0x0);
        gbc.writeMem(0xb164, { 0xf4 });
        gbc.writeMem(0xd728, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x7925);
        EXPECT(gbc.pc(), 0xd729);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb164), 0xf4);
        EXPECT(gbc.readMem(0xd728), 0x96);
        // 96 00BE
        gbc.setState(0x19e9, 0x57f3, 0xac70, 0xe49f, 0x69c4, 0x61e8, 0x1, 0x1);
        gbc.writeMem(0x19e9, { 0x96 });
        gbc.writeMem(0x61e8, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x57f3);
        EXPECT(gbc.pc(), 0x19ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 00BF
        gbc.setState(0x7045, 0xe32d, 0xc4c0, 0xa844, 0x6d7e, 0x8527, 0x1, 0x1);
        gbc.writeMem(0x7045, { 0x96 });
        gbc.writeMem(0x8527, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe32d);
        EXPECT(gbc.pc(), 0x7046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8527), 0xdf);
        // 96 00C0
        gbc.setState(0xc977, 0x4f1d, 0x2530, 0xe911, 0xb170, 0x501b, 0x0, 0x0);
        gbc.writeMem(0x501b, { 0x99 });
        gbc.writeMem(0xc977, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x4f1d);
        EXPECT(gbc.pc(), 0xc978);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc977), 0x96);
        // 96 00C1
        gbc.setState(0x559e, 0xb9f1, 0x28d0, 0x3ab, 0xa819, 0xdeb6, 0x1, 0x0);
        gbc.writeMem(0x559e, { 0x96 });
        gbc.writeMem(0xdeb6, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb9f1);
        EXPECT(gbc.pc(), 0x559f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeb6), 0xab);
        // 96 00C2
        gbc.setState(0x98b9, 0x1fa5, 0x7800, 0x74d5, 0x3a3e, 0x5ce9, 0x0, 0x1);
        gbc.writeMem(0x5ce9, { 0xa5 });
        gbc.writeMem(0x98b9, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1fa5);
        EXPECT(gbc.pc(), 0x98ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98b9), 0x96);
        // 96 00C3
        gbc.setState(0x100e, 0xccbd, 0x32a0, 0x139b, 0xe459, 0xc836, 0x0, 0x1);
        gbc.writeMem(0x100e, { 0x96 });
        gbc.writeMem(0xc836, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xccbd);
        EXPECT(gbc.pc(), 0x100f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc836), 0x8c);
        // 96 00C4
        gbc.setState(0xbdbb, 0xc2aa, 0x7ef0, 0xbaf7, 0x8eeb, 0x56d9, 0x0, 0x0);
        gbc.writeMem(0x56d9, { 0xa2 });
        gbc.writeMem(0xbdbb, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc2aa);
        EXPECT(gbc.pc(), 0xbdbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdbb), 0x96);
        // 96 00C5
        gbc.setState(0xa9c6, 0x2048, 0xde00, 0xd6f4, 0xb522, 0x2092, 0x0, 0x1);
        gbc.writeMem(0x2092, { 0x1e });
        gbc.writeMem(0xa9c6, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2048);
        EXPECT(gbc.pc(), 0xa9c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9c6), 0x96);
        // 96 00C6
        gbc.setState(0x6452, 0x9ae9, 0xcee0, 0xf0b0, 0xfd84, 0xf6c5, 0x0, 0x0);
        gbc.writeMem(0x6452, { 0x96 });
        gbc.writeMem(0xf6c5, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9ae9);
        EXPECT(gbc.pc(), 0x6453);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf6c5), 0xe7);
        // 96 00C7
        gbc.setState(0x31df, 0xab46, 0xfa50, 0x9ccd, 0x6746, 0x8304, 0x0, 0x0);
        gbc.writeMem(0x31df, { 0x96 });
        gbc.writeMem(0x8304, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xab46);
        EXPECT(gbc.pc(), 0x31e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8304), 0xaf);
        // 96 00C8
        gbc.setState(0x9d9f, 0xf8f1, 0x8f20, 0x6a10, 0x2ecf, 0xaebd, 0x0, 0x0);
        gbc.writeMem(0x9d9f, { 0x96 });
        gbc.writeMem(0xaebd, { 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xf8f1);
        EXPECT(gbc.pc(), 0x9da0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d9f), 0x96);
        EXPECT(gbc.readMem(0xaebd), 0x63);
        // 96 00C9
        gbc.setState(0xd1a3, 0x6914, 0xbea0, 0xbbfa, 0x63db, 0x7ef0, 0x1, 0x1);
        gbc.writeMem(0x7ef0, { 0x83 });
        gbc.writeMem(0xd1a3, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6914);
        EXPECT(gbc.pc(), 0xd1a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1a3), 0x96);
        // 96 00CA
        gbc.setState(0xc566, 0xd9ae, 0xd0a0, 0x4fd5, 0x8e05, 0xc50b, 0x1, 0x0);
        gbc.writeMem(0xc50b, { 0x93 });
        gbc.writeMem(0xc566, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd9ae);
        EXPECT(gbc.pc(), 0xc567);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc50b), 0x93);
        EXPECT(gbc.readMem(0xc566), 0x96);
        // 96 00CB
        gbc.setState(0x7cae, 0xf44b, 0x6890, 0xf0b6, 0x73e, 0xfd9b, 0x0, 0x0);
        gbc.writeMem(0x7cae, { 0x96 });
        gbc.writeMem(0xfd9b, { 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xf44b);
        EXPECT(gbc.pc(), 0x7caf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfd9b), 0xb4);
        // 96 00CC
        gbc.setState(0xcb7e, 0x36e1, 0xd640, 0xe354, 0x4250, 0xced4, 0x0, 0x1);
        gbc.writeMem(0xcb7e, { 0x96 });
        gbc.writeMem(0xced4, { 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x36e1);
        EXPECT(gbc.pc(), 0xcb7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb7e), 0x96);
        EXPECT(gbc.readMem(0xced4), 0x4);
        // 96 00CD
        gbc.setState(0xc8ee, 0x21e2, 0x9580, 0xf468, 0xf3bf, 0x8c8f, 0x0, 0x0);
        gbc.writeMem(0x8c8f, { 0xb9 });
        gbc.writeMem(0xc8ee, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x21e2);
        EXPECT(gbc.pc(), 0xc8ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c8f), 0xb9);
        EXPECT(gbc.readMem(0xc8ee), 0x96);
        // 96 00CE
        gbc.setState(0x8c09, 0x8b6d, 0xf560, 0xa7cb, 0xef2a, 0x70d, 0x0, 0x0);
        gbc.writeMem(0x70d, { 0x6f });
        gbc.writeMem(0x8c09, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8b6d);
        EXPECT(gbc.pc(), 0x8c0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c09), 0x96);
        // 96 00CF
        gbc.setState(0x667a, 0xc200, 0x2100, 0xb6c, 0x29cb, 0x11a7, 0x0, 0x0);
        gbc.writeMem(0x11a7, { 0xcf });
        gbc.writeMem(0x667a, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc200);
        EXPECT(gbc.pc(), 0x667b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 00D0
        gbc.setState(0x39e0, 0x964, 0xdf00, 0x54bf, 0x8909, 0x4db6, 0x0, 0x0);
        gbc.writeMem(0x39e0, { 0x96 });
        gbc.writeMem(0x4db6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x964);
        EXPECT(gbc.pc(), 0x39e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 00D1
        gbc.setState(0x36a4, 0x14ec, 0x6ee0, 0x2e79, 0x587c, 0x57a6, 0x0, 0x1);
        gbc.writeMem(0x36a4, { 0x96 });
        gbc.writeMem(0x57a6, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x14ec);
        EXPECT(gbc.pc(), 0x36a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 00D2
        gbc.setState(0x8ef0, 0xe6c4, 0xfd50, 0x5489, 0xc41f, 0x4b7, 0x0, 0x0);
        gbc.writeMem(0x4b7, { 0x6a });
        gbc.writeMem(0x8ef0, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xe6c4);
        EXPECT(gbc.pc(), 0x8ef1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ef0), 0x96);
        // 96 00D3
        gbc.setState(0x26ff, 0xa42a, 0x55f0, 0xaa3d, 0x68be, 0xc06a, 0x1, 0x0);
        gbc.writeMem(0x26ff, { 0x96 });
        gbc.writeMem(0xc06a, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa42a);
        EXPECT(gbc.pc(), 0x2700);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc06a), 0xcb);
        // 96 00D4
        gbc.setState(0xe5ed, 0x8b0b, 0x2430, 0xcf6f, 0x8b8b, 0x9717, 0x1, 0x1);
        gbc.writeMem(0x9717, { 0x21 });
        gbc.writeMem(0xe5ed, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x8b0b);
        EXPECT(gbc.pc(), 0xe5ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9717), 0x21);
        EXPECT(gbc.readMem(0xe5ed), 0x96);
        // 96 00D5
        gbc.setState(0xcb99, 0x56d6, 0xc140, 0xb4ee, 0x559e, 0xcafe, 0x1, 0x1);
        gbc.writeMem(0xcafe, { 0xdf });
        gbc.writeMem(0xcb99, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x56d6);
        EXPECT(gbc.pc(), 0xcb9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcafe), 0xdf);
        EXPECT(gbc.readMem(0xcb99), 0x96);
        // 96 00D6
        gbc.setState(0x3519, 0x6edd, 0x8fc0, 0x1b22, 0x6d6b, 0xbeb, 0x0, 0x1);
        gbc.writeMem(0xbeb, { 0x21 });
        gbc.writeMem(0x3519, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6edd);
        EXPECT(gbc.pc(), 0x351a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 00D7
        gbc.setState(0xeb8f, 0x4305, 0xe290, 0x3d03, 0xfdff, 0x5573, 0x0, 0x1);
        gbc.writeMem(0x5573, { 0x8c });
        gbc.writeMem(0xeb8f, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x4305);
        EXPECT(gbc.pc(), 0xeb90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb8f), 0x96);
        // 96 00D8
        gbc.setState(0xbf29, 0x5ab8, 0xd870, 0x7f73, 0xa9a6, 0x978a, 0x0, 0x1);
        gbc.writeMem(0x978a, { 0x66 });
        gbc.writeMem(0xbf29, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5ab8);
        EXPECT(gbc.pc(), 0xbf2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x978a), 0x66);
        EXPECT(gbc.readMem(0xbf29), 0x96);
        // 96 00D9
        gbc.setState(0xcbf, 0xe1d2, 0xb00, 0xe462, 0x2f24, 0x2d99, 0x0, 0x1);
        gbc.writeMem(0xcbf, { 0x96 });
        gbc.writeMem(0x2d99, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe1d2);
        EXPECT(gbc.pc(), 0xcc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 00DA
        gbc.setState(0x3b7, 0x4424, 0xd550, 0x4547, 0x687c, 0x1057, 0x0, 0x0);
        gbc.writeMem(0x3b7, { 0x96 });
        gbc.writeMem(0x1057, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x4424);
        EXPECT(gbc.pc(), 0x3b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 00DB
        gbc.setState(0x1ab, 0xd773, 0x24c0, 0x70bb, 0x42a9, 0x9a0b, 0x1, 0x0);
        gbc.writeMem(0x1ab, { 0x96 });
        gbc.writeMem(0x9a0b, { 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd773);
        EXPECT(gbc.pc(), 0x1ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a0b), 0x47);
        // 96 00DC
        gbc.setState(0x84d9, 0xe965, 0x17e0, 0xfe34, 0xef3e, 0x12e9, 0x0, 0x0);
        gbc.writeMem(0x12e9, { 0x11 });
        gbc.writeMem(0x84d9, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe965);
        EXPECT(gbc.pc(), 0x84da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84d9), 0x96);
        // 96 00DD
        gbc.setState(0xc1fb, 0xa91e, 0x35a0, 0x1cc4, 0x478b, 0xf552, 0x0, 0x1);
        gbc.writeMem(0xc1fb, { 0x96 });
        gbc.writeMem(0xf552, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa91e);
        EXPECT(gbc.pc(), 0xc1fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1fb), 0x96);
        EXPECT(gbc.readMem(0xf552), 0x40);
        // 96 00DE
        gbc.setState(0x672d, 0xdd4a, 0xf9a0, 0xadf1, 0x86c8, 0xb7a3, 0x1, 0x1);
        gbc.writeMem(0x672d, { 0x96 });
        gbc.writeMem(0xb7a3, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xdd4a);
        EXPECT(gbc.pc(), 0x672e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7a3), 0x8b);
        // 96 00E0
        gbc.setState(0x5f1a, 0x2f30, 0x45b0, 0x3a57, 0x54dc, 0x9401, 0x1, 0x0);
        gbc.writeMem(0x5f1a, { 0x96 });
        gbc.writeMem(0x9401, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2f30);
        EXPECT(gbc.pc(), 0x5f1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9401), 0xfc);
        // 96 00E1
        gbc.setState(0x92b0, 0xedb7, 0xd310, 0x4e11, 0xe3ff, 0x7d2d, 0x0, 0x0);
        gbc.writeMem(0x7d2d, { 0x13 });
        gbc.writeMem(0x92b0, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xedb7);
        EXPECT(gbc.pc(), 0x92b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92b0), 0x96);
        // 96 00E2
        gbc.setState(0x7671, 0xc002, 0x1ce0, 0x2538, 0x1360, 0xdf1, 0x1, 0x1);
        gbc.writeMem(0xdf1, { 0x19 });
        gbc.writeMem(0x7671, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc002);
        EXPECT(gbc.pc(), 0x7672);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 00E3
        gbc.setState(0xd91c, 0x1f66, 0xd540, 0xa8d1, 0xfd47, 0x211e, 0x1, 0x0);
        gbc.writeMem(0x211e, { 0x63 });
        gbc.writeMem(0xd91c, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1f66);
        EXPECT(gbc.pc(), 0xd91d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd91c), 0x96);
        // 96 00E4
        gbc.setState(0x422d, 0x7fbc, 0xb5b0, 0x90fb, 0x4a43, 0xee34, 0x0, 0x0);
        gbc.writeMem(0x422d, { 0x96 });
        gbc.writeMem(0xee34, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x7fbc);
        EXPECT(gbc.pc(), 0x422e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee34), 0x5c);
        // 96 00E5
        gbc.setState(0xbfb, 0xa4a3, 0x80e0, 0x51d6, 0x2f86, 0x45e9, 0x1, 0x0);
        gbc.writeMem(0xbfb, { 0x96 });
        gbc.writeMem(0x45e9, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa4a3);
        EXPECT(gbc.pc(), 0xbfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 00E6
        gbc.setState(0xea91, 0x18e, 0xb010, 0x8255, 0xeaf7, 0x1180, 0x0, 0x1);
        gbc.writeMem(0x1180, { 0x3e });
        gbc.writeMem(0xea91, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x18e);
        EXPECT(gbc.pc(), 0xea92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea91), 0x96);
        // 96 00E7
        gbc.setState(0x4776, 0xff09, 0x8fa0, 0x194b, 0xad36, 0x27ba, 0x0, 0x1);
        gbc.writeMem(0x27ba, { 0x55 });
        gbc.writeMem(0x4776, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xff09);
        EXPECT(gbc.pc(), 0x4777);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 00E8
        gbc.setState(0x7ba8, 0xd80d, 0x1960, 0x3161, 0xaac2, 0x9aa4, 0x0, 0x1);
        gbc.writeMem(0x7ba8, { 0x96 });
        gbc.writeMem(0x9aa4, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd80d);
        EXPECT(gbc.pc(), 0x7ba9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aa4), 0xcf);
        // 96 00E9
        gbc.setState(0x65d8, 0x2a43, 0xcd00, 0xa333, 0xf168, 0xcc2a, 0x1, 0x1);
        gbc.writeMem(0x65d8, { 0x96 });
        gbc.writeMem(0xcc2a, { 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2a43);
        EXPECT(gbc.pc(), 0x65d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc2a), 0xfa);
        // 96 00EA
        gbc.setState(0x811b, 0x6dc3, 0x5fb0, 0x5dcc, 0x9b87, 0x69d9, 0x0, 0x0);
        gbc.writeMem(0x69d9, { 0x35 });
        gbc.writeMem(0x811b, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x6dc3);
        EXPECT(gbc.pc(), 0x811c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x811b), 0x96);
        // 96 00EB
        gbc.setState(0xcb86, 0x7a7f, 0xac70, 0x3c4c, 0xe4ea, 0x3511, 0x0, 0x1);
        gbc.writeMem(0x3511, { 0xca });
        gbc.writeMem(0xcb86, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7a7f);
        EXPECT(gbc.pc(), 0xcb87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb86), 0x96);
        // 96 00ED
        gbc.setState(0xac3c, 0xb819, 0x6590, 0x7fac, 0xf2f8, 0xde1e, 0x0, 0x1);
        gbc.writeMem(0xac3c, { 0x96 });
        gbc.writeMem(0xde1e, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb819);
        EXPECT(gbc.pc(), 0xac3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac3c), 0x96);
        EXPECT(gbc.readMem(0xde1e), 0x67);
        // 96 00EE
        gbc.setState(0xb408, 0x2890, 0xa220, 0xaae7, 0x5d09, 0xf220, 0x0, 0x1);
        gbc.writeMem(0xb408, { 0x96 });
        gbc.writeMem(0xf220, { 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2890);
        EXPECT(gbc.pc(), 0xb409);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb408), 0x96);
        EXPECT(gbc.readMem(0xf220), 0x9);
        // 96 00EF
        gbc.setState(0xa537, 0xa447, 0x9310, 0x9392, 0x6b81, 0x82c6, 0x1, 0x1);
        gbc.writeMem(0x82c6, { 0x84 });
        gbc.writeMem(0xa537, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xa447);
        EXPECT(gbc.pc(), 0xa538);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82c6), 0x84);
        EXPECT(gbc.readMem(0xa537), 0x96);
        // 96 00F0
        gbc.setState(0x2f66, 0x2d7c, 0xcb10, 0x6836, 0xc4ae, 0x75b8, 0x0, 0x1);
        gbc.writeMem(0x2f66, { 0x96 });
        gbc.writeMem(0x75b8, { 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x2d7c);
        EXPECT(gbc.pc(), 0x2f67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 00F1
        gbc.setState(0x7cff, 0x4dee, 0x5780, 0xd2e7, 0xdd5a, 0xe4b2, 0x0, 0x1);
        gbc.writeMem(0x7cff, { 0x96 });
        gbc.writeMem(0xe4b2, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4dee);
        EXPECT(gbc.pc(), 0x7d00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4b2), 0x85);
        // 96 00F2
        gbc.setState(0xef45, 0x7626, 0xefc0, 0x270b, 0xc761, 0xdfc8, 0x1, 0x1);
        gbc.writeMem(0xdfc8, { 0x72 });
        gbc.writeMem(0xef45, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x7626);
        EXPECT(gbc.pc(), 0xef46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfc8), 0x72);
        EXPECT(gbc.readMem(0xef45), 0x96);
        // 96 00F3
        gbc.setState(0x1eed, 0xf9ee, 0xa140, 0x57d1, 0x3d0d, 0xd414, 0x1, 0x0);
        gbc.writeMem(0x1eed, { 0x96 });
        gbc.writeMem(0xd414, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf9ee);
        EXPECT(gbc.pc(), 0x1eee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd414), 0x1);
        // 96 00F4
        gbc.setState(0xe67, 0xa3c3, 0x85b0, 0xaecd, 0xe823, 0x789a, 0x0, 0x1);
        gbc.writeMem(0xe67, { 0x96 });
        gbc.writeMem(0x789a, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa3c3);
        EXPECT(gbc.pc(), 0xe68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 00F5
        gbc.setState(0x7fb2, 0xe1c4, 0x32e0, 0xf147, 0xd99b, 0x55e8, 0x1, 0x0);
        gbc.writeMem(0x55e8, { 0x82 });
        gbc.writeMem(0x7fb2, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xe1c4);
        EXPECT(gbc.pc(), 0x7fb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 00F6
        gbc.setState(0x88f9, 0x636b, 0xba00, 0xac06, 0x4038, 0x5d18, 0x1, 0x1);
        gbc.writeMem(0x5d18, { 0x7f });
        gbc.writeMem(0x88f9, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x636b);
        EXPECT(gbc.pc(), 0x88fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88f9), 0x96);
        // 96 00F7
        gbc.setState(0xdde6, 0x6434, 0x3ad0, 0xcc6b, 0x4768, 0x7bb3, 0x0, 0x0);
        gbc.writeMem(0x7bb3, { 0x82 });
        gbc.writeMem(0xdde6, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x6434);
        EXPECT(gbc.pc(), 0xdde7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdde6), 0x96);
        // 96 00F8
        gbc.setState(0xc1e1, 0xb82b, 0xe230, 0xaa44, 0x46ad, 0x4f5f, 0x1, 0x0);
        gbc.writeMem(0x4f5f, { 0xc9 });
        gbc.writeMem(0xc1e1, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb82b);
        EXPECT(gbc.pc(), 0xc1e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1e1), 0x96);
        // 96 00F9
        gbc.setState(0xc762, 0x34ae, 0x22d0, 0x7f2b, 0xe5f1, 0x6447, 0x0, 0x1);
        gbc.writeMem(0x6447, { 0x4 });
        gbc.writeMem(0xc762, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x34ae);
        EXPECT(gbc.pc(), 0xc763);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc762), 0x96);
        // 96 00FA
        gbc.setState(0xb0cd, 0x1934, 0xa3c0, 0x18fb, 0x71fa, 0x4e2e, 0x0, 0x1);
        gbc.writeMem(0x4e2e, { 0xc2 });
        gbc.writeMem(0xb0cd, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1934);
        EXPECT(gbc.pc(), 0xb0ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0cd), 0x96);
        // 96 00FB
        gbc.setState(0x2013, 0x555b, 0x4f40, 0xfb39, 0x16a3, 0x2e99, 0x1, 0x1);
        gbc.writeMem(0x2013, { 0x96 });
        gbc.writeMem(0x2e99, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x555b);
        EXPECT(gbc.pc(), 0x2014);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 00FC
        gbc.setState(0xb67e, 0x1603, 0xd740, 0x9dac, 0xd3a0, 0x8e9b, 0x1, 0x1);
        gbc.writeMem(0x8e9b, { 0x7d });
        gbc.writeMem(0xb67e, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1603);
        EXPECT(gbc.pc(), 0xb67f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e9b), 0x7d);
        EXPECT(gbc.readMem(0xb67e), 0x96);
        // 96 00FD
        gbc.setState(0xc5fb, 0xbff4, 0x4d40, 0x9af3, 0xadc6, 0xb6fc, 0x0, 0x1);
        gbc.writeMem(0xb6fc, { 0x7c });
        gbc.writeMem(0xc5fb, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xbff4);
        EXPECT(gbc.pc(), 0xc5fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6fc), 0x7c);
        EXPECT(gbc.readMem(0xc5fb), 0x96);
        // 96 00FE
        gbc.setState(0xc3ed, 0xe510, 0x1e60, 0x98e1, 0x983a, 0x25c5, 0x0, 0x0);
        gbc.writeMem(0x25c5, { 0xec });
        gbc.writeMem(0xc3ed, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe510);
        EXPECT(gbc.pc(), 0xc3ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3ed), 0x96);
        // 96 00FF
        gbc.setState(0xc515, 0x63db, 0x70f0, 0xa992, 0x8384, 0x2ca3, 0x0, 0x0);
        gbc.writeMem(0x2ca3, { 0xb8 });
        gbc.writeMem(0xc515, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x63db);
        EXPECT(gbc.pc(), 0xc516);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc515), 0x96);
        // 96 0100
        gbc.setState(0x4748, 0xaec4, 0x6720, 0x670a, 0xd3e8, 0x7ec7, 0x1, 0x0);
        gbc.writeMem(0x4748, { 0x96 });
        gbc.writeMem(0x7ec7, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xaec4);
        EXPECT(gbc.pc(), 0x4749);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0101
        gbc.setState(0x2618, 0x1581, 0x8f00, 0x555a, 0x6a01, 0x177f, 0x1, 0x1);
        gbc.writeMem(0x177f, { 0x28 });
        gbc.writeMem(0x2618, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x1581);
        EXPECT(gbc.pc(), 0x2619);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 0102
        gbc.setState(0x21f9, 0x8096, 0x3ef0, 0x29a1, 0x520f, 0xe41a, 0x1, 0x0);
        gbc.writeMem(0x21f9, { 0x96 });
        gbc.writeMem(0xe41a, { 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x8096);
        EXPECT(gbc.pc(), 0x21fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe41a), 0xfa);
        // 96 0103
        gbc.setState(0x4683, 0x58c, 0x1320, 0xb1ab, 0x6296, 0x246c, 0x1, 0x1);
        gbc.writeMem(0x246c, { 0xa6 });
        gbc.writeMem(0x4683, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x58c);
        EXPECT(gbc.pc(), 0x4684);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 0104
        gbc.setState(0x8749, 0xec04, 0xf690, 0xb2cf, 0x212c, 0x291f, 0x0, 0x1);
        gbc.writeMem(0x291f, { 0xfa });
        gbc.writeMem(0x8749, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xec04);
        EXPECT(gbc.pc(), 0x874a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8749), 0x96);
        // 96 0105
        gbc.setState(0x1abf, 0xc0ca, 0x8060, 0x7553, 0x8fa6, 0xd0a9, 0x1, 0x0);
        gbc.writeMem(0x1abf, { 0x96 });
        gbc.writeMem(0xd0a9, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xc0ca);
        EXPECT(gbc.pc(), 0x1ac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0a9), 0x8b);
        // 96 0106
        gbc.setState(0xd6c9, 0x6f59, 0x8fe0, 0xf941, 0x8010, 0xe870, 0x0, 0x0);
        gbc.writeMem(0xd6c9, { 0x96 });
        gbc.writeMem(0xe870, { 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6f59);
        EXPECT(gbc.pc(), 0xd6ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6c9), 0x96);
        EXPECT(gbc.readMem(0xe870), 0xeb);
        // 96 0107
        gbc.setState(0x9d2e, 0x18c0, 0x5b30, 0xa598, 0xf79e, 0xe8b, 0x1, 0x0);
        gbc.writeMem(0xe8b, { 0x93 });
        gbc.writeMem(0x9d2e, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x18c0);
        EXPECT(gbc.pc(), 0x9d2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d2e), 0x96);
        // 96 0109
        gbc.setState(0x3210, 0x28cc, 0xda40, 0x9bc2, 0xea2b, 0xd56f, 0x0, 0x1);
        gbc.writeMem(0x3210, { 0x96 });
        gbc.writeMem(0xd56f, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x28cc);
        EXPECT(gbc.pc(), 0x3211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd56f), 0xe9);
        // 96 010A
        gbc.setState(0x25fe, 0x7aeb, 0xb7e0, 0x4f4c, 0x8b0d, 0x2304, 0x0, 0x0);
        gbc.writeMem(0x2304, { 0x4 });
        gbc.writeMem(0x25fe, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x7aeb);
        EXPECT(gbc.pc(), 0x25ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 010B
        gbc.setState(0x6dd7, 0xc2d3, 0xb360, 0xf33f, 0x826b, 0xfb91, 0x1, 0x0);
        gbc.writeMem(0x6dd7, { 0x96 });
        gbc.writeMem(0xfb91, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc2d3);
        EXPECT(gbc.pc(), 0x6dd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfb91), 0x97);
        // 96 010C
        gbc.setState(0x1a43, 0xa83, 0x58f0, 0x47db, 0xb9bb, 0xaeae, 0x1, 0x1);
        gbc.writeMem(0x1a43, { 0x96 });
        gbc.writeMem(0xaeae, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa83);
        EXPECT(gbc.pc(), 0x1a44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeae), 0x45);
        // 96 010D
        gbc.setState(0x809, 0x4433, 0xa640, 0x6ba, 0xef20, 0x5ecb, 0x1, 0x1);
        gbc.writeMem(0x809, { 0x96 });
        gbc.writeMem(0x5ecb, { 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x4433);
        EXPECT(gbc.pc(), 0x80a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 010E
        gbc.setState(0x28bb, 0x960e, 0xd520, 0x7728, 0xcf73, 0xfa41, 0x0, 0x1);
        gbc.writeMem(0x28bb, { 0x96 });
        gbc.writeMem(0xfa41, { 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x960e);
        EXPECT(gbc.pc(), 0x28bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfa41), 0x27);
        // 96 010F
        gbc.setState(0x48d1, 0x9971, 0x1f40, 0x4450, 0xaa46, 0x162, 0x1, 0x0);
        gbc.writeMem(0x162, { 0x97 });
        gbc.writeMem(0x48d1, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x9971);
        EXPECT(gbc.pc(), 0x48d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0110
        gbc.setState(0x37db, 0x5124, 0xf8f0, 0xd3a2, 0x9820, 0xaff6, 0x1, 0x0);
        gbc.writeMem(0x37db, { 0x96 });
        gbc.writeMem(0xaff6, { 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x5124);
        EXPECT(gbc.pc(), 0x37dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaff6), 0xb0);
        // 96 0111
        gbc.setState(0x9e89, 0x7cc, 0xda80, 0xed30, 0xc509, 0x5502, 0x1, 0x1);
        gbc.writeMem(0x5502, { 0x6b });
        gbc.writeMem(0x9e89, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7cc);
        EXPECT(gbc.pc(), 0x9e8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e89), 0x96);
        // 96 0112
        gbc.setState(0xc6c, 0xa362, 0xc070, 0x41a4, 0x458b, 0xd236, 0x0, 0x0);
        gbc.writeMem(0xc6c, { 0x96 });
        gbc.writeMem(0xd236, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa362);
        EXPECT(gbc.pc(), 0xc6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd236), 0x46);
        // 96 0113
        gbc.setState(0x401, 0x5ec, 0x6690, 0xfd40, 0xea74, 0xf23f, 0x1, 0x0);
        gbc.writeMem(0x401, { 0x96 });
        gbc.writeMem(0xf23f, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x5ec);
        EXPECT(gbc.pc(), 0x402);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf23f), 0x37);
        // 96 0114
        gbc.setState(0x130a, 0xa9a2, 0xc800, 0x398b, 0xced5, 0x709d, 0x1, 0x1);
        gbc.writeMem(0x130a, { 0x96 });
        gbc.writeMem(0x709d, { 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa9a2);
        EXPECT(gbc.pc(), 0x130b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 0115
        gbc.setState(0x2661, 0x183e, 0x2890, 0xec64, 0x8e0, 0x808, 0x1, 0x0);
        gbc.writeMem(0x808, { 0xe3 });
        gbc.writeMem(0x2661, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x183e);
        EXPECT(gbc.pc(), 0x2662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0116
        gbc.setState(0x866c, 0xba9b, 0x5730, 0x816, 0xab62, 0x7056, 0x1, 0x0);
        gbc.writeMem(0x7056, { 0x22 });
        gbc.writeMem(0x866c, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xba9b);
        EXPECT(gbc.pc(), 0x866d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x866c), 0x96);
        // 96 0117
        gbc.setState(0xc1b6, 0xe0be, 0xdb90, 0x8982, 0xd446, 0xd887, 0x1, 0x0);
        gbc.writeMem(0xc1b6, { 0x96 });
        gbc.writeMem(0xd887, { 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe0be);
        EXPECT(gbc.pc(), 0xc1b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1b6), 0x96);
        EXPECT(gbc.readMem(0xd887), 0x48);
        // 96 0118
        gbc.setState(0x29d0, 0xc131, 0x9be0, 0xe509, 0x9346, 0x82d6, 0x0, 0x0);
        gbc.writeMem(0x29d0, { 0x96 });
        gbc.writeMem(0x82d6, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc131);
        EXPECT(gbc.pc(), 0x29d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82d6), 0x5f);
        // 96 011A
        gbc.setState(0x9877, 0x16dd, 0x5fc0, 0x634, 0x279b, 0x7774, 0x0, 0x1);
        gbc.writeMem(0x7774, { 0x7d });
        gbc.writeMem(0x9877, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x16dd);
        EXPECT(gbc.pc(), 0x9878);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9877), 0x96);
        // 96 011B
        gbc.setState(0xee94, 0x48ed, 0x7140, 0xc920, 0x7569, 0x1c6b, 0x0, 0x0);
        gbc.writeMem(0x1c6b, { 0x70 });
        gbc.writeMem(0xee94, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x48ed);
        EXPECT(gbc.pc(), 0xee95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee94), 0x96);
        // 96 011C
        gbc.setState(0x8f49, 0x2299, 0x7610, 0xf17b, 0x10a6, 0x15ce, 0x0, 0x0);
        gbc.writeMem(0x15ce, { 0x2f });
        gbc.writeMem(0x8f49, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2299);
        EXPECT(gbc.pc(), 0x8f4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f49), 0x96);
        // 96 011D
        gbc.setState(0x67fd, 0xa1a4, 0xe880, 0x3a21, 0xb964, 0xb615, 0x1, 0x0);
        gbc.writeMem(0x67fd, { 0x96 });
        gbc.writeMem(0xb615, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa1a4);
        EXPECT(gbc.pc(), 0x67fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb615), 0x62);
        // 96 011E
        gbc.setState(0x5b2f, 0x1305, 0x3260, 0x11e6, 0x8f0a, 0x8c61, 0x0, 0x0);
        gbc.writeMem(0x5b2f, { 0x96 });
        gbc.writeMem(0x8c61, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1305);
        EXPECT(gbc.pc(), 0x5b30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c61), 0x96);
        // 96 011F
        gbc.setState(0x80ce, 0x33ce, 0xb820, 0xfc3e, 0x4b63, 0xb9, 0x0, 0x0);
        gbc.writeMem(0xb9, { 0x2e });
        gbc.writeMem(0x80ce, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x33ce);
        EXPECT(gbc.pc(), 0x80cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ce), 0x96);
        // 96 0120
        gbc.setState(0x887b, 0xee1, 0xc330, 0xb744, 0xcbc4, 0x71f2, 0x0, 0x0);
        gbc.writeMem(0x71f2, { 0xae });
        gbc.writeMem(0x887b, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xee1);
        EXPECT(gbc.pc(), 0x887c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x887b), 0x96);
        // 96 0121
        gbc.setState(0x5e7e, 0x58b1, 0x20, 0xee9b, 0x11fb, 0x4abe, 0x0, 0x0);
        gbc.writeMem(0x4abe, { 0x9b });
        gbc.writeMem(0x5e7e, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x58b1);
        EXPECT(gbc.pc(), 0x5e7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 0122
        gbc.setState(0xb6f6, 0xd038, 0xed50, 0x7615, 0xd9ff, 0xcd0a, 0x1, 0x1);
        gbc.writeMem(0xb6f6, { 0x96 });
        gbc.writeMem(0xcd0a, { 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd038);
        EXPECT(gbc.pc(), 0xb6f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6f6), 0x96);
        EXPECT(gbc.readMem(0xcd0a), 0xf5);
        // 96 0123
        gbc.setState(0x37fd, 0xa5ee, 0x1ab0, 0xe31b, 0xb535, 0x6cf0, 0x0, 0x0);
        gbc.writeMem(0x37fd, { 0x96 });
        gbc.writeMem(0x6cf0, { 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa5ee);
        EXPECT(gbc.pc(), 0x37fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 0124
        gbc.setState(0x2957, 0x1cee, 0x5540, 0x1f45, 0x4ae7, 0xeff4, 0x1, 0x1);
        gbc.writeMem(0x2957, { 0x96 });
        gbc.writeMem(0xeff4, { 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1cee);
        EXPECT(gbc.pc(), 0x2958);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeff4), 0x9c);
        // 96 0126
        gbc.setState(0x69c, 0x5e3d, 0xf700, 0x98bc, 0xf346, 0x6053, 0x1, 0x1);
        gbc.writeMem(0x69c, { 0x96 });
        gbc.writeMem(0x6053, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5e3d);
        EXPECT(gbc.pc(), 0x69d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 0127
        gbc.setState(0x31e6, 0x48b2, 0xf390, 0xec52, 0xc031, 0xc012, 0x1, 0x0);
        gbc.writeMem(0x31e6, { 0x96 });
        gbc.writeMem(0xc012, { 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x48b2);
        EXPECT(gbc.pc(), 0x31e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc012), 0xe5);
        // 96 0128
        gbc.setState(0x8c61, 0x197b, 0x50b0, 0x50c4, 0xbd53, 0xa616, 0x1, 0x1);
        gbc.writeMem(0x8c61, { 0x96 });
        gbc.writeMem(0xa616, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x197b);
        EXPECT(gbc.pc(), 0x8c62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c61), 0x96);
        EXPECT(gbc.readMem(0xa616), 0x72);
        // 96 012A
        gbc.setState(0x8af8, 0xba8e, 0x1690, 0x32a8, 0x557b, 0xd63c, 0x0, 0x1);
        gbc.writeMem(0x8af8, { 0x96 });
        gbc.writeMem(0xd63c, { 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xba8e);
        EXPECT(gbc.pc(), 0x8af9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8af8), 0x96);
        EXPECT(gbc.readMem(0xd63c), 0x9a);
        // 96 012B
        gbc.setState(0x30d2, 0x3c99, 0xce40, 0x900d, 0x8ade, 0xf6b7, 0x0, 0x0);
        gbc.writeMem(0x30d2, { 0x96 });
        gbc.writeMem(0xf6b7, { 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3c99);
        EXPECT(gbc.pc(), 0x30d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf6b7), 0x14);
        // 96 012C
        gbc.setState(0xa882, 0x391c, 0x16b0, 0xa1bd, 0x7601, 0xf211, 0x1, 0x1);
        gbc.writeMem(0xa882, { 0x96 });
        gbc.writeMem(0xf211, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x391c);
        EXPECT(gbc.pc(), 0xa883);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa882), 0x96);
        EXPECT(gbc.readMem(0xf211), 0xd3);
        // 96 012D
        gbc.setState(0x92ba, 0xa135, 0x50e0, 0xd293, 0x3890, 0x201c, 0x1, 0x1);
        gbc.writeMem(0x201c, { 0xa0 });
        gbc.writeMem(0x92ba, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xa135);
        EXPECT(gbc.pc(), 0x92bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92ba), 0x96);
        // 96 012E
        gbc.setState(0xbcbb, 0xe22a, 0x6980, 0xa673, 0x205f, 0x2db5, 0x1, 0x0);
        gbc.writeMem(0x2db5, { 0xaf });
        gbc.writeMem(0xbcbb, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xe22a);
        EXPECT(gbc.pc(), 0xbcbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcbb), 0x96);
        // 96 012F
        gbc.setState(0xb73a, 0x9945, 0x1a30, 0x4f74, 0xe876, 0x1102, 0x1, 0x1);
        gbc.writeMem(0x1102, { 0x5c });
        gbc.writeMem(0xb73a, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x9945);
        EXPECT(gbc.pc(), 0xb73b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb73a), 0x96);
        // 96 0130
        gbc.setState(0x4402, 0xe319, 0x2a00, 0xd3fa, 0x4659, 0xf7a, 0x1, 0x0);
        gbc.writeMem(0xf7a, { 0x26 });
        gbc.writeMem(0x4402, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe319);
        EXPECT(gbc.pc(), 0x4403);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 0131
        gbc.setState(0xeffc, 0x88ec, 0x42c0, 0xfa9, 0xb0cb, 0x8041, 0x1, 0x0);
        gbc.writeMem(0x8041, { 0x13 });
        gbc.writeMem(0xeffc, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x88ec);
        EXPECT(gbc.pc(), 0xeffd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8041), 0x13);
        EXPECT(gbc.readMem(0xeffc), 0x96);
        // 96 0132
        gbc.setState(0x691a, 0x3459, 0xc220, 0x4f, 0x8250, 0x927e, 0x1, 0x1);
        gbc.writeMem(0x691a, { 0x96 });
        gbc.writeMem(0x927e, { 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x3459);
        EXPECT(gbc.pc(), 0x691b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x927e), 0x94);
        // 96 0133
        gbc.setState(0x987a, 0xdf0b, 0x5dc0, 0xf1fd, 0x7075, 0xb023, 0x1, 0x0);
        gbc.writeMem(0x987a, { 0x96 });
        gbc.writeMem(0xb023, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xdf0b);
        EXPECT(gbc.pc(), 0x987b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x987a), 0x96);
        EXPECT(gbc.readMem(0xb023), 0xe4);
        // 96 0134
        gbc.setState(0x5af6, 0xf280, 0xf90, 0xe63, 0x96a5, 0x9519, 0x0, 0x0);
        gbc.writeMem(0x5af6, { 0x96 });
        gbc.writeMem(0x9519, { 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xf280);
        EXPECT(gbc.pc(), 0x5af7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9519), 0xdb);
        // 96 0135
        gbc.setState(0xb5a8, 0xa0a1, 0xb9c0, 0xe3b1, 0x4118, 0xa60b, 0x1, 0x1);
        gbc.writeMem(0xa60b, { 0xfc });
        gbc.writeMem(0xb5a8, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa0a1);
        EXPECT(gbc.pc(), 0xb5a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa60b), 0xfc);
        EXPECT(gbc.readMem(0xb5a8), 0x96);
        // 96 0136
        gbc.setState(0x4946, 0x7331, 0xfd40, 0x9adc, 0x71f1, 0x73aa, 0x1, 0x0);
        gbc.writeMem(0x4946, { 0x96 });
        gbc.writeMem(0x73aa, { 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7331);
        EXPECT(gbc.pc(), 0x4947);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 0137
        gbc.setState(0x6de3, 0x54f7, 0x120, 0x4a60, 0x1206, 0x74fb, 0x1, 0x1);
        gbc.writeMem(0x6de3, { 0x96 });
        gbc.writeMem(0x74fb, { 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x54f7);
        EXPECT(gbc.pc(), 0x6de4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 0139
        gbc.setState(0xd833, 0x17ae, 0xf420, 0xd05c, 0x9615, 0x5930, 0x1, 0x0);
        gbc.writeMem(0x5930, { 0xd9 });
        gbc.writeMem(0xd833, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x17ae);
        EXPECT(gbc.pc(), 0xd834);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd833), 0x96);
        // 96 013A
        gbc.setState(0x9d10, 0xa247, 0x9330, 0x2798, 0xb271, 0x1951, 0x1, 0x1);
        gbc.writeMem(0x1951, { 0x8e });
        gbc.writeMem(0x9d10, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa247);
        EXPECT(gbc.pc(), 0x9d11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d10), 0x96);
        // 96 013B
        gbc.setState(0xbd80, 0xbf08, 0x7a30, 0xebb2, 0x78b9, 0x251c, 0x1, 0x1);
        gbc.writeMem(0x251c, { 0xff });
        gbc.writeMem(0xbd80, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xbf08);
        EXPECT(gbc.pc(), 0xbd81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd80), 0x96);
        // 96 013C
        gbc.setState(0x38c3, 0x1414, 0x3700, 0xa269, 0x20e6, 0x6fb8, 0x1, 0x0);
        gbc.writeMem(0x38c3, { 0x96 });
        gbc.writeMem(0x6fb8, { 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x1414);
        EXPECT(gbc.pc(), 0x38c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 013D
        gbc.setState(0x2953, 0x70b0, 0x5170, 0x90f6, 0x11f0, 0x6f06, 0x0, 0x0);
        gbc.writeMem(0x2953, { 0x96 });
        gbc.writeMem(0x6f06, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x70b0);
        EXPECT(gbc.pc(), 0x2954);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 013E
        gbc.setState(0x5dc4, 0xc178, 0x8880, 0x1fae, 0xed98, 0xbdfd, 0x0, 0x1);
        gbc.writeMem(0x5dc4, { 0x96 });
        gbc.writeMem(0xbdfd, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xc178);
        EXPECT(gbc.pc(), 0x5dc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdfd), 0x10);
        // 96 013F
        gbc.setState(0x77c, 0x6b6e, 0x3320, 0x2e4f, 0x3f00, 0xa98, 0x0, 0x1);
        gbc.writeMem(0x77c, { 0x96 });
        gbc.writeMem(0xa98, { 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x6b6e);
        EXPECT(gbc.pc(), 0x77d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 0140
        gbc.setState(0xc6bd, 0xda95, 0x5f90, 0x9d12, 0x94d6, 0xc4bf, 0x0, 0x1);
        gbc.writeMem(0xc4bf, { 0xb1 });
        gbc.writeMem(0xc6bd, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xda95);
        EXPECT(gbc.pc(), 0xc6be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4bf), 0xb1);
        EXPECT(gbc.readMem(0xc6bd), 0x96);
        // 96 0141
        gbc.setState(0x851a, 0xd042, 0x4f00, 0xaea5, 0x6cf2, 0x378e, 0x1, 0x0);
        gbc.writeMem(0x378e, { 0x87 });
        gbc.writeMem(0x851a, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd042);
        EXPECT(gbc.pc(), 0x851b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x851a), 0x96);
        // 96 0142
        gbc.setState(0x3cb1, 0x4b12, 0x6be0, 0xd376, 0x3369, 0x2aef, 0x1, 0x1);
        gbc.writeMem(0x2aef, { 0x41 });
        gbc.writeMem(0x3cb1, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x4b12);
        EXPECT(gbc.pc(), 0x3cb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 0143
        gbc.setState(0xbf85, 0xd534, 0x8fe0, 0x33ad, 0x9878, 0x4c4b, 0x1, 0x1);
        gbc.writeMem(0x4c4b, { 0xcf });
        gbc.writeMem(0xbf85, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xd534);
        EXPECT(gbc.pc(), 0xbf86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf85), 0x96);
        // 96 0144
        gbc.setState(0x2d7b, 0xa604, 0xc20, 0xfadf, 0x3906, 0xbcdb, 0x1, 0x0);
        gbc.writeMem(0x2d7b, { 0x96 });
        gbc.writeMem(0xbcdb, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa604);
        EXPECT(gbc.pc(), 0x2d7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcdb), 0x5e);
        // 96 0145
        gbc.setState(0xce7c, 0x947b, 0x65a0, 0x2e8b, 0x25b6, 0x3bc2, 0x0, 0x0);
        gbc.writeMem(0x3bc2, { 0x98 });
        gbc.writeMem(0xce7c, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x947b);
        EXPECT(gbc.pc(), 0xce7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce7c), 0x96);
        // 96 0146
        gbc.setState(0x2833, 0xa23a, 0x5900, 0x6ac0, 0x930b, 0x6a93, 0x1, 0x0);
        gbc.writeMem(0x2833, { 0x96 });
        gbc.writeMem(0x6a93, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xa23a);
        EXPECT(gbc.pc(), 0x2834);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0147
        gbc.setState(0x8788, 0x2945, 0x8210, 0xc840, 0x399c, 0x5c4d, 0x1, 0x0);
        gbc.writeMem(0x5c4d, { 0x5e });
        gbc.writeMem(0x8788, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2945);
        EXPECT(gbc.pc(), 0x8789);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8788), 0x96);
        // 96 0148
        gbc.setState(0xa2de, 0x42fe, 0x2510, 0x52d4, 0x40f0, 0x2519, 0x0, 0x1);
        gbc.writeMem(0x2519, { 0x1f });
        gbc.writeMem(0xa2de, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x42fe);
        EXPECT(gbc.pc(), 0xa2df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2de), 0x96);
        // 96 0149
        gbc.setState(0x3b04, 0x3498, 0xc8f0, 0x2458, 0x4395, 0xc427, 0x1, 0x0);
        gbc.writeMem(0x3b04, { 0x96 });
        gbc.writeMem(0xc427, { 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3498);
        EXPECT(gbc.pc(), 0x3b05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc427), 0xf1);
        // 96 014A
        gbc.setState(0x26b7, 0x8e37, 0x7db0, 0x24d6, 0x2969, 0xc98b, 0x1, 0x1);
        gbc.writeMem(0x26b7, { 0x96 });
        gbc.writeMem(0xc98b, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8e37);
        EXPECT(gbc.pc(), 0x26b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc98b), 0x8d);
        // 96 014B
        gbc.setState(0xb6a9, 0x435c, 0x2190, 0x1c04, 0xffc2, 0xe941, 0x1, 0x0);
        gbc.writeMem(0xb6a9, { 0x96 });
        gbc.writeMem(0xe941, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x435c);
        EXPECT(gbc.pc(), 0xb6aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6a9), 0x96);
        EXPECT(gbc.readMem(0xe941), 0x7a);
        // 96 014C
        gbc.setState(0x1276, 0x6321, 0x2000, 0xd32e, 0x77b9, 0x2004, 0x0, 0x0);
        gbc.writeMem(0x1276, { 0x96 });
        gbc.writeMem(0x2004, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6321);
        EXPECT(gbc.pc(), 0x1277);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 014D
        gbc.setState(0xa70f, 0xd7d5, 0x2af0, 0x8d, 0x34cd, 0xf225, 0x0, 0x0);
        gbc.writeMem(0xa70f, { 0x96 });
        gbc.writeMem(0xf225, { 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xd7d5);
        EXPECT(gbc.pc(), 0xa710);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa70f), 0x96);
        EXPECT(gbc.readMem(0xf225), 0xa7);
        // 96 014E
        gbc.setState(0xc68, 0x11d4, 0xca20, 0xbdb9, 0x28ff, 0x40b, 0x1, 0x0);
        gbc.writeMem(0x40b, { 0x28 });
        gbc.writeMem(0xc68, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x11d4);
        EXPECT(gbc.pc(), 0xc69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 014F
        gbc.setState(0x5183, 0x6381, 0xac20, 0x78dc, 0x9cc4, 0xf7ab, 0x1, 0x0);
        gbc.writeMem(0x5183, { 0x96 });
        gbc.writeMem(0xf7ab, { 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6381);
        EXPECT(gbc.pc(), 0x5184);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf7ab), 0x27);
        // 96 0150
        gbc.setState(0x88ab, 0xe9c6, 0xe210, 0xfd71, 0xa17c, 0xd4a7, 0x0, 0x1);
        gbc.writeMem(0x88ab, { 0x96 });
        gbc.writeMem(0xd4a7, { 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xe9c6);
        EXPECT(gbc.pc(), 0x88ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88ab), 0x96);
        EXPECT(gbc.readMem(0xd4a7), 0x39);
        // 96 0151
        gbc.setState(0xa834, 0x605d, 0xc750, 0x7ee3, 0x625c, 0x227b, 0x0, 0x1);
        gbc.writeMem(0x227b, { 0x52 });
        gbc.writeMem(0xa834, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x605d);
        EXPECT(gbc.pc(), 0xa835);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa834), 0x96);
        // 96 0152
        gbc.setState(0x662c, 0x88fa, 0x1d80, 0x43e1, 0x6580, 0xc5ba, 0x1, 0x1);
        gbc.writeMem(0x662c, { 0x96 });
        gbc.writeMem(0xc5ba, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x88fa);
        EXPECT(gbc.pc(), 0x662d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5ba), 0x78);
        // 96 0153
        gbc.setState(0x5b9f, 0xd0a7, 0xc1d0, 0x4cfc, 0x563c, 0x7675, 0x1, 0x0);
        gbc.writeMem(0x5b9f, { 0x96 });
        gbc.writeMem(0x7675, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd0a7);
        EXPECT(gbc.pc(), 0x5ba0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 0154
        gbc.setState(0x2c6d, 0x66a6, 0x9580, 0x5883, 0x4945, 0x6f97, 0x1, 0x1);
        gbc.writeMem(0x2c6d, { 0x96 });
        gbc.writeMem(0x6f97, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x66a6);
        EXPECT(gbc.pc(), 0x2c6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 0155
        gbc.setState(0xdb63, 0xc7f0, 0xe580, 0x14f8, 0x44d6, 0xf94f, 0x1, 0x1);
        gbc.writeMem(0xdb63, { 0x96 });
        gbc.writeMem(0xf94f, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc7f0);
        EXPECT(gbc.pc(), 0xdb64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb63), 0x96);
        EXPECT(gbc.readMem(0xf94f), 0x2e);
        // 96 0157
        gbc.setState(0x586, 0x226d, 0x9b50, 0xdf93, 0x9ee9, 0x9771, 0x1, 0x0);
        gbc.writeMem(0x586, { 0x96 });
        gbc.writeMem(0x9771, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x226d);
        EXPECT(gbc.pc(), 0x587);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9771), 0x6e);
        // 96 0158
        gbc.setState(0xc855, 0x165d, 0x8500, 0x6638, 0xb651, 0xb0a3, 0x0, 0x0);
        gbc.writeMem(0xb0a3, { 0xc });
        gbc.writeMem(0xc855, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x165d);
        EXPECT(gbc.pc(), 0xc856);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0a3), 0xc);
        EXPECT(gbc.readMem(0xc855), 0x96);
        // 96 0159
        gbc.setState(0x5ee7, 0xd69c, 0x5e90, 0x1fb0, 0x21df, 0xde5b, 0x0, 0x1);
        gbc.writeMem(0x5ee7, { 0x96 });
        gbc.writeMem(0xde5b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd69c);
        EXPECT(gbc.pc(), 0x5ee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde5b), 0x78);
        // 96 015A
        gbc.setState(0xf78, 0x8016, 0xfc30, 0x213c, 0x8f74, 0x1314, 0x0, 0x1);
        gbc.writeMem(0xf78, { 0x96 });
        gbc.writeMem(0x1314, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x8016);
        EXPECT(gbc.pc(), 0xf79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 015B
        gbc.setState(0x733b, 0x8268, 0x3d0, 0xfe5c, 0xc2ca, 0x6ec5, 0x1, 0x1);
        gbc.writeMem(0x6ec5, { 0x6f });
        gbc.writeMem(0x733b, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8268);
        EXPECT(gbc.pc(), 0x733c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 015C
        gbc.setState(0x5d4a, 0xe880, 0x5a10, 0xd3e8, 0xa981, 0x9cbc, 0x1, 0x0);
        gbc.writeMem(0x5d4a, { 0x96 });
        gbc.writeMem(0x9cbc, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe880);
        EXPECT(gbc.pc(), 0x5d4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cbc), 0xd9);
        // 96 015D
        gbc.setState(0xe839, 0x433c, 0xc2c0, 0x91cc, 0x56e6, 0xe9bc, 0x0, 0x1);
        gbc.writeMem(0xe839, { 0x96 });
        gbc.writeMem(0xe9bc, { 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x433c);
        EXPECT(gbc.pc(), 0xe83a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe839), 0x96);
        EXPECT(gbc.readMem(0xe9bc), 0x9c);
        // 96 015E
        gbc.setState(0xbcb2, 0xa475, 0xa9e0, 0x650b, 0x8ed5, 0x4931, 0x1, 0x0);
        gbc.writeMem(0x4931, { 0xfb });
        gbc.writeMem(0xbcb2, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa475);
        EXPECT(gbc.pc(), 0xbcb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcb2), 0x96);
        // 96 015F
        gbc.setState(0x1430, 0xb098, 0x7ed0, 0x24e0, 0xe13d, 0x564c, 0x0, 0x0);
        gbc.writeMem(0x1430, { 0x96 });
        gbc.writeMem(0x564c, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb098);
        EXPECT(gbc.pc(), 0x1431);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0160
        gbc.setState(0x1703, 0xb6a9, 0xe690, 0xf996, 0xd031, 0xd555, 0x1, 0x1);
        gbc.writeMem(0x1703, { 0x96 });
        gbc.writeMem(0xd555, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xb6a9);
        EXPECT(gbc.pc(), 0x1704);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd555), 0xb8);
        // 96 0161
        gbc.setState(0x592a, 0xd87c, 0x60c0, 0x4241, 0x50bd, 0xe447, 0x1, 0x0);
        gbc.writeMem(0x592a, { 0x96 });
        gbc.writeMem(0xe447, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xd87c);
        EXPECT(gbc.pc(), 0x592b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe447), 0x1);
        // 96 0162
        gbc.setState(0xa46c, 0x6cc2, 0x85f0, 0xb8f2, 0xde83, 0x8867, 0x1, 0x0);
        gbc.writeMem(0x8867, { 0xb9 });
        gbc.writeMem(0xa46c, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x6cc2);
        EXPECT(gbc.pc(), 0xa46d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8867), 0xb9);
        EXPECT(gbc.readMem(0xa46c), 0x96);
        // 96 0163
        gbc.setState(0xdc8e, 0x4872, 0xf4d0, 0xc506, 0x1c9e, 0xdde1, 0x1, 0x1);
        gbc.writeMem(0xdc8e, { 0x96 });
        gbc.writeMem(0xdde1, { 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x4872);
        EXPECT(gbc.pc(), 0xdc8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc8e), 0x96);
        EXPECT(gbc.readMem(0xdde1), 0x48);
        // 96 0164
        gbc.setState(0xbb0a, 0x37d7, 0x3400, 0xd644, 0xd66b, 0xd791, 0x0, 0x1);
        gbc.writeMem(0xbb0a, { 0x96 });
        gbc.writeMem(0xd791, { 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x37d7);
        EXPECT(gbc.pc(), 0xbb0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb0a), 0x96);
        EXPECT(gbc.readMem(0xd791), 0xa7);
        // 96 0165
        gbc.setState(0x6daf, 0xf380, 0xacd0, 0x1887, 0xc812, 0xfa41, 0x1, 0x1);
        gbc.writeMem(0x6daf, { 0x96 });
        gbc.writeMem(0xfa41, { 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xf380);
        EXPECT(gbc.pc(), 0x6db0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfa41), 0x27);
        // 96 0166
        gbc.setState(0xe1e3, 0xd422, 0xf1a0, 0xbc1a, 0xcf82, 0x98dd, 0x0, 0x0);
        gbc.writeMem(0x98dd, { 0x92 });
        gbc.writeMem(0xe1e3, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xd422);
        EXPECT(gbc.pc(), 0xe1e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98dd), 0x92);
        EXPECT(gbc.readMem(0xe1e3), 0x96);
        // 96 0168
        gbc.setState(0x8df8, 0x7174, 0x7b80, 0x7eb, 0x3b1c, 0x5591, 0x1, 0x1);
        gbc.writeMem(0x5591, { 0xe });
        gbc.writeMem(0x8df8, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x7174);
        EXPECT(gbc.pc(), 0x8df9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8df8), 0x96);
        // 96 0169
        gbc.setState(0xe21d, 0xf2df, 0x5920, 0xdf47, 0x87a0, 0xa43b, 0x0, 0x0);
        gbc.writeMem(0xa43b, { 0xcd });
        gbc.writeMem(0xe21d, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xf2df);
        EXPECT(gbc.pc(), 0xe21e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa43b), 0xcd);
        EXPECT(gbc.readMem(0xe21d), 0x96);
        // 96 016A
        gbc.setState(0x462e, 0x1a5d, 0xf5f0, 0xe707, 0xd9b6, 0xc074, 0x1, 0x0);
        gbc.writeMem(0x462e, { 0x96 });
        gbc.writeMem(0xc074, { 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x1a5d);
        EXPECT(gbc.pc(), 0x462f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc074), 0xa3);
        // 96 016C
        gbc.setState(0xba91, 0x2085, 0x1490, 0xd5ec, 0x445, 0xd43b, 0x0, 0x0);
        gbc.writeMem(0xba91, { 0x96 });
        gbc.writeMem(0xd43b, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x2085);
        EXPECT(gbc.pc(), 0xba92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba91), 0x96);
        EXPECT(gbc.readMem(0xd43b), 0x5b);
        // 96 016D
        gbc.setState(0x42f7, 0x576, 0xdf20, 0x7bd4, 0x3023, 0xb3a5, 0x1, 0x1);
        gbc.writeMem(0x42f7, { 0x96 });
        gbc.writeMem(0xb3a5, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x576);
        EXPECT(gbc.pc(), 0x42f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3a5), 0xbe);
        // 96 016E
        gbc.setState(0x87c5, 0x734d, 0x2a70, 0xf58, 0x8044, 0x6f05, 0x1, 0x0);
        gbc.writeMem(0x6f05, { 0x1d });
        gbc.writeMem(0x87c5, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x734d);
        EXPECT(gbc.pc(), 0x87c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87c5), 0x96);
        // 96 016F
        gbc.setState(0x12c6, 0x83c, 0xa990, 0xbe07, 0x6b81, 0x27ce, 0x0, 0x0);
        gbc.writeMem(0x12c6, { 0x96 });
        gbc.writeMem(0x27ce, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x83c);
        EXPECT(gbc.pc(), 0x12c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 0170
        gbc.setState(0xe379, 0x8bda, 0x46a0, 0xef5f, 0xcaae, 0xd6b, 0x1, 0x0);
        gbc.writeMem(0xd6b, { 0x9a });
        gbc.writeMem(0xe379, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x8bda);
        EXPECT(gbc.pc(), 0xe37a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe379), 0x96);
        // 96 0171
        gbc.setState(0x7fa5, 0xc5ae, 0xd3a0, 0xf82c, 0x4125, 0x5676, 0x1, 0x1);
        gbc.writeMem(0x5676, { 0x72 });
        gbc.writeMem(0x7fa5, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc5ae);
        EXPECT(gbc.pc(), 0x7fa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 0172
        gbc.setState(0x7636, 0xce6a, 0x88e0, 0x331c, 0x8323, 0xed7e, 0x0, 0x0);
        gbc.writeMem(0x7636, { 0x96 });
        gbc.writeMem(0xed7e, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xce6a);
        EXPECT(gbc.pc(), 0x7637);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed7e), 0xc6);
        // 96 0173
        gbc.setState(0x7494, 0x783c, 0x7b90, 0x33d5, 0xe2fa, 0xfe8a, 0x1, 0x0);
        gbc.writeMem(0x7494, { 0x96 });
        gbc.writeMem(0xfe8a, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x783c);
        EXPECT(gbc.pc(), 0x7495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfe8a), 0xf);
        // 96 0174
        gbc.setState(0x3aba, 0x1e3d, 0x96d0, 0xa7b2, 0xe157, 0x11de, 0x1, 0x1);
        gbc.writeMem(0x11de, { 0xb0 });
        gbc.writeMem(0x3aba, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1e3d);
        EXPECT(gbc.pc(), 0x3abb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0175
        gbc.setState(0xa394, 0x89de, 0xe8f0, 0xb531, 0xbc52, 0xabf3, 0x0, 0x0);
        gbc.writeMem(0xa394, { 0x96 });
        gbc.writeMem(0xabf3, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x89de);
        EXPECT(gbc.pc(), 0xa395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa394), 0x96);
        EXPECT(gbc.readMem(0xabf3), 0x45);
        // 96 0176
        gbc.setState(0x94d6, 0x8ded, 0xffa0, 0x1bde, 0x545c, 0x35a0, 0x0, 0x1);
        gbc.writeMem(0x35a0, { 0xe3 });
        gbc.writeMem(0x94d6, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x8ded);
        EXPECT(gbc.pc(), 0x94d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94d6), 0x96);
        // 96 0177
        gbc.setState(0xba30, 0x3080, 0xd750, 0xc44f, 0x5833, 0x7226, 0x0, 0x0);
        gbc.writeMem(0x7226, { 0xcb });
        gbc.writeMem(0xba30, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x3080);
        EXPECT(gbc.pc(), 0xba31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba30), 0x96);
        // 96 0178
        gbc.setState(0xb1d6, 0x5469, 0xfbe0, 0xc66e, 0xb89f, 0xce18, 0x1, 0x0);
        gbc.writeMem(0xb1d6, { 0x96 });
        gbc.writeMem(0xce18, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5469);
        EXPECT(gbc.pc(), 0xb1d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1d6), 0x96);
        EXPECT(gbc.readMem(0xce18), 0x7b);
        // 96 0179
        gbc.setState(0xe4a6, 0x3e66, 0xeee0, 0x38c6, 0xcc92, 0xb1b0, 0x0, 0x0);
        gbc.writeMem(0xb1b0, { 0xe7 });
        gbc.writeMem(0xe4a6, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x3e66);
        EXPECT(gbc.pc(), 0xe4a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1b0), 0xe7);
        EXPECT(gbc.readMem(0xe4a6), 0x96);
        // 96 017A
        gbc.setState(0x733d, 0xe782, 0xecc0, 0x5f81, 0x70ae, 0xd5f9, 0x0, 0x1);
        gbc.writeMem(0x733d, { 0x96 });
        gbc.writeMem(0xd5f9, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe782);
        EXPECT(gbc.pc(), 0x733e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5f9), 0x42);
        // 96 017B
        gbc.setState(0xe67c, 0x1274, 0x78c0, 0xf62, 0x4492, 0xf5a6, 0x0, 0x0);
        gbc.writeMem(0xe67c, { 0x96 });
        gbc.writeMem(0xf5a6, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x1274);
        EXPECT(gbc.pc(), 0xe67d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe67c), 0x96);
        EXPECT(gbc.readMem(0xf5a6), 0x58);
        // 96 017C
        gbc.setState(0x2530, 0x8d1e, 0x3cf0, 0x10a3, 0xe9df, 0x7283, 0x1, 0x0);
        gbc.writeMem(0x2530, { 0x96 });
        gbc.writeMem(0x7283, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8d1e);
        EXPECT(gbc.pc(), 0x2531);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 017D
        gbc.setState(0x4cb9, 0xd74f, 0x5ad0, 0xbbd1, 0xc9ae, 0xb36a, 0x1, 0x0);
        gbc.writeMem(0x4cb9, { 0x96 });
        gbc.writeMem(0xb36a, { 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd74f);
        EXPECT(gbc.pc(), 0x4cba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb36a), 0xb2);
        // 96 017E
        gbc.setState(0xe9b0, 0x2ddc, 0x4a30, 0xf38, 0xdb09, 0x9e5c, 0x1, 0x0);
        gbc.writeMem(0x9e5c, { 0xcd });
        gbc.writeMem(0xe9b0, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x2ddc);
        EXPECT(gbc.pc(), 0xe9b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e5c), 0xcd);
        EXPECT(gbc.readMem(0xe9b0), 0x96);
        // 96 017F
        gbc.setState(0x8b8c, 0x41c0, 0xb460, 0x731b, 0x2ed2, 0x60d0, 0x0, 0x0);
        gbc.writeMem(0x60d0, { 0x78 });
        gbc.writeMem(0x8b8c, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x41c0);
        EXPECT(gbc.pc(), 0x8b8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b8c), 0x96);
        // 96 0180
        gbc.setState(0xef38, 0xf8ab, 0x3df0, 0xe3a6, 0x4bcd, 0x1934, 0x0, 0x0);
        gbc.writeMem(0x1934, { 0xbd });
        gbc.writeMem(0xef38, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf8ab);
        EXPECT(gbc.pc(), 0xef39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef38), 0x96);
        // 96 0182
        gbc.setState(0x3539, 0x857, 0x25b0, 0x8d6a, 0x80c2, 0x5c4e, 0x1, 0x0);
        gbc.writeMem(0x3539, { 0x96 });
        gbc.writeMem(0x5c4e, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x857);
        EXPECT(gbc.pc(), 0x353a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0183
        gbc.setState(0x7db0, 0xb2c7, 0xb080, 0xd9bc, 0xef6c, 0xedf8, 0x1, 0x1);
        gbc.writeMem(0x7db0, { 0x96 });
        gbc.writeMem(0xedf8, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb2c7);
        EXPECT(gbc.pc(), 0x7db1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedf8), 0xa9);
        // 96 0184
        gbc.setState(0x7f96, 0xa3f8, 0xbe90, 0x7cc, 0x1905, 0x9a45, 0x0, 0x1);
        gbc.writeMem(0x7f96, { 0x96 });
        gbc.writeMem(0x9a45, { 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa3f8);
        EXPECT(gbc.pc(), 0x7f97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a45), 0x5a);
        // 96 0185
        gbc.setState(0x4452, 0x59fd, 0x5d30, 0x3552, 0xea3d, 0x3e71, 0x0, 0x1);
        gbc.writeMem(0x3e71, { 0x44 });
        gbc.writeMem(0x4452, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x59fd);
        EXPECT(gbc.pc(), 0x4453);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 0186
        gbc.setState(0xccea, 0xca4d, 0x7680, 0xe21b, 0x84d5, 0xe574, 0x1, 0x1);
        gbc.writeMem(0xccea, { 0x96 });
        gbc.writeMem(0xe574, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xca4d);
        EXPECT(gbc.pc(), 0xcceb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccea), 0x96);
        EXPECT(gbc.readMem(0xe574), 0x80);
        // 96 0187
        gbc.setState(0x43b1, 0xc48c, 0xbe40, 0xefb9, 0x530, 0xfc19, 0x0, 0x1);
        gbc.writeMem(0x43b1, { 0x96 });
        gbc.writeMem(0xfc19, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc48c);
        EXPECT(gbc.pc(), 0x43b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc19), 0xa0);
        // 96 0188
        gbc.setState(0xa623, 0x3b4d, 0xea70, 0x621c, 0x20ac, 0x5c31, 0x0, 0x1);
        gbc.writeMem(0x5c31, { 0xd5 });
        gbc.writeMem(0xa623, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3b4d);
        EXPECT(gbc.pc(), 0xa624);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa623), 0x96);
        // 96 0189
        gbc.setState(0xecc1, 0xeb08, 0xe330, 0x7bbf, 0x6749, 0x697, 0x1, 0x1);
        gbc.writeMem(0x697, { 0xc8 });
        gbc.writeMem(0xecc1, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xeb08);
        EXPECT(gbc.pc(), 0xecc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecc1), 0x96);
        // 96 018A
        gbc.setState(0xdbae, 0x9d58, 0xa300, 0x6, 0x9956, 0xa380, 0x1, 0x1);
        gbc.writeMem(0xa380, { 0xf });
        gbc.writeMem(0xdbae, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x9d58);
        EXPECT(gbc.pc(), 0xdbaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa380), 0xf);
        EXPECT(gbc.readMem(0xdbae), 0x96);
        // 96 018B
        gbc.setState(0xc624, 0x572e, 0xd4b0, 0xf417, 0x2f88, 0xc119, 0x1, 0x1);
        gbc.writeMem(0xc119, { 0xc1 });
        gbc.writeMem(0xc624, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x572e);
        EXPECT(gbc.pc(), 0xc625);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc119), 0xc1);
        EXPECT(gbc.readMem(0xc624), 0x96);
        // 96 018C
        gbc.setState(0xe511, 0x4c95, 0xd870, 0xc1fb, 0xe563, 0xfbe2, 0x1, 0x0);
        gbc.writeMem(0xe511, { 0x96 });
        gbc.writeMem(0xfbe2, { 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x4c95);
        EXPECT(gbc.pc(), 0xe512);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe511), 0x96);
        EXPECT(gbc.readMem(0xfbe2), 0x76);
        // 96 018E
        gbc.setState(0x4a16, 0xa27, 0x6860, 0x8904, 0x87a8, 0x4102, 0x0, 0x0);
        gbc.writeMem(0x4102, { 0xdb });
        gbc.writeMem(0x4a16, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xa27);
        EXPECT(gbc.pc(), 0x4a17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 018F
        gbc.setState(0xb886, 0x58da, 0x3cd0, 0xbf8e, 0xd8f0, 0x4d1a, 0x0, 0x1);
        gbc.writeMem(0x4d1a, { 0xd9 });
        gbc.writeMem(0xb886, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x58da);
        EXPECT(gbc.pc(), 0xb887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb886), 0x96);
        // 96 0190
        gbc.setState(0xc3e5, 0xa32d, 0xc620, 0xbbe6, 0xc6a0, 0xab3b, 0x1, 0x1);
        gbc.writeMem(0xab3b, { 0xe7 });
        gbc.writeMem(0xc3e5, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa32d);
        EXPECT(gbc.pc(), 0xc3e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab3b), 0xe7);
        EXPECT(gbc.readMem(0xc3e5), 0x96);
        // 96 0191
        gbc.setState(0x42fb, 0xf883, 0xd530, 0x7426, 0xc05, 0x23e8, 0x0, 0x1);
        gbc.writeMem(0x23e8, { 0xc2 });
        gbc.writeMem(0x42fb, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xf883);
        EXPECT(gbc.pc(), 0x42fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 0192
        gbc.setState(0x737a, 0x2355, 0x7000, 0x75a3, 0x28b3, 0xd19, 0x0, 0x1);
        gbc.writeMem(0xd19, { 0xf7 });
        gbc.writeMem(0x737a, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2355);
        EXPECT(gbc.pc(), 0x737b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 0197
        gbc.setState(0x6db9, 0xd278, 0xc410, 0x19fd, 0xa338, 0x6fed, 0x0, 0x0);
        gbc.writeMem(0x6db9, { 0x96 });
        gbc.writeMem(0x6fed, { 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd278);
        EXPECT(gbc.pc(), 0x6dba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 0198
        gbc.setState(0xbb5d, 0x44dd, 0x3e30, 0x7ca9, 0xe566, 0x1a71, 0x1, 0x1);
        gbc.writeMem(0x1a71, { 0x6d });
        gbc.writeMem(0xbb5d, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x44dd);
        EXPECT(gbc.pc(), 0xbb5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb5d), 0x96);
        // 96 0199
        gbc.setState(0x7750, 0x928a, 0x8350, 0x3a9b, 0x70d0, 0x3671, 0x1, 0x0);
        gbc.writeMem(0x3671, { 0xbe });
        gbc.writeMem(0x7750, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x928a);
        EXPECT(gbc.pc(), 0x7751);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 019A
        gbc.setState(0x369c, 0x8ae0, 0xa620, 0x71cb, 0xc84, 0xe394, 0x0, 0x1);
        gbc.writeMem(0x369c, { 0x96 });
        gbc.writeMem(0xe394, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x8ae0);
        EXPECT(gbc.pc(), 0x369d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe394), 0xd3);
        // 96 019B
        gbc.setState(0x42f5, 0x2c50, 0x28a0, 0xf639, 0x330c, 0x23af, 0x1, 0x0);
        gbc.writeMem(0x23af, { 0x8d });
        gbc.writeMem(0x42f5, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2c50);
        EXPECT(gbc.pc(), 0x42f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 019D
        gbc.setState(0xc6c1, 0x98d9, 0x4d40, 0x9d0d, 0x2278, 0xf228, 0x0, 0x1);
        gbc.writeMem(0xc6c1, { 0x96 });
        gbc.writeMem(0xf228, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x98d9);
        EXPECT(gbc.pc(), 0xc6c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6c1), 0x96);
        EXPECT(gbc.readMem(0xf228), 0x3a);
        // 96 019E
        gbc.setState(0xa69c, 0xb37b, 0xfd00, 0x5d79, 0x8014, 0xc114, 0x0, 0x0);
        gbc.writeMem(0xa69c, { 0x96 });
        gbc.writeMem(0xc114, { 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb37b);
        EXPECT(gbc.pc(), 0xa69d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa69c), 0x96);
        EXPECT(gbc.readMem(0xc114), 0xf9);
        // 96 019F
        gbc.setState(0xc6be, 0x2569, 0xd1f0, 0xcfd7, 0xba25, 0x8944, 0x1, 0x1);
        gbc.writeMem(0x8944, { 0x13 });
        gbc.writeMem(0xc6be, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2569);
        EXPECT(gbc.pc(), 0xc6bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8944), 0x13);
        EXPECT(gbc.readMem(0xc6be), 0x96);
        // 96 01A0
        gbc.setState(0x816b, 0x533e, 0x7db0, 0x7047, 0x98b4, 0x37ac, 0x0, 0x0);
        gbc.writeMem(0x37ac, { 0x6a });
        gbc.writeMem(0x816b, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x533e);
        EXPECT(gbc.pc(), 0x816c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x816b), 0x96);
        // 96 01A1
        gbc.setState(0xca30, 0xf6f9, 0x96b0, 0xb9e, 0xe553, 0x775e, 0x1, 0x1);
        gbc.writeMem(0x775e, { 0xbd });
        gbc.writeMem(0xca30, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf6f9);
        EXPECT(gbc.pc(), 0xca31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca30), 0x96);
        // 96 01A2
        gbc.setState(0x381a, 0xee77, 0x450, 0x6962, 0x165d, 0x31cc, 0x1, 0x0);
        gbc.writeMem(0x31cc, { 0x7b });
        gbc.writeMem(0x381a, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xee77);
        EXPECT(gbc.pc(), 0x381b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 01A3
        gbc.setState(0x2dc0, 0x37af, 0x20d0, 0x7a96, 0x68c6, 0x7858, 0x1, 0x1);
        gbc.writeMem(0x2dc0, { 0x96 });
        gbc.writeMem(0x7858, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x37af);
        EXPECT(gbc.pc(), 0x2dc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 01A4
        gbc.setState(0xd1c6, 0x86d1, 0x94b0, 0xf17c, 0x6ffb, 0x5bab, 0x0, 0x0);
        gbc.writeMem(0x5bab, { 0x38 });
        gbc.writeMem(0xd1c6, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x86d1);
        EXPECT(gbc.pc(), 0xd1c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1c6), 0x96);
        // 96 01A5
        gbc.setState(0x36f6, 0xd7c2, 0x9930, 0x4141, 0xc144, 0xeb60, 0x1, 0x1);
        gbc.writeMem(0x36f6, { 0x96 });
        gbc.writeMem(0xeb60, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd7c2);
        EXPECT(gbc.pc(), 0x36f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb60), 0xa4);
        // 96 01A6
        gbc.setState(0x625d, 0xc54, 0x2aa0, 0xe5da, 0xe010, 0x69e7, 0x0, 0x0);
        gbc.writeMem(0x625d, { 0x96 });
        gbc.writeMem(0x69e7, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc54);
        EXPECT(gbc.pc(), 0x625e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 01A7
        gbc.setState(0x9e1e, 0x329d, 0xbe00, 0xe6a6, 0xaa91, 0x57e3, 0x0, 0x1);
        gbc.writeMem(0x57e3, { 0x22 });
        gbc.writeMem(0x9e1e, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x329d);
        EXPECT(gbc.pc(), 0x9e1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e1e), 0x96);
        // 96 01A8
        gbc.setState(0xca88, 0x7280, 0x8560, 0xf795, 0xa604, 0x17cc, 0x1, 0x1);
        gbc.writeMem(0x17cc, { 0x71 });
        gbc.writeMem(0xca88, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7280);
        EXPECT(gbc.pc(), 0xca89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca88), 0x96);
        // 96 01A9
        gbc.setState(0x328, 0xde68, 0x60, 0x9e7c, 0x4be5, 0x91ed, 0x0, 0x1);
        gbc.writeMem(0x328, { 0x96 });
        gbc.writeMem(0x91ed, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xde68);
        EXPECT(gbc.pc(), 0x329);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91ed), 0x9e);
        // 96 01AA
        gbc.setState(0xa546, 0xe7b6, 0xa4e0, 0x9fa3, 0xb3f3, 0xcc66, 0x0, 0x1);
        gbc.writeMem(0xa546, { 0x96 });
        gbc.writeMem(0xcc66, { 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xe7b6);
        EXPECT(gbc.pc(), 0xa547);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa546), 0x96);
        EXPECT(gbc.readMem(0xcc66), 0xe2);
        // 96 01AB
        gbc.setState(0x12b8, 0x286f, 0x6c80, 0x80a0, 0xe5d5, 0x5149, 0x1, 0x0);
        gbc.writeMem(0x12b8, { 0x96 });
        gbc.writeMem(0x5149, { 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x286f);
        EXPECT(gbc.pc(), 0x12b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 01AC
        gbc.setState(0xaa76, 0x4177, 0xa2a0, 0x99b8, 0x5998, 0xef61, 0x1, 0x0);
        gbc.writeMem(0xaa76, { 0x96 });
        gbc.writeMem(0xef61, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x4177);
        EXPECT(gbc.pc(), 0xaa77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa76), 0x96);
        EXPECT(gbc.readMem(0xef61), 0x1f);
        // 96 01AD
        gbc.setState(0x9de7, 0xf025, 0x6100, 0xe792, 0x47d6, 0xd6d, 0x0, 0x0);
        gbc.writeMem(0xd6d, { 0xe7 });
        gbc.writeMem(0x9de7, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xf025);
        EXPECT(gbc.pc(), 0x9de8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9de7), 0x96);
        // 96 01AE
        gbc.setState(0x604, 0x8e80, 0xc600, 0xbd24, 0xf10e, 0x7eb7, 0x0, 0x0);
        gbc.writeMem(0x604, { 0x96 });
        gbc.writeMem(0x7eb7, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x8e80);
        EXPECT(gbc.pc(), 0x605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 01AF
        gbc.setState(0x993c, 0x64f, 0xb300, 0xe70f, 0x363d, 0xbf52, 0x0, 0x1);
        gbc.writeMem(0x993c, { 0x96 });
        gbc.writeMem(0xbf52, { 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x64f);
        EXPECT(gbc.pc(), 0x993d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x993c), 0x96);
        EXPECT(gbc.readMem(0xbf52), 0xcd);
        // 96 01B0
        gbc.setState(0x952, 0xf45f, 0xd3c0, 0x9fc0, 0xf65c, 0xb2c6, 0x0, 0x1);
        gbc.writeMem(0x952, { 0x96 });
        gbc.writeMem(0xb2c6, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf45f);
        EXPECT(gbc.pc(), 0x953);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2c6), 0x38);
        // 96 01B1
        gbc.setState(0xe459, 0x65e8, 0x7030, 0x3d47, 0x760c, 0x5ee3, 0x1, 0x1);
        gbc.writeMem(0x5ee3, { 0xcd });
        gbc.writeMem(0xe459, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x65e8);
        EXPECT(gbc.pc(), 0xe45a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe459), 0x96);
        // 96 01B2
        gbc.setState(0x863c, 0x9e3b, 0x4760, 0x97f2, 0x360c, 0xe00e, 0x0, 0x0);
        gbc.writeMem(0x863c, { 0x96 });
        gbc.writeMem(0xe00e, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x9e3b);
        EXPECT(gbc.pc(), 0x863d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x863c), 0x96);
        EXPECT(gbc.readMem(0xe00e), 0x4c);
        // 96 01B3
        gbc.setState(0xd567, 0xbcff, 0x78a0, 0xfc36, 0x89f4, 0x42f0, 0x1, 0x1);
        gbc.writeMem(0x42f0, { 0x22 });
        gbc.writeMem(0xd567, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xbcff);
        EXPECT(gbc.pc(), 0xd568);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd567), 0x96);
        // 96 01B4
        gbc.setState(0xc337, 0x5a98, 0x7cc0, 0xd0f9, 0xc7c1, 0xeca8, 0x0, 0x0);
        gbc.writeMem(0xc337, { 0x96 });
        gbc.writeMem(0xeca8, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5a98);
        EXPECT(gbc.pc(), 0xc338);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc337), 0x96);
        EXPECT(gbc.readMem(0xeca8), 0xf4);
        // 96 01B5
        gbc.setState(0x212d, 0xeffb, 0xb1f0, 0xcae1, 0xf0e3, 0x56c0, 0x0, 0x1);
        gbc.writeMem(0x212d, { 0x96 });
        gbc.writeMem(0x56c0, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xeffb);
        EXPECT(gbc.pc(), 0x212e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 01B6
        gbc.setState(0x7195, 0x16a2, 0x2020, 0x6aa3, 0xb437, 0xb70b, 0x1, 0x0);
        gbc.writeMem(0x7195, { 0x96 });
        gbc.writeMem(0xb70b, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x16a2);
        EXPECT(gbc.pc(), 0x7196);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb70b), 0x19);
        // 96 01B7
        gbc.setState(0xaa28, 0xa0e, 0x7b00, 0xe6f5, 0x1ad1, 0x3a2f, 0x1, 0x1);
        gbc.writeMem(0x3a2f, { 0xb });
        gbc.writeMem(0xaa28, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa0e);
        EXPECT(gbc.pc(), 0xaa29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa28), 0x96);
        // 96 01B8
        gbc.setState(0x12b0, 0x7f01, 0x1890, 0xbfe3, 0xace4, 0xcab6, 0x1, 0x0);
        gbc.writeMem(0x12b0, { 0x96 });
        gbc.writeMem(0xcab6, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7f01);
        EXPECT(gbc.pc(), 0x12b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcab6), 0x42);
        // 96 01BA
        gbc.setState(0x7db4, 0x85ab, 0x7cc0, 0xf114, 0x24ac, 0x8096, 0x0, 0x1);
        gbc.writeMem(0x7db4, { 0x96 });
        gbc.writeMem(0x8096, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x85ab);
        EXPECT(gbc.pc(), 0x7db5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8096), 0x1);
        // 96 01BB
        gbc.setState(0x824, 0x5ea6, 0xe660, 0x8b6f, 0x5f98, 0x962c, 0x0, 0x0);
        gbc.writeMem(0x824, { 0x96 });
        gbc.writeMem(0x962c, { 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x5ea6);
        EXPECT(gbc.pc(), 0x825);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x962c), 0xdb);
        // 96 01BC
        gbc.setState(0xa3f1, 0x980d, 0x96b0, 0x3249, 0x87a0, 0xf9cd, 0x1, 0x0);
        gbc.writeMem(0xa3f1, { 0x96 });
        gbc.writeMem(0xf9cd, { 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x980d);
        EXPECT(gbc.pc(), 0xa3f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3f1), 0x96);
        EXPECT(gbc.readMem(0xf9cd), 0xde);
        // 96 01BD
        gbc.setState(0x250f, 0x1a48, 0x3a50, 0x313f, 0xa336, 0x80e1, 0x0, 0x1);
        gbc.writeMem(0x250f, { 0x96 });
        gbc.writeMem(0x80e1, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x1a48);
        EXPECT(gbc.pc(), 0x2510);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80e1), 0x30);
        // 96 01BE
        gbc.setState(0xd8a4, 0x3de8, 0xb360, 0x5d1f, 0x50b4, 0xd30a, 0x0, 0x1);
        gbc.writeMem(0xd30a, { 0x3b });
        gbc.writeMem(0xd8a4, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3de8);
        EXPECT(gbc.pc(), 0xd8a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd30a), 0x3b);
        EXPECT(gbc.readMem(0xd8a4), 0x96);
        // 96 01BF
        gbc.setState(0xa2ab, 0x9fb0, 0x8270, 0x72f7, 0x4489, 0x7e88, 0x1, 0x1);
        gbc.writeMem(0x7e88, { 0x24 });
        gbc.writeMem(0xa2ab, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x9fb0);
        EXPECT(gbc.pc(), 0xa2ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2ab), 0x96);
        // 96 01C0
        gbc.setState(0xc93f, 0x3139, 0x8360, 0xf48d, 0x2b7c, 0xe139, 0x1, 0x0);
        gbc.writeMem(0xc93f, { 0x96 });
        gbc.writeMem(0xe139, { 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3139);
        EXPECT(gbc.pc(), 0xc940);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc93f), 0x96);
        EXPECT(gbc.readMem(0xe139), 0x1b);
        // 96 01C1
        gbc.setState(0x5547, 0xeda3, 0x9fc0, 0x7a13, 0xacae, 0xd480, 0x1, 0x1);
        gbc.writeMem(0x5547, { 0x96 });
        gbc.writeMem(0xd480, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xeda3);
        EXPECT(gbc.pc(), 0x5548);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd480), 0xbd);
        // 96 01C2
        gbc.setState(0x12e7, 0xd450, 0xd450, 0xe329, 0x494, 0xc4f8, 0x1, 0x1);
        gbc.writeMem(0x12e7, { 0x96 });
        gbc.writeMem(0xc4f8, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xd450);
        EXPECT(gbc.pc(), 0x12e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4f8), 0x50);
        // 96 01C4
        gbc.setState(0x1e9e, 0xd432, 0x6d10, 0x62ac, 0x81c0, 0x8f1a, 0x1, 0x0);
        gbc.writeMem(0x1e9e, { 0x96 });
        gbc.writeMem(0x8f1a, { 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xd432);
        EXPECT(gbc.pc(), 0x1e9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f1a), 0x1b);
        // 96 01C5
        gbc.setState(0xb404, 0x33b, 0xeb10, 0x2f76, 0xb492, 0x323d, 0x0, 0x1);
        gbc.writeMem(0x323d, { 0x38 });
        gbc.writeMem(0xb404, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x33b);
        EXPECT(gbc.pc(), 0xb405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb404), 0x96);
        // 96 01C6
        gbc.setState(0x5175, 0x9bf4, 0x60a0, 0xaee7, 0xc789, 0xab1c, 0x1, 0x0);
        gbc.writeMem(0x5175, { 0x96 });
        gbc.writeMem(0xab1c, { 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9bf4);
        EXPECT(gbc.pc(), 0x5176);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab1c), 0xd0);
        // 96 01C7
        gbc.setState(0xdd3, 0xb990, 0xe210, 0xdbf0, 0x93be, 0x325f, 0x1, 0x1);
        gbc.writeMem(0xdd3, { 0x96 });
        gbc.writeMem(0x325f, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb990);
        EXPECT(gbc.pc(), 0xdd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 01C8
        gbc.setState(0xef29, 0x72ae, 0x7640, 0x7056, 0x1dd, 0x39b7, 0x0, 0x1);
        gbc.writeMem(0x39b7, { 0x7f });
        gbc.writeMem(0xef29, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x72ae);
        EXPECT(gbc.pc(), 0xef2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef29), 0x96);
        // 96 01C9
        gbc.setState(0xbdd7, 0x6f4b, 0x51e0, 0xcfd4, 0x7e6a, 0x509, 0x1, 0x0);
        gbc.writeMem(0x509, { 0xba });
        gbc.writeMem(0xbdd7, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6f4b);
        EXPECT(gbc.pc(), 0xbdd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdd7), 0x96);
        // 96 01CB
        gbc.setState(0xbfd, 0xdeed, 0x40c0, 0x1c47, 0x80b5, 0x8787, 0x0, 0x1);
        gbc.writeMem(0xbfd, { 0x96 });
        gbc.writeMem(0x8787, { 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xdeed);
        EXPECT(gbc.pc(), 0xbfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8787), 0xe0);
        // 96 01CC
        gbc.setState(0x9a74, 0x26f0, 0xc5c0, 0x802b, 0xdad2, 0x429d, 0x1, 0x1);
        gbc.writeMem(0x429d, { 0xd0 });
        gbc.writeMem(0x9a74, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x26f0);
        EXPECT(gbc.pc(), 0x9a75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a74), 0x96);
        // 96 01CD
        gbc.setState(0xb6bb, 0x3841, 0xf8c0, 0x9217, 0x2485, 0xaa96, 0x0, 0x0);
        gbc.writeMem(0xaa96, { 0xc4 });
        gbc.writeMem(0xb6bb, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x3841);
        EXPECT(gbc.pc(), 0xb6bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa96), 0xc4);
        EXPECT(gbc.readMem(0xb6bb), 0x96);
        // 96 01CE
        gbc.setState(0x9e0, 0x87dc, 0x1870, 0xa03a, 0xb8fa, 0xcf32, 0x1, 0x1);
        gbc.writeMem(0x9e0, { 0x96 });
        gbc.writeMem(0xcf32, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x87dc);
        EXPECT(gbc.pc(), 0x9e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf32), 0x1);
        // 96 01CF
        gbc.setState(0x68fb, 0x6e4a, 0x290, 0xc246, 0xed21, 0x58ad, 0x1, 0x0);
        gbc.writeMem(0x58ad, { 0x27 });
        gbc.writeMem(0x68fb, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6e4a);
        EXPECT(gbc.pc(), 0x68fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 01D0
        gbc.setState(0x911f, 0x207d, 0x20d0, 0x80ab, 0xcfcb, 0xfe58, 0x1, 0x0);
        gbc.writeMem(0x911f, { 0x96 });
        gbc.writeMem(0xfe58, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x207d);
        EXPECT(gbc.pc(), 0x9120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x911f), 0x96);
        EXPECT(gbc.readMem(0xfe58), 0xc);
        // 96 01D1
        gbc.setState(0xe4ee, 0x621e, 0x7e40, 0x7921, 0xe2dc, 0x4ff5, 0x0, 0x0);
        gbc.writeMem(0x4ff5, { 0x7b });
        gbc.writeMem(0xe4ee, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x621e);
        EXPECT(gbc.pc(), 0xe4ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4ee), 0x96);
        // 96 01D2
        gbc.setState(0x643, 0x35af, 0x6230, 0x7332, 0xc557, 0x952b, 0x0, 0x1);
        gbc.writeMem(0x643, { 0x96 });
        gbc.writeMem(0x952b, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x35af);
        EXPECT(gbc.pc(), 0x644);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x952b), 0x7f);
        // 96 01D3
        gbc.setState(0x188, 0x7e0a, 0xd0e0, 0xac04, 0xbddc, 0xe60d, 0x1, 0x1);
        gbc.writeMem(0x188, { 0x96 });
        gbc.writeMem(0xe60d, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7e0a);
        EXPECT(gbc.pc(), 0x189);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe60d), 0x5e);
        // 96 01D4
        gbc.setState(0xdee9, 0x51d7, 0xcbf0, 0x5378, 0x6269, 0x482f, 0x0, 0x1);
        gbc.writeMem(0x482f, { 0x8d });
        gbc.writeMem(0xdee9, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x51d7);
        EXPECT(gbc.pc(), 0xdeea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdee9), 0x96);
        // 96 01D5
        gbc.setState(0xe296, 0x1b5c, 0x6590, 0xe5b9, 0x8d1e, 0x7fd3, 0x1, 0x1);
        gbc.writeMem(0x7fd3, { 0xba });
        gbc.writeMem(0xe296, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x1b5c);
        EXPECT(gbc.pc(), 0xe297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe296), 0x96);
        // 96 01D6
        gbc.setState(0xccec, 0x7ae5, 0xe270, 0x6781, 0xc302, 0xc1f6, 0x0, 0x1);
        gbc.writeMem(0xc1f6, { 0x59 });
        gbc.writeMem(0xccec, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7ae5);
        EXPECT(gbc.pc(), 0xcced);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1f6), 0x59);
        EXPECT(gbc.readMem(0xccec), 0x96);
        // 96 01D7
        gbc.setState(0xc974, 0x603, 0x54a0, 0x3fdf, 0x6024, 0x6c83, 0x0, 0x1);
        gbc.writeMem(0x6c83, { 0x91 });
        gbc.writeMem(0xc974, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x603);
        EXPECT(gbc.pc(), 0xc975);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc974), 0x96);
        // 96 01D8
        gbc.setState(0xef06, 0x24b1, 0x6800, 0xf49d, 0xe07e, 0x7d6, 0x1, 0x0);
        gbc.writeMem(0x7d6, { 0x68 });
        gbc.writeMem(0xef06, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x24b1);
        EXPECT(gbc.pc(), 0xef07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef06), 0x96);
        // 96 01D9
        gbc.setState(0xa1fb, 0x9a86, 0xadb0, 0xca91, 0x61af, 0x5575, 0x1, 0x0);
        gbc.writeMem(0x5575, { 0xba });
        gbc.writeMem(0xa1fb, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9a86);
        EXPECT(gbc.pc(), 0xa1fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1fb), 0x96);
        // 96 01DA
        gbc.setState(0x2399, 0x6d8f, 0x54b0, 0x67d5, 0x37b4, 0x4fad, 0x0, 0x1);
        gbc.writeMem(0x2399, { 0x96 });
        gbc.writeMem(0x4fad, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6d8f);
        EXPECT(gbc.pc(), 0x239a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 01DB
        gbc.setState(0xd402, 0xf43c, 0x38e0, 0xdfb2, 0x5692, 0xae0f, 0x0, 0x1);
        gbc.writeMem(0xae0f, { 0x71 });
        gbc.writeMem(0xd402, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf43c);
        EXPECT(gbc.pc(), 0xd403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae0f), 0x71);
        EXPECT(gbc.readMem(0xd402), 0x96);
        // 96 01DC
        gbc.setState(0xa87a, 0xe9f, 0x1590, 0x4b4b, 0xff4e, 0x9316, 0x1, 0x0);
        gbc.writeMem(0x9316, { 0x77 });
        gbc.writeMem(0xa87a, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe9f);
        EXPECT(gbc.pc(), 0xa87b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9316), 0x77);
        EXPECT(gbc.readMem(0xa87a), 0x96);
        // 96 01DD
        gbc.setState(0xc510, 0x579a, 0x1590, 0x706c, 0x998c, 0x47e2, 0x1, 0x1);
        gbc.writeMem(0x47e2, { 0xc0 });
        gbc.writeMem(0xc510, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x579a);
        EXPECT(gbc.pc(), 0xc511);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc510), 0x96);
        // 96 01DE
        gbc.setState(0x3f10, 0xc1f9, 0x96f0, 0x51b7, 0xa2c3, 0x9c35, 0x0, 0x1);
        gbc.writeMem(0x3f10, { 0x96 });
        gbc.writeMem(0x9c35, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc1f9);
        EXPECT(gbc.pc(), 0x3f11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c35), 0xe4);
        // 96 01DF
        gbc.setState(0x427e, 0xca89, 0xb010, 0x450e, 0x2270, 0x3931, 0x0, 0x1);
        gbc.writeMem(0x3931, { 0xc1 });
        gbc.writeMem(0x427e, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xca89);
        EXPECT(gbc.pc(), 0x427f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 01E0
        gbc.setState(0x2bbf, 0x8904, 0xa990, 0x30f9, 0x4729, 0x6145, 0x0, 0x0);
        gbc.writeMem(0x2bbf, { 0x96 });
        gbc.writeMem(0x6145, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x8904);
        EXPECT(gbc.pc(), 0x2bc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 01E1
        gbc.setState(0xda28, 0x26f1, 0xb710, 0xf21a, 0x60e1, 0xf820, 0x1, 0x0);
        gbc.writeMem(0xda28, { 0x96 });
        gbc.writeMem(0xf820, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x26f1);
        EXPECT(gbc.pc(), 0xda29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda28), 0x96);
        EXPECT(gbc.readMem(0xf820), 0xfe);
        // 96 01E2
        gbc.setState(0x323d, 0xfdb8, 0x9530, 0x71e1, 0xfaf6, 0xf0a2, 0x0, 0x1);
        gbc.writeMem(0x323d, { 0x96 });
        gbc.writeMem(0xf0a2, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xfdb8);
        EXPECT(gbc.pc(), 0x323e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf0a2), 0x18);
        // 96 01E3
        gbc.setState(0x7f07, 0x1daf, 0x6b90, 0x289b, 0xd2b8, 0x6420, 0x0, 0x1);
        gbc.writeMem(0x6420, { 0xdd });
        gbc.writeMem(0x7f07, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1daf);
        EXPECT(gbc.pc(), 0x7f08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 01E4
        gbc.setState(0x9a38, 0x8722, 0xa410, 0x63b1, 0x7957, 0xc105, 0x0, 0x1);
        gbc.writeMem(0x9a38, { 0x96 });
        gbc.writeMem(0xc105, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x8722);
        EXPECT(gbc.pc(), 0x9a39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a38), 0x96);
        EXPECT(gbc.readMem(0xc105), 0xf0);
        // 96 01E5
        gbc.setState(0x9f6e, 0xb7b2, 0xfb90, 0xed35, 0x6ff5, 0x7956, 0x0, 0x0);
        gbc.writeMem(0x7956, { 0x3b });
        gbc.writeMem(0x9f6e, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb7b2);
        EXPECT(gbc.pc(), 0x9f6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f6e), 0x96);
        // 96 01E6
        gbc.setState(0x553f, 0x239, 0xf890, 0xccd6, 0xe379, 0x95b2, 0x0, 0x1);
        gbc.writeMem(0x553f, { 0x96 });
        gbc.writeMem(0x95b2, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x239);
        EXPECT(gbc.pc(), 0x5540);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95b2), 0x23);
        // 96 01E7
        gbc.setState(0x6a7d, 0x81a3, 0xf550, 0xf78f, 0x9fee, 0x271c, 0x0, 0x0);
        gbc.writeMem(0x271c, { 0x4a });
        gbc.writeMem(0x6a7d, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x81a3);
        EXPECT(gbc.pc(), 0x6a7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 01E8
        gbc.setState(0xca45, 0x334e, 0xa0f0, 0x228d, 0x5cc8, 0xb96a, 0x0, 0x0);
        gbc.writeMem(0xb96a, { 0x75 });
        gbc.writeMem(0xca45, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x334e);
        EXPECT(gbc.pc(), 0xca46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb96a), 0x75);
        EXPECT(gbc.readMem(0xca45), 0x96);
        // 96 01EA
        gbc.setState(0x68bc, 0xdfa1, 0x7640, 0x51e2, 0xc00b, 0xecec, 0x0, 0x1);
        gbc.writeMem(0x68bc, { 0x96 });
        gbc.writeMem(0xecec, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xdfa1);
        EXPECT(gbc.pc(), 0x68bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecec), 0x3b);
        // 96 01EB
        gbc.setState(0x95ea, 0x8f4d, 0x9e10, 0xbce2, 0x6cbd, 0x3355, 0x1, 0x0);
        gbc.writeMem(0x3355, { 0x5d });
        gbc.writeMem(0x95ea, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8f4d);
        EXPECT(gbc.pc(), 0x95eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95ea), 0x96);
        // 96 01EC
        gbc.setState(0x2945, 0x1710, 0x15b0, 0xdd67, 0x7b6f, 0xd3d4, 0x1, 0x1);
        gbc.writeMem(0x2945, { 0x96 });
        gbc.writeMem(0xd3d4, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x1710);
        EXPECT(gbc.pc(), 0x2946);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3d4), 0xb6);
        // 96 01ED
        gbc.setState(0xb88c, 0x93f4, 0x3150, 0xfcd1, 0x9ae8, 0xeb8e, 0x1, 0x0);
        gbc.writeMem(0xb88c, { 0x96 });
        gbc.writeMem(0xeb8e, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x93f4);
        EXPECT(gbc.pc(), 0xb88d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb88c), 0x96);
        EXPECT(gbc.readMem(0xeb8e), 0x30);
        // 96 01EE
        gbc.setState(0x2f40, 0x181d, 0x5be0, 0xa62d, 0x3185, 0x564b, 0x0, 0x1);
        gbc.writeMem(0x2f40, { 0x96 });
        gbc.writeMem(0x564b, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x181d);
        EXPECT(gbc.pc(), 0x2f41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 01EF
        gbc.setState(0x8559, 0xdb4e, 0x5800, 0x6a79, 0x2553, 0x73ce, 0x1, 0x0);
        gbc.writeMem(0x73ce, { 0x9 });
        gbc.writeMem(0x8559, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xdb4e);
        EXPECT(gbc.pc(), 0x855a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8559), 0x96);
        // 96 01F0
        gbc.setState(0x7e0f, 0x70dc, 0x6d0, 0xc7cc, 0x838b, 0xa538, 0x1, 0x1);
        gbc.writeMem(0x7e0f, { 0x96 });
        gbc.writeMem(0xa538, { 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x70dc);
        EXPECT(gbc.pc(), 0x7e10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa538), 0xeb);
        // 96 01F1
        gbc.setState(0xd78a, 0x499e, 0x4bd0, 0xc222, 0xeded, 0xacdc, 0x0, 0x1);
        gbc.writeMem(0xacdc, { 0x88 });
        gbc.writeMem(0xd78a, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x499e);
        EXPECT(gbc.pc(), 0xd78b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacdc), 0x88);
        EXPECT(gbc.readMem(0xd78a), 0x96);
        // 96 01F2
        gbc.setState(0xe30d, 0xc0e8, 0xc2e0, 0x81bb, 0xa56e, 0x59b3, 0x0, 0x1);
        gbc.writeMem(0x59b3, { 0x31 });
        gbc.writeMem(0xe30d, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xc0e8);
        EXPECT(gbc.pc(), 0xe30e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe30d), 0x96);
        // 96 01F3
        gbc.setState(0x5798, 0x92b7, 0xc0, 0x8c39, 0x9d2e, 0xef2b, 0x1, 0x0);
        gbc.writeMem(0x5798, { 0x96 });
        gbc.writeMem(0xef2b, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x92b7);
        EXPECT(gbc.pc(), 0x5799);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef2b), 0xc1);
        // 96 01F4
        gbc.setState(0xc807, 0x5a4, 0x4d40, 0xa3f6, 0xb17f, 0xb46f, 0x0, 0x0);
        gbc.writeMem(0xb46f, { 0x12 });
        gbc.writeMem(0xc807, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5a4);
        EXPECT(gbc.pc(), 0xc808);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb46f), 0x12);
        EXPECT(gbc.readMem(0xc807), 0x96);
        // 96 01F5
        gbc.setState(0x6c06, 0xce2f, 0xa5b0, 0xc7a, 0xf28f, 0xe4ad, 0x0, 0x1);
        gbc.writeMem(0x6c06, { 0x96 });
        gbc.writeMem(0xe4ad, { 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xce2f);
        EXPECT(gbc.pc(), 0x6c07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4ad), 0x68);
        // 96 01F6
        gbc.setState(0x383e, 0xbe4d, 0x6630, 0x8455, 0xc46c, 0xdcd1, 0x0, 0x1);
        gbc.writeMem(0x383e, { 0x96 });
        gbc.writeMem(0xdcd1, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xbe4d);
        EXPECT(gbc.pc(), 0x383f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcd1), 0xd7);
        // 96 01F7
        gbc.setState(0x41bc, 0x8032, 0xc780, 0x3d96, 0x3503, 0x6b1e, 0x0, 0x1);
        gbc.writeMem(0x41bc, { 0x96 });
        gbc.writeMem(0x6b1e, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x8032);
        EXPECT(gbc.pc(), 0x41bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 01F8
        gbc.setState(0x5de, 0x767a, 0xd8d0, 0xf8e0, 0xb1d3, 0x5108, 0x1, 0x1);
        gbc.writeMem(0x5de, { 0x96 });
        gbc.writeMem(0x5108, { 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x767a);
        EXPECT(gbc.pc(), 0x5df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 01F9
        gbc.setState(0xb115, 0xaee, 0xa450, 0xfb89, 0x13f1, 0xa867, 0x0, 0x1);
        gbc.writeMem(0xa867, { 0x75 });
        gbc.writeMem(0xb115, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xaee);
        EXPECT(gbc.pc(), 0xb116);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa867), 0x75);
        EXPECT(gbc.readMem(0xb115), 0x96);
        // 96 01FA
        gbc.setState(0xa7fe, 0xabef, 0x2800, 0xcd2b, 0x12f, 0xa93d, 0x1, 0x0);
        gbc.writeMem(0xa7fe, { 0x96 });
        gbc.writeMem(0xa93d, { 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xabef);
        EXPECT(gbc.pc(), 0xa7ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7fe), 0x96);
        EXPECT(gbc.readMem(0xa93d), 0x22);
        // 96 01FC
        gbc.setState(0xcdd6, 0x575c, 0xd540, 0x377, 0x8986, 0x1aae, 0x0, 0x1);
        gbc.writeMem(0x1aae, { 0x24 });
        gbc.writeMem(0xcdd6, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x575c);
        EXPECT(gbc.pc(), 0xcdd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdd6), 0x96);
        // 96 01FD
        gbc.setState(0x5f16, 0x7612, 0xd310, 0xe75c, 0x8894, 0xec9d, 0x1, 0x0);
        gbc.writeMem(0x5f16, { 0x96 });
        gbc.writeMem(0xec9d, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x7612);
        EXPECT(gbc.pc(), 0x5f17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec9d), 0x66);
        // 96 01FE
        gbc.setState(0x6b48, 0x3b72, 0x7130, 0xfaa5, 0x8554, 0x1f9c, 0x0, 0x0);
        gbc.writeMem(0x1f9c, { 0x5e });
        gbc.writeMem(0x6b48, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x3b72);
        EXPECT(gbc.pc(), 0x6b49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 01FF
        gbc.setState(0xe939, 0xcf7a, 0x1430, 0x7115, 0x9609, 0x3f60, 0x0, 0x1);
        gbc.writeMem(0x3f60, { 0xe });
        gbc.writeMem(0xe939, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xcf7a);
        EXPECT(gbc.pc(), 0xe93a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe939), 0x96);
        // 96 0200
        gbc.setState(0x91e6, 0xb6, 0x36e0, 0x10bb, 0x8188, 0x166b, 0x1, 0x1);
        gbc.writeMem(0x166b, { 0x38 });
        gbc.writeMem(0x91e6, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xb6);
        EXPECT(gbc.pc(), 0x91e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91e6), 0x96);
        // 96 0201
        gbc.setState(0xbca0, 0x9941, 0x2c90, 0x2d8e, 0xec77, 0xd11c, 0x0, 0x0);
        gbc.writeMem(0xbca0, { 0x96 });
        gbc.writeMem(0xd11c, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9941);
        EXPECT(gbc.pc(), 0xbca1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbca0), 0x96);
        EXPECT(gbc.readMem(0xd11c), 0x85);
        // 96 0202
        gbc.setState(0xd01, 0xbaab, 0x230, 0xdb58, 0xc0ea, 0x813, 0x1, 0x1);
        gbc.writeMem(0x813, { 0x56 });
        gbc.writeMem(0xd01, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xbaab);
        EXPECT(gbc.pc(), 0xd02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 0203
        gbc.setState(0x2c31, 0x3036, 0x7f00, 0xb0b1, 0x65e4, 0x9992, 0x1, 0x1);
        gbc.writeMem(0x2c31, { 0x96 });
        gbc.writeMem(0x9992, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x3036);
        EXPECT(gbc.pc(), 0x2c32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9992), 0xc6);
        // 96 0204
        gbc.setState(0xa371, 0xddd2, 0xcf90, 0xeee7, 0x4fa0, 0x9f42, 0x1, 0x1);
        gbc.writeMem(0x9f42, { 0xce });
        gbc.writeMem(0xa371, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xddd2);
        EXPECT(gbc.pc(), 0xa372);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f42), 0xce);
        EXPECT(gbc.readMem(0xa371), 0x96);
        // 96 0205
        gbc.setState(0xbd8, 0x148e, 0x21c0, 0xbb, 0xe002, 0xd8b0, 0x0, 0x1);
        gbc.writeMem(0xbd8, { 0x96 });
        gbc.writeMem(0xd8b0, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x148e);
        EXPECT(gbc.pc(), 0xbd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8b0), 0xaf);
        // 96 0206
        gbc.setState(0x5818, 0x5aff, 0x3e60, 0xc913, 0x8b8f, 0x99ce, 0x0, 0x1);
        gbc.writeMem(0x5818, { 0x96 });
        gbc.writeMem(0x99ce, { 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x5aff);
        EXPECT(gbc.pc(), 0x5819);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99ce), 0x49);
        // 96 0207
        gbc.setState(0xd4c7, 0xf8cf, 0x87d0, 0x9d37, 0x4178, 0x9afd, 0x1, 0x1);
        gbc.writeMem(0x9afd, { 0x67 });
        gbc.writeMem(0xd4c7, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf8cf);
        EXPECT(gbc.pc(), 0xd4c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9afd), 0x67);
        EXPECT(gbc.readMem(0xd4c7), 0x96);
        // 96 0208
        gbc.setState(0x3597, 0x2823, 0x9fe0, 0x8157, 0x34c6, 0x1fa, 0x1, 0x0);
        gbc.writeMem(0x1fa, { 0xf9 });
        gbc.writeMem(0x3597, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x2823);
        EXPECT(gbc.pc(), 0x3598);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0209
        gbc.setState(0x3e7c, 0x1f84, 0x5ab0, 0xcd04, 0x9af3, 0x8ea, 0x1, 0x1);
        gbc.writeMem(0x8ea, { 0x92 });
        gbc.writeMem(0x3e7c, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x1f84);
        EXPECT(gbc.pc(), 0x3e7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 020A
        gbc.setState(0xd2f, 0x27a3, 0xe9c0, 0xb5b1, 0xd0e9, 0xe6f5, 0x0, 0x1);
        gbc.writeMem(0xd2f, { 0x96 });
        gbc.writeMem(0xe6f5, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x27a3);
        EXPECT(gbc.pc(), 0xd30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6f5), 0x5f);
        // 96 020B
        gbc.setState(0x1d16, 0x5dac, 0xfa20, 0xb29, 0x85ca, 0x1e61, 0x0, 0x0);
        gbc.writeMem(0x1d16, { 0x96 });
        gbc.writeMem(0x1e61, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x5dac);
        EXPECT(gbc.pc(), 0x1d17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 020E
        gbc.setState(0xa31b, 0xaa0b, 0x3c20, 0xff77, 0xfd6f, 0x35c, 0x0, 0x0);
        gbc.writeMem(0x35c, { 0xef });
        gbc.writeMem(0xa31b, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xaa0b);
        EXPECT(gbc.pc(), 0xa31c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa31b), 0x96);
        // 96 020F
        gbc.setState(0xcea7, 0x74b1, 0xe5f0, 0xa434, 0x30e9, 0x5c4e, 0x0, 0x1);
        gbc.writeMem(0x5c4e, { 0xd1 });
        gbc.writeMem(0xcea7, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x74b1);
        EXPECT(gbc.pc(), 0xcea8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcea7), 0x96);
        // 96 0210
        gbc.setState(0xaf00, 0xa2c8, 0xd8c0, 0x663b, 0xd97a, 0x5c76, 0x0, 0x1);
        gbc.writeMem(0x5c76, { 0xb });
        gbc.writeMem(0xaf00, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa2c8);
        EXPECT(gbc.pc(), 0xaf01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf00), 0x96);
        // 96 0211
        gbc.setState(0x4adf, 0xe304, 0x1bd0, 0x1ccb, 0x7012, 0xf221, 0x1, 0x1);
        gbc.writeMem(0x4adf, { 0x96 });
        gbc.writeMem(0xf221, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe304);
        EXPECT(gbc.pc(), 0x4ae0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf221), 0x90);
        // 96 0212
        gbc.setState(0xbf1a, 0xa5d3, 0xfc00, 0xc2b, 0x1a2b, 0x5f93, 0x1, 0x0);
        gbc.writeMem(0x5f93, { 0x3 });
        gbc.writeMem(0xbf1a, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xa5d3);
        EXPECT(gbc.pc(), 0xbf1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf1a), 0x96);
        // 96 0213
        gbc.setState(0x2335, 0xfc73, 0x6e60, 0xa317, 0xa7d4, 0x3f0a, 0x0, 0x0);
        gbc.writeMem(0x2335, { 0x96 });
        gbc.writeMem(0x3f0a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xfc73);
        EXPECT(gbc.pc(), 0x2336);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0214
        gbc.setState(0xb60d, 0xd17d, 0xb3d0, 0x7178, 0xc078, 0x2261, 0x0, 0x0);
        gbc.writeMem(0x2261, { 0xe3 });
        gbc.writeMem(0xb60d, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd17d);
        EXPECT(gbc.pc(), 0xb60e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb60d), 0x96);
        // 96 0215
        gbc.setState(0xedd5, 0xdfc4, 0xbf10, 0x39a0, 0x90d, 0xdb5a, 0x0, 0x1);
        gbc.writeMem(0xdb5a, { 0x8a });
        gbc.writeMem(0xedd5, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xdfc4);
        EXPECT(gbc.pc(), 0xedd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb5a), 0x8a);
        EXPECT(gbc.readMem(0xedd5), 0x96);
        // 96 0216
        gbc.setState(0xe32e, 0xa214, 0x1f60, 0x9d45, 0xa172, 0x376e, 0x1, 0x0);
        gbc.writeMem(0x376e, { 0xd8 });
        gbc.writeMem(0xe32e, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa214);
        EXPECT(gbc.pc(), 0xe32f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe32e), 0x96);
        // 96 0218
        gbc.setState(0x84bf, 0x6c29, 0xe3b0, 0x8597, 0x29f5, 0x96fc, 0x1, 0x0);
        gbc.writeMem(0x84bf, { 0x96 });
        gbc.writeMem(0x96fc, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6c29);
        EXPECT(gbc.pc(), 0x84c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84bf), 0x96);
        EXPECT(gbc.readMem(0x96fc), 0xd1);
        // 96 0219
        gbc.setState(0xaa6e, 0x3cad, 0xa040, 0x8d46, 0x568b, 0x2dd0, 0x0, 0x0);
        gbc.writeMem(0x2dd0, { 0xb3 });
        gbc.writeMem(0xaa6e, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3cad);
        EXPECT(gbc.pc(), 0xaa6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa6e), 0x96);
        // 96 021A
        gbc.setState(0xcc1, 0xb696, 0xabd0, 0x166a, 0xbac5, 0xd723, 0x0, 0x0);
        gbc.writeMem(0xcc1, { 0x96 });
        gbc.writeMem(0xd723, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb696);
        EXPECT(gbc.pc(), 0xcc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd723), 0xa4);
        // 96 021B
        gbc.setState(0x5126, 0x2ed0, 0x2900, 0xac6b, 0x1fc, 0xc21, 0x1, 0x1);
        gbc.writeMem(0xc21, { 0x6a });
        gbc.writeMem(0x5126, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2ed0);
        EXPECT(gbc.pc(), 0x5127);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 021C
        gbc.setState(0xe7e3, 0xcdbb, 0x5f90, 0xdd57, 0x52ab, 0xb8ee, 0x1, 0x1);
        gbc.writeMem(0xb8ee, { 0x5d });
        gbc.writeMem(0xe7e3, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xcdbb);
        EXPECT(gbc.pc(), 0xe7e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8ee), 0x5d);
        EXPECT(gbc.readMem(0xe7e3), 0x96);
        // 96 021D
        gbc.setState(0x659a, 0x2e4a, 0xccb0, 0xd652, 0x5844, 0xa9e7, 0x1, 0x1);
        gbc.writeMem(0x659a, { 0x96 });
        gbc.writeMem(0xa9e7, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x2e4a);
        EXPECT(gbc.pc(), 0x659b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9e7), 0x33);
        // 96 021E
        gbc.setState(0x960f, 0x3211, 0xbf30, 0xeb3e, 0xafcb, 0xcc6d, 0x0, 0x0);
        gbc.writeMem(0x960f, { 0x96 });
        gbc.writeMem(0xcc6d, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3211);
        EXPECT(gbc.pc(), 0x9610);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x960f), 0x96);
        EXPECT(gbc.readMem(0xcc6d), 0xe7);
        // 96 0220
        gbc.setState(0xaf7f, 0x6e41, 0xea50, 0x18b9, 0xd0c4, 0xe2b6, 0x0, 0x0);
        gbc.writeMem(0xaf7f, { 0x96 });
        gbc.writeMem(0xe2b6, { 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x6e41);
        EXPECT(gbc.pc(), 0xaf80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf7f), 0x96);
        EXPECT(gbc.readMem(0xe2b6), 0x68);
        // 96 0221
        gbc.setState(0xca73, 0xc94e, 0x49d0, 0x63db, 0xe047, 0xdc9f, 0x1, 0x1);
        gbc.writeMem(0xca73, { 0x96 });
        gbc.writeMem(0xdc9f, { 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc94e);
        EXPECT(gbc.pc(), 0xca74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca73), 0x96);
        EXPECT(gbc.readMem(0xdc9f), 0x39);
        // 96 0222
        gbc.setState(0x7209, 0xe912, 0x5330, 0x8052, 0x64d0, 0x4ce0, 0x1, 0x0);
        gbc.writeMem(0x4ce0, { 0x8f });
        gbc.writeMem(0x7209, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe912);
        EXPECT(gbc.pc(), 0x720a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 0223
        gbc.setState(0xda84, 0x1bfb, 0x2f20, 0xdec, 0xbeaf, 0x5ded, 0x1, 0x1);
        gbc.writeMem(0x5ded, { 0x9e });
        gbc.writeMem(0xda84, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1bfb);
        EXPECT(gbc.pc(), 0xda85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda84), 0x96);
        // 96 0224
        gbc.setState(0xddde, 0xe098, 0x220, 0x513e, 0x43b2, 0xfac0, 0x1, 0x1);
        gbc.writeMem(0xddde, { 0x96 });
        gbc.writeMem(0xfac0, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe098);
        EXPECT(gbc.pc(), 0xdddf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddde), 0x96);
        EXPECT(gbc.readMem(0xfac0), 0x8c);
        // 96 0225
        gbc.setState(0xa0f6, 0x49d1, 0x7850, 0x920a, 0x825, 0x8777, 0x0, 0x0);
        gbc.writeMem(0x8777, { 0xf });
        gbc.writeMem(0xa0f6, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x49d1);
        EXPECT(gbc.pc(), 0xa0f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8777), 0xf);
        EXPECT(gbc.readMem(0xa0f6), 0x96);
        // 96 0226
        gbc.setState(0x5dca, 0x6112, 0xe050, 0x9315, 0x5cb4, 0xb69c, 0x1, 0x0);
        gbc.writeMem(0x5dca, { 0x96 });
        gbc.writeMem(0xb69c, { 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6112);
        EXPECT(gbc.pc(), 0x5dcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb69c), 0xa);
        // 96 0227
        gbc.setState(0x6110, 0x8b08, 0xdd0, 0xa48b, 0x451c, 0x52cb, 0x1, 0x1);
        gbc.writeMem(0x52cb, { 0x7 });
        gbc.writeMem(0x6110, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x8b08);
        EXPECT(gbc.pc(), 0x6111);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 0228
        gbc.setState(0xa603, 0x2feb, 0xe990, 0x1ae1, 0x676a, 0x710b, 0x1, 0x1);
        gbc.writeMem(0x710b, { 0xd4 });
        gbc.writeMem(0xa603, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2feb);
        EXPECT(gbc.pc(), 0xa604);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa603), 0x96);
        // 96 0229
        gbc.setState(0x736d, 0x8393, 0xe9c0, 0x9d23, 0xc7b4, 0x71ac, 0x1, 0x0);
        gbc.writeMem(0x71ac, { 0x5f });
        gbc.writeMem(0x736d, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x8393);
        EXPECT(gbc.pc(), 0x736e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 022A
        gbc.setState(0x9f04, 0x62ea, 0xc30, 0x1143, 0x5a49, 0x1719, 0x0, 0x0);
        gbc.writeMem(0x1719, { 0xfe });
        gbc.writeMem(0x9f04, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x62ea);
        EXPECT(gbc.pc(), 0x9f05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f04), 0x96);
        // 96 022B
        gbc.setState(0x7478, 0xbaf4, 0x76b0, 0x5b73, 0xa71f, 0x41c3, 0x0, 0x0);
        gbc.writeMem(0x41c3, { 0x35 });
        gbc.writeMem(0x7478, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xbaf4);
        EXPECT(gbc.pc(), 0x7479);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 022C
        gbc.setState(0x8ceb, 0xd10e, 0x1340, 0x3ba1, 0x3833, 0xbc83, 0x1, 0x0);
        gbc.writeMem(0x8ceb, { 0x96 });
        gbc.writeMem(0xbc83, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd10e);
        EXPECT(gbc.pc(), 0x8cec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ceb), 0x96);
        EXPECT(gbc.readMem(0xbc83), 0x50);
        // 96 022D
        gbc.setState(0x1dfa, 0x6570, 0xffb0, 0xd82c, 0xe75c, 0x82b4, 0x1, 0x1);
        gbc.writeMem(0x1dfa, { 0x96 });
        gbc.writeMem(0x82b4, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6570);
        EXPECT(gbc.pc(), 0x1dfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82b4), 0x59);
        // 96 022E
        gbc.setState(0x4a6c, 0x998f, 0xbe30, 0x28e9, 0x58da, 0x541e, 0x0, 0x0);
        gbc.writeMem(0x4a6c, { 0x96 });
        gbc.writeMem(0x541e, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x998f);
        EXPECT(gbc.pc(), 0x4a6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 022F
        gbc.setState(0x14d3, 0x7641, 0xa100, 0x5dd1, 0x59b4, 0x1f43, 0x0, 0x0);
        gbc.writeMem(0x14d3, { 0x96 });
        gbc.writeMem(0x1f43, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x7641);
        EXPECT(gbc.pc(), 0x14d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 0230
        gbc.setState(0x212d, 0x5cf2, 0xa220, 0x6a2, 0xe7ba, 0x22e3, 0x1, 0x0);
        gbc.writeMem(0x212d, { 0x96 });
        gbc.writeMem(0x22e3, { 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x5cf2);
        EXPECT(gbc.pc(), 0x212e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 0231
        gbc.setState(0x384c, 0xe063, 0x1c20, 0x690, 0x99d4, 0xea75, 0x1, 0x1);
        gbc.writeMem(0x384c, { 0x96 });
        gbc.writeMem(0xea75, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe063);
        EXPECT(gbc.pc(), 0x384d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea75), 0xee);
        // 96 0232
        gbc.setState(0xd4d, 0x75fe, 0x7020, 0x1739, 0xd3c3, 0xb538, 0x1, 0x0);
        gbc.writeMem(0xd4d, { 0x96 });
        gbc.writeMem(0xb538, { 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x75fe);
        EXPECT(gbc.pc(), 0xd4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb538), 0xe5);
        // 96 0233
        gbc.setState(0xd0cf, 0xc86c, 0xd390, 0x7fb3, 0xb976, 0x2ead, 0x0, 0x1);
        gbc.writeMem(0x2ead, { 0xb0 });
        gbc.writeMem(0xd0cf, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc86c);
        EXPECT(gbc.pc(), 0xd0d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0cf), 0x96);
        // 96 0234
        gbc.setState(0xad89, 0xc591, 0xfc60, 0xf1e, 0x8776, 0xd97d, 0x0, 0x1);
        gbc.writeMem(0xad89, { 0x96 });
        gbc.writeMem(0xd97d, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc591);
        EXPECT(gbc.pc(), 0xad8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad89), 0x96);
        EXPECT(gbc.readMem(0xd97d), 0x8a);
        // 96 0235
        gbc.setState(0x60ed, 0x7088, 0x5570, 0xc4ab, 0xcc94, 0xf35b, 0x1, 0x1);
        gbc.writeMem(0x60ed, { 0x96 });
        gbc.writeMem(0xf35b, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x7088);
        EXPECT(gbc.pc(), 0x60ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf35b), 0xd);
        // 96 0236
        gbc.setState(0xa232, 0x73e2, 0x3a80, 0x179f, 0xc123, 0x872e, 0x0, 0x1);
        gbc.writeMem(0x872e, { 0x1b });
        gbc.writeMem(0xa232, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x73e2);
        EXPECT(gbc.pc(), 0xa233);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x872e), 0x1b);
        EXPECT(gbc.readMem(0xa232), 0x96);
        // 96 0237
        gbc.setState(0xabd8, 0x393e, 0x36e0, 0xbda7, 0x4db5, 0xd1c8, 0x0, 0x1);
        gbc.writeMem(0xabd8, { 0x96 });
        gbc.writeMem(0xd1c8, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x393e);
        EXPECT(gbc.pc(), 0xabd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabd8), 0x96);
        EXPECT(gbc.readMem(0xd1c8), 0x93);
        // 96 0238
        gbc.setState(0x4ac7, 0x5d91, 0xde30, 0x6ce9, 0xa746, 0x6a19, 0x1, 0x0);
        gbc.writeMem(0x4ac7, { 0x96 });
        gbc.writeMem(0x6a19, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x5d91);
        EXPECT(gbc.pc(), 0x4ac8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 0239
        gbc.setState(0x1f1c, 0x49c5, 0xa8d0, 0xa443, 0x8ff1, 0x32d1, 0x1, 0x0);
        gbc.writeMem(0x1f1c, { 0x96 });
        gbc.writeMem(0x32d1, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x49c5);
        EXPECT(gbc.pc(), 0x1f1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 023A
        gbc.setState(0x2a5, 0x471a, 0xcba0, 0xca3e, 0x1b0f, 0xeaba, 0x1, 0x0);
        gbc.writeMem(0x2a5, { 0x96 });
        gbc.writeMem(0xeaba, { 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x471a);
        EXPECT(gbc.pc(), 0x2a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaba), 0x17);
        // 96 023B
        gbc.setState(0x505c, 0x78b0, 0x17b0, 0x786a, 0x5087, 0x1721, 0x0, 0x1);
        gbc.writeMem(0x1721, { 0x39 });
        gbc.writeMem(0x505c, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x78b0);
        EXPECT(gbc.pc(), 0x505d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 023C
        gbc.setState(0x43, 0xb4c0, 0x7130, 0x22d4, 0x78d1, 0x8a38, 0x0, 0x0);
        gbc.writeMem(0x43, { 0x96 });
        gbc.writeMem(0x8a38, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb4c0);
        EXPECT(gbc.pc(), 0x44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a38), 0x6e);
        // 96 023D
        gbc.setState(0xe096, 0xbd71, 0xd240, 0x2293, 0x5d48, 0xc6cd, 0x0, 0x0);
        gbc.writeMem(0xc6cd, { 0xe8 });
        gbc.writeMem(0xe096, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xbd71);
        EXPECT(gbc.pc(), 0xe097);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6cd), 0xe8);
        EXPECT(gbc.readMem(0xe096), 0x96);
        // 96 023E
        gbc.setState(0xc7ea, 0x2cd9, 0xf890, 0x19d6, 0x4b, 0x2717, 0x0, 0x0);
        gbc.writeMem(0x2717, { 0xf0 });
        gbc.writeMem(0xc7ea, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2cd9);
        EXPECT(gbc.pc(), 0xc7eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7ea), 0x96);
        // 96 023F
        gbc.setState(0x2ecd, 0x4efb, 0x9e50, 0x7f5, 0x8982, 0x789d, 0x1, 0x1);
        gbc.writeMem(0x2ecd, { 0x96 });
        gbc.writeMem(0x789d, { 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4efb);
        EXPECT(gbc.pc(), 0x2ece);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0240
        gbc.setState(0xea25, 0xd0bc, 0x26b0, 0xd28, 0x5e80, 0xfcb, 0x0, 0x0);
        gbc.writeMem(0xfcb, { 0x69 });
        gbc.writeMem(0xea25, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xd0bc);
        EXPECT(gbc.pc(), 0xea26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea25), 0x96);
        // 96 0241
        gbc.setState(0x32d6, 0x9632, 0x9b50, 0x6f82, 0xbe9b, 0x3b1e, 0x1, 0x0);
        gbc.writeMem(0x32d6, { 0x96 });
        gbc.writeMem(0x3b1e, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x9632);
        EXPECT(gbc.pc(), 0x32d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 0242
        gbc.setState(0xe719, 0x9dad, 0xd050, 0x7f5, 0xbbb9, 0xa694, 0x0, 0x0);
        gbc.writeMem(0xa694, { 0x13 });
        gbc.writeMem(0xe719, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x9dad);
        EXPECT(gbc.pc(), 0xe71a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa694), 0x13);
        EXPECT(gbc.readMem(0xe719), 0x96);
        // 96 0243
        gbc.setState(0x270e, 0x4a14, 0x2180, 0x6cfb, 0xf220, 0x37eb, 0x1, 0x1);
        gbc.writeMem(0x270e, { 0x96 });
        gbc.writeMem(0x37eb, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x4a14);
        EXPECT(gbc.pc(), 0x270f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 0244
        gbc.setState(0x3ef0, 0xfb55, 0x62d0, 0xc0fe, 0xad97, 0x3e89, 0x0, 0x1);
        gbc.writeMem(0x3e89, { 0xc0 });
        gbc.writeMem(0x3ef0, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xfb55);
        EXPECT(gbc.pc(), 0x3ef1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0245
        gbc.setState(0xe58e, 0x18ef, 0x8980, 0x3b54, 0xae2, 0xf522, 0x0, 0x1);
        gbc.writeMem(0xe58e, { 0x96 });
        gbc.writeMem(0xf522, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x18ef);
        EXPECT(gbc.pc(), 0xe58f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe58e), 0x96);
        EXPECT(gbc.readMem(0xf522), 0xa9);
        // 96 0246
        gbc.setState(0x37e0, 0x27b4, 0xb210, 0x99d0, 0x9b1f, 0xa4e6, 0x0, 0x1);
        gbc.writeMem(0x37e0, { 0x96 });
        gbc.writeMem(0xa4e6, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x27b4);
        EXPECT(gbc.pc(), 0x37e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4e6), 0xb1);
        // 96 0247
        gbc.setState(0xe282, 0x856f, 0xc590, 0xf487, 0xd0b9, 0x2a4c, 0x1, 0x1);
        gbc.writeMem(0x2a4c, { 0x63 });
        gbc.writeMem(0xe282, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x856f);
        EXPECT(gbc.pc(), 0xe283);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe282), 0x96);
        // 96 0248
        gbc.setState(0x3f2f, 0x926f, 0xfae0, 0x1379, 0xeba8, 0x34bd, 0x1, 0x1);
        gbc.writeMem(0x34bd, { 0xba });
        gbc.writeMem(0x3f2f, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x926f);
        EXPECT(gbc.pc(), 0x3f30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 0249
        gbc.setState(0x708c, 0x5212, 0xecd0, 0x926f, 0xd5a, 0x5e9e, 0x1, 0x1);
        gbc.writeMem(0x5e9e, { 0x36 });
        gbc.writeMem(0x708c, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5212);
        EXPECT(gbc.pc(), 0x708d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 024A
        gbc.setState(0xdfd7, 0xef4d, 0x7160, 0x2bac, 0xfa75, 0xc440, 0x0, 0x1);
        gbc.writeMem(0xc440, { 0x3c });
        gbc.writeMem(0xdfd7, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xef4d);
        EXPECT(gbc.pc(), 0xdfd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc440), 0x3c);
        EXPECT(gbc.readMem(0xdfd7), 0x96);
        // 96 024B
        gbc.setState(0x1446, 0xfa1d, 0xd20, 0x55f5, 0x2f85, 0xb637, 0x0, 0x0);
        gbc.writeMem(0x1446, { 0x96 });
        gbc.writeMem(0xb637, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xfa1d);
        EXPECT(gbc.pc(), 0x1447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb637), 0x5c);
        // 96 024C
        gbc.setState(0x1b98, 0x262b, 0x6310, 0x8c42, 0x1696, 0x4bf9, 0x0, 0x0);
        gbc.writeMem(0x1b98, { 0x96 });
        gbc.writeMem(0x4bf9, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x262b);
        EXPECT(gbc.pc(), 0x1b99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 024D
        gbc.setState(0x513a, 0xaec3, 0xad70, 0x7fa6, 0xfc5d, 0xba32, 0x0, 0x0);
        gbc.writeMem(0x513a, { 0x96 });
        gbc.writeMem(0xba32, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xaec3);
        EXPECT(gbc.pc(), 0x513b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba32), 0x16);
        // 96 024E
        gbc.setState(0x6346, 0x835e, 0xddc0, 0x7188, 0x5474, 0x4f49, 0x0, 0x1);
        gbc.writeMem(0x4f49, { 0xd2 });
        gbc.writeMem(0x6346, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x835e);
        EXPECT(gbc.pc(), 0x6347);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 024F
        gbc.setState(0xe146, 0x15b6, 0x6ed0, 0x1c2f, 0x7522, 0xab86, 0x1, 0x1);
        gbc.writeMem(0xab86, { 0xcb });
        gbc.writeMem(0xe146, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x15b6);
        EXPECT(gbc.pc(), 0xe147);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab86), 0xcb);
        EXPECT(gbc.readMem(0xe146), 0x96);
        // 96 0250
        gbc.setState(0xecd3, 0x711c, 0x9d20, 0xcf5f, 0x72fb, 0xc47d, 0x1, 0x0);
        gbc.writeMem(0xc47d, { 0x90 });
        gbc.writeMem(0xecd3, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x711c);
        EXPECT(gbc.pc(), 0xecd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc47d), 0x90);
        EXPECT(gbc.readMem(0xecd3), 0x96);
        // 96 0251
        gbc.setState(0x1099, 0xc39d, 0xc960, 0x788c, 0xbffa, 0xa9ab, 0x1, 0x0);
        gbc.writeMem(0x1099, { 0x96 });
        gbc.writeMem(0xa9ab, { 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc39d);
        EXPECT(gbc.pc(), 0x109a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9ab), 0x4);
        // 96 0252
        gbc.setState(0x1dfb, 0x4ae0, 0x8400, 0xc875, 0x6e44, 0x2615, 0x1, 0x1);
        gbc.writeMem(0x1dfb, { 0x96 });
        gbc.writeMem(0x2615, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x4ae0);
        EXPECT(gbc.pc(), 0x1dfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 0255
        gbc.setState(0x43fc, 0xaaba, 0xb7b0, 0x1174, 0xefdc, 0xbfc2, 0x1, 0x1);
        gbc.writeMem(0x43fc, { 0x96 });
        gbc.writeMem(0xbfc2, { 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xaaba);
        EXPECT(gbc.pc(), 0x43fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfc2), 0xd0);
        // 96 0256
        gbc.setState(0xb144, 0x42ce, 0xdf60, 0x1653, 0x6334, 0x5342, 0x0, 0x1);
        gbc.writeMem(0x5342, { 0x79 });
        gbc.writeMem(0xb144, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x42ce);
        EXPECT(gbc.pc(), 0xb145);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb144), 0x96);
        // 96 0257
        gbc.setState(0x1c9d, 0x36d9, 0xfb40, 0x2201, 0x2775, 0x3fa6, 0x1, 0x1);
        gbc.writeMem(0x1c9d, { 0x96 });
        gbc.writeMem(0x3fa6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x36d9);
        EXPECT(gbc.pc(), 0x1c9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 0258
        gbc.setState(0x1865, 0x4c4d, 0x2460, 0x17cc, 0xecbb, 0x505f, 0x0, 0x1);
        gbc.writeMem(0x1865, { 0x96 });
        gbc.writeMem(0x505f, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x4c4d);
        EXPECT(gbc.pc(), 0x1866);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 0259
        gbc.setState(0x6c73, 0xb44e, 0x48c0, 0xcef, 0x6acb, 0x6959, 0x1, 0x1);
        gbc.writeMem(0x6959, { 0x15 });
        gbc.writeMem(0x6c73, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb44e);
        EXPECT(gbc.pc(), 0x6c74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 025A
        gbc.setState(0x2656, 0x5fca, 0x29e0, 0xdb0c, 0x7059, 0x9a07, 0x1, 0x1);
        gbc.writeMem(0x2656, { 0x96 });
        gbc.writeMem(0x9a07, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5fca);
        EXPECT(gbc.pc(), 0x2657);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a07), 0xc2);
        // 96 025B
        gbc.setState(0x7c96, 0x6e61, 0x8870, 0xbd0b, 0x3fe9, 0xe562, 0x1, 0x1);
        gbc.writeMem(0x7c96, { 0x96 });
        gbc.writeMem(0xe562, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6e61);
        EXPECT(gbc.pc(), 0x7c97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe562), 0x86);
        // 96 025C
        gbc.setState(0x5fd3, 0xbb3b, 0x11e0, 0x4455, 0xf3e, 0x807a, 0x0, 0x0);
        gbc.writeMem(0x5fd3, { 0x96 });
        gbc.writeMem(0x807a, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xbb3b);
        EXPECT(gbc.pc(), 0x5fd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x807a), 0xe4);
        // 96 025D
        gbc.setState(0xa446, 0x2d39, 0x4850, 0x88c5, 0xddf7, 0x4498, 0x0, 0x0);
        gbc.writeMem(0x4498, { 0xcb });
        gbc.writeMem(0xa446, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2d39);
        EXPECT(gbc.pc(), 0xa447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa446), 0x96);
        // 96 025E
        gbc.setState(0x3810, 0x3eb3, 0x180, 0x9522, 0xb8f5, 0xd40c, 0x1, 0x0);
        gbc.writeMem(0x3810, { 0x96 });
        gbc.writeMem(0xd40c, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3eb3);
        EXPECT(gbc.pc(), 0x3811);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd40c), 0x28);
        // 96 025F
        gbc.setState(0x9344, 0x5571, 0x3570, 0xb710, 0x3605, 0xd278, 0x1, 0x0);
        gbc.writeMem(0x9344, { 0x96 });
        gbc.writeMem(0xd278, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x5571);
        EXPECT(gbc.pc(), 0x9345);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9344), 0x96);
        EXPECT(gbc.readMem(0xd278), 0x56);
        // 96 0260
        gbc.setState(0xbafc, 0x956d, 0x69c0, 0x717c, 0x8b30, 0xc052, 0x0, 0x0);
        gbc.writeMem(0xbafc, { 0x96 });
        gbc.writeMem(0xc052, { 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x956d);
        EXPECT(gbc.pc(), 0xbafd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbafc), 0x96);
        EXPECT(gbc.readMem(0xc052), 0xb4);
        // 96 0261
        gbc.setState(0x7216, 0x404, 0x73c0, 0xd802, 0xaf8, 0x3d32, 0x1, 0x0);
        gbc.writeMem(0x3d32, { 0x69 });
        gbc.writeMem(0x7216, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x404);
        EXPECT(gbc.pc(), 0x7217);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 0262
        gbc.setState(0x99f3, 0x8ce8, 0x3510, 0xf8b2, 0x3ced, 0x4f4c, 0x0, 0x1);
        gbc.writeMem(0x4f4c, { 0xce });
        gbc.writeMem(0x99f3, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8ce8);
        EXPECT(gbc.pc(), 0x99f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99f3), 0x96);
        // 96 0263
        gbc.setState(0x9266, 0xa939, 0x5030, 0x8c6, 0xf0be, 0x51d, 0x0, 0x0);
        gbc.writeMem(0x51d, { 0xb8 });
        gbc.writeMem(0x9266, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xa939);
        EXPECT(gbc.pc(), 0x9267);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9266), 0x96);
        // 96 0264
        gbc.setState(0x9f11, 0x42b8, 0x210, 0x68cb, 0xd3a8, 0x365b, 0x0, 0x1);
        gbc.writeMem(0x365b, { 0x53 });
        gbc.writeMem(0x9f11, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x42b8);
        EXPECT(gbc.pc(), 0x9f12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f11), 0x96);
        // 96 0265
        gbc.setState(0xcd92, 0x1ce2, 0x9c60, 0x4ed8, 0x7611, 0xcb8c, 0x0, 0x1);
        gbc.writeMem(0xcb8c, { 0x14 });
        gbc.writeMem(0xcd92, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x1ce2);
        EXPECT(gbc.pc(), 0xcd93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb8c), 0x14);
        EXPECT(gbc.readMem(0xcd92), 0x96);
        // 96 0266
        gbc.setState(0xecd2, 0x9791, 0xc210, 0xb882, 0xcfdd, 0xab2d, 0x0, 0x1);
        gbc.writeMem(0xab2d, { 0xff });
        gbc.writeMem(0xecd2, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9791);
        EXPECT(gbc.pc(), 0xecd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab2d), 0xff);
        EXPECT(gbc.readMem(0xecd2), 0x96);
        // 96 0267
        gbc.setState(0xef1b, 0xe62e, 0x74e0, 0x7b93, 0x3492, 0x67f8, 0x0, 0x1);
        gbc.writeMem(0x67f8, { 0xfa });
        gbc.writeMem(0xef1b, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe62e);
        EXPECT(gbc.pc(), 0xef1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef1b), 0x96);
        // 96 0268
        gbc.setState(0x8ca8, 0xc687, 0x73c0, 0x4e5b, 0x352a, 0xbaf1, 0x1, 0x1);
        gbc.writeMem(0x8ca8, { 0x96 });
        gbc.writeMem(0xbaf1, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc687);
        EXPECT(gbc.pc(), 0x8ca9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ca8), 0x96);
        EXPECT(gbc.readMem(0xbaf1), 0xed);
        // 96 0269
        gbc.setState(0x4f2b, 0xd68b, 0x320, 0xad51, 0xb7cb, 0xd924, 0x1, 0x1);
        gbc.writeMem(0x4f2b, { 0x96 });
        gbc.writeMem(0xd924, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd68b);
        EXPECT(gbc.pc(), 0x4f2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd924), 0x69);
        // 96 026A
        gbc.setState(0x7bec, 0x5396, 0xfb0, 0x7008, 0x426c, 0xe426, 0x0, 0x0);
        gbc.writeMem(0x7bec, { 0x96 });
        gbc.writeMem(0xe426, { 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5396);
        EXPECT(gbc.pc(), 0x7bed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe426), 0xb9);
        // 96 026B
        gbc.setState(0xa02c, 0xaedb, 0xfbe0, 0x83a1, 0x2c24, 0x4813, 0x0, 0x1);
        gbc.writeMem(0x4813, { 0x58 });
        gbc.writeMem(0xa02c, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xaedb);
        EXPECT(gbc.pc(), 0xa02d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa02c), 0x96);
        // 96 026C
        gbc.setState(0x5668, 0x6a8a, 0x8ac0, 0x11b1, 0xbaf1, 0xe56f, 0x0, 0x1);
        gbc.writeMem(0x5668, { 0x96 });
        gbc.writeMem(0xe56f, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6a8a);
        EXPECT(gbc.pc(), 0x5669);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe56f), 0x1f);
        // 96 026D
        gbc.setState(0x92cd, 0x6c8f, 0x5280, 0xabe4, 0xf037, 0xfd15, 0x0, 0x0);
        gbc.writeMem(0x92cd, { 0x96 });
        gbc.writeMem(0xfd15, { 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6c8f);
        EXPECT(gbc.pc(), 0x92ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92cd), 0x96);
        EXPECT(gbc.readMem(0xfd15), 0xe0);
        // 96 026E
        gbc.setState(0x4232, 0x1ade, 0x9d50, 0x698a, 0xf989, 0x3dba, 0x0, 0x1);
        gbc.writeMem(0x3dba, { 0xd2 });
        gbc.writeMem(0x4232, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x1ade);
        EXPECT(gbc.pc(), 0x4233);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0270
        gbc.setState(0x822f, 0xfd9e, 0xd970, 0xbef8, 0x9e2c, 0xedbc, 0x1, 0x1);
        gbc.writeMem(0x822f, { 0x96 });
        gbc.writeMem(0xedbc, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xfd9e);
        EXPECT(gbc.pc(), 0x8230);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x822f), 0x96);
        EXPECT(gbc.readMem(0xedbc), 0x3b);
        // 96 0271
        gbc.setState(0x46f, 0x8aca, 0xd540, 0x6327, 0xc7c5, 0xbfdc, 0x0, 0x0);
        gbc.writeMem(0x46f, { 0x96 });
        gbc.writeMem(0xbfdc, { 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x8aca);
        EXPECT(gbc.pc(), 0x470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfdc), 0xb9);
        // 96 0272
        gbc.setState(0xa6e7, 0x8cb, 0xca40, 0x6f7e, 0x67ae, 0x499f, 0x1, 0x0);
        gbc.writeMem(0x499f, { 0x2e });
        gbc.writeMem(0xa6e7, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x8cb);
        EXPECT(gbc.pc(), 0xa6e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6e7), 0x96);
        // 96 0273
        gbc.setState(0x9f39, 0xb096, 0x68e0, 0xd1ac, 0xb295, 0x9fe2, 0x1, 0x0);
        gbc.writeMem(0x9f39, { 0x96 });
        gbc.writeMem(0x9fe2, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb096);
        EXPECT(gbc.pc(), 0x9f3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f39), 0x96);
        EXPECT(gbc.readMem(0x9fe2), 0x3e);
        // 96 0274
        gbc.setState(0x9d73, 0x8f2a, 0x2f30, 0x657a, 0xe12b, 0x1d06, 0x0, 0x1);
        gbc.writeMem(0x1d06, { 0x5d });
        gbc.writeMem(0x9d73, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x8f2a);
        EXPECT(gbc.pc(), 0x9d74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d73), 0x96);
        // 96 0275
        gbc.setState(0xc751, 0x140f, 0x4f20, 0xc563, 0x4b0c, 0xe7d1, 0x0, 0x1);
        gbc.writeMem(0xc751, { 0x96 });
        gbc.writeMem(0xe7d1, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x140f);
        EXPECT(gbc.pc(), 0xc752);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc751), 0x96);
        EXPECT(gbc.readMem(0xe7d1), 0x46);
        // 96 0277
        gbc.setState(0x348e, 0xb331, 0x9b40, 0x1a3b, 0xf67c, 0x1527, 0x0, 0x1);
        gbc.writeMem(0x1527, { 0xf4 });
        gbc.writeMem(0x348e, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xb331);
        EXPECT(gbc.pc(), 0x348f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0278
        gbc.setState(0x72ad, 0x26c4, 0xae00, 0x41ba, 0xa591, 0x8b74, 0x0, 0x0);
        gbc.writeMem(0x72ad, { 0x96 });
        gbc.writeMem(0x8b74, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x26c4);
        EXPECT(gbc.pc(), 0x72ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b74), 0xbf);
        // 96 0279
        gbc.setState(0xb26a, 0x2c6c, 0x1760, 0xe22c, 0x8f82, 0x2988, 0x0, 0x0);
        gbc.writeMem(0x2988, { 0x72 });
        gbc.writeMem(0xb26a, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2c6c);
        EXPECT(gbc.pc(), 0xb26b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb26a), 0x96);
        // 96 027A
        gbc.setState(0xe755, 0x2bff, 0x6a20, 0x6e38, 0x575d, 0x60c0, 0x1, 0x0);
        gbc.writeMem(0x60c0, { 0xfd });
        gbc.writeMem(0xe755, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x2bff);
        EXPECT(gbc.pc(), 0xe756);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe755), 0x96);
        // 96 027C
        gbc.setState(0xbd34, 0xecf5, 0x5c30, 0x53b6, 0x35c3, 0x42fe, 0x1, 0x1);
        gbc.writeMem(0x42fe, { 0x5e });
        gbc.writeMem(0xbd34, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xecf5);
        EXPECT(gbc.pc(), 0xbd35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd34), 0x96);
        // 96 027E
        gbc.setState(0x5759, 0xaf01, 0xad00, 0x169, 0x227e, 0x843f, 0x0, 0x1);
        gbc.writeMem(0x5759, { 0x96 });
        gbc.writeMem(0x843f, { 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xaf01);
        EXPECT(gbc.pc(), 0x575a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x843f), 0x53);
        // 96 027F
        gbc.setState(0x82d8, 0x6d62, 0xf9f0, 0xa482, 0xfd36, 0xb64, 0x0, 0x0);
        gbc.writeMem(0xb64, { 0xe4 });
        gbc.writeMem(0x82d8, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6d62);
        EXPECT(gbc.pc(), 0x82d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82d8), 0x96);
        // 96 0280
        gbc.setState(0xb903, 0x726a, 0x8430, 0x72a8, 0xf91a, 0x7bea, 0x0, 0x1);
        gbc.writeMem(0x7bea, { 0x6d });
        gbc.writeMem(0xb903, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x726a);
        EXPECT(gbc.pc(), 0xb904);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb903), 0x96);
        // 96 0282
        gbc.setState(0xb51f, 0xc4d8, 0x49f0, 0x34d1, 0xee7f, 0xf879, 0x1, 0x1);
        gbc.writeMem(0xb51f, { 0x96 });
        gbc.writeMem(0xf879, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc4d8);
        EXPECT(gbc.pc(), 0xb520);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb51f), 0x96);
        EXPECT(gbc.readMem(0xf879), 0xe7);
        // 96 0283
        gbc.setState(0xed93, 0xfd01, 0x810, 0x1cf3, 0x505, 0x2e92, 0x1, 0x1);
        gbc.writeMem(0x2e92, { 0x32 });
        gbc.writeMem(0xed93, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xfd01);
        EXPECT(gbc.pc(), 0xed94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed93), 0x96);
        // 96 0286
        gbc.setState(0xd79a, 0x7ba8, 0x6b30, 0x3681, 0xf3dc, 0x4c4c, 0x0, 0x1);
        gbc.writeMem(0x4c4c, { 0x42 });
        gbc.writeMem(0xd79a, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7ba8);
        EXPECT(gbc.pc(), 0xd79b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd79a), 0x96);
        // 96 0287
        gbc.setState(0x5c11, 0x3f80, 0x64f0, 0x6554, 0x1d27, 0x6c65, 0x1, 0x0);
        gbc.writeMem(0x5c11, { 0x96 });
        gbc.writeMem(0x6c65, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x3f80);
        EXPECT(gbc.pc(), 0x5c12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 0288
        gbc.setState(0x76f3, 0x1fd5, 0xba50, 0x96e6, 0x5897, 0xfe26, 0x0, 0x0);
        gbc.writeMem(0x76f3, { 0x96 });
        gbc.writeMem(0xfe26, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1fd5);
        EXPECT(gbc.pc(), 0x76f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfe26), 0x69);
        // 96 0289
        gbc.setState(0x204f, 0xc050, 0x2fd0, 0x2ccb, 0x3ff3, 0x9e36, 0x1, 0x0);
        gbc.writeMem(0x204f, { 0x96 });
        gbc.writeMem(0x9e36, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xc050);
        EXPECT(gbc.pc(), 0x2050);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e36), 0x7c);
        // 96 028A
        gbc.setState(0x902d, 0xff24, 0x5810, 0x84a7, 0x57f, 0x85f3, 0x1, 0x1);
        gbc.writeMem(0x85f3, { 0x58 });
        gbc.writeMem(0x902d, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xff24);
        EXPECT(gbc.pc(), 0x902e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85f3), 0x58);
        EXPECT(gbc.readMem(0x902d), 0x96);
        // 96 028B
        gbc.setState(0x2b38, 0x11e, 0x2250, 0x15f3, 0x5632, 0xcd2d, 0x1, 0x1);
        gbc.writeMem(0x2b38, { 0x96 });
        gbc.writeMem(0xcd2d, { 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x11e);
        EXPECT(gbc.pc(), 0x2b39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd2d), 0x6c);
        // 96 028D
        gbc.setState(0x6105, 0x387e, 0x7950, 0x8782, 0x41b8, 0xa504, 0x0, 0x0);
        gbc.writeMem(0x6105, { 0x96 });
        gbc.writeMem(0xa504, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x387e);
        EXPECT(gbc.pc(), 0x6106);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa504), 0xda);
        // 96 028E
        gbc.setState(0x3561, 0x5009, 0x20a0, 0xc082, 0x4dfa, 0xb61d, 0x0, 0x1);
        gbc.writeMem(0x3561, { 0x96 });
        gbc.writeMem(0xb61d, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5009);
        EXPECT(gbc.pc(), 0x3562);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb61d), 0xbd);
        // 96 028F
        gbc.setState(0x7ff, 0xc591, 0xef50, 0x905, 0xdc65, 0x3c44, 0x0, 0x1);
        gbc.writeMem(0x7ff, { 0x96 });
        gbc.writeMem(0x3c44, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xc591);
        EXPECT(gbc.pc(), 0x800);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 0290
        gbc.setState(0xbafe, 0x8fd9, 0xb9a0, 0x8d5f, 0xe117, 0x8873, 0x1, 0x1);
        gbc.writeMem(0x8873, { 0xf9 });
        gbc.writeMem(0xbafe, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x8fd9);
        EXPECT(gbc.pc(), 0xbaff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8873), 0xf9);
        EXPECT(gbc.readMem(0xbafe), 0x96);
        // 96 0291
        gbc.setState(0x57cb, 0x3cc9, 0x78d0, 0x40af, 0xe242, 0x8884, 0x1, 0x1);
        gbc.writeMem(0x57cb, { 0x96 });
        gbc.writeMem(0x8884, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3cc9);
        EXPECT(gbc.pc(), 0x57cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8884), 0x57);
        // 96 0292
        gbc.setState(0xbd0f, 0x6bb, 0x5080, 0xe931, 0xfc2e, 0x6c9e, 0x1, 0x1);
        gbc.writeMem(0x6c9e, { 0xb0 });
        gbc.writeMem(0xbd0f, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6bb);
        EXPECT(gbc.pc(), 0xbd10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd0f), 0x96);
        // 96 0293
        gbc.setState(0xc616, 0xa613, 0xd50, 0xe425, 0xbf37, 0xfdef, 0x0, 0x0);
        gbc.writeMem(0xc616, { 0x96 });
        gbc.writeMem(0xfdef, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa613);
        EXPECT(gbc.pc(), 0xc617);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc616), 0x96);
        EXPECT(gbc.readMem(0xfdef), 0x4c);
        // 96 0294
        gbc.setState(0xbbbf, 0x608f, 0x30a0, 0xac1e, 0xf13a, 0xa3a4, 0x0, 0x1);
        gbc.writeMem(0xa3a4, { 0x55 });
        gbc.writeMem(0xbbbf, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x608f);
        EXPECT(gbc.pc(), 0xbbc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3a4), 0x55);
        EXPECT(gbc.readMem(0xbbbf), 0x96);
        // 96 0295
        gbc.setState(0x1f3c, 0x72d7, 0xc3a0, 0xf8f8, 0x736, 0xfb5b, 0x1, 0x0);
        gbc.writeMem(0x1f3c, { 0x96 });
        gbc.writeMem(0xfb5b, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x72d7);
        EXPECT(gbc.pc(), 0x1f3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfb5b), 0x79);
        // 96 0296
        gbc.setState(0xde8f, 0x924c, 0x9f70, 0x7e27, 0x42b9, 0x169c, 0x0, 0x1);
        gbc.writeMem(0x169c, { 0x8e });
        gbc.writeMem(0xde8f, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x924c);
        EXPECT(gbc.pc(), 0xde90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde8f), 0x96);
        // 96 0298
        gbc.setState(0x545, 0x892a, 0x24c0, 0x25f3, 0x891a, 0x4e08, 0x0, 0x0);
        gbc.writeMem(0x545, { 0x96 });
        gbc.writeMem(0x4e08, { 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x892a);
        EXPECT(gbc.pc(), 0x546);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 0299
        gbc.setState(0xa611, 0x353f, 0xcbf0, 0x61c1, 0x8d8b, 0x13ef, 0x1, 0x0);
        gbc.writeMem(0x13ef, { 0x39 });
        gbc.writeMem(0xa611, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x353f);
        EXPECT(gbc.pc(), 0xa612);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa611), 0x96);
        // 96 029A
        gbc.setState(0xa5be, 0xbda4, 0xf1a0, 0xfa0c, 0x85c4, 0x247b, 0x1, 0x0);
        gbc.writeMem(0x247b, { 0x25 });
        gbc.writeMem(0xa5be, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xbda4);
        EXPECT(gbc.pc(), 0xa5bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5be), 0x96);
        // 96 029B
        gbc.setState(0x6b2e, 0x76b0, 0x1ef0, 0x6b9d, 0xf5cf, 0x8712, 0x1, 0x1);
        gbc.writeMem(0x6b2e, { 0x96 });
        gbc.writeMem(0x8712, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x76b0);
        EXPECT(gbc.pc(), 0x6b2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8712), 0x72);
        // 96 029C
        gbc.setState(0xe6f8, 0x2837, 0xaed0, 0x4ae1, 0xbbaf, 0xf359, 0x1, 0x1);
        gbc.writeMem(0xe6f8, { 0x96 });
        gbc.writeMem(0xf359, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x2837);
        EXPECT(gbc.pc(), 0xe6f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6f8), 0x96);
        EXPECT(gbc.readMem(0xf359), 0x33);
        // 96 029D
        gbc.setState(0xdb57, 0xa82f, 0xb660, 0x5fab, 0x14e1, 0xb2e6, 0x0, 0x0);
        gbc.writeMem(0xb2e6, { 0x45 });
        gbc.writeMem(0xdb57, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa82f);
        EXPECT(gbc.pc(), 0xdb58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2e6), 0x45);
        EXPECT(gbc.readMem(0xdb57), 0x96);
        // 96 029E
        gbc.setState(0x90fe, 0x2c2c, 0xbb90, 0xab67, 0x6bb9, 0x5087, 0x1, 0x1);
        gbc.writeMem(0x5087, { 0x4 });
        gbc.writeMem(0x90fe, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x2c2c);
        EXPECT(gbc.pc(), 0x90ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90fe), 0x96);
        // 96 02A0
        gbc.setState(0x83cc, 0xc689, 0x5b40, 0xf23a, 0xc914, 0xf731, 0x1, 0x1);
        gbc.writeMem(0x83cc, { 0x96 });
        gbc.writeMem(0xf731, { 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xc689);
        EXPECT(gbc.pc(), 0x83cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83cc), 0x96);
        EXPECT(gbc.readMem(0xf731), 0xb3);
        // 96 02A1
        gbc.setState(0x1412, 0x4e27, 0xd120, 0xbe48, 0xb68e, 0x524a, 0x0, 0x1);
        gbc.writeMem(0x1412, { 0x96 });
        gbc.writeMem(0x524a, { 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x4e27);
        EXPECT(gbc.pc(), 0x1413);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 02A2
        gbc.setState(0xc8b, 0x29e, 0x5300, 0x924d, 0x78bd, 0x2da7, 0x0, 0x1);
        gbc.writeMem(0xc8b, { 0x96 });
        gbc.writeMem(0x2da7, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x29e);
        EXPECT(gbc.pc(), 0xc8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 02A3
        gbc.setState(0xc696, 0x7510, 0x8640, 0xc1bc, 0x4881, 0xef6d, 0x0, 0x0);
        gbc.writeMem(0xc696, { 0x96 });
        gbc.writeMem(0xef6d, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7510);
        EXPECT(gbc.pc(), 0xc697);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc696), 0x96);
        EXPECT(gbc.readMem(0xef6d), 0x71);
        // 96 02A4
        gbc.setState(0x9fe7, 0x3988, 0x3580, 0x66a2, 0xf0f8, 0xa314, 0x1, 0x0);
        gbc.writeMem(0x9fe7, { 0x96 });
        gbc.writeMem(0xa314, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x3988);
        EXPECT(gbc.pc(), 0x9fe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fe7), 0x96);
        EXPECT(gbc.readMem(0xa314), 0x3b);
        // 96 02A5
        gbc.setState(0x8fe5, 0xc6a, 0x4c90, 0x85c, 0xa35, 0x6ba7, 0x1, 0x1);
        gbc.writeMem(0x6ba7, { 0xb });
        gbc.writeMem(0x8fe5, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc6a);
        EXPECT(gbc.pc(), 0x8fe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fe5), 0x96);
        // 96 02A6
        gbc.setState(0x7996, 0xe917, 0xe210, 0x6810, 0xee0d, 0x79e0, 0x1, 0x1);
        gbc.writeMem(0x7996, { 0x96 });
        gbc.writeMem(0x79e0, { 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe917);
        EXPECT(gbc.pc(), 0x7997);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 02A7
        gbc.setState(0x5c21, 0x2d8c, 0x4ce0, 0xe7f5, 0xb302, 0xf234, 0x0, 0x1);
        gbc.writeMem(0x5c21, { 0x96 });
        gbc.writeMem(0xf234, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x2d8c);
        EXPECT(gbc.pc(), 0x5c22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf234), 0xd9);
        // 96 02A8
        gbc.setState(0x7d83, 0x1d5c, 0x5290, 0x212f, 0xc064, 0xfff1, 0x0, 0x0);
        gbc.writeMem(0x7d83, { 0x96 });
        gbc.writeMem(0xfff1, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1d5c);
        EXPECT(gbc.pc(), 0x7d84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff1), 0x77);
        // 96 02A9
        gbc.setState(0xa4fc, 0xe148, 0xe980, 0x6f66, 0x477e, 0xdbbc, 0x0, 0x0);
        gbc.writeMem(0xa4fc, { 0x96 });
        gbc.writeMem(0xdbbc, { 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe148);
        EXPECT(gbc.pc(), 0xa4fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4fc), 0x96);
        EXPECT(gbc.readMem(0xdbbc), 0x48);
        // 96 02AA
        gbc.setState(0x1d9d, 0x920b, 0x8dc0, 0x34b1, 0x5e2e, 0x5226, 0x1, 0x0);
        gbc.writeMem(0x1d9d, { 0x96 });
        gbc.writeMem(0x5226, { 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x920b);
        EXPECT(gbc.pc(), 0x1d9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 02AB
        gbc.setState(0xd4ee, 0x3019, 0x7810, 0x972f, 0x67e4, 0x7531, 0x0, 0x1);
        gbc.writeMem(0x7531, { 0x23 });
        gbc.writeMem(0xd4ee, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3019);
        EXPECT(gbc.pc(), 0xd4ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4ee), 0x96);
        // 96 02AC
        gbc.setState(0xec80, 0xa497, 0xf480, 0x2020, 0xab26, 0x4314, 0x1, 0x0);
        gbc.writeMem(0x4314, { 0x9 });
        gbc.writeMem(0xec80, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa497);
        EXPECT(gbc.pc(), 0xec81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec80), 0x96);
        // 96 02AD
        gbc.setState(0x1680, 0xbe3c, 0x91a0, 0x9753, 0xc335, 0x797d, 0x0, 0x0);
        gbc.writeMem(0x1680, { 0x96 });
        gbc.writeMem(0x797d, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xbe3c);
        EXPECT(gbc.pc(), 0x1681);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 02AE
        gbc.setState(0xa04d, 0x58ef, 0x4b00, 0x3972, 0xad23, 0x5de0, 0x1, 0x1);
        gbc.writeMem(0x5de0, { 0x18 });
        gbc.writeMem(0xa04d, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x58ef);
        EXPECT(gbc.pc(), 0xa04e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa04d), 0x96);
        // 96 02AF
        gbc.setState(0xb74d, 0xc36b, 0xa4f0, 0xe2ec, 0x3628, 0xf734, 0x0, 0x1);
        gbc.writeMem(0xb74d, { 0x96 });
        gbc.writeMem(0xf734, { 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc36b);
        EXPECT(gbc.pc(), 0xb74e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb74d), 0x96);
        EXPECT(gbc.readMem(0xf734), 0x9c);
        // 96 02B0
        gbc.setState(0x8b, 0x4b08, 0x7250, 0x20a9, 0x24f1, 0x50b8, 0x0, 0x0);
        gbc.writeMem(0x8b, { 0x96 });
        gbc.writeMem(0x50b8, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x4b08);
        EXPECT(gbc.pc(), 0x8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 02B1
        gbc.setState(0xada5, 0x3f53, 0x8b20, 0x5fd7, 0x5b51, 0xe848, 0x0, 0x0);
        gbc.writeMem(0xada5, { 0x96 });
        gbc.writeMem(0xe848, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x3f53);
        EXPECT(gbc.pc(), 0xada6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xada5), 0x96);
        EXPECT(gbc.readMem(0xe848), 0x6e);
        // 96 02B2
        gbc.setState(0xd603, 0xaf10, 0x2f80, 0xb665, 0xc3d3, 0x2385, 0x0, 0x1);
        gbc.writeMem(0x2385, { 0x6d });
        gbc.writeMem(0xd603, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xaf10);
        EXPECT(gbc.pc(), 0xd604);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd603), 0x96);
        // 96 02B3
        gbc.setState(0x3294, 0x98f, 0x8f50, 0xb06f, 0x1b3c, 0xe534, 0x1, 0x0);
        gbc.writeMem(0x3294, { 0x96 });
        gbc.writeMem(0xe534, { 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x98f);
        EXPECT(gbc.pc(), 0x3295);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe534), 0xf3);
        // 96 02B4
        gbc.setState(0x5583, 0x8843, 0x7f20, 0xa37f, 0x7aea, 0x3759, 0x0, 0x1);
        gbc.writeMem(0x3759, { 0x87 });
        gbc.writeMem(0x5583, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8843);
        EXPECT(gbc.pc(), 0x5584);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 02B5
        gbc.setState(0x790c, 0x55ed, 0x3880, 0x88ec, 0x255f, 0x813, 0x1, 0x0);
        gbc.writeMem(0x813, { 0x56 });
        gbc.writeMem(0x790c, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x55ed);
        EXPECT(gbc.pc(), 0x790d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 02B6
        gbc.setState(0x821f, 0x5c96, 0xb3f0, 0xf03a, 0x3365, 0xce53, 0x1, 0x1);
        gbc.writeMem(0x821f, { 0x96 });
        gbc.writeMem(0xce53, { 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5c96);
        EXPECT(gbc.pc(), 0x8220);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x821f), 0x96);
        EXPECT(gbc.readMem(0xce53), 0x9d);
        // 96 02B8
        gbc.setState(0xd411, 0xebd9, 0x44e0, 0x46d8, 0xcb45, 0x6741, 0x1, 0x0);
        gbc.writeMem(0x6741, { 0xff });
        gbc.writeMem(0xd411, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xebd9);
        EXPECT(gbc.pc(), 0xd412);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd411), 0x96);
        // 96 02B9
        gbc.setState(0x356, 0xa66e, 0xdfa0, 0x11b0, 0xcfc, 0x2488, 0x0, 0x1);
        gbc.writeMem(0x356, { 0x96 });
        gbc.writeMem(0x2488, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xa66e);
        EXPECT(gbc.pc(), 0x357);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 02BA
        gbc.setState(0x51dd, 0x8bb2, 0x1f0, 0xdb3e, 0x56e1, 0xa735, 0x1, 0x0);
        gbc.writeMem(0x51dd, { 0x96 });
        gbc.writeMem(0xa735, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8bb2);
        EXPECT(gbc.pc(), 0x51de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa735), 0xb6);
        // 96 02BC
        gbc.setState(0x8b8f, 0xd229, 0x40b0, 0xb8c7, 0xddec, 0x5b05, 0x1, 0x0);
        gbc.writeMem(0x5b05, { 0x5d });
        gbc.writeMem(0x8b8f, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd229);
        EXPECT(gbc.pc(), 0x8b90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b8f), 0x96);
        // 96 02BD
        gbc.setState(0x8b8f, 0x9c26, 0xd680, 0xcfc4, 0x5940, 0x7d64, 0x0, 0x1);
        gbc.writeMem(0x7d64, { 0xac });
        gbc.writeMem(0x8b8f, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9c26);
        EXPECT(gbc.pc(), 0x8b90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b8f), 0x96);
        // 96 02BE
        gbc.setState(0xe280, 0xd7eb, 0x4a20, 0xe97d, 0x13e8, 0x15a2, 0x1, 0x1);
        gbc.writeMem(0x15a2, { 0x1 });
        gbc.writeMem(0xe280, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xd7eb);
        EXPECT(gbc.pc(), 0xe281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe280), 0x96);
        // 96 02BF
        gbc.setState(0xbfb0, 0x216f, 0x8c60, 0x851c, 0x3aa1, 0x475f, 0x0, 0x0);
        gbc.writeMem(0x475f, { 0x0 });
        gbc.writeMem(0xbfb0, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x216f);
        EXPECT(gbc.pc(), 0xbfb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfb0), 0x96);
        // 96 02C0
        gbc.setState(0x608a, 0x56e7, 0x4780, 0x1cb6, 0xb3f0, 0x1bdf, 0x0, 0x1);
        gbc.writeMem(0x1bdf, { 0x88 });
        gbc.writeMem(0x608a, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x56e7);
        EXPECT(gbc.pc(), 0x608b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 02C1
        gbc.setState(0xbe6b, 0x3219, 0x4aa0, 0xb231, 0xed39, 0x56d5, 0x0, 0x0);
        gbc.writeMem(0x56d5, { 0xf2 });
        gbc.writeMem(0xbe6b, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x3219);
        EXPECT(gbc.pc(), 0xbe6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe6b), 0x96);
        // 96 02C2
        gbc.setState(0xa816, 0x2f9b, 0x5d10, 0x9255, 0xd863, 0x8d21, 0x0, 0x0);
        gbc.writeMem(0x8d21, { 0x63 });
        gbc.writeMem(0xa816, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2f9b);
        EXPECT(gbc.pc(), 0xa817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d21), 0x63);
        EXPECT(gbc.readMem(0xa816), 0x96);
        // 96 02C3
        gbc.setState(0xcf9d, 0xf003, 0x43c0, 0xbf68, 0xc0d2, 0x2635, 0x0, 0x1);
        gbc.writeMem(0x2635, { 0xa5 });
        gbc.writeMem(0xcf9d, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf003);
        EXPECT(gbc.pc(), 0xcf9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf9d), 0x96);
        // 96 02C4
        gbc.setState(0x1d13, 0xe819, 0xcff0, 0x373a, 0x86fb, 0x9fe3, 0x0, 0x0);
        gbc.writeMem(0x1d13, { 0x96 });
        gbc.writeMem(0x9fe3, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe819);
        EXPECT(gbc.pc(), 0x1d14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fe3), 0xe6);
        // 96 02C5
        gbc.setState(0x89e8, 0xd52a, 0x4f70, 0xb2d1, 0xdef2, 0xe4b6, 0x1, 0x0);
        gbc.writeMem(0x89e8, { 0x96 });
        gbc.writeMem(0xe4b6, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd52a);
        EXPECT(gbc.pc(), 0x89e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89e8), 0x96);
        EXPECT(gbc.readMem(0xe4b6), 0xf7);
        // 96 02C6
        gbc.setState(0xee04, 0xc904, 0x7f40, 0x99a4, 0xf755, 0x5acc, 0x1, 0x1);
        gbc.writeMem(0x5acc, { 0xc8 });
        gbc.writeMem(0xee04, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xc904);
        EXPECT(gbc.pc(), 0xee05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee04), 0x96);
        // 96 02C7
        gbc.setState(0x4cf0, 0x1448, 0xbf70, 0x6e7a, 0x2036, 0x4c6a, 0x1, 0x1);
        gbc.writeMem(0x4c6a, { 0x75 });
        gbc.writeMem(0x4cf0, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1448);
        EXPECT(gbc.pc(), 0x4cf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 02C8
        gbc.setState(0xd974, 0x5270, 0x3ee0, 0x2bf4, 0x102b, 0xe4a2, 0x1, 0x1);
        gbc.writeMem(0xd974, { 0x96 });
        gbc.writeMem(0xe4a2, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5270);
        EXPECT(gbc.pc(), 0xd975);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd974), 0x96);
        EXPECT(gbc.readMem(0xe4a2), 0x50);
        // 96 02C9
        gbc.setState(0xe75c, 0x53, 0xaf80, 0xf0d2, 0xe77d, 0x83d3, 0x1, 0x1);
        gbc.writeMem(0x83d3, { 0xa2 });
        gbc.writeMem(0xe75c, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x53);
        EXPECT(gbc.pc(), 0xe75d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83d3), 0xa2);
        EXPECT(gbc.readMem(0xe75c), 0x96);
        // 96 02CA
        gbc.setState(0x60d1, 0xebb, 0x2c70, 0xc467, 0xc642, 0x465a, 0x1, 0x1);
        gbc.writeMem(0x465a, { 0x1c });
        gbc.writeMem(0x60d1, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xebb);
        EXPECT(gbc.pc(), 0x60d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 02CB
        gbc.setState(0xba70, 0xee91, 0xdc40, 0xc52f, 0xa889, 0xeacb, 0x1, 0x1);
        gbc.writeMem(0xba70, { 0x96 });
        gbc.writeMem(0xeacb, { 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xee91);
        EXPECT(gbc.pc(), 0xba71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba70), 0x96);
        EXPECT(gbc.readMem(0xeacb), 0xdb);
        // 96 02CC
        gbc.setState(0x8a5a, 0xf767, 0xbe00, 0x8e07, 0x5807, 0xf24c, 0x1, 0x0);
        gbc.writeMem(0x8a5a, { 0x96 });
        gbc.writeMem(0xf24c, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xf767);
        EXPECT(gbc.pc(), 0x8a5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a5a), 0x96);
        EXPECT(gbc.readMem(0xf24c), 0x6d);
        // 96 02CD
        gbc.setState(0x78db, 0x4d3f, 0xb6f0, 0xa10c, 0x6194, 0x940c, 0x1, 0x0);
        gbc.writeMem(0x78db, { 0x96 });
        gbc.writeMem(0x940c, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4d3f);
        EXPECT(gbc.pc(), 0x78dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x940c), 0xa2);
        // 96 02D0
        gbc.setState(0x9832, 0xef63, 0x9110, 0xb10d, 0xf2a5, 0xb8b9, 0x0, 0x1);
        gbc.writeMem(0x9832, { 0x96 });
        gbc.writeMem(0xb8b9, { 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xef63);
        EXPECT(gbc.pc(), 0x9833);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9832), 0x96);
        EXPECT(gbc.readMem(0xb8b9), 0xdb);
        // 96 02D1
        gbc.setState(0xc96, 0x6bac, 0x1540, 0x611, 0xaad3, 0x6103, 0x1, 0x0);
        gbc.writeMem(0xc96, { 0x96 });
        gbc.writeMem(0x6103, { 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6bac);
        EXPECT(gbc.pc(), 0xc97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 02D2
        gbc.setState(0x657, 0xf401, 0xf890, 0x17f6, 0xd5eb, 0xd35, 0x1, 0x1);
        gbc.writeMem(0x657, { 0x96 });
        gbc.writeMem(0xd35, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf401);
        EXPECT(gbc.pc(), 0x658);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 02D3
        gbc.setState(0x9360, 0x2bbd, 0xfd30, 0x680a, 0x3e9b, 0xbcd, 0x0, 0x0);
        gbc.writeMem(0xbcd, { 0xc1 });
        gbc.writeMem(0x9360, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x2bbd);
        EXPECT(gbc.pc(), 0x9361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9360), 0x96);
        // 96 02D4
        gbc.setState(0xe5f8, 0xb0e4, 0x4d70, 0xa8eb, 0x5d68, 0x68ad, 0x1, 0x1);
        gbc.writeMem(0x68ad, { 0x5c });
        gbc.writeMem(0xe5f8, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xb0e4);
        EXPECT(gbc.pc(), 0xe5f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5f8), 0x96);
        // 96 02D5
        gbc.setState(0x8913, 0x75fe, 0xd8e0, 0x7705, 0xa3cc, 0xdbbd, 0x0, 0x1);
        gbc.writeMem(0x8913, { 0x96 });
        gbc.writeMem(0xdbbd, { 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x75fe);
        EXPECT(gbc.pc(), 0x8914);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8913), 0x96);
        EXPECT(gbc.readMem(0xdbbd), 0xfb);
        // 96 02D6
        gbc.setState(0xc41b, 0x1fd9, 0x7a80, 0xca3c, 0xdfe, 0x1547, 0x0, 0x1);
        gbc.writeMem(0x1547, { 0xa1 });
        gbc.writeMem(0xc41b, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x1fd9);
        EXPECT(gbc.pc(), 0xc41c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc41b), 0x96);
        // 96 02D7
        gbc.setState(0xb638, 0x830f, 0x78a0, 0xba0b, 0x76ee, 0xfd02, 0x1, 0x1);
        gbc.writeMem(0xb638, { 0x96 });
        gbc.writeMem(0xfd02, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x830f);
        EXPECT(gbc.pc(), 0xb639);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb638), 0x96);
        EXPECT(gbc.readMem(0xfd02), 0xfe);
        // 96 02D8
        gbc.setState(0xef73, 0x8ff4, 0xcb80, 0x61a, 0x39d5, 0xb67c, 0x1, 0x1);
        gbc.writeMem(0xb67c, { 0xa7 });
        gbc.writeMem(0xef73, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8ff4);
        EXPECT(gbc.pc(), 0xef74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb67c), 0xa7);
        EXPECT(gbc.readMem(0xef73), 0x96);
        // 96 02D9
        gbc.setState(0x3d68, 0xeab3, 0xb200, 0x63ba, 0x464a, 0x51bd, 0x0, 0x1);
        gbc.writeMem(0x3d68, { 0x96 });
        gbc.writeMem(0x51bd, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xeab3);
        EXPECT(gbc.pc(), 0x3d69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 02DA
        gbc.setState(0xa94, 0x714d, 0xb600, 0x6d9b, 0x7926, 0xd915, 0x1, 0x1);
        gbc.writeMem(0xa94, { 0x96 });
        gbc.writeMem(0xd915, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x714d);
        EXPECT(gbc.pc(), 0xa95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd915), 0xc5);
        // 96 02DB
        gbc.setState(0x3286, 0x8fd8, 0x2740, 0x36bc, 0x55e3, 0x55df, 0x0, 0x1);
        gbc.writeMem(0x3286, { 0x96 });
        gbc.writeMem(0x55df, { 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x8fd8);
        EXPECT(gbc.pc(), 0x3287);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 02DC
        gbc.setState(0x9eff, 0x4dfc, 0x4580, 0x51f9, 0x2b38, 0x62a, 0x0, 0x0);
        gbc.writeMem(0x62a, { 0xc6 });
        gbc.writeMem(0x9eff, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x4dfc);
        EXPECT(gbc.pc(), 0x9f00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eff), 0x96);
        // 96 02DD
        gbc.setState(0x3ebd, 0x7f4d, 0xd80, 0x5bc4, 0x874a, 0x2f3b, 0x0, 0x1);
        gbc.writeMem(0x2f3b, { 0x5c });
        gbc.writeMem(0x3ebd, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7f4d);
        EXPECT(gbc.pc(), 0x3ebe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 02DE
        gbc.setState(0x4c8, 0x32ed, 0x8630, 0x3a49, 0x46f6, 0x9cfb, 0x0, 0x0);
        gbc.writeMem(0x4c8, { 0x96 });
        gbc.writeMem(0x9cfb, { 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x32ed);
        EXPECT(gbc.pc(), 0x4c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cfb), 0x22);
        // 96 02DF
        gbc.setState(0x71f5, 0x6ce0, 0x14e0, 0xd658, 0x2be3, 0xba42, 0x0, 0x1);
        gbc.writeMem(0x71f5, { 0x96 });
        gbc.writeMem(0xba42, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x6ce0);
        EXPECT(gbc.pc(), 0x71f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba42), 0x28);
        // 96 02E0
        gbc.setState(0xa459, 0x723c, 0xb4e0, 0xb762, 0x70d0, 0x1e1f, 0x1, 0x0);
        gbc.writeMem(0x1e1f, { 0x3f });
        gbc.writeMem(0xa459, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x723c);
        EXPECT(gbc.pc(), 0xa45a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa459), 0x96);
        // 96 02E1
        gbc.setState(0xc41a, 0x3b7e, 0xc600, 0xb889, 0xb01, 0x7484, 0x0, 0x1);
        gbc.writeMem(0x7484, { 0x5e });
        gbc.writeMem(0xc41a, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3b7e);
        EXPECT(gbc.pc(), 0xc41b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc41a), 0x96);
        // 96 02E2
        gbc.setState(0xd6e1, 0xf93d, 0x400, 0x8799, 0x7214, 0x7885, 0x1, 0x1);
        gbc.writeMem(0x7885, { 0x4a });
        gbc.writeMem(0xd6e1, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xf93d);
        EXPECT(gbc.pc(), 0xd6e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6e1), 0x96);
        // 96 02E3
        gbc.setState(0x147f, 0x60a, 0x7250, 0x7bfc, 0x8615, 0xfd5d, 0x1, 0x0);
        gbc.writeMem(0x147f, { 0x96 });
        gbc.writeMem(0xfd5d, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x60a);
        EXPECT(gbc.pc(), 0x1480);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfd5d), 0xaa);
        // 96 02E6
        gbc.setState(0x5c8c, 0x1d2d, 0x64e0, 0xd61e, 0xadb4, 0x985a, 0x1, 0x1);
        gbc.writeMem(0x5c8c, { 0x96 });
        gbc.writeMem(0x985a, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1d2d);
        EXPECT(gbc.pc(), 0x5c8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x985a), 0x3f);
        // 96 02E7
        gbc.setState(0x611a, 0xdf1e, 0x9fe0, 0x60ef, 0xa629, 0x9901, 0x1, 0x1);
        gbc.writeMem(0x611a, { 0x96 });
        gbc.writeMem(0x9901, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xdf1e);
        EXPECT(gbc.pc(), 0x611b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9901), 0x2b);
        // 96 02E8
        gbc.setState(0x8240, 0xfeb6, 0x88f0, 0x8232, 0x533b, 0x19be, 0x0, 0x0);
        gbc.writeMem(0x19be, { 0x5d });
        gbc.writeMem(0x8240, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xfeb6);
        EXPECT(gbc.pc(), 0x8241);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8240), 0x96);
        // 96 02E9
        gbc.setState(0x124f, 0x6b7a, 0x5850, 0x337b, 0x5a20, 0xc8ec, 0x0, 0x0);
        gbc.writeMem(0x124f, { 0x96 });
        gbc.writeMem(0xc8ec, { 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x6b7a);
        EXPECT(gbc.pc(), 0x1250);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8ec), 0xc7);
        // 96 02EA
        gbc.setState(0x3a, 0xe681, 0xfc70, 0xf77e, 0x1d8b, 0x71bd, 0x0, 0x1);
        gbc.writeMem(0x3a, { 0x96 });
        gbc.writeMem(0x71bd, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xe681);
        EXPECT(gbc.pc(), 0x3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 02EB
        gbc.setState(0xa77b, 0x64be, 0xc620, 0xa7b5, 0x5097, 0x44a0, 0x1, 0x1);
        gbc.writeMem(0x44a0, { 0x95 });
        gbc.writeMem(0xa77b, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x64be);
        EXPECT(gbc.pc(), 0xa77c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa77b), 0x96);
        // 96 02EC
        gbc.setState(0x6adf, 0xc4c8, 0x19d0, 0x4baa, 0x775d, 0xc968, 0x1, 0x0);
        gbc.writeMem(0x6adf, { 0x96 });
        gbc.writeMem(0xc968, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc4c8);
        EXPECT(gbc.pc(), 0x6ae0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc968), 0xd6);
        // 96 02EE
        gbc.setState(0x3303, 0xcfe, 0x7e00, 0x3457, 0x75c7, 0x7d4b, 0x1, 0x1);
        gbc.writeMem(0x3303, { 0x96 });
        gbc.writeMem(0x7d4b, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xcfe);
        EXPECT(gbc.pc(), 0x3304);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 02EF
        gbc.setState(0x3d7a, 0xbf75, 0x7a80, 0x990c, 0xaba4, 0x71ea, 0x1, 0x0);
        gbc.writeMem(0x3d7a, { 0x96 });
        gbc.writeMem(0x71ea, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xbf75);
        EXPECT(gbc.pc(), 0x3d7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 02F0
        gbc.setState(0xe49a, 0xffa8, 0xf320, 0x2c8b, 0x24e5, 0xe344, 0x1, 0x0);
        gbc.writeMem(0xe344, { 0xc3 });
        gbc.writeMem(0xe49a, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xffa8);
        EXPECT(gbc.pc(), 0xe49b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe344), 0xc3);
        EXPECT(gbc.readMem(0xe49a), 0x96);
        // 96 02F3
        gbc.setState(0xce93, 0x16c0, 0xc360, 0xf1ed, 0x18aa, 0xd207, 0x1, 0x0);
        gbc.writeMem(0xce93, { 0x96 });
        gbc.writeMem(0xd207, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x16c0);
        EXPECT(gbc.pc(), 0xce94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce93), 0x96);
        EXPECT(gbc.readMem(0xd207), 0x16);
        // 96 02F4
        gbc.setState(0x24, 0x2ddb, 0x8720, 0x34ef, 0x60bf, 0x770d, 0x0, 0x1);
        gbc.writeMem(0x24, { 0x96 });
        gbc.writeMem(0x770d, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2ddb);
        EXPECT(gbc.pc(), 0x25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 02F5
        gbc.setState(0x6f46, 0x5d64, 0xcee0, 0xcbf5, 0xf135, 0x768a, 0x1, 0x0);
        gbc.writeMem(0x6f46, { 0x96 });
        gbc.writeMem(0x768a, { 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5d64);
        EXPECT(gbc.pc(), 0x6f47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 02F6
        gbc.setState(0x3c98, 0xd3bc, 0x4600, 0xe9f7, 0x8fe4, 0x80f3, 0x1, 0x1);
        gbc.writeMem(0x3c98, { 0x96 });
        gbc.writeMem(0x80f3, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd3bc);
        EXPECT(gbc.pc(), 0x3c99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80f3), 0x88);
        // 96 02F7
        gbc.setState(0x6306, 0xfa69, 0x9160, 0xdfef, 0x813c, 0x46df, 0x0, 0x1);
        gbc.writeMem(0x46df, { 0x39 });
        gbc.writeMem(0x6306, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xfa69);
        EXPECT(gbc.pc(), 0x6307);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 02F8
        gbc.setState(0x99d5, 0x35e7, 0x14e0, 0xb639, 0x302, 0x7d6c, 0x1, 0x0);
        gbc.writeMem(0x7d6c, { 0x68 });
        gbc.writeMem(0x99d5, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x35e7);
        EXPECT(gbc.pc(), 0x99d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99d5), 0x96);
        // 96 02F9
        gbc.setState(0x3f51, 0xf39f, 0x8800, 0xda3d, 0xd185, 0x22b2, 0x0, 0x1);
        gbc.writeMem(0x22b2, { 0x8 });
        gbc.writeMem(0x3f51, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf39f);
        EXPECT(gbc.pc(), 0x3f52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 02FA
        gbc.setState(0xb1f, 0xd06c, 0xedd0, 0xef36, 0x49b8, 0xedca, 0x1, 0x1);
        gbc.writeMem(0xb1f, { 0x96 });
        gbc.writeMem(0xedca, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xd06c);
        EXPECT(gbc.pc(), 0xb20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedca), 0x58);
        // 96 02FB
        gbc.setState(0x86fb, 0x8a0, 0xea60, 0xbe67, 0x4d95, 0xbdfe, 0x0, 0x0);
        gbc.writeMem(0x86fb, { 0x96 });
        gbc.writeMem(0xbdfe, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x8a0);
        EXPECT(gbc.pc(), 0x86fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86fb), 0x96);
        EXPECT(gbc.readMem(0xbdfe), 0xa2);
        // 96 02FD
        gbc.setState(0x7ad5, 0x5688, 0xa90, 0x4ad7, 0xe53a, 0xc83b, 0x1, 0x0);
        gbc.writeMem(0x7ad5, { 0x96 });
        gbc.writeMem(0xc83b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x5688);
        EXPECT(gbc.pc(), 0x7ad6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc83b), 0x8c);
        // 96 02FE
        gbc.setState(0x8eab, 0x6188, 0x3380, 0x96aa, 0xbb4b, 0xd277, 0x0, 0x0);
        gbc.writeMem(0x8eab, { 0x96 });
        gbc.writeMem(0xd277, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x6188);
        EXPECT(gbc.pc(), 0x8eac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eab), 0x96);
        EXPECT(gbc.readMem(0xd277), 0x96);
        // 96 02FF
        gbc.setState(0xdd87, 0x795f, 0xa7d0, 0x28bd, 0x733a, 0x8f73, 0x0, 0x1);
        gbc.writeMem(0x8f73, { 0xdd });
        gbc.writeMem(0xdd87, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x795f);
        EXPECT(gbc.pc(), 0xdd88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f73), 0xdd);
        EXPECT(gbc.readMem(0xdd87), 0x96);
        // 96 0300
        gbc.setState(0x9ac9, 0x3c57, 0xe850, 0xe7d3, 0xb337, 0x31a3, 0x0, 0x1);
        gbc.writeMem(0x31a3, { 0x8a });
        gbc.writeMem(0x9ac9, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3c57);
        EXPECT(gbc.pc(), 0x9aca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ac9), 0x96);
        // 96 0301
        gbc.setState(0xe7d8, 0xd919, 0xf00, 0x2109, 0x27a3, 0xee66, 0x0, 0x1);
        gbc.writeMem(0xe7d8, { 0x96 });
        gbc.writeMem(0xee66, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xd919);
        EXPECT(gbc.pc(), 0xe7d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7d8), 0x96);
        EXPECT(gbc.readMem(0xee66), 0x57);
        // 96 0302
        gbc.setState(0xb5a8, 0xf152, 0xf160, 0x26e3, 0x2a2, 0x1c07, 0x1, 0x0);
        gbc.writeMem(0x1c07, { 0x65 });
        gbc.writeMem(0xb5a8, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf152);
        EXPECT(gbc.pc(), 0xb5a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5a8), 0x96);
        // 96 0303
        gbc.setState(0x4e84, 0x3757, 0xf140, 0xb199, 0xa45e, 0x754f, 0x0, 0x0);
        gbc.writeMem(0x4e84, { 0x96 });
        gbc.writeMem(0x754f, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x3757);
        EXPECT(gbc.pc(), 0x4e85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 0304
        gbc.setState(0x58ab, 0xb010, 0x6a0, 0xa75a, 0x829b, 0x22f7, 0x1, 0x0);
        gbc.writeMem(0x22f7, { 0xad });
        gbc.writeMem(0x58ab, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb010);
        EXPECT(gbc.pc(), 0x58ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 0305
        gbc.setState(0xb475, 0x3f25, 0xd320, 0x502b, 0x716b, 0xa9ee, 0x1, 0x1);
        gbc.writeMem(0xa9ee, { 0x8e });
        gbc.writeMem(0xb475, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3f25);
        EXPECT(gbc.pc(), 0xb476);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9ee), 0x8e);
        EXPECT(gbc.readMem(0xb475), 0x96);
        // 96 0306
        gbc.setState(0xd00f, 0x9561, 0x4450, 0x1959, 0x8f2e, 0x6eea, 0x0, 0x0);
        gbc.writeMem(0x6eea, { 0x23 });
        gbc.writeMem(0xd00f, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9561);
        EXPECT(gbc.pc(), 0xd010);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd00f), 0x96);
        // 96 0307
        gbc.setState(0xb0, 0xf2e8, 0x6580, 0x8d3e, 0x3b53, 0xa40b, 0x0, 0x0);
        gbc.writeMem(0xb0, { 0x96 });
        gbc.writeMem(0xa40b, { 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf2e8);
        EXPECT(gbc.pc(), 0xb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa40b), 0x9f);
        // 96 0308
        gbc.setState(0xe3a2, 0x25d1, 0x2de0, 0x8c96, 0x3135, 0x264c, 0x1, 0x0);
        gbc.writeMem(0x264c, { 0x7d });
        gbc.writeMem(0xe3a2, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x25d1);
        EXPECT(gbc.pc(), 0xe3a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3a2), 0x96);
        // 96 0309
        gbc.setState(0x7621, 0xeb11, 0x3330, 0x62d7, 0x9bff, 0xf90d, 0x0, 0x0);
        gbc.writeMem(0x7621, { 0x96 });
        gbc.writeMem(0xf90d, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xeb11);
        EXPECT(gbc.pc(), 0x7622);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf90d), 0x7a);
        // 96 030A
        gbc.setState(0x8128, 0x651c, 0xae00, 0xea7f, 0x6cbc, 0x2377, 0x0, 0x0);
        gbc.writeMem(0x2377, { 0xf8 });
        gbc.writeMem(0x8128, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x651c);
        EXPECT(gbc.pc(), 0x8129);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8128), 0x96);
        // 96 030B
        gbc.setState(0x8fc9, 0xb02, 0xa140, 0xcc5, 0xd53f, 0x78dd, 0x0, 0x1);
        gbc.writeMem(0x78dd, { 0x35 });
        gbc.writeMem(0x8fc9, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb02);
        EXPECT(gbc.pc(), 0x8fca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fc9), 0x96);
        // 96 030C
        gbc.setState(0x38eb, 0xdde1, 0xd8b0, 0xe499, 0xc428, 0x41cd, 0x1, 0x1);
        gbc.writeMem(0x38eb, { 0x96 });
        gbc.writeMem(0x41cd, { 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xdde1);
        EXPECT(gbc.pc(), 0x38ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 030D
        gbc.setState(0x1ddc, 0xd84b, 0x6f10, 0x87f4, 0xaca2, 0x8f83, 0x1, 0x0);
        gbc.writeMem(0x1ddc, { 0x96 });
        gbc.writeMem(0x8f83, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd84b);
        EXPECT(gbc.pc(), 0x1ddd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f83), 0xaf);
        // 96 030E
        gbc.setState(0xbf1e, 0xaffc, 0xf80, 0xda9f, 0xdafb, 0x1f8, 0x0, 0x1);
        gbc.writeMem(0x1f8, { 0x4c });
        gbc.writeMem(0xbf1e, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xaffc);
        EXPECT(gbc.pc(), 0xbf1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf1e), 0x96);
        // 96 030F
        gbc.setState(0xdce5, 0x7b14, 0xf800, 0xd93e, 0xfe72, 0x594d, 0x0, 0x1);
        gbc.writeMem(0x594d, { 0x93 });
        gbc.writeMem(0xdce5, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x7b14);
        EXPECT(gbc.pc(), 0xdce6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdce5), 0x96);
        // 96 0310
        gbc.setState(0xd737, 0xf47a, 0x7bf0, 0x905a, 0x6fb1, 0x5526, 0x1, 0x1);
        gbc.writeMem(0x5526, { 0xaa });
        gbc.writeMem(0xd737, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf47a);
        EXPECT(gbc.pc(), 0xd738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd737), 0x96);
        // 96 0311
        gbc.setState(0x3740, 0x9431, 0x4e80, 0x93ae, 0x775f, 0xbc5b, 0x0, 0x0);
        gbc.writeMem(0x3740, { 0x96 });
        gbc.writeMem(0xbc5b, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x9431);
        EXPECT(gbc.pc(), 0x3741);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc5b), 0x35);
        // 96 0312
        gbc.setState(0x3b1c, 0xb2a9, 0x7130, 0x2e2a, 0xdc53, 0x231e, 0x0, 0x1);
        gbc.writeMem(0x231e, { 0x95 });
        gbc.writeMem(0x3b1c, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb2a9);
        EXPECT(gbc.pc(), 0x3b1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 0313
        gbc.setState(0x1a03, 0xce13, 0x8860, 0xa8e8, 0x53e6, 0x4755, 0x0, 0x0);
        gbc.writeMem(0x1a03, { 0x96 });
        gbc.writeMem(0x4755, { 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xce13);
        EXPECT(gbc.pc(), 0x1a04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 0314
        gbc.setState(0x61b5, 0xf30, 0x6f40, 0x5fe1, 0x4b0, 0xa8e5, 0x0, 0x0);
        gbc.writeMem(0x61b5, { 0x96 });
        gbc.writeMem(0xa8e5, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf30);
        EXPECT(gbc.pc(), 0x61b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8e5), 0x80);
        // 96 0315
        gbc.setState(0x7ac9, 0xd4df, 0x1400, 0x8412, 0xd16a, 0xc7c6, 0x0, 0x1);
        gbc.writeMem(0x7ac9, { 0x96 });
        gbc.writeMem(0xc7c6, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd4df);
        EXPECT(gbc.pc(), 0x7aca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7c6), 0x77);
        // 96 0316
        gbc.setState(0xd8cc, 0xe9c6, 0x3f00, 0xcac1, 0x70fe, 0xd31f, 0x0, 0x1);
        gbc.writeMem(0xd31f, { 0x21 });
        gbc.writeMem(0xd8cc, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe9c6);
        EXPECT(gbc.pc(), 0xd8cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd31f), 0x21);
        EXPECT(gbc.readMem(0xd8cc), 0x96);
        // 96 0317
        gbc.setState(0x4410, 0xa6cb, 0x1c20, 0xe1ec, 0x7e31, 0xbbc4, 0x0, 0x0);
        gbc.writeMem(0x4410, { 0x96 });
        gbc.writeMem(0xbbc4, { 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xa6cb);
        EXPECT(gbc.pc(), 0x4411);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbc4), 0xde);
        // 96 0318
        gbc.setState(0xbb58, 0xb499, 0x7680, 0xa947, 0x74a1, 0xb2b9, 0x0, 0x0);
        gbc.writeMem(0xb2b9, { 0x3f });
        gbc.writeMem(0xbb58, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb499);
        EXPECT(gbc.pc(), 0xbb59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2b9), 0x3f);
        EXPECT(gbc.readMem(0xbb58), 0x96);
        // 96 0319
        gbc.setState(0x72de, 0x8822, 0x3c70, 0x73ef, 0x1f12, 0x5f9e, 0x1, 0x0);
        gbc.writeMem(0x5f9e, { 0x4e });
        gbc.writeMem(0x72de, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x8822);
        EXPECT(gbc.pc(), 0x72df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 031A
        gbc.setState(0x3077, 0x775a, 0x23f0, 0xfce1, 0x3507, 0x935f, 0x0, 0x1);
        gbc.writeMem(0x3077, { 0x96 });
        gbc.writeMem(0x935f, { 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x775a);
        EXPECT(gbc.pc(), 0x3078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x935f), 0x31);
        // 96 031B
        gbc.setState(0xec78, 0x1ee7, 0x9070, 0xc9e9, 0xca57, 0x976a, 0x0, 0x1);
        gbc.writeMem(0x976a, { 0xc1 });
        gbc.writeMem(0xec78, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1ee7);
        EXPECT(gbc.pc(), 0xec79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x976a), 0xc1);
        EXPECT(gbc.readMem(0xec78), 0x96);
        // 96 031C
        gbc.setState(0x65a0, 0xde2d, 0xa770, 0x25f, 0x7eef, 0x33f0, 0x0, 0x0);
        gbc.writeMem(0x33f0, { 0x92 });
        gbc.writeMem(0x65a0, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xde2d);
        EXPECT(gbc.pc(), 0x65a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 031D
        gbc.setState(0xc627, 0xb31, 0xbaa0, 0x8c5, 0x4ecf, 0xcac0, 0x1, 0x1);
        gbc.writeMem(0xc627, { 0x96 });
        gbc.writeMem(0xcac0, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb31);
        EXPECT(gbc.pc(), 0xc628);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc627), 0x96);
        EXPECT(gbc.readMem(0xcac0), 0xac);
        // 96 031E
        gbc.setState(0xcf80, 0x4c09, 0xd610, 0xafab, 0xd339, 0x9417, 0x1, 0x1);
        gbc.writeMem(0x9417, { 0xe });
        gbc.writeMem(0xcf80, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x4c09);
        EXPECT(gbc.pc(), 0xcf81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9417), 0xe);
        EXPECT(gbc.readMem(0xcf80), 0x96);
        // 96 031F
        gbc.setState(0x7ba7, 0x699c, 0x33f0, 0x54e5, 0x725e, 0x7c6d, 0x1, 0x0);
        gbc.writeMem(0x7ba7, { 0x96 });
        gbc.writeMem(0x7c6d, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x699c);
        EXPECT(gbc.pc(), 0x7ba8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 0320
        gbc.setState(0x5485, 0x32bc, 0x1c30, 0x1aba, 0x76c9, 0xc898, 0x0, 0x0);
        gbc.writeMem(0x5485, { 0x96 });
        gbc.writeMem(0xc898, { 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x32bc);
        EXPECT(gbc.pc(), 0x5486);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc898), 0x43);
        // 96 0321
        gbc.setState(0xcb19, 0xb125, 0x68c0, 0x989a, 0x933d, 0xb239, 0x0, 0x0);
        gbc.writeMem(0xb239, { 0x2 });
        gbc.writeMem(0xcb19, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xb125);
        EXPECT(gbc.pc(), 0xcb1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb239), 0x2);
        EXPECT(gbc.readMem(0xcb19), 0x96);
        // 96 0322
        gbc.setState(0x8692, 0x3bad, 0x9380, 0xcbc6, 0x7e6a, 0xcc38, 0x1, 0x0);
        gbc.writeMem(0x8692, { 0x96 });
        gbc.writeMem(0xcc38, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3bad);
        EXPECT(gbc.pc(), 0x8693);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8692), 0x96);
        EXPECT(gbc.readMem(0xcc38), 0x55);
        // 96 0323
        gbc.setState(0x8f0d, 0xeae8, 0x23e0, 0xf900, 0xd458, 0xae5e, 0x0, 0x1);
        gbc.writeMem(0x8f0d, { 0x96 });
        gbc.writeMem(0xae5e, { 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xeae8);
        EXPECT(gbc.pc(), 0x8f0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f0d), 0x96);
        EXPECT(gbc.readMem(0xae5e), 0xb4);
        // 96 0324
        gbc.setState(0x11e2, 0x162, 0x76f0, 0x8dc7, 0x92cf, 0x1976, 0x1, 0x1);
        gbc.writeMem(0x11e2, { 0x96 });
        gbc.writeMem(0x1976, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x162);
        EXPECT(gbc.pc(), 0x11e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 0325
        gbc.setState(0xfdc, 0xcc88, 0x58d0, 0x38fb, 0xaeb0, 0x652a, 0x0, 0x0);
        gbc.writeMem(0xfdc, { 0x96 });
        gbc.writeMem(0x652a, { 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xcc88);
        EXPECT(gbc.pc(), 0xfdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 0326
        gbc.setState(0x68fa, 0x66d4, 0xbf90, 0x1766, 0xb0fc, 0x59d0, 0x1, 0x1);
        gbc.writeMem(0x59d0, { 0xad });
        gbc.writeMem(0x68fa, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x66d4);
        EXPECT(gbc.pc(), 0x68fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 0327
        gbc.setState(0xbab1, 0x3bba, 0x2770, 0x2b22, 0x5e9, 0xca01, 0x1, 0x1);
        gbc.writeMem(0xbab1, { 0x96 });
        gbc.writeMem(0xca01, { 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x3bba);
        EXPECT(gbc.pc(), 0xbab2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbab1), 0x96);
        EXPECT(gbc.readMem(0xca01), 0x4);
        // 96 0328
        gbc.setState(0x6f22, 0xee01, 0x23f0, 0x1869, 0xb50e, 0xc470, 0x0, 0x0);
        gbc.writeMem(0x6f22, { 0x96 });
        gbc.writeMem(0xc470, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xee01);
        EXPECT(gbc.pc(), 0x6f23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc470), 0x5b);
        // 96 0329
        gbc.setState(0x7b02, 0xd42b, 0x8d30, 0x1c73, 0x4831, 0x9c6, 0x0, 0x1);
        gbc.writeMem(0x9c6, { 0x68 });
        gbc.writeMem(0x7b02, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd42b);
        EXPECT(gbc.pc(), 0x7b03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 032A
        gbc.setState(0xa9a6, 0x295, 0xc560, 0xc139, 0xff1, 0xfe14, 0x1, 0x1);
        gbc.writeMem(0xa9a6, { 0x96 });
        gbc.writeMem(0xfe14, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x295);
        EXPECT(gbc.pc(), 0xa9a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9a6), 0x96);
        EXPECT(gbc.readMem(0xfe14), 0xd7);
        // 96 032C
        gbc.setState(0xbc82, 0xb1ed, 0xcd60, 0xe80e, 0xab50, 0x7892, 0x0, 0x0);
        gbc.writeMem(0x7892, { 0x93 });
        gbc.writeMem(0xbc82, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xb1ed);
        EXPECT(gbc.pc(), 0xbc83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc82), 0x96);
        // 96 032D
        gbc.setState(0xd0d, 0xda96, 0x35b0, 0x7dca, 0x408e, 0x93be, 0x1, 0x1);
        gbc.writeMem(0xd0d, { 0x96 });
        gbc.writeMem(0x93be, { 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xda96);
        EXPECT(gbc.pc(), 0xd0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93be), 0xc4);
        // 96 032E
        gbc.setState(0xe43c, 0xed3c, 0x4700, 0x7a9c, 0xaa6c, 0x4ae6, 0x0, 0x0);
        gbc.writeMem(0x4ae6, { 0x9b });
        gbc.writeMem(0xe43c, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xed3c);
        EXPECT(gbc.pc(), 0xe43d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe43c), 0x96);
        // 96 032F
        gbc.setState(0xac8e, 0x187f, 0x6cf0, 0xeaa6, 0x5428, 0x582, 0x1, 0x0);
        gbc.writeMem(0x582, { 0x28 });
        gbc.writeMem(0xac8e, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x187f);
        EXPECT(gbc.pc(), 0xac8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac8e), 0x96);
        // 96 0331
        gbc.setState(0xceb2, 0x90a0, 0x4b90, 0xcbfa, 0x50a4, 0xded3, 0x0, 0x0);
        gbc.writeMem(0xceb2, { 0x96 });
        gbc.writeMem(0xded3, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x90a0);
        EXPECT(gbc.pc(), 0xceb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceb2), 0x96);
        EXPECT(gbc.readMem(0xded3), 0x69);
        // 96 0332
        gbc.setState(0x938f, 0x1a17, 0xdd10, 0xf279, 0x8b07, 0x4138, 0x0, 0x0);
        gbc.writeMem(0x4138, { 0x8 });
        gbc.writeMem(0x938f, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x1a17);
        EXPECT(gbc.pc(), 0x9390);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x938f), 0x96);
        // 96 0334
        gbc.setState(0x921f, 0x3551, 0x6610, 0x93c5, 0xdaed, 0xe4d2, 0x0, 0x1);
        gbc.writeMem(0x921f, { 0x96 });
        gbc.writeMem(0xe4d2, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x3551);
        EXPECT(gbc.pc(), 0x9220);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x921f), 0x96);
        EXPECT(gbc.readMem(0xe4d2), 0xd);
        // 96 0335
        gbc.setState(0xd093, 0x2714, 0x88e0, 0x887b, 0x42d7, 0x53d, 0x1, 0x0);
        gbc.writeMem(0x53d, { 0x7e });
        gbc.writeMem(0xd093, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x2714);
        EXPECT(gbc.pc(), 0xd094);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd093), 0x96);
        // 96 0336
        gbc.setState(0xb4ee, 0x3ceb, 0x1540, 0x4ea8, 0xcc4a, 0x6a68, 0x0, 0x1);
        gbc.writeMem(0x6a68, { 0x16 });
        gbc.writeMem(0xb4ee, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3ceb);
        EXPECT(gbc.pc(), 0xb4ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4ee), 0x96);
        // 96 0337
        gbc.setState(0x7446, 0x7395, 0xc2d0, 0xfc02, 0x99e, 0xa56d, 0x0, 0x1);
        gbc.writeMem(0x7446, { 0x96 });
        gbc.writeMem(0xa56d, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7395);
        EXPECT(gbc.pc(), 0x7447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa56d), 0x8f);
        // 96 0338
        gbc.setState(0x60f2, 0x3e62, 0x4ee0, 0xcb09, 0x6f4c, 0x7098, 0x1, 0x1);
        gbc.writeMem(0x60f2, { 0x96 });
        gbc.writeMem(0x7098, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3e62);
        EXPECT(gbc.pc(), 0x60f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0339
        gbc.setState(0xe4cd, 0xb39d, 0x2970, 0x722d, 0x7352, 0xe762, 0x1, 0x1);
        gbc.writeMem(0xe4cd, { 0x96 });
        gbc.writeMem(0xe762, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb39d);
        EXPECT(gbc.pc(), 0xe4ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4cd), 0x96);
        EXPECT(gbc.readMem(0xe762), 0x89);
        // 96 033A
        gbc.setState(0x9e07, 0x2c37, 0xcdb0, 0xca7c, 0xde77, 0x86f3, 0x1, 0x1);
        gbc.writeMem(0x86f3, { 0x95 });
        gbc.writeMem(0x9e07, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x2c37);
        EXPECT(gbc.pc(), 0x9e08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86f3), 0x95);
        EXPECT(gbc.readMem(0x9e07), 0x96);
        // 96 033B
        gbc.setState(0xc594, 0x89b8, 0xb170, 0x4e42, 0xb958, 0x8bb4, 0x0, 0x0);
        gbc.writeMem(0x8bb4, { 0x81 });
        gbc.writeMem(0xc594, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x89b8);
        EXPECT(gbc.pc(), 0xc595);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bb4), 0x81);
        EXPECT(gbc.readMem(0xc594), 0x96);
        // 96 033C
        gbc.setState(0xc815, 0x3547, 0x9240, 0xbb3b, 0x1bf5, 0xbe0c, 0x0, 0x0);
        gbc.writeMem(0xbe0c, { 0x97 });
        gbc.writeMem(0xc815, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3547);
        EXPECT(gbc.pc(), 0xc816);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe0c), 0x97);
        EXPECT(gbc.readMem(0xc815), 0x96);
        // 96 033D
        gbc.setState(0x110f, 0x41bd, 0xca20, 0x7ee0, 0x57ef, 0xa9cd, 0x0, 0x1);
        gbc.writeMem(0x110f, { 0x96 });
        gbc.writeMem(0xa9cd, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x41bd);
        EXPECT(gbc.pc(), 0x1110);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9cd), 0x15);
        // 96 033E
        gbc.setState(0x2ca4, 0x83f4, 0x7520, 0x4f9c, 0x8c04, 0xb7bf, 0x0, 0x1);
        gbc.writeMem(0x2ca4, { 0x96 });
        gbc.writeMem(0xb7bf, { 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x83f4);
        EXPECT(gbc.pc(), 0x2ca5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7bf), 0xef);
        // 96 033F
        gbc.setState(0x6733, 0x4ae5, 0x78d0, 0xeb24, 0x6e8f, 0x1aff, 0x0, 0x1);
        gbc.writeMem(0x1aff, { 0x87 });
        gbc.writeMem(0x6733, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x4ae5);
        EXPECT(gbc.pc(), 0x6734);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0340
        gbc.setState(0x975b, 0xb87f, 0x7a30, 0xd95f, 0x3d11, 0x12f2, 0x1, 0x0);
        gbc.writeMem(0x12f2, { 0x90 });
        gbc.writeMem(0x975b, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xb87f);
        EXPECT(gbc.pc(), 0x975c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x975b), 0x96);
        // 96 0341
        gbc.setState(0x533d, 0x66b4, 0x5dc0, 0xd436, 0xfee0, 0xd9f4, 0x1, 0x1);
        gbc.writeMem(0x533d, { 0x96 });
        gbc.writeMem(0xd9f4, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x66b4);
        EXPECT(gbc.pc(), 0x533e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9f4), 0xf4);
        // 96 0342
        gbc.setState(0x6c4c, 0x2ab7, 0x7400, 0x5b1a, 0xdd4, 0xf7d1, 0x1, 0x0);
        gbc.writeMem(0x6c4c, { 0x96 });
        gbc.writeMem(0xf7d1, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x2ab7);
        EXPECT(gbc.pc(), 0x6c4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf7d1), 0x8d);
        // 96 0343
        gbc.setState(0xe163, 0x6d3f, 0xdb40, 0xa0ac, 0x8af4, 0x8aae, 0x0, 0x1);
        gbc.writeMem(0x8aae, { 0x69 });
        gbc.writeMem(0xe163, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x6d3f);
        EXPECT(gbc.pc(), 0xe164);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aae), 0x69);
        EXPECT(gbc.readMem(0xe163), 0x96);
        // 96 0344
        gbc.setState(0x8a2c, 0x127c, 0x4a80, 0x69d1, 0xceec, 0x7fc4, 0x1, 0x1);
        gbc.writeMem(0x7fc4, { 0x41 });
        gbc.writeMem(0x8a2c, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x127c);
        EXPECT(gbc.pc(), 0x8a2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a2c), 0x96);
        // 96 0345
        gbc.setState(0x1aff, 0x46e9, 0xefd0, 0x4274, 0xbaff, 0x3bb2, 0x1, 0x1);
        gbc.writeMem(0x1aff, { 0x96 });
        gbc.writeMem(0x3bb2, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x46e9);
        EXPECT(gbc.pc(), 0x1b00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0346
        gbc.setState(0x5753, 0x124c, 0x9e70, 0x8a0f, 0x6879, 0xe25, 0x0, 0x0);
        gbc.writeMem(0xe25, { 0x5c });
        gbc.writeMem(0x5753, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x124c);
        EXPECT(gbc.pc(), 0x5754);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 0347
        gbc.setState(0x6fdc, 0xefa0, 0x2fd0, 0x2ceb, 0xf8cc, 0xaf25, 0x1, 0x1);
        gbc.writeMem(0x6fdc, { 0x96 });
        gbc.writeMem(0xaf25, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xefa0);
        EXPECT(gbc.pc(), 0x6fdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf25), 0x28);
        // 96 0348
        gbc.setState(0x6f8c, 0x5283, 0xf9b0, 0xe130, 0xc594, 0xd9a3, 0x1, 0x1);
        gbc.writeMem(0x6f8c, { 0x96 });
        gbc.writeMem(0xd9a3, { 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x5283);
        EXPECT(gbc.pc(), 0x6f8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9a3), 0x87);
        // 96 0349
        gbc.setState(0x120d, 0xa9be, 0x63d0, 0x1d83, 0x3582, 0x3d96, 0x0, 0x0);
        gbc.writeMem(0x120d, { 0x96 });
        gbc.writeMem(0x3d96, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xa9be);
        EXPECT(gbc.pc(), 0x120e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 034A
        gbc.setState(0xe762, 0x42df, 0x31a0, 0x410f, 0xae8f, 0xff5b, 0x0, 0x0);
        gbc.writeMem(0xe762, { 0x96 });
        gbc.writeMem(0xff5b, { 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x42df);
        EXPECT(gbc.pc(), 0xe763);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe762), 0x96);
        EXPECT(gbc.readMem(0xff5b), 0xff);
        // 96 034B
        gbc.setState(0x6563, 0x845c, 0xb050, 0x1e38, 0x30ea, 0x7a65, 0x1, 0x1);
        gbc.writeMem(0x6563, { 0x96 });
        gbc.writeMem(0x7a65, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x845c);
        EXPECT(gbc.pc(), 0x6564);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 034C
        gbc.setState(0x64a1, 0x898, 0x5d60, 0xfec4, 0xe2b4, 0x7d16, 0x0, 0x1);
        gbc.writeMem(0x64a1, { 0x96 });
        gbc.writeMem(0x7d16, { 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x898);
        EXPECT(gbc.pc(), 0x64a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 034D
        gbc.setState(0x18d, 0x851b, 0xf2d0, 0x6eaa, 0x770c, 0x2252, 0x1, 0x1);
        gbc.writeMem(0x18d, { 0x96 });
        gbc.writeMem(0x2252, { 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x851b);
        EXPECT(gbc.pc(), 0x18e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 034E
        gbc.setState(0x28df, 0xb92a, 0x8a90, 0x51e4, 0xe0de, 0xd6f2, 0x0, 0x1);
        gbc.writeMem(0x28df, { 0x96 });
        gbc.writeMem(0xd6f2, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xb92a);
        EXPECT(gbc.pc(), 0x28e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6f2), 0x57);
        // 96 034F
        gbc.setState(0x96a1, 0x77a5, 0x92f0, 0x1697, 0x8c94, 0x5f4b, 0x0, 0x1);
        gbc.writeMem(0x5f4b, { 0x51 });
        gbc.writeMem(0x96a1, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x77a5);
        EXPECT(gbc.pc(), 0x96a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96a1), 0x96);
        // 96 0350
        gbc.setState(0xbf02, 0xb4f6, 0x41a0, 0xe6ae, 0x27c9, 0xd851, 0x1, 0x1);
        gbc.writeMem(0xbf02, { 0x96 });
        gbc.writeMem(0xd851, { 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xb4f6);
        EXPECT(gbc.pc(), 0xbf03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf02), 0x96);
        EXPECT(gbc.readMem(0xd851), 0xe0);
        // 96 0351
        gbc.setState(0x61b5, 0x5a6c, 0x3820, 0x1b7, 0x318, 0x3af6, 0x0, 0x1);
        gbc.writeMem(0x3af6, { 0x9f });
        gbc.writeMem(0x61b5, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x5a6c);
        EXPECT(gbc.pc(), 0x61b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 0352
        gbc.setState(0x1169, 0xa224, 0xeea0, 0xc35b, 0xa9c1, 0x49ee, 0x1, 0x1);
        gbc.writeMem(0x1169, { 0x96 });
        gbc.writeMem(0x49ee, { 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xa224);
        EXPECT(gbc.pc(), 0x116a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 0353
        gbc.setState(0xc137, 0x8d64, 0x9a80, 0xbcb9, 0xe2c8, 0xb3d4, 0x1, 0x1);
        gbc.writeMem(0xb3d4, { 0xa8 });
        gbc.writeMem(0xc137, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8d64);
        EXPECT(gbc.pc(), 0xc138);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3d4), 0xa8);
        EXPECT(gbc.readMem(0xc137), 0x96);
        // 96 0354
        gbc.setState(0xa452, 0x1a73, 0xac30, 0x3edf, 0xf94, 0xa76a, 0x1, 0x1);
        gbc.writeMem(0xa452, { 0x96 });
        gbc.writeMem(0xa76a, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1a73);
        EXPECT(gbc.pc(), 0xa453);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa452), 0x96);
        EXPECT(gbc.readMem(0xa76a), 0x5f);
        // 96 0355
        gbc.setState(0x10d0, 0xa4f6, 0x22e0, 0xfca0, 0x2c46, 0xd32f, 0x1, 0x0);
        gbc.writeMem(0x10d0, { 0x96 });
        gbc.writeMem(0xd32f, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa4f6);
        EXPECT(gbc.pc(), 0x10d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd32f), 0x36);
        // 96 0356
        gbc.setState(0x183a, 0x40eb, 0xacb0, 0x531a, 0x89a0, 0xbcf8, 0x0, 0x0);
        gbc.writeMem(0x183a, { 0x96 });
        gbc.writeMem(0xbcf8, { 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x40eb);
        EXPECT(gbc.pc(), 0x183b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcf8), 0xf5);
        // 96 0357
        gbc.setState(0xac87, 0xf6ec, 0x3e50, 0x11b4, 0xc5c0, 0x498d, 0x0, 0x1);
        gbc.writeMem(0x498d, { 0x49 });
        gbc.writeMem(0xac87, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf6ec);
        EXPECT(gbc.pc(), 0xac88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac87), 0x96);
        // 96 0358
        gbc.setState(0xb526, 0x7bd6, 0xacb0, 0x7113, 0xa9ac, 0x454d, 0x1, 0x1);
        gbc.writeMem(0x454d, { 0x6c });
        gbc.writeMem(0xb526, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x7bd6);
        EXPECT(gbc.pc(), 0xb527);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb526), 0x96);
        // 96 0359
        gbc.setState(0x13bd, 0xee71, 0x3c10, 0x7ff9, 0xf03f, 0xe50d, 0x0, 0x1);
        gbc.writeMem(0x13bd, { 0x96 });
        gbc.writeMem(0xe50d, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xee71);
        EXPECT(gbc.pc(), 0x13be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe50d), 0xcb);
        // 96 035A
        gbc.setState(0x4e46, 0x9729, 0x2020, 0xfec6, 0xc9d5, 0xb1de, 0x0, 0x0);
        gbc.writeMem(0x4e46, { 0x96 });
        gbc.writeMem(0xb1de, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x9729);
        EXPECT(gbc.pc(), 0x4e47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1de), 0x85);
        // 96 035B
        gbc.setState(0x8eb3, 0xbb0e, 0xfb10, 0xcf94, 0x7ed2, 0xaa65, 0x0, 0x1);
        gbc.writeMem(0x8eb3, { 0x96 });
        gbc.writeMem(0xaa65, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xbb0e);
        EXPECT(gbc.pc(), 0x8eb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eb3), 0x96);
        EXPECT(gbc.readMem(0xaa65), 0x10);
        // 96 035C
        gbc.setState(0x83cb, 0xc7ad, 0xfb0, 0xc419, 0x4af2, 0xeedd, 0x0, 0x0);
        gbc.writeMem(0x83cb, { 0x96 });
        gbc.writeMem(0xeedd, { 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc7ad);
        EXPECT(gbc.pc(), 0x83cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83cb), 0x96);
        EXPECT(gbc.readMem(0xeedd), 0xb5);
        // 96 035D
        gbc.setState(0xc3d6, 0x9419, 0x5fe0, 0x8eab, 0x1116, 0xb0d5, 0x0, 0x0);
        gbc.writeMem(0xb0d5, { 0xb0 });
        gbc.writeMem(0xc3d6, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9419);
        EXPECT(gbc.pc(), 0xc3d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0d5), 0xb0);
        EXPECT(gbc.readMem(0xc3d6), 0x96);
        // 96 035E
        gbc.setState(0x1a2a, 0x1f4f, 0xc970, 0xcd0, 0xb5bb, 0x4316, 0x1, 0x1);
        gbc.writeMem(0x1a2a, { 0x96 });
        gbc.writeMem(0x4316, { 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x1f4f);
        EXPECT(gbc.pc(), 0x1a2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 035F
        gbc.setState(0xa0e5, 0x890f, 0xdc50, 0xcb61, 0xa57a, 0xcddd, 0x1, 0x0);
        gbc.writeMem(0xa0e5, { 0x96 });
        gbc.writeMem(0xcddd, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x890f);
        EXPECT(gbc.pc(), 0xa0e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0e5), 0x96);
        EXPECT(gbc.readMem(0xcddd), 0xd6);
        // 96 0360
        gbc.setState(0xbe97, 0xfca7, 0xf1b0, 0xcdf1, 0xd99, 0x904a, 0x0, 0x0);
        gbc.writeMem(0x904a, { 0xc0 });
        gbc.writeMem(0xbe97, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xfca7);
        EXPECT(gbc.pc(), 0xbe98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x904a), 0xc0);
        EXPECT(gbc.readMem(0xbe97), 0x96);
        // 96 0361
        gbc.setState(0x2976, 0x35a0, 0xfad0, 0x9545, 0x9ea4, 0xa40f, 0x1, 0x0);
        gbc.writeMem(0x2976, { 0x96 });
        gbc.writeMem(0xa40f, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x35a0);
        EXPECT(gbc.pc(), 0x2977);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa40f), 0x3f);
        // 96 0362
        gbc.setState(0xb239, 0x7bd0, 0x2ec0, 0x808f, 0x291d, 0xbeb, 0x1, 0x0);
        gbc.writeMem(0xbeb, { 0x21 });
        gbc.writeMem(0xb239, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x7bd0);
        EXPECT(gbc.pc(), 0xb23a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb239), 0x96);
        // 96 0363
        gbc.setState(0xd907, 0xed87, 0xeda0, 0xc0b6, 0x2c4d, 0xbdb5, 0x0, 0x1);
        gbc.writeMem(0xbdb5, { 0x39 });
        gbc.writeMem(0xd907, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xed87);
        EXPECT(gbc.pc(), 0xd908);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb5), 0x39);
        EXPECT(gbc.readMem(0xd907), 0x96);
        // 96 0364
        gbc.setState(0xa76, 0x4de6, 0x8040, 0x6e3, 0x47ad, 0xeca6, 0x0, 0x0);
        gbc.writeMem(0xa76, { 0x96 });
        gbc.writeMem(0xeca6, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4de6);
        EXPECT(gbc.pc(), 0xa77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeca6), 0xe7);
        // 96 0365
        gbc.setState(0xd6ca, 0xd1b6, 0xc260, 0xda2, 0xc0ab, 0x7b93, 0x1, 0x0);
        gbc.writeMem(0x7b93, { 0xee });
        gbc.writeMem(0xd6ca, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xd1b6);
        EXPECT(gbc.pc(), 0xd6cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6ca), 0x96);
        // 96 0366
        gbc.setState(0x1416, 0xed53, 0x4990, 0x6e65, 0xda83, 0xa615, 0x0, 0x1);
        gbc.writeMem(0x1416, { 0x96 });
        gbc.writeMem(0xa615, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xed53);
        EXPECT(gbc.pc(), 0x1417);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa615), 0x92);
        // 96 0367
        gbc.setState(0x7834, 0x9b51, 0x4d80, 0xb9c7, 0x4248, 0x154c, 0x1, 0x0);
        gbc.writeMem(0x154c, { 0x23 });
        gbc.writeMem(0x7834, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9b51);
        EXPECT(gbc.pc(), 0x7835);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 0368
        gbc.setState(0x8bc1, 0x7b4, 0x8e50, 0x1e9f, 0xb813, 0x1a27, 0x0, 0x0);
        gbc.writeMem(0x1a27, { 0x8f });
        gbc.writeMem(0x8bc1, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7b4);
        EXPECT(gbc.pc(), 0x8bc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bc1), 0x96);
        // 96 0369
        gbc.setState(0x9d32, 0xf3d2, 0xed90, 0xf592, 0x8f60, 0xdcbf, 0x0, 0x1);
        gbc.writeMem(0x9d32, { 0x96 });
        gbc.writeMem(0xdcbf, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf3d2);
        EXPECT(gbc.pc(), 0x9d33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d32), 0x96);
        EXPECT(gbc.readMem(0xdcbf), 0x72);
        // 96 036A
        gbc.setState(0x4822, 0xad3a, 0x1ac0, 0x4d8c, 0x2101, 0xe8a8, 0x0, 0x1);
        gbc.writeMem(0x4822, { 0x96 });
        gbc.writeMem(0xe8a8, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xad3a);
        EXPECT(gbc.pc(), 0x4823);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8a8), 0x7f);
        // 96 036B
        gbc.setState(0xd955, 0xa75e, 0xf7f0, 0xa89c, 0x5be, 0xe1d2, 0x0, 0x0);
        gbc.writeMem(0xd955, { 0x96 });
        gbc.writeMem(0xe1d2, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa75e);
        EXPECT(gbc.pc(), 0xd956);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd955), 0x96);
        EXPECT(gbc.readMem(0xe1d2), 0x2b);
        // 96 036C
        gbc.setState(0xb1a8, 0x8ba3, 0xaec0, 0x1cc2, 0xc949, 0x641f, 0x0, 0x0);
        gbc.writeMem(0x641f, { 0x38 });
        gbc.writeMem(0xb1a8, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8ba3);
        EXPECT(gbc.pc(), 0xb1a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1a8), 0x96);
        // 96 036F
        gbc.setState(0x40eb, 0x6985, 0xd510, 0xe62, 0xc690, 0xc51f, 0x1, 0x0);
        gbc.writeMem(0x40eb, { 0x96 });
        gbc.writeMem(0xc51f, { 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x6985);
        EXPECT(gbc.pc(), 0x40ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc51f), 0x47);
        // 96 0370
        gbc.setState(0x3fa7, 0x4065, 0x91b0, 0x204b, 0x6f19, 0x2902, 0x0, 0x1);
        gbc.writeMem(0x2902, { 0xc7 });
        gbc.writeMem(0x3fa7, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x4065);
        EXPECT(gbc.pc(), 0x3fa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 0371
        gbc.setState(0x797d, 0x8f97, 0x2d60, 0xc685, 0x2283, 0xe2bc, 0x1, 0x1);
        gbc.writeMem(0x797d, { 0x96 });
        gbc.writeMem(0xe2bc, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8f97);
        EXPECT(gbc.pc(), 0x797e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2bc), 0x66);
        // 96 0372
        gbc.setState(0xaf4b, 0xd738, 0x1780, 0xe94c, 0xbf4f, 0xcd5f, 0x1, 0x1);
        gbc.writeMem(0xaf4b, { 0x96 });
        gbc.writeMem(0xcd5f, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd738);
        EXPECT(gbc.pc(), 0xaf4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf4b), 0x96);
        EXPECT(gbc.readMem(0xcd5f), 0x12);
        // 96 0373
        gbc.setState(0x98ea, 0x7795, 0xb640, 0x247a, 0x1b10, 0x573e, 0x1, 0x0);
        gbc.writeMem(0x573e, { 0xe0 });
        gbc.writeMem(0x98ea, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7795);
        EXPECT(gbc.pc(), 0x98eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98ea), 0x96);
        // 96 0374
        gbc.setState(0x7418, 0x9c3f, 0xf8c0, 0xdf17, 0xc73e, 0x3934, 0x1, 0x1);
        gbc.writeMem(0x3934, { 0xed });
        gbc.writeMem(0x7418, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9c3f);
        EXPECT(gbc.pc(), 0x7419);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 0375
        gbc.setState(0xd909, 0xa201, 0xbd70, 0xb838, 0x8c45, 0xf993, 0x0, 0x0);
        gbc.writeMem(0xd909, { 0x96 });
        gbc.writeMem(0xf993, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xa201);
        EXPECT(gbc.pc(), 0xd90a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd909), 0x96);
        EXPECT(gbc.readMem(0xf993), 0x26);
        // 96 0376
        gbc.setState(0xb07b, 0xf7d9, 0x90b0, 0x3d42, 0x6f54, 0x4d6, 0x0, 0x0);
        gbc.writeMem(0x4d6, { 0xe });
        gbc.writeMem(0xb07b, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xf7d9);
        EXPECT(gbc.pc(), 0xb07c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb07b), 0x96);
        // 96 0377
        gbc.setState(0xbf9c, 0xb6cd, 0x84c0, 0x9542, 0x41ac, 0x2609, 0x0, 0x1);
        gbc.writeMem(0x2609, { 0x8f });
        gbc.writeMem(0xbf9c, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb6cd);
        EXPECT(gbc.pc(), 0xbf9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf9c), 0x96);
        // 96 0378
        gbc.setState(0x1a8a, 0x4f53, 0x8ca0, 0xa45b, 0x2699, 0x3b1f, 0x1, 0x1);
        gbc.writeMem(0x1a8a, { 0x96 });
        gbc.writeMem(0x3b1f, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4f53);
        EXPECT(gbc.pc(), 0x1a8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 037A
        gbc.setState(0x7543, 0xaf82, 0xf2e0, 0x446b, 0xb3e1, 0x2bd1, 0x1, 0x0);
        gbc.writeMem(0x2bd1, { 0x18 });
        gbc.writeMem(0x7543, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xaf82);
        EXPECT(gbc.pc(), 0x7544);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 037B
        gbc.setState(0xeff1, 0x9658, 0xd950, 0x18e8, 0xb230, 0x69ed, 0x0, 0x1);
        gbc.writeMem(0x69ed, { 0x6b });
        gbc.writeMem(0xeff1, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9658);
        EXPECT(gbc.pc(), 0xeff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeff1), 0x96);
        // 96 037C
        gbc.setState(0x95cd, 0xdc33, 0x2100, 0xd84, 0xefc8, 0xa4d2, 0x1, 0x1);
        gbc.writeMem(0x95cd, { 0x96 });
        gbc.writeMem(0xa4d2, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xdc33);
        EXPECT(gbc.pc(), 0x95ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95cd), 0x96);
        EXPECT(gbc.readMem(0xa4d2), 0xea);
        // 96 037D
        gbc.setState(0xab85, 0x15d2, 0x3a30, 0x50f3, 0x4e05, 0x656e, 0x0, 0x1);
        gbc.writeMem(0x656e, { 0xb8 });
        gbc.writeMem(0xab85, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x15d2);
        EXPECT(gbc.pc(), 0xab86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab85), 0x96);
        // 96 037F
        gbc.setState(0x5960, 0x8b98, 0x9c50, 0xf2e0, 0xed41, 0x2834, 0x0, 0x0);
        gbc.writeMem(0x2834, { 0xb8 });
        gbc.writeMem(0x5960, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x8b98);
        EXPECT(gbc.pc(), 0x5961);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0380
        gbc.setState(0x9f38, 0xf73d, 0x78d0, 0xa696, 0x125d, 0xe7d9, 0x1, 0x1);
        gbc.writeMem(0x9f38, { 0x96 });
        gbc.writeMem(0xe7d9, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf73d);
        EXPECT(gbc.pc(), 0x9f39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f38), 0x96);
        EXPECT(gbc.readMem(0xe7d9), 0xed);
        // 96 0381
        gbc.setState(0xc921, 0x8d6e, 0xf1b0, 0xa697, 0xea44, 0x3f47, 0x0, 0x0);
        gbc.writeMem(0x3f47, { 0xa1 });
        gbc.writeMem(0xc921, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x8d6e);
        EXPECT(gbc.pc(), 0xc922);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc921), 0x96);
        // 96 0382
        gbc.setState(0x2109, 0xcc71, 0x6f90, 0x1626, 0x882e, 0xce85, 0x1, 0x1);
        gbc.writeMem(0x2109, { 0x96 });
        gbc.writeMem(0xce85, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xcc71);
        EXPECT(gbc.pc(), 0x210a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce85), 0x2d);
        // 96 0383
        gbc.setState(0x2a7b, 0xf26a, 0xa90, 0x4f9d, 0x6f1e, 0x94cf, 0x0, 0x0);
        gbc.writeMem(0x2a7b, { 0x96 });
        gbc.writeMem(0x94cf, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf26a);
        EXPECT(gbc.pc(), 0x2a7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94cf), 0xc5);
        // 96 0384
        gbc.setState(0x3883, 0xd96b, 0xa580, 0x2aac, 0x2f48, 0x98ab, 0x0, 0x0);
        gbc.writeMem(0x3883, { 0x96 });
        gbc.writeMem(0x98ab, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd96b);
        EXPECT(gbc.pc(), 0x3884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98ab), 0x3f);
        // 96 0385
        gbc.setState(0x13c6, 0xaa52, 0x7840, 0x83ca, 0x87a7, 0x5d96, 0x0, 0x1);
        gbc.writeMem(0x13c6, { 0x96 });
        gbc.writeMem(0x5d96, { 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xaa52);
        EXPECT(gbc.pc(), 0x13c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0386
        gbc.setState(0xbcb0, 0x1c63, 0xfc60, 0x7875, 0x9233, 0x4c8d, 0x0, 0x0);
        gbc.writeMem(0x4c8d, { 0x1e });
        gbc.writeMem(0xbcb0, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1c63);
        EXPECT(gbc.pc(), 0xbcb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcb0), 0x96);
        // 96 0387
        gbc.setState(0xcfd5, 0x8365, 0x2050, 0xf7a9, 0xb4a1, 0x397, 0x1, 0x0);
        gbc.writeMem(0x397, { 0x9c });
        gbc.writeMem(0xcfd5, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8365);
        EXPECT(gbc.pc(), 0xcfd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfd5), 0x96);
        // 96 0388
        gbc.setState(0x9196, 0x6268, 0x2f40, 0x3ad7, 0x1362, 0x3876, 0x1, 0x1);
        gbc.writeMem(0x3876, { 0x6e });
        gbc.writeMem(0x9196, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6268);
        EXPECT(gbc.pc(), 0x9197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9196), 0x96);
        // 96 0389
        gbc.setState(0x19e1, 0x32ae, 0x7ee0, 0x85ca, 0x7a0c, 0x150a, 0x1, 0x0);
        gbc.writeMem(0x150a, { 0x61 });
        gbc.writeMem(0x19e1, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x32ae);
        EXPECT(gbc.pc(), 0x19e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 038A
        gbc.setState(0xbce9, 0x1bd8, 0x51a0, 0x4604, 0xcd26, 0x13aa, 0x0, 0x0);
        gbc.writeMem(0x13aa, { 0x3f });
        gbc.writeMem(0xbce9, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1bd8);
        EXPECT(gbc.pc(), 0xbcea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbce9), 0x96);
        // 96 038B
        gbc.setState(0x6806, 0x7378, 0x2050, 0xa9f, 0x7aeb, 0xc627, 0x1, 0x1);
        gbc.writeMem(0x6806, { 0x96 });
        gbc.writeMem(0xc627, { 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7378);
        EXPECT(gbc.pc(), 0x6807);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc627), 0x82);
        // 96 038C
        gbc.setState(0x6627, 0x2c59, 0xc6a0, 0xd88e, 0x8c06, 0x2ce2, 0x1, 0x0);
        gbc.writeMem(0x2ce2, { 0x90 });
        gbc.writeMem(0x6627, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2c59);
        EXPECT(gbc.pc(), 0x6628);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 038D
        gbc.setState(0xd903, 0x1be4, 0x39b0, 0xcd16, 0x7510, 0x8dc2, 0x1, 0x1);
        gbc.writeMem(0x8dc2, { 0x48 });
        gbc.writeMem(0xd903, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x1be4);
        EXPECT(gbc.pc(), 0xd904);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dc2), 0x48);
        EXPECT(gbc.readMem(0xd903), 0x96);
        // 96 038F
        gbc.setState(0x17d2, 0x90fe, 0x61c0, 0x3c01, 0xda6b, 0xd584, 0x1, 0x0);
        gbc.writeMem(0x17d2, { 0x96 });
        gbc.writeMem(0xd584, { 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x90fe);
        EXPECT(gbc.pc(), 0x17d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd584), 0x63);
        // 96 0391
        gbc.setState(0xbe11, 0x1843, 0xafd0, 0xf67d, 0x1540, 0xcafa, 0x1, 0x1);
        gbc.writeMem(0xbe11, { 0x96 });
        gbc.writeMem(0xcafa, { 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x1843);
        EXPECT(gbc.pc(), 0xbe12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe11), 0x96);
        EXPECT(gbc.readMem(0xcafa), 0x9);
        // 96 0392
        gbc.setState(0xa048, 0x54b4, 0x9470, 0xe77c, 0xf3d1, 0x4aca, 0x0, 0x1);
        gbc.writeMem(0x4aca, { 0x46 });
        gbc.writeMem(0xa048, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x54b4);
        EXPECT(gbc.pc(), 0xa049);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa048), 0x96);
        // 96 0393
        gbc.setState(0x7eb0, 0xc01b, 0x1030, 0xd8df, 0xec14, 0xbe1a, 0x0, 0x1);
        gbc.writeMem(0x7eb0, { 0x96 });
        gbc.writeMem(0xbe1a, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc01b);
        EXPECT(gbc.pc(), 0x7eb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe1a), 0x6e);
        // 96 0394
        gbc.setState(0x756a, 0x90c2, 0x1600, 0xfc0e, 0x4ba9, 0x81f9, 0x1, 0x0);
        gbc.writeMem(0x756a, { 0x96 });
        gbc.writeMem(0x81f9, { 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x90c2);
        EXPECT(gbc.pc(), 0x756b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81f9), 0xdb);
        // 96 0395
        gbc.setState(0x5825, 0x482, 0xdc0, 0xa2ea, 0x4caa, 0xb90c, 0x0, 0x1);
        gbc.writeMem(0x5825, { 0x96 });
        gbc.writeMem(0xb90c, { 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x482);
        EXPECT(gbc.pc(), 0x5826);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb90c), 0xb5);
        // 96 0396
        gbc.setState(0x4b2e, 0x7b38, 0x2870, 0xf983, 0xc3d2, 0x5b63, 0x0, 0x1);
        gbc.writeMem(0x4b2e, { 0x96 });
        gbc.writeMem(0x5b63, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x7b38);
        EXPECT(gbc.pc(), 0x4b2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 0397
        gbc.setState(0x72f5, 0x44e8, 0xbf60, 0x78d1, 0x3254, 0xb061, 0x0, 0x0);
        gbc.writeMem(0x72f5, { 0x96 });
        gbc.writeMem(0xb061, { 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x44e8);
        EXPECT(gbc.pc(), 0x72f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb061), 0x91);
        // 96 0398
        gbc.setState(0xce9f, 0xaf75, 0xa540, 0xcc49, 0x6f36, 0xd22c, 0x0, 0x0);
        gbc.writeMem(0xce9f, { 0x96 });
        gbc.writeMem(0xd22c, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xaf75);
        EXPECT(gbc.pc(), 0xcea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce9f), 0x96);
        EXPECT(gbc.readMem(0xd22c), 0x8);
        // 96 039A
        gbc.setState(0x4464, 0x9c4b, 0xfc50, 0xc788, 0xb551, 0xa050, 0x1, 0x1);
        gbc.writeMem(0x4464, { 0x96 });
        gbc.writeMem(0xa050, { 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9c4b);
        EXPECT(gbc.pc(), 0x4465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa050), 0x64);
        // 96 039B
        gbc.setState(0xef81, 0x4a9, 0xd0e0, 0xf408, 0xc3ac, 0xeb24, 0x1, 0x1);
        gbc.writeMem(0xeb24, { 0xe2 });
        gbc.writeMem(0xef81, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4a9);
        EXPECT(gbc.pc(), 0xef82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb24), 0xe2);
        EXPECT(gbc.readMem(0xef81), 0x96);
        // 96 039C
        gbc.setState(0xc229, 0x9404, 0xfbc0, 0xaf9a, 0x84bb, 0x7188, 0x1, 0x1);
        gbc.writeMem(0x7188, { 0x2 });
        gbc.writeMem(0xc229, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x9404);
        EXPECT(gbc.pc(), 0xc22a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc229), 0x96);
        // 96 039D
        gbc.setState(0x40fd, 0xd4e5, 0xc6a0, 0x34ac, 0x1e4f, 0xc3fa, 0x1, 0x1);
        gbc.writeMem(0x40fd, { 0x96 });
        gbc.writeMem(0xc3fa, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd4e5);
        EXPECT(gbc.pc(), 0x40fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3fa), 0xd7);
        // 96 039E
        gbc.setState(0x2e23, 0xb91f, 0xe9e0, 0x3a11, 0x1302, 0xc52b, 0x0, 0x0);
        gbc.writeMem(0x2e23, { 0x96 });
        gbc.writeMem(0xc52b, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb91f);
        EXPECT(gbc.pc(), 0x2e24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc52b), 0x44);
        // 96 039F
        gbc.setState(0xb1e, 0x4d85, 0xba30, 0x962a, 0xab54, 0xe532, 0x0, 0x1);
        gbc.writeMem(0xb1e, { 0x96 });
        gbc.writeMem(0xe532, { 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x4d85);
        EXPECT(gbc.pc(), 0xb1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe532), 0x49);
        // 96 03A0
        gbc.setState(0xcdf8, 0x105d, 0x5940, 0xc9f2, 0x29e5, 0xe6bc, 0x0, 0x0);
        gbc.writeMem(0xcdf8, { 0x96 });
        gbc.writeMem(0xe6bc, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x105d);
        EXPECT(gbc.pc(), 0xcdf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdf8), 0x96);
        EXPECT(gbc.readMem(0xe6bc), 0x55);
        // 96 03A2
        gbc.setState(0x14f1, 0x9565, 0x420, 0x620d, 0xe036, 0x41e5, 0x0, 0x0);
        gbc.writeMem(0x14f1, { 0x96 });
        gbc.writeMem(0x41e5, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x9565);
        EXPECT(gbc.pc(), 0x14f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 03A3
        gbc.setState(0x9de, 0x7c8d, 0xd060, 0xa574, 0x1652, 0xbfda, 0x0, 0x1);
        gbc.writeMem(0x9de, { 0x96 });
        gbc.writeMem(0xbfda, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x7c8d);
        EXPECT(gbc.pc(), 0x9df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfda), 0x8e);
        // 96 03A4
        gbc.setState(0x6749, 0xb563, 0x19f0, 0xb49e, 0x7061, 0x69a1, 0x1, 0x0);
        gbc.writeMem(0x6749, { 0x96 });
        gbc.writeMem(0x69a1, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb563);
        EXPECT(gbc.pc(), 0x674a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 03A5
        gbc.setState(0xcac8, 0x92fd, 0xdb70, 0x94b9, 0x5752, 0x1e3a, 0x0, 0x1);
        gbc.writeMem(0x1e3a, { 0x4b });
        gbc.writeMem(0xcac8, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x92fd);
        EXPECT(gbc.pc(), 0xcac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcac8), 0x96);
        // 96 03A6
        gbc.setState(0x53b6, 0xf96, 0xfe70, 0xe630, 0x7708, 0xec35, 0x0, 0x1);
        gbc.writeMem(0x53b6, { 0x96 });
        gbc.writeMem(0xec35, { 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf96);
        EXPECT(gbc.pc(), 0x53b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec35), 0xd4);
        // 96 03A7
        gbc.setState(0x1a87, 0xca89, 0x8c50, 0x140f, 0xcc15, 0x1278, 0x0, 0x0);
        gbc.writeMem(0x1278, { 0xfe });
        gbc.writeMem(0x1a87, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xca89);
        EXPECT(gbc.pc(), 0x1a88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 03A8
        gbc.setState(0xe50, 0x5b1f, 0x7ff0, 0x56fb, 0xeb4a, 0x8c4f, 0x0, 0x1);
        gbc.writeMem(0xe50, { 0x96 });
        gbc.writeMem(0x8c4f, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x5b1f);
        EXPECT(gbc.pc(), 0xe51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c4f), 0x84);
        // 96 03A9
        gbc.setState(0xcac7, 0x67d4, 0x3160, 0x45c3, 0xb499, 0x1d3e, 0x1, 0x0);
        gbc.writeMem(0x1d3e, { 0x85 });
        gbc.writeMem(0xcac7, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x67d4);
        EXPECT(gbc.pc(), 0xcac8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcac7), 0x96);
        // 96 03AA
        gbc.setState(0x8097, 0x6b57, 0x1cc0, 0x659e, 0x56b2, 0x770c, 0x0, 0x1);
        gbc.writeMem(0x770c, { 0x53 });
        gbc.writeMem(0x8097, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x6b57);
        EXPECT(gbc.pc(), 0x8098);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8097), 0x96);
        // 96 03AB
        gbc.setState(0x5119, 0x9b69, 0xf0e0, 0xdbf2, 0xe6b3, 0xdfb0, 0x1, 0x0);
        gbc.writeMem(0x5119, { 0x96 });
        gbc.writeMem(0xdfb0, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9b69);
        EXPECT(gbc.pc(), 0x511a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfb0), 0x99);
        // 96 03AC
        gbc.setState(0xa846, 0x6dd, 0xbba0, 0x1362, 0xf6b1, 0xc489, 0x1, 0x0);
        gbc.writeMem(0xa846, { 0x96 });
        gbc.writeMem(0xc489, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6dd);
        EXPECT(gbc.pc(), 0xa847);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa846), 0x96);
        EXPECT(gbc.readMem(0xc489), 0x24);
        // 96 03AD
        gbc.setState(0x3ab6, 0x9f64, 0xea80, 0x19fd, 0x1df1, 0x4f8c, 0x0, 0x1);
        gbc.writeMem(0x3ab6, { 0x96 });
        gbc.writeMem(0x4f8c, { 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x9f64);
        EXPECT(gbc.pc(), 0x3ab7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 03AE
        gbc.setState(0xc753, 0xfc6e, 0x7b80, 0x8d64, 0x7905, 0xcf7e, 0x1, 0x0);
        gbc.writeMem(0xc753, { 0x96 });
        gbc.writeMem(0xcf7e, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xfc6e);
        EXPECT(gbc.pc(), 0xc754);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc753), 0x96);
        EXPECT(gbc.readMem(0xcf7e), 0xae);
        // 96 03AF
        gbc.setState(0x5d05, 0xf2f, 0x920, 0x88f9, 0xdaf1, 0x6fb5, 0x1, 0x0);
        gbc.writeMem(0x5d05, { 0x96 });
        gbc.writeMem(0x6fb5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf2f);
        EXPECT(gbc.pc(), 0x5d06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 03B0
        gbc.setState(0xb51d, 0x153a, 0xe010, 0xed30, 0x1e2a, 0xedae, 0x0, 0x0);
        gbc.writeMem(0xb51d, { 0x96 });
        gbc.writeMem(0xedae, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x153a);
        EXPECT(gbc.pc(), 0xb51e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb51d), 0x96);
        EXPECT(gbc.readMem(0xedae), 0x5b);
        // 96 03B1
        gbc.setState(0x9cd2, 0x47f3, 0xe860, 0x1a1c, 0x926d, 0xf3f7, 0x0, 0x0);
        gbc.writeMem(0x9cd2, { 0x96 });
        gbc.writeMem(0xf3f7, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x47f3);
        EXPECT(gbc.pc(), 0x9cd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cd2), 0x96);
        EXPECT(gbc.readMem(0xf3f7), 0x93);
        // 96 03B2
        gbc.setState(0xe22b, 0xf940, 0x29b0, 0xdcb3, 0x3a75, 0x1ec, 0x0, 0x0);
        gbc.writeMem(0x1ec, { 0xae });
        gbc.writeMem(0xe22b, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xf940);
        EXPECT(gbc.pc(), 0xe22c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe22b), 0x96);
        // 96 03B3
        gbc.setState(0x59f1, 0x1bc6, 0x6f70, 0x65bf, 0x45c3, 0xd8bb, 0x0, 0x1);
        gbc.writeMem(0x59f1, { 0x96 });
        gbc.writeMem(0xd8bb, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1bc6);
        EXPECT(gbc.pc(), 0x59f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8bb), 0x26);
        // 96 03B4
        gbc.setState(0xa258, 0xb420, 0xa0b0, 0xaf6, 0x589a, 0x98b9, 0x1, 0x1);
        gbc.writeMem(0x98b9, { 0xdf });
        gbc.writeMem(0xa258, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb420);
        EXPECT(gbc.pc(), 0xa259);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98b9), 0xdf);
        EXPECT(gbc.readMem(0xa258), 0x96);
        // 96 03B5
        gbc.setState(0x8d56, 0x3ba0, 0x8e80, 0x3256, 0xfb4, 0xdca4, 0x1, 0x1);
        gbc.writeMem(0x8d56, { 0x96 });
        gbc.writeMem(0xdca4, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3ba0);
        EXPECT(gbc.pc(), 0x8d57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d56), 0x96);
        EXPECT(gbc.readMem(0xdca4), 0x66);
        // 96 03B6
        gbc.setState(0x75c9, 0x9849, 0xa8c0, 0xf8d2, 0xf8dd, 0x4195, 0x1, 0x0);
        gbc.writeMem(0x4195, { 0xff });
        gbc.writeMem(0x75c9, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x9849);
        EXPECT(gbc.pc(), 0x75ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 03B7
        gbc.setState(0x542c, 0x57c6, 0x2070, 0x4f31, 0xac35, 0xee0b, 0x1, 0x0);
        gbc.writeMem(0x542c, { 0x96 });
        gbc.writeMem(0xee0b, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x57c6);
        EXPECT(gbc.pc(), 0x542d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee0b), 0x2a);
        // 96 03B8
        gbc.setState(0xa6e6, 0xa024, 0xde20, 0x4bed, 0xdd86, 0xf581, 0x0, 0x1);
        gbc.writeMem(0xa6e6, { 0x96 });
        gbc.writeMem(0xf581, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa024);
        EXPECT(gbc.pc(), 0xa6e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6e6), 0x96);
        EXPECT(gbc.readMem(0xf581), 0xa2);
        // 96 03B9
        gbc.setState(0xa09b, 0xed43, 0xa150, 0xb8bd, 0x9309, 0xe338, 0x0, 0x0);
        gbc.writeMem(0xa09b, { 0x96 });
        gbc.writeMem(0xe338, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xed43);
        EXPECT(gbc.pc(), 0xa09c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa09b), 0x96);
        EXPECT(gbc.readMem(0xe338), 0xd1);
        // 96 03BA
        gbc.setState(0x1659, 0xc04a, 0xc050, 0xf58e, 0xf16b, 0x35c0, 0x1, 0x0);
        gbc.writeMem(0x1659, { 0x96 });
        gbc.writeMem(0x35c0, { 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc04a);
        EXPECT(gbc.pc(), 0x165a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 96 03BB
        gbc.setState(0xbe6b, 0x3a8e, 0x1c60, 0x89f2, 0x585d, 0x7e4b, 0x0, 0x0);
        gbc.writeMem(0x7e4b, { 0x3b });
        gbc.writeMem(0xbe6b, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x3a8e);
        EXPECT(gbc.pc(), 0xbe6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe6b), 0x96);
        // 96 03BC
        gbc.setState(0x1d12, 0x387d, 0x5020, 0x1964, 0xe2bc, 0x79c3, 0x0, 0x1);
        gbc.writeMem(0x1d12, { 0x96 });
        gbc.writeMem(0x79c3, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x387d);
        EXPECT(gbc.pc(), 0x1d13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 03BD
        gbc.setState(0x261b, 0xfd6f, 0x1000, 0x523a, 0xacbe, 0x9a6a, 0x1, 0x0);
        gbc.writeMem(0x261b, { 0x96 });
        gbc.writeMem(0x9a6a, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xfd6f);
        EXPECT(gbc.pc(), 0x261c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a6a), 0x12);
        // 96 03BE
        gbc.setState(0x66d0, 0x94e8, 0xfa70, 0xb2b3, 0xf68, 0xf9c5, 0x1, 0x1);
        gbc.writeMem(0x66d0, { 0x96 });
        gbc.writeMem(0xf9c5, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x94e8);
        EXPECT(gbc.pc(), 0x66d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf9c5), 0x6);
        // 96 03C0
        gbc.setState(0x6c4f, 0xdecb, 0xe7d0, 0xe7d3, 0x1248, 0xbeca, 0x1, 0x1);
        gbc.writeMem(0x6c4f, { 0x96 });
        gbc.writeMem(0xbeca, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xdecb);
        EXPECT(gbc.pc(), 0x6c50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeca), 0x96);
        // 96 03C1
        gbc.setState(0x8b3b, 0xa987, 0x3410, 0x7d30, 0x5662, 0xe93b, 0x1, 0x0);
        gbc.writeMem(0x8b3b, { 0x96 });
        gbc.writeMem(0xe93b, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa987);
        EXPECT(gbc.pc(), 0x8b3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b3b), 0x96);
        EXPECT(gbc.readMem(0xe93b), 0xf8);
        // 96 03C2
        gbc.setState(0xb418, 0x97c3, 0xa8c0, 0xb5e8, 0xa509, 0xc201, 0x1, 0x1);
        gbc.writeMem(0xb418, { 0x96 });
        gbc.writeMem(0xc201, { 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x97c3);
        EXPECT(gbc.pc(), 0xb419);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb418), 0x96);
        EXPECT(gbc.readMem(0xc201), 0x6c);
        // 96 03C3
        gbc.setState(0x8032, 0x7674, 0x2770, 0x4d8c, 0x1635, 0x7493, 0x1, 0x1);
        gbc.writeMem(0x7493, { 0x9a });
        gbc.writeMem(0x8032, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7674);
        EXPECT(gbc.pc(), 0x8033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8032), 0x96);
        // 96 03C4
        gbc.setState(0x749d, 0x20d9, 0x3cf0, 0xc773, 0x4613, 0x3407, 0x0, 0x0);
        gbc.writeMem(0x3407, { 0x51 });
        gbc.writeMem(0x749d, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x20d9);
        EXPECT(gbc.pc(), 0x749e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 03C5
        gbc.setState(0x6649, 0x6f2c, 0x4c30, 0x1ccc, 0x3ec4, 0xb5da, 0x1, 0x0);
        gbc.writeMem(0x6649, { 0x96 });
        gbc.writeMem(0xb5da, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6f2c);
        EXPECT(gbc.pc(), 0x664a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5da), 0xa2);
        // 96 03C6
        gbc.setState(0x24e0, 0xa711, 0x9a0, 0x73bc, 0x2b79, 0x6cd2, 0x1, 0x1);
        gbc.writeMem(0x24e0, { 0x96 });
        gbc.writeMem(0x6cd2, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa711);
        EXPECT(gbc.pc(), 0x24e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 03C7
        gbc.setState(0xbc03, 0x749a, 0xac90, 0x535f, 0x9f8f, 0xda05, 0x1, 0x1);
        gbc.writeMem(0xbc03, { 0x96 });
        gbc.writeMem(0xda05, { 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x749a);
        EXPECT(gbc.pc(), 0xbc04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc03), 0x96);
        EXPECT(gbc.readMem(0xda05), 0x34);
        // 96 03C8
        gbc.setState(0x9d4d, 0x473d, 0x4f00, 0x1cc0, 0x7052, 0x5cd, 0x1, 0x1);
        gbc.writeMem(0x5cd, { 0x16 });
        gbc.writeMem(0x9d4d, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x473d);
        EXPECT(gbc.pc(), 0x9d4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d4d), 0x96);
        // 96 03C9
        gbc.setState(0xb4b2, 0x7619, 0x4b00, 0x5518, 0x5f7d, 0x5447, 0x1, 0x0);
        gbc.writeMem(0x5447, { 0xcb });
        gbc.writeMem(0xb4b2, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7619);
        EXPECT(gbc.pc(), 0xb4b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4b2), 0x96);
        // 96 03CA
        gbc.setState(0x5120, 0x6642, 0x9fa0, 0x7375, 0x6f6c, 0xe1e9, 0x1, 0x0);
        gbc.writeMem(0x5120, { 0x96 });
        gbc.writeMem(0xe1e9, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x6642);
        EXPECT(gbc.pc(), 0x5121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1e9), 0xa5);
        // 96 03CB
        gbc.setState(0x834f, 0x9c7b, 0xe420, 0x7bb2, 0x7214, 0x28a2, 0x1, 0x0);
        gbc.writeMem(0x28a2, { 0xa2 });
        gbc.writeMem(0x834f, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9c7b);
        EXPECT(gbc.pc(), 0x8350);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x834f), 0x96);
        // 96 03CC
        gbc.setState(0xaf3, 0xd0c4, 0xa430, 0x4133, 0x7558, 0x7813, 0x1, 0x1);
        gbc.writeMem(0xaf3, { 0x96 });
        gbc.writeMem(0x7813, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd0c4);
        EXPECT(gbc.pc(), 0xaf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 03CD
        gbc.setState(0x725d, 0x38f2, 0xf570, 0x4144, 0x8925, 0x10c7, 0x0, 0x1);
        gbc.writeMem(0x10c7, { 0x43 });
        gbc.writeMem(0x725d, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x38f2);
        EXPECT(gbc.pc(), 0x725e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 03CE
        gbc.setState(0x23a7, 0x2e84, 0x63e0, 0xf3bc, 0x1a5b, 0xb675, 0x1, 0x1);
        gbc.writeMem(0x23a7, { 0x96 });
        gbc.writeMem(0xb675, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x2e84);
        EXPECT(gbc.pc(), 0x23a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb675), 0x70);
        // 96 03CF
        gbc.setState(0x7f9d, 0xb39, 0xa5d0, 0xaf31, 0x79cd, 0x136c, 0x1, 0x0);
        gbc.writeMem(0x136c, { 0xce });
        gbc.writeMem(0x7f9d, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xb39);
        EXPECT(gbc.pc(), 0x7f9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 03D0
        gbc.setState(0x54f4, 0x5761, 0x8c10, 0x9e1a, 0xaf02, 0x8259, 0x0, 0x1);
        gbc.writeMem(0x54f4, { 0x96 });
        gbc.writeMem(0x8259, { 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5761);
        EXPECT(gbc.pc(), 0x54f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8259), 0xcd);
        // 96 03D1
        gbc.setState(0x34b8, 0x636e, 0x3770, 0x121d, 0xcca7, 0x807e, 0x0, 0x0);
        gbc.writeMem(0x34b8, { 0x96 });
        gbc.writeMem(0x807e, { 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x636e);
        EXPECT(gbc.pc(), 0x34b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x807e), 0x31);
        // 96 03D2
        gbc.setState(0x4f7c, 0x7bd9, 0x48a0, 0x7195, 0xe642, 0x64af, 0x1, 0x1);
        gbc.writeMem(0x4f7c, { 0x96 });
        gbc.writeMem(0x64af, { 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7bd9);
        EXPECT(gbc.pc(), 0x4f7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 96 03D3
        gbc.setState(0x2d83, 0x9316, 0xab70, 0x7688, 0xa05b, 0x5ee6, 0x1, 0x0);
        gbc.writeMem(0x2d83, { 0x96 });
        gbc.writeMem(0x5ee6, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9316);
        EXPECT(gbc.pc(), 0x2d84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 03D4
        gbc.setState(0x4875, 0x77ae, 0x3950, 0x6ff1, 0x9174, 0x403, 0x0, 0x1);
        gbc.writeMem(0x403, { 0x87 });
        gbc.writeMem(0x4875, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x77ae);
        EXPECT(gbc.pc(), 0x4876);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 96 03D5
        gbc.setState(0x9d72, 0xfdd2, 0xf7d0, 0xd38d, 0x6ff7, 0x93af, 0x0, 0x0);
        gbc.writeMem(0x93af, { 0xc3 });
        gbc.writeMem(0x9d72, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xfdd2);
        EXPECT(gbc.pc(), 0x9d73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93af), 0xc3);
        EXPECT(gbc.readMem(0x9d72), 0x96);
        // 96 03D7
        gbc.setState(0x51fc, 0x1315, 0x5b10, 0x4446, 0x5caf, 0x8fc4, 0x0, 0x1);
        gbc.writeMem(0x51fc, { 0x96 });
        gbc.writeMem(0x8fc4, { 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1315);
        EXPECT(gbc.pc(), 0x51fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fc4), 0xb4);
        // 96 03D8
        gbc.setState(0xa5d7, 0x23d9, 0xad0, 0x5a4d, 0xd782, 0xcfe0, 0x1, 0x1);
        gbc.writeMem(0xa5d7, { 0x96 });
        gbc.writeMem(0xcfe0, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x23d9);
        EXPECT(gbc.pc(), 0xa5d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5d7), 0x96);
        EXPECT(gbc.readMem(0xcfe0), 0xfe);
        // 96 03D9
        gbc.setState(0x3fdc, 0xe551, 0x9130, 0xe68c, 0x2461, 0x9f19, 0x0, 0x1);
        gbc.writeMem(0x3fdc, { 0x96 });
        gbc.writeMem(0x9f19, { 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe551);
        EXPECT(gbc.pc(), 0x3fdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f19), 0xb5);
        // 96 03DA
        gbc.setState(0xc193, 0x4973, 0x3d10, 0xa405, 0x69d4, 0xc181, 0x0, 0x1);
        gbc.writeMem(0xc181, { 0x76 });
        gbc.writeMem(0xc193, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4973);
        EXPECT(gbc.pc(), 0xc194);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc181), 0x76);
        EXPECT(gbc.readMem(0xc193), 0x96);
        // 96 03DB
        gbc.setState(0xaa69, 0xe763, 0xff10, 0xe84, 0x65e2, 0x224a, 0x1, 0x1);
        gbc.writeMem(0x224a, { 0x4d });
        gbc.writeMem(0xaa69, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xe763);
        EXPECT(gbc.pc(), 0xaa6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa69), 0x96);
        // 96 03DC
        gbc.setState(0x11e5, 0xcd06, 0xd1f0, 0xf467, 0x32a1, 0xa504, 0x1, 0x0);
        gbc.writeMem(0x11e5, { 0x96 });
        gbc.writeMem(0xa504, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xcd06);
        EXPECT(gbc.pc(), 0x11e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa504), 0xda);
        // 96 03DD
        gbc.setState(0x72e, 0x1e72, 0x5d90, 0x8e32, 0x461c, 0xad72, 0x0, 0x1);
        gbc.writeMem(0x72e, { 0x96 });
        gbc.writeMem(0xad72, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1e72);
        EXPECT(gbc.pc(), 0x72f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad72), 0x2);
        // 96 03DE
        gbc.setState(0x872e, 0xa5e, 0x4f80, 0x9ba3, 0x7c13, 0x2529, 0x1, 0x1);
        gbc.writeMem(0x2529, { 0x52 });
        gbc.writeMem(0x872e, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xa5e);
        EXPECT(gbc.pc(), 0x872f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x872e), 0x96);
        // 96 03DF
        gbc.setState(0x8839, 0xbc2e, 0x4580, 0x6703, 0x71c3, 0xf165, 0x0, 0x1);
        gbc.writeMem(0x8839, { 0x96 });
        gbc.writeMem(0xf165, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xbc2e);
        EXPECT(gbc.pc(), 0x883a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8839), 0x96);
        EXPECT(gbc.readMem(0xf165), 0xf);
        // 96 03E0
        gbc.setState(0x4fb5, 0x780f, 0x34e0, 0xee4f, 0x1434, 0xe7d7, 0x1, 0x1);
        gbc.writeMem(0x4fb5, { 0x96 });
        gbc.writeMem(0xe7d7, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x780f);
        EXPECT(gbc.pc(), 0x4fb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7d7), 0xbe);
        // 96 03E1
        gbc.setState(0x5ec9, 0x48ff, 0x640, 0x5059, 0xcdc9, 0x87d3, 0x1, 0x1);
        gbc.writeMem(0x5ec9, { 0x96 });
        gbc.writeMem(0x87d3, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x48ff);
        EXPECT(gbc.pc(), 0x5eca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87d3), 0xd);
        // 96 03E2
        gbc.setState(0xc210, 0xeea2, 0x8b60, 0xd743, 0x9d54, 0x7efc, 0x0, 0x0);
        gbc.writeMem(0x7efc, { 0xb });
        gbc.writeMem(0xc210, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xeea2);
        EXPECT(gbc.pc(), 0xc211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc210), 0x96);
        // 96 03E3
        gbc.setState(0x6ddb, 0xe67e, 0xc570, 0x90a9, 0x55bd, 0x97dc, 0x1, 0x0);
        gbc.writeMem(0x6ddb, { 0x96 });
        gbc.writeMem(0x97dc, { 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe67e);
        EXPECT(gbc.pc(), 0x6ddc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97dc), 0xb7);
        // 96 03E4
        gbc.setState(0x10e5, 0x99e9, 0x58f0, 0xa57d, 0x23fc, 0x67bb, 0x0, 0x1);
        gbc.writeMem(0x10e5, { 0x96 });
        gbc.writeMem(0x67bb, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x99e9);
        EXPECT(gbc.pc(), 0x10e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 03E5
        gbc.setState(0x1a4, 0xc779, 0xc9f0, 0x942, 0x9ce9, 0x176, 0x1, 0x1);
        gbc.writeMem(0x176, { 0x44 });
        gbc.writeMem(0x1a4, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc779);
        EXPECT(gbc.pc(), 0x1a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 96 03E6
        gbc.setState(0x1ca7, 0x93e4, 0xe5c0, 0x5b1e, 0xa199, 0x8e59, 0x1, 0x0);
        gbc.writeMem(0x1ca7, { 0x96 });
        gbc.writeMem(0x8e59, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x93e4);
        EXPECT(gbc.pc(), 0x1ca8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e59), 0x75);
        // 96 03E7
        gbc.setState(0xd510, 0xd8fe, 0x4d10, 0xc758, 0xea47, 0x38b6, 0x0, 0x0);
        gbc.writeMem(0x38b6, { 0x3e });
        gbc.writeMem(0xd510, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd8fe);
        EXPECT(gbc.pc(), 0xd511);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd510), 0x96);
    }
}
#endif
