#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_78)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_78) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 78 0000
        gbc.setState(0x5f71, 0xe22, 0x46e0, 0x8cc2, 0xcdf8, 0xe58d, 0x0, 0x1);
        gbc.writeMem(0x5f71, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe22);
        EXPECT(gbc.pc(), 0x5f72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0001
        gbc.setState(0x875e, 0x65e9, 0xd9c0, 0xf0d2, 0x538a, 0xfd78, 0x0, 0x1);
        gbc.writeMem(0x875e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x65e9);
        EXPECT(gbc.pc(), 0x875f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x875e), 0x78);
        // 78 0002
        gbc.setState(0x7b93, 0xb753, 0xc230, 0xe116, 0x44ea, 0x3a46, 0x1, 0x0);
        gbc.writeMem(0x7b93, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xb753);
        EXPECT(gbc.pc(), 0x7b94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0003
        gbc.setState(0xcdee, 0xee9f, 0x2200, 0xf5ee, 0x5a6e, 0x5d90, 0x0, 0x1);
        gbc.writeMem(0xcdee, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xee9f);
        EXPECT(gbc.pc(), 0xcdef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdee), 0x78);
        // 78 0004
        gbc.setState(0xafc4, 0xf416, 0x2300, 0x5f81, 0x5cf2, 0x8afc, 0x1, 0x1);
        gbc.writeMem(0xafc4, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xf416);
        EXPECT(gbc.pc(), 0xafc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafc4), 0x78);
        // 78 0005
        gbc.setState(0xdcfa, 0x429e, 0xec0, 0xf98b, 0xbee7, 0x9eaf, 0x0, 0x1);
        gbc.writeMem(0xdcfa, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x429e);
        EXPECT(gbc.pc(), 0xdcfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcfa), 0x78);
        // 78 0006
        gbc.setState(0xcd30, 0x8dd1, 0x6b60, 0x2c75, 0x570d, 0xe3ef, 0x1, 0x1);
        gbc.writeMem(0xcd30, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8dd1);
        EXPECT(gbc.pc(), 0xcd31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd30), 0x78);
        // 78 0007
        gbc.setState(0xb480, 0x1690, 0xc3d0, 0x108c, 0xfd62, 0xe308, 0x0, 0x0);
        gbc.writeMem(0xb480, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1690);
        EXPECT(gbc.pc(), 0xb481);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb480), 0x78);
        // 78 0008
        gbc.setState(0xd64b, 0x5a03, 0xbaa0, 0x86f9, 0xbec6, 0x728a, 0x0, 0x1);
        gbc.writeMem(0xd64b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5a03);
        EXPECT(gbc.pc(), 0xd64c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd64b), 0x78);
        // 78 0009
        gbc.setState(0x589, 0x3e9b, 0xbcd0, 0xf708, 0xa9f0, 0xe368, 0x1, 0x0);
        gbc.writeMem(0x589, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3e9b);
        EXPECT(gbc.pc(), 0x58a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 000A
        gbc.setState(0x93, 0x916c, 0x6f00, 0xe902, 0xc4c8, 0xbea4, 0x0, 0x1);
        gbc.writeMem(0x93, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x916c);
        EXPECT(gbc.pc(), 0x94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 000B
        gbc.setState(0x7396, 0xbfe2, 0x36c0, 0xad, 0xfec7, 0x860a, 0x1, 0x1);
        gbc.writeMem(0x7396, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xbfe2);
        EXPECT(gbc.pc(), 0x7397);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 000C
        gbc.setState(0x21c, 0x4d4, 0x64f0, 0x1424, 0x9abf, 0xf566, 0x0, 0x0);
        gbc.writeMem(0x21c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4d4);
        EXPECT(gbc.pc(), 0x21d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 000D
        gbc.setState(0x3d2c, 0xfdc1, 0x16a0, 0x9e79, 0xef2b, 0xacec, 0x1, 0x1);
        gbc.writeMem(0x3d2c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xfdc1);
        EXPECT(gbc.pc(), 0x3d2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 000E
        gbc.setState(0x447c, 0xe0ac, 0xfb50, 0x3f57, 0xbd6c, 0x1795, 0x0, 0x1);
        gbc.writeMem(0x447c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xe0ac);
        EXPECT(gbc.pc(), 0x447d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 000F
        gbc.setState(0xa216, 0x5886, 0x5380, 0x1ea, 0x33cc, 0x7a47, 0x1, 0x1);
        gbc.writeMem(0xa216, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x5886);
        EXPECT(gbc.pc(), 0xa217);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa216), 0x78);
        // 78 0010
        gbc.setState(0xab6d, 0x8653, 0x370, 0xbb2a, 0xee39, 0xc284, 0x0, 0x1);
        gbc.writeMem(0xab6d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x8653);
        EXPECT(gbc.pc(), 0xab6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab6d), 0x78);
        // 78 0011
        gbc.setState(0x4fe2, 0x62b8, 0x7a10, 0x91ca, 0xd4c9, 0x1104, 0x1, 0x1);
        gbc.writeMem(0x4fe2, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x62b8);
        EXPECT(gbc.pc(), 0x4fe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0012
        gbc.setState(0xc6d6, 0xe860, 0x790, 0x68e3, 0x3d20, 0x8dae, 0x1, 0x0);
        gbc.writeMem(0xc6d6, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe860);
        EXPECT(gbc.pc(), 0xc6d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6d6), 0x78);
        // 78 0013
        gbc.setState(0xdc, 0xb23d, 0x8030, 0x484c, 0x54fb, 0x775a, 0x0, 0x1);
        gbc.writeMem(0xdc, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb23d);
        EXPECT(gbc.pc(), 0xdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0014
        gbc.setState(0xb61b, 0x1b43, 0x1e40, 0xf2d6, 0x2e89, 0x6b83, 0x1, 0x1);
        gbc.writeMem(0xb61b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x1b43);
        EXPECT(gbc.pc(), 0xb61c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb61b), 0x78);
        // 78 0015
        gbc.setState(0xa43f, 0xaacb, 0x3920, 0xf9aa, 0xddbb, 0xd8b2, 0x0, 0x0);
        gbc.writeMem(0xa43f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xaacb);
        EXPECT(gbc.pc(), 0xa440);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa43f), 0x78);
        // 78 0016
        gbc.setState(0x1e0, 0xd437, 0x1260, 0xcb7f, 0x4ad4, 0xa32f, 0x1, 0x0);
        gbc.writeMem(0x1e0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xd437);
        EXPECT(gbc.pc(), 0x1e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0017
        gbc.setState(0xc672, 0x5fb, 0x74c0, 0xd0d5, 0x8f18, 0xf0a4, 0x1, 0x1);
        gbc.writeMem(0xc672, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x5fb);
        EXPECT(gbc.pc(), 0xc673);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc672), 0x78);
        // 78 0018
        gbc.setState(0x788, 0xd6bb, 0xf860, 0xc34, 0x6fae, 0xda18, 0x1, 0x1);
        gbc.writeMem(0x788, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd6bb);
        EXPECT(gbc.pc(), 0x789);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0019
        gbc.setState(0x4f21, 0x3c38, 0x4590, 0x91ac, 0xafb4, 0x3c33, 0x0, 0x1);
        gbc.writeMem(0x4f21, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3c38);
        EXPECT(gbc.pc(), 0x4f22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 001B
        gbc.setState(0x8582, 0x7c0d, 0xe200, 0xdf41, 0xfb7c, 0x619e, 0x0, 0x0);
        gbc.writeMem(0x8582, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7c0d);
        EXPECT(gbc.pc(), 0x8583);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8582), 0x78);
        // 78 001C
        gbc.setState(0x75a1, 0x62dd, 0x30f0, 0x16bb, 0x248d, 0x6ea, 0x0, 0x0);
        gbc.writeMem(0x75a1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x62dd);
        EXPECT(gbc.pc(), 0x75a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 001D
        gbc.setState(0x387e, 0x3475, 0x5e30, 0x34b2, 0x2c10, 0xc371, 0x1, 0x1);
        gbc.writeMem(0x387e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x3475);
        EXPECT(gbc.pc(), 0x387f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 001E
        gbc.setState(0xab54, 0x485f, 0xb110, 0xae0a, 0x4b33, 0x5dcb, 0x1, 0x1);
        gbc.writeMem(0xab54, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x485f);
        EXPECT(gbc.pc(), 0xab55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab54), 0x78);
        // 78 001F
        gbc.setState(0xb09a, 0x349a, 0x5bb0, 0x902e, 0xeef4, 0x3e2c, 0x0, 0x1);
        gbc.writeMem(0xb09a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x349a);
        EXPECT(gbc.pc(), 0xb09b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb09a), 0x78);
        // 78 0020
        gbc.setState(0x6803, 0x424e, 0x88f0, 0x868e, 0xcc42, 0xdd0e, 0x0, 0x0);
        gbc.writeMem(0x6803, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x424e);
        EXPECT(gbc.pc(), 0x6804);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0021
        gbc.setState(0x1b6, 0x9fe6, 0x8c20, 0xadad, 0x648d, 0xc4e4, 0x1, 0x0);
        gbc.writeMem(0x1b6, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9fe6);
        EXPECT(gbc.pc(), 0x1b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0022
        gbc.setState(0x541c, 0xe63a, 0xb690, 0xb719, 0xb68e, 0xb9a4, 0x0, 0x1);
        gbc.writeMem(0x541c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe63a);
        EXPECT(gbc.pc(), 0x541d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0023
        gbc.setState(0x4a7c, 0xcaef, 0xc230, 0xd5a0, 0x9e5a, 0x82f0, 0x1, 0x0);
        gbc.writeMem(0x4a7c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xcaef);
        EXPECT(gbc.pc(), 0x4a7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0024
        gbc.setState(0xa55c, 0x6ac9, 0x8cb0, 0x486, 0x5a85, 0xbe58, 0x0, 0x0);
        gbc.writeMem(0xa55c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6ac9);
        EXPECT(gbc.pc(), 0xa55d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa55c), 0x78);
        // 78 0025
        gbc.setState(0x10cf, 0x9ad, 0xc170, 0x6a16, 0xbb62, 0xcd44, 0x1, 0x0);
        gbc.writeMem(0x10cf, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9ad);
        EXPECT(gbc.pc(), 0x10d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0026
        gbc.setState(0x5cf, 0xbca9, 0xb6f0, 0x89b4, 0xbd62, 0x5edc, 0x0, 0x1);
        gbc.writeMem(0x5cf, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xbca9);
        EXPECT(gbc.pc(), 0x5d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0027
        gbc.setState(0xd0de, 0x64ef, 0x32a0, 0x8300, 0x2ad3, 0x27fa, 0x1, 0x0);
        gbc.writeMem(0xd0de, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x64ef);
        EXPECT(gbc.pc(), 0xd0df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0de), 0x78);
        // 78 0028
        gbc.setState(0x7472, 0x1cbd, 0x2a00, 0x8058, 0xfb7a, 0x8bf9, 0x0, 0x1);
        gbc.writeMem(0x7472, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1cbd);
        EXPECT(gbc.pc(), 0x7473);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0029
        gbc.setState(0x5af7, 0x8edf, 0x37d0, 0x18b9, 0xbe8f, 0xae58, 0x1, 0x1);
        gbc.writeMem(0x5af7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8edf);
        EXPECT(gbc.pc(), 0x5af8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 002A
        gbc.setState(0xedb7, 0x1d2f, 0x3b80, 0xf995, 0x422e, 0xf34b, 0x0, 0x0);
        gbc.writeMem(0xedb7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1d2f);
        EXPECT(gbc.pc(), 0xedb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedb7), 0x78);
        // 78 002B
        gbc.setState(0x4ae0, 0xb71a, 0x3630, 0x9506, 0x714b, 0xde3e, 0x1, 0x1);
        gbc.writeMem(0x4ae0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb71a);
        EXPECT(gbc.pc(), 0x4ae1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 002C
        gbc.setState(0x87b2, 0xa869, 0x55f0, 0x72ba, 0x9079, 0xcac4, 0x0, 0x1);
        gbc.writeMem(0x87b2, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xa869);
        EXPECT(gbc.pc(), 0x87b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87b2), 0x78);
        // 78 002D
        gbc.setState(0x3c10, 0x9905, 0xce40, 0xa53c, 0x904e, 0xae18, 0x0, 0x1);
        gbc.writeMem(0x3c10, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9905);
        EXPECT(gbc.pc(), 0x3c11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 002E
        gbc.setState(0xcee3, 0xddc4, 0x4e40, 0xeb65, 0xc35c, 0xad46, 0x1, 0x0);
        gbc.writeMem(0xcee3, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xddc4);
        EXPECT(gbc.pc(), 0xcee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcee3), 0x78);
        // 78 002F
        gbc.setState(0x1b77, 0x7563, 0x2410, 0xa9c6, 0x2417, 0x5b38, 0x0, 0x0);
        gbc.writeMem(0x1b77, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x7563);
        EXPECT(gbc.pc(), 0x1b78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0031
        gbc.setState(0x9cdf, 0x83dc, 0x6290, 0xedf3, 0xd375, 0xe1dc, 0x0, 0x1);
        gbc.writeMem(0x9cdf, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x83dc);
        EXPECT(gbc.pc(), 0x9ce0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cdf), 0x78);
        // 78 0032
        gbc.setState(0xd3b5, 0x32d6, 0x62b0, 0x2bab, 0x8ac4, 0x2792, 0x0, 0x0);
        gbc.writeMem(0xd3b5, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x32d6);
        EXPECT(gbc.pc(), 0xd3b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3b5), 0x78);
        // 78 0033
        gbc.setState(0x16a4, 0xe60d, 0xb010, 0xca1, 0xb9f, 0xa47b, 0x0, 0x0);
        gbc.writeMem(0x16a4, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe60d);
        EXPECT(gbc.pc(), 0x16a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0034
        gbc.setState(0xe9ce, 0x8897, 0x9140, 0xf8cd, 0xa3e6, 0xd1ca, 0x1, 0x0);
        gbc.writeMem(0xe9ce, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8897);
        EXPECT(gbc.pc(), 0xe9cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ce), 0x78);
        // 78 0035
        gbc.setState(0x2028, 0xeb3d, 0xe750, 0xc7bd, 0x14e3, 0x5de, 0x1, 0x0);
        gbc.writeMem(0x2028, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xeb3d);
        EXPECT(gbc.pc(), 0x2029);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0036
        gbc.setState(0x485, 0x9243, 0x47c0, 0xbe17, 0xab7f, 0x4684, 0x0, 0x1);
        gbc.writeMem(0x485, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x9243);
        EXPECT(gbc.pc(), 0x486);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0037
        gbc.setState(0x42bd, 0x692e, 0xb810, 0x64ac, 0xa134, 0x5333, 0x0, 0x1);
        gbc.writeMem(0x42bd, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x692e);
        EXPECT(gbc.pc(), 0x42be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0038
        gbc.setState(0xd7ed, 0xe2c4, 0xecd0, 0x3f28, 0x378c, 0x1b63, 0x0, 0x0);
        gbc.writeMem(0xd7ed, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xe2c4);
        EXPECT(gbc.pc(), 0xd7ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7ed), 0x78);
        // 78 0039
        gbc.setState(0x332c, 0xa367, 0x940, 0x78d4, 0x2d93, 0x2660, 0x1, 0x1);
        gbc.writeMem(0x332c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa367);
        EXPECT(gbc.pc(), 0x332d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 003A
        gbc.setState(0x7a18, 0x940b, 0xd0b0, 0x7136, 0x363b, 0x694e, 0x1, 0x0);
        gbc.writeMem(0x7a18, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x940b);
        EXPECT(gbc.pc(), 0x7a19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 003B
        gbc.setState(0xb6f8, 0xe14d, 0xb3f0, 0x176e, 0x77d0, 0xb69c, 0x1, 0x0);
        gbc.writeMem(0xb6f8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xe14d);
        EXPECT(gbc.pc(), 0xb6f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6f8), 0x78);
        // 78 003C
        gbc.setState(0x8049, 0x7568, 0xdac0, 0x30e0, 0x84f9, 0xbebc, 0x0, 0x0);
        gbc.writeMem(0x8049, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7568);
        EXPECT(gbc.pc(), 0x804a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8049), 0x78);
        // 78 003D
        gbc.setState(0xd5f4, 0x75b0, 0x5f80, 0xfa5, 0xa88b, 0xe95d, 0x0, 0x1);
        gbc.writeMem(0xd5f4, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x75b0);
        EXPECT(gbc.pc(), 0xd5f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5f4), 0x78);
        // 78 003E
        gbc.setState(0x3e9f, 0x7b6, 0xc610, 0x89a7, 0x53f0, 0x5b2f, 0x1, 0x0);
        gbc.writeMem(0x3e9f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7b6);
        EXPECT(gbc.pc(), 0x3ea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 003F
        gbc.setState(0xa3c8, 0xdaef, 0x2700, 0x9017, 0x797b, 0xf376, 0x0, 0x0);
        gbc.writeMem(0xa3c8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xdaef);
        EXPECT(gbc.pc(), 0xa3c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3c8), 0x78);
        // 78 0040
        gbc.setState(0x51d1, 0xf928, 0xf580, 0xa27c, 0xc685, 0x5991, 0x1, 0x1);
        gbc.writeMem(0x51d1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xf928);
        EXPECT(gbc.pc(), 0x51d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0041
        gbc.setState(0x2351, 0xc777, 0x5130, 0x2f20, 0xc3, 0xd6ce, 0x0, 0x1);
        gbc.writeMem(0x2351, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xc777);
        EXPECT(gbc.pc(), 0x2352);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0042
        gbc.setState(0x6854, 0xa4f0, 0x8e60, 0x651d, 0xc421, 0x90be, 0x0, 0x0);
        gbc.writeMem(0x6854, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xa4f0);
        EXPECT(gbc.pc(), 0x6855);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0043
        gbc.setState(0xc0d1, 0xc820, 0xeaf0, 0x35dc, 0x3238, 0x8ced, 0x1, 0x0);
        gbc.writeMem(0xc0d1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc820);
        EXPECT(gbc.pc(), 0xc0d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0d1), 0x78);
        // 78 0044
        gbc.setState(0xd590, 0x18fa, 0x9570, 0xb764, 0x2da8, 0x23d8, 0x0, 0x1);
        gbc.writeMem(0xd590, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x18fa);
        EXPECT(gbc.pc(), 0xd591);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd590), 0x78);
        // 78 0045
        gbc.setState(0x436, 0xd4b4, 0x3ce0, 0xfb18, 0x7e35, 0x4e6, 0x0, 0x1);
        gbc.writeMem(0x436, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd4b4);
        EXPECT(gbc.pc(), 0x437);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0046
        gbc.setState(0xd2b7, 0x6ffd, 0xb750, 0x2a1a, 0x4702, 0xe3d0, 0x1, 0x1);
        gbc.writeMem(0xd2b7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x6ffd);
        EXPECT(gbc.pc(), 0xd2b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2b7), 0x78);
        // 78 0047
        gbc.setState(0x9ae4, 0x3a87, 0x6d0, 0xadca, 0x1d78, 0x206a, 0x0, 0x0);
        gbc.writeMem(0x9ae4, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3a87);
        EXPECT(gbc.pc(), 0x9ae5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ae4), 0x78);
        // 78 0048
        gbc.setState(0x7476, 0x4e16, 0xee20, 0x993, 0xc046, 0x3f5b, 0x0, 0x1);
        gbc.writeMem(0x7476, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4e16);
        EXPECT(gbc.pc(), 0x7477);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0049
        gbc.setState(0xd08d, 0x3086, 0x6790, 0xa150, 0x140c, 0x997b, 0x0, 0x1);
        gbc.writeMem(0xd08d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x3086);
        EXPECT(gbc.pc(), 0xd08e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd08d), 0x78);
        // 78 004A
        gbc.setState(0x3e92, 0x8e7e, 0x3e80, 0xb44d, 0x9be4, 0x2b07, 0x0, 0x0);
        gbc.writeMem(0x3e92, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8e7e);
        EXPECT(gbc.pc(), 0x3e93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 004B
        gbc.setState(0x56f9, 0x1a34, 0xad60, 0xe676, 0xd7af, 0x20e7, 0x0, 0x0);
        gbc.writeMem(0x56f9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1a34);
        EXPECT(gbc.pc(), 0x56fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 004C
        gbc.setState(0x7511, 0x789a, 0x9ef0, 0x2a08, 0x3955, 0x400e, 0x0, 0x1);
        gbc.writeMem(0x7511, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x789a);
        EXPECT(gbc.pc(), 0x7512);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 004E
        gbc.setState(0xe2e4, 0xffa8, 0xb920, 0x9d42, 0xdeaa, 0x6228, 0x0, 0x0);
        gbc.writeMem(0xe2e4, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xffa8);
        EXPECT(gbc.pc(), 0xe2e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2e4), 0x78);
        // 78 004F
        gbc.setState(0x92b, 0x527d, 0x5a20, 0x99c8, 0xb0f8, 0x3742, 0x1, 0x1);
        gbc.writeMem(0x92b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x527d);
        EXPECT(gbc.pc(), 0x92c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0050
        gbc.setState(0x4c5f, 0xe365, 0x4f50, 0x8caa, 0x342e, 0x7a45, 0x0, 0x1);
        gbc.writeMem(0x4c5f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xe365);
        EXPECT(gbc.pc(), 0x4c60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0051
        gbc.setState(0x48b7, 0xc4e0, 0x3ea0, 0xac06, 0xb28f, 0x5c3, 0x1, 0x1);
        gbc.writeMem(0x48b7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc4e0);
        EXPECT(gbc.pc(), 0x48b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0052
        gbc.setState(0x55d2, 0xdc5b, 0xdd0, 0xa311, 0x839c, 0x8d36, 0x1, 0x1);
        gbc.writeMem(0x55d2, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xdc5b);
        EXPECT(gbc.pc(), 0x55d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0053
        gbc.setState(0x7e4e, 0x8a39, 0xf1f0, 0xd17, 0x464b, 0xa731, 0x1, 0x1);
        gbc.writeMem(0x7e4e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8a39);
        EXPECT(gbc.pc(), 0x7e4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0055
        gbc.setState(0x348a, 0xd66f, 0x5bd0, 0xb3f4, 0xf6b5, 0x44f9, 0x0, 0x0);
        gbc.writeMem(0x348a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd66f);
        EXPECT(gbc.pc(), 0x348b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0056
        gbc.setState(0xa20, 0xd1c8, 0x4580, 0xed5e, 0x998b, 0x9111, 0x0, 0x0);
        gbc.writeMem(0xa20, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xd1c8);
        EXPECT(gbc.pc(), 0xa21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0057
        gbc.setState(0x9cea, 0x665, 0x530, 0xb58f, 0x35be, 0x4be2, 0x0, 0x1);
        gbc.writeMem(0x9cea, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x665);
        EXPECT(gbc.pc(), 0x9ceb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cea), 0x78);
        // 78 0058
        gbc.setState(0xa05, 0x464c, 0xe910, 0xaecc, 0x1bbf, 0x43c7, 0x1, 0x1);
        gbc.writeMem(0xa05, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x464c);
        EXPECT(gbc.pc(), 0xa06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 005A
        gbc.setState(0x36e0, 0x6642, 0x7a50, 0x2c5d, 0x72a4, 0xf437, 0x1, 0x1);
        gbc.writeMem(0x36e0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6642);
        EXPECT(gbc.pc(), 0x36e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 005B
        gbc.setState(0x6973, 0x61f, 0x8740, 0x6c15, 0x3b42, 0xdfdc, 0x0, 0x0);
        gbc.writeMem(0x6973, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x61f);
        EXPECT(gbc.pc(), 0x6974);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 005C
        gbc.setState(0x2f7e, 0xaace, 0x30, 0x55e9, 0xfe83, 0x9b5c, 0x1, 0x1);
        gbc.writeMem(0x2f7e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xaace);
        EXPECT(gbc.pc(), 0x2f7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 005D
        gbc.setState(0xbbde, 0x294e, 0xcba0, 0xfe5d, 0x83d, 0x1dce, 0x0, 0x1);
        gbc.writeMem(0xbbde, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x294e);
        EXPECT(gbc.pc(), 0xbbdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbde), 0x78);
        // 78 005E
        gbc.setState(0xeff5, 0x8ba1, 0x3fb0, 0x71e4, 0x6221, 0x7ace, 0x0, 0x1);
        gbc.writeMem(0xeff5, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x8ba1);
        EXPECT(gbc.pc(), 0xeff6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeff5), 0x78);
        // 78 005F
        gbc.setState(0x8034, 0x3202, 0xba10, 0x87e6, 0x34f2, 0xdb07, 0x0, 0x1);
        gbc.writeMem(0x8034, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3202);
        EXPECT(gbc.pc(), 0x8035);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8034), 0x78);
        // 78 0060
        gbc.setState(0x6a59, 0xdad8, 0xedd0, 0xa45, 0x23af, 0x6ec7, 0x0, 0x0);
        gbc.writeMem(0x6a59, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xdad8);
        EXPECT(gbc.pc(), 0x6a5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0061
        gbc.setState(0xa313, 0x5ad5, 0x2790, 0x2061, 0x6bc0, 0x68c3, 0x0, 0x0);
        gbc.writeMem(0xa313, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x5ad5);
        EXPECT(gbc.pc(), 0xa314);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa313), 0x78);
        // 78 0062
        gbc.setState(0xd3fa, 0x87a, 0xb090, 0x3df2, 0xa8b8, 0x84ee, 0x1, 0x1);
        gbc.writeMem(0xd3fa, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x87a);
        EXPECT(gbc.pc(), 0xd3fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3fa), 0x78);
        // 78 0063
        gbc.setState(0x7019, 0x33c, 0x3780, 0x861f, 0xa633, 0xeb0b, 0x0, 0x1);
        gbc.writeMem(0x7019, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x33c);
        EXPECT(gbc.pc(), 0x701a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0064
        gbc.setState(0xadc9, 0xd4ae, 0x3db0, 0xc6bc, 0xdb3f, 0x74b0, 0x1, 0x1);
        gbc.writeMem(0xadc9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd4ae);
        EXPECT(gbc.pc(), 0xadca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadc9), 0x78);
        // 78 0065
        gbc.setState(0x396d, 0x4d56, 0xd940, 0xb832, 0xf291, 0x6ee7, 0x0, 0x1);
        gbc.writeMem(0x396d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4d56);
        EXPECT(gbc.pc(), 0x396e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0066
        gbc.setState(0x53c4, 0xedf, 0x1c20, 0x815, 0xb775, 0xb54d, 0x1, 0x1);
        gbc.writeMem(0x53c4, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xedf);
        EXPECT(gbc.pc(), 0x53c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0067
        gbc.setState(0x32ee, 0x1076, 0xdde0, 0x3002, 0xd80f, 0x1e07, 0x0, 0x1);
        gbc.writeMem(0x32ee, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1076);
        EXPECT(gbc.pc(), 0x32ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0068
        gbc.setState(0x9c41, 0x6e31, 0xffc0, 0x6783, 0x34e8, 0xaea7, 0x1, 0x1);
        gbc.writeMem(0x9c41, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x6e31);
        EXPECT(gbc.pc(), 0x9c42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c41), 0x78);
        // 78 0069
        gbc.setState(0xc493, 0xc8c8, 0x37f0, 0x17da, 0xb214, 0x911a, 0x0, 0x0);
        gbc.writeMem(0xc493, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc8c8);
        EXPECT(gbc.pc(), 0xc494);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc493), 0x78);
        // 78 006A
        gbc.setState(0x34ee, 0xd24, 0x16a0, 0x760d, 0xac25, 0xb6f0, 0x0, 0x1);
        gbc.writeMem(0x34ee, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd24);
        EXPECT(gbc.pc(), 0x34ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 006B
        gbc.setState(0xa8d3, 0xa8da, 0x4490, 0x4f32, 0x5360, 0x560, 0x0, 0x1);
        gbc.writeMem(0xa8d3, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa8da);
        EXPECT(gbc.pc(), 0xa8d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8d3), 0x78);
        // 78 006C
        gbc.setState(0x39e0, 0x2dc5, 0x9ea0, 0x71d5, 0xe9eb, 0x6fbe, 0x0, 0x0);
        gbc.writeMem(0x39e0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x2dc5);
        EXPECT(gbc.pc(), 0x39e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 006D
        gbc.setState(0xd968, 0x22e, 0xa460, 0x1acd, 0x52ec, 0x1cf4, 0x0, 0x0);
        gbc.writeMem(0xd968, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x22e);
        EXPECT(gbc.pc(), 0xd969);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd968), 0x78);
        // 78 006E
        gbc.setState(0x702f, 0x8c4e, 0x4310, 0xe32c, 0x6271, 0x9d11, 0x0, 0x1);
        gbc.writeMem(0x702f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x8c4e);
        EXPECT(gbc.pc(), 0x7030);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 006F
        gbc.setState(0x4c4f, 0xbdde, 0x6b10, 0xa608, 0x45d4, 0xb682, 0x1, 0x0);
        gbc.writeMem(0x4c4f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xbdde);
        EXPECT(gbc.pc(), 0x4c50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0070
        gbc.setState(0x9ebf, 0x4e12, 0x4230, 0xff98, 0xc22c, 0xbf67, 0x0, 0x1);
        gbc.writeMem(0x9ebf, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4e12);
        EXPECT(gbc.pc(), 0x9ec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ebf), 0x78);
        // 78 0071
        gbc.setState(0x65c9, 0x665e, 0x9210, 0xe826, 0x8029, 0xbaae, 0x0, 0x1);
        gbc.writeMem(0x65c9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x665e);
        EXPECT(gbc.pc(), 0x65ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0072
        gbc.setState(0x25b9, 0xe6d9, 0x2430, 0x165b, 0x3f78, 0x48db, 0x0, 0x1);
        gbc.writeMem(0x25b9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xe6d9);
        EXPECT(gbc.pc(), 0x25ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0073
        gbc.setState(0xb1e7, 0x7618, 0x590, 0x18e2, 0x74a4, 0xee43, 0x0, 0x1);
        gbc.writeMem(0xb1e7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x7618);
        EXPECT(gbc.pc(), 0xb1e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1e7), 0x78);
        // 78 0074
        gbc.setState(0x5b06, 0xa546, 0x9690, 0x431a, 0x6489, 0xa48a, 0x1, 0x1);
        gbc.writeMem(0x5b06, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa546);
        EXPECT(gbc.pc(), 0x5b07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0076
        gbc.setState(0xcec8, 0x9bca, 0x4cd0, 0xf097, 0x2512, 0x2535, 0x0, 0x0);
        gbc.writeMem(0xcec8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9bca);
        EXPECT(gbc.pc(), 0xcec9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcec8), 0x78);
        // 78 0077
        gbc.setState(0xe6f1, 0x2f8b, 0x2560, 0x5ba6, 0x7669, 0x5e43, 0x0, 0x0);
        gbc.writeMem(0xe6f1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2f8b);
        EXPECT(gbc.pc(), 0xe6f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6f1), 0x78);
        // 78 0078
        gbc.setState(0x1da7, 0x45f6, 0x7f60, 0x248d, 0xdff0, 0xfb1c, 0x0, 0x0);
        gbc.writeMem(0x1da7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x45f6);
        EXPECT(gbc.pc(), 0x1da8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0079
        gbc.setState(0x53a8, 0x26ea, 0x3300, 0x191a, 0x8e75, 0xe2d1, 0x1, 0x1);
        gbc.writeMem(0x53a8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x26ea);
        EXPECT(gbc.pc(), 0x53a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 007A
        gbc.setState(0xb718, 0x242b, 0x9e20, 0xde74, 0x88b9, 0x78fc, 0x1, 0x1);
        gbc.writeMem(0xb718, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x242b);
        EXPECT(gbc.pc(), 0xb719);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb718), 0x78);
        // 78 007B
        gbc.setState(0x4fc8, 0xc636, 0x47f0, 0xcf05, 0x90d2, 0x1d97, 0x0, 0x0);
        gbc.writeMem(0x4fc8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc636);
        EXPECT(gbc.pc(), 0x4fc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 007C
        gbc.setState(0xa0db, 0x6c5d, 0xd550, 0xb658, 0x5cef, 0x4881, 0x1, 0x0);
        gbc.writeMem(0xa0db, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6c5d);
        EXPECT(gbc.pc(), 0xa0dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0db), 0x78);
        // 78 007D
        gbc.setState(0x7eb8, 0x82fa, 0x1210, 0x2bb1, 0x7041, 0xc2e5, 0x1, 0x0);
        gbc.writeMem(0x7eb8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x82fa);
        EXPECT(gbc.pc(), 0x7eb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 007E
        gbc.setState(0xebef, 0x80bd, 0x56f0, 0xc87, 0x6dd, 0x6da1, 0x1, 0x1);
        gbc.writeMem(0xebef, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x80bd);
        EXPECT(gbc.pc(), 0xebf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebef), 0x78);
        // 78 007F
        gbc.setState(0xad9c, 0xe08c, 0x34d0, 0xbb13, 0x949b, 0x75ba, 0x0, 0x0);
        gbc.writeMem(0xad9c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xe08c);
        EXPECT(gbc.pc(), 0xad9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad9c), 0x78);
        // 78 0080
        gbc.setState(0x8c83, 0xe8d1, 0x9200, 0xda4e, 0x1679, 0x50f0, 0x0, 0x1);
        gbc.writeMem(0x8c83, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xe8d1);
        EXPECT(gbc.pc(), 0x8c84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c83), 0x78);
        // 78 0081
        gbc.setState(0x3f23, 0x4ca0, 0x6f00, 0xa5ba, 0x996d, 0x88fb, 0x1, 0x1);
        gbc.writeMem(0x3f23, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x4ca0);
        EXPECT(gbc.pc(), 0x3f24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0082
        gbc.setState(0xabd4, 0xb4f5, 0x2990, 0x3e8, 0x770b, 0xc174, 0x0, 0x1);
        gbc.writeMem(0xabd4, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb4f5);
        EXPECT(gbc.pc(), 0xabd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabd4), 0x78);
        // 78 0083
        gbc.setState(0xc1b, 0x2195, 0xd770, 0x1aed, 0xd9d2, 0x667c, 0x1, 0x0);
        gbc.writeMem(0xc1b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x2195);
        EXPECT(gbc.pc(), 0xc1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0084
        gbc.setState(0xb600, 0xc453, 0x1c20, 0xbf5b, 0xe437, 0x875b, 0x0, 0x0);
        gbc.writeMem(0xb600, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc453);
        EXPECT(gbc.pc(), 0xb601);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb600), 0x78);
        // 78 0085
        gbc.setState(0x5006, 0x85c0, 0x7070, 0x568f, 0x9940, 0xccd0, 0x0, 0x0);
        gbc.writeMem(0x5006, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x85c0);
        EXPECT(gbc.pc(), 0x5007);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0086
        gbc.setState(0xd356, 0x1b0, 0x2310, 0xe041, 0xe3c3, 0xb15f, 0x0, 0x0);
        gbc.writeMem(0xd356, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x1b0);
        EXPECT(gbc.pc(), 0xd357);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd356), 0x78);
        // 78 0087
        gbc.setState(0xeb1a, 0x47ad, 0x1710, 0xc495, 0xa3ca, 0xb46d, 0x1, 0x0);
        gbc.writeMem(0xeb1a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x47ad);
        EXPECT(gbc.pc(), 0xeb1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb1a), 0x78);
        // 78 0088
        gbc.setState(0x788e, 0x5abe, 0x5b30, 0x2c47, 0xc877, 0x4fa4, 0x1, 0x0);
        gbc.writeMem(0x788e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x5abe);
        EXPECT(gbc.pc(), 0x788f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0089
        gbc.setState(0xc657, 0xf554, 0xbb0, 0x8b88, 0xc12c, 0x63ac, 0x0, 0x1);
        gbc.writeMem(0xc657, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf554);
        EXPECT(gbc.pc(), 0xc658);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc657), 0x78);
        // 78 008A
        gbc.setState(0xce9d, 0x93ec, 0x5c30, 0xd460, 0xca56, 0x6d8e, 0x1, 0x0);
        gbc.writeMem(0xce9d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x93ec);
        EXPECT(gbc.pc(), 0xce9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce9d), 0x78);
        // 78 008B
        gbc.setState(0xd7a, 0x640b, 0x6450, 0x41ed, 0xf4b8, 0x41a9, 0x1, 0x1);
        gbc.writeMem(0xd7a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x640b);
        EXPECT(gbc.pc(), 0xd7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 008C
        gbc.setState(0xda41, 0x5623, 0x2f10, 0x4a3f, 0xa87f, 0x7958, 0x0, 0x1);
        gbc.writeMem(0xda41, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5623);
        EXPECT(gbc.pc(), 0xda42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda41), 0x78);
        // 78 008E
        gbc.setState(0x317e, 0x9add, 0xda50, 0x9f76, 0x122e, 0xa314, 0x1, 0x0);
        gbc.writeMem(0x317e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x9add);
        EXPECT(gbc.pc(), 0x317f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 008F
        gbc.setState(0x35c3, 0x3044, 0xa730, 0x5ef, 0xbdb, 0xa4e5, 0x0, 0x0);
        gbc.writeMem(0x35c3, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3044);
        EXPECT(gbc.pc(), 0x35c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0090
        gbc.setState(0x92ca, 0xc93b, 0x3650, 0x6043, 0x1891, 0x2027, 0x0, 0x1);
        gbc.writeMem(0x92ca, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xc93b);
        EXPECT(gbc.pc(), 0x92cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92ca), 0x78);
        // 78 0091
        gbc.setState(0x65d, 0xc5b0, 0x5670, 0xa4a6, 0xec7a, 0x36c4, 0x0, 0x0);
        gbc.writeMem(0x65d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc5b0);
        EXPECT(gbc.pc(), 0x65e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0092
        gbc.setState(0x8013, 0x229c, 0x49e0, 0xcb8c, 0xea2f, 0xb582, 0x0, 0x0);
        gbc.writeMem(0x8013, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x229c);
        EXPECT(gbc.pc(), 0x8014);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8013), 0x78);
        // 78 0094
        gbc.setState(0x5fe0, 0x314d, 0xec10, 0x542a, 0xa17e, 0x9e1a, 0x1, 0x0);
        gbc.writeMem(0x5fe0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x314d);
        EXPECT(gbc.pc(), 0x5fe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0095
        gbc.setState(0xab0d, 0x1f7b, 0x4b00, 0xb52e, 0xd029, 0xc583, 0x1, 0x0);
        gbc.writeMem(0xab0d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x1f7b);
        EXPECT(gbc.pc(), 0xab0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab0d), 0x78);
        // 78 0096
        gbc.setState(0x4775, 0xf3c4, 0xc130, 0xffb6, 0x1133, 0x3343, 0x1, 0x1);
        gbc.writeMem(0x4775, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf3c4);
        EXPECT(gbc.pc(), 0x4776);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0097
        gbc.setState(0xe7c1, 0x77a4, 0x23e0, 0xde9f, 0x51c9, 0x1aed, 0x0, 0x0);
        gbc.writeMem(0xe7c1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x77a4);
        EXPECT(gbc.pc(), 0xe7c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7c1), 0x78);
        // 78 0098
        gbc.setState(0x7a43, 0xc31d, 0x6040, 0x302f, 0x2096, 0x517b, 0x0, 0x0);
        gbc.writeMem(0x7a43, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc31d);
        EXPECT(gbc.pc(), 0x7a44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0099
        gbc.setState(0x3597, 0x4352, 0x1800, 0x9791, 0x7f19, 0x7ffb, 0x1, 0x1);
        gbc.writeMem(0x3597, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x4352);
        EXPECT(gbc.pc(), 0x3598);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 009A
        gbc.setState(0x64f3, 0x760d, 0x28a0, 0x254, 0xa762, 0x72ac, 0x1, 0x0);
        gbc.writeMem(0x64f3, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x760d);
        EXPECT(gbc.pc(), 0x64f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 009B
        gbc.setState(0x7b8, 0x9e0, 0x2bc0, 0x7b25, 0x6db1, 0xd71, 0x0, 0x1);
        gbc.writeMem(0x7b8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x9e0);
        EXPECT(gbc.pc(), 0x7b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 009C
        gbc.setState(0x663f, 0x8d36, 0x6570, 0x9e1c, 0x3f27, 0x6a4f, 0x0, 0x0);
        gbc.writeMem(0x663f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x8d36);
        EXPECT(gbc.pc(), 0x6640);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 009D
        gbc.setState(0x997c, 0x32c1, 0xf6a0, 0x936a, 0x70c7, 0xeaa9, 0x1, 0x1);
        gbc.writeMem(0x997c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x32c1);
        EXPECT(gbc.pc(), 0x997d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x997c), 0x78);
        // 78 009E
        gbc.setState(0x9b9d, 0x406a, 0x1ae0, 0x362e, 0x1702, 0x45e9, 0x0, 0x1);
        gbc.writeMem(0x9b9d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x406a);
        EXPECT(gbc.pc(), 0x9b9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b9d), 0x78);
        // 78 009F
        gbc.setState(0x70ac, 0x39fb, 0x4810, 0x675c, 0x4d95, 0xf6c6, 0x0, 0x1);
        gbc.writeMem(0x70ac, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x39fb);
        EXPECT(gbc.pc(), 0x70ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 00A0
        gbc.setState(0x2e16, 0x9bb1, 0x5770, 0x319d, 0xb5f1, 0x9f6e, 0x1, 0x1);
        gbc.writeMem(0x2e16, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x9bb1);
        EXPECT(gbc.pc(), 0x2e17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 00A1
        gbc.setState(0xbaa3, 0x2e7d, 0xf6e0, 0x6f55, 0xb0dd, 0xf239, 0x1, 0x0);
        gbc.writeMem(0xbaa3, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2e7d);
        EXPECT(gbc.pc(), 0xbaa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaa3), 0x78);
        // 78 00A2
        gbc.setState(0xb52a, 0x9ced, 0x6830, 0xbb8e, 0x51ad, 0x757a, 0x0, 0x1);
        gbc.writeMem(0xb52a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9ced);
        EXPECT(gbc.pc(), 0xb52b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb52a), 0x78);
        // 78 00A3
        gbc.setState(0xb994, 0x96a0, 0x4c80, 0xeee4, 0xf155, 0xe20e, 0x1, 0x0);
        gbc.writeMem(0xb994, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x96a0);
        EXPECT(gbc.pc(), 0xb995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb994), 0x78);
        // 78 00A4
        gbc.setState(0x8bfe, 0x5a13, 0xf060, 0x5965, 0x2a33, 0xb31c, 0x0, 0x0);
        gbc.writeMem(0x8bfe, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x5a13);
        EXPECT(gbc.pc(), 0x8bff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bfe), 0x78);
        // 78 00A5
        gbc.setState(0xb86c, 0x8797, 0x1bc0, 0xe873, 0xfc21, 0x3fd2, 0x0, 0x0);
        gbc.writeMem(0xb86c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8797);
        EXPECT(gbc.pc(), 0xb86d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb86c), 0x78);
        // 78 00A6
        gbc.setState(0xb869, 0x4962, 0xdb10, 0x41ba, 0x9a24, 0xab53, 0x0, 0x1);
        gbc.writeMem(0xb869, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4962);
        EXPECT(gbc.pc(), 0xb86a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb869), 0x78);
        // 78 00A7
        gbc.setState(0xb41, 0x145c, 0xfee0, 0xc847, 0x963e, 0xcc64, 0x0, 0x1);
        gbc.writeMem(0xb41, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x145c);
        EXPECT(gbc.pc(), 0xb42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 00A8
        gbc.setState(0x8ba, 0x20e1, 0x65b0, 0x61d3, 0x221c, 0x7467, 0x1, 0x1);
        gbc.writeMem(0x8ba, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x20e1);
        EXPECT(gbc.pc(), 0x8bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 00A9
        gbc.setState(0xb6da, 0xcbc1, 0x4440, 0xa000, 0x67b, 0x8a6d, 0x1, 0x0);
        gbc.writeMem(0xb6da, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xcbc1);
        EXPECT(gbc.pc(), 0xb6db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6da), 0x78);
        // 78 00AA
        gbc.setState(0xbf79, 0xad, 0x9200, 0x8e23, 0xfcec, 0xf2d1, 0x0, 0x0);
        gbc.writeMem(0xbf79, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xad);
        EXPECT(gbc.pc(), 0xbf7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf79), 0x78);
        // 78 00AB
        gbc.setState(0x1ac6, 0x1834, 0x2320, 0x121b, 0xe1, 0x4f26, 0x1, 0x0);
        gbc.writeMem(0x1ac6, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1834);
        EXPECT(gbc.pc(), 0x1ac7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 00AC
        gbc.setState(0xb5f9, 0xd726, 0xd4f0, 0x3564, 0x441b, 0x4d0b, 0x1, 0x1);
        gbc.writeMem(0xb5f9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd726);
        EXPECT(gbc.pc(), 0xb5fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5f9), 0x78);
        // 78 00AD
        gbc.setState(0xa134, 0xa5e7, 0xfa70, 0x45c8, 0xf989, 0x9259, 0x0, 0x1);
        gbc.writeMem(0xa134, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa5e7);
        EXPECT(gbc.pc(), 0xa135);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa134), 0x78);
        // 78 00AE
        gbc.setState(0x15f9, 0x5db8, 0x620, 0xfcdd, 0x5040, 0x3f4a, 0x0, 0x0);
        gbc.writeMem(0x15f9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x5db8);
        EXPECT(gbc.pc(), 0x15fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 00AF
        gbc.setState(0x129, 0xc55e, 0x76a0, 0x7e23, 0x7a15, 0x1af9, 0x1, 0x1);
        gbc.writeMem(0x129, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc55e);
        EXPECT(gbc.pc(), 0x12a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 00B0
        gbc.setState(0x23f6, 0xd691, 0x7b50, 0xd559, 0x7e72, 0xd7e1, 0x1, 0x0);
        gbc.writeMem(0x23f6, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd691);
        EXPECT(gbc.pc(), 0x23f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 00B1
        gbc.setState(0x6d76, 0xe619, 0x5800, 0xa6e6, 0xdf86, 0xc936, 0x0, 0x1);
        gbc.writeMem(0x6d76, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe619);
        EXPECT(gbc.pc(), 0x6d77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 00B2
        gbc.setState(0x750b, 0x3bc6, 0x2f70, 0x2e55, 0x4d4d, 0xa185, 0x1, 0x0);
        gbc.writeMem(0x750b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x3bc6);
        EXPECT(gbc.pc(), 0x750c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 00B3
        gbc.setState(0xa2, 0xeda9, 0x26c0, 0xe826, 0x5472, 0x3e5f, 0x1, 0x1);
        gbc.writeMem(0xa2, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xeda9);
        EXPECT(gbc.pc(), 0xa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 00B4
        gbc.setState(0x28d4, 0x4c8b, 0x6910, 0x7ba4, 0x6634, 0x4376, 0x1, 0x0);
        gbc.writeMem(0x28d4, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x4c8b);
        EXPECT(gbc.pc(), 0x28d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 00B5
        gbc.setState(0xd41b, 0xa403, 0xbea0, 0x584d, 0x9190, 0x30, 0x1, 0x1);
        gbc.writeMem(0xd41b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xa403);
        EXPECT(gbc.pc(), 0xd41c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd41b), 0x78);
        // 78 00B6
        gbc.setState(0xb61a, 0xfc31, 0x3b70, 0xaaac, 0xd866, 0x1b8a, 0x0, 0x0);
        gbc.writeMem(0xb61a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xfc31);
        EXPECT(gbc.pc(), 0xb61b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb61a), 0x78);
        // 78 00B7
        gbc.setState(0xb3a5, 0xc429, 0x360, 0xd69f, 0x9389, 0x7380, 0x0, 0x0);
        gbc.writeMem(0xb3a5, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xc429);
        EXPECT(gbc.pc(), 0xb3a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3a5), 0x78);
        // 78 00B8
        gbc.setState(0xee86, 0xbb1d, 0x8650, 0xc0bd, 0x2b8d, 0x7e94, 0x1, 0x0);
        gbc.writeMem(0xee86, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xbb1d);
        EXPECT(gbc.pc(), 0xee87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee86), 0x78);
        // 78 00BA
        gbc.setState(0x55a1, 0x9d76, 0x6e70, 0x8658, 0x70a5, 0xe293, 0x1, 0x1);
        gbc.writeMem(0x55a1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9d76);
        EXPECT(gbc.pc(), 0x55a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 00BB
        gbc.setState(0x46cb, 0xe79b, 0x31a0, 0x642e, 0x7a4e, 0xeba2, 0x0, 0x0);
        gbc.writeMem(0x46cb, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe79b);
        EXPECT(gbc.pc(), 0x46cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 00BC
        gbc.setState(0x7544, 0x430b, 0x8220, 0xc5d, 0x6714, 0x77b, 0x0, 0x0);
        gbc.writeMem(0x7544, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x430b);
        EXPECT(gbc.pc(), 0x7545);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 00BD
        gbc.setState(0x22de, 0x475e, 0x7aa0, 0x2540, 0xc7c3, 0x3ae8, 0x1, 0x1);
        gbc.writeMem(0x22de, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x475e);
        EXPECT(gbc.pc(), 0x22df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 00BE
        gbc.setState(0xd0b6, 0xae2e, 0x7a90, 0x2055, 0x21b6, 0x5964, 0x0, 0x1);
        gbc.writeMem(0xd0b6, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xae2e);
        EXPECT(gbc.pc(), 0xd0b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0b6), 0x78);
        // 78 00BF
        gbc.setState(0x301d, 0x3030, 0xb0c0, 0x591a, 0xf19c, 0x3eee, 0x0, 0x1);
        gbc.writeMem(0x301d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3030);
        EXPECT(gbc.pc(), 0x301e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 00C0
        gbc.setState(0x8d01, 0x23d8, 0x93b0, 0xf25d, 0x41fb, 0x870d, 0x0, 0x0);
        gbc.writeMem(0x8d01, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x23d8);
        EXPECT(gbc.pc(), 0x8d02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d01), 0x78);
        // 78 00C1
        gbc.setState(0x9b6b, 0x3605, 0x7450, 0x8df6, 0x79c5, 0x5c08, 0x0, 0x1);
        gbc.writeMem(0x9b6b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x3605);
        EXPECT(gbc.pc(), 0x9b6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b6b), 0x78);
        // 78 00C2
        gbc.setState(0xc3ab, 0x1dc3, 0x22f0, 0xda6c, 0x93b5, 0x46c3, 0x0, 0x0);
        gbc.writeMem(0xc3ab, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1dc3);
        EXPECT(gbc.pc(), 0xc3ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3ab), 0x78);
        // 78 00C3
        gbc.setState(0xd4a5, 0x5494, 0xabd0, 0xb0a3, 0x5f01, 0x1e6f, 0x0, 0x1);
        gbc.writeMem(0xd4a5, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5494);
        EXPECT(gbc.pc(), 0xd4a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4a5), 0x78);
        // 78 00C4
        gbc.setState(0x966d, 0x630d, 0xe30, 0x4a5, 0xc2ff, 0xbcb, 0x1, 0x0);
        gbc.writeMem(0x966d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x630d);
        EXPECT(gbc.pc(), 0x966e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x966d), 0x78);
        // 78 00C5
        gbc.setState(0xb797, 0x18e5, 0x8620, 0x44a5, 0x93b, 0xfa19, 0x0, 0x1);
        gbc.writeMem(0xb797, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x18e5);
        EXPECT(gbc.pc(), 0xb798);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb797), 0x78);
        // 78 00C6
        gbc.setState(0x31e9, 0x9aff, 0xe730, 0x8479, 0x4de8, 0x5334, 0x1, 0x0);
        gbc.writeMem(0x31e9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9aff);
        EXPECT(gbc.pc(), 0x31ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 00C7
        gbc.setState(0x1650, 0x56bd, 0xf5c0, 0xcd27, 0x2ab6, 0x3b7e, 0x0, 0x0);
        gbc.writeMem(0x1650, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x56bd);
        EXPECT(gbc.pc(), 0x1651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 00C8
        gbc.setState(0x6f7f, 0xf372, 0x62d0, 0xd877, 0xde06, 0x3333, 0x1, 0x1);
        gbc.writeMem(0x6f7f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf372);
        EXPECT(gbc.pc(), 0x6f80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 00C9
        gbc.setState(0x7324, 0x7268, 0xfac0, 0xbacc, 0x38ba, 0x82a7, 0x1, 0x1);
        gbc.writeMem(0x7324, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7268);
        EXPECT(gbc.pc(), 0x7325);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 00CA
        gbc.setState(0x7833, 0x26b7, 0x6ea0, 0x968f, 0x5701, 0x4bbc, 0x1, 0x1);
        gbc.writeMem(0x7833, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x26b7);
        EXPECT(gbc.pc(), 0x7834);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 00CB
        gbc.setState(0xddaf, 0x690f, 0x9af0, 0x2ca7, 0x5042, 0x9257, 0x0, 0x0);
        gbc.writeMem(0xddaf, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x690f);
        EXPECT(gbc.pc(), 0xddb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddaf), 0x78);
        // 78 00CD
        gbc.setState(0x5ae0, 0xccc4, 0xe7c0, 0x8002, 0xc84b, 0x1048, 0x1, 0x0);
        gbc.writeMem(0x5ae0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xccc4);
        EXPECT(gbc.pc(), 0x5ae1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 00CE
        gbc.setState(0x91f1, 0x1d29, 0xd210, 0x3854, 0x855a, 0xcb76, 0x0, 0x1);
        gbc.writeMem(0x91f1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x1d29);
        EXPECT(gbc.pc(), 0x91f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91f1), 0x78);
        // 78 00CF
        gbc.setState(0xcce4, 0x9e70, 0x2a90, 0xe033, 0x7ff8, 0x86d3, 0x0, 0x0);
        gbc.writeMem(0xcce4, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9e70);
        EXPECT(gbc.pc(), 0xcce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcce4), 0x78);
        // 78 00D0
        gbc.setState(0x11f2, 0x1c17, 0xcfb0, 0xd687, 0xff35, 0x429f, 0x0, 0x0);
        gbc.writeMem(0x11f2, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x1c17);
        EXPECT(gbc.pc(), 0x11f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 00D1
        gbc.setState(0xa0d, 0x706f, 0x97e0, 0x4666, 0xaa2c, 0xe95a, 0x1, 0x1);
        gbc.writeMem(0xa0d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x706f);
        EXPECT(gbc.pc(), 0xa0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 00D2
        gbc.setState(0xa4fa, 0xa6f, 0xd000, 0x31d0, 0x84fb, 0x570c, 0x0, 0x0);
        gbc.writeMem(0xa4fa, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa6f);
        EXPECT(gbc.pc(), 0xa4fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4fa), 0x78);
        // 78 00D3
        gbc.setState(0x71e1, 0x8377, 0x3c90, 0x235a, 0x61a, 0x4e82, 0x1, 0x1);
        gbc.writeMem(0x71e1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8377);
        EXPECT(gbc.pc(), 0x71e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 00D4
        gbc.setState(0x5a58, 0x148f, 0x94f0, 0x5403, 0xf595, 0xeeb7, 0x1, 0x0);
        gbc.writeMem(0x5a58, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x148f);
        EXPECT(gbc.pc(), 0x5a59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 00D5
        gbc.setState(0xc62b, 0xea1b, 0xda90, 0xdf1d, 0x42e8, 0x91c4, 0x0, 0x0);
        gbc.writeMem(0xc62b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xea1b);
        EXPECT(gbc.pc(), 0xc62c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc62b), 0x78);
        // 78 00D6
        gbc.setState(0x8938, 0xbd4, 0x7990, 0x880e, 0xbc20, 0xba8b, 0x1, 0x1);
        gbc.writeMem(0x8938, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xbd4);
        EXPECT(gbc.pc(), 0x8939);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8938), 0x78);
        // 78 00D7
        gbc.setState(0xb441, 0xa6b5, 0x4780, 0xc10d, 0x7f4, 0xb530, 0x0, 0x1);
        gbc.writeMem(0xb441, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xa6b5);
        EXPECT(gbc.pc(), 0xb442);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb441), 0x78);
        // 78 00D8
        gbc.setState(0x64d5, 0x328b, 0xab40, 0x1e17, 0xa008, 0xb9ca, 0x0, 0x0);
        gbc.writeMem(0x64d5, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x328b);
        EXPECT(gbc.pc(), 0x64d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 00D9
        gbc.setState(0xa0, 0xca2b, 0x45a0, 0x3bfb, 0x9e4f, 0xfd6d, 0x0, 0x1);
        gbc.writeMem(0xa0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xca2b);
        EXPECT(gbc.pc(), 0xa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 00DA
        gbc.setState(0x42d3, 0xf82f, 0x9420, 0x626b, 0x4b88, 0x98, 0x0, 0x0);
        gbc.writeMem(0x42d3, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xf82f);
        EXPECT(gbc.pc(), 0x42d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 00DB
        gbc.setState(0xadfb, 0xced7, 0x4970, 0xcbad, 0x92c2, 0x903d, 0x0, 0x1);
        gbc.writeMem(0xadfb, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xced7);
        EXPECT(gbc.pc(), 0xadfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadfb), 0x78);
        // 78 00DC
        gbc.setState(0xa8ad, 0xca26, 0xc030, 0x138e, 0x74ea, 0x8123, 0x0, 0x1);
        gbc.writeMem(0xa8ad, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xca26);
        EXPECT(gbc.pc(), 0xa8ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8ad), 0x78);
        // 78 00DD
        gbc.setState(0xadd4, 0x1e75, 0xf100, 0xaad, 0x4313, 0x63ed, 0x0, 0x0);
        gbc.writeMem(0xadd4, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1e75);
        EXPECT(gbc.pc(), 0xadd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadd4), 0x78);
        // 78 00DE
        gbc.setState(0x2021, 0x525f, 0x2f40, 0x48e0, 0x8f7f, 0x953c, 0x1, 0x1);
        gbc.writeMem(0x2021, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x525f);
        EXPECT(gbc.pc(), 0x2022);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 00DF
        gbc.setState(0x7a73, 0x86e0, 0x7a40, 0xb9b9, 0x11dd, 0xaad7, 0x1, 0x0);
        gbc.writeMem(0x7a73, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x86e0);
        EXPECT(gbc.pc(), 0x7a74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 00E0
        gbc.setState(0x4465, 0xb72d, 0xbd30, 0xebac, 0x26e8, 0x5df7, 0x1, 0x1);
        gbc.writeMem(0x4465, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb72d);
        EXPECT(gbc.pc(), 0x4466);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 00E1
        gbc.setState(0xdbe, 0xd87, 0xbb30, 0xae01, 0x22e4, 0x78d8, 0x1, 0x0);
        gbc.writeMem(0xdbe, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xd87);
        EXPECT(gbc.pc(), 0xdbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 00E2
        gbc.setState(0x7233, 0xff08, 0xdd00, 0x36d1, 0x8e64, 0x4c80, 0x1, 0x0);
        gbc.writeMem(0x7233, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xff08);
        EXPECT(gbc.pc(), 0x7234);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 00E3
        gbc.setState(0x2d62, 0x24ce, 0x5de0, 0xc992, 0x8c69, 0x43a2, 0x0, 0x1);
        gbc.writeMem(0x2d62, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x24ce);
        EXPECT(gbc.pc(), 0x2d63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 00E4
        gbc.setState(0x2042, 0x387c, 0xc1b0, 0xeeaf, 0x983f, 0xab8b, 0x0, 0x0);
        gbc.writeMem(0x2042, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x387c);
        EXPECT(gbc.pc(), 0x2043);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 00E5
        gbc.setState(0xc658, 0xd395, 0x6700, 0xe225, 0xe1e6, 0xcf18, 0x1, 0x1);
        gbc.writeMem(0xc658, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd395);
        EXPECT(gbc.pc(), 0xc659);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc658), 0x78);
        // 78 00E6
        gbc.setState(0x38c0, 0xed70, 0xcce0, 0xfe60, 0x74c3, 0xaf88, 0x1, 0x1);
        gbc.writeMem(0x38c0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xed70);
        EXPECT(gbc.pc(), 0x38c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 00E7
        gbc.setState(0x7be3, 0xcf50, 0x3c40, 0xf910, 0x2c93, 0x9fcb, 0x0, 0x1);
        gbc.writeMem(0x7be3, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xcf50);
        EXPECT(gbc.pc(), 0x7be4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 00E8
        gbc.setState(0x94bf, 0x12c6, 0xc3a0, 0xfcdd, 0x4406, 0x5ee9, 0x0, 0x0);
        gbc.writeMem(0x94bf, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x12c6);
        EXPECT(gbc.pc(), 0x94c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94bf), 0x78);
        // 78 00E9
        gbc.setState(0x82e6, 0x4883, 0x42a0, 0x5756, 0x8c3, 0xd083, 0x0, 0x0);
        gbc.writeMem(0x82e6, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4883);
        EXPECT(gbc.pc(), 0x82e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e6), 0x78);
        // 78 00EA
        gbc.setState(0xc789, 0x50c3, 0x1a70, 0x31ec, 0x16ac, 0x8c8, 0x1, 0x1);
        gbc.writeMem(0xc789, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x50c3);
        EXPECT(gbc.pc(), 0xc78a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc789), 0x78);
        // 78 00EB
        gbc.setState(0xc03a, 0xfb29, 0x3dc0, 0x8689, 0x4f22, 0x929e, 0x0, 0x1);
        gbc.writeMem(0xc03a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xfb29);
        EXPECT(gbc.pc(), 0xc03b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc03a), 0x78);
        // 78 00EC
        gbc.setState(0x2280, 0xfd48, 0xc9a0, 0x2329, 0x8881, 0xe889, 0x1, 0x1);
        gbc.writeMem(0x2280, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xfd48);
        EXPECT(gbc.pc(), 0x2281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 00ED
        gbc.setState(0x124f, 0xfc52, 0x2250, 0x6f83, 0x1f14, 0x7802, 0x1, 0x1);
        gbc.writeMem(0x124f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xfc52);
        EXPECT(gbc.pc(), 0x1250);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 00EE
        gbc.setState(0xadef, 0x69e4, 0xfa0, 0xfd47, 0x4689, 0x6bea, 0x1, 0x0);
        gbc.writeMem(0xadef, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x69e4);
        EXPECT(gbc.pc(), 0xadf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadef), 0x78);
        // 78 00EF
        gbc.setState(0x7a0c, 0x8fdc, 0x87e0, 0x5423, 0x8eca, 0x1a12, 0x1, 0x1);
        gbc.writeMem(0x7a0c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x8fdc);
        EXPECT(gbc.pc(), 0x7a0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 00F0
        gbc.setState(0x2b6d, 0xe050, 0x3d70, 0x6f9b, 0xe2fc, 0x19fc, 0x0, 0x0);
        gbc.writeMem(0x2b6d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe050);
        EXPECT(gbc.pc(), 0x2b6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 00F2
        gbc.setState(0x7701, 0x7e61, 0xb380, 0xa875, 0x515b, 0xd312, 0x1, 0x0);
        gbc.writeMem(0x7701, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7e61);
        EXPECT(gbc.pc(), 0x7702);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 00F3
        gbc.setState(0xc9f, 0xc5b2, 0x1190, 0x6aaf, 0x5c0c, 0x160c, 0x0, 0x1);
        gbc.writeMem(0xc9f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc5b2);
        EXPECT(gbc.pc(), 0xca0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 00F4
        gbc.setState(0x242b, 0xd895, 0x3650, 0xbd66, 0xcb2b, 0x6f93, 0x0, 0x0);
        gbc.writeMem(0x242b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xd895);
        EXPECT(gbc.pc(), 0x242c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 00F5
        gbc.setState(0x10d2, 0x9e9d, 0x5d00, 0x8ff2, 0x4463, 0x7749, 0x0, 0x0);
        gbc.writeMem(0x10d2, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9e9d);
        EXPECT(gbc.pc(), 0x10d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 00F6
        gbc.setState(0xbe96, 0xd28e, 0x7f50, 0x265b, 0xaff2, 0xc75a, 0x0, 0x0);
        gbc.writeMem(0xbe96, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xd28e);
        EXPECT(gbc.pc(), 0xbe97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe96), 0x78);
        // 78 00F7
        gbc.setState(0xca31, 0xb255, 0xa00, 0x3d36, 0x9464, 0x8a05, 0x0, 0x1);
        gbc.writeMem(0xca31, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xb255);
        EXPECT(gbc.pc(), 0xca32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca31), 0x78);
        // 78 00F8
        gbc.setState(0x5586, 0x67cb, 0xa3c0, 0xd082, 0x2f5a, 0xc5be, 0x1, 0x0);
        gbc.writeMem(0x5586, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x67cb);
        EXPECT(gbc.pc(), 0x5587);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 00F9
        gbc.setState(0xaae3, 0xf05b, 0xb940, 0x8e2d, 0x508, 0x98b7, 0x1, 0x1);
        gbc.writeMem(0xaae3, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xf05b);
        EXPECT(gbc.pc(), 0xaae4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaae3), 0x78);
        // 78 00FA
        gbc.setState(0x45ed, 0x52d1, 0x4cb0, 0x91c2, 0xbb40, 0x1f38, 0x1, 0x0);
        gbc.writeMem(0x45ed, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x52d1);
        EXPECT(gbc.pc(), 0x45ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 00FB
        gbc.setState(0x2e4b, 0x935a, 0xee0, 0xbbb5, 0x1caa, 0x8427, 0x0, 0x0);
        gbc.writeMem(0x2e4b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x935a);
        EXPECT(gbc.pc(), 0x2e4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 00FC
        gbc.setState(0xe35b, 0xc57, 0x5170, 0x8095, 0xc41e, 0xe1c6, 0x1, 0x0);
        gbc.writeMem(0xe35b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc57);
        EXPECT(gbc.pc(), 0xe35c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe35b), 0x78);
        // 78 00FD
        gbc.setState(0x5c8e, 0x176a, 0x41e0, 0xe363, 0xcf20, 0x6665, 0x1, 0x0);
        gbc.writeMem(0x5c8e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x176a);
        EXPECT(gbc.pc(), 0x5c8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 00FE
        gbc.setState(0x55ab, 0x9df6, 0x8820, 0x2145, 0x74ee, 0xfc4f, 0x0, 0x0);
        gbc.writeMem(0x55ab, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x9df6);
        EXPECT(gbc.pc(), 0x55ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 00FF
        gbc.setState(0x6d48, 0x4d46, 0xdcc0, 0x4de0, 0x4c27, 0x9698, 0x1, 0x0);
        gbc.writeMem(0x6d48, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x4d46);
        EXPECT(gbc.pc(), 0x6d49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0100
        gbc.setState(0xaa1, 0x4044, 0x5280, 0x780b, 0x794d, 0xc149, 0x1, 0x1);
        gbc.writeMem(0xaa1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4044);
        EXPECT(gbc.pc(), 0xaa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0101
        gbc.setState(0x1f96, 0x8fe3, 0xff20, 0x9a30, 0xdd5, 0x78a6, 0x1, 0x0);
        gbc.writeMem(0x1f96, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x8fe3);
        EXPECT(gbc.pc(), 0x1f97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0102
        gbc.setState(0xc960, 0x8307, 0x1810, 0x6b7, 0x3c4b, 0x65a6, 0x1, 0x0);
        gbc.writeMem(0xc960, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x8307);
        EXPECT(gbc.pc(), 0xc961);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc960), 0x78);
        // 78 0103
        gbc.setState(0x4bc2, 0x4b46, 0x9170, 0xb0ab, 0xaf2e, 0x1c35, 0x0, 0x1);
        gbc.writeMem(0x4bc2, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4b46);
        EXPECT(gbc.pc(), 0x4bc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0104
        gbc.setState(0xba9a, 0x7a2, 0xb760, 0x5ae5, 0x14bd, 0xa290, 0x0, 0x1);
        gbc.writeMem(0xba9a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7a2);
        EXPECT(gbc.pc(), 0xba9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba9a), 0x78);
        // 78 0105
        gbc.setState(0xcbd4, 0x728e, 0x98f0, 0x6bf0, 0x261e, 0xc749, 0x0, 0x1);
        gbc.writeMem(0xcbd4, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x728e);
        EXPECT(gbc.pc(), 0xcbd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbd4), 0x78);
        // 78 0106
        gbc.setState(0x92db, 0xef37, 0x1e20, 0x71cd, 0xe11, 0xb440, 0x0, 0x0);
        gbc.writeMem(0x92db, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xef37);
        EXPECT(gbc.pc(), 0x92dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92db), 0x78);
        // 78 0107
        gbc.setState(0x4abf, 0xeeaf, 0x3350, 0x717a, 0x9178, 0x5c42, 0x0, 0x1);
        gbc.writeMem(0x4abf, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xeeaf);
        EXPECT(gbc.pc(), 0x4ac0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0108
        gbc.setState(0xcad8, 0xabd1, 0x8f0, 0x62e5, 0x2f4b, 0xebfa, 0x1, 0x1);
        gbc.writeMem(0xcad8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xabd1);
        EXPECT(gbc.pc(), 0xcad9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcad8), 0x78);
        // 78 0109
        gbc.setState(0x7bfa, 0x45b3, 0xe3f0, 0x90a2, 0x9ced, 0xeb10, 0x0, 0x1);
        gbc.writeMem(0x7bfa, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x45b3);
        EXPECT(gbc.pc(), 0x7bfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 010B
        gbc.setState(0x343e, 0x68c3, 0x5bc0, 0x4c2f, 0xca3a, 0x2b62, 0x1, 0x1);
        gbc.writeMem(0x343e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x68c3);
        EXPECT(gbc.pc(), 0x343f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 010C
        gbc.setState(0x4297, 0x85a0, 0xe0a0, 0xd72c, 0xbe7, 0x2dd4, 0x0, 0x0);
        gbc.writeMem(0x4297, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x85a0);
        EXPECT(gbc.pc(), 0x4298);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 010D
        gbc.setState(0x2f86, 0x5e4a, 0xbdd0, 0x6d1e, 0x60a5, 0xb49c, 0x0, 0x1);
        gbc.writeMem(0x2f86, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x5e4a);
        EXPECT(gbc.pc(), 0x2f87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 010E
        gbc.setState(0x22aa, 0xdfb, 0xbba0, 0x69da, 0xa11f, 0x586f, 0x1, 0x0);
        gbc.writeMem(0x22aa, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xdfb);
        EXPECT(gbc.pc(), 0x22ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 010F
        gbc.setState(0xd6, 0xbe3c, 0xf300, 0x91c1, 0x8c4f, 0x66e6, 0x0, 0x1);
        gbc.writeMem(0xd6, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xbe3c);
        EXPECT(gbc.pc(), 0xd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0110
        gbc.setState(0x4e20, 0x4ada, 0x1440, 0x1d62, 0x4e36, 0xb53e, 0x1, 0x1);
        gbc.writeMem(0x4e20, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4ada);
        EXPECT(gbc.pc(), 0x4e21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0111
        gbc.setState(0x208f, 0xec46, 0x73e0, 0x2940, 0xed39, 0xa982, 0x0, 0x1);
        gbc.writeMem(0x208f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xec46);
        EXPECT(gbc.pc(), 0x2090);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0112
        gbc.setState(0xb077, 0xf87, 0xef50, 0xcfeb, 0xac0, 0xb814, 0x0, 0x0);
        gbc.writeMem(0xb077, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf87);
        EXPECT(gbc.pc(), 0xb078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb077), 0x78);
        // 78 0113
        gbc.setState(0xcd08, 0x62cc, 0x9070, 0x1596, 0xa4d3, 0xdd3b, 0x0, 0x0);
        gbc.writeMem(0xcd08, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x62cc);
        EXPECT(gbc.pc(), 0xcd09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd08), 0x78);
        // 78 0114
        gbc.setState(0x6fec, 0x2cf8, 0x1050, 0x2057, 0x5704, 0x1408, 0x0, 0x1);
        gbc.writeMem(0x6fec, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x2cf8);
        EXPECT(gbc.pc(), 0x6fed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0115
        gbc.setState(0x964e, 0xf354, 0x5170, 0x328a, 0xc950, 0xedac, 0x1, 0x0);
        gbc.writeMem(0x964e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf354);
        EXPECT(gbc.pc(), 0x964f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x964e), 0x78);
        // 78 0116
        gbc.setState(0xeee5, 0xaa78, 0x5750, 0x944f, 0xb6a5, 0xb9d2, 0x1, 0x1);
        gbc.writeMem(0xeee5, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xaa78);
        EXPECT(gbc.pc(), 0xeee6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeee5), 0x78);
        // 78 0117
        gbc.setState(0xd82f, 0xba09, 0x40b0, 0x1f52, 0x1158, 0xf6c, 0x1, 0x0);
        gbc.writeMem(0xd82f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xba09);
        EXPECT(gbc.pc(), 0xd830);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd82f), 0x78);
        // 78 0118
        gbc.setState(0xd003, 0x7307, 0x5750, 0x6313, 0xc1bd, 0xf0ac, 0x0, 0x1);
        gbc.writeMem(0xd003, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7307);
        EXPECT(gbc.pc(), 0xd004);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd003), 0x78);
        // 78 0119
        gbc.setState(0x5aeb, 0xb90c, 0x9df0, 0x33e7, 0xe1f8, 0x221b, 0x1, 0x1);
        gbc.writeMem(0x5aeb, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb90c);
        EXPECT(gbc.pc(), 0x5aec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 011A
        gbc.setState(0xc2b1, 0xdd45, 0xb40, 0x1cde, 0x13b9, 0x4fae, 0x0, 0x1);
        gbc.writeMem(0xc2b1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xdd45);
        EXPECT(gbc.pc(), 0xc2b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2b1), 0x78);
        // 78 011B
        gbc.setState(0x1bc8, 0x6485, 0xf770, 0x5b1b, 0x94d2, 0x2627, 0x1, 0x1);
        gbc.writeMem(0x1bc8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x6485);
        EXPECT(gbc.pc(), 0x1bc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 011C
        gbc.setState(0x6e1e, 0x82ef, 0xb1e0, 0x2d5, 0xa50b, 0xd941, 0x1, 0x1);
        gbc.writeMem(0x6e1e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x82ef);
        EXPECT(gbc.pc(), 0x6e1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 011D
        gbc.setState(0x4498, 0x8f59, 0xa950, 0x457, 0x3685, 0xbbf3, 0x0, 0x1);
        gbc.writeMem(0x4498, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8f59);
        EXPECT(gbc.pc(), 0x4499);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 011E
        gbc.setState(0xbc92, 0x1f67, 0xf260, 0xb00d, 0xe802, 0x495f, 0x0, 0x0);
        gbc.writeMem(0xbc92, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x1f67);
        EXPECT(gbc.pc(), 0xbc93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc92), 0x78);
        // 78 011F
        gbc.setState(0x89e1, 0x2933, 0x28d0, 0x264c, 0x16ab, 0x626e, 0x0, 0x0);
        gbc.writeMem(0x89e1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2933);
        EXPECT(gbc.pc(), 0x89e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89e1), 0x78);
        // 78 0120
        gbc.setState(0xe8ff, 0xed1c, 0x5300, 0x251a, 0xbccc, 0xa40, 0x1, 0x1);
        gbc.writeMem(0xe8ff, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xed1c);
        EXPECT(gbc.pc(), 0xe900);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8ff), 0x78);
        // 78 0121
        gbc.setState(0x35c5, 0xdfa4, 0x51e0, 0x4f95, 0xce2a, 0x415a, 0x0, 0x1);
        gbc.writeMem(0x35c5, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xdfa4);
        EXPECT(gbc.pc(), 0x35c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0122
        gbc.setState(0xb7ec, 0x541f, 0xb1e0, 0x4f6d, 0x8587, 0xaf62, 0x1, 0x1);
        gbc.writeMem(0xb7ec, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x541f);
        EXPECT(gbc.pc(), 0xb7ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ec), 0x78);
        // 78 0123
        gbc.setState(0x4949, 0x76af, 0x9930, 0x8355, 0x9712, 0x5b54, 0x0, 0x1);
        gbc.writeMem(0x4949, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x76af);
        EXPECT(gbc.pc(), 0x494a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0124
        gbc.setState(0x498d, 0xe6ab, 0xf0f0, 0xbfcb, 0x7058, 0x8726, 0x1, 0x0);
        gbc.writeMem(0x498d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe6ab);
        EXPECT(gbc.pc(), 0x498e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0125
        gbc.setState(0xb118, 0x96, 0x2910, 0x8370, 0x4b5a, 0x4925, 0x1, 0x0);
        gbc.writeMem(0xb118, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x96);
        EXPECT(gbc.pc(), 0xb119);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb118), 0x78);
        // 78 0126
        gbc.setState(0x135d, 0x332b, 0x80b0, 0x22fc, 0x5beb, 0xb767, 0x0, 0x1);
        gbc.writeMem(0x135d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x332b);
        EXPECT(gbc.pc(), 0x135e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0127
        gbc.setState(0x4299, 0x97fa, 0x3a0, 0xc3d8, 0xeaeb, 0x72c3, 0x1, 0x0);
        gbc.writeMem(0x4299, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x97fa);
        EXPECT(gbc.pc(), 0x429a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0128
        gbc.setState(0xedc8, 0xa6df, 0xbda0, 0xd9e4, 0x8ecd, 0x5ae3, 0x1, 0x1);
        gbc.writeMem(0xedc8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa6df);
        EXPECT(gbc.pc(), 0xedc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedc8), 0x78);
        // 78 0129
        gbc.setState(0xdc7d, 0x811e, 0x64c0, 0x2d92, 0x5f33, 0xf1e2, 0x1, 0x1);
        gbc.writeMem(0xdc7d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x811e);
        EXPECT(gbc.pc(), 0xdc7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc7d), 0x78);
        // 78 012A
        gbc.setState(0x7dbe, 0xaa27, 0x9810, 0x2321, 0x6f5c, 0x21e0, 0x1, 0x0);
        gbc.writeMem(0x7dbe, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xaa27);
        EXPECT(gbc.pc(), 0x7dbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 012B
        gbc.setState(0xbb16, 0xd516, 0x9850, 0x512c, 0x99cf, 0xb96a, 0x0, 0x0);
        gbc.writeMem(0xbb16, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd516);
        EXPECT(gbc.pc(), 0xbb17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb16), 0x78);
        // 78 012C
        gbc.setState(0xcdc, 0x85b2, 0x9d20, 0xbf87, 0xbdbe, 0xa056, 0x1, 0x1);
        gbc.writeMem(0xcdc, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x85b2);
        EXPECT(gbc.pc(), 0xcdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 012D
        gbc.setState(0x388d, 0xb071, 0x6e40, 0x931d, 0xdd36, 0xd4a8, 0x1, 0x0);
        gbc.writeMem(0x388d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb071);
        EXPECT(gbc.pc(), 0x388e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 012E
        gbc.setState(0xab5d, 0x14f1, 0x82d0, 0x1cac, 0xab5d, 0xeade, 0x0, 0x1);
        gbc.writeMem(0xab5d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x14f1);
        EXPECT(gbc.pc(), 0xab5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab5d), 0x78);
        // 78 012F
        gbc.setState(0x7c60, 0xaea4, 0x1380, 0x88cf, 0xbb6a, 0x8184, 0x0, 0x0);
        gbc.writeMem(0x7c60, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xaea4);
        EXPECT(gbc.pc(), 0x7c61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0130
        gbc.setState(0xa4b, 0x8b8c, 0xc280, 0x593b, 0x92a8, 0x6a76, 0x0, 0x1);
        gbc.writeMem(0xa4b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8b8c);
        EXPECT(gbc.pc(), 0xa4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0131
        gbc.setState(0xc7fd, 0x29fa, 0xe00, 0x40e0, 0x8c67, 0xcbc4, 0x1, 0x1);
        gbc.writeMem(0xc7fd, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x29fa);
        EXPECT(gbc.pc(), 0xc7fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7fd), 0x78);
        // 78 0132
        gbc.setState(0x71f4, 0x31c9, 0x4af0, 0xde3, 0x750e, 0xfcd0, 0x1, 0x1);
        gbc.writeMem(0x71f4, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x31c9);
        EXPECT(gbc.pc(), 0x71f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0133
        gbc.setState(0x8340, 0xd078, 0x3050, 0x9277, 0x9a74, 0x1d4c, 0x0, 0x0);
        gbc.writeMem(0x8340, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xd078);
        EXPECT(gbc.pc(), 0x8341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8340), 0x78);
        // 78 0134
        gbc.setState(0x161e, 0xbc8, 0x5d60, 0xd24b, 0x6a4f, 0x7932, 0x0, 0x0);
        gbc.writeMem(0x161e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xbc8);
        EXPECT(gbc.pc(), 0x161f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0135
        gbc.setState(0x7f9d, 0x6435, 0x1c0, 0xd89c, 0x1889, 0x4cf7, 0x1, 0x0);
        gbc.writeMem(0x7f9d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6435);
        EXPECT(gbc.pc(), 0x7f9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0136
        gbc.setState(0x8e8, 0xd86, 0xba50, 0x98d5, 0xb0c6, 0x971, 0x1, 0x0);
        gbc.writeMem(0x8e8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd86);
        EXPECT(gbc.pc(), 0x8e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0137
        gbc.setState(0xc306, 0xfbc1, 0x4500, 0xd06c, 0x9318, 0xef18, 0x1, 0x0);
        gbc.writeMem(0xc306, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xfbc1);
        EXPECT(gbc.pc(), 0xc307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc306), 0x78);
        // 78 0138
        gbc.setState(0x7ccd, 0xc828, 0xbc30, 0x1735, 0xbf25, 0x622f, 0x1, 0x0);
        gbc.writeMem(0x7ccd, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc828);
        EXPECT(gbc.pc(), 0x7cce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0139
        gbc.setState(0xec40, 0x2e8b, 0x64b0, 0xeb4e, 0xfb53, 0x273f, 0x0, 0x1);
        gbc.writeMem(0xec40, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x2e8b);
        EXPECT(gbc.pc(), 0xec41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec40), 0x78);
        // 78 013A
        gbc.setState(0x62e, 0xc420, 0xb8c0, 0xe221, 0x913c, 0xa263, 0x1, 0x0);
        gbc.writeMem(0x62e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc420);
        EXPECT(gbc.pc(), 0x62f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 013B
        gbc.setState(0x1b1a, 0xc051, 0xe9f0, 0xda41, 0x6fc7, 0x1088, 0x1, 0x0);
        gbc.writeMem(0x1b1a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc051);
        EXPECT(gbc.pc(), 0x1b1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 013C
        gbc.setState(0x8599, 0xc338, 0x9320, 0x446e, 0x384c, 0x43f2, 0x0, 0x1);
        gbc.writeMem(0x8599, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc338);
        EXPECT(gbc.pc(), 0x859a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8599), 0x78);
        // 78 013D
        gbc.setState(0x356d, 0x790, 0xa2a0, 0xfd95, 0x89d0, 0x737f, 0x0, 0x0);
        gbc.writeMem(0x356d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x790);
        EXPECT(gbc.pc(), 0x356e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 013E
        gbc.setState(0x4f19, 0x36e1, 0xa800, 0x5f2a, 0xdc61, 0x1f53, 0x1, 0x0);
        gbc.writeMem(0x4f19, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x36e1);
        EXPECT(gbc.pc(), 0x4f1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 013F
        gbc.setState(0x1cfb, 0x3f86, 0xc6f0, 0x4723, 0x6e, 0x9b64, 0x1, 0x0);
        gbc.writeMem(0x1cfb, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3f86);
        EXPECT(gbc.pc(), 0x1cfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0140
        gbc.setState(0xdc11, 0x9f76, 0xa180, 0xbe75, 0x41e8, 0xfc42, 0x1, 0x0);
        gbc.writeMem(0xdc11, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x9f76);
        EXPECT(gbc.pc(), 0xdc12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc11), 0x78);
        // 78 0141
        gbc.setState(0x9856, 0x8b1a, 0xef50, 0xa9db, 0xbafc, 0x2968, 0x1, 0x0);
        gbc.writeMem(0x9856, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x8b1a);
        EXPECT(gbc.pc(), 0x9857);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9856), 0x78);
        // 78 0142
        gbc.setState(0xc0c8, 0x3fb, 0x72c0, 0x6bf0, 0x2eaa, 0x8867, 0x0, 0x1);
        gbc.writeMem(0xc0c8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3fb);
        EXPECT(gbc.pc(), 0xc0c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0c8), 0x78);
        // 78 0143
        gbc.setState(0x89d0, 0x2501, 0xc520, 0x6154, 0x8639, 0xa6db, 0x1, 0x0);
        gbc.writeMem(0x89d0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2501);
        EXPECT(gbc.pc(), 0x89d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89d0), 0x78);
        // 78 0144
        gbc.setState(0x6bac, 0x9e78, 0x9a10, 0x1344, 0x662c, 0xdec2, 0x0, 0x0);
        gbc.writeMem(0x6bac, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9e78);
        EXPECT(gbc.pc(), 0x6bad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0146
        gbc.setState(0xcf02, 0x39a, 0x7610, 0x78e1, 0xe2ce, 0xca44, 0x1, 0x0);
        gbc.writeMem(0xcf02, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x39a);
        EXPECT(gbc.pc(), 0xcf03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf02), 0x78);
        // 78 0147
        gbc.setState(0x6932, 0xa639, 0xcd50, 0xba82, 0xc0b2, 0xb62d, 0x0, 0x1);
        gbc.writeMem(0x6932, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xa639);
        EXPECT(gbc.pc(), 0x6933);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0148
        gbc.setState(0x58de, 0xa89b, 0x90a0, 0xb65d, 0x32dd, 0x6f79, 0x1, 0x1);
        gbc.writeMem(0x58de, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa89b);
        EXPECT(gbc.pc(), 0x58df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0149
        gbc.setState(0xa5c7, 0x3278, 0x2720, 0x93f, 0xc015, 0xd6b7, 0x0, 0x0);
        gbc.writeMem(0xa5c7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3278);
        EXPECT(gbc.pc(), 0xa5c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5c7), 0x78);
        // 78 014A
        gbc.setState(0x69ee, 0x41af, 0x7250, 0xda2c, 0x7194, 0xf33d, 0x0, 0x0);
        gbc.writeMem(0x69ee, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x41af);
        EXPECT(gbc.pc(), 0x69ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 014B
        gbc.setState(0xe75f, 0x5235, 0x2230, 0x18a5, 0xce0f, 0xf606, 0x0, 0x0);
        gbc.writeMem(0xe75f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5235);
        EXPECT(gbc.pc(), 0xe760);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe75f), 0x78);
        // 78 014C
        gbc.setState(0xea7b, 0xcf62, 0x4690, 0x79f, 0xf28b, 0xe4f7, 0x0, 0x1);
        gbc.writeMem(0xea7b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xcf62);
        EXPECT(gbc.pc(), 0xea7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea7b), 0x78);
        // 78 014D
        gbc.setState(0x9323, 0x88f6, 0xb1d0, 0xdbb9, 0xb116, 0x820a, 0x1, 0x0);
        gbc.writeMem(0x9323, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x88f6);
        EXPECT(gbc.pc(), 0x9324);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9323), 0x78);
        // 78 014E
        gbc.setState(0xaadf, 0x1545, 0xfd50, 0xba14, 0xd6b5, 0x7acf, 0x0, 0x1);
        gbc.writeMem(0xaadf, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x1545);
        EXPECT(gbc.pc(), 0xaae0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaadf), 0x78);
        // 78 014F
        gbc.setState(0x4702, 0xf48d, 0xb760, 0xe5c5, 0xf873, 0x6685, 0x1, 0x1);
        gbc.writeMem(0x4702, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xf48d);
        EXPECT(gbc.pc(), 0x4703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0150
        gbc.setState(0xd00a, 0x89ed, 0xf4f0, 0xc4cd, 0xb610, 0xb8ed, 0x1, 0x1);
        gbc.writeMem(0xd00a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x89ed);
        EXPECT(gbc.pc(), 0xd00b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd00a), 0x78);
        // 78 0151
        gbc.setState(0xb9a2, 0x3fb6, 0x51d0, 0xc1db, 0xad64, 0xd869, 0x1, 0x1);
        gbc.writeMem(0xb9a2, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3fb6);
        EXPECT(gbc.pc(), 0xb9a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9a2), 0x78);
        // 78 0152
        gbc.setState(0xf42, 0xed37, 0xf90, 0xb0cf, 0xfe83, 0xf9a9, 0x1, 0x0);
        gbc.writeMem(0xf42, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xed37);
        EXPECT(gbc.pc(), 0xf43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0153
        gbc.setState(0xd534, 0x4371, 0x3d90, 0x5347, 0x3a06, 0x75a8, 0x1, 0x1);
        gbc.writeMem(0xd534, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x4371);
        EXPECT(gbc.pc(), 0xd535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd534), 0x78);
        // 78 0154
        gbc.setState(0xed76, 0x6763, 0x4ab0, 0xe555, 0xd074, 0xa071, 0x1, 0x0);
        gbc.writeMem(0xed76, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6763);
        EXPECT(gbc.pc(), 0xed77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed76), 0x78);
        // 78 0155
        gbc.setState(0x3f3d, 0x9310, 0x6090, 0x178d, 0x55bc, 0xfac0, 0x1, 0x0);
        gbc.writeMem(0x3f3d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9310);
        EXPECT(gbc.pc(), 0x3f3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0156
        gbc.setState(0x151c, 0xb20d, 0xb6f0, 0x33c4, 0x7ea7, 0x65ba, 0x1, 0x0);
        gbc.writeMem(0x151c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb20d);
        EXPECT(gbc.pc(), 0x151d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0157
        gbc.setState(0xef03, 0x5c7e, 0xc4e0, 0x2eb7, 0xdd9c, 0xf4a0, 0x0, 0x0);
        gbc.writeMem(0xef03, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5c7e);
        EXPECT(gbc.pc(), 0xef04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef03), 0x78);
        // 78 0159
        gbc.setState(0x909c, 0xb9c5, 0xc3b0, 0xb2b2, 0x3ddf, 0xdfef, 0x0, 0x0);
        gbc.writeMem(0x909c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xb9c5);
        EXPECT(gbc.pc(), 0x909d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x909c), 0x78);
        // 78 015A
        gbc.setState(0x57ec, 0xa550, 0x6220, 0x1d0e, 0xc822, 0xad99, 0x0, 0x0);
        gbc.writeMem(0x57ec, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xa550);
        EXPECT(gbc.pc(), 0x57ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 015B
        gbc.setState(0xbedd, 0x66b4, 0xd4a0, 0xf2b1, 0xa277, 0xefbf, 0x1, 0x1);
        gbc.writeMem(0xbedd, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x66b4);
        EXPECT(gbc.pc(), 0xbede);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbedd), 0x78);
        // 78 015C
        gbc.setState(0xecaf, 0x8404, 0xce20, 0x807d, 0x780f, 0xf0f, 0x0, 0x0);
        gbc.writeMem(0xecaf, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x8404);
        EXPECT(gbc.pc(), 0xecb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecaf), 0x78);
        // 78 015D
        gbc.setState(0x9fba, 0xb8c9, 0xcaa0, 0x4533, 0x9ff, 0xff1, 0x0, 0x0);
        gbc.writeMem(0x9fba, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb8c9);
        EXPECT(gbc.pc(), 0x9fbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fba), 0x78);
        // 78 015E
        gbc.setState(0x6404, 0xcf9f, 0x8b10, 0xf76d, 0x5904, 0x8965, 0x0, 0x0);
        gbc.writeMem(0x6404, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xcf9f);
        EXPECT(gbc.pc(), 0x6405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 015F
        gbc.setState(0x8b4f, 0xd0c6, 0xb50, 0x9cfe, 0x58ed, 0x806a, 0x0, 0x0);
        gbc.writeMem(0x8b4f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd0c6);
        EXPECT(gbc.pc(), 0x8b50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b4f), 0x78);
        // 78 0160
        gbc.setState(0x10ef, 0x4d35, 0xc7e0, 0xbf20, 0xcae7, 0xc5e3, 0x1, 0x0);
        gbc.writeMem(0x10ef, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4d35);
        EXPECT(gbc.pc(), 0x10f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0161
        gbc.setState(0x65ec, 0x70eb, 0x67b0, 0xdf34, 0xc87a, 0xefef, 0x1, 0x0);
        gbc.writeMem(0x65ec, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x70eb);
        EXPECT(gbc.pc(), 0x65ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0163
        gbc.setState(0xa347, 0xfe6b, 0x1360, 0x2ad2, 0x306e, 0xedb6, 0x0, 0x1);
        gbc.writeMem(0xa347, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xfe6b);
        EXPECT(gbc.pc(), 0xa348);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa347), 0x78);
        // 78 0164
        gbc.setState(0x194f, 0xf780, 0xf510, 0xe2a2, 0x1943, 0xbf, 0x0, 0x0);
        gbc.writeMem(0x194f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf780);
        EXPECT(gbc.pc(), 0x1950);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0165
        gbc.setState(0x6ed1, 0x57d5, 0x270, 0xc319, 0xe5c6, 0xda09, 0x1, 0x0);
        gbc.writeMem(0x6ed1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x57d5);
        EXPECT(gbc.pc(), 0x6ed2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0167
        gbc.setState(0xe572, 0x9934, 0xc090, 0xa4c2, 0xb361, 0x8205, 0x1, 0x0);
        gbc.writeMem(0xe572, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9934);
        EXPECT(gbc.pc(), 0xe573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe572), 0x78);
        // 78 0168
        gbc.setState(0x35a8, 0x52d4, 0x44c0, 0xe5a9, 0x61a9, 0x3c42, 0x1, 0x0);
        gbc.writeMem(0x35a8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x52d4);
        EXPECT(gbc.pc(), 0x35a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0169
        gbc.setState(0x2cad, 0x8b30, 0xae90, 0x2e6, 0x4c48, 0x5e0, 0x1, 0x1);
        gbc.writeMem(0x2cad, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8b30);
        EXPECT(gbc.pc(), 0x2cae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 016A
        gbc.setState(0xeb20, 0x36e4, 0xbbd0, 0xdf4b, 0xf19d, 0xc754, 0x0, 0x0);
        gbc.writeMem(0xeb20, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x36e4);
        EXPECT(gbc.pc(), 0xeb21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb20), 0x78);
        // 78 016B
        gbc.setState(0xd267, 0xb087, 0x34e0, 0xe2bf, 0x2dcb, 0x354c, 0x1, 0x1);
        gbc.writeMem(0xd267, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb087);
        EXPECT(gbc.pc(), 0xd268);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd267), 0x78);
        // 78 016C
        gbc.setState(0x9c40, 0x409a, 0xa780, 0x14e2, 0xc015, 0xae3c, 0x0, 0x0);
        gbc.writeMem(0x9c40, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x409a);
        EXPECT(gbc.pc(), 0x9c41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c40), 0x78);
        // 78 016D
        gbc.setState(0x1357, 0xcc19, 0xed60, 0xb007, 0x22a1, 0xf26a, 0x0, 0x1);
        gbc.writeMem(0x1357, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xcc19);
        EXPECT(gbc.pc(), 0x1358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 016E
        gbc.setState(0xbf1b, 0xef86, 0xaa20, 0x7e7e, 0x50e3, 0xac97, 0x1, 0x0);
        gbc.writeMem(0xbf1b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xef86);
        EXPECT(gbc.pc(), 0xbf1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf1b), 0x78);
        // 78 016F
        gbc.setState(0x1520, 0x3744, 0x58f0, 0x2511, 0x655b, 0x5f82, 0x1, 0x0);
        gbc.writeMem(0x1520, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3744);
        EXPECT(gbc.pc(), 0x1521);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0170
        gbc.setState(0x6067, 0xd4b0, 0xb530, 0xddf5, 0x6d4d, 0x5353, 0x0, 0x0);
        gbc.writeMem(0x6067, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xd4b0);
        EXPECT(gbc.pc(), 0x6068);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0171
        gbc.setState(0xd477, 0x132d, 0x4840, 0x96e3, 0x2045, 0xe3d7, 0x1, 0x1);
        gbc.writeMem(0xd477, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x132d);
        EXPECT(gbc.pc(), 0xd478);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd477), 0x78);
        // 78 0173
        gbc.setState(0x4d22, 0xf110, 0xfa80, 0xb316, 0xe040, 0x8768, 0x0, 0x1);
        gbc.writeMem(0x4d22, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf110);
        EXPECT(gbc.pc(), 0x4d23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0174
        gbc.setState(0x3ae3, 0x634e, 0x5790, 0x4c94, 0x48c5, 0xecc, 0x1, 0x1);
        gbc.writeMem(0x3ae3, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x634e);
        EXPECT(gbc.pc(), 0x3ae4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0176
        gbc.setState(0x4b3c, 0xfa9a, 0xe1e0, 0xf5fb, 0x34a6, 0xa60f, 0x1, 0x0);
        gbc.writeMem(0x4b3c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xfa9a);
        EXPECT(gbc.pc(), 0x4b3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0177
        gbc.setState(0x3e10, 0x2d11, 0xecd0, 0xb653, 0x5d, 0xbab4, 0x1, 0x1);
        gbc.writeMem(0x3e10, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2d11);
        EXPECT(gbc.pc(), 0x3e11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0178
        gbc.setState(0x3066, 0x13f6, 0x4340, 0xf2c9, 0x6d16, 0x9e88, 0x1, 0x1);
        gbc.writeMem(0x3066, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x13f6);
        EXPECT(gbc.pc(), 0x3067);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0179
        gbc.setState(0xda59, 0xdbcb, 0x2a40, 0xb78d, 0xfe8b, 0xbc06, 0x1, 0x0);
        gbc.writeMem(0xda59, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xdbcb);
        EXPECT(gbc.pc(), 0xda5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda59), 0x78);
        // 78 017A
        gbc.setState(0xc592, 0xe7a2, 0x9d80, 0xf6ca, 0x52a0, 0x5f8, 0x0, 0x0);
        gbc.writeMem(0xc592, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe7a2);
        EXPECT(gbc.pc(), 0xc593);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc592), 0x78);
        // 78 017B
        gbc.setState(0xeab9, 0x8567, 0x4770, 0x62fc, 0xec19, 0xe3c5, 0x1, 0x0);
        gbc.writeMem(0xeab9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8567);
        EXPECT(gbc.pc(), 0xeaba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeab9), 0x78);
        // 78 017C
        gbc.setState(0x998a, 0xa16f, 0x8760, 0xd6f8, 0xd842, 0xa040, 0x1, 0x0);
        gbc.writeMem(0x998a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa16f);
        EXPECT(gbc.pc(), 0x998b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x998a), 0x78);
        // 78 017E
        gbc.setState(0x4b34, 0x8fa7, 0x7e90, 0x34a2, 0x9cba, 0xa63e, 0x1, 0x1);
        gbc.writeMem(0x4b34, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8fa7);
        EXPECT(gbc.pc(), 0x4b35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0180
        gbc.setState(0x1485, 0xf9f7, 0x2460, 0xf678, 0xd2ad, 0xd1e6, 0x1, 0x1);
        gbc.writeMem(0x1485, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf9f7);
        EXPECT(gbc.pc(), 0x1486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0181
        gbc.setState(0xa8e8, 0x9f83, 0xb4f0, 0x5aaa, 0xd912, 0x367f, 0x1, 0x1);
        gbc.writeMem(0xa8e8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x9f83);
        EXPECT(gbc.pc(), 0xa8e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8e8), 0x78);
        // 78 0182
        gbc.setState(0x8877, 0xfdd9, 0x3b40, 0x7f56, 0x48d3, 0x9d2a, 0x1, 0x0);
        gbc.writeMem(0x8877, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xfdd9);
        EXPECT(gbc.pc(), 0x8878);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8877), 0x78);
        // 78 0183
        gbc.setState(0xe851, 0xefdd, 0x23e0, 0x37ef, 0xa929, 0x62f8, 0x1, 0x0);
        gbc.writeMem(0xe851, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xefdd);
        EXPECT(gbc.pc(), 0xe852);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe851), 0x78);
        // 78 0184
        gbc.setState(0x9447, 0x1ad9, 0x1190, 0x3f54, 0x15b7, 0x5527, 0x0, 0x1);
        gbc.writeMem(0x9447, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x1ad9);
        EXPECT(gbc.pc(), 0x9448);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9447), 0x78);
        // 78 0185
        gbc.setState(0xd3af, 0xdcac, 0xf110, 0x170e, 0xbfaa, 0xd60b, 0x1, 0x1);
        gbc.writeMem(0xd3af, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xdcac);
        EXPECT(gbc.pc(), 0xd3b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3af), 0x78);
        // 78 0186
        gbc.setState(0xcfa2, 0xbaee, 0x9e30, 0x67c, 0xca86, 0x8e0c, 0x1, 0x1);
        gbc.writeMem(0xcfa2, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xbaee);
        EXPECT(gbc.pc(), 0xcfa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfa2), 0x78);
        // 78 0187
        gbc.setState(0x7987, 0x239c, 0xfea0, 0x8229, 0x7c7, 0x418d, 0x0, 0x1);
        gbc.writeMem(0x7987, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x239c);
        EXPECT(gbc.pc(), 0x7988);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0188
        gbc.setState(0xc0fb, 0xbaf8, 0xfb90, 0xf6ef, 0xe29a, 0xed2f, 0x0, 0x0);
        gbc.writeMem(0xc0fb, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xbaf8);
        EXPECT(gbc.pc(), 0xc0fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0fb), 0x78);
        // 78 0189
        gbc.setState(0x46d1, 0x66f4, 0x6460, 0x750b, 0x356d, 0x9e80, 0x1, 0x0);
        gbc.writeMem(0x46d1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x66f4);
        EXPECT(gbc.pc(), 0x46d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 018A
        gbc.setState(0x5de2, 0xf65c, 0xce90, 0xb542, 0xb3ad, 0xf377, 0x1, 0x1);
        gbc.writeMem(0x5de2, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xf65c);
        EXPECT(gbc.pc(), 0x5de3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 018B
        gbc.setState(0x3704, 0xcccd, 0x3030, 0xce8f, 0xd92f, 0x951b, 0x0, 0x0);
        gbc.writeMem(0x3704, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xcccd);
        EXPECT(gbc.pc(), 0x3705);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 018C
        gbc.setState(0x75f8, 0x9f10, 0xa10, 0x33bf, 0x1716, 0xd7cf, 0x1, 0x1);
        gbc.writeMem(0x75f8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x9f10);
        EXPECT(gbc.pc(), 0x75f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 018D
        gbc.setState(0x8556, 0x9b17, 0x14b0, 0xa0fb, 0x8670, 0xe7e6, 0x1, 0x0);
        gbc.writeMem(0x8556, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9b17);
        EXPECT(gbc.pc(), 0x8557);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8556), 0x78);
        // 78 018E
        gbc.setState(0x10c7, 0x92a7, 0x43c0, 0xbf9b, 0xd83a, 0x2798, 0x0, 0x1);
        gbc.writeMem(0x10c7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x92a7);
        EXPECT(gbc.pc(), 0x10c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 018F
        gbc.setState(0xa86f, 0xd733, 0x2ee0, 0xbbee, 0x21a, 0x179c, 0x1, 0x0);
        gbc.writeMem(0xa86f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd733);
        EXPECT(gbc.pc(), 0xa870);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa86f), 0x78);
        // 78 0191
        gbc.setState(0x58c8, 0x6f14, 0x6710, 0x916e, 0x7ad2, 0x8d1c, 0x0, 0x1);
        gbc.writeMem(0x58c8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x6f14);
        EXPECT(gbc.pc(), 0x58c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0192
        gbc.setState(0xecc9, 0x9209, 0x6780, 0xb2f5, 0x882, 0x798f, 0x1, 0x1);
        gbc.writeMem(0xecc9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x9209);
        EXPECT(gbc.pc(), 0xecca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecc9), 0x78);
        // 78 0193
        gbc.setState(0x9cca, 0x104f, 0xbfd0, 0x2d5, 0x82ff, 0x7e16, 0x0, 0x0);
        gbc.writeMem(0x9cca, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x104f);
        EXPECT(gbc.pc(), 0x9ccb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cca), 0x78);
        // 78 0194
        gbc.setState(0x5fd1, 0x4bc0, 0xdf00, 0xfb8c, 0x6088, 0x5f78, 0x0, 0x0);
        gbc.writeMem(0x5fd1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4bc0);
        EXPECT(gbc.pc(), 0x5fd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0196
        gbc.setState(0x97cc, 0x3b8d, 0x35d0, 0xfbcd, 0xcf5c, 0x5557, 0x1, 0x0);
        gbc.writeMem(0x97cc, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x3b8d);
        EXPECT(gbc.pc(), 0x97cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97cc), 0x78);
        // 78 0197
        gbc.setState(0x6d5b, 0xf1b9, 0x64e0, 0xb643, 0xc40f, 0x181, 0x1, 0x1);
        gbc.writeMem(0x6d5b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xf1b9);
        EXPECT(gbc.pc(), 0x6d5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0198
        gbc.setState(0x5183, 0xb04d, 0x1fe0, 0x1c38, 0xa087, 0xfe64, 0x0, 0x1);
        gbc.writeMem(0x5183, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xb04d);
        EXPECT(gbc.pc(), 0x5184);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0199
        gbc.setState(0x63b7, 0xc4ac, 0x2f40, 0xcd25, 0xbab1, 0xf87, 0x0, 0x0);
        gbc.writeMem(0x63b7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xc4ac);
        EXPECT(gbc.pc(), 0x63b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 019A
        gbc.setState(0xdc50, 0x7fc5, 0x8ed0, 0x8f9b, 0x8c78, 0x9862, 0x1, 0x1);
        gbc.writeMem(0xdc50, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x7fc5);
        EXPECT(gbc.pc(), 0xdc51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc50), 0x78);
        // 78 019B
        gbc.setState(0xbc45, 0x8e6c, 0x1950, 0x6f72, 0x9d08, 0x6454, 0x1, 0x1);
        gbc.writeMem(0xbc45, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x8e6c);
        EXPECT(gbc.pc(), 0xbc46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc45), 0x78);
        // 78 019C
        gbc.setState(0x60e3, 0x5534, 0x21b0, 0x926, 0xf68d, 0x72b1, 0x0, 0x0);
        gbc.writeMem(0x60e3, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5534);
        EXPECT(gbc.pc(), 0x60e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 019D
        gbc.setState(0x55aa, 0x9fdd, 0x7fe0, 0x301d, 0xb7e9, 0x2c2f, 0x0, 0x1);
        gbc.writeMem(0x55aa, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9fdd);
        EXPECT(gbc.pc(), 0x55ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 019E
        gbc.setState(0x4a4c, 0x93fc, 0x3cd0, 0x5c19, 0x768e, 0xe360, 0x1, 0x0);
        gbc.writeMem(0x4a4c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x93fc);
        EXPECT(gbc.pc(), 0x4a4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 019F
        gbc.setState(0x9aee, 0xd7eb, 0xac70, 0xb0c1, 0xc298, 0x63e5, 0x1, 0x1);
        gbc.writeMem(0x9aee, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd7eb);
        EXPECT(gbc.pc(), 0x9aef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aee), 0x78);
        // 78 01A1
        gbc.setState(0xab3f, 0x207f, 0xe270, 0x6107, 0xff74, 0x6830, 0x1, 0x0);
        gbc.writeMem(0xab3f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x207f);
        EXPECT(gbc.pc(), 0xab40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab3f), 0x78);
        // 78 01A2
        gbc.setState(0xeba6, 0xfc22, 0x5960, 0x5443, 0x3dac, 0x37f0, 0x1, 0x1);
        gbc.writeMem(0xeba6, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xfc22);
        EXPECT(gbc.pc(), 0xeba7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeba6), 0x78);
        // 78 01A3
        gbc.setState(0xdbcf, 0x70, 0x4e30, 0xd832, 0x80be, 0x4032, 0x1, 0x1);
        gbc.writeMem(0xdbcf, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x70);
        EXPECT(gbc.pc(), 0xdbd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbcf), 0x78);
        // 78 01A5
        gbc.setState(0x5b93, 0x931a, 0x6b90, 0x4326, 0x43e9, 0xb485, 0x1, 0x0);
        gbc.writeMem(0x5b93, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x931a);
        EXPECT(gbc.pc(), 0x5b94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 01A6
        gbc.setState(0xd9e8, 0x55f4, 0xf220, 0x6d21, 0xe7a, 0x56d2, 0x1, 0x1);
        gbc.writeMem(0xd9e8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x55f4);
        EXPECT(gbc.pc(), 0xd9e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9e8), 0x78);
        // 78 01A7
        gbc.setState(0x4ccd, 0xc2fa, 0xc30, 0x2690, 0x545f, 0xaea7, 0x1, 0x0);
        gbc.writeMem(0x4ccd, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc2fa);
        EXPECT(gbc.pc(), 0x4cce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 01A8
        gbc.setState(0x311f, 0xa3fe, 0x2bb0, 0xa788, 0x8ec7, 0xcab2, 0x0, 0x0);
        gbc.writeMem(0x311f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xa3fe);
        EXPECT(gbc.pc(), 0x3120);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 01A9
        gbc.setState(0x347c, 0xc195, 0xfd0, 0x7966, 0x9104, 0x4888, 0x1, 0x0);
        gbc.writeMem(0x347c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc195);
        EXPECT(gbc.pc(), 0x347d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 01AA
        gbc.setState(0xed95, 0x8127, 0x5050, 0x16f5, 0x8e43, 0x60c3, 0x0, 0x1);
        gbc.writeMem(0xed95, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x8127);
        EXPECT(gbc.pc(), 0xed96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed95), 0x78);
        // 78 01AB
        gbc.setState(0x7aff, 0x2da0, 0xf650, 0xe124, 0x6a94, 0xe9c0, 0x0, 0x0);
        gbc.writeMem(0x7aff, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x2da0);
        EXPECT(gbc.pc(), 0x7b00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 01AC
        gbc.setState(0xbbb6, 0x7b60, 0xed90, 0x56ad, 0x46ee, 0x6eb9, 0x1, 0x1);
        gbc.writeMem(0xbbb6, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x7b60);
        EXPECT(gbc.pc(), 0xbbb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbb6), 0x78);
        // 78 01AD
        gbc.setState(0x97c9, 0xe029, 0xfb80, 0x7ac5, 0x6fd3, 0xae09, 0x0, 0x0);
        gbc.writeMem(0x97c9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xe029);
        EXPECT(gbc.pc(), 0x97ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97c9), 0x78);
        // 78 01AE
        gbc.setState(0x7e43, 0x6140, 0xad80, 0xb80c, 0x6d93, 0x53ad, 0x1, 0x1);
        gbc.writeMem(0x7e43, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6140);
        EXPECT(gbc.pc(), 0x7e44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 01AF
        gbc.setState(0x5454, 0xc9ab, 0xad20, 0x79e1, 0x2374, 0x936f, 0x0, 0x1);
        gbc.writeMem(0x5454, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc9ab);
        EXPECT(gbc.pc(), 0x5455);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 01B1
        gbc.setState(0x81a3, 0xb79d, 0xa6f0, 0x13a3, 0xe2ee, 0xff74, 0x1, 0x1);
        gbc.writeMem(0x81a3, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb79d);
        EXPECT(gbc.pc(), 0x81a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81a3), 0x78);
        // 78 01B2
        gbc.setState(0xdce0, 0xe654, 0xc2b0, 0xe88d, 0x6d68, 0x8601, 0x0, 0x0);
        gbc.writeMem(0xdce0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe654);
        EXPECT(gbc.pc(), 0xdce1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdce0), 0x78);
        // 78 01B3
        gbc.setState(0xdbc9, 0x2adc, 0x1f50, 0x2ebe, 0xfd9d, 0xba16, 0x0, 0x0);
        gbc.writeMem(0xdbc9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x2adc);
        EXPECT(gbc.pc(), 0xdbca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbc9), 0x78);
        // 78 01B4
        gbc.setState(0x31e9, 0x794e, 0x8d20, 0x4e6d, 0x2892, 0x4174, 0x1, 0x1);
        gbc.writeMem(0x31e9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x794e);
        EXPECT(gbc.pc(), 0x31ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 01B5
        gbc.setState(0xb036, 0x9566, 0x5f20, 0x62fb, 0xd696, 0xe92, 0x1, 0x0);
        gbc.writeMem(0xb036, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9566);
        EXPECT(gbc.pc(), 0xb037);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb036), 0x78);
        // 78 01B6
        gbc.setState(0xbd40, 0x7c24, 0x5100, 0xee70, 0x7d2a, 0x92bc, 0x1, 0x0);
        gbc.writeMem(0xbd40, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7c24);
        EXPECT(gbc.pc(), 0xbd41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd40), 0x78);
        // 78 01B7
        gbc.setState(0x55e5, 0xd90c, 0x1460, 0x4a04, 0xe69f, 0x5fc2, 0x0, 0x1);
        gbc.writeMem(0x55e5, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd90c);
        EXPECT(gbc.pc(), 0x55e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 01B8
        gbc.setState(0xdb4f, 0x5a43, 0xbaa0, 0x1135, 0x2c9, 0x68a6, 0x0, 0x0);
        gbc.writeMem(0xdb4f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x5a43);
        EXPECT(gbc.pc(), 0xdb50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb4f), 0x78);
        // 78 01B9
        gbc.setState(0x7f9c, 0x9a40, 0x5b10, 0x7373, 0x8ef1, 0x3a35, 0x0, 0x0);
        gbc.writeMem(0x7f9c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9a40);
        EXPECT(gbc.pc(), 0x7f9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 01BA
        gbc.setState(0x4e99, 0x2aac, 0x2570, 0x3f60, 0xafd2, 0xc248, 0x0, 0x1);
        gbc.writeMem(0x4e99, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2aac);
        EXPECT(gbc.pc(), 0x4e9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 01BB
        gbc.setState(0xafd1, 0x32b6, 0x7300, 0xf965, 0x9b67, 0xd8e1, 0x0, 0x1);
        gbc.writeMem(0xafd1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x32b6);
        EXPECT(gbc.pc(), 0xafd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafd1), 0x78);
        // 78 01BC
        gbc.setState(0x9aa9, 0xbc52, 0x5880, 0xa460, 0x8ddd, 0x63c1, 0x1, 0x1);
        gbc.writeMem(0x9aa9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xbc52);
        EXPECT(gbc.pc(), 0x9aaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aa9), 0x78);
        // 78 01BD
        gbc.setState(0x4a1, 0x7acb, 0x2840, 0x7107, 0xf02d, 0x49cf, 0x1, 0x0);
        gbc.writeMem(0x4a1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7acb);
        EXPECT(gbc.pc(), 0x4a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 01BE
        gbc.setState(0x804f, 0x9fe2, 0x50f0, 0x8bd1, 0x4b06, 0x7318, 0x0, 0x1);
        gbc.writeMem(0x804f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9fe2);
        EXPECT(gbc.pc(), 0x8050);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x804f), 0x78);
        // 78 01BF
        gbc.setState(0x24f1, 0xad3, 0xb750, 0xcb8b, 0x96c5, 0x5e92, 0x1, 0x0);
        gbc.writeMem(0x24f1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xad3);
        EXPECT(gbc.pc(), 0x24f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 01C0
        gbc.setState(0x8e, 0x1561, 0xff10, 0x7a65, 0xfb92, 0x81d9, 0x0, 0x0);
        gbc.writeMem(0x8e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1561);
        EXPECT(gbc.pc(), 0x8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 01C1
        gbc.setState(0x6bfa, 0x9fee, 0x1c90, 0xd632, 0xfacb, 0xa7e2, 0x0, 0x1);
        gbc.writeMem(0x6bfa, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x9fee);
        EXPECT(gbc.pc(), 0x6bfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 01C2
        gbc.setState(0x6265, 0x5616, 0xaf60, 0x970, 0xd8f3, 0x7353, 0x0, 0x0);
        gbc.writeMem(0x6265, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5616);
        EXPECT(gbc.pc(), 0x6266);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 01C3
        gbc.setState(0xdeca, 0x1d12, 0xc0a0, 0xfc94, 0x5777, 0xe96e, 0x0, 0x0);
        gbc.writeMem(0xdeca, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x1d12);
        EXPECT(gbc.pc(), 0xdecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeca), 0x78);
        // 78 01C4
        gbc.setState(0xb0f, 0x4dd0, 0x3cf0, 0x74b, 0xcc61, 0xa1fe, 0x0, 0x1);
        gbc.writeMem(0xb0f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x4dd0);
        EXPECT(gbc.pc(), 0xb10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 01C5
        gbc.setState(0x8a87, 0xff41, 0xde0, 0xb34f, 0x80ca, 0xcfcd, 0x0, 0x0);
        gbc.writeMem(0x8a87, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xff41);
        EXPECT(gbc.pc(), 0x8a88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a87), 0x78);
        // 78 01C6
        gbc.setState(0x7d54, 0x164d, 0xadd0, 0xa627, 0xf586, 0xbf7b, 0x1, 0x0);
        gbc.writeMem(0x7d54, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x164d);
        EXPECT(gbc.pc(), 0x7d55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 01C7
        gbc.setState(0x9043, 0xa86c, 0x55d0, 0xb3f1, 0xf8ac, 0x3cdb, 0x1, 0x1);
        gbc.writeMem(0x9043, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa86c);
        EXPECT(gbc.pc(), 0x9044);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9043), 0x78);
        // 78 01C8
        gbc.setState(0xc1aa, 0x6a00, 0xbe10, 0x7375, 0xf08a, 0x9ded, 0x0, 0x0);
        gbc.writeMem(0xc1aa, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6a00);
        EXPECT(gbc.pc(), 0xc1ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1aa), 0x78);
        // 78 01C9
        gbc.setState(0xb61c, 0x8454, 0x5ea0, 0x157e, 0x7a24, 0x9446, 0x0, 0x1);
        gbc.writeMem(0xb61c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x8454);
        EXPECT(gbc.pc(), 0xb61d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb61c), 0x78);
        // 78 01CB
        gbc.setState(0x7128, 0x2fd8, 0xcd50, 0x3f8b, 0x3951, 0xaf1c, 0x0, 0x1);
        gbc.writeMem(0x7128, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x2fd8);
        EXPECT(gbc.pc(), 0x7129);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 01CD
        gbc.setState(0x3e28, 0x59f2, 0x1500, 0xf467, 0xd784, 0x3f99, 0x1, 0x1);
        gbc.writeMem(0x3e28, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x59f2);
        EXPECT(gbc.pc(), 0x3e29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 01CE
        gbc.setState(0x5d14, 0x31ea, 0x6430, 0x9f01, 0xe90b, 0x9e1, 0x0, 0x1);
        gbc.writeMem(0x5d14, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x31ea);
        EXPECT(gbc.pc(), 0x5d15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 01CF
        gbc.setState(0xeeb1, 0x28c8, 0x11e0, 0x8e3b, 0xb9f0, 0xa4b1, 0x1, 0x0);
        gbc.writeMem(0xeeb1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x28c8);
        EXPECT(gbc.pc(), 0xeeb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeb1), 0x78);
        // 78 01D0
        gbc.setState(0xedce, 0xde0f, 0xb680, 0x1c51, 0x6b90, 0xc144, 0x1, 0x0);
        gbc.writeMem(0xedce, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xde0f);
        EXPECT(gbc.pc(), 0xedcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedce), 0x78);
        // 78 01D1
        gbc.setState(0xd904, 0x843c, 0xe250, 0x1bb, 0xe9c9, 0x9451, 0x0, 0x1);
        gbc.writeMem(0xd904, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x843c);
        EXPECT(gbc.pc(), 0xd905);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd904), 0x78);
        // 78 01D2
        gbc.setState(0x5b50, 0xd8d9, 0xeed0, 0xbedc, 0xc9ac, 0xd0fb, 0x1, 0x0);
        gbc.writeMem(0x5b50, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xd8d9);
        EXPECT(gbc.pc(), 0x5b51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 01D3
        gbc.setState(0xbced, 0xce9e, 0x7000, 0xc8a0, 0x5480, 0x903b, 0x1, 0x0);
        gbc.writeMem(0xbced, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xce9e);
        EXPECT(gbc.pc(), 0xbcee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbced), 0x78);
        // 78 01D4
        gbc.setState(0x82e0, 0xb031, 0x2480, 0x5061, 0x1620, 0x820c, 0x1, 0x0);
        gbc.writeMem(0x82e0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb031);
        EXPECT(gbc.pc(), 0x82e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e0), 0x78);
        // 78 01D5
        gbc.setState(0xee6e, 0x6ad5, 0xd8a0, 0xa4e5, 0x1e9a, 0x95cb, 0x1, 0x0);
        gbc.writeMem(0xee6e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6ad5);
        EXPECT(gbc.pc(), 0xee6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee6e), 0x78);
        // 78 01D6
        gbc.setState(0x472a, 0xa1da, 0x6fe0, 0x950f, 0xe41d, 0x7fd5, 0x0, 0x0);
        gbc.writeMem(0x472a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xa1da);
        EXPECT(gbc.pc(), 0x472b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 01D7
        gbc.setState(0xd0d9, 0xca35, 0x7050, 0x7aa1, 0xcb6e, 0xca60, 0x1, 0x0);
        gbc.writeMem(0xd0d9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xca35);
        EXPECT(gbc.pc(), 0xd0da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0d9), 0x78);
        // 78 01D9
        gbc.setState(0x54ce, 0x1cfa, 0x1920, 0xf1b3, 0xb8cb, 0x76c4, 0x1, 0x0);
        gbc.writeMem(0x54ce, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1cfa);
        EXPECT(gbc.pc(), 0x54cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 01DB
        gbc.setState(0x34a9, 0x80fe, 0xb0f0, 0x8b5b, 0xbf34, 0x7f9d, 0x1, 0x0);
        gbc.writeMem(0x34a9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x80fe);
        EXPECT(gbc.pc(), 0x34aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 01DC
        gbc.setState(0x24b7, 0x6a61, 0xe70, 0x2f33, 0xc82f, 0xc4a5, 0x0, 0x1);
        gbc.writeMem(0x24b7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6a61);
        EXPECT(gbc.pc(), 0x24b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 01DD
        gbc.setState(0x3319, 0xa1d, 0xc150, 0xb349, 0x6115, 0x39dd, 0x0, 0x0);
        gbc.writeMem(0x3319, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa1d);
        EXPECT(gbc.pc(), 0x331a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 01DE
        gbc.setState(0x9faa, 0xe8a3, 0x5490, 0x5fa7, 0x2836, 0xdebb, 0x0, 0x0);
        gbc.writeMem(0x9faa, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xe8a3);
        EXPECT(gbc.pc(), 0x9fab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9faa), 0x78);
        // 78 01DF
        gbc.setState(0x9d41, 0x2d30, 0x1890, 0xabe5, 0x9500, 0x184c, 0x1, 0x1);
        gbc.writeMem(0x9d41, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x2d30);
        EXPECT(gbc.pc(), 0x9d42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d41), 0x78);
        // 78 01E0
        gbc.setState(0x267a, 0x447e, 0xce0, 0xb6ee, 0x5124, 0xb98d, 0x1, 0x0);
        gbc.writeMem(0x267a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x447e);
        EXPECT(gbc.pc(), 0x267b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 01E1
        gbc.setState(0xea4a, 0x5985, 0x2f10, 0x3a5a, 0xaa0b, 0x6848, 0x1, 0x0);
        gbc.writeMem(0xea4a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x5985);
        EXPECT(gbc.pc(), 0xea4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea4a), 0x78);
        // 78 01E3
        gbc.setState(0x8f94, 0xe89b, 0x5d60, 0xbb26, 0x3fd2, 0x6359, 0x1, 0x1);
        gbc.writeMem(0x8f94, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe89b);
        EXPECT(gbc.pc(), 0x8f95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f94), 0x78);
        // 78 01E4
        gbc.setState(0xddbe, 0x8d7e, 0x4d20, 0x98f5, 0x250c, 0x24c3, 0x0, 0x1);
        gbc.writeMem(0xddbe, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x8d7e);
        EXPECT(gbc.pc(), 0xddbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddbe), 0x78);
        // 78 01E5
        gbc.setState(0x42b7, 0x7aa4, 0xd2f0, 0xf9cf, 0xc04e, 0x6d3f, 0x1, 0x1);
        gbc.writeMem(0x42b7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7aa4);
        EXPECT(gbc.pc(), 0x42b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 01E6
        gbc.setState(0xb44d, 0xacdd, 0xf5d0, 0x4c54, 0xa3c2, 0x73a2, 0x1, 0x1);
        gbc.writeMem(0xb44d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xacdd);
        EXPECT(gbc.pc(), 0xb44e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb44d), 0x78);
        // 78 01E7
        gbc.setState(0x9374, 0xc0d1, 0x5950, 0xf01, 0x507f, 0x7048, 0x0, 0x1);
        gbc.writeMem(0x9374, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xc0d1);
        EXPECT(gbc.pc(), 0x9375);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9374), 0x78);
        // 78 01E8
        gbc.setState(0x8988, 0x32a, 0xc9c0, 0x3007, 0xb871, 0x1e12, 0x0, 0x1);
        gbc.writeMem(0x8988, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x32a);
        EXPECT(gbc.pc(), 0x8989);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8988), 0x78);
        // 78 01E9
        gbc.setState(0xa861, 0x53a5, 0x5ac0, 0xc605, 0xd7ef, 0x435b, 0x1, 0x0);
        gbc.writeMem(0xa861, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x53a5);
        EXPECT(gbc.pc(), 0xa862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa861), 0x78);
        // 78 01EA
        gbc.setState(0xbaaa, 0x2189, 0xfae0, 0x66ad, 0xe668, 0x603e, 0x1, 0x1);
        gbc.writeMem(0xbaaa, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2189);
        EXPECT(gbc.pc(), 0xbaab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaaa), 0x78);
        // 78 01EB
        gbc.setState(0xdd2c, 0xc456, 0x90b0, 0xfc5, 0xff21, 0x64d8, 0x1, 0x0);
        gbc.writeMem(0xdd2c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc456);
        EXPECT(gbc.pc(), 0xdd2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd2c), 0x78);
        // 78 01EC
        gbc.setState(0xec3c, 0x9fe6, 0x3cc0, 0xb09b, 0x8b66, 0x9786, 0x0, 0x0);
        gbc.writeMem(0xec3c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9fe6);
        EXPECT(gbc.pc(), 0xec3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec3c), 0x78);
        // 78 01ED
        gbc.setState(0x9bdb, 0x818a, 0x1480, 0x4776, 0x16d0, 0xea12, 0x0, 0x0);
        gbc.writeMem(0x9bdb, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x818a);
        EXPECT(gbc.pc(), 0x9bdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bdb), 0x78);
        // 78 01EE
        gbc.setState(0x454, 0x8919, 0x9c30, 0x9568, 0xcf59, 0x52b0, 0x0, 0x1);
        gbc.writeMem(0x454, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x8919);
        EXPECT(gbc.pc(), 0x455);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 01EF
        gbc.setState(0x97b2, 0xdafd, 0x3730, 0xf014, 0xd508, 0xec4, 0x0, 0x1);
        gbc.writeMem(0x97b2, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xdafd);
        EXPECT(gbc.pc(), 0x97b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97b2), 0x78);
        // 78 01F0
        gbc.setState(0xe14f, 0xd97c, 0x54a0, 0x188d, 0xd171, 0xabd1, 0x1, 0x0);
        gbc.writeMem(0xe14f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd97c);
        EXPECT(gbc.pc(), 0xe150);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe14f), 0x78);
        // 78 01F1
        gbc.setState(0xaf11, 0xfddc, 0x8270, 0x16cc, 0xaf8, 0x1186, 0x1, 0x0);
        gbc.writeMem(0xaf11, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xfddc);
        EXPECT(gbc.pc(), 0xaf12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf11), 0x78);
        // 78 01F2
        gbc.setState(0x974f, 0x755b, 0x9050, 0xba1b, 0x655e, 0xb17d, 0x1, 0x0);
        gbc.writeMem(0x974f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x755b);
        EXPECT(gbc.pc(), 0x9750);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x974f), 0x78);
        // 78 01F4
        gbc.setState(0xda5c, 0xb9d9, 0x7860, 0xc69a, 0xbd30, 0xe3e3, 0x0, 0x0);
        gbc.writeMem(0xda5c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xb9d9);
        EXPECT(gbc.pc(), 0xda5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda5c), 0x78);
        // 78 01F5
        gbc.setState(0x6ed0, 0x8e73, 0x8230, 0x1056, 0x8b08, 0xb133, 0x0, 0x0);
        gbc.writeMem(0x6ed0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8e73);
        EXPECT(gbc.pc(), 0x6ed1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 01F6
        gbc.setState(0xe7bf, 0xf4c0, 0x7230, 0x7343, 0x7aaa, 0x7d61, 0x1, 0x1);
        gbc.writeMem(0xe7bf, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf4c0);
        EXPECT(gbc.pc(), 0xe7c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7bf), 0x78);
        // 78 01F7
        gbc.setState(0x9c89, 0x69fb, 0xeb70, 0x72a, 0x26b4, 0x82e0, 0x1, 0x1);
        gbc.writeMem(0x9c89, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x69fb);
        EXPECT(gbc.pc(), 0x9c8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c89), 0x78);
        // 78 01F8
        gbc.setState(0xd641, 0x6d04, 0x9580, 0x1ad6, 0x8e7a, 0xfadb, 0x1, 0x1);
        gbc.writeMem(0xd641, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x6d04);
        EXPECT(gbc.pc(), 0xd642);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd641), 0x78);
        // 78 01F9
        gbc.setState(0x84bf, 0x5608, 0xabc0, 0x27b7, 0xde27, 0x8aa5, 0x1, 0x1);
        gbc.writeMem(0x84bf, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5608);
        EXPECT(gbc.pc(), 0x84c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84bf), 0x78);
        // 78 01FA
        gbc.setState(0x8d74, 0x260c, 0x4c30, 0x9e71, 0x4031, 0x561e, 0x0, 0x0);
        gbc.writeMem(0x8d74, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x260c);
        EXPECT(gbc.pc(), 0x8d75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d74), 0x78);
        // 78 01FB
        gbc.setState(0x8d63, 0xacd6, 0x38a0, 0x9f1a, 0x7765, 0x3eed, 0x1, 0x0);
        gbc.writeMem(0x8d63, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xacd6);
        EXPECT(gbc.pc(), 0x8d64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d63), 0x78);
        // 78 01FC
        gbc.setState(0xc75, 0x22fa, 0x6b30, 0x4246, 0xbdf5, 0xabe6, 0x0, 0x1);
        gbc.writeMem(0xc75, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x22fa);
        EXPECT(gbc.pc(), 0xc76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 01FD
        gbc.setState(0x53fa, 0xe8a9, 0xd2d0, 0x4d1c, 0x16f3, 0x725a, 0x0, 0x1);
        gbc.writeMem(0x53fa, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xe8a9);
        EXPECT(gbc.pc(), 0x53fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 01FE
        gbc.setState(0xd88, 0x2e1c, 0x180, 0x1c48, 0x7fd8, 0xc5c3, 0x0, 0x0);
        gbc.writeMem(0xd88, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2e1c);
        EXPECT(gbc.pc(), 0xd89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 01FF
        gbc.setState(0x3db3, 0xb362, 0x7710, 0xc641, 0x4dda, 0xd84d, 0x0, 0x1);
        gbc.writeMem(0x3db3, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb362);
        EXPECT(gbc.pc(), 0x3db4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0200
        gbc.setState(0x1a55, 0xec4a, 0xfe40, 0xfc1c, 0x4fb5, 0x9994, 0x1, 0x0);
        gbc.writeMem(0x1a55, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xec4a);
        EXPECT(gbc.pc(), 0x1a56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0201
        gbc.setState(0xb2fa, 0x1956, 0x99d0, 0xc73c, 0x552f, 0x3410, 0x0, 0x1);
        gbc.writeMem(0xb2fa, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1956);
        EXPECT(gbc.pc(), 0xb2fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2fa), 0x78);
        // 78 0202
        gbc.setState(0x5e1c, 0xcdd4, 0xa8e0, 0xc8cc, 0x136b, 0xf127, 0x0, 0x0);
        gbc.writeMem(0x5e1c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xcdd4);
        EXPECT(gbc.pc(), 0x5e1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0203
        gbc.setState(0x29a7, 0x150c, 0xb590, 0xb037, 0x9030, 0x97cc, 0x1, 0x0);
        gbc.writeMem(0x29a7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x150c);
        EXPECT(gbc.pc(), 0x29a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0204
        gbc.setState(0x8cb0, 0x6f4d, 0xf7d0, 0xd1e8, 0xffd7, 0xdc4a, 0x0, 0x0);
        gbc.writeMem(0x8cb0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x6f4d);
        EXPECT(gbc.pc(), 0x8cb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cb0), 0x78);
        // 78 0205
        gbc.setState(0xe5f8, 0xf0c8, 0x5f90, 0xce23, 0xb61d, 0x4f24, 0x0, 0x0);
        gbc.writeMem(0xe5f8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xf0c8);
        EXPECT(gbc.pc(), 0xe5f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5f8), 0x78);
        // 78 0206
        gbc.setState(0x6452, 0x6bf5, 0x7a80, 0x979d, 0x4932, 0xd45f, 0x0, 0x0);
        gbc.writeMem(0x6452, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x6bf5);
        EXPECT(gbc.pc(), 0x6453);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0207
        gbc.setState(0xa39b, 0xb873, 0xad00, 0xd767, 0xcd1e, 0x371d, 0x0, 0x1);
        gbc.writeMem(0xa39b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb873);
        EXPECT(gbc.pc(), 0xa39c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa39b), 0x78);
        // 78 0208
        gbc.setState(0x7cb0, 0x3002, 0xa6c0, 0xdb0f, 0xb7f, 0x6bb, 0x0, 0x1);
        gbc.writeMem(0x7cb0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3002);
        EXPECT(gbc.pc(), 0x7cb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0209
        gbc.setState(0x5cb3, 0x869a, 0xa80, 0xaa25, 0x9521, 0xe7dc, 0x0, 0x1);
        gbc.writeMem(0x5cb3, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x869a);
        EXPECT(gbc.pc(), 0x5cb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 020A
        gbc.setState(0x1c1, 0x9257, 0x6400, 0x996b, 0xe241, 0xd38e, 0x0, 0x0);
        gbc.writeMem(0x1c1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9257);
        EXPECT(gbc.pc(), 0x1c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 020B
        gbc.setState(0xce2f, 0xa3d1, 0xc180, 0xde45, 0x731d, 0x323, 0x1, 0x0);
        gbc.writeMem(0xce2f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa3d1);
        EXPECT(gbc.pc(), 0xce30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce2f), 0x78);
        // 78 020C
        gbc.setState(0x1e76, 0x8468, 0x5a80, 0xc78, 0x56ad, 0x74e6, 0x1, 0x1);
        gbc.writeMem(0x1e76, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8468);
        EXPECT(gbc.pc(), 0x1e77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 020D
        gbc.setState(0x5a92, 0xe2ef, 0x60d0, 0xb15b, 0x850c, 0x5c9b, 0x1, 0x0);
        gbc.writeMem(0x5a92, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xe2ef);
        EXPECT(gbc.pc(), 0x5a93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 020E
        gbc.setState(0x3c47, 0x530c, 0x92c0, 0x4f04, 0x32d3, 0x4574, 0x0, 0x1);
        gbc.writeMem(0x3c47, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x530c);
        EXPECT(gbc.pc(), 0x3c48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 020F
        gbc.setState(0x698d, 0x9827, 0x10d0, 0xcff7, 0x2d1d, 0x67e0, 0x1, 0x0);
        gbc.writeMem(0x698d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9827);
        EXPECT(gbc.pc(), 0x698e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0211
        gbc.setState(0x8f6f, 0xebd9, 0x3f60, 0x4c94, 0xb93, 0x1c05, 0x0, 0x0);
        gbc.writeMem(0x8f6f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xebd9);
        EXPECT(gbc.pc(), 0x8f70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f6f), 0x78);
        // 78 0212
        gbc.setState(0xda4c, 0xe7c, 0x93a0, 0x75c8, 0x2e11, 0xe721, 0x0, 0x0);
        gbc.writeMem(0xda4c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe7c);
        EXPECT(gbc.pc(), 0xda4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda4c), 0x78);
        // 78 0213
        gbc.setState(0x181b, 0x6fad, 0x4ce0, 0xdeb8, 0xa641, 0x8cd0, 0x1, 0x0);
        gbc.writeMem(0x181b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x6fad);
        EXPECT(gbc.pc(), 0x181c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0214
        gbc.setState(0x57bf, 0x412e, 0x4030, 0x681c, 0x18f8, 0x7f81, 0x1, 0x1);
        gbc.writeMem(0x57bf, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x412e);
        EXPECT(gbc.pc(), 0x57c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0215
        gbc.setState(0x65ca, 0x98e6, 0x8bb0, 0x69b5, 0x565d, 0x136f, 0x1, 0x0);
        gbc.writeMem(0x65ca, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x98e6);
        EXPECT(gbc.pc(), 0x65cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0216
        gbc.setState(0xe460, 0x83fd, 0x9ed0, 0x17eb, 0x7b92, 0x9642, 0x1, 0x0);
        gbc.writeMem(0xe460, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x83fd);
        EXPECT(gbc.pc(), 0xe461);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe460), 0x78);
        // 78 0217
        gbc.setState(0x8b9e, 0x3d40, 0x2af0, 0x5a8, 0xc7e3, 0xa22e, 0x0, 0x0);
        gbc.writeMem(0x8b9e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3d40);
        EXPECT(gbc.pc(), 0x8b9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b9e), 0x78);
        // 78 0218
        gbc.setState(0x2fb9, 0xba0d, 0x8560, 0xb606, 0x56e5, 0x7e29, 0x0, 0x1);
        gbc.writeMem(0x2fb9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xba0d);
        EXPECT(gbc.pc(), 0x2fba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0219
        gbc.setState(0xd56, 0x3bbb, 0x64c0, 0xaf73, 0xc135, 0xf8d1, 0x1, 0x1);
        gbc.writeMem(0xd56, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x3bbb);
        EXPECT(gbc.pc(), 0xd57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 021A
        gbc.setState(0x62e0, 0x3c7b, 0xc500, 0x8eb3, 0x508, 0xc606, 0x0, 0x1);
        gbc.writeMem(0x62e0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x3c7b);
        EXPECT(gbc.pc(), 0x62e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 021B
        gbc.setState(0xeaa0, 0x7721, 0xe020, 0xa20f, 0xaac9, 0x40fc, 0x0, 0x0);
        gbc.writeMem(0xeaa0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7721);
        EXPECT(gbc.pc(), 0xeaa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaa0), 0x78);
        // 78 021C
        gbc.setState(0xd292, 0x5bdc, 0x7cf0, 0xeab, 0x3493, 0xeac4, 0x0, 0x0);
        gbc.writeMem(0xd292, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5bdc);
        EXPECT(gbc.pc(), 0xd293);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd292), 0x78);
        // 78 021D
        gbc.setState(0xa521, 0xa4e, 0xc420, 0x6100, 0x8195, 0x9643, 0x0, 0x0);
        gbc.writeMem(0xa521, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa4e);
        EXPECT(gbc.pc(), 0xa522);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa521), 0x78);
        // 78 021E
        gbc.setState(0x9b31, 0xb21c, 0xc4a0, 0xaa2c, 0x921e, 0x531b, 0x1, 0x1);
        gbc.writeMem(0x9b31, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb21c);
        EXPECT(gbc.pc(), 0x9b32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b31), 0x78);
        // 78 021F
        gbc.setState(0xdb41, 0xf3e, 0xf720, 0x2584, 0xd19b, 0xdc80, 0x0, 0x0);
        gbc.writeMem(0xdb41, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf3e);
        EXPECT(gbc.pc(), 0xdb42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb41), 0x78);
        // 78 0220
        gbc.setState(0x1a83, 0xac7e, 0xd360, 0xcde7, 0xd1d0, 0x966e, 0x1, 0x1);
        gbc.writeMem(0x1a83, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xac7e);
        EXPECT(gbc.pc(), 0x1a84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0221
        gbc.setState(0xb3cc, 0x3a94, 0xc9a0, 0x174b, 0x46c6, 0x873d, 0x1, 0x1);
        gbc.writeMem(0xb3cc, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x3a94);
        EXPECT(gbc.pc(), 0xb3cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3cc), 0x78);
        // 78 0222
        gbc.setState(0x3db9, 0x380, 0x6660, 0x95a0, 0x8ddb, 0x3ae5, 0x0, 0x1);
        gbc.writeMem(0x3db9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x380);
        EXPECT(gbc.pc(), 0x3dba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0223
        gbc.setState(0xb46, 0xe0f5, 0x9bf0, 0x8a30, 0x9011, 0x170, 0x1, 0x1);
        gbc.writeMem(0xb46, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe0f5);
        EXPECT(gbc.pc(), 0xb47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0224
        gbc.setState(0xb50b, 0xf2cf, 0x79f0, 0xa705, 0xa80a, 0x4264, 0x0, 0x0);
        gbc.writeMem(0xb50b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf2cf);
        EXPECT(gbc.pc(), 0xb50c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb50b), 0x78);
        // 78 0225
        gbc.setState(0x7731, 0x34f0, 0x2bd0, 0x5f6, 0x98ee, 0x4742, 0x0, 0x0);
        gbc.writeMem(0x7731, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x34f0);
        EXPECT(gbc.pc(), 0x7732);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0227
        gbc.setState(0x8b63, 0x83e2, 0xa9a0, 0x8bb7, 0xe01a, 0x7f71, 0x1, 0x1);
        gbc.writeMem(0x8b63, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x83e2);
        EXPECT(gbc.pc(), 0x8b64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b63), 0x78);
        // 78 0228
        gbc.setState(0xde2b, 0x972c, 0x8f80, 0x692e, 0xf1ab, 0xeedc, 0x1, 0x0);
        gbc.writeMem(0xde2b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x972c);
        EXPECT(gbc.pc(), 0xde2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde2b), 0x78);
        // 78 0229
        gbc.setState(0x20e8, 0xb606, 0x5e10, 0x5c64, 0xeea5, 0x48e1, 0x0, 0x1);
        gbc.writeMem(0x20e8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb606);
        EXPECT(gbc.pc(), 0x20e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 022A
        gbc.setState(0xeb46, 0x431c, 0xdf80, 0xfa49, 0x34b7, 0x5910, 0x0, 0x1);
        gbc.writeMem(0xeb46, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x431c);
        EXPECT(gbc.pc(), 0xeb47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb46), 0x78);
        // 78 022B
        gbc.setState(0x4fc2, 0xf834, 0xa330, 0xd620, 0x21f4, 0x7dca, 0x1, 0x1);
        gbc.writeMem(0x4fc2, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xf834);
        EXPECT(gbc.pc(), 0x4fc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 022C
        gbc.setState(0xc794, 0x146a, 0x8600, 0xaa09, 0xa1c0, 0x344c, 0x0, 0x1);
        gbc.writeMem(0xc794, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x146a);
        EXPECT(gbc.pc(), 0xc795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc794), 0x78);
        // 78 022D
        gbc.setState(0xd778, 0xbe32, 0x4ca0, 0xb5f, 0xd7ad, 0x2646, 0x0, 0x1);
        gbc.writeMem(0xd778, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xbe32);
        EXPECT(gbc.pc(), 0xd779);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd778), 0x78);
        // 78 022E
        gbc.setState(0xc07f, 0xa968, 0x94a0, 0x3d4c, 0xd6b5, 0x909a, 0x1, 0x1);
        gbc.writeMem(0xc07f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa968);
        EXPECT(gbc.pc(), 0xc080);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc07f), 0x78);
        // 78 022F
        gbc.setState(0xc711, 0x76fc, 0xa540, 0x7b40, 0xe562, 0x342a, 0x0, 0x1);
        gbc.writeMem(0xc711, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x76fc);
        EXPECT(gbc.pc(), 0xc712);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc711), 0x78);
        // 78 0231
        gbc.setState(0xdac, 0x9898, 0x7590, 0xf34d, 0xbe3e, 0x8683, 0x1, 0x0);
        gbc.writeMem(0xdac, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9898);
        EXPECT(gbc.pc(), 0xdad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0232
        gbc.setState(0x8c13, 0xa0bf, 0x4150, 0xfd49, 0x66ef, 0xe3d9, 0x0, 0x1);
        gbc.writeMem(0x8c13, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa0bf);
        EXPECT(gbc.pc(), 0x8c14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c13), 0x78);
        // 78 0233
        gbc.setState(0x5d90, 0x3699, 0x8db0, 0xd79d, 0x18e6, 0x1221, 0x0, 0x1);
        gbc.writeMem(0x5d90, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3699);
        EXPECT(gbc.pc(), 0x5d91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0234
        gbc.setState(0xdbfa, 0x63a2, 0xf9a0, 0x418, 0x7b52, 0xd022, 0x0, 0x1);
        gbc.writeMem(0xdbfa, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x63a2);
        EXPECT(gbc.pc(), 0xdbfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbfa), 0x78);
        // 78 0235
        gbc.setState(0xd005, 0x983c, 0xf30, 0x62dc, 0x340d, 0x46e0, 0x0, 0x0);
        gbc.writeMem(0xd005, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x983c);
        EXPECT(gbc.pc(), 0xd006);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd005), 0x78);
        // 78 0236
        gbc.setState(0x36b5, 0xb30c, 0xee40, 0x1ecd, 0xb605, 0x7535, 0x1, 0x0);
        gbc.writeMem(0x36b5, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb30c);
        EXPECT(gbc.pc(), 0x36b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0237
        gbc.setState(0x1276, 0x4ccb, 0xcf20, 0x7b0, 0xafc9, 0x9778, 0x1, 0x1);
        gbc.writeMem(0x1276, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4ccb);
        EXPECT(gbc.pc(), 0x1277);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0238
        gbc.setState(0x455a, 0xcc44, 0x8420, 0x9c3c, 0x1329, 0xd0a0, 0x1, 0x1);
        gbc.writeMem(0x455a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xcc44);
        EXPECT(gbc.pc(), 0x455b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0239
        gbc.setState(0xb59f, 0xbacd, 0xead0, 0xd32f, 0x117f, 0x39e4, 0x1, 0x1);
        gbc.writeMem(0xb59f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xbacd);
        EXPECT(gbc.pc(), 0xb5a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb59f), 0x78);
        // 78 023A
        gbc.setState(0xa65c, 0xcfbb, 0xa100, 0x8b87, 0x20ba, 0xa4f9, 0x0, 0x1);
        gbc.writeMem(0xa65c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xcfbb);
        EXPECT(gbc.pc(), 0xa65d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa65c), 0x78);
        // 78 023B
        gbc.setState(0xd35d, 0x1818, 0x4420, 0xd87d, 0xb13b, 0xe889, 0x0, 0x0);
        gbc.writeMem(0xd35d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1818);
        EXPECT(gbc.pc(), 0xd35e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd35d), 0x78);
        // 78 023C
        gbc.setState(0x445e, 0xda0, 0xe0c0, 0x10e, 0xc0c5, 0xa4e4, 0x0, 0x0);
        gbc.writeMem(0x445e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xda0);
        EXPECT(gbc.pc(), 0x445f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 023D
        gbc.setState(0x80dc, 0x58, 0x28a0, 0x2c47, 0x3a79, 0xa6db, 0x1, 0x0);
        gbc.writeMem(0x80dc, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x58);
        EXPECT(gbc.pc(), 0x80dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80dc), 0x78);
        // 78 023E
        gbc.setState(0x9339, 0x8367, 0x36c0, 0xaea6, 0x2921, 0x8423, 0x0, 0x1);
        gbc.writeMem(0x9339, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8367);
        EXPECT(gbc.pc(), 0x933a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9339), 0x78);
        // 78 023F
        gbc.setState(0xe639, 0xe4e6, 0x1090, 0x2db5, 0x1e8b, 0x95f6, 0x1, 0x0);
        gbc.writeMem(0xe639, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe4e6);
        EXPECT(gbc.pc(), 0xe63a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe639), 0x78);
        // 78 0240
        gbc.setState(0x3960, 0x20d0, 0x1330, 0xb29a, 0xf6eb, 0xea1, 0x0, 0x1);
        gbc.writeMem(0x3960, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x20d0);
        EXPECT(gbc.pc(), 0x3961);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0241
        gbc.setState(0x4ac7, 0x4718, 0x6570, 0x3a30, 0x471a, 0xc3c, 0x0, 0x0);
        gbc.writeMem(0x4ac7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x4718);
        EXPECT(gbc.pc(), 0x4ac8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0242
        gbc.setState(0x5e6c, 0x5765, 0xa080, 0x6ca2, 0x1432, 0x1ec8, 0x0, 0x0);
        gbc.writeMem(0x5e6c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5765);
        EXPECT(gbc.pc(), 0x5e6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0243
        gbc.setState(0xd32e, 0xc37e, 0x2d30, 0xb0b4, 0x17d5, 0xe9c4, 0x0, 0x0);
        gbc.writeMem(0xd32e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc37e);
        EXPECT(gbc.pc(), 0xd32f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd32e), 0x78);
        // 78 0245
        gbc.setState(0xaf67, 0x7cc, 0x97f0, 0xf8cb, 0x19, 0x534b, 0x0, 0x0);
        gbc.writeMem(0xaf67, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x7cc);
        EXPECT(gbc.pc(), 0xaf68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf67), 0x78);
        // 78 0246
        gbc.setState(0x5260, 0x306, 0x97b0, 0x77d3, 0xa0b2, 0xd0e4, 0x1, 0x0);
        gbc.writeMem(0x5260, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x306);
        EXPECT(gbc.pc(), 0x5261);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0248
        gbc.setState(0xee47, 0xc618, 0x4090, 0x2243, 0x94b6, 0xfed8, 0x0, 0x0);
        gbc.writeMem(0xee47, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc618);
        EXPECT(gbc.pc(), 0xee48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee47), 0x78);
        // 78 0249
        gbc.setState(0xd6ff, 0x124, 0xc8a0, 0x8840, 0x22b7, 0x7b39, 0x1, 0x0);
        gbc.writeMem(0xd6ff, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x124);
        EXPECT(gbc.pc(), 0xd700);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6ff), 0x78);
        // 78 024A
        gbc.setState(0x6cd5, 0xd398, 0xf9f0, 0x1a9e, 0xa47b, 0x17cd, 0x0, 0x1);
        gbc.writeMem(0x6cd5, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd398);
        EXPECT(gbc.pc(), 0x6cd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 024B
        gbc.setState(0x3de8, 0x4e5b, 0xe150, 0xf871, 0xa93d, 0x36d6, 0x1, 0x1);
        gbc.writeMem(0x3de8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4e5b);
        EXPECT(gbc.pc(), 0x3de9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 024C
        gbc.setState(0x3e0c, 0x440a, 0x4de0, 0xf327, 0xa6ee, 0xe6cf, 0x1, 0x1);
        gbc.writeMem(0x3e0c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x440a);
        EXPECT(gbc.pc(), 0x3e0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 024D
        gbc.setState(0x7ec0, 0xfbca, 0x25c0, 0x10b3, 0xa20a, 0x6d2f, 0x0, 0x1);
        gbc.writeMem(0x7ec0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xfbca);
        EXPECT(gbc.pc(), 0x7ec1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 024E
        gbc.setState(0x387c, 0x2a37, 0xf170, 0x1282, 0xa691, 0x80e5, 0x0, 0x1);
        gbc.writeMem(0x387c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2a37);
        EXPECT(gbc.pc(), 0x387d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 024F
        gbc.setState(0xad84, 0x511d, 0x39a0, 0x9222, 0xacc2, 0x6fb4, 0x1, 0x0);
        gbc.writeMem(0xad84, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x511d);
        EXPECT(gbc.pc(), 0xad85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad84), 0x78);
        // 78 0250
        gbc.setState(0x2b8b, 0x5e07, 0xb610, 0xba11, 0x4400, 0x3f7a, 0x0, 0x0);
        gbc.writeMem(0x2b8b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5e07);
        EXPECT(gbc.pc(), 0x2b8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0251
        gbc.setState(0xe5cd, 0x7e32, 0xe40, 0xfd5a, 0x5517, 0x93ba, 0x0, 0x0);
        gbc.writeMem(0xe5cd, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x7e32);
        EXPECT(gbc.pc(), 0xe5ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5cd), 0x78);
        // 78 0252
        gbc.setState(0x5fc7, 0x33d5, 0x5ae0, 0xb0af, 0x1ad3, 0x664c, 0x1, 0x1);
        gbc.writeMem(0x5fc7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x33d5);
        EXPECT(gbc.pc(), 0x5fc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0253
        gbc.setState(0x41c, 0xabdc, 0x5510, 0x2e01, 0x9c1c, 0xdff6, 0x1, 0x1);
        gbc.writeMem(0x41c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xabdc);
        EXPECT(gbc.pc(), 0x41d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0254
        gbc.setState(0x45f7, 0xc07c, 0x12e0, 0xf99d, 0xfe5c, 0x8ad2, 0x1, 0x1);
        gbc.writeMem(0x45f7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc07c);
        EXPECT(gbc.pc(), 0x45f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0255
        gbc.setState(0xd9c, 0x5878, 0x4f30, 0x7513, 0x68fd, 0x8e91, 0x1, 0x0);
        gbc.writeMem(0xd9c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x5878);
        EXPECT(gbc.pc(), 0xd9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0256
        gbc.setState(0xeff6, 0xc485, 0x8660, 0x4b1e, 0x21ba, 0x4035, 0x0, 0x0);
        gbc.writeMem(0xeff6, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc485);
        EXPECT(gbc.pc(), 0xeff7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeff6), 0x78);
        // 78 0257
        gbc.setState(0xdf1c, 0x779a, 0xe260, 0x559d, 0x1568, 0xbbc6, 0x0, 0x0);
        gbc.writeMem(0xdf1c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x779a);
        EXPECT(gbc.pc(), 0xdf1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf1c), 0x78);
        // 78 0258
        gbc.setState(0xefdc, 0x3e09, 0x7bb0, 0xd860, 0x1aef, 0xcb, 0x1, 0x0);
        gbc.writeMem(0xefdc, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3e09);
        EXPECT(gbc.pc(), 0xefdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefdc), 0x78);
        // 78 025A
        gbc.setState(0x7502, 0x2c45, 0xb6e0, 0x9a43, 0xcc0e, 0xa217, 0x0, 0x1);
        gbc.writeMem(0x7502, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2c45);
        EXPECT(gbc.pc(), 0x7503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 025B
        gbc.setState(0x9080, 0x1d82, 0x5850, 0xcd3f, 0x70d6, 0xd9ac, 0x1, 0x1);
        gbc.writeMem(0x9080, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1d82);
        EXPECT(gbc.pc(), 0x9081);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9080), 0x78);
        // 78 025C
        gbc.setState(0x6410, 0x142f, 0x1160, 0x1b93, 0x85ff, 0x7b4, 0x1, 0x0);
        gbc.writeMem(0x6410, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x142f);
        EXPECT(gbc.pc(), 0x6411);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 025D
        gbc.setState(0x511c, 0x28ba, 0x7740, 0xa49b, 0xe5da, 0xb6fe, 0x0, 0x1);
        gbc.writeMem(0x511c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x28ba);
        EXPECT(gbc.pc(), 0x511d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 025E
        gbc.setState(0xcc78, 0x30b1, 0x1ee0, 0x4c34, 0x37e7, 0xc702, 0x1, 0x0);
        gbc.writeMem(0xcc78, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x30b1);
        EXPECT(gbc.pc(), 0xcc79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc78), 0x78);
        // 78 025F
        gbc.setState(0x3352, 0x9989, 0x5ac0, 0xc347, 0x13e3, 0xdacf, 0x0, 0x1);
        gbc.writeMem(0x3352, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x9989);
        EXPECT(gbc.pc(), 0x3353);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0260
        gbc.setState(0xbf99, 0xa711, 0x3720, 0x7c59, 0xf007, 0xa147, 0x0, 0x0);
        gbc.writeMem(0xbf99, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xa711);
        EXPECT(gbc.pc(), 0xbf9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf99), 0x78);
        // 78 0261
        gbc.setState(0xb4f2, 0x772, 0x6050, 0x22e5, 0xc2d3, 0x5943, 0x1, 0x1);
        gbc.writeMem(0xb4f2, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x772);
        EXPECT(gbc.pc(), 0xb4f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4f2), 0x78);
        // 78 0262
        gbc.setState(0xc41f, 0x90f8, 0x4440, 0x67ac, 0x3921, 0x6cef, 0x1, 0x0);
        gbc.writeMem(0xc41f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x90f8);
        EXPECT(gbc.pc(), 0xc420);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc41f), 0x78);
        // 78 0263
        gbc.setState(0xbb5d, 0x6556, 0x6e50, 0xde46, 0xc00f, 0xab92, 0x0, 0x0);
        gbc.writeMem(0xbb5d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x6556);
        EXPECT(gbc.pc(), 0xbb5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb5d), 0x78);
        // 78 0264
        gbc.setState(0x8ddb, 0xffcc, 0xfca0, 0x8cd0, 0xaf4e, 0x1215, 0x1, 0x0);
        gbc.writeMem(0x8ddb, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xffcc);
        EXPECT(gbc.pc(), 0x8ddc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ddb), 0x78);
        // 78 0265
        gbc.setState(0x73bb, 0x5b12, 0xf310, 0xb2db, 0x4a4a, 0x6bd, 0x0, 0x1);
        gbc.writeMem(0x73bb, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x5b12);
        EXPECT(gbc.pc(), 0x73bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0266
        gbc.setState(0x5f10, 0xb805, 0x3af0, 0xe65d, 0x3f95, 0x7e05, 0x1, 0x1);
        gbc.writeMem(0x5f10, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xb805);
        EXPECT(gbc.pc(), 0x5f11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0268
        gbc.setState(0xb9d9, 0x48b2, 0xdef0, 0x1fc7, 0x8a96, 0x358f, 0x0, 0x0);
        gbc.writeMem(0xb9d9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x48b2);
        EXPECT(gbc.pc(), 0xb9da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9d9), 0x78);
        // 78 026A
        gbc.setState(0xde35, 0xe69, 0xe650, 0xb761, 0x2395, 0x56f3, 0x1, 0x0);
        gbc.writeMem(0xde35, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe69);
        EXPECT(gbc.pc(), 0xde36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde35), 0x78);
        // 78 026B
        gbc.setState(0x521e, 0xe4d2, 0x2af0, 0x98c3, 0x8b6d, 0x5c63, 0x0, 0x1);
        gbc.writeMem(0x521e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xe4d2);
        EXPECT(gbc.pc(), 0x521f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 026C
        gbc.setState(0x6171, 0x576, 0x48d0, 0xf2db, 0xdaf4, 0x5b91, 0x1, 0x1);
        gbc.writeMem(0x6171, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x576);
        EXPECT(gbc.pc(), 0x6172);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 026D
        gbc.setState(0x350a, 0xd9d0, 0x4670, 0x5be6, 0x803a, 0x4b1c, 0x1, 0x1);
        gbc.writeMem(0x350a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd9d0);
        EXPECT(gbc.pc(), 0x350b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 026E
        gbc.setState(0x213b, 0x94fd, 0x5dc0, 0x8c1a, 0xb0c7, 0x6281, 0x0, 0x0);
        gbc.writeMem(0x213b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x94fd);
        EXPECT(gbc.pc(), 0x213c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 026F
        gbc.setState(0x6ebf, 0x91d0, 0x6040, 0x2b11, 0xe5d4, 0x4770, 0x0, 0x0);
        gbc.writeMem(0x6ebf, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x91d0);
        EXPECT(gbc.pc(), 0x6ec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0270
        gbc.setState(0x99d7, 0x8e9d, 0x27f0, 0x88bc, 0x210, 0xe0b, 0x1, 0x0);
        gbc.writeMem(0x99d7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x8e9d);
        EXPECT(gbc.pc(), 0x99d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99d7), 0x78);
        // 78 0271
        gbc.setState(0xce53, 0xdff8, 0x85e0, 0xa472, 0x6c3a, 0x73e5, 0x1, 0x0);
        gbc.writeMem(0xce53, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xdff8);
        EXPECT(gbc.pc(), 0xce54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce53), 0x78);
        // 78 0272
        gbc.setState(0x287a, 0x1961, 0x9e30, 0x96b1, 0xd2c7, 0x414c, 0x0, 0x1);
        gbc.writeMem(0x287a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1961);
        EXPECT(gbc.pc(), 0x287b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0273
        gbc.setState(0xdcc2, 0xb4e1, 0x94a0, 0x71e1, 0x74dd, 0x7aed, 0x0, 0x0);
        gbc.writeMem(0xdcc2, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb4e1);
        EXPECT(gbc.pc(), 0xdcc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcc2), 0x78);
        // 78 0274
        gbc.setState(0xc0ea, 0x3cd2, 0xbdb0, 0xabc, 0xa78d, 0x8907, 0x1, 0x0);
        gbc.writeMem(0xc0ea, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3cd2);
        EXPECT(gbc.pc(), 0xc0eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0ea), 0x78);
        // 78 0275
        gbc.setState(0xc61e, 0x2a70, 0x240, 0xbdea, 0x3334, 0xcb0, 0x1, 0x0);
        gbc.writeMem(0xc61e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x2a70);
        EXPECT(gbc.pc(), 0xc61f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc61e), 0x78);
        // 78 0276
        gbc.setState(0x518d, 0xf1b6, 0x5790, 0xe2d, 0x32b5, 0xc88d, 0x0, 0x0);
        gbc.writeMem(0x518d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf1b6);
        EXPECT(gbc.pc(), 0x518e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0277
        gbc.setState(0xc334, 0x7f4b, 0x7cd0, 0xb80f, 0xc1cb, 0x65d2, 0x0, 0x0);
        gbc.writeMem(0xc334, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7f4b);
        EXPECT(gbc.pc(), 0xc335);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc334), 0x78);
        // 78 0278
        gbc.setState(0x1b67, 0x7714, 0xb0e0, 0x2a14, 0xc367, 0x3a83, 0x0, 0x1);
        gbc.writeMem(0x1b67, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x7714);
        EXPECT(gbc.pc(), 0x1b68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0279
        gbc.setState(0x4440, 0xf85b, 0x7b80, 0x3224, 0x4fb6, 0x3269, 0x0, 0x1);
        gbc.writeMem(0x4440, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xf85b);
        EXPECT(gbc.pc(), 0x4441);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 027A
        gbc.setState(0x487, 0xb4cb, 0xe460, 0xb546, 0x5171, 0xb7a1, 0x0, 0x0);
        gbc.writeMem(0x487, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb4cb);
        EXPECT(gbc.pc(), 0x488);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 027B
        gbc.setState(0x1ba6, 0x70be, 0x53c0, 0x312a, 0xefb5, 0x9b6f, 0x1, 0x1);
        gbc.writeMem(0x1ba6, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x70be);
        EXPECT(gbc.pc(), 0x1ba7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 027C
        gbc.setState(0xe532, 0x2c55, 0x8630, 0xb940, 0x4724, 0xf0c3, 0x1, 0x0);
        gbc.writeMem(0xe532, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2c55);
        EXPECT(gbc.pc(), 0xe533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe532), 0x78);
        // 78 027D
        gbc.setState(0xcea1, 0x9db0, 0xd020, 0xde94, 0x574, 0xe112, 0x1, 0x1);
        gbc.writeMem(0xcea1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9db0);
        EXPECT(gbc.pc(), 0xcea2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcea1), 0x78);
        // 78 027E
        gbc.setState(0x8129, 0xd0a8, 0xd0a0, 0xd49f, 0x791, 0xec0f, 0x0, 0x1);
        gbc.writeMem(0x8129, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd0a8);
        EXPECT(gbc.pc(), 0x812a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8129), 0x78);
        // 78 027F
        gbc.setState(0xd2f7, 0xed3c, 0x8e70, 0x6056, 0x14e0, 0x83ef, 0x1, 0x1);
        gbc.writeMem(0xd2f7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xed3c);
        EXPECT(gbc.pc(), 0xd2f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2f7), 0x78);
        // 78 0280
        gbc.setState(0x1fff, 0x33d1, 0xe440, 0x8ea7, 0x8926, 0x2b51, 0x0, 0x1);
        gbc.writeMem(0x1fff, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x33d1);
        EXPECT(gbc.pc(), 0x2000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0282
        gbc.setState(0x1f0c, 0x5c9b, 0x130, 0x9fb5, 0x48f, 0x1030, 0x0, 0x1);
        gbc.writeMem(0x1f0c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x5c9b);
        EXPECT(gbc.pc(), 0x1f0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0283
        gbc.setState(0x3600, 0xc83e, 0xbfe0, 0x4053, 0x4948, 0xd490, 0x1, 0x1);
        gbc.writeMem(0x3600, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc83e);
        EXPECT(gbc.pc(), 0x3601);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0284
        gbc.setState(0xa7ee, 0x7ee5, 0xb990, 0x3214, 0xe320, 0x7e49, 0x0, 0x1);
        gbc.writeMem(0xa7ee, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x7ee5);
        EXPECT(gbc.pc(), 0xa7ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7ee), 0x78);
        // 78 0285
        gbc.setState(0x67de, 0x39ff, 0xdee0, 0xaa21, 0x63d7, 0x5e21, 0x0, 0x0);
        gbc.writeMem(0x67de, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x39ff);
        EXPECT(gbc.pc(), 0x67df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0286
        gbc.setState(0xaadf, 0xcec9, 0xa560, 0xb0da, 0x7414, 0x3324, 0x1, 0x0);
        gbc.writeMem(0xaadf, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xcec9);
        EXPECT(gbc.pc(), 0xaae0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaadf), 0x78);
        // 78 0287
        gbc.setState(0xdd9b, 0xabb4, 0x9860, 0x5515, 0xe32e, 0x18a8, 0x0, 0x1);
        gbc.writeMem(0xdd9b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xabb4);
        EXPECT(gbc.pc(), 0xdd9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd9b), 0x78);
        // 78 0288
        gbc.setState(0x48ba, 0xb08b, 0x1b20, 0x2856, 0xf713, 0x5bbb, 0x1, 0x0);
        gbc.writeMem(0x48ba, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb08b);
        EXPECT(gbc.pc(), 0x48bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0289
        gbc.setState(0x993d, 0x394d, 0x24c0, 0xd524, 0xc752, 0xb9f2, 0x1, 0x0);
        gbc.writeMem(0x993d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x394d);
        EXPECT(gbc.pc(), 0x993e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x993d), 0x78);
        // 78 028A
        gbc.setState(0x8d1f, 0x1bd4, 0x7d60, 0x1931, 0x348b, 0x2745, 0x1, 0x0);
        gbc.writeMem(0x8d1f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x1bd4);
        EXPECT(gbc.pc(), 0x8d20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d1f), 0x78);
        // 78 028B
        gbc.setState(0xea5d, 0xc96e, 0x9d10, 0xdce7, 0x15e, 0x9a56, 0x1, 0x1);
        gbc.writeMem(0xea5d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xc96e);
        EXPECT(gbc.pc(), 0xea5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea5d), 0x78);
        // 78 028C
        gbc.setState(0x42cd, 0xb797, 0xd020, 0x1fe2, 0xc63d, 0x646, 0x0, 0x1);
        gbc.writeMem(0x42cd, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xb797);
        EXPECT(gbc.pc(), 0x42ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 028D
        gbc.setState(0xe6c9, 0xa7f, 0x1900, 0x786, 0xe838, 0xe408, 0x1, 0x0);
        gbc.writeMem(0xe6c9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xa7f);
        EXPECT(gbc.pc(), 0xe6ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6c9), 0x78);
        // 78 028E
        gbc.setState(0x9333, 0xbfac, 0x9240, 0x6040, 0x1f1c, 0xeb6e, 0x0, 0x0);
        gbc.writeMem(0x9333, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xbfac);
        EXPECT(gbc.pc(), 0x9334);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9333), 0x78);
        // 78 028F
        gbc.setState(0xb33, 0x5dbf, 0x3a0, 0xdac7, 0xd77e, 0x51e6, 0x1, 0x0);
        gbc.writeMem(0xb33, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5dbf);
        EXPECT(gbc.pc(), 0xb34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0290
        gbc.setState(0x86d3, 0x21ad, 0xa450, 0xd75c, 0xb2ca, 0xfda, 0x1, 0x1);
        gbc.writeMem(0x86d3, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x21ad);
        EXPECT(gbc.pc(), 0x86d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86d3), 0x78);
        // 78 0291
        gbc.setState(0x9664, 0x86fc, 0xa6c0, 0x6356, 0xd789, 0x4084, 0x0, 0x0);
        gbc.writeMem(0x9664, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x86fc);
        EXPECT(gbc.pc(), 0x9665);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9664), 0x78);
        // 78 0292
        gbc.setState(0x826d, 0x811f, 0x9260, 0xa4b5, 0xcdfa, 0x5d28, 0x1, 0x1);
        gbc.writeMem(0x826d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x811f);
        EXPECT(gbc.pc(), 0x826e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x826d), 0x78);
        // 78 0293
        gbc.setState(0xace2, 0xa686, 0xcf00, 0xbc6c, 0xac48, 0xd4b1, 0x1, 0x0);
        gbc.writeMem(0xace2, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa686);
        EXPECT(gbc.pc(), 0xace3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xace2), 0x78);
        // 78 0294
        gbc.setState(0x9ebe, 0x5a39, 0x6890, 0xd3cf, 0xc1e8, 0x3b02, 0x1, 0x1);
        gbc.writeMem(0x9ebe, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x5a39);
        EXPECT(gbc.pc(), 0x9ebf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ebe), 0x78);
        // 78 0295
        gbc.setState(0x8157, 0x1030, 0xacc0, 0x5246, 0x79a2, 0x55c8, 0x1, 0x0);
        gbc.writeMem(0x8157, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x1030);
        EXPECT(gbc.pc(), 0x8158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8157), 0x78);
        // 78 0296
        gbc.setState(0xe7b, 0xd106, 0xd110, 0xe154, 0xf4cf, 0x1535, 0x0, 0x0);
        gbc.writeMem(0xe7b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xd106);
        EXPECT(gbc.pc(), 0xe7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0297
        gbc.setState(0x377a, 0xb360, 0xfb0, 0xe6b6, 0xdf9d, 0x42b5, 0x1, 0x1);
        gbc.writeMem(0x377a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb360);
        EXPECT(gbc.pc(), 0x377b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0298
        gbc.setState(0x58ad, 0x7b84, 0x86f0, 0xd8fb, 0x22fa, 0x8b0, 0x1, 0x0);
        gbc.writeMem(0x58ad, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x7b84);
        EXPECT(gbc.pc(), 0x58ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 029A
        gbc.setState(0x9c66, 0x63d, 0x5be0, 0xc143, 0x9729, 0x67a6, 0x1, 0x0);
        gbc.writeMem(0x9c66, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x63d);
        EXPECT(gbc.pc(), 0x9c67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c66), 0x78);
        // 78 029B
        gbc.setState(0xbcbc, 0xe115, 0xa070, 0x96f5, 0xd9f7, 0x30ae, 0x1, 0x1);
        gbc.writeMem(0xbcbc, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe115);
        EXPECT(gbc.pc(), 0xbcbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcbc), 0x78);
        // 78 029D
        gbc.setState(0xa62d, 0xc548, 0x5610, 0xdbb7, 0x6d8, 0xcbdd, 0x0, 0x1);
        gbc.writeMem(0xa62d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc548);
        EXPECT(gbc.pc(), 0xa62e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa62d), 0x78);
        // 78 029E
        gbc.setState(0xa686, 0x8730, 0x91b0, 0x3437, 0x45b9, 0xe897, 0x0, 0x0);
        gbc.writeMem(0xa686, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8730);
        EXPECT(gbc.pc(), 0xa687);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa686), 0x78);
        // 78 029F
        gbc.setState(0x8cf8, 0x18f8, 0xbd60, 0x897d, 0xe37f, 0xac7b, 0x1, 0x0);
        gbc.writeMem(0x8cf8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x18f8);
        EXPECT(gbc.pc(), 0x8cf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cf8), 0x78);
        // 78 02A1
        gbc.setState(0x9db9, 0xc81c, 0x2960, 0x33a0, 0x31d8, 0x3bed, 0x0, 0x0);
        gbc.writeMem(0x9db9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc81c);
        EXPECT(gbc.pc(), 0x9dba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9db9), 0x78);
        // 78 02A2
        gbc.setState(0x730b, 0x80fa, 0xbe00, 0xebd9, 0x433e, 0x9d96, 0x1, 0x0);
        gbc.writeMem(0x730b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x80fa);
        EXPECT(gbc.pc(), 0x730c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 02A3
        gbc.setState(0x9507, 0xe266, 0x73f0, 0x331, 0x318b, 0xfed3, 0x1, 0x1);
        gbc.writeMem(0x9507, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xe266);
        EXPECT(gbc.pc(), 0x9508);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9507), 0x78);
        // 78 02A4
        gbc.setState(0x3a70, 0x3f82, 0xe160, 0x697b, 0xedda, 0xb0f2, 0x1, 0x1);
        gbc.writeMem(0x3a70, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3f82);
        EXPECT(gbc.pc(), 0x3a71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 02A5
        gbc.setState(0xc39e, 0x8f51, 0xfca0, 0x624, 0xbd5a, 0xa62, 0x1, 0x0);
        gbc.writeMem(0xc39e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x8f51);
        EXPECT(gbc.pc(), 0xc39f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc39e), 0x78);
        // 78 02A6
        gbc.setState(0xec20, 0x76f6, 0x7200, 0xc0e5, 0x8128, 0x2e7c, 0x1, 0x1);
        gbc.writeMem(0xec20, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x76f6);
        EXPECT(gbc.pc(), 0xec21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec20), 0x78);
        // 78 02A7
        gbc.setState(0x9d15, 0x6941, 0x7e10, 0x1dfa, 0xe3e1, 0x7c8e, 0x0, 0x0);
        gbc.writeMem(0x9d15, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x6941);
        EXPECT(gbc.pc(), 0x9d16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d15), 0x78);
        // 78 02A8
        gbc.setState(0x57cd, 0x5749, 0x6980, 0x8f78, 0x3b65, 0x8df2, 0x0, 0x1);
        gbc.writeMem(0x57cd, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5749);
        EXPECT(gbc.pc(), 0x57ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 02A9
        gbc.setState(0x5251, 0x5be7, 0xc8c0, 0xe365, 0x4376, 0x2ec2, 0x1, 0x1);
        gbc.writeMem(0x5251, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5be7);
        EXPECT(gbc.pc(), 0x5252);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 02AA
        gbc.setState(0x52, 0x7dd8, 0x92e0, 0x1e26, 0x8de5, 0x27cb, 0x0, 0x0);
        gbc.writeMem(0x52, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x7dd8);
        EXPECT(gbc.pc(), 0x53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 02AB
        gbc.setState(0x1cb7, 0x7f2e, 0x6320, 0x3162, 0x591a, 0xbe21, 0x1, 0x1);
        gbc.writeMem(0x1cb7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7f2e);
        EXPECT(gbc.pc(), 0x1cb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 02AC
        gbc.setState(0x2cf1, 0x2db1, 0xfbb0, 0x5204, 0x9ba3, 0x6926, 0x1, 0x1);
        gbc.writeMem(0x2cf1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x2db1);
        EXPECT(gbc.pc(), 0x2cf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 02AD
        gbc.setState(0x81a, 0xccbc, 0x2790, 0x1131, 0xc7ff, 0x7347, 0x0, 0x1);
        gbc.writeMem(0x81a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xccbc);
        EXPECT(gbc.pc(), 0x81b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 02AE
        gbc.setState(0x46b8, 0xccda, 0x5920, 0x55d, 0xda9c, 0x8c1e, 0x1, 0x1);
        gbc.writeMem(0x46b8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xccda);
        EXPECT(gbc.pc(), 0x46b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 02AF
        gbc.setState(0x2c67, 0x703e, 0x1fc0, 0x141a, 0x8ae5, 0xf559, 0x1, 0x0);
        gbc.writeMem(0x2c67, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x703e);
        EXPECT(gbc.pc(), 0x2c68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 02B0
        gbc.setState(0x6c8b, 0x8cd3, 0x5d30, 0x3a7c, 0x9ff7, 0xaf8f, 0x1, 0x1);
        gbc.writeMem(0x6c8b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8cd3);
        EXPECT(gbc.pc(), 0x6c8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 02B1
        gbc.setState(0xce89, 0x91bd, 0x7e40, 0xd0a5, 0xfb22, 0x9e67, 0x1, 0x0);
        gbc.writeMem(0xce89, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x91bd);
        EXPECT(gbc.pc(), 0xce8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce89), 0x78);
        // 78 02B2
        gbc.setState(0x380e, 0x3443, 0x2df0, 0xa587, 0x76e1, 0xb8ff, 0x0, 0x0);
        gbc.writeMem(0x380e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x3443);
        EXPECT(gbc.pc(), 0x380f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 02B3
        gbc.setState(0x53c1, 0xb0bf, 0x6f30, 0x98cb, 0x6497, 0xb5dd, 0x1, 0x0);
        gbc.writeMem(0x53c1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb0bf);
        EXPECT(gbc.pc(), 0x53c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 02B5
        gbc.setState(0xd9fe, 0x58f0, 0xe190, 0xb483, 0xfd59, 0x6357, 0x0, 0x0);
        gbc.writeMem(0xd9fe, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x58f0);
        EXPECT(gbc.pc(), 0xd9ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9fe), 0x78);
        // 78 02B6
        gbc.setState(0x3eb, 0x6eac, 0x770, 0xd303, 0xd802, 0xac6b, 0x1, 0x1);
        gbc.writeMem(0x3eb, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x6eac);
        EXPECT(gbc.pc(), 0x3ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 02B7
        gbc.setState(0x46ba, 0xdd8d, 0xbe60, 0x4e02, 0x2d51, 0x3238, 0x1, 0x0);
        gbc.writeMem(0x46ba, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xdd8d);
        EXPECT(gbc.pc(), 0x46bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 02B8
        gbc.setState(0x914, 0xf8f0, 0xfe20, 0x4b64, 0xd6e1, 0x91c, 0x1, 0x1);
        gbc.writeMem(0x914, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf8f0);
        EXPECT(gbc.pc(), 0x915);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 02B9
        gbc.setState(0x3ad0, 0x466c, 0x7d90, 0xfc16, 0x2d6d, 0x161d, 0x1, 0x0);
        gbc.writeMem(0x3ad0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x466c);
        EXPECT(gbc.pc(), 0x3ad1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 02BA
        gbc.setState(0xd3ad, 0x9dc5, 0xc680, 0x99e1, 0x858c, 0xc5db, 0x1, 0x0);
        gbc.writeMem(0xd3ad, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9dc5);
        EXPECT(gbc.pc(), 0xd3ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3ad), 0x78);
        // 78 02BB
        gbc.setState(0x2da9, 0x6047, 0x78a0, 0x39c0, 0x8f20, 0xd185, 0x0, 0x1);
        gbc.writeMem(0x2da9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6047);
        EXPECT(gbc.pc(), 0x2daa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 02BC
        gbc.setState(0x83bd, 0x6b51, 0x74e0, 0xd919, 0xf474, 0x9857, 0x1, 0x0);
        gbc.writeMem(0x83bd, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x6b51);
        EXPECT(gbc.pc(), 0x83be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83bd), 0x78);
        // 78 02BD
        gbc.setState(0x44f1, 0xf6a0, 0xcb40, 0x2036, 0xad5c, 0x4d2f, 0x1, 0x1);
        gbc.writeMem(0x44f1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf6a0);
        EXPECT(gbc.pc(), 0x44f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 02BE
        gbc.setState(0x22b0, 0xb90e, 0x33a0, 0x9738, 0x37f2, 0xa9c0, 0x0, 0x0);
        gbc.writeMem(0x22b0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb90e);
        EXPECT(gbc.pc(), 0x22b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 02BF
        gbc.setState(0x4c13, 0x4716, 0x6cd0, 0x8043, 0x2838, 0x84e5, 0x1, 0x0);
        gbc.writeMem(0x4c13, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4716);
        EXPECT(gbc.pc(), 0x4c14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 02C0
        gbc.setState(0xdf16, 0x817c, 0x6040, 0xd0e2, 0xe18e, 0x97b5, 0x0, 0x1);
        gbc.writeMem(0xdf16, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x817c);
        EXPECT(gbc.pc(), 0xdf17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf16), 0x78);
        // 78 02C1
        gbc.setState(0x1a7f, 0x3016, 0xdbb0, 0x9406, 0x16ac, 0x43ed, 0x0, 0x1);
        gbc.writeMem(0x1a7f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3016);
        EXPECT(gbc.pc(), 0x1a80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 02C2
        gbc.setState(0x61d, 0xd3ce, 0x3510, 0xc0cf, 0x3813, 0xe3e0, 0x0, 0x1);
        gbc.writeMem(0x61d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd3ce);
        EXPECT(gbc.pc(), 0x61e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 02C3
        gbc.setState(0x5e47, 0xe80a, 0x3480, 0xc166, 0x1ae, 0x11ab, 0x0, 0x0);
        gbc.writeMem(0x5e47, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe80a);
        EXPECT(gbc.pc(), 0x5e48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 02C4
        gbc.setState(0xd38d, 0x777e, 0xad20, 0xddf5, 0x14c9, 0xd3a5, 0x1, 0x0);
        gbc.writeMem(0xd38d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x777e);
        EXPECT(gbc.pc(), 0xd38e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd38d), 0x78);
        // 78 02C5
        gbc.setState(0x7774, 0xc8ee, 0x2a60, 0x2118, 0x47d9, 0x729f, 0x1, 0x0);
        gbc.writeMem(0x7774, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc8ee);
        EXPECT(gbc.pc(), 0x7775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 02C6
        gbc.setState(0x444c, 0x410c, 0x4c0, 0x7bc0, 0x3bd0, 0xb759, 0x1, 0x0);
        gbc.writeMem(0x444c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x410c);
        EXPECT(gbc.pc(), 0x444d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 02C7
        gbc.setState(0x3542, 0xde3f, 0x840, 0x64b8, 0x8b4a, 0xa31a, 0x1, 0x0);
        gbc.writeMem(0x3542, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xde3f);
        EXPECT(gbc.pc(), 0x3543);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 02C8
        gbc.setState(0x8dc4, 0xcaf1, 0xaff0, 0xd4e9, 0xfa9, 0x5cfd, 0x0, 0x1);
        gbc.writeMem(0x8dc4, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xcaf1);
        EXPECT(gbc.pc(), 0x8dc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dc4), 0x78);
        // 78 02C9
        gbc.setState(0xdd1, 0x34f, 0xa020, 0x325f, 0x6162, 0xc6c3, 0x0, 0x1);
        gbc.writeMem(0xdd1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x34f);
        EXPECT(gbc.pc(), 0xdd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 02CA
        gbc.setState(0x337a, 0x8d3, 0xac20, 0xa7f3, 0xf509, 0x7cbc, 0x1, 0x1);
        gbc.writeMem(0x337a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8d3);
        EXPECT(gbc.pc(), 0x337b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 02CC
        gbc.setState(0xf93, 0x92a1, 0x330, 0x8693, 0x1060, 0x4dbb, 0x0, 0x0);
        gbc.writeMem(0xf93, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x92a1);
        EXPECT(gbc.pc(), 0xf94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 02CD
        gbc.setState(0x20a7, 0x87c3, 0x82c0, 0x2da7, 0x9cf1, 0xc394, 0x0, 0x1);
        gbc.writeMem(0x20a7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x87c3);
        EXPECT(gbc.pc(), 0x20a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 02CE
        gbc.setState(0x5b19, 0x6b3e, 0x3a0, 0x51b8, 0x750b, 0x8c9e, 0x1, 0x1);
        gbc.writeMem(0x5b19, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6b3e);
        EXPECT(gbc.pc(), 0x5b1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 02CF
        gbc.setState(0x6075, 0x6e0c, 0xd370, 0x89b1, 0xc7ac, 0x3b70, 0x1, 0x0);
        gbc.writeMem(0x6075, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6e0c);
        EXPECT(gbc.pc(), 0x6076);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 02D0
        gbc.setState(0xd609, 0x268d, 0x70e0, 0xba9b, 0xdde2, 0x22e2, 0x1, 0x1);
        gbc.writeMem(0xd609, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x268d);
        EXPECT(gbc.pc(), 0xd60a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd609), 0x78);
        // 78 02D1
        gbc.setState(0xe348, 0x9586, 0x28f0, 0x3376, 0x8c02, 0x6905, 0x0, 0x0);
        gbc.writeMem(0xe348, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9586);
        EXPECT(gbc.pc(), 0xe349);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe348), 0x78);
        // 78 02D2
        gbc.setState(0xc04c, 0x5cee, 0x6250, 0xc038, 0x943b, 0x778f, 0x1, 0x0);
        gbc.writeMem(0xc04c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x5cee);
        EXPECT(gbc.pc(), 0xc04d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc04c), 0x78);
        // 78 02D3
        gbc.setState(0x6362, 0xf9be, 0xe300, 0x29ba, 0xb69, 0xc29d, 0x0, 0x0);
        gbc.writeMem(0x6362, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf9be);
        EXPECT(gbc.pc(), 0x6363);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 02D5
        gbc.setState(0x7e49, 0xa8a, 0x3370, 0xf608, 0x8421, 0x2a66, 0x1, 0x0);
        gbc.writeMem(0x7e49, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xa8a);
        EXPECT(gbc.pc(), 0x7e4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 02D7
        gbc.setState(0x81ab, 0x79a1, 0x64e0, 0x7bdf, 0x90, 0xbb82, 0x1, 0x1);
        gbc.writeMem(0x81ab, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x79a1);
        EXPECT(gbc.pc(), 0x81ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81ab), 0x78);
        // 78 02D8
        gbc.setState(0x120d, 0x570b, 0x750, 0x490f, 0xd2ae, 0x660a, 0x0, 0x1);
        gbc.writeMem(0x120d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x570b);
        EXPECT(gbc.pc(), 0x120e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 02D9
        gbc.setState(0xb7a0, 0xb24, 0x210, 0xfdad, 0x4600, 0xcb8c, 0x0, 0x0);
        gbc.writeMem(0xb7a0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xb24);
        EXPECT(gbc.pc(), 0xb7a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7a0), 0x78);
        // 78 02DA
        gbc.setState(0xea3c, 0xa1b, 0xa0a0, 0x8a73, 0xf222, 0x2d51, 0x0, 0x0);
        gbc.writeMem(0xea3c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa1b);
        EXPECT(gbc.pc(), 0xea3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea3c), 0x78);
        // 78 02DB
        gbc.setState(0x734b, 0x3e90, 0xcb80, 0xdff2, 0x2c11, 0x85a4, 0x0, 0x0);
        gbc.writeMem(0x734b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3e90);
        EXPECT(gbc.pc(), 0x734c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 02DC
        gbc.setState(0xe842, 0xf4bf, 0x2010, 0x6c00, 0x98fc, 0x8003, 0x1, 0x1);
        gbc.writeMem(0xe842, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf4bf);
        EXPECT(gbc.pc(), 0xe843);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe842), 0x78);
        // 78 02DD
        gbc.setState(0xa36e, 0x1926, 0xbd90, 0xb24b, 0x88fc, 0xed5d, 0x1, 0x0);
        gbc.writeMem(0xa36e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x1926);
        EXPECT(gbc.pc(), 0xa36f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa36e), 0x78);
        // 78 02DF
        gbc.setState(0xa086, 0xb9fd, 0x8630, 0x66c5, 0xfb52, 0x9545, 0x0, 0x0);
        gbc.writeMem(0xa086, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xb9fd);
        EXPECT(gbc.pc(), 0xa087);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa086), 0x78);
        // 78 02E0
        gbc.setState(0x6219, 0x6d14, 0x8d20, 0xc05c, 0x5ebe, 0x329e, 0x1, 0x0);
        gbc.writeMem(0x6219, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6d14);
        EXPECT(gbc.pc(), 0x621a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 02E1
        gbc.setState(0x86a3, 0xdb92, 0xfc10, 0xc9c, 0xb53e, 0x2561, 0x1, 0x0);
        gbc.writeMem(0x86a3, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xdb92);
        EXPECT(gbc.pc(), 0x86a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86a3), 0x78);
        // 78 02E2
        gbc.setState(0x3462, 0xbcf2, 0x1230, 0x2730, 0x5f4f, 0x39c9, 0x0, 0x1);
        gbc.writeMem(0x3462, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xbcf2);
        EXPECT(gbc.pc(), 0x3463);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 02E4
        gbc.setState(0x7922, 0xd196, 0x270, 0x79c0, 0x6731, 0xd430, 0x1, 0x1);
        gbc.writeMem(0x7922, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xd196);
        EXPECT(gbc.pc(), 0x7923);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 02E5
        gbc.setState(0x786d, 0xbe04, 0xd950, 0x32c1, 0x5ac6, 0xd1f8, 0x1, 0x1);
        gbc.writeMem(0x786d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xbe04);
        EXPECT(gbc.pc(), 0x786e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 02E6
        gbc.setState(0xef89, 0xa040, 0x7bf0, 0xebe6, 0x4aa, 0x32ca, 0x1, 0x0);
        gbc.writeMem(0xef89, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xa040);
        EXPECT(gbc.pc(), 0xef8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef89), 0x78);
        // 78 02E8
        gbc.setState(0x3858, 0xa836, 0x1680, 0xfac6, 0x6bc3, 0x7cd2, 0x0, 0x0);
        gbc.writeMem(0x3858, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa836);
        EXPECT(gbc.pc(), 0x3859);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 02E9
        gbc.setState(0xc5ac, 0xe207, 0x1270, 0x597f, 0xf700, 0x74b5, 0x0, 0x1);
        gbc.writeMem(0xc5ac, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xe207);
        EXPECT(gbc.pc(), 0xc5ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5ac), 0x78);
        // 78 02EA
        gbc.setState(0x4c1d, 0xc9cd, 0x57c0, 0x2d29, 0xaff5, 0x9f9b, 0x0, 0x0);
        gbc.writeMem(0x4c1d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xc9cd);
        EXPECT(gbc.pc(), 0x4c1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 02EB
        gbc.setState(0xca6e, 0x5c19, 0x58b0, 0x518, 0x2ca4, 0x9e1b, 0x0, 0x0);
        gbc.writeMem(0xca6e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x5c19);
        EXPECT(gbc.pc(), 0xca6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca6e), 0x78);
        // 78 02EC
        gbc.setState(0x9fa2, 0x214a, 0x15c0, 0xcc9b, 0x8e8e, 0x8853, 0x0, 0x0);
        gbc.writeMem(0x9fa2, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x214a);
        EXPECT(gbc.pc(), 0x9fa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fa2), 0x78);
        // 78 02EE
        gbc.setState(0xc335, 0xd1db, 0x52c0, 0x319f, 0x217e, 0x6850, 0x0, 0x0);
        gbc.writeMem(0xc335, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xd1db);
        EXPECT(gbc.pc(), 0xc336);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc335), 0x78);
        // 78 02EF
        gbc.setState(0x72ed, 0x7f2, 0xbe90, 0x7f46, 0x8e2d, 0x3359, 0x1, 0x0);
        gbc.writeMem(0x72ed, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x7f2);
        EXPECT(gbc.pc(), 0x72ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 02F0
        gbc.setState(0x8af1, 0x4b76, 0x7f90, 0x60bc, 0x80e6, 0x9df8, 0x0, 0x0);
        gbc.writeMem(0x8af1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4b76);
        EXPECT(gbc.pc(), 0x8af2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8af1), 0x78);
        // 78 02F1
        gbc.setState(0xcc7a, 0xb6c8, 0xd330, 0x90d9, 0xe862, 0xaef9, 0x1, 0x1);
        gbc.writeMem(0xcc7a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb6c8);
        EXPECT(gbc.pc(), 0xcc7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc7a), 0x78);
        // 78 02F2
        gbc.setState(0x32f5, 0x7651, 0xd540, 0xa4ce, 0xcfd7, 0xbbc3, 0x0, 0x1);
        gbc.writeMem(0x32f5, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x7651);
        EXPECT(gbc.pc(), 0x32f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 02F3
        gbc.setState(0xd319, 0xff5a, 0x4430, 0x6ed9, 0x6c23, 0x69b9, 0x0, 0x1);
        gbc.writeMem(0xd319, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xff5a);
        EXPECT(gbc.pc(), 0xd31a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd319), 0x78);
        // 78 02F4
        gbc.setState(0xd50a, 0xa504, 0x7e30, 0x1320, 0x1ff9, 0x84c4, 0x1, 0x0);
        gbc.writeMem(0xd50a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xa504);
        EXPECT(gbc.pc(), 0xd50b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd50a), 0x78);
        // 78 02F5
        gbc.setState(0x6804, 0x708f, 0x7e0, 0xfc94, 0xc955, 0x2d26, 0x1, 0x0);
        gbc.writeMem(0x6804, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x708f);
        EXPECT(gbc.pc(), 0x6805);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 02F6
        gbc.setState(0xe1e4, 0xc62, 0xfd50, 0x33c1, 0x6ac6, 0x432a, 0x1, 0x0);
        gbc.writeMem(0xe1e4, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xc62);
        EXPECT(gbc.pc(), 0xe1e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1e4), 0x78);
        // 78 02F7
        gbc.setState(0xcac, 0xf2e0, 0x8010, 0x6f15, 0x321e, 0xc3b5, 0x0, 0x0);
        gbc.writeMem(0xcac, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf2e0);
        EXPECT(gbc.pc(), 0xcad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 02F8
        gbc.setState(0xa68c, 0x4849, 0xe5b0, 0xcc9b, 0xbced, 0x4e01, 0x0, 0x1);
        gbc.writeMem(0xa68c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4849);
        EXPECT(gbc.pc(), 0xa68d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa68c), 0x78);
        // 78 02F9
        gbc.setState(0xcc52, 0x9d2b, 0x4f70, 0xd472, 0xcc38, 0xfd2d, 0x0, 0x0);
        gbc.writeMem(0xcc52, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9d2b);
        EXPECT(gbc.pc(), 0xcc53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc52), 0x78);
        // 78 02FA
        gbc.setState(0x8d2c, 0x9c8d, 0xe540, 0xe973, 0xbd54, 0xb5b, 0x0, 0x1);
        gbc.writeMem(0x8d2c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x9c8d);
        EXPECT(gbc.pc(), 0x8d2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d2c), 0x78);
        // 78 02FC
        gbc.setState(0x55bd, 0x9d2e, 0xb890, 0xda86, 0xb419, 0x27b, 0x0, 0x0);
        gbc.writeMem(0x55bd, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x9d2e);
        EXPECT(gbc.pc(), 0x55be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 02FD
        gbc.setState(0x9a4e, 0x49a9, 0x3df0, 0xe36c, 0x9c73, 0x2035, 0x1, 0x0);
        gbc.writeMem(0x9a4e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x49a9);
        EXPECT(gbc.pc(), 0x9a4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a4e), 0x78);
        // 78 02FE
        gbc.setState(0x33be, 0x4499, 0xea90, 0x16ae, 0x2ae7, 0x7d96, 0x0, 0x0);
        gbc.writeMem(0x33be, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4499);
        EXPECT(gbc.pc(), 0x33bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 02FF
        gbc.setState(0x4207, 0x2564, 0xc8b0, 0x1387, 0x60f7, 0xfdff, 0x1, 0x1);
        gbc.writeMem(0x4207, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2564);
        EXPECT(gbc.pc(), 0x4208);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0301
        gbc.setState(0x61a7, 0x5b93, 0xfca0, 0x4f81, 0xe4d, 0xcf6e, 0x0, 0x1);
        gbc.writeMem(0x61a7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x5b93);
        EXPECT(gbc.pc(), 0x61a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0302
        gbc.setState(0xd2ce, 0xd5a6, 0x6c0, 0xccc9, 0x16b8, 0x2443, 0x0, 0x1);
        gbc.writeMem(0xd2ce, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd5a6);
        EXPECT(gbc.pc(), 0xd2cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2ce), 0x78);
        // 78 0303
        gbc.setState(0x9b32, 0x7e72, 0xc4d0, 0x996f, 0xcb95, 0x9db0, 0x0, 0x1);
        gbc.writeMem(0x9b32, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x7e72);
        EXPECT(gbc.pc(), 0x9b33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b32), 0x78);
        // 78 0304
        gbc.setState(0x9a1c, 0xea5d, 0xa310, 0x28ea, 0x8e82, 0xd0af, 0x0, 0x1);
        gbc.writeMem(0x9a1c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xea5d);
        EXPECT(gbc.pc(), 0x9a1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a1c), 0x78);
        // 78 0305
        gbc.setState(0x4ed6, 0x1429, 0xafe0, 0x7026, 0x85d7, 0x6ec4, 0x1, 0x1);
        gbc.writeMem(0x4ed6, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1429);
        EXPECT(gbc.pc(), 0x4ed7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0306
        gbc.setState(0x8c90, 0x2f34, 0xed30, 0x51c9, 0x2110, 0xa2de, 0x0, 0x1);
        gbc.writeMem(0x8c90, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x2f34);
        EXPECT(gbc.pc(), 0x8c91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c90), 0x78);
        // 78 0307
        gbc.setState(0x37e9, 0x3410, 0x74a0, 0xc6f3, 0xe26b, 0x36a9, 0x1, 0x0);
        gbc.writeMem(0x37e9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3410);
        EXPECT(gbc.pc(), 0x37ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0308
        gbc.setState(0xde30, 0xf2f0, 0xffd0, 0x22e3, 0xb716, 0x9eb7, 0x0, 0x1);
        gbc.writeMem(0xde30, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xf2f0);
        EXPECT(gbc.pc(), 0xde31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde30), 0x78);
        // 78 0309
        gbc.setState(0x28c7, 0x8205, 0x1d40, 0xf0ee, 0xad07, 0x3e59, 0x1, 0x0);
        gbc.writeMem(0x28c7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8205);
        EXPECT(gbc.pc(), 0x28c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 030A
        gbc.setState(0x2d0c, 0x5a8e, 0x6d50, 0x5e25, 0xed1c, 0x5fd5, 0x1, 0x1);
        gbc.writeMem(0x2d0c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x5a8e);
        EXPECT(gbc.pc(), 0x2d0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 030B
        gbc.setState(0x2005, 0x152c, 0x1d50, 0x5e87, 0x90e2, 0x8a84, 0x0, 0x1);
        gbc.writeMem(0x2005, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x152c);
        EXPECT(gbc.pc(), 0x2006);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 030C
        gbc.setState(0x9c08, 0xe090, 0x2300, 0x76c, 0x3f72, 0xc80, 0x0, 0x0);
        gbc.writeMem(0x9c08, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe090);
        EXPECT(gbc.pc(), 0x9c09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c08), 0x78);
        // 78 030D
        gbc.setState(0x9373, 0x596f, 0xb730, 0x42ba, 0x1e34, 0xc536, 0x1, 0x0);
        gbc.writeMem(0x9373, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x596f);
        EXPECT(gbc.pc(), 0x9374);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9373), 0x78);
        // 78 030E
        gbc.setState(0x4ddc, 0x150a, 0xbb70, 0xc85d, 0xed4e, 0x39a1, 0x0, 0x0);
        gbc.writeMem(0x4ddc, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x150a);
        EXPECT(gbc.pc(), 0x4ddd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 030F
        gbc.setState(0x9957, 0xa7e1, 0x6200, 0x5dc1, 0x7163, 0x70ee, 0x1, 0x0);
        gbc.writeMem(0x9957, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xa7e1);
        EXPECT(gbc.pc(), 0x9958);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9957), 0x78);
        // 78 0310
        gbc.setState(0x36f5, 0xdb7f, 0x2a10, 0x462e, 0x94c4, 0x115e, 0x1, 0x1);
        gbc.writeMem(0x36f5, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xdb7f);
        EXPECT(gbc.pc(), 0x36f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0311
        gbc.setState(0x11be, 0x35e2, 0x3760, 0xbf50, 0x4589, 0xffe1, 0x0, 0x1);
        gbc.writeMem(0x11be, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x35e2);
        EXPECT(gbc.pc(), 0x11bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0312
        gbc.setState(0xe95e, 0xef7b, 0x27b0, 0xb475, 0x7e2, 0xbf4d, 0x0, 0x0);
        gbc.writeMem(0xe95e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xef7b);
        EXPECT(gbc.pc(), 0xe95f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe95e), 0x78);
        // 78 0313
        gbc.setState(0x66a5, 0x52c8, 0x85f0, 0x40bb, 0x2cef, 0xa544, 0x0, 0x0);
        gbc.writeMem(0x66a5, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x52c8);
        EXPECT(gbc.pc(), 0x66a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0314
        gbc.setState(0x6e65, 0x656, 0xdde0, 0x32dc, 0x4db3, 0xf0b3, 0x0, 0x1);
        gbc.writeMem(0x6e65, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x656);
        EXPECT(gbc.pc(), 0x6e66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0315
        gbc.setState(0x3fe4, 0xb730, 0x95c0, 0x5d53, 0xcaf3, 0x8e61, 0x0, 0x1);
        gbc.writeMem(0x3fe4, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb730);
        EXPECT(gbc.pc(), 0x3fe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0316
        gbc.setState(0x56e6, 0x51d1, 0xe9c0, 0x1640, 0xaf79, 0xc8a7, 0x0, 0x1);
        gbc.writeMem(0x56e6, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x51d1);
        EXPECT(gbc.pc(), 0x56e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0317
        gbc.setState(0x976f, 0x2566, 0x3ce0, 0xdb12, 0xafb5, 0xee16, 0x1, 0x0);
        gbc.writeMem(0x976f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x2566);
        EXPECT(gbc.pc(), 0x9770);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x976f), 0x78);
        // 78 0318
        gbc.setState(0x3fe8, 0x727b, 0xfe50, 0x882d, 0x9f6f, 0xe42c, 0x0, 0x1);
        gbc.writeMem(0x3fe8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x727b);
        EXPECT(gbc.pc(), 0x3fe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0319
        gbc.setState(0x137, 0xcda0, 0xadc0, 0x983d, 0x90cb, 0x12e5, 0x1, 0x1);
        gbc.writeMem(0x137, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xcda0);
        EXPECT(gbc.pc(), 0x138);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 031A
        gbc.setState(0x475b, 0xf0dd, 0x83b0, 0xafab, 0x36f7, 0xa26b, 0x1, 0x0);
        gbc.writeMem(0x475b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf0dd);
        EXPECT(gbc.pc(), 0x475c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 031B
        gbc.setState(0xeac8, 0x4573, 0x1490, 0xa283, 0xca23, 0xaacf, 0x0, 0x1);
        gbc.writeMem(0xeac8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4573);
        EXPECT(gbc.pc(), 0xeac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeac8), 0x78);
        // 78 031C
        gbc.setState(0xc8dc, 0xa5a4, 0x6fa0, 0x3c73, 0x5a3d, 0x6767, 0x0, 0x0);
        gbc.writeMem(0xc8dc, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xa5a4);
        EXPECT(gbc.pc(), 0xc8dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8dc), 0x78);
        // 78 031D
        gbc.setState(0x39f9, 0x274d, 0xc030, 0x61bc, 0x38af, 0xdc3e, 0x1, 0x1);
        gbc.writeMem(0x39f9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x274d);
        EXPECT(gbc.pc(), 0x39fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 031E
        gbc.setState(0x9343, 0xf712, 0x1890, 0xe00c, 0x335f, 0xd20d, 0x0, 0x1);
        gbc.writeMem(0x9343, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf712);
        EXPECT(gbc.pc(), 0x9344);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9343), 0x78);
        // 78 031F
        gbc.setState(0x53d3, 0x5f66, 0x24f0, 0x3e3d, 0x3f11, 0xeec8, 0x1, 0x1);
        gbc.writeMem(0x53d3, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5f66);
        EXPECT(gbc.pc(), 0x53d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0320
        gbc.setState(0x119d, 0x9c4b, 0x8d60, 0xa3f8, 0x6d1a, 0xd364, 0x0, 0x1);
        gbc.writeMem(0x119d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9c4b);
        EXPECT(gbc.pc(), 0x119e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0321
        gbc.setState(0xe1ed, 0xdaef, 0x250, 0xa0da, 0x6071, 0x3b79, 0x0, 0x1);
        gbc.writeMem(0xe1ed, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xdaef);
        EXPECT(gbc.pc(), 0xe1ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1ed), 0x78);
        // 78 0322
        gbc.setState(0x9efc, 0xde76, 0xa8b0, 0x5b3e, 0x4f5e, 0xfd50, 0x0, 0x1);
        gbc.writeMem(0x9efc, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xde76);
        EXPECT(gbc.pc(), 0x9efd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9efc), 0x78);
        // 78 0323
        gbc.setState(0x9eda, 0x6d3f, 0x7190, 0x6c9e, 0x24f0, 0x44d0, 0x0, 0x0);
        gbc.writeMem(0x9eda, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x6d3f);
        EXPECT(gbc.pc(), 0x9edb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eda), 0x78);
        // 78 0324
        gbc.setState(0x86dc, 0x4141, 0xa9e0, 0xc69e, 0xb10c, 0xe918, 0x0, 0x0);
        gbc.writeMem(0x86dc, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x4141);
        EXPECT(gbc.pc(), 0x86dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86dc), 0x78);
        // 78 0325
        gbc.setState(0x393, 0x296, 0xfa30, 0x859f, 0x497e, 0x16e9, 0x0, 0x1);
        gbc.writeMem(0x393, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x296);
        EXPECT(gbc.pc(), 0x394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0326
        gbc.setState(0xbd1d, 0x6eed, 0xfbf0, 0x4c4f, 0x3d8a, 0xd038, 0x0, 0x1);
        gbc.writeMem(0xbd1d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x6eed);
        EXPECT(gbc.pc(), 0xbd1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd1d), 0x78);
        // 78 0327
        gbc.setState(0x9048, 0x37d9, 0x2290, 0xc823, 0x3f96, 0xf967, 0x0, 0x1);
        gbc.writeMem(0x9048, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x37d9);
        EXPECT(gbc.pc(), 0x9049);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9048), 0x78);
        // 78 0328
        gbc.setState(0x1716, 0x45b4, 0xcd70, 0x5ae6, 0x2253, 0xb3f2, 0x0, 0x1);
        gbc.writeMem(0x1716, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x45b4);
        EXPECT(gbc.pc(), 0x1717);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0329
        gbc.setState(0x2727, 0xf6c7, 0x7630, 0xed8, 0xa880, 0x7149, 0x1, 0x1);
        gbc.writeMem(0x2727, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf6c7);
        EXPECT(gbc.pc(), 0x2728);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 032A
        gbc.setState(0x3c1c, 0xc36d, 0x5150, 0x136b, 0x1939, 0xe609, 0x0, 0x0);
        gbc.writeMem(0x3c1c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xc36d);
        EXPECT(gbc.pc(), 0x3c1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 032B
        gbc.setState(0x1f72, 0xc84d, 0x2020, 0x2fb5, 0xda99, 0x70c, 0x0, 0x1);
        gbc.writeMem(0x1f72, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc84d);
        EXPECT(gbc.pc(), 0x1f73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 032C
        gbc.setState(0xa529, 0x7949, 0xb9f0, 0x4f9d, 0x9db2, 0xceac, 0x1, 0x1);
        gbc.writeMem(0xa529, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7949);
        EXPECT(gbc.pc(), 0xa52a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa529), 0x78);
        // 78 032D
        gbc.setState(0x8bf9, 0x5f72, 0x4d30, 0xdbad, 0x2287, 0x1368, 0x1, 0x0);
        gbc.writeMem(0x8bf9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5f72);
        EXPECT(gbc.pc(), 0x8bfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bf9), 0x78);
        // 78 032E
        gbc.setState(0x2500, 0x6389, 0x6780, 0x9dde, 0x7ad0, 0x5177, 0x1, 0x0);
        gbc.writeMem(0x2500, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x6389);
        EXPECT(gbc.pc(), 0x2501);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 032F
        gbc.setState(0x2887, 0x25a1, 0x8f60, 0x2b23, 0xd903, 0x4a58, 0x0, 0x0);
        gbc.writeMem(0x2887, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x25a1);
        EXPECT(gbc.pc(), 0x2888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0330
        gbc.setState(0x8613, 0xbec, 0x5e00, 0xe6e4, 0xe849, 0x3238, 0x1, 0x0);
        gbc.writeMem(0x8613, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xbec);
        EXPECT(gbc.pc(), 0x8614);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8613), 0x78);
        // 78 0331
        gbc.setState(0x252a, 0x93, 0xd530, 0x8517, 0xb4ef, 0xeb00, 0x1, 0x0);
        gbc.writeMem(0x252a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x93);
        EXPECT(gbc.pc(), 0x252b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0332
        gbc.setState(0x77c5, 0xa1f3, 0x9730, 0x92d8, 0x2e8c, 0x94f0, 0x0, 0x1);
        gbc.writeMem(0x77c5, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa1f3);
        EXPECT(gbc.pc(), 0x77c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0333
        gbc.setState(0xe467, 0x7b58, 0x1010, 0x1fe2, 0x1816, 0xdcd1, 0x1, 0x0);
        gbc.writeMem(0xe467, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x7b58);
        EXPECT(gbc.pc(), 0xe468);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe467), 0x78);
        // 78 0334
        gbc.setState(0x6e50, 0x6d8d, 0x52a0, 0x797d, 0xca0d, 0x689d, 0x1, 0x1);
        gbc.writeMem(0x6e50, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x6d8d);
        EXPECT(gbc.pc(), 0x6e51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0335
        gbc.setState(0x1cde, 0xf9b9, 0x1440, 0x6f06, 0x4f02, 0xd04, 0x0, 0x1);
        gbc.writeMem(0x1cde, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf9b9);
        EXPECT(gbc.pc(), 0x1cdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0336
        gbc.setState(0x4ecf, 0x615e, 0xe320, 0x5053, 0xf2e1, 0xe4db, 0x1, 0x0);
        gbc.writeMem(0x4ecf, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x615e);
        EXPECT(gbc.pc(), 0x4ed0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0338
        gbc.setState(0xda66, 0x841f, 0x6f60, 0xc0b4, 0x1323, 0xfca6, 0x0, 0x0);
        gbc.writeMem(0xda66, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x841f);
        EXPECT(gbc.pc(), 0xda67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda66), 0x78);
        // 78 0339
        gbc.setState(0x56a3, 0xd1a, 0x6110, 0xf7b7, 0x5481, 0x9e8f, 0x0, 0x1);
        gbc.writeMem(0x56a3, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xd1a);
        EXPECT(gbc.pc(), 0x56a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 033A
        gbc.setState(0xaba7, 0xa5ee, 0xd910, 0x5ef0, 0x335d, 0xcff, 0x1, 0x0);
        gbc.writeMem(0xaba7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa5ee);
        EXPECT(gbc.pc(), 0xaba8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaba7), 0x78);
        // 78 033B
        gbc.setState(0xcd0, 0x7c75, 0x2160, 0x68e6, 0x7241, 0x31f0, 0x1, 0x1);
        gbc.writeMem(0xcd0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x7c75);
        EXPECT(gbc.pc(), 0xcd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 033C
        gbc.setState(0xaf55, 0xa379, 0x6470, 0xb220, 0x440e, 0x868e, 0x0, 0x0);
        gbc.writeMem(0xaf55, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xa379);
        EXPECT(gbc.pc(), 0xaf56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf55), 0x78);
        // 78 033E
        gbc.setState(0x8771, 0x71fe, 0x6c10, 0x9930, 0x285, 0x395, 0x0, 0x1);
        gbc.writeMem(0x8771, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x71fe);
        EXPECT(gbc.pc(), 0x8772);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8771), 0x78);
        // 78 033F
        gbc.setState(0xc889, 0x944b, 0xdb80, 0x1b7, 0x5a65, 0x6352, 0x0, 0x0);
        gbc.writeMem(0xc889, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x944b);
        EXPECT(gbc.pc(), 0xc88a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc889), 0x78);
        // 78 0340
        gbc.setState(0x80f8, 0xd530, 0xfe30, 0x4ff4, 0x1739, 0xdf25, 0x1, 0x0);
        gbc.writeMem(0x80f8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xd530);
        EXPECT(gbc.pc(), 0x80f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80f8), 0x78);
        // 78 0341
        gbc.setState(0xec3e, 0x22b3, 0xe5c0, 0x33e2, 0xa8d9, 0x1922, 0x1, 0x0);
        gbc.writeMem(0xec3e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x22b3);
        EXPECT(gbc.pc(), 0xec3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec3e), 0x78);
        // 78 0342
        gbc.setState(0xa3c9, 0xd6b6, 0x450, 0xcfe3, 0x177a, 0xf790, 0x1, 0x1);
        gbc.writeMem(0xa3c9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xd6b6);
        EXPECT(gbc.pc(), 0xa3ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3c9), 0x78);
        // 78 0343
        gbc.setState(0xc5dd, 0xf21d, 0xe000, 0x8bd8, 0x2943, 0x541d, 0x0, 0x0);
        gbc.writeMem(0xc5dd, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf21d);
        EXPECT(gbc.pc(), 0xc5de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5dd), 0x78);
        // 78 0344
        gbc.setState(0x6969, 0xf08c, 0x2270, 0xbf07, 0x5fcb, 0xb762, 0x0, 0x1);
        gbc.writeMem(0x6969, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf08c);
        EXPECT(gbc.pc(), 0x696a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0345
        gbc.setState(0x3580, 0x31e7, 0x4fc0, 0x6fcc, 0x9d76, 0x330f, 0x0, 0x1);
        gbc.writeMem(0x3580, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x31e7);
        EXPECT(gbc.pc(), 0x3581);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0346
        gbc.setState(0xb7a8, 0x1239, 0x47d0, 0x8504, 0x2e53, 0x4018, 0x1, 0x1);
        gbc.writeMem(0xb7a8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1239);
        EXPECT(gbc.pc(), 0xb7a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7a8), 0x78);
        // 78 0347
        gbc.setState(0xee75, 0xd1ab, 0xb3b0, 0xe323, 0xb94, 0xf8eb, 0x1, 0x0);
        gbc.writeMem(0xee75, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xd1ab);
        EXPECT(gbc.pc(), 0xee76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee75), 0x78);
        // 78 0348
        gbc.setState(0x5447, 0x9c3d, 0x2510, 0x6794, 0xa58d, 0x82a, 0x0, 0x0);
        gbc.writeMem(0x5447, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x9c3d);
        EXPECT(gbc.pc(), 0x5448);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0349
        gbc.setState(0xe832, 0xfa02, 0x9da0, 0x38c2, 0xb37f, 0x861f, 0x1, 0x1);
        gbc.writeMem(0xe832, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xfa02);
        EXPECT(gbc.pc(), 0xe833);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe832), 0x78);
        // 78 034A
        gbc.setState(0x494f, 0x2043, 0x2f30, 0x587b, 0xa039, 0xe5f8, 0x0, 0x0);
        gbc.writeMem(0x494f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2043);
        EXPECT(gbc.pc(), 0x4950);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 034B
        gbc.setState(0xd973, 0x8f0d, 0x4520, 0x350d, 0x52e, 0xe03c, 0x1, 0x0);
        gbc.writeMem(0xd973, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8f0d);
        EXPECT(gbc.pc(), 0xd974);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd973), 0x78);
        // 78 034C
        gbc.setState(0x6a93, 0x981a, 0xea40, 0x56c9, 0xa75c, 0x343d, 0x0, 0x1);
        gbc.writeMem(0x6a93, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x981a);
        EXPECT(gbc.pc(), 0x6a94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 034D
        gbc.setState(0xabb7, 0xa421, 0xcfe0, 0x5fc7, 0xb83a, 0x75a9, 0x1, 0x0);
        gbc.writeMem(0xabb7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa421);
        EXPECT(gbc.pc(), 0xabb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabb7), 0x78);
        // 78 034E
        gbc.setState(0xa12d, 0x19ea, 0x9470, 0xc413, 0xd4e1, 0x1615, 0x1, 0x1);
        gbc.writeMem(0xa12d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x19ea);
        EXPECT(gbc.pc(), 0xa12e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa12d), 0x78);
        // 78 034F
        gbc.setState(0xdd35, 0x12c5, 0xcd80, 0x48ee, 0x8031, 0xb324, 0x1, 0x1);
        gbc.writeMem(0xdd35, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x12c5);
        EXPECT(gbc.pc(), 0xdd36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd35), 0x78);
        // 78 0350
        gbc.setState(0x96b7, 0x466, 0x2fc0, 0xb532, 0xca18, 0x921d, 0x1, 0x1);
        gbc.writeMem(0x96b7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x466);
        EXPECT(gbc.pc(), 0x96b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96b7), 0x78);
        // 78 0351
        gbc.setState(0x17e2, 0x2f4a, 0xa7c0, 0x9a24, 0xfef0, 0x542f, 0x0, 0x0);
        gbc.writeMem(0x17e2, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2f4a);
        EXPECT(gbc.pc(), 0x17e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0352
        gbc.setState(0xe6db, 0x325, 0x8bd0, 0x2717, 0xe488, 0xede2, 0x0, 0x1);
        gbc.writeMem(0xe6db, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x325);
        EXPECT(gbc.pc(), 0xe6dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6db), 0x78);
        // 78 0353
        gbc.setState(0x2727, 0xbe88, 0x29d0, 0x876, 0x9b6e, 0xfdf8, 0x0, 0x1);
        gbc.writeMem(0x2727, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xbe88);
        EXPECT(gbc.pc(), 0x2728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0354
        gbc.setState(0x766a, 0x54be, 0xe660, 0xe884, 0x865a, 0x2108, 0x0, 0x1);
        gbc.writeMem(0x766a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x54be);
        EXPECT(gbc.pc(), 0x766b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0355
        gbc.setState(0x98db, 0xa106, 0xeef0, 0xc047, 0xb552, 0xde5a, 0x1, 0x0);
        gbc.writeMem(0x98db, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa106);
        EXPECT(gbc.pc(), 0x98dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98db), 0x78);
        // 78 0356
        gbc.setState(0xbfcf, 0xc5ae, 0x2d80, 0x719f, 0x35dd, 0x4177, 0x0, 0x1);
        gbc.writeMem(0xbfcf, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc5ae);
        EXPECT(gbc.pc(), 0xbfd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfcf), 0x78);
        // 78 0357
        gbc.setState(0x20a, 0xde8c, 0x2100, 0x3a2e, 0x6d76, 0xfbfe, 0x1, 0x1);
        gbc.writeMem(0x20a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xde8c);
        EXPECT(gbc.pc(), 0x20b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0358
        gbc.setState(0xd63d, 0xc401, 0x65d0, 0x6405, 0x9691, 0xcacf, 0x0, 0x1);
        gbc.writeMem(0xd63d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xc401);
        EXPECT(gbc.pc(), 0xd63e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd63d), 0x78);
        // 78 0359
        gbc.setState(0xadff, 0x9b52, 0xea0, 0x91ef, 0x386d, 0x7b74, 0x0, 0x0);
        gbc.writeMem(0xadff, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9b52);
        EXPECT(gbc.pc(), 0xae00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadff), 0x78);
        // 78 035B
        gbc.setState(0x2770, 0x9be6, 0xa210, 0x4102, 0xff65, 0x34e1, 0x1, 0x0);
        gbc.writeMem(0x2770, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9be6);
        EXPECT(gbc.pc(), 0x2771);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 035C
        gbc.setState(0x88d, 0xec09, 0x2380, 0x780, 0xad69, 0xd39c, 0x1, 0x0);
        gbc.writeMem(0x88d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xec09);
        EXPECT(gbc.pc(), 0x88e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 035D
        gbc.setState(0xb5f2, 0x2244, 0x3030, 0x84a2, 0xe4dc, 0x7ccc, 0x0, 0x0);
        gbc.writeMem(0xb5f2, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2244);
        EXPECT(gbc.pc(), 0xb5f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5f2), 0x78);
        // 78 035E
        gbc.setState(0x8a57, 0xfd16, 0x8e50, 0x3482, 0x31e4, 0x37b4, 0x0, 0x0);
        gbc.writeMem(0x8a57, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xfd16);
        EXPECT(gbc.pc(), 0x8a58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a57), 0x78);
        // 78 035F
        gbc.setState(0xd5b8, 0x558b, 0xd070, 0xa757, 0x27e7, 0x8bad, 0x0, 0x1);
        gbc.writeMem(0xd5b8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x558b);
        EXPECT(gbc.pc(), 0xd5b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5b8), 0x78);
        // 78 0360
        gbc.setState(0x9f7e, 0xcc9b, 0x6770, 0xd045, 0xa6c2, 0x406a, 0x0, 0x1);
        gbc.writeMem(0x9f7e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xcc9b);
        EXPECT(gbc.pc(), 0x9f7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f7e), 0x78);
        // 78 0361
        gbc.setState(0xbc7d, 0xcbec, 0x9240, 0x38e2, 0xce29, 0x5f4e, 0x0, 0x0);
        gbc.writeMem(0xbc7d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xcbec);
        EXPECT(gbc.pc(), 0xbc7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc7d), 0x78);
        // 78 0362
        gbc.setState(0x354d, 0x33a6, 0xc5d0, 0xc341, 0xcc1b, 0x988f, 0x0, 0x1);
        gbc.writeMem(0x354d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x33a6);
        EXPECT(gbc.pc(), 0x354e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0363
        gbc.setState(0x4bec, 0x96b0, 0xbc0, 0x1d05, 0x6259, 0x994, 0x1, 0x1);
        gbc.writeMem(0x4bec, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x96b0);
        EXPECT(gbc.pc(), 0x4bed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0364
        gbc.setState(0x990b, 0x6b0e, 0x2e90, 0xe338, 0xc71f, 0x2ff9, 0x0, 0x1);
        gbc.writeMem(0x990b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6b0e);
        EXPECT(gbc.pc(), 0x990c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x990b), 0x78);
        // 78 0365
        gbc.setState(0xad42, 0xaa01, 0xc540, 0xe94f, 0x699c, 0xa9f7, 0x1, 0x0);
        gbc.writeMem(0xad42, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xaa01);
        EXPECT(gbc.pc(), 0xad43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad42), 0x78);
        // 78 0366
        gbc.setState(0x40a6, 0xea84, 0xc2c0, 0x34ab, 0x427a, 0xc2d9, 0x0, 0x1);
        gbc.writeMem(0x40a6, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xea84);
        EXPECT(gbc.pc(), 0x40a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0368
        gbc.setState(0xb679, 0xe521, 0xaa50, 0x478f, 0x1108, 0xc03e, 0x1, 0x0);
        gbc.writeMem(0xb679, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xe521);
        EXPECT(gbc.pc(), 0xb67a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb679), 0x78);
        // 78 0369
        gbc.setState(0xaea5, 0xed87, 0x63e0, 0xaff9, 0x3ea4, 0x2592, 0x1, 0x0);
        gbc.writeMem(0xaea5, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xed87);
        EXPECT(gbc.pc(), 0xaea6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaea5), 0x78);
        // 78 036A
        gbc.setState(0x8d25, 0xe37d, 0x1cf0, 0xf5b6, 0x9e2d, 0x2c9b, 0x0, 0x1);
        gbc.writeMem(0x8d25, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xe37d);
        EXPECT(gbc.pc(), 0x8d26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d25), 0x78);
        // 78 036B
        gbc.setState(0xd43a, 0x533d, 0x77c0, 0xd6a, 0x212e, 0x3c45, 0x0, 0x0);
        gbc.writeMem(0xd43a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x533d);
        EXPECT(gbc.pc(), 0xd43b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd43a), 0x78);
        // 78 036C
        gbc.setState(0x127e, 0x9dab, 0x76f0, 0x3ec8, 0x4bd3, 0x35f8, 0x1, 0x0);
        gbc.writeMem(0x127e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x9dab);
        EXPECT(gbc.pc(), 0x127f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 036D
        gbc.setState(0x4ed1, 0xd1b6, 0xbe80, 0xb140, 0xbb06, 0xc801, 0x1, 0x0);
        gbc.writeMem(0x4ed1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd1b6);
        EXPECT(gbc.pc(), 0x4ed2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 036E
        gbc.setState(0x14a4, 0xf499, 0x51a0, 0x1f06, 0x6855, 0xe61, 0x0, 0x1);
        gbc.writeMem(0x14a4, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf499);
        EXPECT(gbc.pc(), 0x14a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 036F
        gbc.setState(0xa697, 0xf183, 0x2ba0, 0xf920, 0x162d, 0x24cb, 0x1, 0x1);
        gbc.writeMem(0xa697, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xf183);
        EXPECT(gbc.pc(), 0xa698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa697), 0x78);
        // 78 0370
        gbc.setState(0xa8f1, 0xb545, 0x2290, 0x7e2, 0x2b3e, 0x8d6a, 0x0, 0x0);
        gbc.writeMem(0xa8f1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb545);
        EXPECT(gbc.pc(), 0xa8f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8f1), 0x78);
        // 78 0372
        gbc.setState(0xc01e, 0xcbc3, 0x9fd0, 0xa2ec, 0x1f6b, 0x4da1, 0x0, 0x1);
        gbc.writeMem(0xc01e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xcbc3);
        EXPECT(gbc.pc(), 0xc01f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc01e), 0x78);
        // 78 0373
        gbc.setState(0xfc5, 0xcfd3, 0x5e0, 0xd754, 0x50c, 0xc3, 0x0, 0x0);
        gbc.writeMem(0xfc5, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xcfd3);
        EXPECT(gbc.pc(), 0xfc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0374
        gbc.setState(0xc134, 0xe90, 0xbc30, 0x1b21, 0x8cb0, 0x7e48, 0x1, 0x1);
        gbc.writeMem(0xc134, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe90);
        EXPECT(gbc.pc(), 0xc135);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc134), 0x78);
        // 78 0376
        gbc.setState(0x1c70, 0x3ce5, 0x88f0, 0xd18c, 0x1402, 0xa227, 0x0, 0x0);
        gbc.writeMem(0x1c70, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3ce5);
        EXPECT(gbc.pc(), 0x1c71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0377
        gbc.setState(0xae42, 0x169c, 0xd720, 0x21fb, 0x45b9, 0xd526, 0x0, 0x1);
        gbc.writeMem(0xae42, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x169c);
        EXPECT(gbc.pc(), 0xae43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae42), 0x78);
        // 78 0378
        gbc.setState(0x5274, 0xb79e, 0x6a50, 0x1c61, 0x73c8, 0xdb61, 0x0, 0x1);
        gbc.writeMem(0x5274, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb79e);
        EXPECT(gbc.pc(), 0x5275);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0379
        gbc.setState(0x86cc, 0x3528, 0x3cf0, 0x7e0e, 0x30c8, 0x5afe, 0x0, 0x0);
        gbc.writeMem(0x86cc, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3528);
        EXPECT(gbc.pc(), 0x86cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86cc), 0x78);
        // 78 037A
        gbc.setState(0x8b28, 0xc1fd, 0x14c0, 0xcc4c, 0x8c79, 0xbdd6, 0x1, 0x1);
        gbc.writeMem(0x8b28, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc1fd);
        EXPECT(gbc.pc(), 0x8b29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b28), 0x78);
        // 78 037B
        gbc.setState(0xddd3, 0x1fa7, 0x6700, 0x3cd1, 0xf378, 0x4b8c, 0x1, 0x0);
        gbc.writeMem(0xddd3, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x1fa7);
        EXPECT(gbc.pc(), 0xddd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddd3), 0x78);
        // 78 037C
        gbc.setState(0x4487, 0x4217, 0x3c30, 0x82fa, 0x84a4, 0x2962, 0x1, 0x0);
        gbc.writeMem(0x4487, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4217);
        EXPECT(gbc.pc(), 0x4488);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 037D
        gbc.setState(0x597c, 0x72d, 0x3160, 0x3244, 0xef67, 0xb8c, 0x0, 0x1);
        gbc.writeMem(0x597c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x72d);
        EXPECT(gbc.pc(), 0x597d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 037E
        gbc.setState(0x4bf9, 0x567e, 0x9530, 0xe2a3, 0x3cc4, 0x72c6, 0x1, 0x0);
        gbc.writeMem(0x4bf9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x567e);
        EXPECT(gbc.pc(), 0x4bfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 037F
        gbc.setState(0x582a, 0xe7ca, 0xd6b0, 0x8134, 0x3dd8, 0x1a51, 0x0, 0x1);
        gbc.writeMem(0x582a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe7ca);
        EXPECT(gbc.pc(), 0x582b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0380
        gbc.setState(0xc35d, 0x1f3d, 0xa480, 0x3f9c, 0x14e5, 0xab2d, 0x0, 0x0);
        gbc.writeMem(0xc35d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1f3d);
        EXPECT(gbc.pc(), 0xc35e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc35d), 0x78);
        // 78 0381
        gbc.setState(0x5907, 0x9e8f, 0x9800, 0xa617, 0x4d2f, 0x9352, 0x0, 0x1);
        gbc.writeMem(0x5907, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9e8f);
        EXPECT(gbc.pc(), 0x5908);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0382
        gbc.setState(0x1145, 0x317b, 0xc440, 0x8131, 0x7b13, 0x7d7c, 0x0, 0x1);
        gbc.writeMem(0x1145, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x317b);
        EXPECT(gbc.pc(), 0x1146);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0383
        gbc.setState(0xe56e, 0xb348, 0x3260, 0xe89d, 0x32b5, 0xa5c, 0x1, 0x0);
        gbc.writeMem(0xe56e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb348);
        EXPECT(gbc.pc(), 0xe56f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe56e), 0x78);
        // 78 0384
        gbc.setState(0x5a31, 0x38d9, 0x7a10, 0xa6e, 0x5dba, 0xaf6f, 0x1, 0x0);
        gbc.writeMem(0x5a31, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x38d9);
        EXPECT(gbc.pc(), 0x5a32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0385
        gbc.setState(0xb2aa, 0x5572, 0x7ab0, 0x5c28, 0x66bc, 0x785, 0x1, 0x0);
        gbc.writeMem(0xb2aa, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5572);
        EXPECT(gbc.pc(), 0xb2ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2aa), 0x78);
        // 78 0386
        gbc.setState(0x8bcb, 0x2c38, 0x73b0, 0x71b6, 0x57d8, 0x325a, 0x1, 0x0);
        gbc.writeMem(0x8bcb, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2c38);
        EXPECT(gbc.pc(), 0x8bcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bcb), 0x78);
        // 78 0387
        gbc.setState(0x4ea6, 0x9b64, 0xa580, 0xc637, 0xbafc, 0x37ac, 0x1, 0x1);
        gbc.writeMem(0x4ea6, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x9b64);
        EXPECT(gbc.pc(), 0x4ea7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0388
        gbc.setState(0xe14b, 0xe009, 0xa3d0, 0xa0f, 0x688b, 0x6d5e, 0x1, 0x0);
        gbc.writeMem(0xe14b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe009);
        EXPECT(gbc.pc(), 0xe14c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe14b), 0x78);
        // 78 0389
        gbc.setState(0x3c24, 0xc6a2, 0xeee0, 0x615b, 0x3172, 0xe77f, 0x1, 0x1);
        gbc.writeMem(0x3c24, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc6a2);
        EXPECT(gbc.pc(), 0x3c25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 038A
        gbc.setState(0xa10b, 0x31e4, 0x9990, 0x8468, 0x128d, 0x2836, 0x0, 0x0);
        gbc.writeMem(0xa10b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x31e4);
        EXPECT(gbc.pc(), 0xa10c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa10b), 0x78);
        // 78 038B
        gbc.setState(0xb75d, 0xa105, 0x2e50, 0x1bc2, 0xf77a, 0x5243, 0x1, 0x0);
        gbc.writeMem(0xb75d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa105);
        EXPECT(gbc.pc(), 0xb75e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb75d), 0x78);
        // 78 038C
        gbc.setState(0x9907, 0x7e32, 0xb420, 0x3044, 0x13d1, 0xb609, 0x1, 0x1);
        gbc.writeMem(0x9907, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x7e32);
        EXPECT(gbc.pc(), 0x9908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9907), 0x78);
        // 78 038D
        gbc.setState(0xb380, 0xc7c2, 0x2f50, 0x372f, 0x7372, 0xa3fa, 0x0, 0x1);
        gbc.writeMem(0xb380, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc7c2);
        EXPECT(gbc.pc(), 0xb381);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb380), 0x78);
        // 78 038E
        gbc.setState(0x41cb, 0x7b87, 0x4f20, 0xda18, 0x3563, 0xbed6, 0x0, 0x1);
        gbc.writeMem(0x41cb, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x7b87);
        EXPECT(gbc.pc(), 0x41cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 038F
        gbc.setState(0x72ff, 0xe533, 0x9660, 0x7f64, 0xfca0, 0x3397, 0x0, 0x0);
        gbc.writeMem(0x72ff, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe533);
        EXPECT(gbc.pc(), 0x7300);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0390
        gbc.setState(0x4cf, 0x38ba, 0xb390, 0x8575, 0xd904, 0x1aea, 0x0, 0x0);
        gbc.writeMem(0x4cf, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x38ba);
        EXPECT(gbc.pc(), 0x4d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 0391
        gbc.setState(0x52c1, 0xa09b, 0xaec0, 0x94a3, 0xb3a4, 0x8514, 0x1, 0x1);
        gbc.writeMem(0x52c1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa09b);
        EXPECT(gbc.pc(), 0x52c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 0392
        gbc.setState(0x54b1, 0x35ad, 0x6af0, 0x8eaf, 0x3b19, 0x9300, 0x0, 0x0);
        gbc.writeMem(0x54b1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x35ad);
        EXPECT(gbc.pc(), 0x54b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 0393
        gbc.setState(0xd126, 0xc990, 0xbab0, 0xccdb, 0xc434, 0x40d1, 0x1, 0x0);
        gbc.writeMem(0xd126, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xc990);
        EXPECT(gbc.pc(), 0xd127);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd126), 0x78);
        // 78 0394
        gbc.setState(0xa9c2, 0xba9a, 0x3320, 0x60f9, 0x35b5, 0x1f0e, 0x0, 0x0);
        gbc.writeMem(0xa9c2, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xba9a);
        EXPECT(gbc.pc(), 0xa9c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9c2), 0x78);
        // 78 0396
        gbc.setState(0xcc48, 0x80d, 0x72f0, 0xf7e1, 0x75bd, 0xf5d5, 0x1, 0x1);
        gbc.writeMem(0xcc48, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x80d);
        EXPECT(gbc.pc(), 0xcc49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc48), 0x78);
        // 78 0397
        gbc.setState(0x6b87, 0x1590, 0xe420, 0x5f54, 0xde0f, 0xe4bf, 0x1, 0x0);
        gbc.writeMem(0x6b87, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x1590);
        EXPECT(gbc.pc(), 0x6b88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 0398
        gbc.setState(0xbc05, 0xad72, 0xf320, 0xb885, 0x2936, 0x6257, 0x0, 0x0);
        gbc.writeMem(0xbc05, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xad72);
        EXPECT(gbc.pc(), 0xbc06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc05), 0x78);
        // 78 0399
        gbc.setState(0x84dd, 0x4257, 0xdd30, 0x62cf, 0xb891, 0xb393, 0x0, 0x1);
        gbc.writeMem(0x84dd, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x4257);
        EXPECT(gbc.pc(), 0x84de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84dd), 0x78);
        // 78 039A
        gbc.setState(0x651, 0x2795, 0xc4f0, 0xdb54, 0xfc52, 0x1e2a, 0x1, 0x1);
        gbc.writeMem(0x651, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2795);
        EXPECT(gbc.pc(), 0x652);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 039B
        gbc.setState(0xc63e, 0xfa6a, 0x6c40, 0xd249, 0x7106, 0x9c01, 0x1, 0x0);
        gbc.writeMem(0xc63e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xfa6a);
        EXPECT(gbc.pc(), 0xc63f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc63e), 0x78);
        // 78 039C
        gbc.setState(0x8466, 0xccb, 0x8a50, 0xbba5, 0xe44d, 0x7a87, 0x1, 0x0);
        gbc.writeMem(0x8466, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xccb);
        EXPECT(gbc.pc(), 0x8467);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8466), 0x78);
        // 78 039D
        gbc.setState(0x298, 0xbcdd, 0x11b0, 0xe3e3, 0xa572, 0xb45b, 0x0, 0x0);
        gbc.writeMem(0x298, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xbcdd);
        EXPECT(gbc.pc(), 0x299);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 039F
        gbc.setState(0x6707, 0xa984, 0x58a0, 0x7e3f, 0x47e8, 0xc792, 0x0, 0x1);
        gbc.writeMem(0x6707, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xa984);
        EXPECT(gbc.pc(), 0x6708);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 03A0
        gbc.setState(0x2117, 0xea7f, 0x7d90, 0xcd5, 0x915b, 0x3dec, 0x1, 0x0);
        gbc.writeMem(0x2117, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xea7f);
        EXPECT(gbc.pc(), 0x2118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 03A1
        gbc.setState(0x3fa0, 0xfffd, 0x4d50, 0x5de2, 0x3d52, 0xb9f5, 0x1, 0x0);
        gbc.writeMem(0x3fa0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xfffd);
        EXPECT(gbc.pc(), 0x3fa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 03A3
        gbc.setState(0x86f7, 0x2644, 0x21d0, 0x137a, 0xebf8, 0xca37, 0x0, 0x0);
        gbc.writeMem(0x86f7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x2644);
        EXPECT(gbc.pc(), 0x86f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86f7), 0x78);
        // 78 03A4
        gbc.setState(0x2454, 0xacd1, 0x7bd0, 0xa100, 0x4092, 0xa87a, 0x1, 0x0);
        gbc.writeMem(0x2454, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xacd1);
        EXPECT(gbc.pc(), 0x2455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 03A5
        gbc.setState(0x297e, 0xb6b3, 0x35f0, 0x63ac, 0xc084, 0x5b30, 0x0, 0x1);
        gbc.writeMem(0x297e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb6b3);
        EXPECT(gbc.pc(), 0x297f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 03A6
        gbc.setState(0xef36, 0x1ff4, 0x2450, 0x1620, 0xb423, 0x1f4b, 0x0, 0x0);
        gbc.writeMem(0xef36, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1ff4);
        EXPECT(gbc.pc(), 0xef37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef36), 0x78);
        // 78 03A7
        gbc.setState(0x3f71, 0xc9c3, 0x5600, 0xabfe, 0x4335, 0x96db, 0x0, 0x0);
        gbc.writeMem(0x3f71, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xc9c3);
        EXPECT(gbc.pc(), 0x3f72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 03A8
        gbc.setState(0x5ca4, 0xb053, 0xb0b0, 0x8775, 0xefc8, 0x61d1, 0x0, 0x1);
        gbc.writeMem(0x5ca4, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xb053);
        EXPECT(gbc.pc(), 0x5ca5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 03A9
        gbc.setState(0x6d71, 0xeec, 0xcc10, 0xb89d, 0xdf49, 0x9751, 0x0, 0x1);
        gbc.writeMem(0x6d71, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xeec);
        EXPECT(gbc.pc(), 0x6d72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 03AA
        gbc.setState(0xd70a, 0x44d9, 0x7db0, 0x817f, 0x2385, 0xe7e7, 0x1, 0x0);
        gbc.writeMem(0xd70a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x44d9);
        EXPECT(gbc.pc(), 0xd70b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd70a), 0x78);
        // 78 03AB
        gbc.setState(0x4766, 0x14c8, 0x6050, 0xb9c8, 0x8ae1, 0xf3a0, 0x0, 0x0);
        gbc.writeMem(0x4766, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x14c8);
        EXPECT(gbc.pc(), 0x4767);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 03AC
        gbc.setState(0xd799, 0x8968, 0x8660, 0x5399, 0x52, 0x13f2, 0x0, 0x0);
        gbc.writeMem(0xd799, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x8968);
        EXPECT(gbc.pc(), 0xd79a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd799), 0x78);
        // 78 03AD
        gbc.setState(0x23db, 0xba17, 0xef00, 0xb69b, 0xf723, 0x27df, 0x1, 0x0);
        gbc.writeMem(0x23db, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xba17);
        EXPECT(gbc.pc(), 0x23dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 03AE
        gbc.setState(0xdde1, 0x40b6, 0xf410, 0xc39a, 0x728c, 0x6846, 0x1, 0x0);
        gbc.writeMem(0xdde1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x40b6);
        EXPECT(gbc.pc(), 0xdde2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdde1), 0x78);
        // 78 03AF
        gbc.setState(0xe06c, 0xa602, 0xa610, 0x1ac6, 0x8187, 0xf86f, 0x1, 0x0);
        gbc.writeMem(0xe06c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa602);
        EXPECT(gbc.pc(), 0xe06d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe06c), 0x78);
        // 78 03B0
        gbc.setState(0x56e6, 0x60c9, 0xd7c0, 0x5a67, 0x688b, 0xbb22, 0x1, 0x0);
        gbc.writeMem(0x56e6, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x60c9);
        EXPECT(gbc.pc(), 0x56e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 03B1
        gbc.setState(0x7606, 0xa8ea, 0xf340, 0x6821, 0xe40d, 0x157d, 0x0, 0x1);
        gbc.writeMem(0x7606, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa8ea);
        EXPECT(gbc.pc(), 0x7607);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 03B2
        gbc.setState(0x838f, 0x789e, 0x2a0, 0xd2e9, 0x1cae, 0x7bab, 0x0, 0x1);
        gbc.writeMem(0x838f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x789e);
        EXPECT(gbc.pc(), 0x8390);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x838f), 0x78);
        // 78 03B4
        gbc.setState(0xa8dc, 0xe2d6, 0xcbd0, 0x866e, 0x6b2d, 0x6f78, 0x0, 0x0);
        gbc.writeMem(0xa8dc, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xe2d6);
        EXPECT(gbc.pc(), 0xa8dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8dc), 0x78);
        // 78 03B5
        gbc.setState(0xe168, 0x898b, 0xbb0, 0x6d24, 0x887b, 0x94c6, 0x0, 0x0);
        gbc.writeMem(0xe168, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x898b);
        EXPECT(gbc.pc(), 0xe169);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe168), 0x78);
        // 78 03B6
        gbc.setState(0xcfbb, 0x93be, 0x6b80, 0xc98c, 0xb72a, 0x4f7e, 0x1, 0x0);
        gbc.writeMem(0xcfbb, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x93be);
        EXPECT(gbc.pc(), 0xcfbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfbb), 0x78);
        // 78 03B7
        gbc.setState(0x274, 0xe984, 0xcc0, 0xf74f, 0xb9e4, 0xec1c, 0x0, 0x0);
        gbc.writeMem(0x274, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xe984);
        EXPECT(gbc.pc(), 0x275);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 03B8
        gbc.setState(0x5b1c, 0xfa06, 0x5220, 0x3285, 0x17eb, 0x1157, 0x0, 0x0);
        gbc.writeMem(0x5b1c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xfa06);
        EXPECT(gbc.pc(), 0x5b1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 03B9
        gbc.setState(0x6850, 0xb36f, 0xd660, 0xe742, 0x8947, 0x5531, 0x0, 0x0);
        gbc.writeMem(0x6850, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb36f);
        EXPECT(gbc.pc(), 0x6851);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 03BA
        gbc.setState(0x713d, 0x2329, 0xeae0, 0x59ae, 0x9162, 0x9f6b, 0x0, 0x0);
        gbc.writeMem(0x713d, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2329);
        EXPECT(gbc.pc(), 0x713e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 03BB
        gbc.setState(0x803f, 0xf203, 0x6410, 0x988c, 0x2b64, 0xc231, 0x0, 0x0);
        gbc.writeMem(0x803f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf203);
        EXPECT(gbc.pc(), 0x8040);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x803f), 0x78);
        // 78 03BC
        gbc.setState(0xaee0, 0x9aec, 0xd030, 0xc4d, 0xef09, 0x4384, 0x0, 0x1);
        gbc.writeMem(0xaee0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x9aec);
        EXPECT(gbc.pc(), 0xaee1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaee0), 0x78);
        // 78 03BD
        gbc.setState(0xa2b2, 0x3de6, 0xa120, 0xd7ae, 0x6273, 0x9730, 0x1, 0x1);
        gbc.writeMem(0xa2b2, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3de6);
        EXPECT(gbc.pc(), 0xa2b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2b2), 0x78);
        // 78 03BE
        gbc.setState(0x7b0a, 0x2f81, 0x1490, 0x2378, 0xb524, 0x13e7, 0x0, 0x0);
        gbc.writeMem(0x7b0a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x2f81);
        EXPECT(gbc.pc(), 0x7b0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 03BF
        gbc.setState(0xd78e, 0x2d84, 0x5d0, 0x79d0, 0x1bf3, 0x1d84, 0x1, 0x1);
        gbc.writeMem(0xd78e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2d84);
        EXPECT(gbc.pc(), 0xd78f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd78e), 0x78);
        // 78 03C0
        gbc.setState(0xbe1b, 0xb747, 0x5910, 0x8648, 0xe228, 0xc563, 0x0, 0x1);
        gbc.writeMem(0xbe1b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xb747);
        EXPECT(gbc.pc(), 0xbe1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe1b), 0x78);
        // 78 03C1
        gbc.setState(0xebfc, 0x9afc, 0xa440, 0x398, 0xc928, 0xfb57, 0x1, 0x0);
        gbc.writeMem(0xebfc, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9afc);
        EXPECT(gbc.pc(), 0xebfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebfc), 0x78);
        // 78 03C2
        gbc.setState(0xc0e0, 0xa4db, 0x2670, 0x51a3, 0xbec4, 0xca9d, 0x0, 0x0);
        gbc.writeMem(0xc0e0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa4db);
        EXPECT(gbc.pc(), 0xc0e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0e0), 0x78);
        // 78 03C3
        gbc.setState(0x94ff, 0xfa47, 0xbc90, 0x2b38, 0xe286, 0x5160, 0x1, 0x0);
        gbc.writeMem(0x94ff, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xfa47);
        EXPECT(gbc.pc(), 0x9500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94ff), 0x78);
        // 78 03C4
        gbc.setState(0x1b70, 0xb359, 0xee20, 0xc25, 0x6170, 0xf29, 0x0, 0x1);
        gbc.writeMem(0x1b70, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb359);
        EXPECT(gbc.pc(), 0x1b71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 03C5
        gbc.setState(0xc642, 0x21ba, 0x2080, 0x18f5, 0x6ee8, 0xd112, 0x1, 0x0);
        gbc.writeMem(0xc642, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x21ba);
        EXPECT(gbc.pc(), 0xc643);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc642), 0x78);
        // 78 03C6
        gbc.setState(0xb5a9, 0xa816, 0xc2e0, 0xa584, 0x98e8, 0xd5a6, 0x0, 0x1);
        gbc.writeMem(0xb5a9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa816);
        EXPECT(gbc.pc(), 0xb5aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5a9), 0x78);
        // 78 03C7
        gbc.setState(0x8e8, 0xf9d4, 0xf110, 0xfa1d, 0x1b06, 0x948, 0x1, 0x0);
        gbc.writeMem(0x8e8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xf9d4);
        EXPECT(gbc.pc(), 0x8e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 03C8
        gbc.setState(0xec1, 0x74e, 0x1a90, 0x1a13, 0xcda3, 0xb63a, 0x1, 0x0);
        gbc.writeMem(0xec1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x74e);
        EXPECT(gbc.pc(), 0xec2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 03C9
        gbc.setState(0x3af9, 0xcc05, 0x31a0, 0x5cbf, 0x663, 0xaa5f, 0x0, 0x1);
        gbc.writeMem(0x3af9, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xcc05);
        EXPECT(gbc.pc(), 0x3afa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 03CA
        gbc.setState(0x8cb3, 0xd33, 0x2720, 0x9203, 0x1563, 0xcff, 0x1, 0x1);
        gbc.writeMem(0x8cb3, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xd33);
        EXPECT(gbc.pc(), 0x8cb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cb3), 0x78);
        // 78 03CC
        gbc.setState(0x75b4, 0xa24e, 0xec00, 0x5af9, 0x3072, 0x35c5, 0x1, 0x0);
        gbc.writeMem(0x75b4, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa24e);
        EXPECT(gbc.pc(), 0x75b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 03CD
        gbc.setState(0x6a49, 0x5c5f, 0x85b0, 0x9832, 0x6c00, 0x85bc, 0x1, 0x1);
        gbc.writeMem(0x6a49, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5c5f);
        EXPECT(gbc.pc(), 0x6a4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 03CE
        gbc.setState(0x876b, 0x7b2f, 0x8b00, 0x732b, 0x464a, 0xdf53, 0x1, 0x1);
        gbc.writeMem(0x876b, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x7b2f);
        EXPECT(gbc.pc(), 0x876c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x876b), 0x78);
        // 78 03CF
        gbc.setState(0x8e48, 0x57d5, 0xd3f0, 0x4dd5, 0x55a3, 0xd366, 0x0, 0x1);
        gbc.writeMem(0x8e48, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x57d5);
        EXPECT(gbc.pc(), 0x8e49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e48), 0x78);
        // 78 03D0
        gbc.setState(0xbab4, 0x5fc7, 0x3610, 0x353a, 0xe3d5, 0xc16b, 0x1, 0x0);
        gbc.writeMem(0xbab4, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x5fc7);
        EXPECT(gbc.pc(), 0xbab5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbab4), 0x78);
        // 78 03D1
        gbc.setState(0xb668, 0x7da7, 0xea80, 0xd9b1, 0xa24a, 0x6828, 0x0, 0x1);
        gbc.writeMem(0xb668, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x7da7);
        EXPECT(gbc.pc(), 0xb669);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb668), 0x78);
        // 78 03D2
        gbc.setState(0x8c44, 0x490, 0xee0, 0x1834, 0x4488, 0xb63c, 0x0, 0x1);
        gbc.writeMem(0x8c44, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x490);
        EXPECT(gbc.pc(), 0x8c45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c44), 0x78);
        // 78 03D3
        gbc.setState(0xe64e, 0x32ad, 0x8cb0, 0xb3cb, 0xf091, 0x4f76, 0x0, 0x0);
        gbc.writeMem(0xe64e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x32ad);
        EXPECT(gbc.pc(), 0xe64f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe64e), 0x78);
        // 78 03D4
        gbc.setState(0xec8f, 0xa1f, 0x9f70, 0xdadf, 0x8cfd, 0xf0c, 0x1, 0x0);
        gbc.writeMem(0xec8f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa1f);
        EXPECT(gbc.pc(), 0xec90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec8f), 0x78);
        // 78 03D5
        gbc.setState(0xa9f8, 0x56b, 0xf780, 0x8c08, 0x4003, 0xbc7f, 0x0, 0x0);
        gbc.writeMem(0xa9f8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x56b);
        EXPECT(gbc.pc(), 0xa9f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9f8), 0x78);
        // 78 03D6
        gbc.setState(0xeaf8, 0x7a3a, 0x7900, 0x4e25, 0xd7, 0x6b8f, 0x1, 0x0);
        gbc.writeMem(0xeaf8, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x7a3a);
        EXPECT(gbc.pc(), 0xeaf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaf8), 0x78);
        // 78 03D7
        gbc.setState(0x4e36, 0xf9ef, 0xcb10, 0xf0fd, 0x6d9c, 0x6e4, 0x1, 0x0);
        gbc.writeMem(0x4e36, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf9ef);
        EXPECT(gbc.pc(), 0x4e37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 03D8
        gbc.setState(0x96b7, 0xf17a, 0xfa80, 0x5975, 0xdb14, 0x14cf, 0x1, 0x1);
        gbc.writeMem(0x96b7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf17a);
        EXPECT(gbc.pc(), 0x96b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96b7), 0x78);
        // 78 03D9
        gbc.setState(0x4e35, 0x5289, 0x1350, 0xd133, 0x5435, 0x1863, 0x1, 0x1);
        gbc.writeMem(0x4e35, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5289);
        EXPECT(gbc.pc(), 0x4e36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 03DA
        gbc.setState(0xad7, 0x8b41, 0xbd60, 0xc141, 0xa7b4, 0x1840, 0x0, 0x1);
        gbc.writeMem(0xad7, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8b41);
        EXPECT(gbc.pc(), 0xad8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 03DB
        gbc.setState(0x3277, 0x63a, 0xf100, 0xa2be, 0xd2f, 0xa962, 0x1, 0x0);
        gbc.writeMem(0x3277, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x63a);
        EXPECT(gbc.pc(), 0x3278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 03DC
        gbc.setState(0x606f, 0xab0, 0xa290, 0x986d, 0x9c57, 0x855, 0x1, 0x0);
        gbc.writeMem(0x606f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xab0);
        EXPECT(gbc.pc(), 0x6070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 03DD
        gbc.setState(0x9458, 0x1cce, 0x820, 0x3d0e, 0x3482, 0x31b7, 0x1, 0x1);
        gbc.writeMem(0x9458, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1cce);
        EXPECT(gbc.pc(), 0x9459);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9458), 0x78);
        // 78 03DE
        gbc.setState(0xb31, 0x5bbc, 0x6310, 0x9629, 0x4343, 0x3b96, 0x0, 0x0);
        gbc.writeMem(0xb31, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5bbc);
        EXPECT(gbc.pc(), 0xb32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 03DF
        gbc.setState(0x6017, 0xad68, 0xe520, 0xdf85, 0x1873, 0xa149, 0x0, 0x0);
        gbc.writeMem(0x6017, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xad68);
        EXPECT(gbc.pc(), 0x6018);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 03E0
        gbc.setState(0xb315, 0xd2f7, 0xf570, 0xfb3a, 0x2b0a, 0x4fe, 0x0, 0x1);
        gbc.writeMem(0xb315, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd2f7);
        EXPECT(gbc.pc(), 0xb316);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb315), 0x78);
        // 78 03E1
        gbc.setState(0xc0e3, 0x86b7, 0xbf70, 0xd7ce, 0xa6c6, 0xbe40, 0x1, 0x0);
        gbc.writeMem(0xc0e3, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x86b7);
        EXPECT(gbc.pc(), 0xc0e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0e3), 0x78);
        // 78 03E2
        gbc.setState(0x703e, 0xe9fc, 0x8b90, 0x23b4, 0xe262, 0x4057, 0x1, 0x0);
        gbc.writeMem(0x703e, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe9fc);
        EXPECT(gbc.pc(), 0x703f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 78 03E3
        gbc.setState(0xbbf, 0xad20, 0x9e70, 0xdbc3, 0x6deb, 0x3cbd, 0x0, 0x0);
        gbc.writeMem(0xbbf, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xad20);
        EXPECT(gbc.pc(), 0xbc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 78 03E4
        gbc.setState(0x701f, 0x74e7, 0xb660, 0xd180, 0xe8ee, 0x7ef7, 0x0, 0x0);
        gbc.writeMem(0x701f, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x74e7);
        EXPECT(gbc.pc(), 0x7020);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 78 03E5
        gbc.setState(0x7d30, 0xf0f9, 0xe3c0, 0xffc8, 0x94ca, 0xcbdf, 0x1, 0x1);
        gbc.writeMem(0x7d30, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf0f9);
        EXPECT(gbc.pc(), 0x7d31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 78 03E6
        gbc.setState(0xc866, 0x3433, 0x8430, 0xac6e, 0xd246, 0xd030, 0x1, 0x0);
        gbc.writeMem(0xc866, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3433);
        EXPECT(gbc.pc(), 0xc867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc866), 0x78);
        // 78 03E7
        gbc.setState(0x336, 0xcf6a, 0xb3b0, 0x185d, 0xf8aa, 0x671e, 0x1, 0x1);
        gbc.writeMem(0x336, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xcf6a);
        EXPECT(gbc.pc(), 0x337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
    }
}
#endif
