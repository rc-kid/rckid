    TEST(gbcemu, opcode_08) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 08 0000
        gbc.setState(0x413d, 0xd16, 0xc710, 0x4f06, 0x5ef, 0xe3b5, 0x0, 0x0);
        gbc.writeMem(0x413d, { 0x8, 0x3, 0xc2 });
        gbc.writeMem(0xc203, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xd16);
        EXPECT(gbc.pc(), 0x4140);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc203), 0x16);
        EXPECT(gbc.readMem(0xc204), 0xd);
        // 08 0006
        gbc.setState(0x25d2, 0x7694, 0xe8f0, 0x635c, 0x9b7d, 0x5fd3, 0x1, 0x1);
        gbc.writeMem(0x25d2, { 0x8, 0x32, 0xbe });
        gbc.writeMem(0xbe32, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x7694);
        EXPECT(gbc.pc(), 0x25d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe32), 0x94);
        EXPECT(gbc.readMem(0xbe33), 0x76);
        // 08 0008
        gbc.setState(0xa16a, 0x6582, 0x98f0, 0x22ea, 0x50fa, 0x5e54, 0x1, 0x0);
        gbc.writeMem(0xa16a, { 0x8, 0x83, 0xb0 });
        gbc.writeMem(0xb083, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6582);
        EXPECT(gbc.pc(), 0xa16d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa16a), 0x8);
        EXPECT(gbc.readMem(0xa16b), 0x83);
        EXPECT(gbc.readMem(0xa16c), 0xb0);
        EXPECT(gbc.readMem(0xb083), 0x82);
        EXPECT(gbc.readMem(0xb084), 0x65);
        // 08 000D
        gbc.setState(0xde6b, 0xa3fb, 0xe310, 0x5d09, 0x8901, 0xcd85, 0x1, 0x1);
        gbc.writeMem(0xdb8b, { 0x0, 0x0 });
        gbc.writeMem(0xde6b, { 0x8, 0x8b, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa3fb);
        EXPECT(gbc.pc(), 0xde6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb8b), 0xfb);
        EXPECT(gbc.readMem(0xdb8c), 0xa3);
        EXPECT(gbc.readMem(0xde6b), 0x8);
        EXPECT(gbc.readMem(0xde6c), 0x8b);
        EXPECT(gbc.readMem(0xde6d), 0xdb);
        // 08 000F
        gbc.setState(0x2ff0, 0xec56, 0x3f10, 0x57ac, 0xdb1e, 0xb79a, 0x0, 0x1);
        gbc.writeMem(0x2ff0, { 0x8, 0xaa, 0xef });
        gbc.writeMem(0xefaa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xec56);
        EXPECT(gbc.pc(), 0x2ff3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefaa), 0x56);
        EXPECT(gbc.readMem(0xefab), 0xec);
        // 08 0010
        gbc.setState(0xcf1d, 0x202b, 0xec90, 0xa7a, 0xdcd4, 0xf758, 0x0, 0x1);
        gbc.writeMem(0xcf1d, { 0x8, 0xae, 0xfa });
        gbc.writeMem(0xfaae, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x202b);
        EXPECT(gbc.pc(), 0xcf20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf1d), 0x8);
        EXPECT(gbc.readMem(0xcf1e), 0xae);
        EXPECT(gbc.readMem(0xcf1f), 0xfa);
        EXPECT(gbc.readMem(0xfaae), 0x2b);
        EXPECT(gbc.readMem(0xfaaf), 0x20);
        // 08 0018
        gbc.setState(0x2911, 0xd74a, 0x9000, 0x199e, 0x2cbd, 0x5d79, 0x1, 0x1);
        gbc.writeMem(0x2911, { 0x8, 0x2f, 0x80 });
        gbc.writeMem(0x802f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd74a);
        EXPECT(gbc.pc(), 0x2914);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x802f), 0x4a);
        EXPECT(gbc.readMem(0x8030), 0xd7);
        // 08 001A
        gbc.setState(0xc7fc, 0x789d, 0xfc70, 0xbe03, 0xca03, 0x7276, 0x1, 0x0);
        gbc.writeMem(0x9a3e, { 0x0, 0x0 });
        gbc.writeMem(0xc7fc, { 0x8, 0x3e, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x789d);
        EXPECT(gbc.pc(), 0xc7ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a3e), 0x9d);
        EXPECT(gbc.readMem(0x9a3f), 0x78);
        EXPECT(gbc.readMem(0xc7fc), 0x8);
        EXPECT(gbc.readMem(0xc7fd), 0x3e);
        EXPECT(gbc.readMem(0xc7fe), 0x9a);
        // 08 001C
        gbc.setState(0x2a6b, 0x5c8f, 0x2a0, 0xef7b, 0xd08b, 0x5fdd, 0x0, 0x0);
        gbc.writeMem(0x2a6b, { 0x8, 0xd0, 0xb4 });
        gbc.writeMem(0xb4d0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5c8f);
        EXPECT(gbc.pc(), 0x2a6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4d0), 0x8f);
        EXPECT(gbc.readMem(0xb4d1), 0x5c);
        // 08 001D
        gbc.setState(0x74c5, 0xa624, 0x1e70, 0xf4d8, 0x86a9, 0x51cc, 0x0, 0x1);
        gbc.writeMem(0x74c5, { 0x8, 0xea, 0xe7 });
        gbc.writeMem(0xe7ea, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xa624);
        EXPECT(gbc.pc(), 0x74c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7ea), 0x24);
        EXPECT(gbc.readMem(0xe7eb), 0xa6);
        // 08 0024
        gbc.setState(0x32d3, 0xcd3d, 0x5a80, 0xc0b9, 0x951a, 0xb171, 0x0, 0x1);
        gbc.writeMem(0x32d3, { 0x8, 0x55, 0xde });
        gbc.writeMem(0xde55, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xcd3d);
        EXPECT(gbc.pc(), 0x32d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde55), 0x3d);
        EXPECT(gbc.readMem(0xde56), 0xcd);
        // 08 0026
        gbc.setState(0x904, 0xe54c, 0xae70, 0xe907, 0xf75b, 0x81f4, 0x1, 0x0);
        gbc.writeMem(0x904, { 0x8, 0x88, 0xe9 });
        gbc.writeMem(0xe988, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe54c);
        EXPECT(gbc.pc(), 0x907);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe988), 0x4c);
        EXPECT(gbc.readMem(0xe989), 0xe5);
        // 08 0028
        gbc.setState(0xb288, 0xb54f, 0xca0, 0xc0f9, 0xacdd, 0x428d, 0x0, 0x0);
        gbc.writeMem(0xb288, { 0x8, 0xd3, 0xdc });
        gbc.writeMem(0xdcd3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xb54f);
        EXPECT(gbc.pc(), 0xb28b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb288), 0x8);
        EXPECT(gbc.readMem(0xb289), 0xd3);
        EXPECT(gbc.readMem(0xb28a), 0xdc);
        EXPECT(gbc.readMem(0xdcd3), 0x4f);
        EXPECT(gbc.readMem(0xdcd4), 0xb5);
        // 08 002B
        gbc.setState(0x1c0b, 0x6826, 0x9640, 0xbfe8, 0x6f28, 0xd07a, 0x1, 0x1);
        gbc.writeMem(0x1c0b, { 0x8, 0xdc, 0x8b });
        gbc.writeMem(0x8bdc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6826);
        EXPECT(gbc.pc(), 0x1c0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bdc), 0x26);
        EXPECT(gbc.readMem(0x8bdd), 0x68);
        // 08 002C
        gbc.setState(0x6b52, 0x5223, 0xa50, 0xfba0, 0x8e6a, 0xa630, 0x0, 0x1);
        gbc.writeMem(0x6b52, { 0x8, 0x62, 0xca });
        gbc.writeMem(0xca62, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x5223);
        EXPECT(gbc.pc(), 0x6b55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca62), 0x23);
        EXPECT(gbc.readMem(0xca63), 0x52);
        // 08 002E
        gbc.setState(0x5e3c, 0xf91f, 0x4d00, 0x892b, 0x5330, 0x5856, 0x1, 0x0);
        gbc.writeMem(0x5e3c, { 0x8, 0xb5, 0xfa });
        gbc.writeMem(0xfab5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xf91f);
        EXPECT(gbc.pc(), 0x5e3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfab5), 0x1f);
        EXPECT(gbc.readMem(0xfab6), 0xf9);
        // 08 0031
        gbc.setState(0x34de, 0xfbcc, 0xb100, 0x72f9, 0x7b8e, 0xf8d9, 0x1, 0x0);
        gbc.writeMem(0x34de, { 0x8, 0xed, 0x88 });
        gbc.writeMem(0x88ed, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xfbcc);
        EXPECT(gbc.pc(), 0x34e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88ed), 0xcc);
        EXPECT(gbc.readMem(0x88ee), 0xfb);
        // 08 0034
        gbc.setState(0xb7a6, 0xc916, 0x7af0, 0x5dc8, 0x818e, 0x73d0, 0x0, 0x0);
        gbc.writeMem(0xb7a6, { 0x8, 0x7b, 0xee });
        gbc.writeMem(0xee7b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xc916);
        EXPECT(gbc.pc(), 0xb7a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7a6), 0x8);
        EXPECT(gbc.readMem(0xb7a7), 0x7b);
        EXPECT(gbc.readMem(0xb7a8), 0xee);
        EXPECT(gbc.readMem(0xee7b), 0x16);
        EXPECT(gbc.readMem(0xee7c), 0xc9);
        // 08 0039
        gbc.setState(0x891, 0xaa2f, 0xf150, 0xc635, 0x7685, 0x81e2, 0x0, 0x0);
        gbc.writeMem(0x891, { 0x8, 0x24, 0xa6 });
        gbc.writeMem(0xa624, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xaa2f);
        EXPECT(gbc.pc(), 0x894);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa624), 0x2f);
        EXPECT(gbc.readMem(0xa625), 0xaa);
        // 08 003E
        gbc.setState(0x721a, 0x8364, 0x870, 0x9752, 0x3e5a, 0xbf26, 0x1, 0x1);
        gbc.writeMem(0x721a, { 0x8, 0x90, 0xf8 });
        gbc.writeMem(0xf890, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x8364);
        EXPECT(gbc.pc(), 0x721d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf890), 0x64);
        EXPECT(gbc.readMem(0xf891), 0x83);
        // 08 0041
        gbc.setState(0x4e9f, 0xc084, 0xb7b0, 0xdf00, 0x70e7, 0x1796, 0x0, 0x1);
        gbc.writeMem(0x4e9f, { 0x8, 0x40, 0xd0 });
        gbc.writeMem(0xd040, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc084);
        EXPECT(gbc.pc(), 0x4ea2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd040), 0x84);
        EXPECT(gbc.readMem(0xd041), 0xc0);
        // 08 0042
        gbc.setState(0xbff9, 0x725, 0x4240, 0x20e0, 0xdb0b, 0xa9b, 0x0, 0x1);
        gbc.writeMem(0x990c, { 0x0, 0x0 });
        gbc.writeMem(0xbff9, { 0x8, 0xc, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x725);
        EXPECT(gbc.pc(), 0xbffc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x990c), 0x25);
        EXPECT(gbc.readMem(0x990d), 0x7);
        EXPECT(gbc.readMem(0xbff9), 0x8);
        EXPECT(gbc.readMem(0xbffa), 0xc);
        EXPECT(gbc.readMem(0xbffb), 0x99);
        // 08 0044
        gbc.setState(0xb5ce, 0xd6ea, 0x1a10, 0xab57, 0x23e3, 0xef06, 0x0, 0x1);
        gbc.writeMem(0xb5ce, { 0x8, 0xc7, 0xe6 });
        gbc.writeMem(0xe6c7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd6ea);
        EXPECT(gbc.pc(), 0xb5d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5ce), 0x8);
        EXPECT(gbc.readMem(0xb5cf), 0xc7);
        EXPECT(gbc.readMem(0xb5d0), 0xe6);
        EXPECT(gbc.readMem(0xe6c7), 0xea);
        EXPECT(gbc.readMem(0xe6c8), 0xd6);
        // 08 0047
        gbc.setState(0x28e4, 0x8764, 0xdee0, 0x9a2e, 0x7ce4, 0xfa26, 0x0, 0x1);
        gbc.writeMem(0x28e4, { 0x8, 0xa8, 0xa8 });
        gbc.writeMem(0xa8a8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x8764);
        EXPECT(gbc.pc(), 0x28e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8a8), 0x64);
        EXPECT(gbc.readMem(0xa8a9), 0x87);
        // 08 0048
        gbc.setState(0x1d2e, 0xefd5, 0x7130, 0x57a1, 0x694, 0x84a7, 0x1, 0x1);
        gbc.writeMem(0x1d2e, { 0x8, 0xce, 0xc5 });
        gbc.writeMem(0xc5ce, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xefd5);
        EXPECT(gbc.pc(), 0x1d31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5ce), 0xd5);
        EXPECT(gbc.readMem(0xc5cf), 0xef);
        // 08 0049
        gbc.setState(0x68d7, 0xa43f, 0x2db0, 0xe081, 0x5f70, 0xa574, 0x1, 0x1);
        gbc.writeMem(0x68d7, { 0x8, 0x6c, 0xbe });
        gbc.writeMem(0xbe6c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa43f);
        EXPECT(gbc.pc(), 0x68da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe6c), 0x3f);
        EXPECT(gbc.readMem(0xbe6d), 0xa4);
        // 08 004D
        gbc.setState(0xb107, 0x95de, 0x8400, 0x2ead, 0x16b3, 0xab63, 0x0, 0x0);
        gbc.writeMem(0xb107, { 0x8, 0xbe, 0xfc });
        gbc.writeMem(0xfcbe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x95de);
        EXPECT(gbc.pc(), 0xb10a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb107), 0x8);
        EXPECT(gbc.readMem(0xb108), 0xbe);
        EXPECT(gbc.readMem(0xb109), 0xfc);
        EXPECT(gbc.readMem(0xfcbe), 0xde);
        EXPECT(gbc.readMem(0xfcbf), 0x95);
        // 08 0054
        gbc.setState(0xe3b3, 0x2c47, 0x2800, 0xb146, 0x5363, 0x4f89, 0x1, 0x1);
        gbc.writeMem(0x86b2, { 0x0, 0x0 });
        gbc.writeMem(0xe3b3, { 0x8, 0xb2, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2c47);
        EXPECT(gbc.pc(), 0xe3b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86b2), 0x47);
        EXPECT(gbc.readMem(0x86b3), 0x2c);
        EXPECT(gbc.readMem(0xe3b3), 0x8);
        EXPECT(gbc.readMem(0xe3b4), 0xb2);
        EXPECT(gbc.readMem(0xe3b5), 0x86);
        // 08 0055
        gbc.setState(0xabf0, 0xf1ef, 0x7fc0, 0xed0d, 0x40cb, 0x1436, 0x0, 0x0);
        gbc.writeMem(0xabf0, { 0x8, 0x98, 0xf0 });
        gbc.writeMem(0xf098, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xf1ef);
        EXPECT(gbc.pc(), 0xabf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabf0), 0x8);
        EXPECT(gbc.readMem(0xabf1), 0x98);
        EXPECT(gbc.readMem(0xabf2), 0xf0);
        EXPECT(gbc.readMem(0xf098), 0xef);
        EXPECT(gbc.readMem(0xf099), 0xf1);
        // 08 005A
        gbc.setState(0x74ec, 0xb02d, 0xda50, 0xe6f0, 0xa1ca, 0x2eb0, 0x0, 0x0);
        gbc.writeMem(0x74ec, { 0x8, 0xe5, 0x9f });
        gbc.writeMem(0x9fe5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb02d);
        EXPECT(gbc.pc(), 0x74ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fe5), 0x2d);
        EXPECT(gbc.readMem(0x9fe6), 0xb0);
        // 08 005B
        gbc.setState(0xaf71, 0x47cc, 0x52c0, 0x2718, 0x702e, 0x3bb8, 0x1, 0x0);
        gbc.writeMem(0xaf71, { 0x8, 0x73, 0xff });
        gbc.writeMem(0xff73, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x47cc);
        EXPECT(gbc.pc(), 0xaf74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf71), 0x8);
        EXPECT(gbc.readMem(0xaf72), 0x73);
        EXPECT(gbc.readMem(0xaf73), 0xff);
        EXPECT(gbc.readMem(0xff73), 0xcc);
        EXPECT(gbc.readMem(0xff74), 0x47);
        // 08 005C
        gbc.setState(0x9ec7, 0xfa40, 0x84e0, 0x5be4, 0xc4bb, 0xb6bd, 0x0, 0x0);
        gbc.writeMem(0x9ec7, { 0x8, 0x55, 0xc5 });
        gbc.writeMem(0xc555, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xfa40);
        EXPECT(gbc.pc(), 0x9eca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ec7), 0x8);
        EXPECT(gbc.readMem(0x9ec8), 0x55);
        EXPECT(gbc.readMem(0x9ec9), 0xc5);
        EXPECT(gbc.readMem(0xc555), 0x40);
        EXPECT(gbc.readMem(0xc556), 0xfa);
        // 08 0060
        gbc.setState(0x315d, 0x8f7f, 0xbd00, 0x7d5d, 0x180d, 0x3fe0, 0x1, 0x1);
        gbc.writeMem(0x315d, { 0x8, 0x94, 0xc3 });
        gbc.writeMem(0xc394, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8f7f);
        EXPECT(gbc.pc(), 0x3160);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc394), 0x7f);
        EXPECT(gbc.readMem(0xc395), 0x8f);
        // 08 0061
        gbc.setState(0x9bb, 0x61fd, 0x6940, 0x2019, 0xc409, 0xa42, 0x1, 0x0);
        gbc.writeMem(0x9bb, { 0x8, 0x90, 0x90 });
        gbc.writeMem(0x9090, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x61fd);
        EXPECT(gbc.pc(), 0x9be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9090), 0xfd);
        EXPECT(gbc.readMem(0x9091), 0x61);
        // 08 0065
        gbc.setState(0xdb69, 0x5823, 0x5200, 0x16a, 0x3be, 0x6765, 0x1, 0x0);
        gbc.writeMem(0xcc7b, { 0x0, 0x0 });
        gbc.writeMem(0xdb69, { 0x8, 0x7b, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x5823);
        EXPECT(gbc.pc(), 0xdb6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc7b), 0x23);
        EXPECT(gbc.readMem(0xcc7c), 0x58);
        EXPECT(gbc.readMem(0xdb69), 0x8);
        EXPECT(gbc.readMem(0xdb6a), 0x7b);
        EXPECT(gbc.readMem(0xdb6b), 0xcc);
        // 08 0066
        gbc.setState(0x3829, 0x7c8a, 0x68e0, 0x1604, 0x7698, 0x719b, 0x0, 0x0);
        gbc.writeMem(0x3829, { 0x8, 0x59, 0xf0 });
        gbc.writeMem(0xf059, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x7c8a);
        EXPECT(gbc.pc(), 0x382c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf059), 0x8a);
        EXPECT(gbc.readMem(0xf05a), 0x7c);
        // 08 0067
        gbc.setState(0xee1d, 0x30f9, 0xcc80, 0xca32, 0xeb7, 0xadbe, 0x1, 0x1);
        gbc.writeMem(0xc6a9, { 0x0, 0x0 });
        gbc.writeMem(0xee1d, { 0x8, 0xa9, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x30f9);
        EXPECT(gbc.pc(), 0xee20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6a9), 0xf9);
        EXPECT(gbc.readMem(0xc6aa), 0x30);
        EXPECT(gbc.readMem(0xee1d), 0x8);
        EXPECT(gbc.readMem(0xee1e), 0xa9);
        EXPECT(gbc.readMem(0xee1f), 0xc6);
        // 08 0068
        gbc.setState(0x2eec, 0xb79a, 0x41a0, 0x2a6e, 0xe6d6, 0xfdac, 0x0, 0x0);
        gbc.writeMem(0x2eec, { 0x8, 0x85, 0xf6 });
        gbc.writeMem(0xf685, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb79a);
        EXPECT(gbc.pc(), 0x2eef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf685), 0x9a);
        EXPECT(gbc.readMem(0xf686), 0xb7);
        // 08 0069
        gbc.setState(0x122f, 0xbad5, 0xad60, 0x9e94, 0xe124, 0xe47c, 0x1, 0x1);
        gbc.writeMem(0x122f, { 0x8, 0xe, 0x83 });
        gbc.writeMem(0x830e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xbad5);
        EXPECT(gbc.pc(), 0x1232);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x830e), 0xd5);
        EXPECT(gbc.readMem(0x830f), 0xba);
        // 08 006A
        gbc.setState(0x41c4, 0x90f9, 0xe1a0, 0x8670, 0xe884, 0x76b3, 0x0, 0x1);
        gbc.writeMem(0x41c4, { 0x8, 0xfd, 0x86 });
        gbc.writeMem(0x86fd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x90f9);
        EXPECT(gbc.pc(), 0x41c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86fd), 0xf9);
        EXPECT(gbc.readMem(0x86fe), 0x90);
        // 08 006B
        gbc.setState(0x947, 0xd866, 0xf310, 0x7206, 0xed0, 0xb3f9, 0x1, 0x0);
        gbc.writeMem(0x947, { 0x8, 0x1f, 0xd9 });
        gbc.writeMem(0xd91f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd866);
        EXPECT(gbc.pc(), 0x94a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd91f), 0x66);
        EXPECT(gbc.readMem(0xd920), 0xd8);
        // 08 0071
        gbc.setState(0xa0cc, 0xeb12, 0x4b60, 0x91b7, 0xde7e, 0x30f4, 0x0, 0x0);
        gbc.writeMem(0xa0cc, { 0x8, 0x3c, 0xfe });
        gbc.writeMem(0xfe3c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xeb12);
        EXPECT(gbc.pc(), 0xa0cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0cc), 0x8);
        EXPECT(gbc.readMem(0xa0cd), 0x3c);
        EXPECT(gbc.readMem(0xa0ce), 0xfe);
        EXPECT(gbc.readMem(0xfe3c), 0x12);
        EXPECT(gbc.readMem(0xfe3d), 0xeb);
        // 08 0074
        gbc.setState(0xd978, 0x2db2, 0x68a0, 0xc9e7, 0xdaf9, 0xf2bc, 0x0, 0x0);
        gbc.writeMem(0xaa02, { 0x0, 0x0 });
        gbc.writeMem(0xd978, { 0x8, 0x2, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x2db2);
        EXPECT(gbc.pc(), 0xd97b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa02), 0xb2);
        EXPECT(gbc.readMem(0xaa03), 0x2d);
        EXPECT(gbc.readMem(0xd978), 0x8);
        EXPECT(gbc.readMem(0xd979), 0x2);
        EXPECT(gbc.readMem(0xd97a), 0xaa);
        // 08 0075
        gbc.setState(0x13d9, 0x8dc5, 0x4a40, 0xd152, 0xc21a, 0x88ba, 0x0, 0x1);
        gbc.writeMem(0x13d9, { 0x8, 0xd5, 0xfe });
        gbc.writeMem(0xfed5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8dc5);
        EXPECT(gbc.pc(), 0x13dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfed5), 0xc5);
        EXPECT(gbc.readMem(0xfed6), 0x8d);
        // 08 0078
        gbc.setState(0xb055, 0xa065, 0xc810, 0x4465, 0x99f9, 0x51fb, 0x1, 0x1);
        gbc.writeMem(0xb055, { 0x8, 0xdc, 0xdb });
        gbc.writeMem(0xdbdc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xa065);
        EXPECT(gbc.pc(), 0xb058);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb055), 0x8);
        EXPECT(gbc.readMem(0xb056), 0xdc);
        EXPECT(gbc.readMem(0xb057), 0xdb);
        EXPECT(gbc.readMem(0xdbdc), 0x65);
        EXPECT(gbc.readMem(0xdbdd), 0xa0);
        // 08 007A
        gbc.setState(0xd6f4, 0xc040, 0x160, 0x6a50, 0xd75d, 0x4ef8, 0x1, 0x0);
        gbc.writeMem(0xd6f4, { 0x8, 0x6a, 0xeb });
        gbc.writeMem(0xeb6a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xc040);
        EXPECT(gbc.pc(), 0xd6f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6f4), 0x8);
        EXPECT(gbc.readMem(0xd6f5), 0x6a);
        EXPECT(gbc.readMem(0xd6f6), 0xeb);
        EXPECT(gbc.readMem(0xeb6a), 0x40);
        EXPECT(gbc.readMem(0xeb6b), 0xc0);
        // 08 007E
        gbc.setState(0xbeae, 0xf9f7, 0xc740, 0x76e3, 0x5299, 0x2a45, 0x0, 0x1);
        gbc.writeMem(0x8476, { 0x0, 0x0 });
        gbc.writeMem(0xbeae, { 0x8, 0x76, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf9f7);
        EXPECT(gbc.pc(), 0xbeb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8476), 0xf7);
        EXPECT(gbc.readMem(0x8477), 0xf9);
        EXPECT(gbc.readMem(0xbeae), 0x8);
        EXPECT(gbc.readMem(0xbeaf), 0x76);
        EXPECT(gbc.readMem(0xbeb0), 0x84);
        // 08 007F
        gbc.setState(0x2731, 0xe1f9, 0x61b0, 0x5fef, 0xac29, 0x732b, 0x0, 0x1);
        gbc.writeMem(0x2731, { 0x8, 0x70, 0xe9 });
        gbc.writeMem(0xe970, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe1f9);
        EXPECT(gbc.pc(), 0x2734);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe970), 0xf9);
        EXPECT(gbc.readMem(0xe971), 0xe1);
        // 08 0080
        gbc.setState(0x50f4, 0x5bda, 0x17c0, 0x9c11, 0x82fe, 0x55e3, 0x0, 0x1);
        gbc.writeMem(0x50f4, { 0x8, 0x84, 0xab });
        gbc.writeMem(0xab84, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x5bda);
        EXPECT(gbc.pc(), 0x50f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab84), 0xda);
        EXPECT(gbc.readMem(0xab85), 0x5b);
        // 08 0082
        gbc.setState(0x61aa, 0x493f, 0x71a0, 0x5da, 0x1919, 0xb731, 0x1, 0x0);
        gbc.writeMem(0x61aa, { 0x8, 0x86, 0x9e });
        gbc.writeMem(0x9e86, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x493f);
        EXPECT(gbc.pc(), 0x61ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e86), 0x3f);
        EXPECT(gbc.readMem(0x9e87), 0x49);
        // 08 0085
        gbc.setState(0x640d, 0x85d4, 0xdd40, 0x5ba6, 0x8468, 0x34ab, 0x0, 0x0);
        gbc.writeMem(0x640d, { 0x8, 0x94, 0x86 });
        gbc.writeMem(0x8694, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x85d4);
        EXPECT(gbc.pc(), 0x6410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8694), 0xd4);
        EXPECT(gbc.readMem(0x8695), 0x85);
        // 08 0086
        gbc.setState(0xef95, 0x960f, 0x1830, 0x7509, 0x20c8, 0x184f, 0x1, 0x1);
        gbc.writeMem(0x929b, { 0x0, 0x0 });
        gbc.writeMem(0xef95, { 0x8, 0x9b, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x960f);
        EXPECT(gbc.pc(), 0xef98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x929b), 0xf);
        EXPECT(gbc.readMem(0x929c), 0x96);
        EXPECT(gbc.readMem(0xef95), 0x8);
        EXPECT(gbc.readMem(0xef96), 0x9b);
        EXPECT(gbc.readMem(0xef97), 0x92);
        // 08 0088
        gbc.setState(0x7584, 0xb100, 0x2c30, 0x8fe0, 0x6080, 0x8354, 0x1, 0x1);
        gbc.writeMem(0x7584, { 0x8, 0x38, 0x99 });
        gbc.writeMem(0x9938, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb100);
        EXPECT(gbc.pc(), 0x7587);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9938), 0x0);
        EXPECT(gbc.readMem(0x9939), 0xb1);
        // 08 008C
        gbc.setState(0x44df, 0x6650, 0xbbc0, 0xd11e, 0x5009, 0x267d, 0x0, 0x1);
        gbc.writeMem(0x44df, { 0x8, 0x78, 0xe4 });
        gbc.writeMem(0xe478, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x6650);
        EXPECT(gbc.pc(), 0x44e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe478), 0x50);
        EXPECT(gbc.readMem(0xe479), 0x66);
        // 08 008E
        gbc.setState(0xa99d, 0x4e56, 0xeee0, 0x7b1a, 0x62b2, 0x7b7c, 0x0, 0x1);
        gbc.writeMem(0xa99d, { 0x8, 0x12, 0xf7 });
        gbc.writeMem(0xf712, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4e56);
        EXPECT(gbc.pc(), 0xa9a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa99d), 0x8);
        EXPECT(gbc.readMem(0xa99e), 0x12);
        EXPECT(gbc.readMem(0xa99f), 0xf7);
        EXPECT(gbc.readMem(0xf712), 0x56);
        EXPECT(gbc.readMem(0xf713), 0x4e);
        // 08 0091
        gbc.setState(0x9a17, 0x9f87, 0x1f30, 0xe302, 0xe882, 0x3b2f, 0x1, 0x1);
        gbc.writeMem(0x9a17, { 0x8, 0x4d, 0xed });
        gbc.writeMem(0xed4d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9f87);
        EXPECT(gbc.pc(), 0x9a1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a17), 0x8);
        EXPECT(gbc.readMem(0x9a18), 0x4d);
        EXPECT(gbc.readMem(0x9a19), 0xed);
        EXPECT(gbc.readMem(0xed4d), 0x87);
        EXPECT(gbc.readMem(0xed4e), 0x9f);
        // 08 0092
        gbc.setState(0x8a12, 0x2b33, 0xf160, 0x2575, 0xcc53, 0x4968, 0x0, 0x1);
        gbc.writeMem(0x8a12, { 0x8, 0x57, 0x96 });
        gbc.writeMem(0x9657, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2b33);
        EXPECT(gbc.pc(), 0x8a15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a12), 0x8);
        EXPECT(gbc.readMem(0x8a13), 0x57);
        EXPECT(gbc.readMem(0x8a14), 0x96);
        EXPECT(gbc.readMem(0x9657), 0x33);
        EXPECT(gbc.readMem(0x9658), 0x2b);
        // 08 0093
        gbc.setState(0xc1bc, 0xfd8f, 0x7820, 0x78a4, 0xab5d, 0x4770, 0x0, 0x0);
        gbc.writeMem(0x955f, { 0x0, 0x0 });
        gbc.writeMem(0xc1bc, { 0x8, 0x5f, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xfd8f);
        EXPECT(gbc.pc(), 0xc1bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x955f), 0x8f);
        EXPECT(gbc.readMem(0x9560), 0xfd);
        EXPECT(gbc.readMem(0xc1bc), 0x8);
        EXPECT(gbc.readMem(0xc1bd), 0x5f);
        EXPECT(gbc.readMem(0xc1be), 0x95);
        // 08 0098
        gbc.setState(0x34af, 0x4b12, 0x13f0, 0x1194, 0x322c, 0x362c, 0x1, 0x0);
        gbc.writeMem(0x34af, { 0x8, 0xcf, 0x88 });
        gbc.writeMem(0x88cf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4b12);
        EXPECT(gbc.pc(), 0x34b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88cf), 0x12);
        EXPECT(gbc.readMem(0x88d0), 0x4b);
        // 08 0099
        gbc.setState(0x6de9, 0x48e, 0x3240, 0xc710, 0x89aa, 0x2e7e, 0x1, 0x0);
        gbc.writeMem(0x6de9, { 0x8, 0x4b, 0xf6 });
        gbc.writeMem(0xf64b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x48e);
        EXPECT(gbc.pc(), 0x6dec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf64b), 0x8e);
        EXPECT(gbc.readMem(0xf64c), 0x4);
        // 08 009A
        gbc.setState(0xe3aa, 0xc01f, 0xf520, 0x6d91, 0xad27, 0x71c5, 0x1, 0x0);
        gbc.writeMem(0x8d32, { 0x0, 0x0 });
        gbc.writeMem(0xe3aa, { 0x8, 0x32, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xc01f);
        EXPECT(gbc.pc(), 0xe3ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d32), 0x1f);
        EXPECT(gbc.readMem(0x8d33), 0xc0);
        EXPECT(gbc.readMem(0xe3aa), 0x8);
        EXPECT(gbc.readMem(0xe3ab), 0x32);
        EXPECT(gbc.readMem(0xe3ac), 0x8d);
        // 08 009B
        gbc.setState(0x3cf, 0x20ed, 0xd9d0, 0x9be7, 0x2922, 0x19e3, 0x1, 0x0);
        gbc.writeMem(0x3cf, { 0x8, 0x1c, 0xf9 });
        gbc.writeMem(0xf91c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x20ed);
        EXPECT(gbc.pc(), 0x3d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf91c), 0xed);
        EXPECT(gbc.readMem(0xf91d), 0x20);
        // 08 00A3
        gbc.setState(0x5725, 0x281e, 0xe0f0, 0x2430, 0x89a1, 0x859, 0x0, 0x1);
        gbc.writeMem(0x5725, { 0x8, 0x54, 0xea });
        gbc.writeMem(0xea54, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x281e);
        EXPECT(gbc.pc(), 0x5728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea54), 0x1e);
        EXPECT(gbc.readMem(0xea55), 0x28);
        // 08 00A5
        gbc.setState(0x9349, 0xd79b, 0xab30, 0xed68, 0xe64, 0xaa55, 0x1, 0x0);
        gbc.writeMem(0x9068, { 0x0, 0x0 });
        gbc.writeMem(0x9349, { 0x8, 0x68, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd79b);
        EXPECT(gbc.pc(), 0x934c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9068), 0x9b);
        EXPECT(gbc.readMem(0x9069), 0xd7);
        EXPECT(gbc.readMem(0x9349), 0x8);
        EXPECT(gbc.readMem(0x934a), 0x68);
        EXPECT(gbc.readMem(0x934b), 0x90);
        // 08 00A6
        gbc.setState(0x1931, 0xf13b, 0x9a00, 0x22a1, 0x5852, 0x353c, 0x1, 0x1);
        gbc.writeMem(0x1931, { 0x8, 0x38, 0xfa });
        gbc.writeMem(0xfa38, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf13b);
        EXPECT(gbc.pc(), 0x1934);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfa38), 0x3b);
        EXPECT(gbc.readMem(0xfa39), 0xf1);
        // 08 00A7
        gbc.setState(0x5170, 0x8605, 0x2090, 0xecf7, 0x3b6b, 0xae84, 0x1, 0x1);
        gbc.writeMem(0x5170, { 0x8, 0xdf, 0xf2 });
        gbc.writeMem(0xf2df, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x8605);
        EXPECT(gbc.pc(), 0x5173);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf2df), 0x5);
        EXPECT(gbc.readMem(0xf2e0), 0x86);
        // 08 00A8
        gbc.setState(0xa702, 0x28f2, 0x7500, 0xe147, 0x7241, 0xf8cf, 0x1, 0x1);
        gbc.writeMem(0xa702, { 0x8, 0x6c, 0xe7 });
        gbc.writeMem(0xe76c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x28f2);
        EXPECT(gbc.pc(), 0xa705);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa702), 0x8);
        EXPECT(gbc.readMem(0xa703), 0x6c);
        EXPECT(gbc.readMem(0xa704), 0xe7);
        EXPECT(gbc.readMem(0xe76c), 0xf2);
        EXPECT(gbc.readMem(0xe76d), 0x28);
        // 08 00AB
        gbc.setState(0xadb3, 0x6797, 0x1db0, 0x598b, 0xf9c5, 0xaa86, 0x1, 0x1);
        gbc.writeMem(0xadb3, { 0x8, 0x2b, 0xdb });
        gbc.writeMem(0xdb2b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6797);
        EXPECT(gbc.pc(), 0xadb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadb3), 0x8);
        EXPECT(gbc.readMem(0xadb4), 0x2b);
        EXPECT(gbc.readMem(0xadb5), 0xdb);
        EXPECT(gbc.readMem(0xdb2b), 0x97);
        EXPECT(gbc.readMem(0xdb2c), 0x67);
        // 08 00AC
        gbc.setState(0x2093, 0xe925, 0x6ec0, 0x2045, 0xfcd2, 0x466, 0x0, 0x0);
        gbc.writeMem(0x2093, { 0x8, 0x42, 0xc8 });
        gbc.writeMem(0xc842, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xe925);
        EXPECT(gbc.pc(), 0x2096);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc842), 0x25);
        EXPECT(gbc.readMem(0xc843), 0xe9);
        // 08 00AF
        gbc.setState(0x5620, 0xe37e, 0xa830, 0x30ff, 0xa3ec, 0x2b72, 0x0, 0x1);
        gbc.writeMem(0x5620, { 0x8, 0xe3, 0xe6 });
        gbc.writeMem(0xe6e3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xe37e);
        EXPECT(gbc.pc(), 0x5623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6e3), 0x7e);
        EXPECT(gbc.readMem(0xe6e4), 0xe3);
        // 08 00B0
        gbc.setState(0xa0f8, 0xb1e5, 0x5460, 0x36c9, 0xbff3, 0xe91e, 0x1, 0x1);
        gbc.writeMem(0xa0f8, { 0x8, 0x8a, 0xe0 });
        gbc.writeMem(0xe08a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb1e5);
        EXPECT(gbc.pc(), 0xa0fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0f8), 0x8);
        EXPECT(gbc.readMem(0xa0f9), 0x8a);
        EXPECT(gbc.readMem(0xa0fa), 0xe0);
        EXPECT(gbc.readMem(0xe08a), 0xe5);
        EXPECT(gbc.readMem(0xe08b), 0xb1);
        // 08 00B1
        gbc.setState(0xd08b, 0x97a6, 0x980, 0xc032, 0x847f, 0x878f, 0x1, 0x0);
        gbc.writeMem(0xb09c, { 0x0, 0x0 });
        gbc.writeMem(0xd08b, { 0x8, 0x9c, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x97a6);
        EXPECT(gbc.pc(), 0xd08e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb09c), 0xa6);
        EXPECT(gbc.readMem(0xb09d), 0x97);
        EXPECT(gbc.readMem(0xd08b), 0x8);
        EXPECT(gbc.readMem(0xd08c), 0x9c);
        EXPECT(gbc.readMem(0xd08d), 0xb0);
        // 08 00B2
        gbc.setState(0x9665, 0xd825, 0x41a0, 0x3f8f, 0x1177, 0x66ba, 0x0, 0x0);
        gbc.writeMem(0x9665, { 0x8, 0x5b, 0xf6 });
        gbc.writeMem(0xf65b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd825);
        EXPECT(gbc.pc(), 0x9668);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9665), 0x8);
        EXPECT(gbc.readMem(0x9666), 0x5b);
        EXPECT(gbc.readMem(0x9667), 0xf6);
        EXPECT(gbc.readMem(0xf65b), 0x25);
        EXPECT(gbc.readMem(0xf65c), 0xd8);
        // 08 00B5
        gbc.setState(0x5ba2, 0x6144, 0x33f0, 0xb665, 0xa295, 0xe248, 0x1, 0x0);
        gbc.writeMem(0x5ba2, { 0x8, 0x6, 0xb4 });
        gbc.writeMem(0xb406, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6144);
        EXPECT(gbc.pc(), 0x5ba5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb406), 0x44);
        EXPECT(gbc.readMem(0xb407), 0x61);
        // 08 00B6
        gbc.setState(0xca94, 0x9301, 0xe400, 0x3465, 0xed11, 0x5747, 0x1, 0x0);
        gbc.writeMem(0xa9bb, { 0x0, 0x0 });
        gbc.writeMem(0xca94, { 0x8, 0xbb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9301);
        EXPECT(gbc.pc(), 0xca97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9bb), 0x1);
        EXPECT(gbc.readMem(0xa9bc), 0x93);
        EXPECT(gbc.readMem(0xca94), 0x8);
        EXPECT(gbc.readMem(0xca95), 0xbb);
        EXPECT(gbc.readMem(0xca96), 0xa9);
        // 08 00B9
        gbc.setState(0x163, 0xa461, 0xdb70, 0xf2c5, 0x78c4, 0x7905, 0x0, 0x0);
        gbc.writeMem(0x163, { 0x8, 0x96, 0x8a });
        gbc.writeMem(0x8a96, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa461);
        EXPECT(gbc.pc(), 0x166);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a96), 0x61);
        EXPECT(gbc.readMem(0x8a97), 0xa4);
        // 08 00BA
        gbc.setState(0x7a0f, 0x8620, 0x2040, 0x55cf, 0xc336, 0x481, 0x0, 0x0);
        gbc.writeMem(0x7a0f, { 0x8, 0xc6, 0x9c });
        gbc.writeMem(0x9cc6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x8620);
        EXPECT(gbc.pc(), 0x7a12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cc6), 0x20);
        EXPECT(gbc.readMem(0x9cc7), 0x86);
        // 08 00BF
        gbc.setState(0x727e, 0x7c3b, 0x5650, 0x495f, 0x7aeb, 0x1d41, 0x1, 0x1);
        gbc.writeMem(0x727e, { 0x8, 0x84, 0xa9 });
        gbc.writeMem(0xa984, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7c3b);
        EXPECT(gbc.pc(), 0x7281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa984), 0x3b);
        EXPECT(gbc.readMem(0xa985), 0x7c);
        // 08 00C0
        gbc.setState(0x730b, 0xca89, 0x71c0, 0x19a7, 0x7840, 0x1f7b, 0x0, 0x1);
        gbc.writeMem(0x730b, { 0x8, 0x62, 0x8d });
        gbc.writeMem(0x8d62, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xca89);
        EXPECT(gbc.pc(), 0x730e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d62), 0x89);
        EXPECT(gbc.readMem(0x8d63), 0xca);
        // 08 00C1
        gbc.setState(0xae8, 0x955f, 0x7180, 0xf0e8, 0xb382, 0xb99f, 0x1, 0x0);
        gbc.writeMem(0xae8, { 0x8, 0xfc, 0x85 });
        gbc.writeMem(0x85fc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x955f);
        EXPECT(gbc.pc(), 0xaeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85fc), 0x5f);
        EXPECT(gbc.readMem(0x85fd), 0x95);
        // 08 00C3
        gbc.setState(0x715c, 0xd516, 0xf200, 0xc674, 0x6f1b, 0x6d01, 0x1, 0x1);
        gbc.writeMem(0x715c, { 0x8, 0x7e, 0xad });
        gbc.writeMem(0xad7e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd516);
        EXPECT(gbc.pc(), 0x715f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad7e), 0x16);
        EXPECT(gbc.readMem(0xad7f), 0xd5);
        // 08 00C4
        gbc.setState(0xa161, 0x12ff, 0x1e20, 0x5c7, 0x48ad, 0x91f9, 0x1, 0x1);
        gbc.writeMem(0x87f3, { 0x0, 0x0 });
        gbc.writeMem(0xa161, { 0x8, 0xf3, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x12ff);
        EXPECT(gbc.pc(), 0xa164);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87f3), 0xff);
        EXPECT(gbc.readMem(0x87f4), 0x12);
        EXPECT(gbc.readMem(0xa161), 0x8);
        EXPECT(gbc.readMem(0xa162), 0xf3);
        EXPECT(gbc.readMem(0xa163), 0x87);
        // 08 00C5
        gbc.setState(0x2238, 0xa985, 0xa000, 0x7f41, 0x5950, 0x9aba, 0x1, 0x1);
        gbc.writeMem(0x2238, { 0x8, 0x90, 0x83 });
        gbc.writeMem(0x8390, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa985);
        EXPECT(gbc.pc(), 0x223b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8390), 0x85);
        EXPECT(gbc.readMem(0x8391), 0xa9);
        // 08 00C6
        gbc.setState(0x8b75, 0xf2d3, 0x3840, 0xf7f6, 0x28a5, 0x5ca2, 0x0, 0x1);
        gbc.writeMem(0x8b75, { 0x8, 0xd2, 0xd9 });
        gbc.writeMem(0xd9d2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf2d3);
        EXPECT(gbc.pc(), 0x8b78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b75), 0x8);
        EXPECT(gbc.readMem(0x8b76), 0xd2);
        EXPECT(gbc.readMem(0x8b77), 0xd9);
        EXPECT(gbc.readMem(0xd9d2), 0xd3);
        EXPECT(gbc.readMem(0xd9d3), 0xf2);
        // 08 00C7
        gbc.setState(0xa8e4, 0x72c1, 0x4750, 0x3f48, 0xf200, 0x6f66, 0x0, 0x1);
        gbc.writeMem(0x8380, { 0x0, 0x0 });
        gbc.writeMem(0xa8e4, { 0x8, 0x80, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x72c1);
        EXPECT(gbc.pc(), 0xa8e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8380), 0xc1);
        EXPECT(gbc.readMem(0x8381), 0x72);
        EXPECT(gbc.readMem(0xa8e4), 0x8);
        EXPECT(gbc.readMem(0xa8e5), 0x80);
        EXPECT(gbc.readMem(0xa8e6), 0x83);
        // 08 00CA
        gbc.setState(0x628d, 0x49e3, 0x5110, 0x1f3f, 0xe54a, 0x7018, 0x0, 0x1);
        gbc.writeMem(0x628d, { 0x8, 0x49, 0xad });
        gbc.writeMem(0xad49, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x49e3);
        EXPECT(gbc.pc(), 0x6290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad49), 0xe3);
        EXPECT(gbc.readMem(0xad4a), 0x49);
        // 08 00CC
        gbc.setState(0x927, 0xace7, 0x7f00, 0x77ef, 0xa834, 0x92fd, 0x0, 0x0);
        gbc.writeMem(0x927, { 0x8, 0x83, 0xce });
        gbc.writeMem(0xce83, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xace7);
        EXPECT(gbc.pc(), 0x92a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce83), 0xe7);
        EXPECT(gbc.readMem(0xce84), 0xac);
        // 08 00CD
        gbc.setState(0x40e1, 0x8b93, 0x8280, 0x7464, 0x87ee, 0x3d2, 0x1, 0x0);
        gbc.writeMem(0x40e1, { 0x8, 0xd9, 0x86 });
        gbc.writeMem(0x86d9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8b93);
        EXPECT(gbc.pc(), 0x40e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86d9), 0x93);
        EXPECT(gbc.readMem(0x86da), 0x8b);
        // 08 00CE
        gbc.setState(0x221, 0x65c8, 0x68b0, 0xf7fd, 0xe42a, 0x8443, 0x0, 0x1);
        gbc.writeMem(0x221, { 0x8, 0x4d, 0x95 });
        gbc.writeMem(0x954d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x65c8);
        EXPECT(gbc.pc(), 0x224);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x954d), 0xc8);
        EXPECT(gbc.readMem(0x954e), 0x65);
        // 08 00CF
        gbc.setState(0x2fca, 0x3501, 0x62c0, 0x4b38, 0xd934, 0xd675, 0x1, 0x1);
        gbc.writeMem(0x2fca, { 0x8, 0xdc, 0xc0 });
        gbc.writeMem(0xc0dc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x3501);
        EXPECT(gbc.pc(), 0x2fcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0dc), 0x1);
        EXPECT(gbc.readMem(0xc0dd), 0x35);
        // 08 00D0
        gbc.setState(0x38ac, 0xce6b, 0xfc10, 0x769a, 0xe111, 0x7b31, 0x1, 0x0);
        gbc.writeMem(0x38ac, { 0x8, 0xaf, 0xdf });
        gbc.writeMem(0xdfaf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xce6b);
        EXPECT(gbc.pc(), 0x38af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfaf), 0x6b);
        EXPECT(gbc.readMem(0xdfb0), 0xce);
        // 08 00D5
        gbc.setState(0x3eb7, 0x61b4, 0x7340, 0xf6c, 0xc99d, 0x10b0, 0x1, 0x0);
        gbc.writeMem(0x3eb7, { 0x8, 0xf3, 0xab });
        gbc.writeMem(0xabf3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x61b4);
        EXPECT(gbc.pc(), 0x3eba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabf3), 0xb4);
        EXPECT(gbc.readMem(0xabf4), 0x61);
        // 08 00D6
        gbc.setState(0x8f3, 0x58e4, 0xb1e0, 0x483e, 0xf1c, 0x1b8a, 0x1, 0x1);
        gbc.writeMem(0x8f3, { 0x8, 0xd4, 0xce });
        gbc.writeMem(0xced4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x58e4);
        EXPECT(gbc.pc(), 0x8f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xced4), 0xe4);
        EXPECT(gbc.readMem(0xced5), 0x58);
        // 08 00D8
        gbc.setState(0x2542, 0xec84, 0x3e0, 0xfd09, 0xf2ba, 0xa471, 0x0, 0x1);
        gbc.writeMem(0x2542, { 0x8, 0x93, 0xb8 });
        gbc.writeMem(0xb893, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xec84);
        EXPECT(gbc.pc(), 0x2545);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb893), 0x84);
        EXPECT(gbc.readMem(0xb894), 0xec);
        // 08 00DA
        gbc.setState(0xefcc, 0x45df, 0x30e0, 0x92c6, 0x5e31, 0x416f, 0x0, 0x1);
        gbc.writeMem(0xd7fc, { 0x0, 0x0 });
        gbc.writeMem(0xefcc, { 0x8, 0xfc, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x45df);
        EXPECT(gbc.pc(), 0xefcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7fc), 0xdf);
        EXPECT(gbc.readMem(0xd7fd), 0x45);
        EXPECT(gbc.readMem(0xefcc), 0x8);
        EXPECT(gbc.readMem(0xefcd), 0xfc);
        EXPECT(gbc.readMem(0xefce), 0xd7);
        // 08 00DB
        gbc.setState(0xa216, 0xae85, 0x1300, 0x86d6, 0xe188, 0x4577, 0x1, 0x0);
        gbc.writeMem(0xa216, { 0x8, 0x69, 0xf4 });
        gbc.writeMem(0xf469, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xae85);
        EXPECT(gbc.pc(), 0xa219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa216), 0x8);
        EXPECT(gbc.readMem(0xa217), 0x69);
        EXPECT(gbc.readMem(0xa218), 0xf4);
        EXPECT(gbc.readMem(0xf469), 0x85);
        EXPECT(gbc.readMem(0xf46a), 0xae);
        // 08 00DC
        gbc.setState(0x3df3, 0x238a, 0xdd10, 0xa846, 0x73e4, 0x40ad, 0x1, 0x1);
        gbc.writeMem(0x3df3, { 0x8, 0x69, 0x93 });
        gbc.writeMem(0x9369, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x238a);
        EXPECT(gbc.pc(), 0x3df6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9369), 0x8a);
        EXPECT(gbc.readMem(0x936a), 0x23);
        // 08 00DE
        gbc.setState(0x7458, 0x6d4f, 0x9cd0, 0x5e16, 0x630e, 0xfc7a, 0x1, 0x1);
        gbc.writeMem(0x7458, { 0x8, 0x78, 0x9f });
        gbc.writeMem(0x9f78, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6d4f);
        EXPECT(gbc.pc(), 0x745b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f78), 0x4f);
        EXPECT(gbc.readMem(0x9f79), 0x6d);
        // 08 00E2
        gbc.setState(0xa917, 0x574c, 0x8cd0, 0xe24f, 0x60b3, 0xe6c1, 0x0, 0x1);
        gbc.writeMem(0x8e86, { 0x0, 0x0 });
        gbc.writeMem(0xa917, { 0x8, 0x86, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x574c);
        EXPECT(gbc.pc(), 0xa91a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e86), 0x4c);
        EXPECT(gbc.readMem(0x8e87), 0x57);
        EXPECT(gbc.readMem(0xa917), 0x8);
        EXPECT(gbc.readMem(0xa918), 0x86);
        EXPECT(gbc.readMem(0xa919), 0x8e);
        // 08 00E4
        gbc.setState(0x38a9, 0x51e0, 0x5090, 0x3377, 0xe736, 0x2f7e, 0x1, 0x1);
        gbc.writeMem(0x38a9, { 0x8, 0x4d, 0xe6 });
        gbc.writeMem(0xe64d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x51e0);
        EXPECT(gbc.pc(), 0x38ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe64d), 0xe0);
        EXPECT(gbc.readMem(0xe64e), 0x51);
        // 08 00E6
        gbc.setState(0x9781, 0xc4cb, 0xab70, 0xe27, 0x8a3b, 0x20fc, 0x0, 0x0);
        gbc.writeMem(0x9298, { 0x0, 0x0 });
        gbc.writeMem(0x9781, { 0x8, 0x98, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xc4cb);
        EXPECT(gbc.pc(), 0x9784);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9298), 0xcb);
        EXPECT(gbc.readMem(0x9299), 0xc4);
        EXPECT(gbc.readMem(0x9781), 0x8);
        EXPECT(gbc.readMem(0x9782), 0x98);
        EXPECT(gbc.readMem(0x9783), 0x92);
        // 08 00E9
        gbc.setState(0xcefe, 0xdb81, 0x55a0, 0x91d0, 0x1662, 0xc3ad, 0x1, 0x0);
        gbc.writeMem(0xa3e7, { 0x0, 0x0 });
        gbc.writeMem(0xcefe, { 0x8, 0xe7, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xdb81);
        EXPECT(gbc.pc(), 0xcf01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3e7), 0x81);
        EXPECT(gbc.readMem(0xa3e8), 0xdb);
        EXPECT(gbc.readMem(0xcefe), 0x8);
        EXPECT(gbc.readMem(0xceff), 0xe7);
        EXPECT(gbc.readMem(0xcf00), 0xa3);
        // 08 00EB
        gbc.setState(0xd00d, 0x9e35, 0xc820, 0x1862, 0x738f, 0x5016, 0x1, 0x1);
        gbc.writeMem(0xd00d, { 0x8, 0xe6, 0xf3 });
        gbc.writeMem(0xf3e6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x9e35);
        EXPECT(gbc.pc(), 0xd010);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd00d), 0x8);
        EXPECT(gbc.readMem(0xd00e), 0xe6);
        EXPECT(gbc.readMem(0xd00f), 0xf3);
        EXPECT(gbc.readMem(0xf3e6), 0x35);
        EXPECT(gbc.readMem(0xf3e7), 0x9e);
        // 08 00ED
        gbc.setState(0x25e1, 0xa861, 0x73e0, 0x5881, 0x8d80, 0x6942, 0x1, 0x0);
        gbc.writeMem(0x25e1, { 0x8, 0x7, 0xb4 });
        gbc.writeMem(0xb407, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xa861);
        EXPECT(gbc.pc(), 0x25e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb407), 0x61);
        EXPECT(gbc.readMem(0xb408), 0xa8);
        // 08 00F1
        gbc.setState(0xb249, 0xd3b7, 0x7b00, 0x4d5, 0xa281, 0x4a62, 0x0, 0x1);
        gbc.writeMem(0x9480, { 0x0, 0x0 });
        gbc.writeMem(0xb249, { 0x8, 0x80, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xd3b7);
        EXPECT(gbc.pc(), 0xb24c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9480), 0xb7);
        EXPECT(gbc.readMem(0x9481), 0xd3);
        EXPECT(gbc.readMem(0xb249), 0x8);
        EXPECT(gbc.readMem(0xb24a), 0x80);
        EXPECT(gbc.readMem(0xb24b), 0x94);
        // 08 00F2
        gbc.setState(0x10c0, 0x8831, 0x38d0, 0x7a62, 0x50f3, 0x10f8, 0x1, 0x1);
        gbc.writeMem(0x10c0, { 0x8, 0xb7, 0x80 });
        gbc.writeMem(0x80b7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8831);
        EXPECT(gbc.pc(), 0x10c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80b7), 0x31);
        EXPECT(gbc.readMem(0x80b8), 0x88);
        // 08 00F3
        gbc.setState(0x67d0, 0x1b80, 0x9f40, 0xbaf8, 0x59e, 0x324e, 0x0, 0x1);
        gbc.writeMem(0x67d0, { 0x8, 0xba, 0xf4 });
        gbc.writeMem(0xf4ba, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1b80);
        EXPECT(gbc.pc(), 0x67d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf4ba), 0x80);
        EXPECT(gbc.readMem(0xf4bb), 0x1b);
        // 08 00F5
        gbc.setState(0x169e, 0xcc3, 0x8140, 0x5a32, 0xe1d4, 0xa9ea, 0x0, 0x0);
        gbc.writeMem(0x169e, { 0x8, 0xc3, 0xbb });
        gbc.writeMem(0xbbc3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xcc3);
        EXPECT(gbc.pc(), 0x16a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbc3), 0xc3);
        EXPECT(gbc.readMem(0xbbc4), 0xc);
        // 08 00F6
        gbc.setState(0x7b21, 0x26be, 0x1250, 0x4745, 0x4af8, 0x7078, 0x1, 0x0);
        gbc.writeMem(0x7b21, { 0x8, 0xb1, 0xdc });
        gbc.writeMem(0xdcb1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x26be);
        EXPECT(gbc.pc(), 0x7b24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcb1), 0xbe);
        EXPECT(gbc.readMem(0xdcb2), 0x26);
        // 08 00F9
        gbc.setState(0xd4ad, 0xc221, 0x12a0, 0x5461, 0xe4ee, 0x8f8, 0x0, 0x0);
        gbc.writeMem(0xd4ad, { 0x8, 0x0, 0xe1 });
        gbc.writeMem(0xe100, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xc221);
        EXPECT(gbc.pc(), 0xd4b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4ad), 0x8);
        EXPECT(gbc.readMem(0xd4ae), 0x0);
        EXPECT(gbc.readMem(0xd4af), 0xe1);
        EXPECT(gbc.readMem(0xe100), 0x21);
        EXPECT(gbc.readMem(0xe101), 0xc2);
        // 08 00FC
        gbc.setState(0x4d09, 0x8663, 0xc910, 0x5eac, 0xd21, 0x5762, 0x1, 0x1);
        gbc.writeMem(0x4d09, { 0x8, 0x58, 0xbf });
        gbc.writeMem(0xbf58, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x8663);
        EXPECT(gbc.pc(), 0x4d0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf58), 0x63);
        EXPECT(gbc.readMem(0xbf59), 0x86);
        // 08 00FD
        gbc.setState(0x8373, 0xeac8, 0xc1e0, 0x2c03, 0x5558, 0x3886, 0x0, 0x1);
        gbc.writeMem(0x8373, { 0x8, 0xcb, 0xc0 });
        gbc.writeMem(0xc0cb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xeac8);
        EXPECT(gbc.pc(), 0x8376);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8373), 0x8);
        EXPECT(gbc.readMem(0x8374), 0xcb);
        EXPECT(gbc.readMem(0x8375), 0xc0);
        EXPECT(gbc.readMem(0xc0cb), 0xc8);
        EXPECT(gbc.readMem(0xc0cc), 0xea);
        // 08 00FE
        gbc.setState(0xdc55, 0x1cd1, 0xf780, 0x514, 0xd0f1, 0x10a, 0x1, 0x0);
        gbc.writeMem(0x8451, { 0x0, 0x0 });
        gbc.writeMem(0xdc55, { 0x8, 0x51, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x1cd1);
        EXPECT(gbc.pc(), 0xdc58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8451), 0xd1);
        EXPECT(gbc.readMem(0x8452), 0x1c);
        EXPECT(gbc.readMem(0xdc55), 0x8);
        EXPECT(gbc.readMem(0xdc56), 0x51);
        EXPECT(gbc.readMem(0xdc57), 0x84);
        // 08 0100
        gbc.setState(0x66dc, 0x8510, 0x32b0, 0x7da9, 0xae9, 0x721d, 0x0, 0x0);
        gbc.writeMem(0x66dc, { 0x8, 0x10, 0xb8 });
        gbc.writeMem(0xb810, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x8510);
        EXPECT(gbc.pc(), 0x66df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb810), 0x10);
        EXPECT(gbc.readMem(0xb811), 0x85);
        // 08 0101
        gbc.setState(0x1ab0, 0xef25, 0x1870, 0x80aa, 0xf2d6, 0xa617, 0x1, 0x1);
        gbc.writeMem(0x1ab0, { 0x8, 0xa, 0xcc });
        gbc.writeMem(0xcc0a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xef25);
        EXPECT(gbc.pc(), 0x1ab3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc0a), 0x25);
        EXPECT(gbc.readMem(0xcc0b), 0xef);
        // 08 0104
        gbc.setState(0x677, 0x7d1f, 0x8660, 0xbd49, 0x151a, 0x4314, 0x0, 0x0);
        gbc.writeMem(0x677, { 0x8, 0x69, 0xc6 });
        gbc.writeMem(0xc669, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x7d1f);
        EXPECT(gbc.pc(), 0x67a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc669), 0x1f);
        EXPECT(gbc.readMem(0xc66a), 0x7d);
        // 08 0105
        gbc.setState(0xaf7b, 0xa5b8, 0x7f80, 0xf1c6, 0x2d05, 0x7436, 0x1, 0x0);
        gbc.writeMem(0xaf7b, { 0x8, 0x5f, 0xd1 });
        gbc.writeMem(0xd15f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa5b8);
        EXPECT(gbc.pc(), 0xaf7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf7b), 0x8);
        EXPECT(gbc.readMem(0xaf7c), 0x5f);
        EXPECT(gbc.readMem(0xaf7d), 0xd1);
        EXPECT(gbc.readMem(0xd15f), 0xb8);
        EXPECT(gbc.readMem(0xd160), 0xa5);
        // 08 010E
        gbc.setState(0x718f, 0x877e, 0xaf90, 0xfd33, 0xe853, 0x3f73, 0x1, 0x1);
        gbc.writeMem(0x718f, { 0x8, 0x55, 0xdc });
        gbc.writeMem(0xdc55, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x877e);
        EXPECT(gbc.pc(), 0x7192);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc55), 0x7e);
        EXPECT(gbc.readMem(0xdc56), 0x87);
        // 08 0111
        gbc.setState(0x3eb2, 0x7628, 0xe3f0, 0x4267, 0x4fd6, 0xaf9e, 0x0, 0x0);
        gbc.writeMem(0x3eb2, { 0x8, 0x9e, 0xdf });
        gbc.writeMem(0xdf9e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7628);
        EXPECT(gbc.pc(), 0x3eb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf9e), 0x28);
        EXPECT(gbc.readMem(0xdf9f), 0x76);
        // 08 0115
        gbc.setState(0xaef0, 0x4b63, 0x6280, 0xcb5, 0xdf55, 0x1c3d, 0x0, 0x0);
        gbc.writeMem(0xaef0, { 0x8, 0xbf, 0xb6 });
        gbc.writeMem(0xb6bf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4b63);
        EXPECT(gbc.pc(), 0xaef3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaef0), 0x8);
        EXPECT(gbc.readMem(0xaef1), 0xbf);
        EXPECT(gbc.readMem(0xaef2), 0xb6);
        EXPECT(gbc.readMem(0xb6bf), 0x63);
        EXPECT(gbc.readMem(0xb6c0), 0x4b);
        // 08 0117
        gbc.setState(0x5e0d, 0x77fa, 0xfbe0, 0xc85, 0x464f, 0x2644, 0x1, 0x1);
        gbc.writeMem(0x5e0d, { 0x8, 0x1, 0xe2 });
        gbc.writeMem(0xe201, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x77fa);
        EXPECT(gbc.pc(), 0x5e10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe201), 0xfa);
        EXPECT(gbc.readMem(0xe202), 0x77);
        // 08 011A
        gbc.setState(0x4fa4, 0x799c, 0x68d0, 0xd690, 0x40d, 0xf1af, 0x0, 0x1);
        gbc.writeMem(0x4fa4, { 0x8, 0x62, 0xfa });
        gbc.writeMem(0xfa62, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x799c);
        EXPECT(gbc.pc(), 0x4fa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfa62), 0x9c);
        EXPECT(gbc.readMem(0xfa63), 0x79);
        // 08 011B
        gbc.setState(0x6192, 0x1d41, 0xb200, 0x83f2, 0x5eb6, 0xa2fd, 0x0, 0x0);
        gbc.writeMem(0x6192, { 0x8, 0xca, 0xd1 });
        gbc.writeMem(0xd1ca, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1d41);
        EXPECT(gbc.pc(), 0x6195);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1ca), 0x41);
        EXPECT(gbc.readMem(0xd1cb), 0x1d);
        // 08 011E
        gbc.setState(0xc95b, 0xa346, 0xc3a0, 0x79e5, 0x4757, 0xbc05, 0x1, 0x1);
        gbc.writeMem(0xc95b, { 0x8, 0x58, 0xd4 });
        gbc.writeMem(0xd458, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa346);
        EXPECT(gbc.pc(), 0xc95e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc95b), 0x8);
        EXPECT(gbc.readMem(0xc95c), 0x58);
        EXPECT(gbc.readMem(0xc95d), 0xd4);
        EXPECT(gbc.readMem(0xd458), 0x46);
        EXPECT(gbc.readMem(0xd459), 0xa3);
        // 08 0120
        gbc.setState(0x658e, 0xcfe7, 0xe660, 0x66da, 0x7626, 0xd38, 0x0, 0x1);
        gbc.writeMem(0x658e, { 0x8, 0x5f, 0xa3 });
        gbc.writeMem(0xa35f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xcfe7);
        EXPECT(gbc.pc(), 0x6591);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa35f), 0xe7);
        EXPECT(gbc.readMem(0xa360), 0xcf);
        // 08 0122
        gbc.setState(0x3bd, 0xaffc, 0xa880, 0xfd4e, 0x37aa, 0xc447, 0x0, 0x1);
        gbc.writeMem(0x3bd, { 0x8, 0x58, 0x95 });
        gbc.writeMem(0x9558, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xaffc);
        EXPECT(gbc.pc(), 0x3c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9558), 0xfc);
        EXPECT(gbc.readMem(0x9559), 0xaf);
        // 08 0126
        gbc.setState(0xda0a, 0x40f0, 0x3e30, 0x7ff1, 0xecfc, 0xadc, 0x0, 0x0);
        gbc.writeMem(0x9338, { 0x0, 0x0 });
        gbc.writeMem(0xda0a, { 0x8, 0x38, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x40f0);
        EXPECT(gbc.pc(), 0xda0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9338), 0xf0);
        EXPECT(gbc.readMem(0x9339), 0x40);
        EXPECT(gbc.readMem(0xda0a), 0x8);
        EXPECT(gbc.readMem(0xda0b), 0x38);
        EXPECT(gbc.readMem(0xda0c), 0x93);
        // 08 0127
        gbc.setState(0xdd27, 0xa7c3, 0x88d0, 0xe70a, 0x632, 0xa8cd, 0x1, 0x0);
        gbc.writeMem(0xc7cc, { 0x0, 0x0 });
        gbc.writeMem(0xdd27, { 0x8, 0xcc, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa7c3);
        EXPECT(gbc.pc(), 0xdd2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7cc), 0xc3);
        EXPECT(gbc.readMem(0xc7cd), 0xa7);
        EXPECT(gbc.readMem(0xdd27), 0x8);
        EXPECT(gbc.readMem(0xdd28), 0xcc);
        EXPECT(gbc.readMem(0xdd29), 0xc7);
        // 08 012A
        gbc.setState(0xb20b, 0x1cbd, 0x7300, 0xb0f9, 0x44f2, 0xc374, 0x1, 0x1);
        gbc.writeMem(0xb20b, { 0x8, 0x76, 0xdc });
        gbc.writeMem(0xdc76, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x1cbd);
        EXPECT(gbc.pc(), 0xb20e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb20b), 0x8);
        EXPECT(gbc.readMem(0xb20c), 0x76);
        EXPECT(gbc.readMem(0xb20d), 0xdc);
        EXPECT(gbc.readMem(0xdc76), 0xbd);
        EXPECT(gbc.readMem(0xdc77), 0x1c);
        // 08 012B
        gbc.setState(0xcfe8, 0x6207, 0x8ed0, 0xc67b, 0x9ca8, 0x7dec, 0x0, 0x1);
        gbc.writeMem(0x8d3f, { 0x0, 0x0 });
        gbc.writeMem(0xcfe8, { 0x8, 0x3f, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x6207);
        EXPECT(gbc.pc(), 0xcfeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d3f), 0x7);
        EXPECT(gbc.readMem(0x8d40), 0x62);
        EXPECT(gbc.readMem(0xcfe8), 0x8);
        EXPECT(gbc.readMem(0xcfe9), 0x3f);
        EXPECT(gbc.readMem(0xcfea), 0x8d);
        // 08 012D
        gbc.setState(0xd641, 0x8218, 0x9fa0, 0x182c, 0xee38, 0x659f, 0x1, 0x0);
        gbc.writeMem(0xd641, { 0x8, 0xa4, 0xda });
        gbc.writeMem(0xdaa4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x8218);
        EXPECT(gbc.pc(), 0xd644);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd641), 0x8);
        EXPECT(gbc.readMem(0xd642), 0xa4);
        EXPECT(gbc.readMem(0xd643), 0xda);
        EXPECT(gbc.readMem(0xdaa4), 0x18);
        EXPECT(gbc.readMem(0xdaa5), 0x82);
        // 08 0130
        gbc.setState(0x54c4, 0x7507, 0x92b0, 0x91da, 0xf23, 0xfb61, 0x1, 0x0);
        gbc.writeMem(0x54c4, { 0x8, 0xc6, 0x90 });
        gbc.writeMem(0x90c6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x7507);
        EXPECT(gbc.pc(), 0x54c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90c6), 0x7);
        EXPECT(gbc.readMem(0x90c7), 0x75);
        // 08 0131
        gbc.setState(0xb352, 0x6cfd, 0x7fb0, 0xf7b0, 0xa762, 0x645a, 0x0, 0x0);
        gbc.writeMem(0xaeb0, { 0x0, 0x0 });
        gbc.writeMem(0xb352, { 0x8, 0xb0, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6cfd);
        EXPECT(gbc.pc(), 0xb355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeb0), 0xfd);
        EXPECT(gbc.readMem(0xaeb1), 0x6c);
        EXPECT(gbc.readMem(0xb352), 0x8);
        EXPECT(gbc.readMem(0xb353), 0xb0);
        EXPECT(gbc.readMem(0xb354), 0xae);
        // 08 0133
        gbc.setState(0x65a, 0xf1f9, 0xa7f0, 0x55de, 0x4efe, 0x95f6, 0x1, 0x1);
        gbc.writeMem(0x65a, { 0x8, 0x4d, 0x84 });
        gbc.writeMem(0x844d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xf1f9);
        EXPECT(gbc.pc(), 0x65d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x844d), 0xf9);
        EXPECT(gbc.readMem(0x844e), 0xf1);
        // 08 0136
        gbc.setState(0x192b, 0x35d4, 0xb7c0, 0x7ba8, 0x4064, 0xf65e, 0x1, 0x1);
        gbc.writeMem(0x192b, { 0x8, 0x10, 0xe4 });
        gbc.writeMem(0xe410, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x35d4);
        EXPECT(gbc.pc(), 0x192e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe410), 0xd4);
        EXPECT(gbc.readMem(0xe411), 0x35);
        // 08 0138
        gbc.setState(0x75f, 0x8485, 0x1d50, 0x36cb, 0x392, 0xed49, 0x0, 0x1);
        gbc.writeMem(0x75f, { 0x8, 0xb9, 0x8d });
        gbc.writeMem(0x8db9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x8485);
        EXPECT(gbc.pc(), 0x762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8db9), 0x85);
        EXPECT(gbc.readMem(0x8dba), 0x84);
        // 08 0139
        gbc.setState(0xa65d, 0x1da9, 0xab90, 0xdc42, 0x7bc9, 0x1e0b, 0x1, 0x0);
        gbc.writeMem(0xa65d, { 0x8, 0xfd, 0xbd });
        gbc.writeMem(0xbdfd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1da9);
        EXPECT(gbc.pc(), 0xa660);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa65d), 0x8);
        EXPECT(gbc.readMem(0xa65e), 0xfd);
        EXPECT(gbc.readMem(0xa65f), 0xbd);
        EXPECT(gbc.readMem(0xbdfd), 0xa9);
        EXPECT(gbc.readMem(0xbdfe), 0x1d);
        // 08 013E
        gbc.setState(0x4a8e, 0x938a, 0x5260, 0xf713, 0x62df, 0x230b, 0x0, 0x0);
        gbc.writeMem(0x4a8e, { 0x8, 0x67, 0xcb });
        gbc.writeMem(0xcb67, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x938a);
        EXPECT(gbc.pc(), 0x4a91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb67), 0x8a);
        EXPECT(gbc.readMem(0xcb68), 0x93);
        // 08 0141
        gbc.setState(0x703d, 0xa035, 0x7fa0, 0x333b, 0x6869, 0x9a99, 0x0, 0x0);
        gbc.writeMem(0x703d, { 0x8, 0x20, 0x97 });
        gbc.writeMem(0x9720, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xa035);
        EXPECT(gbc.pc(), 0x7040);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9720), 0x35);
        EXPECT(gbc.readMem(0x9721), 0xa0);
        // 08 0144
        gbc.setState(0xab42, 0x884e, 0x8390, 0x7df, 0xeea7, 0xc879, 0x1, 0x0);
        gbc.writeMem(0xab42, { 0x8, 0x63, 0xe0 });
        gbc.writeMem(0xe063, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x884e);
        EXPECT(gbc.pc(), 0xab45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab42), 0x8);
        EXPECT(gbc.readMem(0xab43), 0x63);
        EXPECT(gbc.readMem(0xab44), 0xe0);
        EXPECT(gbc.readMem(0xe063), 0x4e);
        EXPECT(gbc.readMem(0xe064), 0x88);
        // 08 0145
        gbc.setState(0xadca, 0x5577, 0x1300, 0x4efb, 0xdc43, 0xfae1, 0x1, 0x1);
        gbc.writeMem(0x99a4, { 0x0, 0x0 });
        gbc.writeMem(0xadca, { 0x8, 0xa4, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x5577);
        EXPECT(gbc.pc(), 0xadcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99a4), 0x77);
        EXPECT(gbc.readMem(0x99a5), 0x55);
        EXPECT(gbc.readMem(0xadca), 0x8);
        EXPECT(gbc.readMem(0xadcb), 0xa4);
        EXPECT(gbc.readMem(0xadcc), 0x99);
        // 08 014A
        gbc.setState(0xb488, 0x2f67, 0x9320, 0x12c, 0x2af8, 0x297e, 0x0, 0x0);
        gbc.writeMem(0x8ae2, { 0x0, 0x0 });
        gbc.writeMem(0xb488, { 0x8, 0xe2, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2f67);
        EXPECT(gbc.pc(), 0xb48b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ae2), 0x67);
        EXPECT(gbc.readMem(0x8ae3), 0x2f);
        EXPECT(gbc.readMem(0xb488), 0x8);
        EXPECT(gbc.readMem(0xb489), 0xe2);
        EXPECT(gbc.readMem(0xb48a), 0x8a);
        // 08 014B
        gbc.setState(0x357d, 0x4560, 0xc3f0, 0xfcf4, 0x6ac1, 0xefe8, 0x0, 0x0);
        gbc.writeMem(0x357d, { 0x8, 0x2c, 0x9b });
        gbc.writeMem(0x9b2c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4560);
        EXPECT(gbc.pc(), 0x3580);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b2c), 0x60);
        EXPECT(gbc.readMem(0x9b2d), 0x45);
        // 08 014D
        gbc.setState(0x1d10, 0xf8bb, 0xfcc0, 0x8c62, 0x7ae2, 0xebd3, 0x1, 0x1);
        gbc.writeMem(0x1d10, { 0x8, 0xde, 0xbc });
        gbc.writeMem(0xbcde, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf8bb);
        EXPECT(gbc.pc(), 0x1d13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcde), 0xbb);
        EXPECT(gbc.readMem(0xbcdf), 0xf8);
        // 08 0150
        gbc.setState(0xa889, 0x71f3, 0x7870, 0x5b5c, 0x285c, 0xc905, 0x1, 0x0);
        gbc.writeMem(0xa889, { 0x8, 0xb8, 0xbd });
        gbc.writeMem(0xbdb8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x71f3);
        EXPECT(gbc.pc(), 0xa88c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa889), 0x8);
        EXPECT(gbc.readMem(0xa88a), 0xb8);
        EXPECT(gbc.readMem(0xa88b), 0xbd);
        EXPECT(gbc.readMem(0xbdb8), 0xf3);
        EXPECT(gbc.readMem(0xbdb9), 0x71);
        // 08 0151
        gbc.setState(0x485f, 0xd5e7, 0x6be0, 0xb10d, 0x3885, 0xec59, 0x1, 0x1);
        gbc.writeMem(0x485f, { 0x8, 0xf0, 0xd1 });
        gbc.writeMem(0xd1f0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xd5e7);
        EXPECT(gbc.pc(), 0x4862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1f0), 0xe7);
        EXPECT(gbc.readMem(0xd1f1), 0xd5);
        // 08 0152
        gbc.setState(0xe37f, 0x84e2, 0x1390, 0x280e, 0x363b, 0xf5fe, 0x0, 0x1);
        gbc.writeMem(0xcd38, { 0x0, 0x0 });
        gbc.writeMem(0xe37f, { 0x8, 0x38, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x84e2);
        EXPECT(gbc.pc(), 0xe382);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd38), 0xe2);
        EXPECT(gbc.readMem(0xcd39), 0x84);
        EXPECT(gbc.readMem(0xe37f), 0x8);
        EXPECT(gbc.readMem(0xe380), 0x38);
        EXPECT(gbc.readMem(0xe381), 0xcd);
        // 08 0156
        gbc.setState(0x198d, 0xc5df, 0x2190, 0x4139, 0x4775, 0x1f1f, 0x1, 0x1);
        gbc.writeMem(0x198d, { 0x8, 0x69, 0xce });
        gbc.writeMem(0xce69, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc5df);
        EXPECT(gbc.pc(), 0x1990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce69), 0xdf);
        EXPECT(gbc.readMem(0xce6a), 0xc5);
        // 08 0157
        gbc.setState(0x844a, 0x5dc3, 0x2680, 0xf4a4, 0x64f2, 0xd2, 0x0, 0x1);
        gbc.writeMem(0x844a, { 0x8, 0xbb, 0x99 });
        gbc.writeMem(0x99bb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5dc3);
        EXPECT(gbc.pc(), 0x844d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x844a), 0x8);
        EXPECT(gbc.readMem(0x844b), 0xbb);
        EXPECT(gbc.readMem(0x844c), 0x99);
        EXPECT(gbc.readMem(0x99bb), 0xc3);
        EXPECT(gbc.readMem(0x99bc), 0x5d);
        // 08 0158
        gbc.setState(0xa8f2, 0x95cc, 0x6e80, 0xff97, 0xa922, 0xae0a, 0x0, 0x1);
        gbc.writeMem(0xa8f2, { 0x8, 0x98, 0xc8 });
        gbc.writeMem(0xc898, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x95cc);
        EXPECT(gbc.pc(), 0xa8f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8f2), 0x8);
        EXPECT(gbc.readMem(0xa8f3), 0x98);
        EXPECT(gbc.readMem(0xa8f4), 0xc8);
        EXPECT(gbc.readMem(0xc898), 0xcc);
        EXPECT(gbc.readMem(0xc899), 0x95);
        // 08 0159
        gbc.setState(0xd9f2, 0x157f, 0xd9f0, 0x4138, 0x440d, 0x1ef7, 0x0, 0x1);
        gbc.writeMem(0xd9f2, { 0x8, 0x5, 0xf4 });
        gbc.writeMem(0xf405, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x157f);
        EXPECT(gbc.pc(), 0xd9f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9f2), 0x8);
        EXPECT(gbc.readMem(0xd9f3), 0x5);
        EXPECT(gbc.readMem(0xd9f4), 0xf4);
        EXPECT(gbc.readMem(0xf405), 0x7f);
        EXPECT(gbc.readMem(0xf406), 0x15);
        // 08 015A
        gbc.setState(0x19f2, 0xc23c, 0xf110, 0x12d6, 0x3e72, 0x9980, 0x0, 0x1);
        gbc.writeMem(0x19f2, { 0x8, 0x8a, 0xc6 });
        gbc.writeMem(0xc68a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xc23c);
        EXPECT(gbc.pc(), 0x19f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc68a), 0x3c);
        EXPECT(gbc.readMem(0xc68b), 0xc2);
        // 08 0163
        gbc.setState(0x2bbe, 0x3ac9, 0xf5d0, 0x5c21, 0x6d88, 0xc343, 0x0, 0x0);
        gbc.writeMem(0x2bbe, { 0x8, 0xd6, 0x85 });
        gbc.writeMem(0x85d6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3ac9);
        EXPECT(gbc.pc(), 0x2bc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85d6), 0xc9);
        EXPECT(gbc.readMem(0x85d7), 0x3a);
        // 08 0167
        gbc.setState(0x4e0e, 0xbaf4, 0x8c00, 0x242c, 0x898d, 0x57ac, 0x1, 0x0);
        gbc.writeMem(0x4e0e, { 0x8, 0xa4, 0xee });
        gbc.writeMem(0xeea4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xbaf4);
        EXPECT(gbc.pc(), 0x4e11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeea4), 0xf4);
        EXPECT(gbc.readMem(0xeea5), 0xba);
        // 08 0168
        gbc.setState(0x3981, 0x9d42, 0xe070, 0x9388, 0xe171, 0x1fdd, 0x0, 0x1);
        gbc.writeMem(0x3981, { 0x8, 0x60, 0x9b });
        gbc.writeMem(0x9b60, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9d42);
        EXPECT(gbc.pc(), 0x3984);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b60), 0x42);
        EXPECT(gbc.readMem(0x9b61), 0x9d);
        // 08 016A
        gbc.setState(0x5e17, 0x5a2f, 0x7570, 0xae84, 0x7508, 0x63c8, 0x0, 0x1);
        gbc.writeMem(0x5e17, { 0x8, 0x23, 0xf6 });
        gbc.writeMem(0xf623, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5a2f);
        EXPECT(gbc.pc(), 0x5e1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf623), 0x2f);
        EXPECT(gbc.readMem(0xf624), 0x5a);
        // 08 016B
        gbc.setState(0x3de8, 0xb5d, 0xe3b0, 0xdaab, 0x8bc9, 0xed25, 0x1, 0x0);
        gbc.writeMem(0x3de8, { 0x8, 0xb5, 0xb0 });
        gbc.writeMem(0xb0b5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb5d);
        EXPECT(gbc.pc(), 0x3deb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0b5), 0x5d);
        EXPECT(gbc.readMem(0xb0b6), 0xb);
        // 08 016F
        gbc.setState(0x9c38, 0xd29f, 0xdf00, 0x50b4, 0xf081, 0x266, 0x0, 0x1);
        gbc.writeMem(0x9c38, { 0x8, 0xfe, 0xa5 });
        gbc.writeMem(0xa5fe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xd29f);
        EXPECT(gbc.pc(), 0x9c3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c38), 0x8);
        EXPECT(gbc.readMem(0x9c39), 0xfe);
        EXPECT(gbc.readMem(0x9c3a), 0xa5);
        EXPECT(gbc.readMem(0xa5fe), 0x9f);
        EXPECT(gbc.readMem(0xa5ff), 0xd2);
        // 08 0170
        gbc.setState(0x5320, 0xf958, 0x8d80, 0x14ed, 0xc72e, 0xbc69, 0x1, 0x1);
        gbc.writeMem(0x5320, { 0x8, 0xa9, 0xef });
        gbc.writeMem(0xefa9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xf958);
        EXPECT(gbc.pc(), 0x5323);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefa9), 0x58);
        EXPECT(gbc.readMem(0xefaa), 0xf9);
        // 08 0172
        gbc.setState(0x49bb, 0x7acd, 0x43e0, 0x5b32, 0x4c3b, 0x1c0a, 0x0, 0x1);
        gbc.writeMem(0x49bb, { 0x8, 0x6b, 0xdc });
        gbc.writeMem(0xdc6b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7acd);
        EXPECT(gbc.pc(), 0x49be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc6b), 0xcd);
        EXPECT(gbc.readMem(0xdc6c), 0x7a);
        // 08 0176
        gbc.setState(0xce0b, 0xcebc, 0xfe50, 0xadae, 0xda64, 0x167d, 0x0, 0x1);
        gbc.writeMem(0x985c, { 0x0, 0x0 });
        gbc.writeMem(0xce0b, { 0x8, 0x5c, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xcebc);
        EXPECT(gbc.pc(), 0xce0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x985c), 0xbc);
        EXPECT(gbc.readMem(0x985d), 0xce);
        EXPECT(gbc.readMem(0xce0b), 0x8);
        EXPECT(gbc.readMem(0xce0c), 0x5c);
        EXPECT(gbc.readMem(0xce0d), 0x98);
        // 08 0179
        gbc.setState(0x178f, 0x6e6f, 0xe930, 0x32b2, 0x39ad, 0xb210, 0x0, 0x1);
        gbc.writeMem(0x178f, { 0x8, 0x3, 0xc6 });
        gbc.writeMem(0xc603, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6e6f);
        EXPECT(gbc.pc(), 0x1792);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc603), 0x6f);
        EXPECT(gbc.readMem(0xc604), 0x6e);
        // 08 017B
        gbc.setState(0x4793, 0x3674, 0x8490, 0x63fd, 0xb8ad, 0x6195, 0x1, 0x1);
        gbc.writeMem(0x4793, { 0x8, 0x46, 0xe0 });
        gbc.writeMem(0xe046, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3674);
        EXPECT(gbc.pc(), 0x4796);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe046), 0x74);
        EXPECT(gbc.readMem(0xe047), 0x36);
        // 08 017F
        gbc.setState(0xd5a9, 0xcb37, 0x3960, 0x444e, 0x26ba, 0x59e6, 0x1, 0x1);
        gbc.writeMem(0x8378, { 0x0, 0x0 });
        gbc.writeMem(0xd5a9, { 0x8, 0x78, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xcb37);
        EXPECT(gbc.pc(), 0xd5ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8378), 0x37);
        EXPECT(gbc.readMem(0x8379), 0xcb);
        EXPECT(gbc.readMem(0xd5a9), 0x8);
        EXPECT(gbc.readMem(0xd5aa), 0x78);
        EXPECT(gbc.readMem(0xd5ab), 0x83);
        // 08 0180
        gbc.setState(0x1fb5, 0x593b, 0x62c0, 0xe3c0, 0x35a4, 0x5ba0, 0x1, 0x0);
        gbc.writeMem(0x1fb5, { 0x8, 0xe1, 0xcc });
        gbc.writeMem(0xcce1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x593b);
        EXPECT(gbc.pc(), 0x1fb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcce1), 0x3b);
        EXPECT(gbc.readMem(0xcce2), 0x59);
        // 08 0181
        gbc.setState(0xd87d, 0xdad3, 0xbc60, 0x12c0, 0xf319, 0x4f90, 0x1, 0x1);
        gbc.writeMem(0xa628, { 0x0, 0x0 });
        gbc.writeMem(0xd87d, { 0x8, 0x28, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xdad3);
        EXPECT(gbc.pc(), 0xd880);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa628), 0xd3);
        EXPECT(gbc.readMem(0xa629), 0xda);
        EXPECT(gbc.readMem(0xd87d), 0x8);
        EXPECT(gbc.readMem(0xd87e), 0x28);
        EXPECT(gbc.readMem(0xd87f), 0xa6);
        // 08 0182
        gbc.setState(0x3e28, 0x2eb7, 0x5710, 0x80e6, 0x9bc4, 0xc692, 0x0, 0x0);
        gbc.writeMem(0x3e28, { 0x8, 0xd2, 0xbe });
        gbc.writeMem(0xbed2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2eb7);
        EXPECT(gbc.pc(), 0x3e2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbed2), 0xb7);
        EXPECT(gbc.readMem(0xbed3), 0x2e);
        // 08 0189
        gbc.setState(0xba8a, 0x8e6b, 0x95f0, 0xd40e, 0x79ad, 0xe757, 0x1, 0x1);
        gbc.writeMem(0xba8a, { 0x8, 0x92, 0xdc });
        gbc.writeMem(0xdc92, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x8e6b);
        EXPECT(gbc.pc(), 0xba8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba8a), 0x8);
        EXPECT(gbc.readMem(0xba8b), 0x92);
        EXPECT(gbc.readMem(0xba8c), 0xdc);
        EXPECT(gbc.readMem(0xdc92), 0x6b);
        EXPECT(gbc.readMem(0xdc93), 0x8e);
        // 08 018A
        gbc.setState(0x4679, 0x7358, 0x9f0, 0xf490, 0x591f, 0xe599, 0x1, 0x0);
        gbc.writeMem(0x4679, { 0x8, 0x59, 0xac });
        gbc.writeMem(0xac59, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x7358);
        EXPECT(gbc.pc(), 0x467c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac59), 0x58);
        EXPECT(gbc.readMem(0xac5a), 0x73);
        // 08 018C
        gbc.setState(0x46ac, 0x8ee1, 0x8c50, 0xf4aa, 0x1218, 0xa5bb, 0x0, 0x0);
        gbc.writeMem(0x46ac, { 0x8, 0x7a, 0xfb });
        gbc.writeMem(0xfb7a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x8ee1);
        EXPECT(gbc.pc(), 0x46af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfb7a), 0xe1);
        EXPECT(gbc.readMem(0xfb7b), 0x8e);
        // 08 018E
        gbc.setState(0xd266, 0x5197, 0x96e0, 0xd702, 0x6ab9, 0x5559, 0x0, 0x1);
        gbc.writeMem(0xc3cc, { 0x0, 0x0 });
        gbc.writeMem(0xd266, { 0x8, 0xcc, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5197);
        EXPECT(gbc.pc(), 0xd269);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3cc), 0x97);
        EXPECT(gbc.readMem(0xc3cd), 0x51);
        EXPECT(gbc.readMem(0xd266), 0x8);
        EXPECT(gbc.readMem(0xd267), 0xcc);
        EXPECT(gbc.readMem(0xd268), 0xc3);
        // 08 0195
        gbc.setState(0xbdc1, 0xf148, 0x2e0, 0x7d5, 0xbd1b, 0xa222, 0x1, 0x0);
        gbc.writeMem(0xac44, { 0x0, 0x0 });
        gbc.writeMem(0xbdc1, { 0x8, 0x44, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xf148);
        EXPECT(gbc.pc(), 0xbdc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac44), 0x48);
        EXPECT(gbc.readMem(0xac45), 0xf1);
        EXPECT(gbc.readMem(0xbdc1), 0x8);
        EXPECT(gbc.readMem(0xbdc2), 0x44);
        EXPECT(gbc.readMem(0xbdc3), 0xac);
        // 08 019B
        gbc.setState(0x774b, 0x2f04, 0xcb40, 0x323a, 0xc102, 0x879d, 0x1, 0x0);
        gbc.writeMem(0x774b, { 0x8, 0x50, 0x98 });
        gbc.writeMem(0x9850, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x2f04);
        EXPECT(gbc.pc(), 0x774e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9850), 0x4);
        EXPECT(gbc.readMem(0x9851), 0x2f);
        // 08 019D
        gbc.setState(0x7440, 0x6acd, 0xf450, 0x488c, 0xfaf4, 0x7d0d, 0x1, 0x0);
        gbc.writeMem(0x7440, { 0x8, 0x31, 0xba });
        gbc.writeMem(0xba31, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6acd);
        EXPECT(gbc.pc(), 0x7443);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba31), 0xcd);
        EXPECT(gbc.readMem(0xba32), 0x6a);
        // 08 019F
        gbc.setState(0x4cd7, 0xcd68, 0x9920, 0xe5a1, 0x1c91, 0x1454, 0x0, 0x0);
        gbc.writeMem(0x4cd7, { 0x8, 0xb2, 0xe0 });
        gbc.writeMem(0xe0b2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xcd68);
        EXPECT(gbc.pc(), 0x4cda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0b2), 0x68);
        EXPECT(gbc.readMem(0xe0b3), 0xcd);
        // 08 01A1
        gbc.setState(0x4fbf, 0x996, 0x31f0, 0xd14b, 0xcb40, 0xfb14, 0x1, 0x1);
        gbc.writeMem(0x4fbf, { 0x8, 0x65, 0xff });
        gbc.writeMem(0xff65, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x996);
        EXPECT(gbc.pc(), 0x4fc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff65), 0x96);
        EXPECT(gbc.readMem(0xff66), 0x9);
        // 08 01A8
        gbc.setState(0x2b34, 0x82a0, 0xaff0, 0xbeaa, 0x9b87, 0xbbcc, 0x1, 0x1);
        gbc.writeMem(0x2b34, { 0x8, 0x2a, 0xfd });
        gbc.writeMem(0xfd2a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x82a0);
        EXPECT(gbc.pc(), 0x2b37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfd2a), 0xa0);
        EXPECT(gbc.readMem(0xfd2b), 0x82);
        // 08 01A9
        gbc.setState(0x7ff, 0x9403, 0x1160, 0x62bd, 0xb0cf, 0x2447, 0x1, 0x0);
        gbc.writeMem(0x7ff, { 0x8, 0x76, 0xea });
        gbc.writeMem(0xea76, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9403);
        EXPECT(gbc.pc(), 0x802);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea76), 0x3);
        EXPECT(gbc.readMem(0xea77), 0x94);
        // 08 01AB
        gbc.setState(0x9960, 0x2c94, 0x970, 0xf236, 0x5ff, 0x1d04, 0x1, 0x0);
        gbc.writeMem(0x9960, { 0x8, 0x34, 0x9c });
        gbc.writeMem(0x9c34, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2c94);
        EXPECT(gbc.pc(), 0x9963);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9960), 0x8);
        EXPECT(gbc.readMem(0x9961), 0x34);
        EXPECT(gbc.readMem(0x9962), 0x9c);
        EXPECT(gbc.readMem(0x9c34), 0x94);
        EXPECT(gbc.readMem(0x9c35), 0x2c);
        // 08 01AC
        gbc.setState(0x6fac, 0xb92a, 0x4320, 0xb9b0, 0xc824, 0xa6fc, 0x0, 0x1);
        gbc.writeMem(0x6fac, { 0x8, 0x73, 0xe1 });
        gbc.writeMem(0xe173, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xb92a);
        EXPECT(gbc.pc(), 0x6faf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe173), 0x2a);
        EXPECT(gbc.readMem(0xe174), 0xb9);
        // 08 01AD
        gbc.setState(0x51e, 0xab0d, 0xf700, 0xd573, 0xe228, 0x2324, 0x1, 0x0);
        gbc.writeMem(0x51e, { 0x8, 0xa2, 0xf1 });
        gbc.writeMem(0xf1a2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xab0d);
        EXPECT(gbc.pc(), 0x521);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf1a2), 0xd);
        EXPECT(gbc.readMem(0xf1a3), 0xab);
        // 08 01AE
        gbc.setState(0x21ba, 0xf832, 0x6e70, 0xa286, 0x3ddb, 0x279d, 0x1, 0x1);
        gbc.writeMem(0x21ba, { 0x8, 0x24, 0xe2 });
        gbc.writeMem(0xe224, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf832);
        EXPECT(gbc.pc(), 0x21bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe224), 0x32);
        EXPECT(gbc.readMem(0xe225), 0xf8);
        // 08 01B0
        gbc.setState(0xe6b1, 0xc225, 0xd790, 0xef89, 0x6e04, 0x8fb1, 0x0, 0x0);
        gbc.writeMem(0xe6b1, { 0x8, 0x7c, 0xed });
        gbc.writeMem(0xed7c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xc225);
        EXPECT(gbc.pc(), 0xe6b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6b1), 0x8);
        EXPECT(gbc.readMem(0xe6b2), 0x7c);
        EXPECT(gbc.readMem(0xe6b3), 0xed);
        EXPECT(gbc.readMem(0xed7c), 0x25);
        EXPECT(gbc.readMem(0xed7d), 0xc2);
        // 08 01B1
        gbc.setState(0x72e3, 0x6084, 0x8f00, 0x817d, 0x5b0d, 0xe17b, 0x1, 0x0);
        gbc.writeMem(0x72e3, { 0x8, 0x5, 0xf8 });
        gbc.writeMem(0xf805, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x6084);
        EXPECT(gbc.pc(), 0x72e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf805), 0x84);
        EXPECT(gbc.readMem(0xf806), 0x60);
        // 08 01B3
        gbc.setState(0xc98c, 0x561e, 0xcab0, 0x819f, 0xdc30, 0x8501, 0x1, 0x1);
        gbc.writeMem(0x82ce, { 0x0, 0x0 });
        gbc.writeMem(0xc98c, { 0x8, 0xce, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x561e);
        EXPECT(gbc.pc(), 0xc98f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82ce), 0x1e);
        EXPECT(gbc.readMem(0x82cf), 0x56);
        EXPECT(gbc.readMem(0xc98c), 0x8);
        EXPECT(gbc.readMem(0xc98d), 0xce);
        EXPECT(gbc.readMem(0xc98e), 0x82);
        // 08 01B9
        gbc.setState(0xc068, 0xbced, 0x170, 0xe8ec, 0x803c, 0x7781, 0x1, 0x1);
        gbc.writeMem(0xc068, { 0x8, 0xd2, 0xcb });
        gbc.writeMem(0xcbd2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xbced);
        EXPECT(gbc.pc(), 0xc06b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc068), 0x8);
        EXPECT(gbc.readMem(0xc069), 0xd2);
        EXPECT(gbc.readMem(0xc06a), 0xcb);
        EXPECT(gbc.readMem(0xcbd2), 0xed);
        EXPECT(gbc.readMem(0xcbd3), 0xbc);
        // 08 01BB
        gbc.setState(0x879c, 0x8c4f, 0xf330, 0xd7a0, 0x3d8f, 0x6682, 0x0, 0x0);
        gbc.writeMem(0x879c, { 0x8, 0xb1, 0xdf });
        gbc.writeMem(0xdfb1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8c4f);
        EXPECT(gbc.pc(), 0x879f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x879c), 0x8);
        EXPECT(gbc.readMem(0x879d), 0xb1);
        EXPECT(gbc.readMem(0x879e), 0xdf);
        EXPECT(gbc.readMem(0xdfb1), 0x4f);
        EXPECT(gbc.readMem(0xdfb2), 0x8c);
        // 08 01BD
        gbc.setState(0xd3d6, 0xe2f0, 0xf490, 0xedff, 0x6f7c, 0xaec9, 0x1, 0x1);
        gbc.writeMem(0xd3d6, { 0x8, 0xfc, 0xdc });
        gbc.writeMem(0xdcfc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe2f0);
        EXPECT(gbc.pc(), 0xd3d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3d6), 0x8);
        EXPECT(gbc.readMem(0xd3d7), 0xfc);
        EXPECT(gbc.readMem(0xd3d8), 0xdc);
        EXPECT(gbc.readMem(0xdcfc), 0xf0);
        EXPECT(gbc.readMem(0xdcfd), 0xe2);
        // 08 01BE
        gbc.setState(0x9714, 0x30f4, 0xed0, 0x6a40, 0x89a0, 0x686b, 0x0, 0x0);
        gbc.writeMem(0x9714, { 0x8, 0x84, 0xdd });
        gbc.writeMem(0xdd84, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x30f4);
        EXPECT(gbc.pc(), 0x9717);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9714), 0x8);
        EXPECT(gbc.readMem(0x9715), 0x84);
        EXPECT(gbc.readMem(0x9716), 0xdd);
        EXPECT(gbc.readMem(0xdd84), 0xf4);
        EXPECT(gbc.readMem(0xdd85), 0x30);
        // 08 01BF
        gbc.setState(0x87b0, 0x7413, 0x6fe0, 0xd9d4, 0xc9a4, 0xc057, 0x1, 0x1);
        gbc.writeMem(0x87b0, { 0x8, 0x8, 0xc5 });
        gbc.writeMem(0xc508, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x7413);
        EXPECT(gbc.pc(), 0x87b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87b0), 0x8);
        EXPECT(gbc.readMem(0x87b1), 0x8);
        EXPECT(gbc.readMem(0x87b2), 0xc5);
        EXPECT(gbc.readMem(0xc508), 0x13);
        EXPECT(gbc.readMem(0xc509), 0x74);
        // 08 01C0
        gbc.setState(0xbd10, 0xaa54, 0x3760, 0x256c, 0x38ab, 0x1524, 0x1, 0x0);
        gbc.writeMem(0xbd10, { 0x8, 0xc9, 0xf9 });
        gbc.writeMem(0xf9c9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xaa54);
        EXPECT(gbc.pc(), 0xbd13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd10), 0x8);
        EXPECT(gbc.readMem(0xbd11), 0xc9);
        EXPECT(gbc.readMem(0xbd12), 0xf9);
        EXPECT(gbc.readMem(0xf9c9), 0x54);
        EXPECT(gbc.readMem(0xf9ca), 0xaa);
        // 08 01C3
        gbc.setState(0x7d48, 0x2cd7, 0xa1b0, 0x61fe, 0x27cc, 0xe9b8, 0x1, 0x1);
        gbc.writeMem(0x7d48, { 0x8, 0x3c, 0x8e });
        gbc.writeMem(0x8e3c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x2cd7);
        EXPECT(gbc.pc(), 0x7d4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e3c), 0xd7);
        EXPECT(gbc.readMem(0x8e3d), 0x2c);
        // 08 01C6
        gbc.setState(0xda06, 0xdd39, 0xa2b0, 0xd118, 0xf1f8, 0x6790, 0x1, 0x0);
        gbc.writeMem(0xcb49, { 0x0, 0x0 });
        gbc.writeMem(0xda06, { 0x8, 0x49, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xdd39);
        EXPECT(gbc.pc(), 0xda09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb49), 0x39);
        EXPECT(gbc.readMem(0xcb4a), 0xdd);
        EXPECT(gbc.readMem(0xda06), 0x8);
        EXPECT(gbc.readMem(0xda07), 0x49);
        EXPECT(gbc.readMem(0xda08), 0xcb);
        // 08 01C7
        gbc.setState(0xcc5d, 0xfdb5, 0x52a0, 0xf5b6, 0x4939, 0x4deb, 0x0, 0x1);
        gbc.writeMem(0xc2a3, { 0x0, 0x0 });
        gbc.writeMem(0xcc5d, { 0x8, 0xa3, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xfdb5);
        EXPECT(gbc.pc(), 0xcc60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2a3), 0xb5);
        EXPECT(gbc.readMem(0xc2a4), 0xfd);
        EXPECT(gbc.readMem(0xcc5d), 0x8);
        EXPECT(gbc.readMem(0xcc5e), 0xa3);
        EXPECT(gbc.readMem(0xcc5f), 0xc2);
        // 08 01C8
        gbc.setState(0x8631, 0x17bb, 0x4a40, 0xe835, 0x12af, 0xef36, 0x1, 0x0);
        gbc.writeMem(0x8631, { 0x8, 0x34, 0xfe });
        gbc.writeMem(0xfe34, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x17bb);
        EXPECT(gbc.pc(), 0x8634);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8631), 0x8);
        EXPECT(gbc.readMem(0x8632), 0x34);
        EXPECT(gbc.readMem(0x8633), 0xfe);
        EXPECT(gbc.readMem(0xfe34), 0xbb);
        EXPECT(gbc.readMem(0xfe35), 0x17);
        // 08 01CA
        gbc.setState(0x9e51, 0xa626, 0xbc60, 0x30fd, 0x204e, 0x8264, 0x1, 0x0);
        gbc.writeMem(0x9e51, { 0x8, 0xdf, 0xb1 });
        gbc.writeMem(0xb1df, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xa626);
        EXPECT(gbc.pc(), 0x9e54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e51), 0x8);
        EXPECT(gbc.readMem(0x9e52), 0xdf);
        EXPECT(gbc.readMem(0x9e53), 0xb1);
        EXPECT(gbc.readMem(0xb1df), 0x26);
        EXPECT(gbc.readMem(0xb1e0), 0xa6);
        // 08 01CC
        gbc.setState(0x5af4, 0x1335, 0xece0, 0x1e05, 0x794a, 0xe520, 0x1, 0x1);
        gbc.writeMem(0x5af4, { 0x8, 0x2f, 0x82 });
        gbc.writeMem(0x822f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1335);
        EXPECT(gbc.pc(), 0x5af7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x822f), 0x35);
        EXPECT(gbc.readMem(0x8230), 0x13);
        // 08 01CF
        gbc.setState(0xc79e, 0xc248, 0xaa50, 0x2b1b, 0xc916, 0xabaf, 0x0, 0x1);
        gbc.writeMem(0xb987, { 0x0, 0x0 });
        gbc.writeMem(0xc79e, { 0x8, 0x87, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xc248);
        EXPECT(gbc.pc(), 0xc7a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb987), 0x48);
        EXPECT(gbc.readMem(0xb988), 0xc2);
        EXPECT(gbc.readMem(0xc79e), 0x8);
        EXPECT(gbc.readMem(0xc79f), 0x87);
        EXPECT(gbc.readMem(0xc7a0), 0xb9);
        // 08 01D1
        gbc.setState(0xd980, 0xa131, 0xd160, 0x5c16, 0xac43, 0x854c, 0x1, 0x0);
        gbc.writeMem(0xd980, { 0x8, 0xe, 0xef });
        gbc.writeMem(0xef0e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa131);
        EXPECT(gbc.pc(), 0xd983);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd980), 0x8);
        EXPECT(gbc.readMem(0xd981), 0xe);
        EXPECT(gbc.readMem(0xd982), 0xef);
        EXPECT(gbc.readMem(0xef0e), 0x31);
        EXPECT(gbc.readMem(0xef0f), 0xa1);
        // 08 01DA
        gbc.setState(0xf56, 0xa21d, 0x20b0, 0xd8b2, 0xb66e, 0x2d19, 0x0, 0x1);
        gbc.writeMem(0xf56, { 0x8, 0x4d, 0x8b });
        gbc.writeMem(0x8b4d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa21d);
        EXPECT(gbc.pc(), 0xf59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b4d), 0x1d);
        EXPECT(gbc.readMem(0x8b4e), 0xa2);
        // 08 01DB
        gbc.setState(0x7df, 0x92fc, 0xd410, 0xbfdd, 0x4e55, 0xea8, 0x1, 0x1);
        gbc.writeMem(0x7df, { 0x8, 0x8e, 0x9c });
        gbc.writeMem(0x9c8e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x92fc);
        EXPECT(gbc.pc(), 0x7e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c8e), 0xfc);
        EXPECT(gbc.readMem(0x9c8f), 0x92);
        // 08 01DF
        gbc.setState(0x623, 0x5de2, 0x16f0, 0x6d05, 0xf345, 0x7ac9, 0x1, 0x1);
        gbc.writeMem(0x623, { 0x8, 0x95, 0xaa });
        gbc.writeMem(0xaa95, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x5de2);
        EXPECT(gbc.pc(), 0x626);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa95), 0xe2);
        EXPECT(gbc.readMem(0xaa96), 0x5d);
        // 08 01E0
        gbc.setState(0xd6a0, 0xfb, 0x20a0, 0xf6a9, 0xdcff, 0x479a, 0x0, 0x0);
        gbc.writeMem(0x9b57, { 0x0, 0x0 });
        gbc.writeMem(0xd6a0, { 0x8, 0x57, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xfb);
        EXPECT(gbc.pc(), 0xd6a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b57), 0xfb);
        EXPECT(gbc.readMem(0x9b58), 0x0);
        EXPECT(gbc.readMem(0xd6a0), 0x8);
        EXPECT(gbc.readMem(0xd6a1), 0x57);
        EXPECT(gbc.readMem(0xd6a2), 0x9b);
        // 08 01E5
        gbc.setState(0x3e0c, 0xc8d9, 0xe330, 0xd9cf, 0xabcd, 0x7599, 0x1, 0x0);
        gbc.writeMem(0x3e0c, { 0x8, 0x9a, 0x9f });
        gbc.writeMem(0x9f9a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xc8d9);
        EXPECT(gbc.pc(), 0x3e0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f9a), 0xd9);
        EXPECT(gbc.readMem(0x9f9b), 0xc8);
        // 08 01E8
        gbc.setState(0xb7b4, 0xf631, 0xdee0, 0xf2e6, 0xea51, 0xbe55, 0x0, 0x0);
        gbc.writeMem(0xb7b4, { 0x8, 0x27, 0xd0 });
        gbc.writeMem(0xd027, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf631);
        EXPECT(gbc.pc(), 0xb7b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7b4), 0x8);
        EXPECT(gbc.readMem(0xb7b5), 0x27);
        EXPECT(gbc.readMem(0xb7b6), 0xd0);
        EXPECT(gbc.readMem(0xd027), 0x31);
        EXPECT(gbc.readMem(0xd028), 0xf6);
        // 08 01EA
        gbc.setState(0xbef9, 0x637f, 0xcb10, 0xeac3, 0xb8d2, 0x5c53, 0x0, 0x0);
        gbc.writeMem(0x8b24, { 0x0, 0x0 });
        gbc.writeMem(0xbef9, { 0x8, 0x24, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x637f);
        EXPECT(gbc.pc(), 0xbefc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b24), 0x7f);
        EXPECT(gbc.readMem(0x8b25), 0x63);
        EXPECT(gbc.readMem(0xbef9), 0x8);
        EXPECT(gbc.readMem(0xbefa), 0x24);
        EXPECT(gbc.readMem(0xbefb), 0x8b);
        // 08 01EB
        gbc.setState(0x1a56, 0x1b47, 0xbe40, 0xfa40, 0x26d6, 0x84fa, 0x0, 0x0);
        gbc.writeMem(0x1a56, { 0x8, 0xf6, 0xaa });
        gbc.writeMem(0xaaf6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x1b47);
        EXPECT(gbc.pc(), 0x1a59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaf6), 0x47);
        EXPECT(gbc.readMem(0xaaf7), 0x1b);
        // 08 01F1
        gbc.setState(0x5b3, 0x5d7f, 0xcb80, 0x6876, 0xa2d5, 0x6874, 0x0, 0x1);
        gbc.writeMem(0x5b3, { 0x8, 0x95, 0xae });
        gbc.writeMem(0xae95, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5d7f);
        EXPECT(gbc.pc(), 0x5b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae95), 0x7f);
        EXPECT(gbc.readMem(0xae96), 0x5d);
        // 08 01F2
        gbc.setState(0x9e9f, 0x94b0, 0x96d0, 0x91fd, 0x8101, 0x2d8f, 0x1, 0x0);
        gbc.writeMem(0x9e9f, { 0x8, 0xa4, 0xcb });
        gbc.writeMem(0xcba4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x94b0);
        EXPECT(gbc.pc(), 0x9ea2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e9f), 0x8);
        EXPECT(gbc.readMem(0x9ea0), 0xa4);
        EXPECT(gbc.readMem(0x9ea1), 0xcb);
        EXPECT(gbc.readMem(0xcba4), 0xb0);
        EXPECT(gbc.readMem(0xcba5), 0x94);
        // 08 01F4
        gbc.setState(0x1a5b, 0xe1f5, 0xe7d0, 0xda5c, 0x47d0, 0x4562, 0x1, 0x0);
        gbc.writeMem(0x1a5b, { 0x8, 0xae, 0xd9 });
        gbc.writeMem(0xd9ae, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe1f5);
        EXPECT(gbc.pc(), 0x1a5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9ae), 0xf5);
        EXPECT(gbc.readMem(0xd9af), 0xe1);
        // 08 01F5
        gbc.setState(0x73c8, 0x1cc5, 0xde70, 0x7ea3, 0xad44, 0xdf5f, 0x0, 0x1);
        gbc.writeMem(0x73c8, { 0x8, 0xa6, 0xb6 });
        gbc.writeMem(0xb6a6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x1cc5);
        EXPECT(gbc.pc(), 0x73cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6a6), 0xc5);
        EXPECT(gbc.readMem(0xb6a7), 0x1c);
        // 08 01F7
        gbc.setState(0x72a5, 0x3997, 0xac90, 0xb40f, 0xf908, 0xfe38, 0x0, 0x1);
        gbc.writeMem(0x72a5, { 0x8, 0x3f, 0x81 });
        gbc.writeMem(0x813f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3997);
        EXPECT(gbc.pc(), 0x72a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x813f), 0x97);
        EXPECT(gbc.readMem(0x8140), 0x39);
        // 08 01F8
        gbc.setState(0x29ba, 0x1818, 0xe870, 0x278a, 0xb87, 0x31fa, 0x1, 0x0);
        gbc.writeMem(0x29ba, { 0x8, 0x59, 0xdc });
        gbc.writeMem(0xdc59, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x1818);
        EXPECT(gbc.pc(), 0x29bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc59), 0x18);
        EXPECT(gbc.readMem(0xdc5a), 0x18);
        // 08 01FB
        gbc.setState(0x4781, 0x471a, 0x4750, 0x7125, 0x6437, 0xe5fe, 0x0, 0x0);
        gbc.writeMem(0x4781, { 0x8, 0x38, 0xdd });
        gbc.writeMem(0xdd38, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x471a);
        EXPECT(gbc.pc(), 0x4784);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd38), 0x1a);
        EXPECT(gbc.readMem(0xdd39), 0x47);
        // 08 01FC
        gbc.setState(0x936f, 0x15ed, 0xbdd0, 0x2122, 0x2c80, 0x8178, 0x0, 0x0);
        gbc.writeMem(0x936f, { 0x8, 0xae, 0xc3 });
        gbc.writeMem(0xc3ae, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x15ed);
        EXPECT(gbc.pc(), 0x9372);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x936f), 0x8);
        EXPECT(gbc.readMem(0x9370), 0xae);
        EXPECT(gbc.readMem(0x9371), 0xc3);
        EXPECT(gbc.readMem(0xc3ae), 0xed);
        EXPECT(gbc.readMem(0xc3af), 0x15);
        // 08 01FD
        gbc.setState(0xe5a4, 0xc777, 0x8b10, 0x7cbc, 0x3379, 0x6b93, 0x0, 0x0);
        gbc.writeMem(0xe5a4, { 0x8, 0x68, 0xee });
        gbc.writeMem(0xee68, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xc777);
        EXPECT(gbc.pc(), 0xe5a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5a4), 0x8);
        EXPECT(gbc.readMem(0xe5a5), 0x68);
        EXPECT(gbc.readMem(0xe5a6), 0xee);
        EXPECT(gbc.readMem(0xee68), 0x77);
        EXPECT(gbc.readMem(0xee69), 0xc7);
        // 08 0202
        gbc.setState(0x4353, 0x6cd4, 0x9490, 0x7c88, 0x52c5, 0xf65a, 0x1, 0x1);
        gbc.writeMem(0x4353, { 0x8, 0x8a, 0xfa });
        gbc.writeMem(0xfa8a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6cd4);
        EXPECT(gbc.pc(), 0x4356);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfa8a), 0xd4);
        EXPECT(gbc.readMem(0xfa8b), 0x6c);
        // 08 0208
        gbc.setState(0x1b12, 0x57df, 0x4840, 0xddee, 0xd81f, 0xa11f, 0x0, 0x0);
        gbc.writeMem(0x1b12, { 0x8, 0xdf, 0xd9 });
        gbc.writeMem(0xd9df, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x57df);
        EXPECT(gbc.pc(), 0x1b15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9df), 0xdf);
        EXPECT(gbc.readMem(0xd9e0), 0x57);
        // 08 020A
        gbc.setState(0x1f93, 0x780, 0x3da0, 0xce16, 0x4882, 0x8e2d, 0x1, 0x1);
        gbc.writeMem(0x1f93, { 0x8, 0x78, 0x9a });
        gbc.writeMem(0x9a78, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x780);
        EXPECT(gbc.pc(), 0x1f96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a78), 0x80);
        EXPECT(gbc.readMem(0x9a79), 0x7);
        // 08 020B
        gbc.setState(0x5b2f, 0x4656, 0xc400, 0x775e, 0x488e, 0xfd99, 0x0, 0x0);
        gbc.writeMem(0x5b2f, { 0x8, 0x47, 0xb8 });
        gbc.writeMem(0xb847, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4656);
        EXPECT(gbc.pc(), 0x5b32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb847), 0x56);
        EXPECT(gbc.readMem(0xb848), 0x46);
        // 08 020D
        gbc.setState(0x2df, 0x781c, 0x1630, 0x5f8a, 0xfa5b, 0x8273, 0x0, 0x1);
        gbc.writeMem(0x2df, { 0x8, 0x9c, 0x8f });
        gbc.writeMem(0x8f9c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x781c);
        EXPECT(gbc.pc(), 0x2e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f9c), 0x1c);
        EXPECT(gbc.readMem(0x8f9d), 0x78);
        // 08 0215
        gbc.setState(0x10d, 0xa08d, 0x5930, 0x63de, 0xf8f7, 0x9522, 0x1, 0x1);
        gbc.writeMem(0x10d, { 0x8, 0x35, 0xe8 });
        gbc.writeMem(0xe835, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xa08d);
        EXPECT(gbc.pc(), 0x110);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe835), 0x8d);
        EXPECT(gbc.readMem(0xe836), 0xa0);
        // 08 0218
        gbc.setState(0x578a, 0x4e02, 0xe1d0, 0x6b61, 0x551b, 0x4054, 0x1, 0x1);
        gbc.writeMem(0x578a, { 0x8, 0x15, 0xe1 });
        gbc.writeMem(0xe115, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4e02);
        EXPECT(gbc.pc(), 0x578d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe115), 0x2);
        EXPECT(gbc.readMem(0xe116), 0x4e);
        // 08 0219
        gbc.setState(0xb7d7, 0xc07e, 0x1600, 0x17c7, 0x2bf9, 0x45a9, 0x1, 0x1);
        gbc.writeMem(0xb7d7, { 0x8, 0x90, 0xea });
        gbc.writeMem(0xea90, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xc07e);
        EXPECT(gbc.pc(), 0xb7da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7d7), 0x8);
        EXPECT(gbc.readMem(0xb7d8), 0x90);
        EXPECT(gbc.readMem(0xb7d9), 0xea);
        EXPECT(gbc.readMem(0xea90), 0x7e);
        EXPECT(gbc.readMem(0xea91), 0xc0);
        // 08 021B
        gbc.setState(0xd0da, 0x2556, 0x5840, 0x549c, 0xdad7, 0x1099, 0x1, 0x0);
        gbc.writeMem(0xbf6d, { 0x0, 0x0 });
        gbc.writeMem(0xd0da, { 0x8, 0x6d, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2556);
        EXPECT(gbc.pc(), 0xd0dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf6d), 0x56);
        EXPECT(gbc.readMem(0xbf6e), 0x25);
        EXPECT(gbc.readMem(0xd0da), 0x8);
        EXPECT(gbc.readMem(0xd0db), 0x6d);
        EXPECT(gbc.readMem(0xd0dc), 0xbf);
        // 08 021C
        gbc.setState(0xa712, 0xe76c, 0x5e60, 0x4dc9, 0x7ccf, 0xce2b, 0x1, 0x0);
        gbc.writeMem(0xa22f, { 0x0, 0x0 });
        gbc.writeMem(0xa712, { 0x8, 0x2f, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe76c);
        EXPECT(gbc.pc(), 0xa715);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa22f), 0x6c);
        EXPECT(gbc.readMem(0xa230), 0xe7);
        EXPECT(gbc.readMem(0xa712), 0x8);
        EXPECT(gbc.readMem(0xa713), 0x2f);
        EXPECT(gbc.readMem(0xa714), 0xa2);
        // 08 021D
        gbc.setState(0x9e19, 0xcd43, 0xfe20, 0x85a6, 0x7364, 0x1eb6, 0x1, 0x0);
        gbc.writeMem(0x9e19, { 0x8, 0xf7, 0xf6 });
        gbc.writeMem(0xf6f7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xcd43);
        EXPECT(gbc.pc(), 0x9e1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e19), 0x8);
        EXPECT(gbc.readMem(0x9e1a), 0xf7);
        EXPECT(gbc.readMem(0x9e1b), 0xf6);
        EXPECT(gbc.readMem(0xf6f7), 0x43);
        EXPECT(gbc.readMem(0xf6f8), 0xcd);
        // 08 021F
        gbc.setState(0x7e61, 0xe3ca, 0x71f0, 0x7bb5, 0x1c35, 0x789f, 0x0, 0x0);
        gbc.writeMem(0x7e61, { 0x8, 0x96, 0xaf });
        gbc.writeMem(0xaf96, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe3ca);
        EXPECT(gbc.pc(), 0x7e64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf96), 0xca);
        EXPECT(gbc.readMem(0xaf97), 0xe3);
        // 08 0220
        gbc.setState(0x469b, 0x316c, 0x47d0, 0x7091, 0x2568, 0x16eb, 0x1, 0x0);
        gbc.writeMem(0x469b, { 0x8, 0xbe, 0xc6 });
        gbc.writeMem(0xc6be, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x316c);
        EXPECT(gbc.pc(), 0x469e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6be), 0x6c);
        EXPECT(gbc.readMem(0xc6bf), 0x31);
        // 08 0221
        gbc.setState(0x10d0, 0x8959, 0x4b20, 0xfa4d, 0x501c, 0x4693, 0x1, 0x1);
        gbc.writeMem(0x10d0, { 0x8, 0x6d, 0x86 });
        gbc.writeMem(0x866d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8959);
        EXPECT(gbc.pc(), 0x10d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x866d), 0x59);
        EXPECT(gbc.readMem(0x866e), 0x89);
        // 08 0222
        gbc.setState(0x1070, 0xd810, 0xe900, 0xc151, 0x524b, 0xa122, 0x0, 0x0);
        gbc.writeMem(0x1070, { 0x8, 0xea, 0xc1 });
        gbc.writeMem(0xc1ea, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd810);
        EXPECT(gbc.pc(), 0x1073);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1ea), 0x10);
        EXPECT(gbc.readMem(0xc1eb), 0xd8);
        // 08 0223
        gbc.setState(0xb6e0, 0x299e, 0x4550, 0xafe0, 0xee32, 0x1b2, 0x0, 0x0);
        gbc.writeMem(0xa551, { 0x0, 0x0 });
        gbc.writeMem(0xb6e0, { 0x8, 0x51, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x299e);
        EXPECT(gbc.pc(), 0xb6e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa551), 0x9e);
        EXPECT(gbc.readMem(0xa552), 0x29);
        EXPECT(gbc.readMem(0xb6e0), 0x8);
        EXPECT(gbc.readMem(0xb6e1), 0x51);
        EXPECT(gbc.readMem(0xb6e2), 0xa5);
        // 08 0224
        gbc.setState(0x63b6, 0x86b1, 0x2240, 0x2159, 0xd10f, 0x83e8, 0x0, 0x0);
        gbc.writeMem(0x63b6, { 0x8, 0x38, 0xc7 });
        gbc.writeMem(0xc738, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x86b1);
        EXPECT(gbc.pc(), 0x63b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc738), 0xb1);
        EXPECT(gbc.readMem(0xc739), 0x86);
        // 08 0227
        gbc.setState(0x5cb4, 0x5630, 0x8150, 0x1120, 0x1c8c, 0x3279, 0x0, 0x1);
        gbc.writeMem(0x5cb4, { 0x8, 0xce, 0xa2 });
        gbc.writeMem(0xa2ce, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x5630);
        EXPECT(gbc.pc(), 0x5cb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2ce), 0x30);
        EXPECT(gbc.readMem(0xa2cf), 0x56);
        // 08 0228
        gbc.setState(0x5a6f, 0xb75b, 0x8350, 0x6e65, 0x6c98, 0x90c9, 0x0, 0x1);
        gbc.writeMem(0x5a6f, { 0x8, 0x7, 0xeb });
        gbc.writeMem(0xeb07, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb75b);
        EXPECT(gbc.pc(), 0x5a72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb07), 0x5b);
        EXPECT(gbc.readMem(0xeb08), 0xb7);
        // 08 0229
        gbc.setState(0xab02, 0x13a4, 0x89d0, 0x3b3b, 0xd112, 0x6461, 0x0, 0x1);
        gbc.writeMem(0xa1f4, { 0x0, 0x0 });
        gbc.writeMem(0xab02, { 0x8, 0xf4, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x13a4);
        EXPECT(gbc.pc(), 0xab05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1f4), 0xa4);
        EXPECT(gbc.readMem(0xa1f5), 0x13);
        EXPECT(gbc.readMem(0xab02), 0x8);
        EXPECT(gbc.readMem(0xab03), 0xf4);
        EXPECT(gbc.readMem(0xab04), 0xa1);
        // 08 022B
        gbc.setState(0x49bb, 0x5361, 0x50, 0xe7, 0x6481, 0x7446, 0x1, 0x1);
        gbc.writeMem(0x49bb, { 0x8, 0x6b, 0xdc });
        gbc.writeMem(0xdc6b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x5361);
        EXPECT(gbc.pc(), 0x49be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc6b), 0x61);
        EXPECT(gbc.readMem(0xdc6c), 0x53);
        // 08 0230
        gbc.setState(0xe174, 0xd695, 0x2570, 0x5e25, 0xdbb1, 0x5d6f, 0x0, 0x0);
        gbc.writeMem(0xdf70, { 0x0, 0x0 });
        gbc.writeMem(0xe174, { 0x8, 0x70, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xd695);
        EXPECT(gbc.pc(), 0xe177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf70), 0x95);
        EXPECT(gbc.readMem(0xdf71), 0xd6);
        EXPECT(gbc.readMem(0xe174), 0x8);
        EXPECT(gbc.readMem(0xe175), 0x70);
        EXPECT(gbc.readMem(0xe176), 0xdf);
        // 08 0231
        gbc.setState(0x1dd0, 0xf6d3, 0x4530, 0x58d8, 0xd49b, 0x21e8, 0x0, 0x1);
        gbc.writeMem(0x1dd0, { 0x8, 0x34, 0x8b });
        gbc.writeMem(0x8b34, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xf6d3);
        EXPECT(gbc.pc(), 0x1dd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b34), 0xd3);
        EXPECT(gbc.readMem(0x8b35), 0xf6);
        // 08 0235
        gbc.setState(0xe397, 0xa7b, 0xfec0, 0xc7b5, 0x3af4, 0xd719, 0x1, 0x1);
        gbc.writeMem(0xa986, { 0x0, 0x0 });
        gbc.writeMem(0xe397, { 0x8, 0x86, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa7b);
        EXPECT(gbc.pc(), 0xe39a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa986), 0x7b);
        EXPECT(gbc.readMem(0xa987), 0xa);
        EXPECT(gbc.readMem(0xe397), 0x8);
        EXPECT(gbc.readMem(0xe398), 0x86);
        EXPECT(gbc.readMem(0xe399), 0xa9);
        // 08 0236
        gbc.setState(0xd8af, 0x3e5d, 0x3150, 0x5531, 0x68ae, 0x4769, 0x1, 0x0);
        gbc.writeMem(0xd8af, { 0x8, 0xaf, 0xe7 });
        gbc.writeMem(0xe7af, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3e5d);
        EXPECT(gbc.pc(), 0xd8b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8af), 0x8);
        EXPECT(gbc.readMem(0xd8b0), 0xaf);
        EXPECT(gbc.readMem(0xd8b1), 0xe7);
        EXPECT(gbc.readMem(0xe7af), 0x5d);
        EXPECT(gbc.readMem(0xe7b0), 0x3e);
        // 08 0237
        gbc.setState(0xaf83, 0x1e9a, 0xc460, 0xe14a, 0xeaa0, 0x2a89, 0x1, 0x0);
        gbc.writeMem(0xaf83, { 0x8, 0xf9, 0xe9 });
        gbc.writeMem(0xe9f9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1e9a);
        EXPECT(gbc.pc(), 0xaf86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf83), 0x8);
        EXPECT(gbc.readMem(0xaf84), 0xf9);
        EXPECT(gbc.readMem(0xaf85), 0xe9);
        EXPECT(gbc.readMem(0xe9f9), 0x9a);
        EXPECT(gbc.readMem(0xe9fa), 0x1e);
        // 08 0239
        gbc.setState(0x3201, 0xcb72, 0x68c0, 0xe7b3, 0x1505, 0x41a1, 0x0, 0x0);
        gbc.writeMem(0x3201, { 0x8, 0x7d, 0xc4 });
        gbc.writeMem(0xc47d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xcb72);
        EXPECT(gbc.pc(), 0x3204);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc47d), 0x72);
        EXPECT(gbc.readMem(0xc47e), 0xcb);
        // 08 023C
        gbc.setState(0x7be5, 0x4a52, 0x4d20, 0x111b, 0xaaf5, 0x16fa, 0x0, 0x0);
        gbc.writeMem(0x7be5, { 0x8, 0x5f, 0xc0 });
        gbc.writeMem(0xc05f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x4a52);
        EXPECT(gbc.pc(), 0x7be8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc05f), 0x52);
        EXPECT(gbc.readMem(0xc060), 0x4a);
        // 08 023D
        gbc.setState(0x2ea3, 0x577c, 0x8100, 0xb235, 0x3091, 0xcb24, 0x1, 0x0);
        gbc.writeMem(0x2ea3, { 0x8, 0x21, 0xdf });
        gbc.writeMem(0xdf21, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x577c);
        EXPECT(gbc.pc(), 0x2ea6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf21), 0x7c);
        EXPECT(gbc.readMem(0xdf22), 0x57);
        // 08 023F
        gbc.setState(0xe9f4, 0xeefd, 0x5a40, 0xafbc, 0xddf6, 0x6d96, 0x0, 0x0);
        gbc.writeMem(0xd448, { 0x0, 0x0 });
        gbc.writeMem(0xe9f4, { 0x8, 0x48, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xeefd);
        EXPECT(gbc.pc(), 0xe9f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd448), 0xfd);
        EXPECT(gbc.readMem(0xd449), 0xee);
        EXPECT(gbc.readMem(0xe9f4), 0x8);
        EXPECT(gbc.readMem(0xe9f5), 0x48);
        EXPECT(gbc.readMem(0xe9f6), 0xd4);
        // 08 0240
        gbc.setState(0xe163, 0x2d8c, 0x4750, 0xb373, 0x89c0, 0xd955, 0x1, 0x1);
        gbc.writeMem(0xb7ed, { 0x0, 0x0 });
        gbc.writeMem(0xe163, { 0x8, 0xed, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x2d8c);
        EXPECT(gbc.pc(), 0xe166);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7ed), 0x8c);
        EXPECT(gbc.readMem(0xb7ee), 0x2d);
        EXPECT(gbc.readMem(0xe163), 0x8);
        EXPECT(gbc.readMem(0xe164), 0xed);
        EXPECT(gbc.readMem(0xe165), 0xb7);
        // 08 0242
        gbc.setState(0xd75a, 0x5ce8, 0x9050, 0x3135, 0x84db, 0x4167, 0x1, 0x1);
        gbc.writeMem(0xd75a, { 0x8, 0x1d, 0xda });
        gbc.writeMem(0xda1d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x5ce8);
        EXPECT(gbc.pc(), 0xd75d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd75a), 0x8);
        EXPECT(gbc.readMem(0xd75b), 0x1d);
        EXPECT(gbc.readMem(0xd75c), 0xda);
        EXPECT(gbc.readMem(0xda1d), 0xe8);
        EXPECT(gbc.readMem(0xda1e), 0x5c);
        // 08 0243
        gbc.setState(0xc83b, 0x8874, 0x3160, 0xd83a, 0x99c2, 0x9474, 0x0, 0x0);
        gbc.writeMem(0x88a8, { 0x0, 0x0 });
        gbc.writeMem(0xc83b, { 0x8, 0xa8, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8874);
        EXPECT(gbc.pc(), 0xc83e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88a8), 0x74);
        EXPECT(gbc.readMem(0x88a9), 0x88);
        EXPECT(gbc.readMem(0xc83b), 0x8);
        EXPECT(gbc.readMem(0xc83c), 0xa8);
        EXPECT(gbc.readMem(0xc83d), 0x88);
        // 08 0246
        gbc.setState(0xd9f5, 0x58f2, 0xba0, 0xd4c0, 0x5244, 0xb294, 0x1, 0x0);
        gbc.writeMem(0x9273, { 0x0, 0x0 });
        gbc.writeMem(0xd9f5, { 0x8, 0x73, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x58f2);
        EXPECT(gbc.pc(), 0xd9f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9273), 0xf2);
        EXPECT(gbc.readMem(0x9274), 0x58);
        EXPECT(gbc.readMem(0xd9f5), 0x8);
        EXPECT(gbc.readMem(0xd9f6), 0x73);
        EXPECT(gbc.readMem(0xd9f7), 0x92);
        // 08 0247
        gbc.setState(0x9552, 0x49ce, 0xd210, 0xfdce, 0x617c, 0x8514, 0x1, 0x1);
        gbc.writeMem(0x9552, { 0x8, 0xb6, 0x95 });
        gbc.writeMem(0x95b6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x49ce);
        EXPECT(gbc.pc(), 0x9555);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9552), 0x8);
        EXPECT(gbc.readMem(0x9553), 0xb6);
        EXPECT(gbc.readMem(0x9554), 0x95);
        EXPECT(gbc.readMem(0x95b6), 0xce);
        EXPECT(gbc.readMem(0x95b7), 0x49);
        // 08 0248
        gbc.setState(0x6e37, 0x9339, 0x19d0, 0x3b1b, 0x6a5, 0xce21, 0x0, 0x1);
        gbc.writeMem(0x6e37, { 0x8, 0x64, 0x8c });
        gbc.writeMem(0x8c64, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x9339);
        EXPECT(gbc.pc(), 0x6e3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c64), 0x39);
        EXPECT(gbc.readMem(0x8c65), 0x93);
        // 08 0249
        gbc.setState(0xbcf4, 0x253e, 0x9520, 0x996f, 0x6f28, 0x7893, 0x1, 0x1);
        gbc.writeMem(0xbcf4, { 0x8, 0x3f, 0xda });
        gbc.writeMem(0xda3f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x253e);
        EXPECT(gbc.pc(), 0xbcf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcf4), 0x8);
        EXPECT(gbc.readMem(0xbcf5), 0x3f);
        EXPECT(gbc.readMem(0xbcf6), 0xda);
        EXPECT(gbc.readMem(0xda3f), 0x3e);
        EXPECT(gbc.readMem(0xda40), 0x25);
        // 08 024A
        gbc.setState(0x4f3e, 0x9825, 0x7970, 0x70a5, 0x3406, 0x3ad8, 0x1, 0x0);
        gbc.writeMem(0x4f3e, { 0x8, 0x46, 0x8c });
        gbc.writeMem(0x8c46, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x9825);
        EXPECT(gbc.pc(), 0x4f41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c46), 0x25);
        EXPECT(gbc.readMem(0x8c47), 0x98);
        // 08 024B
        gbc.setState(0x15fc, 0xc040, 0x87e0, 0xc32a, 0x8285, 0xcbe7, 0x1, 0x0);
        gbc.writeMem(0x15fc, { 0x8, 0xac, 0xd9 });
        gbc.writeMem(0xd9ac, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc040);
        EXPECT(gbc.pc(), 0x15ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9ac), 0x40);
        EXPECT(gbc.readMem(0xd9ad), 0xc0);
        // 08 024D
        gbc.setState(0xde95, 0x2c96, 0x17a0, 0xc74a, 0x733e, 0x1582, 0x0, 0x1);
        gbc.writeMem(0x9bb6, { 0x0, 0x0 });
        gbc.writeMem(0xde95, { 0x8, 0xb6, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x2c96);
        EXPECT(gbc.pc(), 0xde98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bb6), 0x96);
        EXPECT(gbc.readMem(0x9bb7), 0x2c);
        EXPECT(gbc.readMem(0xde95), 0x8);
        EXPECT(gbc.readMem(0xde96), 0xb6);
        EXPECT(gbc.readMem(0xde97), 0x9b);
        // 08 024E
        gbc.setState(0x8bb7, 0x8ae2, 0xf3c0, 0xd939, 0xdc69, 0xe5ec, 0x1, 0x0);
        gbc.writeMem(0x8bb7, { 0x8, 0xb3, 0xad });
        gbc.writeMem(0xadb3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8ae2);
        EXPECT(gbc.pc(), 0x8bba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bb7), 0x8);
        EXPECT(gbc.readMem(0x8bb8), 0xb3);
        EXPECT(gbc.readMem(0x8bb9), 0xad);
        EXPECT(gbc.readMem(0xadb3), 0xe2);
        EXPECT(gbc.readMem(0xadb4), 0x8a);
        // 08 0251
        gbc.setState(0xd480, 0x6e4c, 0x33e0, 0xf42a, 0xc2f1, 0xe0c6, 0x0, 0x1);
        gbc.writeMem(0xd01b, { 0x0, 0x0 });
        gbc.writeMem(0xd480, { 0x8, 0x1b, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x6e4c);
        EXPECT(gbc.pc(), 0xd483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd01b), 0x4c);
        EXPECT(gbc.readMem(0xd01c), 0x6e);
        EXPECT(gbc.readMem(0xd480), 0x8);
        EXPECT(gbc.readMem(0xd481), 0x1b);
        EXPECT(gbc.readMem(0xd482), 0xd0);
        // 08 0254
        gbc.setState(0x4e40, 0x4d5e, 0x8020, 0xd72c, 0x5e0a, 0xf383, 0x1, 0x0);
        gbc.writeMem(0x4e40, { 0x8, 0x2e, 0x89 });
        gbc.writeMem(0x892e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4d5e);
        EXPECT(gbc.pc(), 0x4e43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x892e), 0x5e);
        EXPECT(gbc.readMem(0x892f), 0x4d);
        // 08 0255
        gbc.setState(0x2ba6, 0x378a, 0x1950, 0x171c, 0x7806, 0xf860, 0x1, 0x0);
        gbc.writeMem(0x2ba6, { 0x8, 0x95, 0xb9 });
        gbc.writeMem(0xb995, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x378a);
        EXPECT(gbc.pc(), 0x2ba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb995), 0x8a);
        EXPECT(gbc.readMem(0xb996), 0x37);
        // 08 025B
        gbc.setState(0x6785, 0x48f7, 0x79d0, 0x1f9a, 0xa52f, 0xb1ae, 0x1, 0x1);
        gbc.writeMem(0x6785, { 0x8, 0xb9, 0x8d });
        gbc.writeMem(0x8db9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x48f7);
        EXPECT(gbc.pc(), 0x6788);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8db9), 0xf7);
        EXPECT(gbc.readMem(0x8dba), 0x48);
        // 08 025C
        gbc.setState(0xaa62, 0xd3b3, 0xedd0, 0xf2b6, 0xeeb, 0xab3b, 0x1, 0x1);
        gbc.writeMem(0xaa62, { 0x8, 0xde, 0xdd });
        gbc.writeMem(0xddde, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xd3b3);
        EXPECT(gbc.pc(), 0xaa65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa62), 0x8);
        EXPECT(gbc.readMem(0xaa63), 0xde);
        EXPECT(gbc.readMem(0xaa64), 0xdd);
        EXPECT(gbc.readMem(0xddde), 0xb3);
        EXPECT(gbc.readMem(0xdddf), 0xd3);
        // 08 025D
        gbc.setState(0xa6d1, 0x818e, 0x5450, 0x6395, 0x8d3c, 0xb97e, 0x0, 0x1);
        gbc.writeMem(0xa6d1, { 0x8, 0xcf, 0xb5 });
        gbc.writeMem(0xb5cf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x818e);
        EXPECT(gbc.pc(), 0xa6d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6d1), 0x8);
        EXPECT(gbc.readMem(0xa6d2), 0xcf);
        EXPECT(gbc.readMem(0xa6d3), 0xb5);
        EXPECT(gbc.readMem(0xb5cf), 0x8e);
        EXPECT(gbc.readMem(0xb5d0), 0x81);
        // 08 0261
        gbc.setState(0x1929, 0xcad2, 0x69e0, 0xbb06, 0xae67, 0x6397, 0x0, 0x1);
        gbc.writeMem(0x1929, { 0x8, 0xb0, 0xa2 });
        gbc.writeMem(0xa2b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xcad2);
        EXPECT(gbc.pc(), 0x192c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2b0), 0xd2);
        EXPECT(gbc.readMem(0xa2b1), 0xca);
        // 08 0263
        gbc.setState(0x57f2, 0x564a, 0x1ea0, 0x76d4, 0xd898, 0xc308, 0x0, 0x0);
        gbc.writeMem(0x57f2, { 0x8, 0xf1, 0x86 });
        gbc.writeMem(0x86f1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x564a);
        EXPECT(gbc.pc(), 0x57f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86f1), 0x4a);
        EXPECT(gbc.readMem(0x86f2), 0x56);
        // 08 0264
        gbc.setState(0xd88a, 0x2f46, 0xd3a0, 0xc32b, 0xde9c, 0x5596, 0x1, 0x1);
        gbc.writeMem(0x8faf, { 0x0, 0x0 });
        gbc.writeMem(0xd88a, { 0x8, 0xaf, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2f46);
        EXPECT(gbc.pc(), 0xd88d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8faf), 0x46);
        EXPECT(gbc.readMem(0x8fb0), 0x2f);
        EXPECT(gbc.readMem(0xd88a), 0x8);
        EXPECT(gbc.readMem(0xd88b), 0xaf);
        EXPECT(gbc.readMem(0xd88c), 0x8f);
        // 08 0265
        gbc.setState(0xaa4c, 0x1e6a, 0xc3d0, 0x3692, 0x68ea, 0x5a86, 0x1, 0x0);
        gbc.writeMem(0xaa4c, { 0x8, 0x89, 0xca });
        gbc.writeMem(0xca89, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1e6a);
        EXPECT(gbc.pc(), 0xaa4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa4c), 0x8);
        EXPECT(gbc.readMem(0xaa4d), 0x89);
        EXPECT(gbc.readMem(0xaa4e), 0xca);
        EXPECT(gbc.readMem(0xca89), 0x6a);
        EXPECT(gbc.readMem(0xca8a), 0x1e);
        // 08 0269
        gbc.setState(0x2a65, 0xa42b, 0x3ad0, 0xb254, 0x51ee, 0xccea, 0x0, 0x1);
        gbc.writeMem(0x2a65, { 0x8, 0x26, 0xb5 });
        gbc.writeMem(0xb526, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa42b);
        EXPECT(gbc.pc(), 0x2a68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb526), 0x2b);
        EXPECT(gbc.readMem(0xb527), 0xa4);
        // 08 026A
        gbc.setState(0xa602, 0x35ae, 0x9980, 0xd288, 0x1216, 0x2d6c, 0x0, 0x0);
        gbc.writeMem(0x8fdc, { 0x0, 0x0 });
        gbc.writeMem(0xa602, { 0x8, 0xdc, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x35ae);
        EXPECT(gbc.pc(), 0xa605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fdc), 0xae);
        EXPECT(gbc.readMem(0x8fdd), 0x35);
        EXPECT(gbc.readMem(0xa602), 0x8);
        EXPECT(gbc.readMem(0xa603), 0xdc);
        EXPECT(gbc.readMem(0xa604), 0x8f);
        // 08 026B
        gbc.setState(0xa162, 0xe589, 0xaea0, 0xa88a, 0xadb9, 0xcde6, 0x1, 0x0);
        gbc.writeMem(0x9a87, { 0x0, 0x0 });
        gbc.writeMem(0xa162, { 0x8, 0x87, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe589);
        EXPECT(gbc.pc(), 0xa165);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a87), 0x89);
        EXPECT(gbc.readMem(0x9a88), 0xe5);
        EXPECT(gbc.readMem(0xa162), 0x8);
        EXPECT(gbc.readMem(0xa163), 0x87);
        EXPECT(gbc.readMem(0xa164), 0x9a);
        // 08 026F
        gbc.setState(0x361a, 0x837e, 0xf9d0, 0x6d9f, 0xcab8, 0x33dd, 0x1, 0x1);
        gbc.writeMem(0x361a, { 0x8, 0x9d, 0xf2 });
        gbc.writeMem(0xf29d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x837e);
        EXPECT(gbc.pc(), 0x361d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf29d), 0x7e);
        EXPECT(gbc.readMem(0xf29e), 0x83);
        // 08 0270
        gbc.setState(0x71ff, 0xd923, 0x9200, 0xb772, 0x669d, 0xb0d5, 0x1, 0x1);
        gbc.writeMem(0x71ff, { 0x8, 0x43, 0xdd });
        gbc.writeMem(0xdd43, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xd923);
        EXPECT(gbc.pc(), 0x7202);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd43), 0x23);
        EXPECT(gbc.readMem(0xdd44), 0xd9);
        // 08 0272
        gbc.setState(0x6666, 0x7dba, 0x4800, 0x5b91, 0xe573, 0xe7cb, 0x0, 0x0);
        gbc.writeMem(0x6666, { 0x8, 0xe6, 0xf7 });
        gbc.writeMem(0xf7e6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x7dba);
        EXPECT(gbc.pc(), 0x6669);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf7e6), 0xba);
        EXPECT(gbc.readMem(0xf7e7), 0x7d);
        // 08 0273
        gbc.setState(0xe32d, 0x4d72, 0x9410, 0x67b7, 0xdb52, 0xc9c0, 0x1, 0x1);
        gbc.writeMem(0x9ad7, { 0x0, 0x0 });
        gbc.writeMem(0xe32d, { 0x8, 0xd7, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4d72);
        EXPECT(gbc.pc(), 0xe330);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ad7), 0x72);
        EXPECT(gbc.readMem(0x9ad8), 0x4d);
        EXPECT(gbc.readMem(0xe32d), 0x8);
        EXPECT(gbc.readMem(0xe32e), 0xd7);
        EXPECT(gbc.readMem(0xe32f), 0x9a);
        // 08 0277
        gbc.setState(0xa302, 0xf2b8, 0x7360, 0x36b, 0x6e12, 0x41ae, 0x1, 0x0);
        gbc.writeMem(0x952b, { 0x0, 0x0 });
        gbc.writeMem(0xa302, { 0x8, 0x2b, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf2b8);
        EXPECT(gbc.pc(), 0xa305);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x952b), 0xb8);
        EXPECT(gbc.readMem(0x952c), 0xf2);
        EXPECT(gbc.readMem(0xa302), 0x8);
        EXPECT(gbc.readMem(0xa303), 0x2b);
        EXPECT(gbc.readMem(0xa304), 0x95);
        // 08 0280
        gbc.setState(0xcfe2, 0xf98f, 0xd800, 0xb40e, 0x63ea, 0xb5cc, 0x0, 0x0);
        gbc.writeMem(0xcfe2, { 0x8, 0xfa, 0xe5 });
        gbc.writeMem(0xe5fa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf98f);
        EXPECT(gbc.pc(), 0xcfe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfe2), 0x8);
        EXPECT(gbc.readMem(0xcfe3), 0xfa);
        EXPECT(gbc.readMem(0xcfe4), 0xe5);
        EXPECT(gbc.readMem(0xe5fa), 0x8f);
        EXPECT(gbc.readMem(0xe5fb), 0xf9);
        // 08 0281
        gbc.setState(0x86b1, 0xbc2a, 0x450, 0x74f0, 0x7eb2, 0x52bc, 0x0, 0x1);
        gbc.writeMem(0x86b1, { 0x8, 0xb7, 0xc4 });
        gbc.writeMem(0xc4b7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xbc2a);
        EXPECT(gbc.pc(), 0x86b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86b1), 0x8);
        EXPECT(gbc.readMem(0x86b2), 0xb7);
        EXPECT(gbc.readMem(0x86b3), 0xc4);
        EXPECT(gbc.readMem(0xc4b7), 0x2a);
        EXPECT(gbc.readMem(0xc4b8), 0xbc);
        // 08 0283
        gbc.setState(0xd66d, 0x6537, 0x69f0, 0xfaff, 0x9e94, 0xb0ac, 0x0, 0x0);
        gbc.writeMem(0x8634, { 0x0, 0x0 });
        gbc.writeMem(0xd66d, { 0x8, 0x34, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6537);
        EXPECT(gbc.pc(), 0xd670);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8634), 0x37);
        EXPECT(gbc.readMem(0x8635), 0x65);
        EXPECT(gbc.readMem(0xd66d), 0x8);
        EXPECT(gbc.readMem(0xd66e), 0x34);
        EXPECT(gbc.readMem(0xd66f), 0x86);
        // 08 0285
        gbc.setState(0x99d9, 0x464e, 0x38c0, 0xd68f, 0xca25, 0xd806, 0x0, 0x1);
        gbc.writeMem(0x99d9, { 0x8, 0xaa, 0x9c });
        gbc.writeMem(0x9caa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x464e);
        EXPECT(gbc.pc(), 0x99dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99d9), 0x8);
        EXPECT(gbc.readMem(0x99da), 0xaa);
        EXPECT(gbc.readMem(0x99db), 0x9c);
        EXPECT(gbc.readMem(0x9caa), 0x4e);
        EXPECT(gbc.readMem(0x9cab), 0x46);
        // 08 0288
        gbc.setState(0x1c6d, 0xef4c, 0xf4d0, 0x6760, 0x49f3, 0xb970, 0x1, 0x0);
        gbc.writeMem(0x1c6d, { 0x8, 0xce, 0xbc });
        gbc.writeMem(0xbcce, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xef4c);
        EXPECT(gbc.pc(), 0x1c70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcce), 0x4c);
        EXPECT(gbc.readMem(0xbccf), 0xef);
        // 08 028A
        gbc.setState(0xaf88, 0xa1a9, 0x5160, 0xe63f, 0x5380, 0xabb7, 0x1, 0x1);
        gbc.writeMem(0xaf88, { 0x8, 0x6b, 0xd3 });
        gbc.writeMem(0xd36b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa1a9);
        EXPECT(gbc.pc(), 0xaf8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf88), 0x8);
        EXPECT(gbc.readMem(0xaf89), 0x6b);
        EXPECT(gbc.readMem(0xaf8a), 0xd3);
        EXPECT(gbc.readMem(0xd36b), 0xa9);
        EXPECT(gbc.readMem(0xd36c), 0xa1);
        // 08 028B
        gbc.setState(0x1739, 0x8dd3, 0xaf00, 0x9a17, 0x439e, 0x3047, 0x1, 0x0);
        gbc.writeMem(0x1739, { 0x8, 0xb7, 0xbe });
        gbc.writeMem(0xbeb7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x8dd3);
        EXPECT(gbc.pc(), 0x173c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeb7), 0xd3);
        EXPECT(gbc.readMem(0xbeb8), 0x8d);
        // 08 028C
        gbc.setState(0x99a4, 0x3de4, 0x93a0, 0x484b, 0xbefd, 0x9f3e, 0x0, 0x0);
        gbc.writeMem(0x99a4, { 0x8, 0xf8, 0xe8 });
        gbc.writeMem(0xe8f8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x3de4);
        EXPECT(gbc.pc(), 0x99a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99a4), 0x8);
        EXPECT(gbc.readMem(0x99a5), 0xf8);
        EXPECT(gbc.readMem(0x99a6), 0xe8);
        EXPECT(gbc.readMem(0xe8f8), 0xe4);
        EXPECT(gbc.readMem(0xe8f9), 0x3d);
        // 08 028F
        gbc.setState(0x9ed1, 0x1c4, 0xb940, 0xf29a, 0xa925, 0x2f2b, 0x1, 0x0);
        gbc.writeMem(0x9ed1, { 0x8, 0x92, 0xf5 });
        gbc.writeMem(0xf592, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1c4);
        EXPECT(gbc.pc(), 0x9ed4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ed1), 0x8);
        EXPECT(gbc.readMem(0x9ed2), 0x92);
        EXPECT(gbc.readMem(0x9ed3), 0xf5);
        EXPECT(gbc.readMem(0xf592), 0xc4);
        EXPECT(gbc.readMem(0xf593), 0x1);
        // 08 0290
        gbc.setState(0x5961, 0x5a68, 0x3160, 0x799e, 0x47ee, 0xed2e, 0x0, 0x0);
        gbc.writeMem(0x5961, { 0x8, 0x89, 0x9f });
        gbc.writeMem(0x9f89, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x5a68);
        EXPECT(gbc.pc(), 0x5964);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f89), 0x68);
        EXPECT(gbc.readMem(0x9f8a), 0x5a);
        // 08 0291
        gbc.setState(0xe4f0, 0xbd50, 0x7050, 0xfe40, 0x4126, 0xbbf3, 0x0, 0x1);
        gbc.writeMem(0xb832, { 0x0, 0x0 });
        gbc.writeMem(0xe4f0, { 0x8, 0x32, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xbd50);
        EXPECT(gbc.pc(), 0xe4f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb832), 0x50);
        EXPECT(gbc.readMem(0xb833), 0xbd);
        EXPECT(gbc.readMem(0xe4f0), 0x8);
        EXPECT(gbc.readMem(0xe4f1), 0x32);
        EXPECT(gbc.readMem(0xe4f2), 0xb8);
        // 08 0292
        gbc.setState(0x8978, 0x7563, 0x5a0, 0x6320, 0x8d0e, 0x5432, 0x1, 0x0);
        gbc.writeMem(0x8978, { 0x8, 0x8e, 0xda });
        gbc.writeMem(0xda8e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7563);
        EXPECT(gbc.pc(), 0x897b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8978), 0x8);
        EXPECT(gbc.readMem(0x8979), 0x8e);
        EXPECT(gbc.readMem(0x897a), 0xda);
        EXPECT(gbc.readMem(0xda8e), 0x63);
        EXPECT(gbc.readMem(0xda8f), 0x75);
        // 08 0293
        gbc.setState(0xa8e3, 0xb64e, 0x3070, 0x3ec7, 0xaf78, 0x1d8e, 0x1, 0x0);
        gbc.writeMem(0x80c8, { 0x0, 0x0 });
        gbc.writeMem(0xa8e3, { 0x8, 0xc8, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb64e);
        EXPECT(gbc.pc(), 0xa8e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80c8), 0x4e);
        EXPECT(gbc.readMem(0x80c9), 0xb6);
        EXPECT(gbc.readMem(0xa8e3), 0x8);
        EXPECT(gbc.readMem(0xa8e4), 0xc8);
        EXPECT(gbc.readMem(0xa8e5), 0x80);
        // 08 029D
        gbc.setState(0x2fab, 0xe3cd, 0x2f00, 0xd9b0, 0x1869, 0xeb92, 0x0, 0x0);
        gbc.writeMem(0x2fab, { 0x8, 0xeb, 0xb1 });
        gbc.writeMem(0xb1eb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe3cd);
        EXPECT(gbc.pc(), 0x2fae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1eb), 0xcd);
        EXPECT(gbc.readMem(0xb1ec), 0xe3);
        // 08 02A0
        gbc.setState(0x5268, 0x33bc, 0xe700, 0xe2b1, 0xe8f5, 0xba02, 0x0, 0x1);
        gbc.writeMem(0x5268, { 0x8, 0x4b, 0xd1 });
        gbc.writeMem(0xd14b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x33bc);
        EXPECT(gbc.pc(), 0x526b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd14b), 0xbc);
        EXPECT(gbc.readMem(0xd14c), 0x33);
        // 08 02A1
        gbc.setState(0x4e42, 0xe297, 0x1670, 0x364e, 0x8ba3, 0x2b12, 0x1, 0x0);
        gbc.writeMem(0x4e42, { 0x8, 0xde, 0xd1 });
        gbc.writeMem(0xd1de, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe297);
        EXPECT(gbc.pc(), 0x4e45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1de), 0x97);
        EXPECT(gbc.readMem(0xd1df), 0xe2);
        // 08 02A6
        gbc.setState(0xed59, 0xadc5, 0x8080, 0xa403, 0xdbaf, 0x357f, 0x1, 0x0);
        gbc.writeMem(0xed59, { 0x8, 0x57, 0xef });
        gbc.writeMem(0xef57, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xadc5);
        EXPECT(gbc.pc(), 0xed5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed59), 0x8);
        EXPECT(gbc.readMem(0xed5a), 0x57);
        EXPECT(gbc.readMem(0xed5b), 0xef);
        EXPECT(gbc.readMem(0xef57), 0xc5);
        EXPECT(gbc.readMem(0xef58), 0xad);
        // 08 02AA
        gbc.setState(0x9074, 0x7c5c, 0x8b10, 0xc1d5, 0xfc9, 0xed4d, 0x0, 0x0);
        gbc.writeMem(0x9074, { 0x8, 0x46, 0xf6 });
        gbc.writeMem(0xf646, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x7c5c);
        EXPECT(gbc.pc(), 0x9077);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9074), 0x8);
        EXPECT(gbc.readMem(0x9075), 0x46);
        EXPECT(gbc.readMem(0x9076), 0xf6);
        EXPECT(gbc.readMem(0xf646), 0x5c);
        EXPECT(gbc.readMem(0xf647), 0x7c);
        // 08 02AD
        gbc.setState(0xec32, 0xe96d, 0x1f80, 0x24d, 0xef65, 0x79c7, 0x0, 0x0);
        gbc.writeMem(0xa8bf, { 0x0, 0x0 });
        gbc.writeMem(0xec32, { 0x8, 0xbf, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xe96d);
        EXPECT(gbc.pc(), 0xec35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8bf), 0x6d);
        EXPECT(gbc.readMem(0xa8c0), 0xe9);
        EXPECT(gbc.readMem(0xec32), 0x8);
        EXPECT(gbc.readMem(0xec33), 0xbf);
        EXPECT(gbc.readMem(0xec34), 0xa8);
        // 08 02AE
        gbc.setState(0xee5c, 0xde22, 0x7990, 0x3ee, 0xe422, 0xef18, 0x0, 0x1);
        gbc.writeMem(0x9b3c, { 0x0, 0x0 });
        gbc.writeMem(0xee5c, { 0x8, 0x3c, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xde22);
        EXPECT(gbc.pc(), 0xee5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b3c), 0x22);
        EXPECT(gbc.readMem(0x9b3d), 0xde);
        EXPECT(gbc.readMem(0xee5c), 0x8);
        EXPECT(gbc.readMem(0xee5d), 0x3c);
        EXPECT(gbc.readMem(0xee5e), 0x9b);
        // 08 02B4
        gbc.setState(0xe3aa, 0xc48b, 0xca00, 0x986, 0xe6b8, 0xf61f, 0x1, 0x0);
        gbc.writeMem(0x8d32, { 0x0, 0x0 });
        gbc.writeMem(0xe3aa, { 0x8, 0x32, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc48b);
        EXPECT(gbc.pc(), 0xe3ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d32), 0x8b);
        EXPECT(gbc.readMem(0x8d33), 0xc4);
        EXPECT(gbc.readMem(0xe3aa), 0x8);
        EXPECT(gbc.readMem(0xe3ab), 0x32);
        EXPECT(gbc.readMem(0xe3ac), 0x8d);
        // 08 02B6
        gbc.setState(0xbbce, 0x67a, 0xe50, 0xecfb, 0x52e8, 0xc2f9, 0x1, 0x0);
        gbc.writeMem(0xbbce, { 0x8, 0xa9, 0xcd });
        gbc.writeMem(0xcda9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x67a);
        EXPECT(gbc.pc(), 0xbbd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbce), 0x8);
        EXPECT(gbc.readMem(0xbbcf), 0xa9);
        EXPECT(gbc.readMem(0xbbd0), 0xcd);
        EXPECT(gbc.readMem(0xcda9), 0x7a);
        EXPECT(gbc.readMem(0xcdaa), 0x6);
        // 08 02B8
        gbc.setState(0x8508, 0xcf32, 0x95c0, 0xc44f, 0x987f, 0xac92, 0x1, 0x0);
        gbc.writeMem(0x8508, { 0x8, 0xa4, 0x92 });
        gbc.writeMem(0x92a4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xcf32);
        EXPECT(gbc.pc(), 0x850b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8508), 0x8);
        EXPECT(gbc.readMem(0x8509), 0xa4);
        EXPECT(gbc.readMem(0x850a), 0x92);
        EXPECT(gbc.readMem(0x92a4), 0x32);
        EXPECT(gbc.readMem(0x92a5), 0xcf);
        // 08 02C0
        gbc.setState(0xc809, 0x121, 0x690, 0x44c, 0x6490, 0xdb69, 0x0, 0x0);
        gbc.writeMem(0xc809, { 0x8, 0x8a, 0xd7 });
        gbc.writeMem(0xd78a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x121);
        EXPECT(gbc.pc(), 0xc80c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc809), 0x8);
        EXPECT(gbc.readMem(0xc80a), 0x8a);
        EXPECT(gbc.readMem(0xc80b), 0xd7);
        EXPECT(gbc.readMem(0xd78a), 0x21);
        EXPECT(gbc.readMem(0xd78b), 0x1);
        // 08 02C1
        gbc.setState(0x72cc, 0x7d6e, 0x9f0, 0x8bf1, 0x414f, 0xb249, 0x0, 0x1);
        gbc.writeMem(0x72cc, { 0x8, 0xdc, 0xbd });
        gbc.writeMem(0xbddc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x7d6e);
        EXPECT(gbc.pc(), 0x72cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbddc), 0x6e);
        EXPECT(gbc.readMem(0xbddd), 0x7d);
        // 08 02C2
        gbc.setState(0xc7e5, 0x256c, 0x95a0, 0xa28e, 0x760b, 0x404f, 0x0, 0x0);
        gbc.writeMem(0x979c, { 0x0, 0x0 });
        gbc.writeMem(0xc7e5, { 0x8, 0x9c, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x256c);
        EXPECT(gbc.pc(), 0xc7e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x979c), 0x6c);
        EXPECT(gbc.readMem(0x979d), 0x25);
        EXPECT(gbc.readMem(0xc7e5), 0x8);
        EXPECT(gbc.readMem(0xc7e6), 0x9c);
        EXPECT(gbc.readMem(0xc7e7), 0x97);
        // 08 02C3
        gbc.setState(0x383e, 0x67ce, 0x5680, 0xa73f, 0xe7bc, 0x452a, 0x0, 0x0);
        gbc.writeMem(0x383e, { 0x8, 0x64, 0x88 });
        gbc.writeMem(0x8864, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x67ce);
        EXPECT(gbc.pc(), 0x3841);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8864), 0xce);
        EXPECT(gbc.readMem(0x8865), 0x67);
        // 08 02C4
        gbc.setState(0x47d, 0xbaaa, 0xd4f0, 0x5e8c, 0x242f, 0xb7e6, 0x1, 0x0);
        gbc.writeMem(0x47d, { 0x8, 0xc0, 0xdb });
        gbc.writeMem(0xdbc0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xbaaa);
        EXPECT(gbc.pc(), 0x480);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbc0), 0xaa);
        EXPECT(gbc.readMem(0xdbc1), 0xba);
        // 08 02C5
        gbc.setState(0x276f, 0x8f, 0xf480, 0x703a, 0x1ddb, 0x6303, 0x0, 0x0);
        gbc.writeMem(0x276f, { 0x8, 0x15, 0x97 });
        gbc.writeMem(0x9715, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8f);
        EXPECT(gbc.pc(), 0x2772);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9715), 0x8f);
        EXPECT(gbc.readMem(0x9716), 0x0);
        // 08 02C7
        gbc.setState(0x7346, 0x277, 0x4240, 0x6bcb, 0xff32, 0x3c, 0x0, 0x1);
        gbc.writeMem(0x7346, { 0x8, 0xbc, 0xda });
        gbc.writeMem(0xdabc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x277);
        EXPECT(gbc.pc(), 0x7349);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdabc), 0x77);
        EXPECT(gbc.readMem(0xdabd), 0x2);
        // 08 02C8
        gbc.setState(0xad0a, 0x81eb, 0x3f60, 0x753f, 0x36d6, 0xcd41, 0x0, 0x0);
        gbc.writeMem(0xad0a, { 0x8, 0x35, 0xbb });
        gbc.writeMem(0xbb35, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x81eb);
        EXPECT(gbc.pc(), 0xad0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad0a), 0x8);
        EXPECT(gbc.readMem(0xad0b), 0x35);
        EXPECT(gbc.readMem(0xad0c), 0xbb);
        EXPECT(gbc.readMem(0xbb35), 0xeb);
        EXPECT(gbc.readMem(0xbb36), 0x81);
        // 08 02C9
        gbc.setState(0xac0, 0x6dda, 0x8c90, 0x2400, 0xc73f, 0x41e8, 0x1, 0x1);
        gbc.writeMem(0xac0, { 0x8, 0x51, 0xf1 });
        gbc.writeMem(0xf151, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x6dda);
        EXPECT(gbc.pc(), 0xac3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf151), 0xda);
        EXPECT(gbc.readMem(0xf152), 0x6d);
        // 08 02CC
        gbc.setState(0x1264, 0x4744, 0xab70, 0x7853, 0x9a1, 0xe967, 0x0, 0x1);
        gbc.writeMem(0x1264, { 0x8, 0x7, 0x8f });
        gbc.writeMem(0x8f07, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4744);
        EXPECT(gbc.pc(), 0x1267);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f07), 0x44);
        EXPECT(gbc.readMem(0x8f08), 0x47);
        // 08 02CE
        gbc.setState(0x3acf, 0x7722, 0xe790, 0x741f, 0x8cf, 0xbec1, 0x0, 0x1);
        gbc.writeMem(0x3acf, { 0x8, 0xd7, 0x8a });
        gbc.writeMem(0x8ad7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x7722);
        EXPECT(gbc.pc(), 0x3ad2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ad7), 0x22);
        EXPECT(gbc.readMem(0x8ad8), 0x77);
        // 08 02CF
        gbc.setState(0xe27e, 0x9aba, 0xc3d0, 0x2059, 0x5599, 0x970f, 0x0, 0x0);
        gbc.writeMem(0x9a46, { 0x0, 0x0 });
        gbc.writeMem(0xe27e, { 0x8, 0x46, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9aba);
        EXPECT(gbc.pc(), 0xe281);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a46), 0xba);
        EXPECT(gbc.readMem(0x9a47), 0x9a);
        EXPECT(gbc.readMem(0xe27e), 0x8);
        EXPECT(gbc.readMem(0xe27f), 0x46);
        EXPECT(gbc.readMem(0xe280), 0x9a);
        // 08 02D0
        gbc.setState(0x358a, 0xf3b8, 0x920, 0x59e6, 0x2ffc, 0x9ef9, 0x0, 0x1);
        gbc.writeMem(0x358a, { 0x8, 0x10, 0xf7 });
        gbc.writeMem(0xf710, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf3b8);
        EXPECT(gbc.pc(), 0x358d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf710), 0xb8);
        EXPECT(gbc.readMem(0xf711), 0xf3);
        // 08 02D1
        gbc.setState(0x29a5, 0xd945, 0xa3d0, 0x7018, 0x6337, 0xf2b9, 0x1, 0x1);
        gbc.writeMem(0x29a5, { 0x8, 0xcf, 0xd0 });
        gbc.writeMem(0xd0cf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xd945);
        EXPECT(gbc.pc(), 0x29a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0cf), 0x45);
        EXPECT(gbc.readMem(0xd0d0), 0xd9);
        // 08 02D3
        gbc.setState(0x2b01, 0xabd, 0x87c0, 0x31e0, 0xcffa, 0x2c71, 0x1, 0x0);
        gbc.writeMem(0x2b01, { 0x8, 0xcc, 0xb0 });
        gbc.writeMem(0xb0cc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xabd);
        EXPECT(gbc.pc(), 0x2b04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0cc), 0xbd);
        EXPECT(gbc.readMem(0xb0cd), 0xa);
        // 08 02D6
        gbc.setState(0x9359, 0x787, 0x89f0, 0x52bf, 0xfd11, 0xfb9b, 0x0, 0x1);
        gbc.writeMem(0x9359, { 0x8, 0x6f, 0xbb });
        gbc.writeMem(0xbb6f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x787);
        EXPECT(gbc.pc(), 0x935c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9359), 0x8);
        EXPECT(gbc.readMem(0x935a), 0x6f);
        EXPECT(gbc.readMem(0x935b), 0xbb);
        EXPECT(gbc.readMem(0xbb6f), 0x87);
        EXPECT(gbc.readMem(0xbb70), 0x7);
        // 08 02D7
        gbc.setState(0x2c73, 0xcaf3, 0xae90, 0x12ef, 0xaf9f, 0xe3f9, 0x1, 0x1);
        gbc.writeMem(0x2c73, { 0x8, 0x75, 0xa3 });
        gbc.writeMem(0xa375, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xcaf3);
        EXPECT(gbc.pc(), 0x2c76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa375), 0xf3);
        EXPECT(gbc.readMem(0xa376), 0xca);
        // 08 02D8
        gbc.setState(0x75c5, 0xdcf9, 0x8900, 0xfa5a, 0x7173, 0x2e79, 0x1, 0x0);
        gbc.writeMem(0x75c5, { 0x8, 0x60, 0x93 });
        gbc.writeMem(0x9360, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xdcf9);
        EXPECT(gbc.pc(), 0x75c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9360), 0xf9);
        EXPECT(gbc.readMem(0x9361), 0xdc);
        // 08 02D9
        gbc.setState(0xbe09, 0x979a, 0x82d0, 0x3493, 0x5587, 0xf72f, 0x0, 0x1);
        gbc.writeMem(0xbe09, { 0x8, 0xd2, 0xef });
        gbc.writeMem(0xefd2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x979a);
        EXPECT(gbc.pc(), 0xbe0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe09), 0x8);
        EXPECT(gbc.readMem(0xbe0a), 0xd2);
        EXPECT(gbc.readMem(0xbe0b), 0xef);
        EXPECT(gbc.readMem(0xefd2), 0x9a);
        EXPECT(gbc.readMem(0xefd3), 0x97);
        // 08 02DA
        gbc.setState(0x53ad, 0xadd9, 0x9270, 0xc9b6, 0x18d1, 0x593a, 0x1, 0x1);
        gbc.writeMem(0x53ad, { 0x8, 0x2, 0xbd });
        gbc.writeMem(0xbd02, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xadd9);
        EXPECT(gbc.pc(), 0x53b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd02), 0xd9);
        EXPECT(gbc.readMem(0xbd03), 0xad);
        // 08 02DD
        gbc.setState(0xc7e0, 0x79df, 0x1160, 0xdb40, 0xc9dc, 0xba6a, 0x0, 0x0);
        gbc.writeMem(0xbdef, { 0x0, 0x0 });
        gbc.writeMem(0xc7e0, { 0x8, 0xef, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x79df);
        EXPECT(gbc.pc(), 0xc7e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdef), 0xdf);
        EXPECT(gbc.readMem(0xbdf0), 0x79);
        EXPECT(gbc.readMem(0xc7e0), 0x8);
        EXPECT(gbc.readMem(0xc7e1), 0xef);
        EXPECT(gbc.readMem(0xc7e2), 0xbd);
        // 08 02DF
        gbc.setState(0xc468, 0x6c93, 0x91b0, 0x37f, 0x6a0a, 0x7bf4, 0x0, 0x0);
        gbc.writeMem(0xc468, { 0x8, 0xfa, 0xdd });
        gbc.writeMem(0xddfa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x6c93);
        EXPECT(gbc.pc(), 0xc46b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc468), 0x8);
        EXPECT(gbc.readMem(0xc469), 0xfa);
        EXPECT(gbc.readMem(0xc46a), 0xdd);
        EXPECT(gbc.readMem(0xddfa), 0x93);
        EXPECT(gbc.readMem(0xddfb), 0x6c);
        // 08 02E0
        gbc.setState(0x50a4, 0xc789, 0x8550, 0xcf66, 0xdd5a, 0x81bb, 0x0, 0x1);
        gbc.writeMem(0x50a4, { 0x8, 0x82, 0xa7 });
        gbc.writeMem(0xa782, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xc789);
        EXPECT(gbc.pc(), 0x50a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa782), 0x89);
        EXPECT(gbc.readMem(0xa783), 0xc7);
        // 08 02E1
        gbc.setState(0x6da4, 0xb9da, 0x2940, 0x2116, 0x43e4, 0x9ce8, 0x0, 0x1);
        gbc.writeMem(0x6da4, { 0x8, 0x76, 0xe2 });
        gbc.writeMem(0xe276, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb9da);
        EXPECT(gbc.pc(), 0x6da7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe276), 0xda);
        EXPECT(gbc.readMem(0xe277), 0xb9);
        // 08 02E3
        gbc.setState(0xbea3, 0xca8c, 0xc890, 0xaf18, 0xe71e, 0x3444, 0x0, 0x0);
        gbc.writeMem(0x8695, { 0x0, 0x0 });
        gbc.writeMem(0xbea3, { 0x8, 0x95, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xca8c);
        EXPECT(gbc.pc(), 0xbea6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8695), 0x8c);
        EXPECT(gbc.readMem(0x8696), 0xca);
        EXPECT(gbc.readMem(0xbea3), 0x8);
        EXPECT(gbc.readMem(0xbea4), 0x95);
        EXPECT(gbc.readMem(0xbea5), 0x86);
        // 08 02E4
        gbc.setState(0x6ae0, 0xff0e, 0x5fa0, 0xccac, 0xec4c, 0x1c5a, 0x1, 0x0);
        gbc.writeMem(0x6ae0, { 0x8, 0xa2, 0xd0 });
        gbc.writeMem(0xd0a2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xff0e);
        EXPECT(gbc.pc(), 0x6ae3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0a2), 0xe);
        EXPECT(gbc.readMem(0xd0a3), 0xff);
        // 08 02E8
        gbc.setState(0x330b, 0x4605, 0x9aa0, 0x1488, 0x909d, 0xc6e5, 0x1, 0x0);
        gbc.writeMem(0x330b, { 0x8, 0x56, 0xd6 });
        gbc.writeMem(0xd656, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4605);
        EXPECT(gbc.pc(), 0x330e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd656), 0x5);
        EXPECT(gbc.readMem(0xd657), 0x46);
        // 08 02E9
        gbc.setState(0x8c44, 0x9e00, 0xa4a0, 0xa15, 0x2f77, 0x487a, 0x1, 0x0);
        gbc.writeMem(0x8c44, { 0x8, 0x72, 0xf1 });
        gbc.writeMem(0xf172, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9e00);
        EXPECT(gbc.pc(), 0x8c47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c44), 0x8);
        EXPECT(gbc.readMem(0x8c45), 0x72);
        EXPECT(gbc.readMem(0x8c46), 0xf1);
        EXPECT(gbc.readMem(0xf172), 0x0);
        EXPECT(gbc.readMem(0xf173), 0x9e);
        // 08 02EA
        gbc.setState(0xcec, 0x8ddb, 0x9fe0, 0x2004, 0x2b2f, 0xa3b5, 0x0, 0x0);
        gbc.writeMem(0xcec, { 0x8, 0xff, 0x9a });
        gbc.writeMem(0x9aff, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8ddb);
        EXPECT(gbc.pc(), 0xcef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aff), 0xdb);
        EXPECT(gbc.readMem(0x9b00), 0x8d);
        // 08 02EC
        gbc.setState(0xe052, 0xdf49, 0x570, 0xf520, 0xce50, 0x3a46, 0x1, 0x0);
        gbc.writeMem(0xd933, { 0x0, 0x0 });
        gbc.writeMem(0xe052, { 0x8, 0x33, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xdf49);
        EXPECT(gbc.pc(), 0xe055);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd933), 0x49);
        EXPECT(gbc.readMem(0xd934), 0xdf);
        EXPECT(gbc.readMem(0xe052), 0x8);
        EXPECT(gbc.readMem(0xe053), 0x33);
        EXPECT(gbc.readMem(0xe054), 0xd9);
        // 08 02ED
        gbc.setState(0xc223, 0x75b9, 0x4560, 0x25ac, 0x71e3, 0x7bf9, 0x1, 0x1);
        gbc.writeMem(0xc223, { 0x8, 0xe4, 0xc5 });
        gbc.writeMem(0xc5e4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x75b9);
        EXPECT(gbc.pc(), 0xc226);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc223), 0x8);
        EXPECT(gbc.readMem(0xc224), 0xe4);
        EXPECT(gbc.readMem(0xc225), 0xc5);
        EXPECT(gbc.readMem(0xc5e4), 0xb9);
        EXPECT(gbc.readMem(0xc5e5), 0x75);
        // 08 02EE
        gbc.setState(0x581, 0x890f, 0xf260, 0x8deb, 0x46aa, 0x2d49, 0x1, 0x1);
        gbc.writeMem(0x581, { 0x8, 0x28, 0xd9 });
        gbc.writeMem(0xd928, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x890f);
        EXPECT(gbc.pc(), 0x584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd928), 0xf);
        EXPECT(gbc.readMem(0xd929), 0x89);
        // 08 02EF
        gbc.setState(0x38b1, 0xabf6, 0xf150, 0xd05a, 0x7da3, 0x226, 0x1, 0x1);
        gbc.writeMem(0x38b1, { 0x8, 0x13, 0xb7 });
        gbc.writeMem(0xb713, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xabf6);
        EXPECT(gbc.pc(), 0x38b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb713), 0xf6);
        EXPECT(gbc.readMem(0xb714), 0xab);
        // 08 02F0
        gbc.setState(0xdae2, 0xebc4, 0xdc40, 0x9a23, 0xbec7, 0xcd0c, 0x0, 0x1);
        gbc.writeMem(0xdae2, { 0x8, 0x32, 0xfe });
        gbc.writeMem(0xfe32, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xebc4);
        EXPECT(gbc.pc(), 0xdae5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdae2), 0x8);
        EXPECT(gbc.readMem(0xdae3), 0x32);
        EXPECT(gbc.readMem(0xdae4), 0xfe);
        EXPECT(gbc.readMem(0xfe32), 0xc4);
        EXPECT(gbc.readMem(0xfe33), 0xeb);
        // 08 02F3
        gbc.setState(0x9107, 0xaa9c, 0x29f0, 0xe983, 0x4bfe, 0xf059, 0x1, 0x0);
        gbc.writeMem(0x9107, { 0x8, 0xd7, 0xc4 });
        gbc.writeMem(0xc4d7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xaa9c);
        EXPECT(gbc.pc(), 0x910a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9107), 0x8);
        EXPECT(gbc.readMem(0x9108), 0xd7);
        EXPECT(gbc.readMem(0x9109), 0xc4);
        EXPECT(gbc.readMem(0xc4d7), 0x9c);
        EXPECT(gbc.readMem(0xc4d8), 0xaa);
        // 08 02F5
        gbc.setState(0xb353, 0xb753, 0xe7b0, 0xf128, 0x5d8f, 0x86b3, 0x1, 0x1);
        gbc.writeMem(0xb353, { 0x8, 0xae, 0xeb });
        gbc.writeMem(0xebae, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb753);
        EXPECT(gbc.pc(), 0xb356);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb353), 0x8);
        EXPECT(gbc.readMem(0xb354), 0xae);
        EXPECT(gbc.readMem(0xb355), 0xeb);
        EXPECT(gbc.readMem(0xebae), 0x53);
        EXPECT(gbc.readMem(0xebaf), 0xb7);
        // 08 02F7
        gbc.setState(0xa72b, 0x4585, 0xf050, 0x199, 0xf8b5, 0xe3bc, 0x0, 0x0);
        gbc.writeMem(0xa72b, { 0x8, 0xd0, 0xed });
        gbc.writeMem(0xedd0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4585);
        EXPECT(gbc.pc(), 0xa72e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa72b), 0x8);
        EXPECT(gbc.readMem(0xa72c), 0xd0);
        EXPECT(gbc.readMem(0xa72d), 0xed);
        EXPECT(gbc.readMem(0xedd0), 0x85);
        EXPECT(gbc.readMem(0xedd1), 0x45);
        // 08 02FB
        gbc.setState(0x772b, 0x98df, 0x6a0, 0x6438, 0x210b, 0x8fd5, 0x0, 0x1);
        gbc.writeMem(0x772b, { 0x8, 0xf6, 0x82 });
        gbc.writeMem(0x82f6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x98df);
        EXPECT(gbc.pc(), 0x772e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82f6), 0xdf);
        EXPECT(gbc.readMem(0x82f7), 0x98);
        // 08 0301
        gbc.setState(0x1ff6, 0x199c, 0x8910, 0x7994, 0xb2a8, 0xa7a0, 0x1, 0x0);
        gbc.writeMem(0x1ff6, { 0x8, 0x84, 0xba });
        gbc.writeMem(0xba84, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x199c);
        EXPECT(gbc.pc(), 0x1ff9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba84), 0x9c);
        EXPECT(gbc.readMem(0xba85), 0x19);
        // 08 0305
        gbc.setState(0x694a, 0x5c6, 0x3a30, 0xf86b, 0x264a, 0x7a66, 0x0, 0x0);
        gbc.writeMem(0x694a, { 0x8, 0xd6, 0xb2 });
        gbc.writeMem(0xb2d6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5c6);
        EXPECT(gbc.pc(), 0x694d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2d6), 0xc6);
        EXPECT(gbc.readMem(0xb2d7), 0x5);
        // 08 0306
        gbc.setState(0xdde2, 0xacf7, 0xc420, 0x374b, 0xa8b6, 0x33b4, 0x1, 0x1);
        gbc.writeMem(0xb8bb, { 0x0, 0x0 });
        gbc.writeMem(0xdde2, { 0x8, 0xbb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xacf7);
        EXPECT(gbc.pc(), 0xdde5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8bb), 0xf7);
        EXPECT(gbc.readMem(0xb8bc), 0xac);
        EXPECT(gbc.readMem(0xdde2), 0x8);
        EXPECT(gbc.readMem(0xdde3), 0xbb);
        EXPECT(gbc.readMem(0xdde4), 0xb8);
        // 08 0307
        gbc.setState(0xb993, 0xe8ef, 0x5180, 0xb73f, 0x6590, 0x9d3c, 0x0, 0x1);
        gbc.writeMem(0xb993, { 0x8, 0x32, 0xd0 });
        gbc.writeMem(0xd032, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe8ef);
        EXPECT(gbc.pc(), 0xb996);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb993), 0x8);
        EXPECT(gbc.readMem(0xb994), 0x32);
        EXPECT(gbc.readMem(0xb995), 0xd0);
        EXPECT(gbc.readMem(0xd032), 0xef);
        EXPECT(gbc.readMem(0xd033), 0xe8);
        // 08 030A
        gbc.setState(0xa9cd, 0xa0e1, 0xc90, 0xc4c9, 0xd1e1, 0x146c, 0x1, 0x1);
        gbc.writeMem(0xa9cd, { 0x8, 0xa4, 0xac });
        gbc.writeMem(0xaca4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa0e1);
        EXPECT(gbc.pc(), 0xa9d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9cd), 0x8);
        EXPECT(gbc.readMem(0xa9ce), 0xa4);
        EXPECT(gbc.readMem(0xa9cf), 0xac);
        EXPECT(gbc.readMem(0xaca4), 0xe1);
        EXPECT(gbc.readMem(0xaca5), 0xa0);
        // 08 030C
        gbc.setState(0xc408, 0x61b1, 0x6a60, 0x3868, 0xb3ba, 0xf8bf, 0x0, 0x0);
        gbc.writeMem(0xc408, { 0x8, 0x59, 0xf1 });
        gbc.writeMem(0xf159, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x61b1);
        EXPECT(gbc.pc(), 0xc40b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc408), 0x8);
        EXPECT(gbc.readMem(0xc409), 0x59);
        EXPECT(gbc.readMem(0xc40a), 0xf1);
        EXPECT(gbc.readMem(0xf159), 0xb1);
        EXPECT(gbc.readMem(0xf15a), 0x61);
        // 08 0311
        gbc.setState(0x159e, 0x9102, 0xfd70, 0x783b, 0x7a72, 0x4a5e, 0x1, 0x0);
        gbc.writeMem(0x159e, { 0x8, 0x85, 0x8c });
        gbc.writeMem(0x8c85, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x9102);
        EXPECT(gbc.pc(), 0x15a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c85), 0x2);
        EXPECT(gbc.readMem(0x8c86), 0x91);
        // 08 0312
        gbc.setState(0x8967, 0xdc55, 0x6fc0, 0xaae4, 0xaa53, 0x35b4, 0x0, 0x0);
        gbc.writeMem(0x8967, { 0x8, 0x6c, 0xc3 });
        gbc.writeMem(0xc36c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xdc55);
        EXPECT(gbc.pc(), 0x896a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8967), 0x8);
        EXPECT(gbc.readMem(0x8968), 0x6c);
        EXPECT(gbc.readMem(0x8969), 0xc3);
        EXPECT(gbc.readMem(0xc36c), 0x55);
        EXPECT(gbc.readMem(0xc36d), 0xdc);
        // 08 0314
        gbc.setState(0x2b10, 0xada4, 0x960, 0xf8d5, 0x580b, 0xfd67, 0x1, 0x1);
        gbc.writeMem(0x2b10, { 0x8, 0xa0, 0xd6 });
        gbc.writeMem(0xd6a0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xada4);
        EXPECT(gbc.pc(), 0x2b13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6a0), 0xa4);
        EXPECT(gbc.readMem(0xd6a1), 0xad);
        // 08 0315
        gbc.setState(0xd02b, 0xe648, 0x5560, 0xe48f, 0x7839, 0x264e, 0x1, 0x1);
        gbc.writeMem(0xb39d, { 0x0, 0x0 });
        gbc.writeMem(0xd02b, { 0x8, 0x9d, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xe648);
        EXPECT(gbc.pc(), 0xd02e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb39d), 0x48);
        EXPECT(gbc.readMem(0xb39e), 0xe6);
        EXPECT(gbc.readMem(0xd02b), 0x8);
        EXPECT(gbc.readMem(0xd02c), 0x9d);
        EXPECT(gbc.readMem(0xd02d), 0xb3);
        // 08 0318
        gbc.setState(0x3b1d, 0x892, 0xae80, 0xa785, 0x99e2, 0xe94e, 0x0, 0x1);
        gbc.writeMem(0x3b1d, { 0x8, 0xfd, 0x8f });
        gbc.writeMem(0x8ffd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x892);
        EXPECT(gbc.pc(), 0x3b20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ffd), 0x92);
        EXPECT(gbc.readMem(0x8ffe), 0x8);
        // 08 0319
        gbc.setState(0x6a7b, 0xdcdd, 0xe120, 0xf5d1, 0xc3ff, 0x50e3, 0x1, 0x0);
        gbc.writeMem(0x6a7b, { 0x8, 0x34, 0xaa });
        gbc.writeMem(0xaa34, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xdcdd);
        EXPECT(gbc.pc(), 0x6a7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa34), 0xdd);
        EXPECT(gbc.readMem(0xaa35), 0xdc);
        // 08 031A
        gbc.setState(0x5b4a, 0x5f6b, 0xf5e0, 0xd20d, 0x2da0, 0xf3a7, 0x1, 0x0);
        gbc.writeMem(0x5b4a, { 0x8, 0x78, 0xc6 });
        gbc.writeMem(0xc678, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x5f6b);
        EXPECT(gbc.pc(), 0x5b4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc678), 0x6b);
        EXPECT(gbc.readMem(0xc679), 0x5f);
        // 08 031B
        gbc.setState(0xe761, 0x9b29, 0xa730, 0x9abd, 0x81ca, 0xc738, 0x0, 0x1);
        gbc.writeMem(0xe761, { 0x8, 0x89, 0xfa });
        gbc.writeMem(0xfa89, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x9b29);
        EXPECT(gbc.pc(), 0xe764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe761), 0x8);
        EXPECT(gbc.readMem(0xe762), 0x89);
        EXPECT(gbc.readMem(0xe763), 0xfa);
        EXPECT(gbc.readMem(0xfa89), 0x29);
        EXPECT(gbc.readMem(0xfa8a), 0x9b);
        // 08 031E
        gbc.setState(0x93d9, 0xde9e, 0xd440, 0x9d2a, 0x49a, 0x154f, 0x0, 0x1);
        gbc.writeMem(0x93d9, { 0x8, 0x3d, 0xa7 });
        gbc.writeMem(0xa73d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xde9e);
        EXPECT(gbc.pc(), 0x93dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93d9), 0x8);
        EXPECT(gbc.readMem(0x93da), 0x3d);
        EXPECT(gbc.readMem(0x93db), 0xa7);
        EXPECT(gbc.readMem(0xa73d), 0x9e);
        EXPECT(gbc.readMem(0xa73e), 0xde);
        // 08 0320
        gbc.setState(0xdacc, 0x126d, 0xd4e0, 0xaf50, 0x2cd7, 0x4d9, 0x1, 0x1);
        gbc.writeMem(0xcae7, { 0x0, 0x0 });
        gbc.writeMem(0xdacc, { 0x8, 0xe7, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x126d);
        EXPECT(gbc.pc(), 0xdacf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcae7), 0x6d);
        EXPECT(gbc.readMem(0xcae8), 0x12);
        EXPECT(gbc.readMem(0xdacc), 0x8);
        EXPECT(gbc.readMem(0xdacd), 0xe7);
        EXPECT(gbc.readMem(0xdace), 0xca);
        // 08 0321
        gbc.setState(0x47ef, 0x6a77, 0x4900, 0x4c31, 0x59e5, 0x7b42, 0x1, 0x1);
        gbc.writeMem(0x47ef, { 0x8, 0x8a, 0x8f });
        gbc.writeMem(0x8f8a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x6a77);
        EXPECT(gbc.pc(), 0x47f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f8a), 0x77);
        EXPECT(gbc.readMem(0x8f8b), 0x6a);
        // 08 0322
        gbc.setState(0x6b4f, 0x4161, 0xf60, 0xa88d, 0x1d4c, 0xee60, 0x0, 0x0);
        gbc.writeMem(0x6b4f, { 0x8, 0x1, 0xb5 });
        gbc.writeMem(0xb501, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x4161);
        EXPECT(gbc.pc(), 0x6b52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb501), 0x61);
        EXPECT(gbc.readMem(0xb502), 0x41);
        // 08 0324
        gbc.setState(0x4725, 0x30c3, 0xa600, 0x3cd4, 0x416a, 0xe6b3, 0x0, 0x0);
        gbc.writeMem(0x4725, { 0x8, 0x89, 0x9a });
        gbc.writeMem(0x9a89, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x30c3);
        EXPECT(gbc.pc(), 0x4728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a89), 0xc3);
        EXPECT(gbc.readMem(0x9a8a), 0x30);
        // 08 0325
        gbc.setState(0x271e, 0xeead, 0xa920, 0x4686, 0x4fd, 0x32c8, 0x0, 0x1);
        gbc.writeMem(0x271e, { 0x8, 0xd, 0xd6 });
        gbc.writeMem(0xd60d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xeead);
        EXPECT(gbc.pc(), 0x2721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd60d), 0xad);
        EXPECT(gbc.readMem(0xd60e), 0xee);
        // 08 0326
        gbc.setState(0xa50e, 0x604b, 0x7610, 0xbd50, 0xb5a4, 0xaf4f, 0x0, 0x1);
        gbc.writeMem(0xa50e, { 0x8, 0xb4, 0xed });
        gbc.writeMem(0xedb4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x604b);
        EXPECT(gbc.pc(), 0xa511);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa50e), 0x8);
        EXPECT(gbc.readMem(0xa50f), 0xb4);
        EXPECT(gbc.readMem(0xa510), 0xed);
        EXPECT(gbc.readMem(0xedb4), 0x4b);
        EXPECT(gbc.readMem(0xedb5), 0x60);
        // 08 0327
        gbc.setState(0x65f0, 0x56d4, 0x5e50, 0x7dd5, 0xf615, 0x268e, 0x1, 0x1);
        gbc.writeMem(0x65f0, { 0x8, 0xcc, 0xd3 });
        gbc.writeMem(0xd3cc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x56d4);
        EXPECT(gbc.pc(), 0x65f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3cc), 0xd4);
        EXPECT(gbc.readMem(0xd3cd), 0x56);
        // 08 0329
        gbc.setState(0x5c0a, 0xe0d9, 0x6860, 0x641c, 0x185f, 0x6130, 0x0, 0x0);
        gbc.writeMem(0x5c0a, { 0x8, 0x11, 0xcb });
        gbc.writeMem(0xcb11, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xe0d9);
        EXPECT(gbc.pc(), 0x5c0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb11), 0xd9);
        EXPECT(gbc.readMem(0xcb12), 0xe0);
        // 08 032A
        gbc.setState(0xe1e2, 0x2887, 0xe2a0, 0xf6bd, 0x9e2b, 0x7030, 0x1, 0x1);
        gbc.writeMem(0xe1e2, { 0x8, 0xe8, 0xee });
        gbc.writeMem(0xeee8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2887);
        EXPECT(gbc.pc(), 0xe1e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1e2), 0x8);
        EXPECT(gbc.readMem(0xe1e3), 0xe8);
        EXPECT(gbc.readMem(0xe1e4), 0xee);
        EXPECT(gbc.readMem(0xeee8), 0x87);
        EXPECT(gbc.readMem(0xeee9), 0x28);
        // 08 032C
        gbc.setState(0x8439, 0x56fb, 0x6e70, 0xaad4, 0x1937, 0xec68, 0x1, 0x1);
        gbc.writeMem(0x8439, { 0x8, 0xbe, 0xe8 });
        gbc.writeMem(0xe8be, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x56fb);
        EXPECT(gbc.pc(), 0x843c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8439), 0x8);
        EXPECT(gbc.readMem(0x843a), 0xbe);
        EXPECT(gbc.readMem(0x843b), 0xe8);
        EXPECT(gbc.readMem(0xe8be), 0xfb);
        EXPECT(gbc.readMem(0xe8bf), 0x56);
        // 08 032D
        gbc.setState(0xbadf, 0xa5d5, 0x36c0, 0xb774, 0x357a, 0x616c, 0x0, 0x1);
        gbc.writeMem(0xbadf, { 0x8, 0x14, 0xec });
        gbc.writeMem(0xec14, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa5d5);
        EXPECT(gbc.pc(), 0xbae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbadf), 0x8);
        EXPECT(gbc.readMem(0xbae0), 0x14);
        EXPECT(gbc.readMem(0xbae1), 0xec);
        EXPECT(gbc.readMem(0xec14), 0xd5);
        EXPECT(gbc.readMem(0xec15), 0xa5);
        // 08 032F
        gbc.setState(0xdcec, 0x6d56, 0x2d00, 0x3003, 0x3f02, 0xf494, 0x1, 0x0);
        gbc.writeMem(0x9d64, { 0x0, 0x0 });
        gbc.writeMem(0xdcec, { 0x8, 0x64, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6d56);
        EXPECT(gbc.pc(), 0xdcef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d64), 0x56);
        EXPECT(gbc.readMem(0x9d65), 0x6d);
        EXPECT(gbc.readMem(0xdcec), 0x8);
        EXPECT(gbc.readMem(0xdced), 0x64);
        EXPECT(gbc.readMem(0xdcee), 0x9d);
        // 08 0330
        gbc.setState(0xd5ea, 0x8dee, 0x9d80, 0xe508, 0xdef3, 0xf776, 0x1, 0x1);
        gbc.writeMem(0xd5ea, { 0x8, 0x5c, 0xd8 });
        gbc.writeMem(0xd85c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8dee);
        EXPECT(gbc.pc(), 0xd5ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5ea), 0x8);
        EXPECT(gbc.readMem(0xd5eb), 0x5c);
        EXPECT(gbc.readMem(0xd5ec), 0xd8);
        EXPECT(gbc.readMem(0xd85c), 0xee);
        EXPECT(gbc.readMem(0xd85d), 0x8d);
        // 08 0331
        gbc.setState(0x34fd, 0x5a96, 0x5560, 0x6f4f, 0x21a7, 0x4367, 0x0, 0x1);
        gbc.writeMem(0x34fd, { 0x8, 0x8f, 0xda });
        gbc.writeMem(0xda8f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x5a96);
        EXPECT(gbc.pc(), 0x3500);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda8f), 0x96);
        EXPECT(gbc.readMem(0xda90), 0x5a);
        // 08 0332
        gbc.setState(0xd284, 0xcc7d, 0x5090, 0xd452, 0xb28d, 0x1e29, 0x1, 0x1);
        gbc.writeMem(0xa96e, { 0x0, 0x0 });
        gbc.writeMem(0xd284, { 0x8, 0x6e, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xcc7d);
        EXPECT(gbc.pc(), 0xd287);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa96e), 0x7d);
        EXPECT(gbc.readMem(0xa96f), 0xcc);
        EXPECT(gbc.readMem(0xd284), 0x8);
        EXPECT(gbc.readMem(0xd285), 0x6e);
        EXPECT(gbc.readMem(0xd286), 0xa9);
        // 08 0333
        gbc.setState(0xb8d, 0x4c02, 0xc1c0, 0x9c9f, 0x386f, 0xd6ad, 0x1, 0x1);
        gbc.writeMem(0xb8d, { 0x8, 0x55, 0xdd });
        gbc.writeMem(0xdd55, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x4c02);
        EXPECT(gbc.pc(), 0xb90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd55), 0x2);
        EXPECT(gbc.readMem(0xdd56), 0x4c);
        // 08 0335
        gbc.setState(0x6cd0, 0x9bfc, 0x68b0, 0x2aba, 0x404f, 0xd85e, 0x0, 0x1);
        gbc.writeMem(0x6cd0, { 0x8, 0x2d, 0xb6 });
        gbc.writeMem(0xb62d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x9bfc);
        EXPECT(gbc.pc(), 0x6cd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb62d), 0xfc);
        EXPECT(gbc.readMem(0xb62e), 0x9b);
        // 08 033B
        gbc.setState(0x1ea1, 0xe7ec, 0x4ba0, 0x72ae, 0x2758, 0xe0d1, 0x1, 0x1);
        gbc.writeMem(0x1ea1, { 0x8, 0xac, 0x9e });
        gbc.writeMem(0x9eac, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe7ec);
        EXPECT(gbc.pc(), 0x1ea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eac), 0xec);
        EXPECT(gbc.readMem(0x9ead), 0xe7);
        // 08 0342
        gbc.setState(0x9e0d, 0xe8d0, 0x9c30, 0xca97, 0xcd46, 0xc520, 0x0, 0x1);
        gbc.writeMem(0x9e0d, { 0x8, 0xa, 0xb8 });
        gbc.writeMem(0xb80a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xe8d0);
        EXPECT(gbc.pc(), 0x9e10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e0d), 0x8);
        EXPECT(gbc.readMem(0x9e0e), 0xa);
        EXPECT(gbc.readMem(0x9e0f), 0xb8);
        EXPECT(gbc.readMem(0xb80a), 0xd0);
        EXPECT(gbc.readMem(0xb80b), 0xe8);
        // 08 0344
        gbc.setState(0xabef, 0x63f3, 0x9880, 0x6235, 0xf60, 0x1f8b, 0x0, 0x1);
        gbc.writeMem(0x98a7, { 0x0, 0x0 });
        gbc.writeMem(0xabef, { 0x8, 0xa7, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x63f3);
        EXPECT(gbc.pc(), 0xabf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98a7), 0xf3);
        EXPECT(gbc.readMem(0x98a8), 0x63);
        EXPECT(gbc.readMem(0xabef), 0x8);
        EXPECT(gbc.readMem(0xabf0), 0xa7);
        EXPECT(gbc.readMem(0xabf1), 0x98);
        // 08 0346
        gbc.setState(0xbba2, 0x28a5, 0xecb0, 0xe7cc, 0x3396, 0x3fe2, 0x1, 0x1);
        gbc.writeMem(0x89ae, { 0x0, 0x0 });
        gbc.writeMem(0xbba2, { 0x8, 0xae, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x28a5);
        EXPECT(gbc.pc(), 0xbba5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89ae), 0xa5);
        EXPECT(gbc.readMem(0x89af), 0x28);
        EXPECT(gbc.readMem(0xbba2), 0x8);
        EXPECT(gbc.readMem(0xbba3), 0xae);
        EXPECT(gbc.readMem(0xbba4), 0x89);
        // 08 0347
        gbc.setState(0xa9d8, 0xa4c3, 0xa640, 0xc8de, 0x61df, 0x3fa4, 0x0, 0x1);
        gbc.writeMem(0xa9d8, { 0x8, 0x18, 0xb9 });
        gbc.writeMem(0xb918, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xa4c3);
        EXPECT(gbc.pc(), 0xa9db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9d8), 0x8);
        EXPECT(gbc.readMem(0xa9d9), 0x18);
        EXPECT(gbc.readMem(0xa9da), 0xb9);
        EXPECT(gbc.readMem(0xb918), 0xc3);
        EXPECT(gbc.readMem(0xb919), 0xa4);
        // 08 0348
        gbc.setState(0xd95d, 0xb094, 0xc1a0, 0xb4ba, 0x49ad, 0x3d6f, 0x1, 0x1);
        gbc.writeMem(0xd732, { 0x0, 0x0 });
        gbc.writeMem(0xd95d, { 0x8, 0x32, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb094);
        EXPECT(gbc.pc(), 0xd960);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd732), 0x94);
        EXPECT(gbc.readMem(0xd733), 0xb0);
        EXPECT(gbc.readMem(0xd95d), 0x8);
        EXPECT(gbc.readMem(0xd95e), 0x32);
        EXPECT(gbc.readMem(0xd95f), 0xd7);
        // 08 0349
        gbc.setState(0x324, 0x8371, 0x6850, 0xdf47, 0x947c, 0xd7c4, 0x0, 0x1);
        gbc.writeMem(0x324, { 0x8, 0xd, 0xd9 });
        gbc.writeMem(0xd90d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8371);
        EXPECT(gbc.pc(), 0x327);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd90d), 0x71);
        EXPECT(gbc.readMem(0xd90e), 0x83);
        // 08 034B
        gbc.setState(0xe576, 0xc588, 0xc680, 0x8bef, 0xc90c, 0xb50f, 0x1, 0x1);
        gbc.writeMem(0xe576, { 0x8, 0x2a, 0xe6 });
        gbc.writeMem(0xe62a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xc588);
        EXPECT(gbc.pc(), 0xe579);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe576), 0x8);
        EXPECT(gbc.readMem(0xe577), 0x2a);
        EXPECT(gbc.readMem(0xe578), 0xe6);
        EXPECT(gbc.readMem(0xe62a), 0x88);
        EXPECT(gbc.readMem(0xe62b), 0xc5);
        // 08 034E
        gbc.setState(0x38c7, 0xd84b, 0x82c0, 0xc9fd, 0x9834, 0x8ea0, 0x0, 0x0);
        gbc.writeMem(0x38c7, { 0x8, 0xa, 0xa6 });
        gbc.writeMem(0xa60a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd84b);
        EXPECT(gbc.pc(), 0x38ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa60a), 0x4b);
        EXPECT(gbc.readMem(0xa60b), 0xd8);
        // 08 034F
        gbc.setState(0x7bae, 0xcf8f, 0x4370, 0x305b, 0x1e53, 0xe506, 0x0, 0x0);
        gbc.writeMem(0x7bae, { 0x8, 0x75, 0x84 });
        gbc.writeMem(0x8475, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xcf8f);
        EXPECT(gbc.pc(), 0x7bb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8475), 0x8f);
        EXPECT(gbc.readMem(0x8476), 0xcf);
        // 08 0354
        gbc.setState(0xab1, 0x1665, 0xfd30, 0x5edd, 0x7022, 0xfb3b, 0x1, 0x0);
        gbc.writeMem(0xab1, { 0x8, 0xc2, 0xf2 });
        gbc.writeMem(0xf2c2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1665);
        EXPECT(gbc.pc(), 0xab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf2c2), 0x65);
        EXPECT(gbc.readMem(0xf2c3), 0x16);
        // 08 0356
        gbc.setState(0xce9f, 0x821e, 0xa430, 0x4510, 0x800b, 0x74ba, 0x1, 0x0);
        gbc.writeMem(0xbabc, { 0x0, 0x0 });
        gbc.writeMem(0xce9f, { 0x8, 0xbc, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x821e);
        EXPECT(gbc.pc(), 0xcea2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbabc), 0x1e);
        EXPECT(gbc.readMem(0xbabd), 0x82);
        EXPECT(gbc.readMem(0xce9f), 0x8);
        EXPECT(gbc.readMem(0xcea0), 0xbc);
        EXPECT(gbc.readMem(0xcea1), 0xba);
        // 08 0357
        gbc.setState(0x3f3, 0xddc6, 0x2a0, 0x2b8f, 0xc5c, 0xb4d7, 0x1, 0x1);
        gbc.writeMem(0x3f3, { 0x8, 0xee, 0xfa });
        gbc.writeMem(0xfaee, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xddc6);
        EXPECT(gbc.pc(), 0x3f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfaee), 0xc6);
        EXPECT(gbc.readMem(0xfaef), 0xdd);
        // 08 0358
        gbc.setState(0x7789, 0xf1eb, 0x2870, 0xe264, 0x2edc, 0xee07, 0x0, 0x0);
        gbc.writeMem(0x7789, { 0x8, 0xca, 0xba });
        gbc.writeMem(0xbaca, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf1eb);
        EXPECT(gbc.pc(), 0x778c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaca), 0xeb);
        EXPECT(gbc.readMem(0xbacb), 0xf1);
        // 08 035B
        gbc.setState(0x7e1d, 0x5017, 0x1a20, 0xd947, 0x7c, 0x8b6c, 0x0, 0x0);
        gbc.writeMem(0x7e1d, { 0x8, 0x90, 0xf7 });
        gbc.writeMem(0xf790, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5017);
        EXPECT(gbc.pc(), 0x7e20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf790), 0x17);
        EXPECT(gbc.readMem(0xf791), 0x50);
        // 08 035C
        gbc.setState(0x65c1, 0x307a, 0xc360, 0x566a, 0xbb1e, 0xaca6, 0x0, 0x1);
        gbc.writeMem(0x65c1, { 0x8, 0x2a, 0xdf });
        gbc.writeMem(0xdf2a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x307a);
        EXPECT(gbc.pc(), 0x65c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf2a), 0x7a);
        EXPECT(gbc.readMem(0xdf2b), 0x30);
        // 08 035E
        gbc.setState(0x6d00, 0x6070, 0x6330, 0xd28, 0xf4d4, 0x744e, 0x1, 0x0);
        gbc.writeMem(0x6d00, { 0x8, 0xdc, 0x85 });
        gbc.writeMem(0x85dc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x6070);
        EXPECT(gbc.pc(), 0x6d03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85dc), 0x70);
        EXPECT(gbc.readMem(0x85dd), 0x60);
        // 08 0360
        gbc.setState(0xe250, 0xd831, 0xd7b0, 0x59b0, 0xdb48, 0x21a, 0x1, 0x1);
        gbc.writeMem(0xa239, { 0x0, 0x0 });
        gbc.writeMem(0xe250, { 0x8, 0x39, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xd831);
        EXPECT(gbc.pc(), 0xe253);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa239), 0x31);
        EXPECT(gbc.readMem(0xa23a), 0xd8);
        EXPECT(gbc.readMem(0xe250), 0x8);
        EXPECT(gbc.readMem(0xe251), 0x39);
        EXPECT(gbc.readMem(0xe252), 0xa2);
        // 08 0363
        gbc.setState(0x457b, 0x7b2d, 0x87b0, 0x9d35, 0x1ed7, 0x559e, 0x0, 0x0);
        gbc.writeMem(0x457b, { 0x8, 0x57, 0xb0 });
        gbc.writeMem(0xb057, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7b2d);
        EXPECT(gbc.pc(), 0x457e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb057), 0x2d);
        EXPECT(gbc.readMem(0xb058), 0x7b);
        // 08 0364
        gbc.setState(0x3085, 0x8c1, 0xdd0, 0xcf31, 0xc290, 0x7a48, 0x0, 0x1);
        gbc.writeMem(0x3085, { 0x8, 0x43, 0x95 });
        gbc.writeMem(0x9543, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8c1);
        EXPECT(gbc.pc(), 0x3088);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9543), 0xc1);
        EXPECT(gbc.readMem(0x9544), 0x8);
        // 08 0366
        gbc.setState(0x5aa1, 0xe29d, 0x4630, 0x3532, 0xa01a, 0x5450, 0x0, 0x0);
        gbc.writeMem(0x5aa1, { 0x8, 0xb2, 0xfd });
        gbc.writeMem(0xfdb2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xe29d);
        EXPECT(gbc.pc(), 0x5aa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfdb2), 0x9d);
        EXPECT(gbc.readMem(0xfdb3), 0xe2);
        // 08 0368
        gbc.setState(0x73ca, 0x48f, 0x97d0, 0xb600, 0x62ff, 0x9066, 0x0, 0x0);
        gbc.writeMem(0x73ca, { 0x8, 0x87, 0xa2 });
        gbc.writeMem(0xa287, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x48f);
        EXPECT(gbc.pc(), 0x73cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa287), 0x8f);
        EXPECT(gbc.readMem(0xa288), 0x4);
        // 08 036A
        gbc.setState(0x51b4, 0xc0aa, 0x4fa0, 0xa025, 0x346e, 0x2626, 0x0, 0x1);
        gbc.writeMem(0x51b4, { 0x8, 0x11, 0xcf });
        gbc.writeMem(0xcf11, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc0aa);
        EXPECT(gbc.pc(), 0x51b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf11), 0xaa);
        EXPECT(gbc.readMem(0xcf12), 0xc0);
        // 08 036C
        gbc.setState(0x9382, 0x24ee, 0x1dc0, 0xeb67, 0xbf72, 0x36ab, 0x1, 0x0);
        gbc.writeMem(0x9382, { 0x8, 0x8c, 0xf7 });
        gbc.writeMem(0xf78c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x24ee);
        EXPECT(gbc.pc(), 0x9385);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9382), 0x8);
        EXPECT(gbc.readMem(0x9383), 0x8c);
        EXPECT(gbc.readMem(0x9384), 0xf7);
        EXPECT(gbc.readMem(0xf78c), 0xee);
        EXPECT(gbc.readMem(0xf78d), 0x24);
        // 08 036D
        gbc.setState(0x50e, 0x32f4, 0x85f0, 0x1ef2, 0x9bc5, 0x288b, 0x0, 0x0);
        gbc.writeMem(0x50e, { 0x8, 0xd2, 0xb6 });
        gbc.writeMem(0xb6d2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x32f4);
        EXPECT(gbc.pc(), 0x511);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6d2), 0xf4);
        EXPECT(gbc.readMem(0xb6d3), 0x32);
        // 08 036E
        gbc.setState(0xa5e5, 0xccde, 0x87f0, 0x6ced, 0xa9b, 0xd928, 0x0, 0x0);
        gbc.writeMem(0xa5e5, { 0x8, 0x49, 0xe6 });
        gbc.writeMem(0xe649, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xccde);
        EXPECT(gbc.pc(), 0xa5e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5e5), 0x8);
        EXPECT(gbc.readMem(0xa5e6), 0x49);
        EXPECT(gbc.readMem(0xa5e7), 0xe6);
        EXPECT(gbc.readMem(0xe649), 0xde);
        EXPECT(gbc.readMem(0xe64a), 0xcc);
        // 08 036F
        gbc.setState(0xa15c, 0x38e8, 0x9a40, 0xb13d, 0x99b3, 0x2738, 0x1, 0x1);
        gbc.writeMem(0xa15c, { 0x8, 0xc9, 0xd7 });
        gbc.writeMem(0xd7c9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x38e8);
        EXPECT(gbc.pc(), 0xa15f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa15c), 0x8);
        EXPECT(gbc.readMem(0xa15d), 0xc9);
        EXPECT(gbc.readMem(0xa15e), 0xd7);
        EXPECT(gbc.readMem(0xd7c9), 0xe8);
        EXPECT(gbc.readMem(0xd7ca), 0x38);
        // 08 0371
        gbc.setState(0x11e8, 0xf43f, 0x1710, 0xf4b9, 0x4964, 0x9d9c, 0x0, 0x0);
        gbc.writeMem(0x11e8, { 0x8, 0xc6, 0xc8 });
        gbc.writeMem(0xc8c6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xf43f);
        EXPECT(gbc.pc(), 0x11eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8c6), 0x3f);
        EXPECT(gbc.readMem(0xc8c7), 0xf4);
        // 08 0373
        gbc.setState(0xece7, 0x1552, 0x9390, 0xd027, 0x9404, 0x51ab, 0x1, 0x1);
        gbc.writeMem(0xc363, { 0x0, 0x0 });
        gbc.writeMem(0xece7, { 0x8, 0x63, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1552);
        EXPECT(gbc.pc(), 0xecea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc363), 0x52);
        EXPECT(gbc.readMem(0xc364), 0x15);
        EXPECT(gbc.readMem(0xece7), 0x8);
        EXPECT(gbc.readMem(0xece8), 0x63);
        EXPECT(gbc.readMem(0xece9), 0xc3);
        // 08 0374
        gbc.setState(0x2382, 0xecb2, 0xa660, 0x8856, 0xf1fc, 0x79ee, 0x1, 0x1);
        gbc.writeMem(0x2382, { 0x8, 0x5d, 0xb7 });
        gbc.writeMem(0xb75d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xecb2);
        EXPECT(gbc.pc(), 0x2385);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb75d), 0xb2);
        EXPECT(gbc.readMem(0xb75e), 0xec);
        // 08 0375
        gbc.setState(0x6aab, 0xf6d4, 0x7f20, 0xebe7, 0x9076, 0xfd7f, 0x0, 0x0);
        gbc.writeMem(0x6aab, { 0x8, 0x42, 0xb4 });
        gbc.writeMem(0xb442, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf6d4);
        EXPECT(gbc.pc(), 0x6aae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb442), 0xd4);
        EXPECT(gbc.readMem(0xb443), 0xf6);
        // 08 037D
        gbc.setState(0x67c4, 0x1ca7, 0x8770, 0x2736, 0x30aa, 0x238d, 0x0, 0x0);
        gbc.writeMem(0x67c4, { 0x8, 0x7c, 0xbe });
        gbc.writeMem(0xbe7c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1ca7);
        EXPECT(gbc.pc(), 0x67c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe7c), 0xa7);
        EXPECT(gbc.readMem(0xbe7d), 0x1c);
        // 08 037E
        gbc.setState(0x47ce, 0x1257, 0xdf70, 0x4dbc, 0x875b, 0x8b70, 0x1, 0x0);
        gbc.writeMem(0x47ce, { 0x8, 0x8e, 0xaf });
        gbc.writeMem(0xaf8e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x1257);
        EXPECT(gbc.pc(), 0x47d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf8e), 0x57);
        EXPECT(gbc.readMem(0xaf8f), 0x12);
        // 08 037F
        gbc.setState(0x59a3, 0x686b, 0xc9c0, 0x9b72, 0x9d35, 0x469f, 0x0, 0x1);
        gbc.writeMem(0x59a3, { 0x8, 0x44, 0xcc });
        gbc.writeMem(0xcc44, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x686b);
        EXPECT(gbc.pc(), 0x59a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc44), 0x6b);
        EXPECT(gbc.readMem(0xcc45), 0x68);
        // 08 0380
        gbc.setState(0x2c2b, 0xd18b, 0x2df0, 0x4377, 0xb59d, 0x10f6, 0x0, 0x1);
        gbc.writeMem(0x2c2b, { 0x8, 0x5a, 0xfe });
        gbc.writeMem(0xfe5a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd18b);
        EXPECT(gbc.pc(), 0x2c2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfe5a), 0x8b);
        EXPECT(gbc.readMem(0xfe5b), 0xd1);
        // 08 0382
        gbc.setState(0xd299, 0x5b04, 0x6950, 0x9c01, 0x550b, 0x4711, 0x0, 0x0);
        gbc.writeMem(0xaf84, { 0x0, 0x0 });
        gbc.writeMem(0xd299, { 0x8, 0x84, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5b04);
        EXPECT(gbc.pc(), 0xd29c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf84), 0x4);
        EXPECT(gbc.readMem(0xaf85), 0x5b);
        EXPECT(gbc.readMem(0xd299), 0x8);
        EXPECT(gbc.readMem(0xd29a), 0x84);
        EXPECT(gbc.readMem(0xd29b), 0xaf);
        // 08 0383
        gbc.setState(0x5710, 0x738, 0x16b0, 0x5d17, 0x74c2, 0xff5c, 0x0, 0x0);
        gbc.writeMem(0x5710, { 0x8, 0x87, 0xe5 });
        gbc.writeMem(0xe587, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x738);
        EXPECT(gbc.pc(), 0x5713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe587), 0x38);
        EXPECT(gbc.readMem(0xe588), 0x7);
        // 08 0384
        gbc.setState(0xbb66, 0x7b67, 0x3550, 0x27ce, 0x8005, 0xb95b, 0x0, 0x0);
        gbc.writeMem(0xbb66, { 0x8, 0x80, 0xe1 });
        gbc.writeMem(0xe180, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x7b67);
        EXPECT(gbc.pc(), 0xbb69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb66), 0x8);
        EXPECT(gbc.readMem(0xbb67), 0x80);
        EXPECT(gbc.readMem(0xbb68), 0xe1);
        EXPECT(gbc.readMem(0xe180), 0x67);
        EXPECT(gbc.readMem(0xe181), 0x7b);
        // 08 0386
        gbc.setState(0x2e0e, 0x2567, 0x8510, 0x845c, 0x90e4, 0x3ee2, 0x1, 0x1);
        gbc.writeMem(0x2e0e, { 0x8, 0xbd, 0xbd });
        gbc.writeMem(0xbdbd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2567);
        EXPECT(gbc.pc(), 0x2e11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdbd), 0x67);
        EXPECT(gbc.readMem(0xbdbe), 0x25);
        // 08 0388
        gbc.setState(0x28c5, 0x5bd, 0xcf10, 0x85de, 0x63da, 0xa517, 0x0, 0x1);
        gbc.writeMem(0x28c5, { 0x8, 0x30, 0xc7 });
        gbc.writeMem(0xc730, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x5bd);
        EXPECT(gbc.pc(), 0x28c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc730), 0xbd);
        EXPECT(gbc.readMem(0xc731), 0x5);
        // 08 0389
        gbc.setState(0xdfa6, 0x9490, 0x6cb0, 0x41, 0xdba4, 0xeda6, 0x0, 0x1);
        gbc.writeMem(0xaa07, { 0x0, 0x0 });
        gbc.writeMem(0xdfa6, { 0x8, 0x7, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x9490);
        EXPECT(gbc.pc(), 0xdfa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa07), 0x90);
        EXPECT(gbc.readMem(0xaa08), 0x94);
        EXPECT(gbc.readMem(0xdfa6), 0x8);
        EXPECT(gbc.readMem(0xdfa7), 0x7);
        EXPECT(gbc.readMem(0xdfa8), 0xaa);
        // 08 038A
        gbc.setState(0xcab6, 0x394e, 0xae30, 0x1e76, 0x78b3, 0xad1b, 0x0, 0x1);
        gbc.writeMem(0xa1b1, { 0x0, 0x0 });
        gbc.writeMem(0xcab6, { 0x8, 0xb1, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x394e);
        EXPECT(gbc.pc(), 0xcab9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1b1), 0x4e);
        EXPECT(gbc.readMem(0xa1b2), 0x39);
        EXPECT(gbc.readMem(0xcab6), 0x8);
        EXPECT(gbc.readMem(0xcab7), 0xb1);
        EXPECT(gbc.readMem(0xcab8), 0xa1);
        // 08 038C
        gbc.setState(0xdea7, 0xeca, 0xde60, 0x6fcb, 0xcb6f, 0x5686, 0x0, 0x1);
        gbc.writeMem(0xdea7, { 0x8, 0x7f, 0xfd });
        gbc.writeMem(0xfd7f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xeca);
        EXPECT(gbc.pc(), 0xdeaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdea7), 0x8);
        EXPECT(gbc.readMem(0xdea8), 0x7f);
        EXPECT(gbc.readMem(0xdea9), 0xfd);
        EXPECT(gbc.readMem(0xfd7f), 0xca);
        EXPECT(gbc.readMem(0xfd80), 0xe);
        // 08 038D
        gbc.setState(0x9973, 0x69ff, 0xad90, 0x1f85, 0xd4a, 0xa2, 0x0, 0x1);
        gbc.writeMem(0x9973, { 0x8, 0x75, 0xa7 });
        gbc.writeMem(0xa775, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x69ff);
        EXPECT(gbc.pc(), 0x9976);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9973), 0x8);
        EXPECT(gbc.readMem(0x9974), 0x75);
        EXPECT(gbc.readMem(0x9975), 0xa7);
        EXPECT(gbc.readMem(0xa775), 0xff);
        EXPECT(gbc.readMem(0xa776), 0x69);
        // 08 038E
        gbc.setState(0x1063, 0x647, 0xc2b0, 0xd9ff, 0x1a57, 0x372, 0x1, 0x1);
        gbc.writeMem(0x1063, { 0x8, 0x36, 0xaf });
        gbc.writeMem(0xaf36, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x647);
        EXPECT(gbc.pc(), 0x1066);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf36), 0x47);
        EXPECT(gbc.readMem(0xaf37), 0x6);
        // 08 0390
        gbc.setState(0xd5f0, 0xc255, 0xdef0, 0x7612, 0xd6f1, 0x2671, 0x1, 0x1);
        gbc.writeMem(0xa811, { 0x0, 0x0 });
        gbc.writeMem(0xd5f0, { 0x8, 0x11, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc255);
        EXPECT(gbc.pc(), 0xd5f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa811), 0x55);
        EXPECT(gbc.readMem(0xa812), 0xc2);
        EXPECT(gbc.readMem(0xd5f0), 0x8);
        EXPECT(gbc.readMem(0xd5f1), 0x11);
        EXPECT(gbc.readMem(0xd5f2), 0xa8);
        // 08 0391
        gbc.setState(0x9363, 0xd21d, 0x8430, 0xe3c, 0xc39a, 0x6702, 0x1, 0x0);
        gbc.writeMem(0x9363, { 0x8, 0x72, 0xd1 });
        gbc.writeMem(0xd172, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd21d);
        EXPECT(gbc.pc(), 0x9366);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9363), 0x8);
        EXPECT(gbc.readMem(0x9364), 0x72);
        EXPECT(gbc.readMem(0x9365), 0xd1);
        EXPECT(gbc.readMem(0xd172), 0x1d);
        EXPECT(gbc.readMem(0xd173), 0xd2);
        // 08 0392
        gbc.setState(0xeb3f, 0x7c6c, 0x3240, 0x6dcb, 0x3dc9, 0x36e0, 0x0, 0x1);
        gbc.writeMem(0x914b, { 0x0, 0x0 });
        gbc.writeMem(0xeb3f, { 0x8, 0x4b, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x7c6c);
        EXPECT(gbc.pc(), 0xeb42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x914b), 0x6c);
        EXPECT(gbc.readMem(0x914c), 0x7c);
        EXPECT(gbc.readMem(0xeb3f), 0x8);
        EXPECT(gbc.readMem(0xeb40), 0x4b);
        EXPECT(gbc.readMem(0xeb41), 0x91);
        // 08 0393
        gbc.setState(0x97c7, 0x8387, 0x2560, 0x4051, 0xb126, 0x9c4b, 0x0, 0x1);
        gbc.writeMem(0x97c7, { 0x8, 0x3e, 0xbe });
        gbc.writeMem(0xbe3e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8387);
        EXPECT(gbc.pc(), 0x97ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97c7), 0x8);
        EXPECT(gbc.readMem(0x97c8), 0x3e);
        EXPECT(gbc.readMem(0x97c9), 0xbe);
        EXPECT(gbc.readMem(0xbe3e), 0x87);
        EXPECT(gbc.readMem(0xbe3f), 0x83);
        // 08 0396
        gbc.setState(0xd346, 0xcc77, 0x3d80, 0xc376, 0x60be, 0x4f20, 0x0, 0x1);
        gbc.writeMem(0x88f3, { 0x0, 0x0 });
        gbc.writeMem(0xd346, { 0x8, 0xf3, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xcc77);
        EXPECT(gbc.pc(), 0xd349);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88f3), 0x77);
        EXPECT(gbc.readMem(0x88f4), 0xcc);
        EXPECT(gbc.readMem(0xd346), 0x8);
        EXPECT(gbc.readMem(0xd347), 0xf3);
        EXPECT(gbc.readMem(0xd348), 0x88);
        // 08 0399
        gbc.setState(0x540e, 0x6118, 0xd520, 0xa252, 0x8a07, 0xa04b, 0x1, 0x0);
        gbc.writeMem(0x540e, { 0x8, 0x1c, 0xca });
        gbc.writeMem(0xca1c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x6118);
        EXPECT(gbc.pc(), 0x5411);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca1c), 0x18);
        EXPECT(gbc.readMem(0xca1d), 0x61);
        // 08 039A
        gbc.setState(0x7363, 0x175a, 0x22a0, 0xc4e5, 0xe1b8, 0x3bd6, 0x1, 0x1);
        gbc.writeMem(0x7363, { 0x8, 0xb, 0xb5 });
        gbc.writeMem(0xb50b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x175a);
        EXPECT(gbc.pc(), 0x7366);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb50b), 0x5a);
        EXPECT(gbc.readMem(0xb50c), 0x17);
        // 08 039C
        gbc.setState(0x209c, 0x8be5, 0x4b10, 0x41b1, 0x6027, 0xe673, 0x1, 0x0);
        gbc.writeMem(0x209c, { 0x8, 0x79, 0xda });
        gbc.writeMem(0xda79, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x8be5);
        EXPECT(gbc.pc(), 0x209f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda79), 0xe5);
        EXPECT(gbc.readMem(0xda7a), 0x8b);
        // 08 039F
        gbc.setState(0x886, 0x8741, 0x92f0, 0xba4e, 0x675f, 0xf7df, 0x1, 0x0);
        gbc.writeMem(0x886, { 0x8, 0x49, 0x94 });
        gbc.writeMem(0x9449, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x8741);
        EXPECT(gbc.pc(), 0x889);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9449), 0x41);
        EXPECT(gbc.readMem(0x944a), 0x87);
        // 08 03A2
        gbc.setState(0xbac2, 0x9138, 0x6360, 0xf4dd, 0x398c, 0xb7fe, 0x0, 0x0);
        gbc.writeMem(0x8aa4, { 0x0, 0x0 });
        gbc.writeMem(0xbac2, { 0x8, 0xa4, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9138);
        EXPECT(gbc.pc(), 0xbac5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aa4), 0x38);
        EXPECT(gbc.readMem(0x8aa5), 0x91);
        EXPECT(gbc.readMem(0xbac2), 0x8);
        EXPECT(gbc.readMem(0xbac3), 0xa4);
        EXPECT(gbc.readMem(0xbac4), 0x8a);
        // 08 03A3
        gbc.setState(0x5b0d, 0xa843, 0x9ef0, 0x3651, 0xf77a, 0xdda4, 0x1, 0x0);
        gbc.writeMem(0x5b0d, { 0x8, 0xb2, 0x97 });
        gbc.writeMem(0x97b2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xa843);
        EXPECT(gbc.pc(), 0x5b10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97b2), 0x43);
        EXPECT(gbc.readMem(0x97b3), 0xa8);
        // 08 03A4
        gbc.setState(0x4129, 0x2fa7, 0xd870, 0xd3e7, 0x478f, 0x69b6, 0x1, 0x0);
        gbc.writeMem(0x4129, { 0x8, 0xf9, 0x94 });
        gbc.writeMem(0x94f9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x2fa7);
        EXPECT(gbc.pc(), 0x412c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94f9), 0xa7);
        EXPECT(gbc.readMem(0x94fa), 0x2f);
        // 08 03A5
        gbc.setState(0xa565, 0xc2fb, 0x6ba0, 0x1c36, 0x52b1, 0x873c, 0x1, 0x1);
        gbc.writeMem(0xa565, { 0x8, 0x73, 0xb2 });
        gbc.writeMem(0xb273, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xc2fb);
        EXPECT(gbc.pc(), 0xa568);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa565), 0x8);
        EXPECT(gbc.readMem(0xa566), 0x73);
        EXPECT(gbc.readMem(0xa567), 0xb2);
        EXPECT(gbc.readMem(0xb273), 0xfb);
        EXPECT(gbc.readMem(0xb274), 0xc2);
        // 08 03A8
        gbc.setState(0xee9f, 0xfd3f, 0x8940, 0x59ce, 0xb787, 0xbb8f, 0x1, 0x0);
        gbc.writeMem(0xbe8d, { 0x0, 0x0 });
        gbc.writeMem(0xee9f, { 0x8, 0x8d, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xfd3f);
        EXPECT(gbc.pc(), 0xeea2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe8d), 0x3f);
        EXPECT(gbc.readMem(0xbe8e), 0xfd);
        EXPECT(gbc.readMem(0xee9f), 0x8);
        EXPECT(gbc.readMem(0xeea0), 0x8d);
        EXPECT(gbc.readMem(0xeea1), 0xbe);
        // 08 03AB
        gbc.setState(0x4f90, 0x821e, 0x3a10, 0x757c, 0x8d46, 0xd749, 0x0, 0x0);
        gbc.writeMem(0x4f90, { 0x8, 0xfb, 0xb0 });
        gbc.writeMem(0xb0fb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x821e);
        EXPECT(gbc.pc(), 0x4f93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0fb), 0x1e);
        EXPECT(gbc.readMem(0xb0fc), 0x82);
        // 08 03AD
        gbc.setState(0x2bbf, 0x5fbe, 0xa8b0, 0xe8e9, 0x88c4, 0xc1f3, 0x0, 0x0);
        gbc.writeMem(0x2bbf, { 0x8, 0x85, 0xf9 });
        gbc.writeMem(0xf985, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x5fbe);
        EXPECT(gbc.pc(), 0x2bc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf985), 0xbe);
        EXPECT(gbc.readMem(0xf986), 0x5f);
        // 08 03AF
        gbc.setState(0xed02, 0xf1d8, 0xd7c0, 0xdf18, 0xf91b, 0xf031, 0x1, 0x1);
        gbc.writeMem(0xcf7c, { 0x0, 0x0 });
        gbc.writeMem(0xed02, { 0x8, 0x7c, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf1d8);
        EXPECT(gbc.pc(), 0xed05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf7c), 0xd8);
        EXPECT(gbc.readMem(0xcf7d), 0xf1);
        EXPECT(gbc.readMem(0xed02), 0x8);
        EXPECT(gbc.readMem(0xed03), 0x7c);
        EXPECT(gbc.readMem(0xed04), 0xcf);
        // 08 03B0
        gbc.setState(0x6871, 0x1c9c, 0x5d30, 0x398, 0xd1d1, 0x18ac, 0x1, 0x1);
        gbc.writeMem(0x6871, { 0x8, 0x86, 0xc1 });
        gbc.writeMem(0xc186, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1c9c);
        EXPECT(gbc.pc(), 0x6874);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc186), 0x9c);
        EXPECT(gbc.readMem(0xc187), 0x1c);
        // 08 03B4
        gbc.setState(0xb729, 0x54f9, 0x2f10, 0xebd6, 0x8d87, 0x3e9e, 0x1, 0x0);
        gbc.writeMem(0x8f4a, { 0x0, 0x0 });
        gbc.writeMem(0xb729, { 0x8, 0x4a, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x54f9);
        EXPECT(gbc.pc(), 0xb72c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f4a), 0xf9);
        EXPECT(gbc.readMem(0x8f4b), 0x54);
        EXPECT(gbc.readMem(0xb729), 0x8);
        EXPECT(gbc.readMem(0xb72a), 0x4a);
        EXPECT(gbc.readMem(0xb72b), 0x8f);
        // 08 03B7
        gbc.setState(0x988d, 0x6c78, 0x80e0, 0x217f, 0x4ff7, 0xd65a, 0x1, 0x0);
        gbc.writeMem(0x988d, { 0x8, 0x3d, 0xa9 });
        gbc.writeMem(0xa93d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6c78);
        EXPECT(gbc.pc(), 0x9890);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x988d), 0x8);
        EXPECT(gbc.readMem(0x988e), 0x3d);
        EXPECT(gbc.readMem(0x988f), 0xa9);
        EXPECT(gbc.readMem(0xa93d), 0x78);
        EXPECT(gbc.readMem(0xa93e), 0x6c);
        // 08 03B9
        gbc.setState(0x4a36, 0x4b78, 0x6470, 0xda9b, 0xfc98, 0x6c2c, 0x0, 0x0);
        gbc.writeMem(0x4a36, { 0x8, 0x71, 0xa5 });
        gbc.writeMem(0xa571, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4b78);
        EXPECT(gbc.pc(), 0x4a39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa571), 0x78);
        EXPECT(gbc.readMem(0xa572), 0x4b);
        // 08 03BA
        gbc.setState(0x7c98, 0xe71, 0x2800, 0xb5ec, 0x6ae9, 0x4db8, 0x1, 0x0);
        gbc.writeMem(0x7c98, { 0x8, 0xa7, 0xc6 });
        gbc.writeMem(0xc6a7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xe71);
        EXPECT(gbc.pc(), 0x7c9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6a7), 0x71);
        EXPECT(gbc.readMem(0xc6a8), 0xe);
        // 08 03BB
        gbc.setState(0x595, 0x3080, 0x5f90, 0xcb2d, 0x87d3, 0x3c15, 0x1, 0x0);
        gbc.writeMem(0x595, { 0x8, 0xcd, 0x87 });
        gbc.writeMem(0x87cd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3080);
        EXPECT(gbc.pc(), 0x598);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87cd), 0x80);
        EXPECT(gbc.readMem(0x87ce), 0x30);
        // 08 03BC
        gbc.setState(0x43a9, 0xc619, 0x9d90, 0x3d28, 0xa9ea, 0x1a7e, 0x0, 0x0);
        gbc.writeMem(0x43a9, { 0x8, 0xcd, 0xdb });
        gbc.writeMem(0xdbcd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc619);
        EXPECT(gbc.pc(), 0x43ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbcd), 0x19);
        EXPECT(gbc.readMem(0xdbce), 0xc6);
        // 08 03BD
        gbc.setState(0x5436, 0x1435, 0x91e0, 0xeef1, 0x2bc0, 0xeed4, 0x1, 0x0);
        gbc.writeMem(0x5436, { 0x8, 0xa6, 0x98 });
        gbc.writeMem(0x98a6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x1435);
        EXPECT(gbc.pc(), 0x5439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98a6), 0x35);
        EXPECT(gbc.readMem(0x98a7), 0x14);
        // 08 03BF
        gbc.setState(0xcfe3, 0x2f67, 0x3330, 0x3732, 0x3250, 0x2e55, 0x1, 0x1);
        gbc.writeMem(0xcfe3, { 0x8, 0xe5, 0xf7 });
        gbc.writeMem(0xf7e5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x2f67);
        EXPECT(gbc.pc(), 0xcfe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfe3), 0x8);
        EXPECT(gbc.readMem(0xcfe4), 0xe5);
        EXPECT(gbc.readMem(0xcfe5), 0xf7);
        EXPECT(gbc.readMem(0xf7e5), 0x67);
        EXPECT(gbc.readMem(0xf7e6), 0x2f);
        // 08 03C0
        gbc.setState(0x4d0, 0x8db0, 0x8b90, 0xb97b, 0x3045, 0x18d2, 0x1, 0x1);
        gbc.writeMem(0x4d0, { 0x8, 0xf9, 0xb0 });
        gbc.writeMem(0xb0f9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8db0);
        EXPECT(gbc.pc(), 0x4d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0f9), 0xb0);
        EXPECT(gbc.readMem(0xb0fa), 0x8d);
        // 08 03C1
        gbc.setState(0xdd88, 0xe6ff, 0x74b0, 0x2917, 0xb82, 0xe23, 0x0, 0x0);
        gbc.writeMem(0xb325, { 0x0, 0x0 });
        gbc.writeMem(0xdd88, { 0x8, 0x25, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xe6ff);
        EXPECT(gbc.pc(), 0xdd8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb325), 0xff);
        EXPECT(gbc.readMem(0xb326), 0xe6);
        EXPECT(gbc.readMem(0xdd88), 0x8);
        EXPECT(gbc.readMem(0xdd89), 0x25);
        EXPECT(gbc.readMem(0xdd8a), 0xb3);
        // 08 03C2
        gbc.setState(0xa5c5, 0xb65e, 0x94c0, 0xfc68, 0xb40e, 0x46a8, 0x0, 0x1);
        gbc.writeMem(0xa5c5, { 0x8, 0xd8, 0xda });
        gbc.writeMem(0xdad8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb65e);
        EXPECT(gbc.pc(), 0xa5c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5c5), 0x8);
        EXPECT(gbc.readMem(0xa5c6), 0xd8);
        EXPECT(gbc.readMem(0xa5c7), 0xda);
        EXPECT(gbc.readMem(0xdad8), 0x5e);
        EXPECT(gbc.readMem(0xdad9), 0xb6);
        // 08 03C5
        gbc.setState(0x4166, 0x4183, 0x6490, 0xb43c, 0xbb88, 0xc4be, 0x1, 0x0);
        gbc.writeMem(0x4166, { 0x8, 0x7d, 0xb6 });
        gbc.writeMem(0xb67d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4183);
        EXPECT(gbc.pc(), 0x4169);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb67d), 0x83);
        EXPECT(gbc.readMem(0xb67e), 0x41);
        // 08 03C7
        gbc.setState(0xd496, 0xbfbd, 0x3f90, 0x6eaa, 0xc0ea, 0x44ba, 0x1, 0x1);
        gbc.writeMem(0xa955, { 0x0, 0x0 });
        gbc.writeMem(0xd496, { 0x8, 0x55, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xbfbd);
        EXPECT(gbc.pc(), 0xd499);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa955), 0xbd);
        EXPECT(gbc.readMem(0xa956), 0xbf);
        EXPECT(gbc.readMem(0xd496), 0x8);
        EXPECT(gbc.readMem(0xd497), 0x55);
        EXPECT(gbc.readMem(0xd498), 0xa9);
        // 08 03C8
        gbc.setState(0x586, 0xa264, 0x2ba0, 0x194a, 0xc3f9, 0x7910, 0x0, 0x0);
        gbc.writeMem(0x586, { 0x8, 0x71, 0xa3 });
        gbc.writeMem(0xa371, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xa264);
        EXPECT(gbc.pc(), 0x589);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa371), 0x64);
        EXPECT(gbc.readMem(0xa372), 0xa2);
        // 08 03C9
        gbc.setState(0x5871, 0x2a29, 0x1490, 0xc9bc, 0x7bb5, 0x4250, 0x0, 0x0);
        gbc.writeMem(0x5871, { 0x8, 0x6b, 0xc4 });
        gbc.writeMem(0xc46b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2a29);
        EXPECT(gbc.pc(), 0x5874);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc46b), 0x29);
        EXPECT(gbc.readMem(0xc46c), 0x2a);
        // 08 03D2
        gbc.setState(0xef7, 0x7c54, 0xa1d0, 0x3ae5, 0x4af1, 0xcc00, 0x1, 0x1);
        gbc.writeMem(0xef7, { 0x8, 0x7b, 0x97 });
        gbc.writeMem(0x977b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7c54);
        EXPECT(gbc.pc(), 0xefa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x977b), 0x54);
        EXPECT(gbc.readMem(0x977c), 0x7c);
        // 08 03D7
        gbc.setState(0xe4d9, 0xb978, 0x1800, 0x7c6d, 0x39fb, 0xf33c, 0x1, 0x0);
        gbc.writeMem(0xaad5, { 0x0, 0x0 });
        gbc.writeMem(0xe4d9, { 0x8, 0xd5, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb978);
        EXPECT(gbc.pc(), 0xe4dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaad5), 0x78);
        EXPECT(gbc.readMem(0xaad6), 0xb9);
        EXPECT(gbc.readMem(0xe4d9), 0x8);
        EXPECT(gbc.readMem(0xe4da), 0xd5);
        EXPECT(gbc.readMem(0xe4db), 0xaa);
        // 08 03DA
        gbc.setState(0x1141, 0x280b, 0x8e50, 0xea8c, 0xd073, 0x2da9, 0x0, 0x0);
        gbc.writeMem(0x1141, { 0x8, 0xca, 0xea });
        gbc.writeMem(0xeaca, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x280b);
        EXPECT(gbc.pc(), 0x1144);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaca), 0xb);
        EXPECT(gbc.readMem(0xeacb), 0x28);
        // 08 03DC
        gbc.setState(0x998c, 0x3296, 0x82a0, 0xe763, 0x4cb, 0xab9d, 0x0, 0x1);
        gbc.writeMem(0x998c, { 0x8, 0x5d, 0x9e });
        gbc.writeMem(0x9e5d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3296);
        EXPECT(gbc.pc(), 0x998f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x998c), 0x8);
        EXPECT(gbc.readMem(0x998d), 0x5d);
        EXPECT(gbc.readMem(0x998e), 0x9e);
        EXPECT(gbc.readMem(0x9e5d), 0x96);
        EXPECT(gbc.readMem(0x9e5e), 0x32);
        // 08 03DE
        gbc.setState(0x5156, 0xf33a, 0x4340, 0xc19, 0x74e0, 0xda0, 0x1, 0x0);
        gbc.writeMem(0x5156, { 0x8, 0x92, 0xb3 });
        gbc.writeMem(0xb392, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xf33a);
        EXPECT(gbc.pc(), 0x5159);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb392), 0x3a);
        EXPECT(gbc.readMem(0xb393), 0xf3);
        // 08 03DF
        gbc.setState(0x90d6, 0x9b25, 0x5ad0, 0xbdea, 0xdd7e, 0x77cd, 0x1, 0x0);
        gbc.writeMem(0x90d6, { 0x8, 0x41, 0xdf });
        gbc.writeMem(0xdf41, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x9b25);
        EXPECT(gbc.pc(), 0x90d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90d6), 0x8);
        EXPECT(gbc.readMem(0x90d7), 0x41);
        EXPECT(gbc.readMem(0x90d8), 0xdf);
        EXPECT(gbc.readMem(0xdf41), 0x25);
        EXPECT(gbc.readMem(0xdf42), 0x9b);
        // 08 03E1
        gbc.setState(0x4c77, 0xc754, 0xdd80, 0x7bb4, 0x9d68, 0x814e, 0x1, 0x1);
        gbc.writeMem(0x4c77, { 0x8, 0x49, 0x82 });
        gbc.writeMem(0x8249, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc754);
        EXPECT(gbc.pc(), 0x4c7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8249), 0x54);
        EXPECT(gbc.readMem(0x824a), 0xc7);
        // 08 03E2
        gbc.setState(0x6104, 0x61d3, 0xa090, 0x8d51, 0x9c49, 0x347e, 0x0, 0x0);
        gbc.writeMem(0x6104, { 0x8, 0xce, 0xf5 });
        gbc.writeMem(0xf5ce, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x61d3);
        EXPECT(gbc.pc(), 0x6107);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf5ce), 0xd3);
        EXPECT(gbc.readMem(0xf5cf), 0x61);
        // 08 03E4
        gbc.setState(0x160c, 0x4316, 0xd390, 0x5f2c, 0x271d, 0x5400, 0x0, 0x0);
        gbc.writeMem(0x160c, { 0x8, 0x9e, 0xcc });
        gbc.writeMem(0xcc9e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x4316);
        EXPECT(gbc.pc(), 0x160f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc9e), 0x16);
        EXPECT(gbc.readMem(0xcc9f), 0x43);
        // 08 03E6
        gbc.setState(0x2d4e, 0xff75, 0x9f20, 0x3dd6, 0x5b0f, 0x269c, 0x0, 0x1);
        gbc.writeMem(0x2d4e, { 0x8, 0x8b, 0xe6 });
        gbc.writeMem(0xe68b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xff75);
        EXPECT(gbc.pc(), 0x2d51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe68b), 0x75);
        EXPECT(gbc.readMem(0xe68c), 0xff);
    }
