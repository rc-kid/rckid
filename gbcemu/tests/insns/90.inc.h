    TEST(gbcemu, opcode_90) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 90 0000
        gbc.setState(0x926, 0x8708, 0x3c30, 0xb438, 0x3dbd, 0x229b, 0x0, 0x0);
        gbc.writeMem(0x926, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8708);
        EXPECT(gbc.pc(), 0x927);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0001
        gbc.setState(0x6a1c, 0xada6, 0x2ca0, 0x8d2c, 0x661d, 0xd2a1, 0x1, 0x1);
        gbc.writeMem(0x6a1c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xada6);
        EXPECT(gbc.pc(), 0x6a1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0002
        gbc.setState(0xd6ef, 0x27d6, 0x7530, 0xf740, 0x51f5, 0xfe73, 0x1, 0x0);
        gbc.writeMem(0xd6ef, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x27d6);
        EXPECT(gbc.pc(), 0xd6f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6ef), 0x90);
        // 90 0003
        gbc.setState(0x5d51, 0xba7f, 0x34d0, 0xbe45, 0xdae9, 0xce6a, 0x0, 0x0);
        gbc.writeMem(0x5d51, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xba7f);
        EXPECT(gbc.pc(), 0x5d52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0004
        gbc.setState(0x3b7d, 0xcca1, 0x51d0, 0xc155, 0xab80, 0x521e, 0x0, 0x0);
        gbc.writeMem(0x3b7d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xcca1);
        EXPECT(gbc.pc(), 0x3b7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0005
        gbc.setState(0x2b1b, 0x5f98, 0x6f50, 0xcd09, 0xe4c9, 0x1b48, 0x1, 0x1);
        gbc.writeMem(0x2b1b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x5f98);
        EXPECT(gbc.pc(), 0x2b1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0006
        gbc.setState(0x10a2, 0xa927, 0x1650, 0x6f6b, 0x57e2, 0x82f1, 0x0, 0x0);
        gbc.writeMem(0x10a2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xa927);
        EXPECT(gbc.pc(), 0x10a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0007
        gbc.setState(0x8338, 0xbff1, 0x29d0, 0xf69d, 0xdf7, 0xf114, 0x1, 0x1);
        gbc.writeMem(0x8338, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xbff1);
        EXPECT(gbc.pc(), 0x8339);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8338), 0x90);
        // 90 0008
        gbc.setState(0x27c8, 0xd98f, 0x30f0, 0x5fdd, 0x26ae, 0x323e, 0x0, 0x0);
        gbc.writeMem(0x27c8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd98f);
        EXPECT(gbc.pc(), 0x27c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 000A
        gbc.setState(0xe427, 0xe3e7, 0xfe90, 0x2342, 0xda5d, 0xa154, 0x1, 0x0);
        gbc.writeMem(0xe427, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xe3e7);
        EXPECT(gbc.pc(), 0xe428);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe427), 0x90);
        // 90 000B
        gbc.setState(0x3c0c, 0x55c, 0x9e30, 0xc7bb, 0x7951, 0xad0a, 0x0, 0x0);
        gbc.writeMem(0x3c0c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x55c);
        EXPECT(gbc.pc(), 0x3c0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 000C
        gbc.setState(0x7c0, 0x26ff, 0xc3b0, 0x4aeb, 0x31b1, 0x7900, 0x1, 0x0);
        gbc.writeMem(0x7c0, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x26ff);
        EXPECT(gbc.pc(), 0x7c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 000D
        gbc.setState(0x3e34, 0xd546, 0x5a60, 0x8eb2, 0x6648, 0xd5be, 0x1, 0x1);
        gbc.writeMem(0x3e34, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xd546);
        EXPECT(gbc.pc(), 0x3e35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 000E
        gbc.setState(0xaef4, 0x6342, 0x1a20, 0x9a72, 0xd6f, 0x9927, 0x0, 0x0);
        gbc.writeMem(0xaef4, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x6342);
        EXPECT(gbc.pc(), 0xaef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaef4), 0x90);
        // 90 000F
        gbc.setState(0xcd8a, 0x234, 0x3580, 0x60ff, 0x65fa, 0x85f2, 0x0, 0x1);
        gbc.writeMem(0xcd8a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x234);
        EXPECT(gbc.pc(), 0xcd8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd8a), 0x90);
        // 90 0010
        gbc.setState(0xede4, 0x4435, 0xebc0, 0x32e0, 0x56a6, 0xc4bc, 0x1, 0x1);
        gbc.writeMem(0xede4, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4435);
        EXPECT(gbc.pc(), 0xede5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xede4), 0x90);
        // 90 0011
        gbc.setState(0x382a, 0xf8c3, 0xbe30, 0x37ca, 0x827, 0x8a5b, 0x0, 0x0);
        gbc.writeMem(0x382a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf8c3);
        EXPECT(gbc.pc(), 0x382b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0012
        gbc.setState(0x5dc9, 0x7f91, 0x5e80, 0xd65e, 0x6720, 0x18d2, 0x1, 0x1);
        gbc.writeMem(0x5dc9, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7f91);
        EXPECT(gbc.pc(), 0x5dca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0013
        gbc.setState(0x5743, 0xde12, 0xe090, 0xe841, 0xd695, 0xf4e2, 0x0, 0x0);
        gbc.writeMem(0x5743, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xde12);
        EXPECT(gbc.pc(), 0x5744);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0014
        gbc.setState(0xb964, 0x1b18, 0xd4b0, 0x8665, 0xa128, 0x8f13, 0x0, 0x0);
        gbc.writeMem(0xb964, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x1b18);
        EXPECT(gbc.pc(), 0xb965);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb964), 0x90);
        // 90 0015
        gbc.setState(0xe538, 0xd522, 0xefd0, 0x32, 0xa4ca, 0x81f0, 0x1, 0x1);
        gbc.writeMem(0xe538, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd522);
        EXPECT(gbc.pc(), 0xe539);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe538), 0x90);
        // 90 0016
        gbc.setState(0xd226, 0x9e23, 0xc960, 0xbf67, 0xbaab, 0x105d, 0x1, 0x0);
        gbc.writeMem(0xd226, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x9e23);
        EXPECT(gbc.pc(), 0xd227);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd226), 0x90);
        // 90 0017
        gbc.setState(0x48e5, 0x5cd4, 0x1590, 0xd6da, 0xd943, 0xfd4f, 0x0, 0x0);
        gbc.writeMem(0x48e5, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x5cd4);
        EXPECT(gbc.pc(), 0x48e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0018
        gbc.setState(0xe898, 0x60e1, 0x9280, 0xd9e1, 0x6c7, 0x16ef, 0x0, 0x1);
        gbc.writeMem(0xe898, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x60e1);
        EXPECT(gbc.pc(), 0xe899);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe898), 0x90);
        // 90 0019
        gbc.setState(0x4d10, 0x5660, 0x2bc0, 0x4d84, 0x1508, 0x6fb0, 0x1, 0x0);
        gbc.writeMem(0x4d10, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x5660);
        EXPECT(gbc.pc(), 0x4d11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 001A
        gbc.setState(0xda55, 0x2f02, 0xddd0, 0xcb7e, 0x2a25, 0xfa5d, 0x0, 0x1);
        gbc.writeMem(0xda55, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2f02);
        EXPECT(gbc.pc(), 0xda56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda55), 0x90);
        // 90 001B
        gbc.setState(0x333a, 0x1bc, 0x43c0, 0x4102, 0xb9cb, 0xd21f, 0x1, 0x1);
        gbc.writeMem(0x333a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x1bc);
        EXPECT(gbc.pc(), 0x333b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 001C
        gbc.setState(0xd14, 0x2653, 0xdae0, 0xdb95, 0xb280, 0x1169, 0x0, 0x0);
        gbc.writeMem(0xd14, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2653);
        EXPECT(gbc.pc(), 0xd15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 001D
        gbc.setState(0xa354, 0x6aac, 0xef20, 0x854f, 0xb254, 0x12c9, 0x0, 0x1);
        gbc.writeMem(0xa354, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6aac);
        EXPECT(gbc.pc(), 0xa355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa354), 0x90);
        // 90 001E
        gbc.setState(0x2b8c, 0xc2fd, 0x4aa0, 0x9924, 0x1de6, 0x53cd, 0x1, 0x1);
        gbc.writeMem(0x2b8c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc2fd);
        EXPECT(gbc.pc(), 0x2b8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 001F
        gbc.setState(0x1234, 0x51e1, 0x6d80, 0x1228, 0x2890, 0xe326, 0x1, 0x0);
        gbc.writeMem(0x1234, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x51e1);
        EXPECT(gbc.pc(), 0x1235);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0020
        gbc.setState(0x35bf, 0x7939, 0xa270, 0xee91, 0xece2, 0x44d1, 0x0, 0x0);
        gbc.writeMem(0x35bf, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x7939);
        EXPECT(gbc.pc(), 0x35c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0021
        gbc.setState(0x1025, 0xcf74, 0xa830, 0x77f1, 0x336b, 0x500a, 0x1, 0x0);
        gbc.writeMem(0x1025, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xcf74);
        EXPECT(gbc.pc(), 0x1026);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0022
        gbc.setState(0x88a2, 0x309e, 0x1cb0, 0x765, 0xef4, 0x2b71, 0x1, 0x0);
        gbc.writeMem(0x88a2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x309e);
        EXPECT(gbc.pc(), 0x88a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88a2), 0x90);
        // 90 0023
        gbc.setState(0xbc4e, 0x37b9, 0x1bd0, 0x265e, 0x4a45, 0x89bf, 0x0, 0x1);
        gbc.writeMem(0xbc4e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x37b9);
        EXPECT(gbc.pc(), 0xbc4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc4e), 0x90);
        // 90 0024
        gbc.setState(0xb3b2, 0x3d79, 0x2cb0, 0xb0e2, 0xb4a, 0xf394, 0x0, 0x1);
        gbc.writeMem(0xb3b2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x3d79);
        EXPECT(gbc.pc(), 0xb3b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3b2), 0x90);
        // 90 0025
        gbc.setState(0xce30, 0xf0d1, 0x9940, 0xe503, 0xde02, 0xd00e, 0x0, 0x1);
        gbc.writeMem(0xce30, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xf0d1);
        EXPECT(gbc.pc(), 0xce31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce30), 0x90);
        // 90 0026
        gbc.setState(0xe6d, 0x362a, 0xc740, 0x7a7, 0xb753, 0x1dce, 0x0, 0x1);
        gbc.writeMem(0xe6d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x362a);
        EXPECT(gbc.pc(), 0xe6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0027
        gbc.setState(0xd350, 0x7214, 0x6980, 0xd04d, 0x5b06, 0x8ee4, 0x0, 0x1);
        gbc.writeMem(0xd350, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7214);
        EXPECT(gbc.pc(), 0xd351);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd350), 0x90);
        // 90 0028
        gbc.setState(0xd052, 0x3a0, 0x56b0, 0x898e, 0x3829, 0x1924, 0x0, 0x0);
        gbc.writeMem(0xd052, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3a0);
        EXPECT(gbc.pc(), 0xd053);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd052), 0x90);
        // 90 0029
        gbc.setState(0x1746, 0x1f1f, 0x29f0, 0x64fb, 0x17b4, 0xf758, 0x1, 0x0);
        gbc.writeMem(0x1746, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1f1f);
        EXPECT(gbc.pc(), 0x1747);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 002A
        gbc.setState(0x7911, 0xb812, 0x3980, 0xa643, 0x1910, 0x5a1b, 0x1, 0x0);
        gbc.writeMem(0x7911, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb812);
        EXPECT(gbc.pc(), 0x7912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 002B
        gbc.setState(0xe5d, 0xf977, 0xb890, 0xa055, 0x39cf, 0x54b2, 0x1, 0x1);
        gbc.writeMem(0xe5d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf977);
        EXPECT(gbc.pc(), 0xe5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 002C
        gbc.setState(0x21bf, 0xb589, 0xed30, 0x7e8f, 0xb9da, 0x4238, 0x0, 0x1);
        gbc.writeMem(0x21bf, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb589);
        EXPECT(gbc.pc(), 0x21c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 002D
        gbc.setState(0x7c9d, 0xd0cf, 0x9b30, 0xc1d9, 0x6f22, 0xd0ba, 0x0, 0x0);
        gbc.writeMem(0x7c9d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd0cf);
        EXPECT(gbc.pc(), 0x7c9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 002E
        gbc.setState(0xd5d3, 0xe7a1, 0x3280, 0x4e63, 0x2381, 0x3aa6, 0x1, 0x0);
        gbc.writeMem(0xd5d3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xe7a1);
        EXPECT(gbc.pc(), 0xd5d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5d3), 0x90);
        // 90 002F
        gbc.setState(0x2c7d, 0x24ff, 0x84b0, 0xb1d0, 0xde06, 0xafa9, 0x1, 0x0);
        gbc.writeMem(0x2c7d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x24ff);
        EXPECT(gbc.pc(), 0x2c7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0030
        gbc.setState(0x42a8, 0xab9a, 0x3970, 0x2c3a, 0xce60, 0x359a, 0x1, 0x1);
        gbc.writeMem(0x42a8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xab9a);
        EXPECT(gbc.pc(), 0x42a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0031
        gbc.setState(0xb65a, 0xaf66, 0xdd0, 0x3a40, 0xde4f, 0x220a, 0x1, 0x0);
        gbc.writeMem(0xb65a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xaf66);
        EXPECT(gbc.pc(), 0xb65b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb65a), 0x90);
        // 90 0032
        gbc.setState(0xb599, 0xe410, 0xabd0, 0xee8a, 0x87e3, 0xb783, 0x1, 0x0);
        gbc.writeMem(0xb599, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe410);
        EXPECT(gbc.pc(), 0xb59a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb599), 0x90);
        // 90 0033
        gbc.setState(0x21df, 0xe409, 0x59a0, 0x95c0, 0xa348, 0x50d0, 0x0, 0x0);
        gbc.writeMem(0x21df, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe409);
        EXPECT(gbc.pc(), 0x21e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0034
        gbc.setState(0x10a0, 0xdede, 0xc1c0, 0x290a, 0xf1fd, 0x8fa1, 0x0, 0x0);
        gbc.writeMem(0x10a0, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xdede);
        EXPECT(gbc.pc(), 0x10a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0035
        gbc.setState(0x6515, 0x321c, 0xff0, 0x78a6, 0xf51f, 0xf8b9, 0x0, 0x0);
        gbc.writeMem(0x6515, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x321c);
        EXPECT(gbc.pc(), 0x6516);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0036
        gbc.setState(0x7af6, 0x6297, 0x9e50, 0x682b, 0x128a, 0x507d, 0x0, 0x1);
        gbc.writeMem(0x7af6, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x6297);
        EXPECT(gbc.pc(), 0x7af7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0037
        gbc.setState(0xba3d, 0x8612, 0xce10, 0x7b83, 0x5ce8, 0xd74e, 0x0, 0x0);
        gbc.writeMem(0xba3d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x8612);
        EXPECT(gbc.pc(), 0xba3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba3d), 0x90);
        // 90 0038
        gbc.setState(0xb606, 0x7a89, 0xd9e0, 0xfae1, 0xb810, 0x9253, 0x1, 0x0);
        gbc.writeMem(0xb606, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x7a89);
        EXPECT(gbc.pc(), 0xb607);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb606), 0x90);
        // 90 0039
        gbc.setState(0x18db, 0x5ad6, 0x65e0, 0xc5a3, 0xfde9, 0x3c86, 0x0, 0x0);
        gbc.writeMem(0x18db, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5ad6);
        EXPECT(gbc.pc(), 0x18dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 003A
        gbc.setState(0xa522, 0xfd14, 0x51e0, 0x7ec, 0x3794, 0xb5f7, 0x0, 0x1);
        gbc.writeMem(0xa522, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xfd14);
        EXPECT(gbc.pc(), 0xa523);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa522), 0x90);
        // 90 003B
        gbc.setState(0x5f, 0xebc0, 0x8e80, 0x236a, 0xc15d, 0x40d1, 0x1, 0x1);
        gbc.writeMem(0x5f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xebc0);
        EXPECT(gbc.pc(), 0x60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 003C
        gbc.setState(0x80c4, 0xb810, 0xbc30, 0x406f, 0xb4dd, 0xa545, 0x0, 0x1);
        gbc.writeMem(0x80c4, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xb810);
        EXPECT(gbc.pc(), 0x80c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80c4), 0x90);
        // 90 003D
        gbc.setState(0x9dd2, 0x21f8, 0xaa20, 0x7e8c, 0x6910, 0x2f9f, 0x0, 0x0);
        gbc.writeMem(0x9dd2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x21f8);
        EXPECT(gbc.pc(), 0x9dd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dd2), 0x90);
        // 90 003E
        gbc.setState(0x6bab, 0x7a4a, 0xf120, 0x3e96, 0x534e, 0x741, 0x1, 0x0);
        gbc.writeMem(0x6bab, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7a4a);
        EXPECT(gbc.pc(), 0x6bac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 003F
        gbc.setState(0x471a, 0x485, 0xbe20, 0x779, 0xd736, 0xf074, 0x0, 0x0);
        gbc.writeMem(0x471a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x485);
        EXPECT(gbc.pc(), 0x471b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0040
        gbc.setState(0x3dec, 0xc1d0, 0x1460, 0x3de8, 0xde10, 0x733b, 0x1, 0x0);
        gbc.writeMem(0x3dec, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc1d0);
        EXPECT(gbc.pc(), 0x3ded);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0041
        gbc.setState(0xc4c, 0xad71, 0x4630, 0x1c88, 0x99f6, 0x4b3e, 0x1, 0x1);
        gbc.writeMem(0xc4c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xad71);
        EXPECT(gbc.pc(), 0xc4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0042
        gbc.setState(0x98db, 0x68e4, 0x33f0, 0x6ed4, 0x1a9a, 0x8a15, 0x0, 0x0);
        gbc.writeMem(0x98db, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x68e4);
        EXPECT(gbc.pc(), 0x98dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98db), 0x90);
        // 90 0043
        gbc.setState(0x1777, 0x5eb2, 0x1ce0, 0xa5b4, 0xa662, 0xe50d, 0x0, 0x1);
        gbc.writeMem(0x1777, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5eb2);
        EXPECT(gbc.pc(), 0x1778);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0044
        gbc.setState(0x3cee, 0x94db, 0x54e0, 0x4c68, 0xc39f, 0x852b, 0x1, 0x0);
        gbc.writeMem(0x3cee, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x94db);
        EXPECT(gbc.pc(), 0x3cef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0045
        gbc.setState(0x4a0a, 0x1e54, 0x69a0, 0x7210, 0x7194, 0xc965, 0x0, 0x1);
        gbc.writeMem(0x4a0a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x1e54);
        EXPECT(gbc.pc(), 0x4a0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0046
        gbc.setState(0x1417, 0xdd13, 0x34d0, 0x8ceb, 0x96e2, 0x1f22, 0x0, 0x0);
        gbc.writeMem(0x1417, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xdd13);
        EXPECT(gbc.pc(), 0x1418);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0047
        gbc.setState(0x66b3, 0x3702, 0x18b0, 0xd8ab, 0xaf0e, 0x4244, 0x1, 0x0);
        gbc.writeMem(0x66b3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3702);
        EXPECT(gbc.pc(), 0x66b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0048
        gbc.setState(0x9db2, 0xfa80, 0xd930, 0x320e, 0x759a, 0xceab, 0x0, 0x1);
        gbc.writeMem(0x9db2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xfa80);
        EXPECT(gbc.pc(), 0x9db3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9db2), 0x90);
        // 90 0049
        gbc.setState(0x8d5c, 0x654, 0x6dc0, 0xa1aa, 0x10b3, 0x121, 0x0, 0x1);
        gbc.writeMem(0x8d5c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x654);
        EXPECT(gbc.pc(), 0x8d5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d5c), 0x90);
        // 90 004A
        gbc.setState(0xae79, 0xcd4e, 0xd9b0, 0x92d9, 0x5a86, 0x5890, 0x1, 0x0);
        gbc.writeMem(0xae79, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xcd4e);
        EXPECT(gbc.pc(), 0xae7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae79), 0x90);
        // 90 004B
        gbc.setState(0x5196, 0xc457, 0xc7d0, 0x91c2, 0x1dd3, 0x18c, 0x0, 0x0);
        gbc.writeMem(0x5196, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xc457);
        EXPECT(gbc.pc(), 0x5197);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 004D
        gbc.setState(0xafb6, 0x5fa2, 0x68a0, 0xe20, 0x5100, 0xe581, 0x1, 0x1);
        gbc.writeMem(0xafb6, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x5fa2);
        EXPECT(gbc.pc(), 0xafb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafb6), 0x90);
        // 90 004E
        gbc.setState(0x4554, 0xd29f, 0xddb0, 0xa2b1, 0x6456, 0x1be5, 0x1, 0x1);
        gbc.writeMem(0x4554, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd29f);
        EXPECT(gbc.pc(), 0x4555);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 004F
        gbc.setState(0x1b3d, 0x554c, 0xef10, 0xa57, 0x28d, 0x3e0e, 0x0, 0x0);
        gbc.writeMem(0x1b3d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x554c);
        EXPECT(gbc.pc(), 0x1b3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0050
        gbc.setState(0x7c8d, 0xf88d, 0xd7b0, 0x698e, 0x7498, 0x6906, 0x0, 0x0);
        gbc.writeMem(0x7c8d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf88d);
        EXPECT(gbc.pc(), 0x7c8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0051
        gbc.setState(0xeed2, 0xff5, 0xea60, 0x7861, 0xd6b6, 0xd59e, 0x0, 0x1);
        gbc.writeMem(0xeed2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xff5);
        EXPECT(gbc.pc(), 0xeed3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeed2), 0x90);
        // 90 0052
        gbc.setState(0xa695, 0xa7df, 0x6a0, 0xda3b, 0x1d3b, 0x922, 0x0, 0x1);
        gbc.writeMem(0xa695, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xa7df);
        EXPECT(gbc.pc(), 0xa696);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa695), 0x90);
        // 90 0053
        gbc.setState(0xea5c, 0x3708, 0xb660, 0x7c7f, 0x9ff, 0x1b2f, 0x1, 0x0);
        gbc.writeMem(0xea5c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x3708);
        EXPECT(gbc.pc(), 0xea5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea5c), 0x90);
        // 90 0054
        gbc.setState(0x8f65, 0x7a00, 0x1d70, 0x8255, 0x9928, 0x7fc8, 0x0, 0x1);
        gbc.writeMem(0x8f65, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x7a00);
        EXPECT(gbc.pc(), 0x8f66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f65), 0x90);
        // 90 0056
        gbc.setState(0x4edb, 0x7921, 0x35b0, 0xa364, 0xe351, 0x26a2, 0x1, 0x1);
        gbc.writeMem(0x4edb, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x7921);
        EXPECT(gbc.pc(), 0x4edc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0057
        gbc.setState(0xa238, 0x4eb2, 0x4470, 0x617c, 0x4fba, 0xdb5e, 0x0, 0x0);
        gbc.writeMem(0xa238, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4eb2);
        EXPECT(gbc.pc(), 0xa239);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa238), 0x90);
        // 90 0058
        gbc.setState(0x2661, 0x86b3, 0xc0, 0xcde7, 0x1b15, 0xf42, 0x0, 0x1);
        gbc.writeMem(0x2661, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x86b3);
        EXPECT(gbc.pc(), 0x2662);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0059
        gbc.setState(0x43d8, 0x2f57, 0x9a40, 0x66f2, 0x526c, 0xc9ae, 0x1, 0x1);
        gbc.writeMem(0x43d8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x2f57);
        EXPECT(gbc.pc(), 0x43d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 005A
        gbc.setState(0x4411, 0x16de, 0x7500, 0x73dd, 0x6afa, 0x34ea, 0x1, 0x0);
        gbc.writeMem(0x4411, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x16de);
        EXPECT(gbc.pc(), 0x4412);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 005B
        gbc.setState(0xd26d, 0x7b34, 0x9a0, 0xb843, 0xd09c, 0x5b4d, 0x1, 0x0);
        gbc.writeMem(0xd26d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x7b34);
        EXPECT(gbc.pc(), 0xd26e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd26d), 0x90);
        // 90 005C
        gbc.setState(0x753e, 0x8454, 0x6fb0, 0xc3c6, 0x431b, 0x9c02, 0x0, 0x1);
        gbc.writeMem(0x753e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x8454);
        EXPECT(gbc.pc(), 0x753f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 005D
        gbc.setState(0xea0d, 0x6d6e, 0x4a00, 0x526a, 0xd485, 0x2004, 0x0, 0x0);
        gbc.writeMem(0xea0d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6d6e);
        EXPECT(gbc.pc(), 0xea0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea0d), 0x90);
        // 90 005E
        gbc.setState(0xa2e5, 0x1165, 0x74d0, 0xcbba, 0x29b4, 0x8d8, 0x1, 0x0);
        gbc.writeMem(0xa2e5, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1165);
        EXPECT(gbc.pc(), 0xa2e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2e5), 0x90);
        // 90 005F
        gbc.setState(0xa58d, 0x5ce6, 0x3f00, 0x255e, 0xf041, 0xc4f0, 0x1, 0x0);
        gbc.writeMem(0xa58d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5ce6);
        EXPECT(gbc.pc(), 0xa58e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa58d), 0x90);
        // 90 0060
        gbc.setState(0x31b6, 0x3e75, 0xe6a0, 0xdcac, 0x35c, 0x1980, 0x1, 0x0);
        gbc.writeMem(0x31b6, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3e75);
        EXPECT(gbc.pc(), 0x31b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0061
        gbc.setState(0xcd2c, 0x756e, 0xdb80, 0xf7f3, 0x9d7f, 0x5aa3, 0x0, 0x0);
        gbc.writeMem(0xcd2c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x756e);
        EXPECT(gbc.pc(), 0xcd2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd2c), 0x90);
        // 90 0062
        gbc.setState(0x97c, 0x2856, 0x2c10, 0x9d40, 0x5788, 0x42d, 0x0, 0x0);
        gbc.writeMem(0x97c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x2856);
        EXPECT(gbc.pc(), 0x97d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0063
        gbc.setState(0x12d7, 0x7c98, 0xc540, 0xd4a4, 0xb9a0, 0x49b6, 0x1, 0x1);
        gbc.writeMem(0x12d7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7c98);
        EXPECT(gbc.pc(), 0x12d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0064
        gbc.setState(0x783e, 0x5d8b, 0x6e50, 0x7b81, 0x2b8, 0x5377, 0x1, 0x1);
        gbc.writeMem(0x783e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x5d8b);
        EXPECT(gbc.pc(), 0x783f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0065
        gbc.setState(0xcaec, 0x2ec6, 0xb360, 0xdf45, 0x1bf7, 0x412f, 0x1, 0x1);
        gbc.writeMem(0xcaec, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2ec6);
        EXPECT(gbc.pc(), 0xcaed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaec), 0x90);
        // 90 0066
        gbc.setState(0xda49, 0x7e1f, 0x360, 0x920, 0x6d6f, 0x90d4, 0x0, 0x1);
        gbc.writeMem(0xda49, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7e1f);
        EXPECT(gbc.pc(), 0xda4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda49), 0x90);
        // 90 0067
        gbc.setState(0x8821, 0x9ae5, 0x6830, 0x90e5, 0x2094, 0x940f, 0x1, 0x0);
        gbc.writeMem(0x8821, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9ae5);
        EXPECT(gbc.pc(), 0x8822);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8821), 0x90);
        // 90 0068
        gbc.setState(0x168e, 0x8998, 0x80f0, 0x3a33, 0x4cb2, 0x4a3f, 0x0, 0x0);
        gbc.writeMem(0x168e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8998);
        EXPECT(gbc.pc(), 0x168f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0069
        gbc.setState(0x9232, 0xde17, 0xd3f0, 0x4f36, 0xfd13, 0x535f, 0x0, 0x1);
        gbc.writeMem(0x9232, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xde17);
        EXPECT(gbc.pc(), 0x9233);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9232), 0x90);
        // 90 006A
        gbc.setState(0xad0c, 0x4a8d, 0x83d0, 0x5bf, 0xc87c, 0x5af, 0x1, 0x1);
        gbc.writeMem(0xad0c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x4a8d);
        EXPECT(gbc.pc(), 0xad0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad0c), 0x90);
        // 90 006B
        gbc.setState(0xf, 0xb66d, 0x8130, 0xab57, 0xf427, 0x5ebc, 0x0, 0x1);
        gbc.writeMem(0xf, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xb66d);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 006C
        gbc.setState(0x9b63, 0xeea8, 0x21b0, 0x7296, 0x99e0, 0x89ee, 0x1, 0x0);
        gbc.writeMem(0x9b63, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xeea8);
        EXPECT(gbc.pc(), 0x9b64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b63), 0x90);
        // 90 006D
        gbc.setState(0x33cb, 0xe715, 0x8010, 0xcaf2, 0x972, 0xc9b3, 0x1, 0x0);
        gbc.writeMem(0x33cb, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe715);
        EXPECT(gbc.pc(), 0x33cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 006E
        gbc.setState(0xd077, 0x1092, 0x32c0, 0x219f, 0x8baf, 0xbdf3, 0x1, 0x1);
        gbc.writeMem(0xd077, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1092);
        EXPECT(gbc.pc(), 0xd078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd077), 0x90);
        // 90 006F
        gbc.setState(0xd305, 0xf632, 0x1920, 0x1cde, 0x96d5, 0x53c7, 0x0, 0x0);
        gbc.writeMem(0xd305, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf632);
        EXPECT(gbc.pc(), 0xd306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd305), 0x90);
        // 90 0070
        gbc.setState(0xbb1b, 0xc6c, 0x7f40, 0x57, 0x7390, 0x4db7, 0x0, 0x1);
        gbc.writeMem(0xbb1b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc6c);
        EXPECT(gbc.pc(), 0xbb1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb1b), 0x90);
        // 90 0071
        gbc.setState(0xdaf0, 0x76bc, 0x7380, 0xc9a, 0x9fa3, 0xef54, 0x0, 0x0);
        gbc.writeMem(0xdaf0, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x76bc);
        EXPECT(gbc.pc(), 0xdaf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaf0), 0x90);
        // 90 0072
        gbc.setState(0x3bc9, 0xf18f, 0x8b0, 0x2c3e, 0xecf3, 0xad27, 0x0, 0x1);
        gbc.writeMem(0x3bc9, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf18f);
        EXPECT(gbc.pc(), 0x3bca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0073
        gbc.setState(0xce8b, 0xf4a3, 0x9470, 0xb6a2, 0x8a91, 0x922e, 0x1, 0x1);
        gbc.writeMem(0xce8b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf4a3);
        EXPECT(gbc.pc(), 0xce8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce8b), 0x90);
        // 90 0074
        gbc.setState(0x965a, 0x593a, 0x6260, 0x95b9, 0x77a, 0xe5f6, 0x1, 0x0);
        gbc.writeMem(0x965a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x593a);
        EXPECT(gbc.pc(), 0x965b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x965a), 0x90);
        // 90 0075
        gbc.setState(0xa2f1, 0x545d, 0x23d0, 0x162d, 0x906, 0xfa2e, 0x1, 0x1);
        gbc.writeMem(0xa2f1, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x545d);
        EXPECT(gbc.pc(), 0xa2f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2f1), 0x90);
        // 90 0076
        gbc.setState(0x7739, 0xe4d7, 0xa9a0, 0xb32c, 0xb2a, 0x7a83, 0x1, 0x0);
        gbc.writeMem(0x7739, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe4d7);
        EXPECT(gbc.pc(), 0x773a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0077
        gbc.setState(0xc6b9, 0x5c2, 0x4bc0, 0xcae9, 0xcdaf, 0x69b7, 0x1, 0x1);
        gbc.writeMem(0xc6b9, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5c2);
        EXPECT(gbc.pc(), 0xc6ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6b9), 0x90);
        // 90 0078
        gbc.setState(0x99b0, 0xec72, 0xa890, 0x1059, 0x941a, 0xe905, 0x0, 0x1);
        gbc.writeMem(0x99b0, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xec72);
        EXPECT(gbc.pc(), 0x99b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99b0), 0x90);
        // 90 0079
        gbc.setState(0xa289, 0xa271, 0x6d70, 0x1b88, 0xbc5a, 0x348f, 0x0, 0x0);
        gbc.writeMem(0xa289, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa271);
        EXPECT(gbc.pc(), 0xa28a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa289), 0x90);
        // 90 007A
        gbc.setState(0xa31b, 0xa9ed, 0xe1e0, 0xd083, 0xa4cb, 0xe6e4, 0x1, 0x1);
        gbc.writeMem(0xa31b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa9ed);
        EXPECT(gbc.pc(), 0xa31c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa31b), 0x90);
        // 90 007B
        gbc.setState(0xd8df, 0xa20a, 0xce00, 0x434a, 0x2514, 0x4a06, 0x1, 0x0);
        gbc.writeMem(0xd8df, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xa20a);
        EXPECT(gbc.pc(), 0xd8e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8df), 0x90);
        // 90 007C
        gbc.setState(0x7707, 0xfffe, 0x8a0, 0x32a1, 0xe1fa, 0x8e76, 0x0, 0x1);
        gbc.writeMem(0x7707, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xfffe);
        EXPECT(gbc.pc(), 0x7708);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 007D
        gbc.setState(0x37e1, 0x1006, 0xd4b0, 0x66d8, 0xb62, 0x201, 0x1, 0x0);
        gbc.writeMem(0x37e1, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1006);
        EXPECT(gbc.pc(), 0x37e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 007E
        gbc.setState(0x596c, 0xac48, 0xe90, 0x2e6, 0xa585, 0xa6e8, 0x1, 0x0);
        gbc.writeMem(0x596c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xac48);
        EXPECT(gbc.pc(), 0x596d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 007F
        gbc.setState(0x578c, 0x4bb7, 0x3ad0, 0x97a3, 0x28a3, 0x53a0, 0x1, 0x0);
        gbc.writeMem(0x578c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x4bb7);
        EXPECT(gbc.pc(), 0x578d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0080
        gbc.setState(0xd9d9, 0x5a99, 0xd2a0, 0xff8a, 0xcc02, 0xd76e, 0x1, 0x0);
        gbc.writeMem(0xd9d9, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x5a99);
        EXPECT(gbc.pc(), 0xd9da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9d9), 0x90);
        // 90 0081
        gbc.setState(0x27b, 0x4446, 0xd9d0, 0x164d, 0x4d4a, 0xf8cd, 0x1, 0x0);
        gbc.writeMem(0x27b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x4446);
        EXPECT(gbc.pc(), 0x27c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0083
        gbc.setState(0x3ede, 0x34d5, 0xbd80, 0x64e3, 0xb55f, 0x3cae, 0x1, 0x1);
        gbc.writeMem(0x3ede, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x34d5);
        EXPECT(gbc.pc(), 0x3edf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0084
        gbc.setState(0x3f2a, 0x70f2, 0x3750, 0xc7ac, 0x5d5d, 0xc429, 0x0, 0x0);
        gbc.writeMem(0x3f2a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x70f2);
        EXPECT(gbc.pc(), 0x3f2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0085
        gbc.setState(0x16ef, 0xe425, 0x36f0, 0xbcd1, 0xb7a5, 0x69d9, 0x1, 0x1);
        gbc.writeMem(0x16ef, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xe425);
        EXPECT(gbc.pc(), 0x16f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0086
        gbc.setState(0x344b, 0x7cd0, 0x7650, 0x6321, 0x15d5, 0xfc0c, 0x0, 0x1);
        gbc.writeMem(0x344b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x7cd0);
        EXPECT(gbc.pc(), 0x344c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0087
        gbc.setState(0x13f1, 0x5e13, 0x8630, 0x671e, 0x7357, 0xfd9c, 0x0, 0x1);
        gbc.writeMem(0x13f1, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x5e13);
        EXPECT(gbc.pc(), 0x13f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0088
        gbc.setState(0x4570, 0x667a, 0x7df0, 0x21fd, 0x55b2, 0xcf91, 0x0, 0x0);
        gbc.writeMem(0x4570, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x667a);
        EXPECT(gbc.pc(), 0x4571);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 008A
        gbc.setState(0x5179, 0x4ffc, 0xe060, 0x2c0d, 0x325e, 0x9e77, 0x1, 0x1);
        gbc.writeMem(0x5179, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4ffc);
        EXPECT(gbc.pc(), 0x517a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 008B
        gbc.setState(0x9819, 0xcd42, 0x5f90, 0x6da7, 0x6564, 0xfd24, 0x1, 0x1);
        gbc.writeMem(0x9819, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xcd42);
        EXPECT(gbc.pc(), 0x981a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9819), 0x90);
        // 90 008C
        gbc.setState(0x1fb3, 0x4a3a, 0x2ac0, 0xdcfa, 0xd1f5, 0xef9, 0x1, 0x0);
        gbc.writeMem(0x1fb3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x4a3a);
        EXPECT(gbc.pc(), 0x1fb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 008D
        gbc.setState(0xcb35, 0x7556, 0x28f0, 0x93fc, 0xbe87, 0x2fdf, 0x0, 0x1);
        gbc.writeMem(0xcb35, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7556);
        EXPECT(gbc.pc(), 0xcb36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb35), 0x90);
        // 90 008E
        gbc.setState(0xa9a1, 0x1949, 0xa190, 0x9243, 0xc033, 0xf593, 0x1, 0x1);
        gbc.writeMem(0xa9a1, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1949);
        EXPECT(gbc.pc(), 0xa9a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9a1), 0x90);
        // 90 008F
        gbc.setState(0xbeab, 0x8adf, 0x19c0, 0xb9e4, 0x25c8, 0x5151, 0x1, 0x0);
        gbc.writeMem(0xbeab, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x8adf);
        EXPECT(gbc.pc(), 0xbeac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeab), 0x90);
        // 90 0090
        gbc.setState(0x75ea, 0x1cb, 0xdd70, 0xb358, 0x17db, 0x4fe1, 0x0, 0x0);
        gbc.writeMem(0x75ea, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x1cb);
        EXPECT(gbc.pc(), 0x75eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0091
        gbc.setState(0xc7a6, 0x9418, 0x6610, 0xd73b, 0xcaae, 0xd32b, 0x0, 0x1);
        gbc.writeMem(0xc7a6, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x9418);
        EXPECT(gbc.pc(), 0xc7a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7a6), 0x90);
        // 90 0092
        gbc.setState(0x4796, 0xaa6e, 0x9e00, 0xc618, 0x3d6a, 0x987f, 0x1, 0x1);
        gbc.writeMem(0x4796, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xaa6e);
        EXPECT(gbc.pc(), 0x4797);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0093
        gbc.setState(0x5d6e, 0x8cad, 0x4610, 0xf628, 0x6c73, 0x6768, 0x1, 0x0);
        gbc.writeMem(0x5d6e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x8cad);
        EXPECT(gbc.pc(), 0x5d6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0094
        gbc.setState(0xd6c2, 0x8d92, 0x3b40, 0xef57, 0x8d0b, 0x4aaa, 0x0, 0x1);
        gbc.writeMem(0xd6c2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x8d92);
        EXPECT(gbc.pc(), 0xd6c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6c2), 0x90);
        // 90 0095
        gbc.setState(0x1423, 0x6755, 0x6a50, 0x2a0a, 0x5c44, 0x621c, 0x1, 0x0);
        gbc.writeMem(0x1423, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x6755);
        EXPECT(gbc.pc(), 0x1424);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0096
        gbc.setState(0x451f, 0x3b4a, 0x50b0, 0xa2ac, 0x7c44, 0xf460, 0x1, 0x0);
        gbc.writeMem(0x451f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3b4a);
        EXPECT(gbc.pc(), 0x4520);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0097
        gbc.setState(0x17fa, 0xb8a, 0x9c0, 0xc289, 0x5b1e, 0x3ca0, 0x0, 0x0);
        gbc.writeMem(0x17fa, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb8a);
        EXPECT(gbc.pc(), 0x17fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0098
        gbc.setState(0x144e, 0xc0e4, 0x4e90, 0x8b5, 0x3045, 0x6dc2, 0x1, 0x0);
        gbc.writeMem(0x144e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc0e4);
        EXPECT(gbc.pc(), 0x144f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0099
        gbc.setState(0xd580, 0x7d04, 0xf50, 0xa2c0, 0x86d8, 0xe778, 0x1, 0x0);
        gbc.writeMem(0xd580, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7d04);
        EXPECT(gbc.pc(), 0xd581);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd580), 0x90);
        // 90 009A
        gbc.setState(0x2dd1, 0xf21f, 0x8620, 0x4d54, 0x4f2a, 0xfc5c, 0x0, 0x0);
        gbc.writeMem(0x2dd1, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf21f);
        EXPECT(gbc.pc(), 0x2dd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 009B
        gbc.setState(0x7c17, 0xd5d, 0xefd0, 0x7fce, 0x5e3d, 0xd86c, 0x1, 0x1);
        gbc.writeMem(0x7c17, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xd5d);
        EXPECT(gbc.pc(), 0x7c18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 009C
        gbc.setState(0x781c, 0x9627, 0xf900, 0xd7f1, 0x1b7d, 0xe7bc, 0x1, 0x0);
        gbc.writeMem(0x781c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9627);
        EXPECT(gbc.pc(), 0x781d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 009D
        gbc.setState(0x404a, 0xa9e, 0xb880, 0x6b1e, 0xd674, 0xa038, 0x0, 0x0);
        gbc.writeMem(0x404a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa9e);
        EXPECT(gbc.pc(), 0x404b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 009E
        gbc.setState(0xbdf7, 0x5ef, 0x5ab0, 0xd1aa, 0x86a3, 0x1e9b, 0x1, 0x0);
        gbc.writeMem(0xbdf7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5ef);
        EXPECT(gbc.pc(), 0xbdf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdf7), 0x90);
        // 90 009F
        gbc.setState(0xde76, 0xe35b, 0x78f0, 0x1cee, 0xceed, 0x8d5f, 0x0, 0x1);
        gbc.writeMem(0xde76, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xe35b);
        EXPECT(gbc.pc(), 0xde77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde76), 0x90);
        // 90 00A0
        gbc.setState(0x3073, 0x7f54, 0xa830, 0x5007, 0x3b9b, 0xd4b6, 0x1, 0x0);
        gbc.writeMem(0x3073, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7f54);
        EXPECT(gbc.pc(), 0x3074);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 00A2
        gbc.setState(0xb663, 0xd53e, 0xf7b0, 0xfda2, 0xcc9, 0xe3e1, 0x1, 0x0);
        gbc.writeMem(0xb663, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd53e);
        EXPECT(gbc.pc(), 0xb664);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb663), 0x90);
        // 90 00A3
        gbc.setState(0xd7a5, 0x41f6, 0x85c0, 0x8f7d, 0x5de0, 0xbc63, 0x0, 0x1);
        gbc.writeMem(0xd7a5, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x41f6);
        EXPECT(gbc.pc(), 0xd7a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7a5), 0x90);
        // 90 00A4
        gbc.setState(0x60e3, 0xc32b, 0xd650, 0x351a, 0x501e, 0x54f7, 0x0, 0x1);
        gbc.writeMem(0x60e3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc32b);
        EXPECT(gbc.pc(), 0x60e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 00A5
        gbc.setState(0x6248, 0x24f8, 0x4c20, 0x1393, 0x6007, 0xd84b, 0x1, 0x1);
        gbc.writeMem(0x6248, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x24f8);
        EXPECT(gbc.pc(), 0x6249);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 00A6
        gbc.setState(0x652c, 0x5601, 0x1430, 0x5847, 0x60ff, 0xb803, 0x1, 0x0);
        gbc.writeMem(0x652c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5601);
        EXPECT(gbc.pc(), 0x652d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 00A7
        gbc.setState(0x7675, 0x6b4d, 0x8040, 0xe2de, 0x5c70, 0x537e, 0x1, 0x1);
        gbc.writeMem(0x7675, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6b4d);
        EXPECT(gbc.pc(), 0x7676);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 00A8
        gbc.setState(0xc093, 0xf127, 0x6a10, 0x3f27, 0xeb25, 0x9b9, 0x1, 0x0);
        gbc.writeMem(0xc093, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xf127);
        EXPECT(gbc.pc(), 0xc094);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc093), 0x90);
        // 90 00A9
        gbc.setState(0x9f34, 0x5f3d, 0x5400, 0x530f, 0xa726, 0x7cb2, 0x0, 0x0);
        gbc.writeMem(0x9f34, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5f3d);
        EXPECT(gbc.pc(), 0x9f35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f34), 0x90);
        // 90 00AA
        gbc.setState(0x52c3, 0x89f5, 0xf300, 0x1143, 0xaba2, 0x1ae6, 0x1, 0x1);
        gbc.writeMem(0x52c3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x89f5);
        EXPECT(gbc.pc(), 0x52c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 00AB
        gbc.setState(0x3508, 0x9109, 0x5590, 0x8329, 0x2fd4, 0xd856, 0x0, 0x1);
        gbc.writeMem(0x3508, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x9109);
        EXPECT(gbc.pc(), 0x3509);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 00AC
        gbc.setState(0xeaf8, 0x2005, 0xb230, 0xdc0a, 0xed65, 0x4f75, 0x0, 0x1);
        gbc.writeMem(0xeaf8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x2005);
        EXPECT(gbc.pc(), 0xeaf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaf8), 0x90);
        // 90 00AD
        gbc.setState(0xe9e7, 0x6571, 0x2cd0, 0x3db6, 0x6054, 0x693f, 0x1, 0x0);
        gbc.writeMem(0xe9e7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6571);
        EXPECT(gbc.pc(), 0xe9e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9e7), 0x90);
        // 90 00AE
        gbc.setState(0x1eef, 0x5e60, 0x5200, 0x2b23, 0x5a5e, 0x9dc6, 0x1, 0x0);
        gbc.writeMem(0x1eef, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x5e60);
        EXPECT(gbc.pc(), 0x1ef0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 00AF
        gbc.setState(0x52e5, 0x2516, 0x27d0, 0x9135, 0x429d, 0x4ec0, 0x1, 0x0);
        gbc.writeMem(0x52e5, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x2516);
        EXPECT(gbc.pc(), 0x52e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 00B0
        gbc.setState(0xe569, 0x9c82, 0x570, 0xb55, 0x6071, 0x371f, 0x0, 0x0);
        gbc.writeMem(0xe569, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x9c82);
        EXPECT(gbc.pc(), 0xe56a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe569), 0x90);
        // 90 00B1
        gbc.setState(0x5f53, 0x17dc, 0x5970, 0x6ac2, 0xcad9, 0x43b3, 0x0, 0x0);
        gbc.writeMem(0x5f53, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x17dc);
        EXPECT(gbc.pc(), 0x5f54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 00B2
        gbc.setState(0xce5e, 0xa3a6, 0x8000, 0xbd1, 0x3d8c, 0x2edf, 0x1, 0x1);
        gbc.writeMem(0xce5e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xa3a6);
        EXPECT(gbc.pc(), 0xce5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce5e), 0x90);
        // 90 00B3
        gbc.setState(0xb64e, 0x9419, 0xd150, 0x12c0, 0x4294, 0xee06, 0x0, 0x1);
        gbc.writeMem(0xb64e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9419);
        EXPECT(gbc.pc(), 0xb64f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb64e), 0x90);
        // 90 00B5
        gbc.setState(0xddc3, 0x5c34, 0xef90, 0x716e, 0x9a14, 0x4088, 0x0, 0x1);
        gbc.writeMem(0xddc3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5c34);
        EXPECT(gbc.pc(), 0xddc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddc3), 0x90);
        // 90 00B6
        gbc.setState(0xd0f4, 0x29f9, 0x4c10, 0xd93e, 0x3324, 0x9d01, 0x0, 0x0);
        gbc.writeMem(0xd0f4, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x29f9);
        EXPECT(gbc.pc(), 0xd0f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0f4), 0x90);
        // 90 00B7
        gbc.setState(0x64a4, 0x62ac, 0xce90, 0xe783, 0x4a5c, 0x9114, 0x0, 0x1);
        gbc.writeMem(0x64a4, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x62ac);
        EXPECT(gbc.pc(), 0x64a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 00B8
        gbc.setState(0xe37e, 0x9d1f, 0x6810, 0xfc5d, 0xc3f1, 0x8752, 0x1, 0x0);
        gbc.writeMem(0xe37e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9d1f);
        EXPECT(gbc.pc(), 0xe37f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe37e), 0x90);
        // 90 00B9
        gbc.setState(0x73ea, 0xf584, 0xa0e0, 0x441b, 0x8475, 0x58ce, 0x1, 0x0);
        gbc.writeMem(0x73ea, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf584);
        EXPECT(gbc.pc(), 0x73eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 00BA
        gbc.setState(0x1007, 0x811c, 0x93b0, 0x6fa2, 0x75df, 0x7145, 0x0, 0x0);
        gbc.writeMem(0x1007, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x811c);
        EXPECT(gbc.pc(), 0x1008);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 00BB
        gbc.setState(0xdb7d, 0xf9a0, 0x92e0, 0xba69, 0x8a1f, 0x34a4, 0x0, 0x1);
        gbc.writeMem(0xdb7d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf9a0);
        EXPECT(gbc.pc(), 0xdb7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb7d), 0x90);
        // 90 00BC
        gbc.setState(0x3044, 0x1f5, 0x21d0, 0xe7dc, 0x5ca8, 0xe8c9, 0x0, 0x1);
        gbc.writeMem(0x3044, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1f5);
        EXPECT(gbc.pc(), 0x3045);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 00BD
        gbc.setState(0x57e3, 0xc25, 0xf8d0, 0xa467, 0xaa30, 0x9c9e, 0x1, 0x1);
        gbc.writeMem(0x57e3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc25);
        EXPECT(gbc.pc(), 0x57e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 00BE
        gbc.setState(0x4942, 0xdd8b, 0xc140, 0x9a2a, 0x9eda, 0x312d, 0x0, 0x0);
        gbc.writeMem(0x4942, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xdd8b);
        EXPECT(gbc.pc(), 0x4943);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 00BF
        gbc.setState(0xd351, 0xcf2a, 0xfe60, 0xaca1, 0x3938, 0x7d18, 0x0, 0x0);
        gbc.writeMem(0xd351, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xcf2a);
        EXPECT(gbc.pc(), 0xd352);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd351), 0x90);
        // 90 00C0
        gbc.setState(0x2dc5, 0xc83, 0x42a0, 0x29f7, 0x4a15, 0x8741, 0x1, 0x1);
        gbc.writeMem(0x2dc5, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xc83);
        EXPECT(gbc.pc(), 0x2dc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 00C1
        gbc.setState(0x7d9e, 0x33cc, 0x3d90, 0x9808, 0xe4bc, 0x62e, 0x1, 0x1);
        gbc.writeMem(0x7d9e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x33cc);
        EXPECT(gbc.pc(), 0x7d9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 00C2
        gbc.setState(0x2152, 0x15cf, 0x9e50, 0x4e4e, 0x6f15, 0x5f28, 0x0, 0x1);
        gbc.writeMem(0x2152, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x15cf);
        EXPECT(gbc.pc(), 0x2153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 00C3
        gbc.setState(0x7a54, 0x7c1a, 0xa360, 0x3bfd, 0x1449, 0xda3c, 0x1, 0x1);
        gbc.writeMem(0x7a54, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x7c1a);
        EXPECT(gbc.pc(), 0x7a55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 00C4
        gbc.setState(0x2d03, 0xfeef, 0x7060, 0xb5e7, 0x817c, 0x1e45, 0x0, 0x1);
        gbc.writeMem(0x2d03, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xfeef);
        EXPECT(gbc.pc(), 0x2d04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 00C6
        gbc.setState(0x35cd, 0xed58, 0xa1b0, 0xd2aa, 0x4ef9, 0xe4f, 0x0, 0x0);
        gbc.writeMem(0x35cd, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xed58);
        EXPECT(gbc.pc(), 0x35ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 00C8
        gbc.setState(0x633, 0xf41e, 0x3cc0, 0x1a6, 0x4635, 0x4ca9, 0x0, 0x1);
        gbc.writeMem(0x633, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf41e);
        EXPECT(gbc.pc(), 0x634);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 00C9
        gbc.setState(0x1e3f, 0xf21a, 0xf80, 0xe25d, 0xb7f2, 0x1429, 0x0, 0x1);
        gbc.writeMem(0x1e3f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf21a);
        EXPECT(gbc.pc(), 0x1e40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 00CA
        gbc.setState(0x908b, 0xf936, 0xc7f0, 0xb035, 0xe432, 0x91d4, 0x1, 0x1);
        gbc.writeMem(0x908b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf936);
        EXPECT(gbc.pc(), 0x908c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x908b), 0x90);
        // 90 00CB
        gbc.setState(0x86c9, 0x4fd0, 0x1150, 0x4d93, 0xe61c, 0x4836, 0x1, 0x1);
        gbc.writeMem(0x86c9, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4fd0);
        EXPECT(gbc.pc(), 0x86ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86c9), 0x90);
        // 90 00CC
        gbc.setState(0x23dd, 0xdcc3, 0x1640, 0x5922, 0x6329, 0x8341, 0x1, 0x0);
        gbc.writeMem(0x23dd, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xdcc3);
        EXPECT(gbc.pc(), 0x23de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 00CD
        gbc.setState(0x7182, 0x533a, 0x9d30, 0xb852, 0x73c8, 0x446e, 0x0, 0x1);
        gbc.writeMem(0x7182, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x533a);
        EXPECT(gbc.pc(), 0x7183);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 00CE
        gbc.setState(0xd030, 0x7289, 0xd240, 0x68c3, 0x2fef, 0x6b19, 0x0, 0x0);
        gbc.writeMem(0xd030, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x7289);
        EXPECT(gbc.pc(), 0xd031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd030), 0x90);
        // 90 00D0
        gbc.setState(0x44f6, 0x8d7f, 0xaca0, 0x41c2, 0xc713, 0x3e23, 0x0, 0x1);
        gbc.writeMem(0x44f6, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8d7f);
        EXPECT(gbc.pc(), 0x44f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 00D1
        gbc.setState(0x7892, 0x5bc3, 0x4170, 0x8a6d, 0x98b8, 0x297f, 0x0, 0x1);
        gbc.writeMem(0x7892, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x5bc3);
        EXPECT(gbc.pc(), 0x7893);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 00D2
        gbc.setState(0x8b0d, 0xc59d, 0xdd30, 0x1030, 0x49da, 0x6a8e, 0x0, 0x0);
        gbc.writeMem(0x8b0d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc59d);
        EXPECT(gbc.pc(), 0x8b0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b0d), 0x90);
        // 90 00D4
        gbc.setState(0x8ea8, 0xd386, 0x7010, 0x95e1, 0x9445, 0x42c4, 0x0, 0x0);
        gbc.writeMem(0x8ea8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xd386);
        EXPECT(gbc.pc(), 0x8ea9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea8), 0x90);
        // 90 00D5
        gbc.setState(0x1e74, 0x114a, 0x28f0, 0x6daa, 0xf4c7, 0x6792, 0x1, 0x0);
        gbc.writeMem(0x1e74, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x114a);
        EXPECT(gbc.pc(), 0x1e75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 00D6
        gbc.setState(0x9d31, 0x8491, 0xc1b0, 0x6f5f, 0xb8ae, 0x1983, 0x1, 0x0);
        gbc.writeMem(0x9d31, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8491);
        EXPECT(gbc.pc(), 0x9d32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d31), 0x90);
        // 90 00D7
        gbc.setState(0xa1b3, 0xaea7, 0x4270, 0x5ced, 0x1dd, 0xcd44, 0x0, 0x0);
        gbc.writeMem(0xa1b3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xaea7);
        EXPECT(gbc.pc(), 0xa1b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1b3), 0x90);
        // 90 00D8
        gbc.setState(0x83f3, 0xaff5, 0xb730, 0x7dcb, 0xcb36, 0x5ba7, 0x0, 0x0);
        gbc.writeMem(0x83f3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xaff5);
        EXPECT(gbc.pc(), 0x83f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83f3), 0x90);
        // 90 00D9
        gbc.setState(0x584f, 0x31b1, 0x5200, 0x20b4, 0x4bf2, 0xf512, 0x0, 0x1);
        gbc.writeMem(0x584f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x31b1);
        EXPECT(gbc.pc(), 0x5850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 00DA
        gbc.setState(0xb91a, 0xdc17, 0x71e0, 0x4437, 0xae4c, 0x6154, 0x0, 0x1);
        gbc.writeMem(0xb91a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xdc17);
        EXPECT(gbc.pc(), 0xb91b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb91a), 0x90);
        // 90 00DB
        gbc.setState(0xa2c6, 0x89ef, 0x5de0, 0xcaff, 0xc141, 0x373f, 0x1, 0x0);
        gbc.writeMem(0xa2c6, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x89ef);
        EXPECT(gbc.pc(), 0xa2c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2c6), 0x90);
        // 90 00DC
        gbc.setState(0x180f, 0xe9, 0x1400, 0x3cb3, 0x66e2, 0xf6eb, 0x0, 0x0);
        gbc.writeMem(0x180f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe9);
        EXPECT(gbc.pc(), 0x1810);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 00DD
        gbc.setState(0xb059, 0xb6ee, 0x4990, 0x7e02, 0xf0c2, 0x3d2d, 0x0, 0x0);
        gbc.writeMem(0xb059, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb6ee);
        EXPECT(gbc.pc(), 0xb05a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb059), 0x90);
        // 90 00DE
        gbc.setState(0x2b91, 0xfe8, 0xfff0, 0xbefa, 0xa2d0, 0x1f0c, 0x0, 0x0);
        gbc.writeMem(0x2b91, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xfe8);
        EXPECT(gbc.pc(), 0x2b92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 00DF
        gbc.setState(0x6343, 0x6f4a, 0xccb0, 0xd3a, 0x132b, 0x65aa, 0x1, 0x1);
        gbc.writeMem(0x6343, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x6f4a);
        EXPECT(gbc.pc(), 0x6344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 00E0
        gbc.setState(0xad04, 0x7767, 0x2500, 0xc5c5, 0x820e, 0x410b, 0x0, 0x0);
        gbc.writeMem(0xad04, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x7767);
        EXPECT(gbc.pc(), 0xad05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad04), 0x90);
        // 90 00E1
        gbc.setState(0x4722, 0x2a8d, 0xd670, 0x5b31, 0x971e, 0x6107, 0x1, 0x1);
        gbc.writeMem(0x4722, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2a8d);
        EXPECT(gbc.pc(), 0x4723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 00E2
        gbc.setState(0xd06e, 0x73bb, 0x3de0, 0xcc0, 0xe1e0, 0xbe39, 0x1, 0x1);
        gbc.writeMem(0xd06e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x73bb);
        EXPECT(gbc.pc(), 0xd06f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd06e), 0x90);
        // 90 00E3
        gbc.setState(0xe31a, 0x4d9e, 0xc6e0, 0x39ce, 0x9fd, 0xd180, 0x1, 0x0);
        gbc.writeMem(0xe31a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4d9e);
        EXPECT(gbc.pc(), 0xe31b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe31a), 0x90);
        // 90 00E4
        gbc.setState(0xb827, 0x96e0, 0x2db0, 0x720f, 0x7568, 0xe461, 0x0, 0x0);
        gbc.writeMem(0xb827, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x96e0);
        EXPECT(gbc.pc(), 0xb828);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb827), 0x90);
        // 90 00E5
        gbc.setState(0xbc4a, 0xa032, 0x7a40, 0xcd63, 0x2b38, 0x46f4, 0x1, 0x1);
        gbc.writeMem(0xbc4a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xa032);
        EXPECT(gbc.pc(), 0xbc4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc4a), 0x90);
        // 90 00E6
        gbc.setState(0xd203, 0x1c77, 0x7900, 0x29d3, 0x74f7, 0x97df, 0x0, 0x0);
        gbc.writeMem(0xd203, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1c77);
        EXPECT(gbc.pc(), 0xd204);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd203), 0x90);
        // 90 00E7
        gbc.setState(0x4677, 0xe01d, 0x240, 0x306d, 0xe7e7, 0xa003, 0x0, 0x0);
        gbc.writeMem(0x4677, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xe01d);
        EXPECT(gbc.pc(), 0x4678);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 00E9
        gbc.setState(0x7e7, 0x1497, 0x20, 0x9251, 0xd506, 0x52fe, 0x0, 0x0);
        gbc.writeMem(0x7e7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x1497);
        EXPECT(gbc.pc(), 0x7e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 00EA
        gbc.setState(0x3433, 0xff1b, 0xda20, 0x1dd4, 0xf2b3, 0xa0e1, 0x1, 0x0);
        gbc.writeMem(0x3433, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xff1b);
        EXPECT(gbc.pc(), 0x3434);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 00EB
        gbc.setState(0x6de7, 0x9c32, 0xd920, 0xa375, 0x57f3, 0xe873, 0x0, 0x0);
        gbc.writeMem(0x6de7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9c32);
        EXPECT(gbc.pc(), 0x6de8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 00EC
        gbc.setState(0x7465, 0x475f, 0x6570, 0xc7c5, 0xbbf9, 0x8b7c, 0x1, 0x0);
        gbc.writeMem(0x7465, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x475f);
        EXPECT(gbc.pc(), 0x7466);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 00ED
        gbc.setState(0xc726, 0x6d37, 0x8ac0, 0xa56e, 0x8b8d, 0x594a, 0x0, 0x1);
        gbc.writeMem(0xc726, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x6d37);
        EXPECT(gbc.pc(), 0xc727);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc726), 0x90);
        // 90 00EE
        gbc.setState(0x3642, 0x8026, 0xf250, 0xd28b, 0xda5b, 0x8c7b, 0x0, 0x1);
        gbc.writeMem(0x3642, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8026);
        EXPECT(gbc.pc(), 0x3643);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 00EF
        gbc.setState(0x9b99, 0xbcdd, 0xb5e0, 0x549a, 0x7000, 0xcf68, 0x1, 0x0);
        gbc.writeMem(0x9b99, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xbcdd);
        EXPECT(gbc.pc(), 0x9b9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b99), 0x90);
        // 90 00F0
        gbc.setState(0x4325, 0x65d6, 0x8fe0, 0x6e65, 0x3106, 0x8b20, 0x0, 0x0);
        gbc.writeMem(0x4325, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x65d6);
        EXPECT(gbc.pc(), 0x4326);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 00F1
        gbc.setState(0x3fe3, 0xfe38, 0xb530, 0x201, 0x8917, 0x4378, 0x1, 0x0);
        gbc.writeMem(0x3fe3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xfe38);
        EXPECT(gbc.pc(), 0x3fe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 00F2
        gbc.setState(0x554f, 0xce0c, 0x87e0, 0x5101, 0xabee, 0xa655, 0x0, 0x0);
        gbc.writeMem(0x554f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xce0c);
        EXPECT(gbc.pc(), 0x5550);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 00F3
        gbc.setState(0x4f17, 0x4756, 0x7f0, 0xeafd, 0x1789, 0x36e4, 0x1, 0x0);
        gbc.writeMem(0x4f17, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x4756);
        EXPECT(gbc.pc(), 0x4f18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 00F4
        gbc.setState(0x547d, 0x4f08, 0xf1b0, 0xd81, 0x535b, 0xaf4d, 0x1, 0x0);
        gbc.writeMem(0x547d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x4f08);
        EXPECT(gbc.pc(), 0x547e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 00F5
        gbc.setState(0xebf2, 0x9368, 0x960, 0x150e, 0xa5f6, 0xed5e, 0x1, 0x0);
        gbc.writeMem(0xebf2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x9368);
        EXPECT(gbc.pc(), 0xebf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebf2), 0x90);
        // 90 00F7
        gbc.setState(0xb0d0, 0x41f9, 0xd410, 0x488a, 0x8bb7, 0xfc12, 0x0, 0x0);
        gbc.writeMem(0xb0d0, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x41f9);
        EXPECT(gbc.pc(), 0xb0d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0d0), 0x90);
        // 90 00F8
        gbc.setState(0x88e2, 0xfae6, 0x5d30, 0x2e81, 0x38bd, 0x75f, 0x0, 0x1);
        gbc.writeMem(0x88e2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xfae6);
        EXPECT(gbc.pc(), 0x88e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88e2), 0x90);
        // 90 00F9
        gbc.setState(0x3068, 0xa16e, 0xb550, 0x4de6, 0x2304, 0x83d0, 0x0, 0x1);
        gbc.writeMem(0x3068, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xa16e);
        EXPECT(gbc.pc(), 0x3069);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 00FA
        gbc.setState(0x9965, 0xbe00, 0x2470, 0x38c6, 0xdc12, 0x2d31, 0x1, 0x1);
        gbc.writeMem(0x9965, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xbe00);
        EXPECT(gbc.pc(), 0x9966);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9965), 0x90);
        // 90 00FB
        gbc.setState(0x7ac0, 0x4fdf, 0x2f10, 0xe3cd, 0x30b9, 0xa7cf, 0x1, 0x1);
        gbc.writeMem(0x7ac0, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4fdf);
        EXPECT(gbc.pc(), 0x7ac1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 00FC
        gbc.setState(0x5aa2, 0x3199, 0x14b0, 0x437c, 0x6b0e, 0xf5a6, 0x1, 0x1);
        gbc.writeMem(0x5aa2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3199);
        EXPECT(gbc.pc(), 0x5aa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 00FD
        gbc.setState(0xedea, 0x18de, 0x4420, 0x966f, 0xfb22, 0xe003, 0x1, 0x0);
        gbc.writeMem(0xedea, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x18de);
        EXPECT(gbc.pc(), 0xedeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedea), 0x90);
        // 90 00FE
        gbc.setState(0x3cef, 0xc121, 0x8e40, 0x3abe, 0x2158, 0x74cd, 0x1, 0x0);
        gbc.writeMem(0x3cef, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc121);
        EXPECT(gbc.pc(), 0x3cf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 00FF
        gbc.setState(0x7eaa, 0x7af7, 0x49f0, 0xe585, 0x8a87, 0x22b4, 0x0, 0x1);
        gbc.writeMem(0x7eaa, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7af7);
        EXPECT(gbc.pc(), 0x7eab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0100
        gbc.setState(0xaad7, 0x2f4d, 0x63c0, 0x1990, 0xbb4d, 0x83fb, 0x0, 0x0);
        gbc.writeMem(0xaad7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2f4d);
        EXPECT(gbc.pc(), 0xaad8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaad7), 0x90);
        // 90 0101
        gbc.setState(0x68c8, 0x7e35, 0xf4f0, 0x54c, 0xbfb, 0x702e, 0x0, 0x1);
        gbc.writeMem(0x68c8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7e35);
        EXPECT(gbc.pc(), 0x68c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0102
        gbc.setState(0x3211, 0xf8f1, 0x7860, 0x6520, 0xff3d, 0x624d, 0x1, 0x1);
        gbc.writeMem(0x3211, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xf8f1);
        EXPECT(gbc.pc(), 0x3212);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0103
        gbc.setState(0x43c8, 0xb8c1, 0xece0, 0x400a, 0xe07e, 0x804d, 0x0, 0x0);
        gbc.writeMem(0x43c8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb8c1);
        EXPECT(gbc.pc(), 0x43c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0105
        gbc.setState(0xcab6, 0x3015, 0x7370, 0x4c8c, 0xa876, 0xda9f, 0x0, 0x0);
        gbc.writeMem(0xcab6, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x3015);
        EXPECT(gbc.pc(), 0xcab7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcab6), 0x90);
        // 90 0106
        gbc.setState(0x8bfc, 0x111, 0x4650, 0xe764, 0x6b68, 0xc09d, 0x1, 0x1);
        gbc.writeMem(0x8bfc, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x111);
        EXPECT(gbc.pc(), 0x8bfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bfc), 0x90);
        // 90 0107
        gbc.setState(0x5dd3, 0xddd9, 0x78e0, 0x6fb4, 0xed36, 0xcebe, 0x1, 0x0);
        gbc.writeMem(0x5dd3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xddd9);
        EXPECT(gbc.pc(), 0x5dd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 010B
        gbc.setState(0x3321, 0xf656, 0x6310, 0x9883, 0x5cf9, 0xf172, 0x1, 0x0);
        gbc.writeMem(0x3321, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf656);
        EXPECT(gbc.pc(), 0x3322);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 010C
        gbc.setState(0xd307, 0xbaa2, 0xbbc0, 0xc9e9, 0xd512, 0xb5b8, 0x1, 0x0);
        gbc.writeMem(0xd307, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xbaa2);
        EXPECT(gbc.pc(), 0xd308);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd307), 0x90);
        // 90 010D
        gbc.setState(0x5934, 0xe9e8, 0x4340, 0xc898, 0x4107, 0xa540, 0x1, 0x1);
        gbc.writeMem(0x5934, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe9e8);
        EXPECT(gbc.pc(), 0x5935);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 010E
        gbc.setState(0xa326, 0x73f2, 0xa980, 0x3ec9, 0xaa2, 0xf6a, 0x1, 0x1);
        gbc.writeMem(0xa326, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x73f2);
        EXPECT(gbc.pc(), 0xa327);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa326), 0x90);
        // 90 010F
        gbc.setState(0xbfea, 0x40f4, 0xd940, 0xc223, 0x7f5d, 0x3cd5, 0x0, 0x0);
        gbc.writeMem(0xbfea, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x40f4);
        EXPECT(gbc.pc(), 0xbfeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfea), 0x90);
        // 90 0110
        gbc.setState(0x4764, 0x4407, 0xfc40, 0x64d2, 0x4959, 0x91c2, 0x1, 0x1);
        gbc.writeMem(0x4764, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4407);
        EXPECT(gbc.pc(), 0x4765);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0111
        gbc.setState(0x8295, 0x2148, 0x51f0, 0x22e9, 0xae13, 0x242a, 0x0, 0x0);
        gbc.writeMem(0x8295, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2148);
        EXPECT(gbc.pc(), 0x8296);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8295), 0x90);
        // 90 0112
        gbc.setState(0x7598, 0x53b9, 0x27e0, 0x8c84, 0x26bc, 0xcac8, 0x1, 0x0);
        gbc.writeMem(0x7598, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x53b9);
        EXPECT(gbc.pc(), 0x7599);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0113
        gbc.setState(0xa16a, 0x5bbf, 0x7e00, 0xb7f2, 0xac74, 0xfd6d, 0x0, 0x1);
        gbc.writeMem(0xa16a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x5bbf);
        EXPECT(gbc.pc(), 0xa16b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa16a), 0x90);
        // 90 0114
        gbc.setState(0x472d, 0x57b, 0x2be0, 0xff8a, 0x5882, 0x5aa2, 0x1, 0x0);
        gbc.writeMem(0x472d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x57b);
        EXPECT(gbc.pc(), 0x472e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0115
        gbc.setState(0x6a30, 0x7cde, 0xf320, 0x7ac1, 0xb20, 0xa53c, 0x0, 0x1);
        gbc.writeMem(0x6a30, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x7cde);
        EXPECT(gbc.pc(), 0x6a31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0116
        gbc.setState(0x7c26, 0xee8b, 0xa6e0, 0x6033, 0xcd2a, 0xdac5, 0x0, 0x1);
        gbc.writeMem(0x7c26, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xee8b);
        EXPECT(gbc.pc(), 0x7c27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0117
        gbc.setState(0xbf00, 0x74fa, 0xb880, 0xca7a, 0xaeb9, 0xf7c4, 0x1, 0x1);
        gbc.writeMem(0xbf00, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x74fa);
        EXPECT(gbc.pc(), 0xbf01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf00), 0x90);
        // 90 0118
        gbc.setState(0x2322, 0xc8b, 0x250, 0x9bbf, 0xdaf2, 0x959e, 0x0, 0x1);
        gbc.writeMem(0x2322, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc8b);
        EXPECT(gbc.pc(), 0x2323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0119
        gbc.setState(0xa3aa, 0x9640, 0x3d00, 0xa052, 0x3ae3, 0xb5e7, 0x0, 0x1);
        gbc.writeMem(0xa3aa, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9640);
        EXPECT(gbc.pc(), 0xa3ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3aa), 0x90);
        // 90 011A
        gbc.setState(0xee53, 0x4c4c, 0x4140, 0x6593, 0x7773, 0x4df8, 0x1, 0x1);
        gbc.writeMem(0xee53, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4c4c);
        EXPECT(gbc.pc(), 0xee54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee53), 0x90);
        // 90 011B
        gbc.setState(0x3cac, 0xd58f, 0xf340, 0x34a5, 0x7ea7, 0x9379, 0x0, 0x1);
        gbc.writeMem(0x3cac, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd58f);
        EXPECT(gbc.pc(), 0x3cad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 011C
        gbc.setState(0x7223, 0x7374, 0xbf70, 0xcb95, 0xb422, 0x4508, 0x0, 0x0);
        gbc.writeMem(0x7223, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x7374);
        EXPECT(gbc.pc(), 0x7224);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 011D
        gbc.setState(0x244b, 0x9f04, 0x70d0, 0x1741, 0x7f45, 0xf5c1, 0x0, 0x1);
        gbc.writeMem(0x244b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9f04);
        EXPECT(gbc.pc(), 0x244c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 011E
        gbc.setState(0x5128, 0xb28f, 0x5e70, 0xab66, 0x2315, 0xfc60, 0x0, 0x1);
        gbc.writeMem(0x5128, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb28f);
        EXPECT(gbc.pc(), 0x5129);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 011F
        gbc.setState(0xbf2a, 0x467c, 0x8bd0, 0xa804, 0xa69e, 0x9f67, 0x1, 0x1);
        gbc.writeMem(0xbf2a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x467c);
        EXPECT(gbc.pc(), 0xbf2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf2a), 0x90);
        // 90 0120
        gbc.setState(0xdcc8, 0xea65, 0x90, 0x3b12, 0xf2d2, 0x5f4f, 0x0, 0x0);
        gbc.writeMem(0xdcc8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xea65);
        EXPECT(gbc.pc(), 0xdcc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcc8), 0x90);
        // 90 0121
        gbc.setState(0xc319, 0x2923, 0xb00, 0x79f8, 0x3634, 0xaa0, 0x0, 0x0);
        gbc.writeMem(0xc319, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2923);
        EXPECT(gbc.pc(), 0xc31a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc319), 0x90);
        // 90 0122
        gbc.setState(0xd0c3, 0xb993, 0x43b0, 0x7bb4, 0x5c1a, 0x930e, 0x0, 0x1);
        gbc.writeMem(0xd0c3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xb993);
        EXPECT(gbc.pc(), 0xd0c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0c3), 0x90);
        // 90 0123
        gbc.setState(0xce9c, 0x5232, 0xce60, 0x1c01, 0x8be3, 0xe509, 0x0, 0x1);
        gbc.writeMem(0xce9c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5232);
        EXPECT(gbc.pc(), 0xce9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce9c), 0x90);
        // 90 0124
        gbc.setState(0xcb82, 0xc14f, 0x45e0, 0xc833, 0x9f7d, 0x9af4, 0x0, 0x1);
        gbc.writeMem(0xcb82, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc14f);
        EXPECT(gbc.pc(), 0xcb83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb82), 0x90);
        // 90 0125
        gbc.setState(0x5488, 0xedc4, 0x1e50, 0xee5a, 0xbe8, 0xe7ce, 0x1, 0x0);
        gbc.writeMem(0x5488, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xedc4);
        EXPECT(gbc.pc(), 0x5489);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0126
        gbc.setState(0xa8e5, 0xc39d, 0x8210, 0x28f4, 0x7611, 0x8ac, 0x1, 0x1);
        gbc.writeMem(0xa8e5, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc39d);
        EXPECT(gbc.pc(), 0xa8e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8e5), 0x90);
        // 90 0127
        gbc.setState(0xb3c, 0x1cd3, 0xcf90, 0xf08a, 0x14fd, 0x6f34, 0x0, 0x0);
        gbc.writeMem(0xb3c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1cd3);
        EXPECT(gbc.pc(), 0xb3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0128
        gbc.setState(0xddf2, 0x62b3, 0x50c0, 0xdce1, 0x3e33, 0x940d, 0x1, 0x1);
        gbc.writeMem(0xddf2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x62b3);
        EXPECT(gbc.pc(), 0xddf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddf2), 0x90);
        // 90 0129
        gbc.setState(0xc728, 0xee53, 0x3240, 0xddce, 0xd95e, 0x2fbb, 0x0, 0x0);
        gbc.writeMem(0xc728, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xee53);
        EXPECT(gbc.pc(), 0xc729);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc728), 0x90);
        // 90 012A
        gbc.setState(0x5ad3, 0xcd3e, 0x15f0, 0x855b, 0xd9d7, 0x6d5d, 0x0, 0x1);
        gbc.writeMem(0x5ad3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xcd3e);
        EXPECT(gbc.pc(), 0x5ad4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 012B
        gbc.setState(0xeb08, 0xc7fb, 0x8070, 0x1e72, 0x484, 0x6d65, 0x0, 0x0);
        gbc.writeMem(0xeb08, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc7fb);
        EXPECT(gbc.pc(), 0xeb09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb08), 0x90);
        // 90 012C
        gbc.setState(0xa32b, 0x56a5, 0x37d0, 0x5a74, 0x641c, 0xccf3, 0x0, 0x0);
        gbc.writeMem(0xa32b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x56a5);
        EXPECT(gbc.pc(), 0xa32c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa32b), 0x90);
        // 90 012D
        gbc.setState(0x9275, 0xe878, 0x9f00, 0x4779, 0x63f5, 0x365c, 0x1, 0x0);
        gbc.writeMem(0x9275, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xe878);
        EXPECT(gbc.pc(), 0x9276);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9275), 0x90);
        // 90 012E
        gbc.setState(0xbe58, 0xc968, 0x64f0, 0x6d86, 0x6ef4, 0xea05, 0x0, 0x0);
        gbc.writeMem(0xbe58, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc968);
        EXPECT(gbc.pc(), 0xbe59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe58), 0x90);
        // 90 012F
        gbc.setState(0x39b2, 0x9c99, 0xb00, 0x3a90, 0x144b, 0xb752, 0x1, 0x1);
        gbc.writeMem(0x39b2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9c99);
        EXPECT(gbc.pc(), 0x39b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0130
        gbc.setState(0x148f, 0x84f1, 0xeac0, 0x2db0, 0xd04b, 0x5a12, 0x0, 0x1);
        gbc.writeMem(0x148f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x84f1);
        EXPECT(gbc.pc(), 0x1490);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0131
        gbc.setState(0x7fe3, 0x8545, 0x8470, 0x1eb0, 0x459b, 0xc6cc, 0x1, 0x0);
        gbc.writeMem(0x7fe3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x8545);
        EXPECT(gbc.pc(), 0x7fe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0132
        gbc.setState(0xe4c4, 0x1eaa, 0x8260, 0xd112, 0x45e3, 0x1e19, 0x1, 0x0);
        gbc.writeMem(0xe4c4, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x1eaa);
        EXPECT(gbc.pc(), 0xe4c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4c4), 0x90);
        // 90 0133
        gbc.setState(0x862f, 0x4fba, 0xb720, 0xbcb2, 0xa398, 0xce6e, 0x1, 0x0);
        gbc.writeMem(0x862f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4fba);
        EXPECT(gbc.pc(), 0x8630);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x862f), 0x90);
        // 90 0134
        gbc.setState(0x2b1c, 0x2a8, 0x5c00, 0xcd65, 0x41ed, 0xfded, 0x0, 0x0);
        gbc.writeMem(0x2b1c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x2a8);
        EXPECT(gbc.pc(), 0x2b1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0135
        gbc.setState(0xb9c0, 0xa37e, 0xc1e0, 0x5e5c, 0x6d09, 0x9f14, 0x1, 0x0);
        gbc.writeMem(0xb9c0, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa37e);
        EXPECT(gbc.pc(), 0xb9c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9c0), 0x90);
        // 90 0136
        gbc.setState(0xc9f7, 0x1a8, 0x4560, 0x1a33, 0x8827, 0xf2ad, 0x0, 0x0);
        gbc.writeMem(0xc9f7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1a8);
        EXPECT(gbc.pc(), 0xc9f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9f7), 0x90);
        // 90 0137
        gbc.setState(0x34d5, 0x9619, 0xf1a0, 0x3e65, 0x4527, 0xddd2, 0x1, 0x1);
        gbc.writeMem(0x34d5, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x9619);
        EXPECT(gbc.pc(), 0x34d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0138
        gbc.setState(0xa838, 0xb9bf, 0xbbc0, 0x4adb, 0x8d5f, 0xe9c8, 0x1, 0x1);
        gbc.writeMem(0xa838, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb9bf);
        EXPECT(gbc.pc(), 0xa839);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa838), 0x90);
        // 90 013A
        gbc.setState(0x6f87, 0x997, 0xd40, 0x47b5, 0x573, 0x4429, 0x1, 0x0);
        gbc.writeMem(0x6f87, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x997);
        EXPECT(gbc.pc(), 0x6f88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 013B
        gbc.setState(0x5c61, 0x1b85, 0xdc0, 0x7433, 0xf67f, 0x3052, 0x0, 0x1);
        gbc.writeMem(0x5c61, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x1b85);
        EXPECT(gbc.pc(), 0x5c62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 013C
        gbc.setState(0x911d, 0x17, 0xae90, 0x3856, 0xe1d, 0x1c31, 0x0, 0x1);
        gbc.writeMem(0x911d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x17);
        EXPECT(gbc.pc(), 0x911e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x911d), 0x90);
        // 90 013D
        gbc.setState(0x2ac1, 0x6502, 0x6610, 0x2633, 0x2f2f, 0x1358, 0x1, 0x1);
        gbc.writeMem(0x2ac1, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6502);
        EXPECT(gbc.pc(), 0x2ac2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 013E
        gbc.setState(0x13c8, 0xb7d6, 0x5bd0, 0x7f0, 0x537d, 0x55f5, 0x1, 0x0);
        gbc.writeMem(0x13c8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xb7d6);
        EXPECT(gbc.pc(), 0x13c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 013F
        gbc.setState(0x80db, 0x13a, 0xbea0, 0xba46, 0x8ea5, 0x61da, 0x0, 0x1);
        gbc.writeMem(0x80db, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x13a);
        EXPECT(gbc.pc(), 0x80dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80db), 0x90);
        // 90 0140
        gbc.setState(0x5b93, 0x3b5, 0xd3f0, 0x5c4f, 0xf428, 0xc5d5, 0x0, 0x1);
        gbc.writeMem(0x5b93, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x3b5);
        EXPECT(gbc.pc(), 0x5b94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0141
        gbc.setState(0xb9f6, 0xf804, 0x1e70, 0xd89b, 0x69f9, 0x9753, 0x0, 0x1);
        gbc.writeMem(0xb9f6, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf804);
        EXPECT(gbc.pc(), 0xb9f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9f6), 0x90);
        // 90 0142
        gbc.setState(0xeb8a, 0x31b6, 0x6ae0, 0x9298, 0x95c1, 0x5a08, 0x1, 0x1);
        gbc.writeMem(0xeb8a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x31b6);
        EXPECT(gbc.pc(), 0xeb8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb8a), 0x90);
        // 90 0143
        gbc.setState(0x4a56, 0xdff4, 0x18e0, 0x6257, 0x4561, 0x7c5a, 0x0, 0x0);
        gbc.writeMem(0x4a56, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xdff4);
        EXPECT(gbc.pc(), 0x4a57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0144
        gbc.setState(0x4415, 0x167f, 0xf470, 0x8d5f, 0x1e90, 0xebec, 0x1, 0x0);
        gbc.writeMem(0x4415, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x167f);
        EXPECT(gbc.pc(), 0x4416);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0145
        gbc.setState(0xbc3b, 0x5409, 0xe7f0, 0x14b2, 0x166e, 0xd54d, 0x0, 0x1);
        gbc.writeMem(0xbc3b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x5409);
        EXPECT(gbc.pc(), 0xbc3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc3b), 0x90);
        // 90 0146
        gbc.setState(0xb21c, 0xdcaa, 0x25e0, 0x21da, 0x88ec, 0x6e29, 0x0, 0x1);
        gbc.writeMem(0xb21c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xdcaa);
        EXPECT(gbc.pc(), 0xb21d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb21c), 0x90);
        // 90 0147
        gbc.setState(0x6f5, 0x786a, 0xe5c0, 0x83aa, 0x4ed3, 0x959c, 0x0, 0x1);
        gbc.writeMem(0x6f5, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x786a);
        EXPECT(gbc.pc(), 0x6f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0148
        gbc.setState(0x1b6a, 0xeb7b, 0xc480, 0xa5df, 0x3a6c, 0x5808, 0x1, 0x0);
        gbc.writeMem(0x1b6a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xeb7b);
        EXPECT(gbc.pc(), 0x1b6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0149
        gbc.setState(0xef4e, 0xf15c, 0x41a0, 0x630d, 0xbe0d, 0x4204, 0x1, 0x0);
        gbc.writeMem(0xef4e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf15c);
        EXPECT(gbc.pc(), 0xef4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef4e), 0x90);
        // 90 014A
        gbc.setState(0xa8cd, 0x5d3a, 0xa0e0, 0xd10f, 0xcbe, 0x4d9c, 0x1, 0x1);
        gbc.writeMem(0xa8cd, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x5d3a);
        EXPECT(gbc.pc(), 0xa8ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8cd), 0x90);
        // 90 014B
        gbc.setState(0xb8c, 0x885b, 0x8df0, 0xa28c, 0x52ef, 0xbd19, 0x0, 0x1);
        gbc.writeMem(0xb8c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x885b);
        EXPECT(gbc.pc(), 0xb8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 014C
        gbc.setState(0xedd7, 0x8215, 0xecd0, 0x98ed, 0xb87d, 0x9968, 0x1, 0x0);
        gbc.writeMem(0xedd7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x8215);
        EXPECT(gbc.pc(), 0xedd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedd7), 0x90);
        // 90 014D
        gbc.setState(0x4cb4, 0x3bd7, 0x5480, 0x157, 0x4594, 0xd5de, 0x1, 0x0);
        gbc.writeMem(0x4cb4, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3bd7);
        EXPECT(gbc.pc(), 0x4cb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 014E
        gbc.setState(0xc456, 0xe096, 0x1be0, 0x2a78, 0xc58b, 0xe20e, 0x0, 0x0);
        gbc.writeMem(0xc456, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe096);
        EXPECT(gbc.pc(), 0xc457);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc456), 0x90);
        // 90 014F
        gbc.setState(0x82e2, 0x5cf6, 0x53d0, 0xac4f, 0x7977, 0xe88, 0x0, 0x0);
        gbc.writeMem(0x82e2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5cf6);
        EXPECT(gbc.pc(), 0x82e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82e2), 0x90);
        // 90 0150
        gbc.setState(0x7719, 0x9e90, 0x8090, 0x21b, 0xc0d6, 0x9629, 0x1, 0x1);
        gbc.writeMem(0x7719, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x9e90);
        EXPECT(gbc.pc(), 0x771a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0151
        gbc.setState(0x2d5c, 0xf56, 0xa380, 0x4221, 0x9ca1, 0x4e5e, 0x0, 0x0);
        gbc.writeMem(0x2d5c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf56);
        EXPECT(gbc.pc(), 0x2d5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0152
        gbc.setState(0x422f, 0xfdde, 0x4c20, 0x9262, 0x347, 0x51b6, 0x1, 0x1);
        gbc.writeMem(0x422f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xfdde);
        EXPECT(gbc.pc(), 0x4230);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0153
        gbc.setState(0xc9be, 0x8cf7, 0x70e0, 0xca5b, 0x5002, 0x424, 0x1, 0x1);
        gbc.writeMem(0xc9be, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8cf7);
        EXPECT(gbc.pc(), 0xc9bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9be), 0x90);
        // 90 0154
        gbc.setState(0x4a1e, 0x42c, 0x8170, 0xe4fd, 0xae6a, 0x3177, 0x0, 0x1);
        gbc.writeMem(0x4a1e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x42c);
        EXPECT(gbc.pc(), 0x4a1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0155
        gbc.setState(0x3416, 0x7cbc, 0x5550, 0x6ab0, 0x9f92, 0x4c62, 0x1, 0x0);
        gbc.writeMem(0x3416, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x7cbc);
        EXPECT(gbc.pc(), 0x3417);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0156
        gbc.setState(0x4050, 0x6b08, 0xb880, 0xd5bd, 0x854b, 0xe9a2, 0x1, 0x0);
        gbc.writeMem(0x4050, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x6b08);
        EXPECT(gbc.pc(), 0x4051);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0157
        gbc.setState(0xca25, 0x2357, 0xa990, 0x7f18, 0x4a7c, 0x6f6, 0x0, 0x0);
        gbc.writeMem(0xca25, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2357);
        EXPECT(gbc.pc(), 0xca26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca25), 0x90);
        // 90 0158
        gbc.setState(0x4d27, 0x1b7f, 0x1e30, 0x59ec, 0xf9e4, 0xa8c9, 0x1, 0x0);
        gbc.writeMem(0x4d27, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1b7f);
        EXPECT(gbc.pc(), 0x4d28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0159
        gbc.setState(0xf3f, 0x152f, 0xdcc0, 0x45dd, 0xc0ad, 0xc427, 0x0, 0x0);
        gbc.writeMem(0xf3f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x152f);
        EXPECT(gbc.pc(), 0xf40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 015A
        gbc.setState(0x53b8, 0x8e3e, 0x2c80, 0xbc8a, 0x9463, 0x503e, 0x0, 0x0);
        gbc.writeMem(0x53b8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8e3e);
        EXPECT(gbc.pc(), 0x53b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 015B
        gbc.setState(0x2322, 0x65f9, 0x43a0, 0xc322, 0x32b1, 0xe878, 0x0, 0x0);
        gbc.writeMem(0x2322, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x65f9);
        EXPECT(gbc.pc(), 0x2323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 015C
        gbc.setState(0x89a5, 0x4974, 0x3170, 0x8842, 0x22e0, 0x3725, 0x1, 0x0);
        gbc.writeMem(0x89a5, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4974);
        EXPECT(gbc.pc(), 0x89a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89a5), 0x90);
        // 90 015D
        gbc.setState(0xfef, 0xd330, 0x4a30, 0x756d, 0x9fb0, 0x7311, 0x0, 0x0);
        gbc.writeMem(0xfef, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xd330);
        EXPECT(gbc.pc(), 0xff0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 015E
        gbc.setState(0x3799, 0x30ba, 0x5470, 0xccea, 0xe1f1, 0xecf1, 0x0, 0x1);
        gbc.writeMem(0x3799, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x30ba);
        EXPECT(gbc.pc(), 0x379a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 015F
        gbc.setState(0x503e, 0xf55f, 0x8b00, 0xb96a, 0x13b0, 0x9b8a, 0x1, 0x0);
        gbc.writeMem(0x503e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xf55f);
        EXPECT(gbc.pc(), 0x503f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0160
        gbc.setState(0x825a, 0xb0cf, 0x1b00, 0x8158, 0xceb1, 0xf773, 0x1, 0x0);
        gbc.writeMem(0x825a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xb0cf);
        EXPECT(gbc.pc(), 0x825b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x825a), 0x90);
        // 90 0161
        gbc.setState(0x235e, 0x6455, 0x3f30, 0x9308, 0xfd1e, 0x5dbf, 0x0, 0x0);
        gbc.writeMem(0x235e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x6455);
        EXPECT(gbc.pc(), 0x235f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0162
        gbc.setState(0x2ed2, 0x9821, 0x47b0, 0xf720, 0x6b68, 0x7e92, 0x1, 0x1);
        gbc.writeMem(0x2ed2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9821);
        EXPECT(gbc.pc(), 0x2ed3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0163
        gbc.setState(0x3e8c, 0x525a, 0x7ff0, 0x75a5, 0xa090, 0x2117, 0x1, 0x1);
        gbc.writeMem(0x3e8c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x525a);
        EXPECT(gbc.pc(), 0x3e8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0164
        gbc.setState(0xca72, 0xb058, 0xaa0, 0x39f0, 0x6358, 0x8922, 0x0, 0x1);
        gbc.writeMem(0xca72, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xb058);
        EXPECT(gbc.pc(), 0xca73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca72), 0x90);
        // 90 0165
        gbc.setState(0x537e, 0xbf0c, 0x2ec0, 0x3b74, 0xecd9, 0x9550, 0x1, 0x0);
        gbc.writeMem(0x537e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xbf0c);
        EXPECT(gbc.pc(), 0x537f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0166
        gbc.setState(0x65b3, 0xd871, 0xb250, 0x22cb, 0x989e, 0x3a3a, 0x0, 0x0);
        gbc.writeMem(0x65b3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd871);
        EXPECT(gbc.pc(), 0x65b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0167
        gbc.setState(0x2523, 0x55a7, 0x1f20, 0xf479, 0x458a, 0x23f1, 0x0, 0x0);
        gbc.writeMem(0x2523, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x55a7);
        EXPECT(gbc.pc(), 0x2524);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0168
        gbc.setState(0xa7f7, 0x941, 0x2fe0, 0x7f17, 0xca4b, 0xe143, 0x0, 0x0);
        gbc.writeMem(0xa7f7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x941);
        EXPECT(gbc.pc(), 0xa7f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7f7), 0x90);
        // 90 0169
        gbc.setState(0xc9c7, 0x9826, 0x28b0, 0xc0be, 0xf3b5, 0x28fe, 0x1, 0x1);
        gbc.writeMem(0xc9c7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9826);
        EXPECT(gbc.pc(), 0xc9c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9c7), 0x90);
        // 90 016A
        gbc.setState(0x5dd2, 0xfbf7, 0xc990, 0x521e, 0x807d, 0x8e98, 0x1, 0x1);
        gbc.writeMem(0x5dd2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xfbf7);
        EXPECT(gbc.pc(), 0x5dd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 016B
        gbc.setState(0x22ca, 0x454f, 0x9550, 0x2cfc, 0xd374, 0xa477, 0x0, 0x1);
        gbc.writeMem(0x22ca, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x454f);
        EXPECT(gbc.pc(), 0x22cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 016C
        gbc.setState(0x1eff, 0x7465, 0x4fc0, 0x9514, 0x40e4, 0xeaa4, 0x1, 0x0);
        gbc.writeMem(0x1eff, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7465);
        EXPECT(gbc.pc(), 0x1f00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 016D
        gbc.setState(0x34c8, 0x7f31, 0xa6f0, 0xff1e, 0x133, 0xce8f, 0x1, 0x0);
        gbc.writeMem(0x34c8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x7f31);
        EXPECT(gbc.pc(), 0x34c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 016E
        gbc.setState(0x54ba, 0x693b, 0xd010, 0xd934, 0xf13d, 0x1600, 0x0, 0x0);
        gbc.writeMem(0x54ba, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x693b);
        EXPECT(gbc.pc(), 0x54bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 016F
        gbc.setState(0x717d, 0x1fa, 0xe050, 0x48fe, 0x4, 0x9f60, 0x0, 0x0);
        gbc.writeMem(0x717d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1fa);
        EXPECT(gbc.pc(), 0x717e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0170
        gbc.setState(0x1957, 0x1632, 0x42e0, 0x160c, 0x1b8b, 0x6af0, 0x1, 0x1);
        gbc.writeMem(0x1957, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x1632);
        EXPECT(gbc.pc(), 0x1958);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0171
        gbc.setState(0x1a09, 0x4b90, 0xbf20, 0x872f, 0x9460, 0x9695, 0x1, 0x1);
        gbc.writeMem(0x1a09, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4b90);
        EXPECT(gbc.pc(), 0x1a0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0172
        gbc.setState(0x2e61, 0xb5ee, 0x7520, 0x1a29, 0xbc7d, 0x6a28, 0x0, 0x0);
        gbc.writeMem(0x2e61, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xb5ee);
        EXPECT(gbc.pc(), 0x2e62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0173
        gbc.setState(0xc2c5, 0x1b2a, 0xb4d0, 0x4f4f, 0x340d, 0xb70d, 0x0, 0x0);
        gbc.writeMem(0xc2c5, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1b2a);
        EXPECT(gbc.pc(), 0xc2c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2c5), 0x90);
        // 90 0174
        gbc.setState(0x40f5, 0xe5c5, 0xbc40, 0x6398, 0x9ff7, 0x2a28, 0x1, 0x1);
        gbc.writeMem(0x40f5, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe5c5);
        EXPECT(gbc.pc(), 0x40f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0175
        gbc.setState(0x7cbf, 0x9630, 0x52c0, 0xf7c3, 0x984d, 0xb986, 0x0, 0x0);
        gbc.writeMem(0x7cbf, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9630);
        EXPECT(gbc.pc(), 0x7cc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0176
        gbc.setState(0xc20d, 0x8eb5, 0x1f90, 0xfaca, 0x5805, 0x6b5d, 0x0, 0x0);
        gbc.writeMem(0xc20d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8eb5);
        EXPECT(gbc.pc(), 0xc20e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc20d), 0x90);
        // 90 0177
        gbc.setState(0xc638, 0xd38, 0x7190, 0xfaa3, 0x4564, 0x3745, 0x1, 0x0);
        gbc.writeMem(0xc638, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd38);
        EXPECT(gbc.pc(), 0xc639);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc638), 0x90);
        // 90 0178
        gbc.setState(0x6b3, 0xb756, 0x6d70, 0x70a3, 0x803a, 0x4925, 0x1, 0x0);
        gbc.writeMem(0x6b3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb756);
        EXPECT(gbc.pc(), 0x6b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0179
        gbc.setState(0x83e3, 0xb6e0, 0x9220, 0xfd1c, 0x3d77, 0xfb6c, 0x0, 0x0);
        gbc.writeMem(0x83e3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xb6e0);
        EXPECT(gbc.pc(), 0x83e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83e3), 0x90);
        // 90 017B
        gbc.setState(0x5b05, 0x510a, 0xb410, 0x646b, 0xdaa0, 0xdc0a, 0x1, 0x1);
        gbc.writeMem(0x5b05, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x510a);
        EXPECT(gbc.pc(), 0x5b06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 017C
        gbc.setState(0xd61a, 0x4548, 0x82e0, 0x42fe, 0xcc58, 0x9572, 0x0, 0x0);
        gbc.writeMem(0xd61a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x4548);
        EXPECT(gbc.pc(), 0xd61b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd61a), 0x90);
        // 90 017D
        gbc.setState(0x61c5, 0xb463, 0x9030, 0xba24, 0x38b9, 0x491f, 0x0, 0x1);
        gbc.writeMem(0x61c5, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb463);
        EXPECT(gbc.pc(), 0x61c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 017E
        gbc.setState(0x1fa6, 0xc6ca, 0xa2e0, 0x6211, 0xa513, 0xf142, 0x1, 0x0);
        gbc.writeMem(0x1fa6, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xc6ca);
        EXPECT(gbc.pc(), 0x1fa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0180
        gbc.setState(0xd53a, 0x9ecc, 0x26c0, 0x2872, 0x4603, 0xf96, 0x1, 0x1);
        gbc.writeMem(0xd53a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9ecc);
        EXPECT(gbc.pc(), 0xd53b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd53a), 0x90);
        // 90 0181
        gbc.setState(0x161d, 0x5251, 0x7560, 0x3a49, 0x6c3d, 0xc6f7, 0x0, 0x1);
        gbc.writeMem(0x161d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5251);
        EXPECT(gbc.pc(), 0x161e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0182
        gbc.setState(0xdec3, 0x4b10, 0x12b0, 0xefe1, 0x4edc, 0x7a62, 0x1, 0x1);
        gbc.writeMem(0xdec3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4b10);
        EXPECT(gbc.pc(), 0xdec4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdec3), 0x90);
        // 90 0183
        gbc.setState(0xa11a, 0xc7df, 0x5740, 0xe787, 0xbeb5, 0x38e4, 0x1, 0x1);
        gbc.writeMem(0xa11a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc7df);
        EXPECT(gbc.pc(), 0xa11b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa11a), 0x90);
        // 90 0184
        gbc.setState(0xa649, 0xf227, 0x9040, 0x39a1, 0x5af1, 0x3ab7, 0x0, 0x1);
        gbc.writeMem(0xa649, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xf227);
        EXPECT(gbc.pc(), 0xa64a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa649), 0x90);
        // 90 0185
        gbc.setState(0x4e25, 0x8d29, 0x8ff0, 0x6bcb, 0xc9af, 0x1ede, 0x0, 0x1);
        gbc.writeMem(0x4e25, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x8d29);
        EXPECT(gbc.pc(), 0x4e26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0186
        gbc.setState(0xaa2b, 0xa15e, 0xd210, 0x3407, 0xef87, 0xa880, 0x1, 0x0);
        gbc.writeMem(0xaa2b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa15e);
        EXPECT(gbc.pc(), 0xaa2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa2b), 0x90);
        // 90 0187
        gbc.setState(0x85f3, 0x4ec9, 0x80c0, 0xde11, 0x846, 0x3e86, 0x1, 0x0);
        gbc.writeMem(0x85f3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4ec9);
        EXPECT(gbc.pc(), 0x85f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85f3), 0x90);
        // 90 0189
        gbc.setState(0x639e, 0xa018, 0xbd70, 0xe06e, 0xfead, 0xe592, 0x1, 0x1);
        gbc.writeMem(0x639e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xa018);
        EXPECT(gbc.pc(), 0x639f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 018A
        gbc.setState(0x1c26, 0xa9d7, 0xc260, 0xb41f, 0x58a9, 0x6a42, 0x0, 0x0);
        gbc.writeMem(0x1c26, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xa9d7);
        EXPECT(gbc.pc(), 0x1c27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 018B
        gbc.setState(0xc2ac, 0x5601, 0x45b0, 0xbb40, 0xa846, 0x4cfd, 0x0, 0x0);
        gbc.writeMem(0xc2ac, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x5601);
        EXPECT(gbc.pc(), 0xc2ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2ac), 0x90);
        // 90 018C
        gbc.setState(0xd8ae, 0x2545, 0x26f0, 0xae2e, 0x36f8, 0x3222, 0x0, 0x1);
        gbc.writeMem(0xd8ae, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2545);
        EXPECT(gbc.pc(), 0xd8af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8ae), 0x90);
        // 90 018D
        gbc.setState(0xee0c, 0xaef4, 0xf7a0, 0x602c, 0x8f48, 0xc88d, 0x0, 0x1);
        gbc.writeMem(0xee0c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xaef4);
        EXPECT(gbc.pc(), 0xee0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee0c), 0x90);
        // 90 018E
        gbc.setState(0x5e1, 0xec2a, 0x9ae0, 0x3f5a, 0x3601, 0x9cae, 0x0, 0x1);
        gbc.writeMem(0x5e1, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xec2a);
        EXPECT(gbc.pc(), 0x5e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 018F
        gbc.setState(0xdf0e, 0x2f15, 0x59a0, 0x8e32, 0x390e, 0x9738, 0x1, 0x1);
        gbc.writeMem(0xdf0e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2f15);
        EXPECT(gbc.pc(), 0xdf0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf0e), 0x90);
        // 90 0190
        gbc.setState(0xc0db, 0x4b2e, 0xc880, 0xd8cd, 0xe329, 0x453b, 0x0, 0x0);
        gbc.writeMem(0xc0db, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4b2e);
        EXPECT(gbc.pc(), 0xc0dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0db), 0x90);
        // 90 0191
        gbc.setState(0xad78, 0x57d9, 0x7160, 0x6767, 0x1971, 0xa09d, 0x0, 0x1);
        gbc.writeMem(0xad78, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x57d9);
        EXPECT(gbc.pc(), 0xad79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad78), 0x90);
        // 90 0192
        gbc.setState(0xde74, 0xbbb0, 0xbdd0, 0xfec0, 0xc59d, 0x9593, 0x0, 0x0);
        gbc.writeMem(0xde74, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xbbb0);
        EXPECT(gbc.pc(), 0xde75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde74), 0x90);
        // 90 0193
        gbc.setState(0xa18a, 0xf1bd, 0x9db0, 0x5112, 0xe116, 0xbe06, 0x0, 0x1);
        gbc.writeMem(0xa18a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf1bd);
        EXPECT(gbc.pc(), 0xa18b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa18a), 0x90);
        // 90 0194
        gbc.setState(0x3a24, 0x4333, 0x1af0, 0x21bc, 0x97c4, 0x7265, 0x0, 0x1);
        gbc.writeMem(0x3a24, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4333);
        EXPECT(gbc.pc(), 0x3a25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0195
        gbc.setState(0xbe79, 0x5ebe, 0xa810, 0x3040, 0x5e65, 0x1cbb, 0x0, 0x1);
        gbc.writeMem(0xbe79, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5ebe);
        EXPECT(gbc.pc(), 0xbe7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe79), 0x90);
        // 90 0196
        gbc.setState(0x497b, 0xad3c, 0x1430, 0xcf96, 0x916a, 0xdf89, 0x0, 0x1);
        gbc.writeMem(0x497b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xad3c);
        EXPECT(gbc.pc(), 0x497c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0197
        gbc.setState(0xa405, 0x3ec2, 0xec70, 0x8a28, 0x26f0, 0xf0f1, 0x0, 0x1);
        gbc.writeMem(0xa405, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3ec2);
        EXPECT(gbc.pc(), 0xa406);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa405), 0x90);
        // 90 0198
        gbc.setState(0xd7da, 0xac55, 0x71f0, 0xcb76, 0x4b9, 0xdee6, 0x0, 0x0);
        gbc.writeMem(0xd7da, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xac55);
        EXPECT(gbc.pc(), 0xd7db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7da), 0x90);
        // 90 0199
        gbc.setState(0x89d4, 0xa41c, 0x76b0, 0x9ff8, 0x844b, 0x84fe, 0x1, 0x0);
        gbc.writeMem(0x89d4, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xa41c);
        EXPECT(gbc.pc(), 0x89d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89d4), 0x90);
        // 90 019A
        gbc.setState(0x5db3, 0x2fd8, 0x7330, 0x9c64, 0x776c, 0xbd60, 0x0, 0x1);
        gbc.writeMem(0x5db3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2fd8);
        EXPECT(gbc.pc(), 0x5db4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 019C
        gbc.setState(0xb551, 0xfb17, 0x6960, 0x6b80, 0x428d, 0x5ce5, 0x0, 0x0);
        gbc.writeMem(0xb551, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xfb17);
        EXPECT(gbc.pc(), 0xb552);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb551), 0x90);
        // 90 019D
        gbc.setState(0xc538, 0xebe8, 0x83c0, 0x7dda, 0x4ca9, 0xfd09, 0x1, 0x0);
        gbc.writeMem(0xc538, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xebe8);
        EXPECT(gbc.pc(), 0xc539);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc538), 0x90);
        // 90 019E
        gbc.setState(0x4d1c, 0x38c6, 0xf2f0, 0xe76d, 0x1459, 0x43e, 0x1, 0x1);
        gbc.writeMem(0x4d1c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x38c6);
        EXPECT(gbc.pc(), 0x4d1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 019F
        gbc.setState(0xd765, 0x6c7a, 0x7500, 0xbc40, 0x29d5, 0x6312, 0x1, 0x0);
        gbc.writeMem(0xd765, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6c7a);
        EXPECT(gbc.pc(), 0xd766);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd765), 0x90);
        // 90 01A0
        gbc.setState(0x9bdf, 0xe540, 0xe110, 0x354a, 0x6798, 0xa8e, 0x1, 0x0);
        gbc.writeMem(0x9bdf, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xe540);
        EXPECT(gbc.pc(), 0x9be0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bdf), 0x90);
        // 90 01A1
        gbc.setState(0xdf3a, 0x91cc, 0x5760, 0x5b43, 0x393c, 0x622e, 0x1, 0x1);
        gbc.writeMem(0xdf3a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x91cc);
        EXPECT(gbc.pc(), 0xdf3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf3a), 0x90);
        // 90 01A2
        gbc.setState(0x997c, 0xeafa, 0x8fb0, 0x89ef, 0x3794, 0x12dd, 0x1, 0x1);
        gbc.writeMem(0x997c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xeafa);
        EXPECT(gbc.pc(), 0x997d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x997c), 0x90);
        // 90 01A3
        gbc.setState(0xb605, 0x326d, 0xb50, 0xc339, 0x10fc, 0x5f49, 0x1, 0x0);
        gbc.writeMem(0xb605, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x326d);
        EXPECT(gbc.pc(), 0xb606);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb605), 0x90);
        // 90 01A4
        gbc.setState(0xc97a, 0x8239, 0xb80, 0x6e6a, 0x5c57, 0x701c, 0x0, 0x0);
        gbc.writeMem(0xc97a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x8239);
        EXPECT(gbc.pc(), 0xc97b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc97a), 0x90);
        // 90 01A5
        gbc.setState(0x7ebf, 0x8e5a, 0x9c0, 0xdd99, 0xf639, 0x3034, 0x0, 0x0);
        gbc.writeMem(0x7ebf, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x8e5a);
        EXPECT(gbc.pc(), 0x7ec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 01A6
        gbc.setState(0x6d1, 0x3441, 0x3b60, 0x8fbb, 0xef54, 0x8f7c, 0x0, 0x0);
        gbc.writeMem(0x6d1, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x3441);
        EXPECT(gbc.pc(), 0x6d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 01A7
        gbc.setState(0xde7d, 0x280c, 0x410, 0x123b, 0x4fbe, 0x4abe, 0x1, 0x1);
        gbc.writeMem(0xde7d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x280c);
        EXPECT(gbc.pc(), 0xde7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde7d), 0x90);
        // 90 01A8
        gbc.setState(0x4d88, 0xe720, 0xdca0, 0xc7, 0x95db, 0xf48, 0x0, 0x0);
        gbc.writeMem(0x4d88, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe720);
        EXPECT(gbc.pc(), 0x4d89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 01A9
        gbc.setState(0x3d04, 0x6d0f, 0x1150, 0x3cf3, 0x19a2, 0xe147, 0x1, 0x1);
        gbc.writeMem(0x3d04, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x6d0f);
        EXPECT(gbc.pc(), 0x3d05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 01AA
        gbc.setState(0x80c2, 0x1aab, 0xb9d0, 0x43d8, 0x44e, 0x3a64, 0x1, 0x0);
        gbc.writeMem(0x80c2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x1aab);
        EXPECT(gbc.pc(), 0x80c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80c2), 0x90);
        // 90 01AC
        gbc.setState(0xe81d, 0x5c2f, 0xf4a0, 0x903b, 0x6ed8, 0xc2d0, 0x1, 0x0);
        gbc.writeMem(0xe81d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x5c2f);
        EXPECT(gbc.pc(), 0xe81e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe81d), 0x90);
        // 90 01AD
        gbc.setState(0x83bb, 0xf048, 0xc950, 0x81d9, 0x2b7c, 0x6500, 0x1, 0x1);
        gbc.writeMem(0x83bb, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf048);
        EXPECT(gbc.pc(), 0x83bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83bb), 0x90);
        // 90 01AE
        gbc.setState(0x87b8, 0xf71a, 0xaa20, 0x17bf, 0xc42f, 0xe597, 0x1, 0x0);
        gbc.writeMem(0x87b8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf71a);
        EXPECT(gbc.pc(), 0x87b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87b8), 0x90);
        // 90 01AF
        gbc.setState(0x2580, 0x3d1d, 0x4ae0, 0x5b95, 0xa1d3, 0x7369, 0x1, 0x1);
        gbc.writeMem(0x2580, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3d1d);
        EXPECT(gbc.pc(), 0x2581);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 01B0
        gbc.setState(0xeb04, 0x5c9, 0x36a0, 0xab6, 0x9e9e, 0x74e0, 0x1, 0x1);
        gbc.writeMem(0xeb04, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5c9);
        EXPECT(gbc.pc(), 0xeb05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb04), 0x90);
        // 90 01B1
        gbc.setState(0x6cb2, 0xa745, 0xf850, 0xbe7d, 0x9004, 0xa54, 0x0, 0x1);
        gbc.writeMem(0x6cb2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xa745);
        EXPECT(gbc.pc(), 0x6cb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 01B2
        gbc.setState(0x949, 0x8166, 0xc050, 0xed1e, 0xbb8d, 0x9613, 0x0, 0x1);
        gbc.writeMem(0x949, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x8166);
        EXPECT(gbc.pc(), 0x94a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 01B3
        gbc.setState(0xd045, 0x64, 0x2150, 0x1d04, 0x6eac, 0x3806, 0x1, 0x0);
        gbc.writeMem(0xd045, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x64);
        EXPECT(gbc.pc(), 0xd046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd045), 0x90);
        // 90 01B4
        gbc.setState(0xd9ac, 0xe592, 0xb160, 0x340b, 0x66e5, 0x5934, 0x0, 0x0);
        gbc.writeMem(0xd9ac, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe592);
        EXPECT(gbc.pc(), 0xd9ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9ac), 0x90);
        // 90 01B5
        gbc.setState(0x5a80, 0x79f6, 0x7d70, 0xb5bc, 0xf267, 0x2372, 0x1, 0x1);
        gbc.writeMem(0x5a80, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x79f6);
        EXPECT(gbc.pc(), 0x5a81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 01B6
        gbc.setState(0x1d36, 0xb1cf, 0xc830, 0x82e9, 0xcbea, 0x7f, 0x1, 0x1);
        gbc.writeMem(0x1d36, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb1cf);
        EXPECT(gbc.pc(), 0x1d37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 01B7
        gbc.setState(0x1de9, 0x4db9, 0x5170, 0xa118, 0x39b4, 0x3174, 0x0, 0x1);
        gbc.writeMem(0x1de9, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4db9);
        EXPECT(gbc.pc(), 0x1dea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 01B8
        gbc.setState(0x6d9f, 0x49b0, 0xac40, 0x90a2, 0x8375, 0xda7a, 0x1, 0x1);
        gbc.writeMem(0x6d9f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x49b0);
        EXPECT(gbc.pc(), 0x6da0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 01B9
        gbc.setState(0xd7d1, 0x838c, 0xb860, 0x1e6a, 0xfbae, 0x3a12, 0x1, 0x0);
        gbc.writeMem(0xd7d1, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x838c);
        EXPECT(gbc.pc(), 0xd7d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7d1), 0x90);
        // 90 01BA
        gbc.setState(0x613b, 0x9c94, 0xf5f0, 0x584a, 0x2c84, 0x3e2d, 0x1, 0x1);
        gbc.writeMem(0x613b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9c94);
        EXPECT(gbc.pc(), 0x613c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 01BB
        gbc.setState(0x224c, 0x25d3, 0xb030, 0x3b3e, 0x9985, 0x3285, 0x1, 0x1);
        gbc.writeMem(0x224c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x25d3);
        EXPECT(gbc.pc(), 0x224d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 01BC
        gbc.setState(0x835f, 0x6f39, 0x40a0, 0x8225, 0xe10a, 0xb0f8, 0x0, 0x1);
        gbc.writeMem(0x835f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x6f39);
        EXPECT(gbc.pc(), 0x8360);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x835f), 0x90);
        // 90 01BD
        gbc.setState(0xedaf, 0xe0e7, 0xc630, 0xcbf3, 0x94e5, 0x257e, 0x1, 0x0);
        gbc.writeMem(0xedaf, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe0e7);
        EXPECT(gbc.pc(), 0xedb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedaf), 0x90);
        // 90 01BE
        gbc.setState(0xe865, 0x869a, 0xf990, 0x8082, 0xa8, 0x4954, 0x1, 0x0);
        gbc.writeMem(0xe865, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x869a);
        EXPECT(gbc.pc(), 0xe866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe865), 0x90);
        // 90 01BF
        gbc.setState(0x967e, 0x7fe5, 0x3b30, 0x90c5, 0x7970, 0x1520, 0x1, 0x1);
        gbc.writeMem(0x967e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7fe5);
        EXPECT(gbc.pc(), 0x967f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x967e), 0x90);
        // 90 01C0
        gbc.setState(0x3176, 0x7e58, 0x5660, 0xe9ea, 0x3eab, 0x147b, 0x0, 0x1);
        gbc.writeMem(0x3176, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7e58);
        EXPECT(gbc.pc(), 0x3177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 01C1
        gbc.setState(0xe7cd, 0xdfde, 0x600, 0xd986, 0x55a7, 0x9cb2, 0x1, 0x0);
        gbc.writeMem(0xe7cd, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xdfde);
        EXPECT(gbc.pc(), 0xe7ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7cd), 0x90);
        // 90 01C2
        gbc.setState(0x7a0, 0x203a, 0xba90, 0x9c9f, 0xa09d, 0x39e4, 0x0, 0x0);
        gbc.writeMem(0x7a0, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x203a);
        EXPECT(gbc.pc(), 0x7a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 01C3
        gbc.setState(0xbd69, 0xb4d5, 0x9a80, 0xb9c2, 0xd448, 0x7856, 0x1, 0x0);
        gbc.writeMem(0xbd69, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb4d5);
        EXPECT(gbc.pc(), 0xbd6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd69), 0x90);
        // 90 01C4
        gbc.setState(0x1149, 0xa97e, 0x1450, 0x1fde, 0xf08b, 0xf8c1, 0x0, 0x1);
        gbc.writeMem(0x1149, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa97e);
        EXPECT(gbc.pc(), 0x114a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 01C5
        gbc.setState(0xbf4a, 0x9677, 0xed0, 0xcb91, 0x480a, 0x456c, 0x0, 0x1);
        gbc.writeMem(0xbf4a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9677);
        EXPECT(gbc.pc(), 0xbf4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf4a), 0x90);
        // 90 01C6
        gbc.setState(0x4cb1, 0xd280, 0xa310, 0xc66a, 0xa285, 0xc5bd, 0x1, 0x1);
        gbc.writeMem(0x4cb1, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd280);
        EXPECT(gbc.pc(), 0x4cb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 01C7
        gbc.setState(0x506e, 0xc503, 0x9250, 0xd5b1, 0x1be5, 0x2c5b, 0x1, 0x0);
        gbc.writeMem(0x506e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc503);
        EXPECT(gbc.pc(), 0x506f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 01C8
        gbc.setState(0xa230, 0xf122, 0x6a90, 0x739a, 0x5451, 0x4185, 0x0, 0x0);
        gbc.writeMem(0xa230, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xf122);
        EXPECT(gbc.pc(), 0xa231);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa230), 0x90);
        // 90 01C9
        gbc.setState(0x497f, 0x39ad, 0x2570, 0xc112, 0xfa80, 0xf0e, 0x1, 0x1);
        gbc.writeMem(0x497f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x39ad);
        EXPECT(gbc.pc(), 0x4980);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 01CA
        gbc.setState(0x572d, 0x81a2, 0xa5e0, 0xa286, 0x6d86, 0x1f1d, 0x1, 0x1);
        gbc.writeMem(0x572d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x81a2);
        EXPECT(gbc.pc(), 0x572e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 01CB
        gbc.setState(0x56b4, 0x3b1e, 0xbce0, 0x39be, 0x576c, 0x23e9, 0x1, 0x1);
        gbc.writeMem(0x56b4, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x3b1e);
        EXPECT(gbc.pc(), 0x56b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 01CC
        gbc.setState(0x15a1, 0x3fe8, 0x9890, 0xbe98, 0xee4c, 0x1c1, 0x1, 0x1);
        gbc.writeMem(0x15a1, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3fe8);
        EXPECT(gbc.pc(), 0x15a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 01CD
        gbc.setState(0x722a, 0x7756, 0x40d0, 0x5d9f, 0x2331, 0xe347, 0x1, 0x1);
        gbc.writeMem(0x722a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7756);
        EXPECT(gbc.pc(), 0x722b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 01CE
        gbc.setState(0x8251, 0x486d, 0xee30, 0xc9dd, 0x8bbe, 0xc6d, 0x0, 0x1);
        gbc.writeMem(0x8251, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x486d);
        EXPECT(gbc.pc(), 0x8252);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8251), 0x90);
        // 90 01D0
        gbc.setState(0x9a29, 0x9d78, 0x2400, 0xe57e, 0x804a, 0xc887, 0x0, 0x0);
        gbc.writeMem(0x9a29, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x9d78);
        EXPECT(gbc.pc(), 0x9a2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a29), 0x90);
        // 90 01D1
        gbc.setState(0x303d, 0x94a4, 0x290, 0x55db, 0xb543, 0x880e, 0x0, 0x1);
        gbc.writeMem(0x303d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x94a4);
        EXPECT(gbc.pc(), 0x303e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 01D2
        gbc.setState(0x2dc3, 0xcf34, 0x75d0, 0xc749, 0x823a, 0xb6ac, 0x1, 0x0);
        gbc.writeMem(0x2dc3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xcf34);
        EXPECT(gbc.pc(), 0x2dc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 01D4
        gbc.setState(0xebfd, 0x83c9, 0xd870, 0x315a, 0x7c18, 0xdc71, 0x1, 0x1);
        gbc.writeMem(0xebfd, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x83c9);
        EXPECT(gbc.pc(), 0xebfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebfd), 0x90);
        // 90 01D5
        gbc.setState(0x7936, 0x6482, 0x92c0, 0x90fb, 0xefab, 0xcb5a, 0x1, 0x1);
        gbc.writeMem(0x7936, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6482);
        EXPECT(gbc.pc(), 0x7937);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 01D6
        gbc.setState(0xed9, 0x5ae6, 0xe590, 0xfe79, 0x6674, 0xe4aa, 0x1, 0x1);
        gbc.writeMem(0xed9, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5ae6);
        EXPECT(gbc.pc(), 0xeda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 01D7
        gbc.setState(0xb6de, 0xeced, 0xf8f0, 0xaa0f, 0xc60d, 0x6156, 0x0, 0x1);
        gbc.writeMem(0xb6de, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xeced);
        EXPECT(gbc.pc(), 0xb6df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6de), 0x90);
        // 90 01D8
        gbc.setState(0x2274, 0x80e7, 0x79c0, 0x1b46, 0xe45d, 0xbd46, 0x0, 0x1);
        gbc.writeMem(0x2274, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x80e7);
        EXPECT(gbc.pc(), 0x2275);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 01DA
        gbc.setState(0x7e0f, 0x29e, 0x3b20, 0x7f0c, 0xfadd, 0x59cb, 0x1, 0x1);
        gbc.writeMem(0x7e0f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x29e);
        EXPECT(gbc.pc(), 0x7e10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 01DB
        gbc.setState(0x58f3, 0xbef3, 0xe080, 0x8208, 0x2275, 0xa622, 0x0, 0x1);
        gbc.writeMem(0x58f3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xbef3);
        EXPECT(gbc.pc(), 0x58f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 01DC
        gbc.setState(0x4d7d, 0x1d1c, 0x37a0, 0xa6dd, 0xf354, 0x3fd, 0x1, 0x1);
        gbc.writeMem(0x4d7d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1d1c);
        EXPECT(gbc.pc(), 0x4d7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 01DD
        gbc.setState(0x7be7, 0xe284, 0x1990, 0x7f71, 0xfe0f, 0x1ba5, 0x1, 0x0);
        gbc.writeMem(0x7be7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe284);
        EXPECT(gbc.pc(), 0x7be8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 01DE
        gbc.setState(0xbde8, 0xeeb6, 0x5e70, 0xad9e, 0xf228, 0x9faa, 0x0, 0x1);
        gbc.writeMem(0xbde8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xeeb6);
        EXPECT(gbc.pc(), 0xbde9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbde8), 0x90);
        // 90 01DF
        gbc.setState(0xdc2d, 0x62b0, 0xffe0, 0x32c1, 0x2bf9, 0x3cc1, 0x1, 0x0);
        gbc.writeMem(0xdc2d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x62b0);
        EXPECT(gbc.pc(), 0xdc2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc2d), 0x90);
        // 90 01E0
        gbc.setState(0xbf22, 0xf7a5, 0xa40, 0x7a63, 0x7017, 0xc27a, 0x0, 0x0);
        gbc.writeMem(0xbf22, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf7a5);
        EXPECT(gbc.pc(), 0xbf23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf22), 0x90);
        // 90 01E3
        gbc.setState(0xa789, 0x9bf1, 0xb640, 0x95f3, 0x2b80, 0xfcf7, 0x1, 0x0);
        gbc.writeMem(0xa789, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x9bf1);
        EXPECT(gbc.pc(), 0xa78a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa789), 0x90);
        // 90 01E4
        gbc.setState(0xeeea, 0xcacf, 0xef30, 0x777c, 0xd169, 0xeee9, 0x1, 0x0);
        gbc.writeMem(0xeeea, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xcacf);
        EXPECT(gbc.pc(), 0xeeeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeea), 0x90);
        // 90 01E6
        gbc.setState(0x9ea0, 0x558, 0xac50, 0xcb56, 0x272b, 0x981c, 0x0, 0x0);
        gbc.writeMem(0x9ea0, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x558);
        EXPECT(gbc.pc(), 0x9ea1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ea0), 0x90);
        // 90 01E7
        gbc.setState(0x3e78, 0xd98d, 0xd860, 0xc43f, 0xf126, 0xca89, 0x0, 0x0);
        gbc.writeMem(0x3e78, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xd98d);
        EXPECT(gbc.pc(), 0x3e79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 01E8
        gbc.setState(0x2fb9, 0x3aff, 0x8450, 0x4a24, 0xc96b, 0x577c, 0x0, 0x0);
        gbc.writeMem(0x2fb9, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x3aff);
        EXPECT(gbc.pc(), 0x2fba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 01EA
        gbc.setState(0xe103, 0xd59e, 0x6c0, 0xad07, 0x205f, 0xcaad, 0x1, 0x0);
        gbc.writeMem(0xe103, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xd59e);
        EXPECT(gbc.pc(), 0xe104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe103), 0x90);
        // 90 01EB
        gbc.setState(0xb424, 0xffd3, 0x9d60, 0xb8c6, 0x625f, 0x959, 0x0, 0x1);
        gbc.writeMem(0xb424, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xffd3);
        EXPECT(gbc.pc(), 0xb425);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb424), 0x90);
        // 90 01EC
        gbc.setState(0x5a2b, 0x1c36, 0x7270, 0xfa22, 0x71e2, 0x77c3, 0x0, 0x1);
        gbc.writeMem(0x5a2b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1c36);
        EXPECT(gbc.pc(), 0x5a2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 01ED
        gbc.setState(0x668b, 0x889, 0xf8d0, 0x20b7, 0x3d34, 0x65bc, 0x1, 0x0);
        gbc.writeMem(0x668b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x889);
        EXPECT(gbc.pc(), 0x668c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 01EE
        gbc.setState(0xd68a, 0x3ab6, 0xa200, 0x4008, 0x3115, 0xb4ad, 0x1, 0x0);
        gbc.writeMem(0xd68a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x3ab6);
        EXPECT(gbc.pc(), 0xd68b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd68a), 0x90);
        // 90 01F0
        gbc.setState(0x8c13, 0x774c, 0x27c0, 0xa850, 0xecd7, 0xf7b6, 0x0, 0x0);
        gbc.writeMem(0x8c13, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x774c);
        EXPECT(gbc.pc(), 0x8c14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c13), 0x90);
        // 90 01F1
        gbc.setState(0x24da, 0xb6c8, 0x5630, 0x4f75, 0x83d4, 0x3a78, 0x1, 0x0);
        gbc.writeMem(0x24da, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xb6c8);
        EXPECT(gbc.pc(), 0x24db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 01F2
        gbc.setState(0x43cf, 0x705, 0x4240, 0x9161, 0x2679, 0x4cf1, 0x0, 0x1);
        gbc.writeMem(0x43cf, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x705);
        EXPECT(gbc.pc(), 0x43d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 01F3
        gbc.setState(0xd2dc, 0x78ef, 0x9b20, 0x8367, 0xe8f3, 0x6753, 0x1, 0x1);
        gbc.writeMem(0xd2dc, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x78ef);
        EXPECT(gbc.pc(), 0xd2dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2dc), 0x90);
        // 90 01F4
        gbc.setState(0xb158, 0x68cd, 0x8a70, 0xcdb0, 0xd5ba, 0x7ca9, 0x0, 0x1);
        gbc.writeMem(0xb158, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x68cd);
        EXPECT(gbc.pc(), 0xb159);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb158), 0x90);
        // 90 01F5
        gbc.setState(0x79a3, 0x6bce, 0x3ba0, 0x83b4, 0xcf87, 0x7f9a, 0x1, 0x0);
        gbc.writeMem(0x79a3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x6bce);
        EXPECT(gbc.pc(), 0x79a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 01F6
        gbc.setState(0xecb8, 0x76bf, 0xd70, 0xffb5, 0xa0f2, 0x6c0e, 0x1, 0x1);
        gbc.writeMem(0xecb8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x76bf);
        EXPECT(gbc.pc(), 0xecb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecb8), 0x90);
        // 90 01F7
        gbc.setState(0xc910, 0xfcd1, 0xe190, 0x8db2, 0xb7, 0x3f12, 0x1, 0x1);
        gbc.writeMem(0xc910, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xfcd1);
        EXPECT(gbc.pc(), 0xc911);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc910), 0x90);
        // 90 01F8
        gbc.setState(0x3d88, 0x2315, 0x1900, 0xec8d, 0x9122, 0x1368, 0x1, 0x0);
        gbc.writeMem(0x3d88, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2315);
        EXPECT(gbc.pc(), 0x3d89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 01F9
        gbc.setState(0xe958, 0xd771, 0x4c10, 0xd6cd, 0xbc90, 0xec4, 0x1, 0x0);
        gbc.writeMem(0xe958, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xd771);
        EXPECT(gbc.pc(), 0xe959);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe958), 0x90);
        // 90 01FA
        gbc.setState(0x5f7c, 0xdf47, 0x27d0, 0x4517, 0xce7a, 0x3814, 0x1, 0x0);
        gbc.writeMem(0x5f7c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xdf47);
        EXPECT(gbc.pc(), 0x5f7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 01FB
        gbc.setState(0x16a1, 0x1c6f, 0x6830, 0x1ff7, 0x678b, 0xafa5, 0x1, 0x1);
        gbc.writeMem(0x16a1, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1c6f);
        EXPECT(gbc.pc(), 0x16a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 01FC
        gbc.setState(0x1283, 0x344b, 0x1280, 0x68a5, 0xebcd, 0x4435, 0x1, 0x0);
        gbc.writeMem(0x1283, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x344b);
        EXPECT(gbc.pc(), 0x1284);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 01FD
        gbc.setState(0x323e, 0xd02c, 0x7d10, 0x2295, 0xab9a, 0x35cc, 0x0, 0x1);
        gbc.writeMem(0x323e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xd02c);
        EXPECT(gbc.pc(), 0x323f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 01FE
        gbc.setState(0x3271, 0xa12f, 0x6570, 0xc1ed, 0x23f1, 0xd70d, 0x0, 0x1);
        gbc.writeMem(0x3271, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa12f);
        EXPECT(gbc.pc(), 0x3272);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 01FF
        gbc.setState(0x8ac7, 0xe670, 0x56b0, 0x270, 0x6743, 0x9133, 0x0, 0x1);
        gbc.writeMem(0x8ac7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xe670);
        EXPECT(gbc.pc(), 0x8ac8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ac7), 0x90);
        // 90 0200
        gbc.setState(0x18b2, 0x3bb7, 0xec10, 0x9d56, 0xaf25, 0xae0a, 0x0, 0x0);
        gbc.writeMem(0x18b2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3bb7);
        EXPECT(gbc.pc(), 0x18b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0201
        gbc.setState(0xee31, 0xcae, 0x58e0, 0xbe66, 0xdf8c, 0xbc8f, 0x0, 0x1);
        gbc.writeMem(0xee31, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xcae);
        EXPECT(gbc.pc(), 0xee32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee31), 0x90);
        // 90 0202
        gbc.setState(0xd284, 0xa4fb, 0xa610, 0x24d3, 0x9a82, 0xf487, 0x0, 0x0);
        gbc.writeMem(0xd284, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa4fb);
        EXPECT(gbc.pc(), 0xd285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd284), 0x90);
        // 90 0203
        gbc.setState(0x5a93, 0x1716, 0x6a90, 0x4fd9, 0x41f9, 0x14de, 0x1, 0x1);
        gbc.writeMem(0x5a93, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1716);
        EXPECT(gbc.pc(), 0x5a94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0204
        gbc.setState(0x66d1, 0xf6cc, 0x1170, 0xb34d, 0xbd0f, 0x8c94, 0x1, 0x1);
        gbc.writeMem(0x66d1, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xf6cc);
        EXPECT(gbc.pc(), 0x66d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0205
        gbc.setState(0x2f4c, 0xf0f8, 0x3e70, 0x4755, 0x128b, 0xcfaf, 0x1, 0x0);
        gbc.writeMem(0x2f4c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf0f8);
        EXPECT(gbc.pc(), 0x2f4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0206
        gbc.setState(0x1260, 0x1af6, 0xea90, 0x145d, 0xae32, 0xa7db, 0x1, 0x1);
        gbc.writeMem(0x1260, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1af6);
        EXPECT(gbc.pc(), 0x1261);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0207
        gbc.setState(0xc44f, 0x3606, 0xb620, 0xf188, 0x3f0c, 0xd842, 0x0, 0x0);
        gbc.writeMem(0xc44f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3606);
        EXPECT(gbc.pc(), 0xc450);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc44f), 0x90);
        // 90 0208
        gbc.setState(0xd683, 0x180d, 0xb5a0, 0x651d, 0x621d, 0x711a, 0x1, 0x0);
        gbc.writeMem(0xd683, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x180d);
        EXPECT(gbc.pc(), 0xd684);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd683), 0x90);
        // 90 0209
        gbc.setState(0x3aee, 0xed00, 0xa190, 0x972b, 0xe1e6, 0x86fc, 0x1, 0x0);
        gbc.writeMem(0x3aee, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xed00);
        EXPECT(gbc.pc(), 0x3aef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 020A
        gbc.setState(0x991a, 0x7787, 0x42d0, 0x4b46, 0x58ca, 0x5e52, 0x0, 0x0);
        gbc.writeMem(0x991a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x7787);
        EXPECT(gbc.pc(), 0x991b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x991a), 0x90);
        // 90 020B
        gbc.setState(0xe4db, 0x50f3, 0x9ab0, 0x5eb7, 0xb4c5, 0xbfdb, 0x1, 0x0);
        gbc.writeMem(0xe4db, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x50f3);
        EXPECT(gbc.pc(), 0xe4dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4db), 0x90);
        // 90 020C
        gbc.setState(0x1865, 0xa3f7, 0xe3a0, 0x90c7, 0x7ef2, 0x1e18, 0x0, 0x1);
        gbc.writeMem(0x1865, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa3f7);
        EXPECT(gbc.pc(), 0x1866);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 020D
        gbc.setState(0x7a92, 0xac24, 0x8be0, 0xc137, 0x154a, 0x1367, 0x0, 0x1);
        gbc.writeMem(0x7a92, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xac24);
        EXPECT(gbc.pc(), 0x7a93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 020E
        gbc.setState(0x1bd, 0xefea, 0x6b0, 0xeae9, 0xf803, 0x61f1, 0x0, 0x1);
        gbc.writeMem(0x1bd, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xefea);
        EXPECT(gbc.pc(), 0x1be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 020F
        gbc.setState(0xc1a7, 0x81db, 0x8300, 0xa093, 0x568f, 0xc50e, 0x0, 0x0);
        gbc.writeMem(0xc1a7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x81db);
        EXPECT(gbc.pc(), 0xc1a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1a7), 0x90);
        // 90 0210
        gbc.setState(0x7515, 0x3d0e, 0xc840, 0x1260, 0xff75, 0x5d4, 0x1, 0x0);
        gbc.writeMem(0x7515, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x3d0e);
        EXPECT(gbc.pc(), 0x7516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0211
        gbc.setState(0x1f55, 0xf324, 0x5150, 0x32d4, 0x6dc6, 0xa2cd, 0x1, 0x0);
        gbc.writeMem(0x1f55, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf324);
        EXPECT(gbc.pc(), 0x1f56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0212
        gbc.setState(0x73ac, 0x58e0, 0x8660, 0x88d3, 0xa9fb, 0xcecb, 0x1, 0x1);
        gbc.writeMem(0x73ac, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x58e0);
        EXPECT(gbc.pc(), 0x73ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0213
        gbc.setState(0xc359, 0xedf, 0x3380, 0x6ad2, 0x3021, 0x7b7f, 0x1, 0x1);
        gbc.writeMem(0xc359, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xedf);
        EXPECT(gbc.pc(), 0xc35a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc359), 0x90);
        // 90 0214
        gbc.setState(0x642b, 0xff8, 0xd5e0, 0x9b84, 0x5d37, 0xc5ec, 0x1, 0x0);
        gbc.writeMem(0x642b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xff8);
        EXPECT(gbc.pc(), 0x642c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0215
        gbc.setState(0x1988, 0x2122, 0xd670, 0x7c8a, 0x90c, 0x932d, 0x0, 0x1);
        gbc.writeMem(0x1988, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x2122);
        EXPECT(gbc.pc(), 0x1989);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0216
        gbc.setState(0x1ba7, 0x3123, 0xbe50, 0xa4e9, 0x4dfe, 0x881e, 0x0, 0x1);
        gbc.writeMem(0x1ba7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3123);
        EXPECT(gbc.pc(), 0x1ba8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0217
        gbc.setState(0xcd59, 0xfa52, 0xa010, 0x3000, 0xad88, 0xe3f5, 0x0, 0x1);
        gbc.writeMem(0xcd59, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xfa52);
        EXPECT(gbc.pc(), 0xcd5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd59), 0x90);
        // 90 0218
        gbc.setState(0x6d07, 0xf3e0, 0x9360, 0xaf26, 0x6a02, 0x446d, 0x1, 0x1);
        gbc.writeMem(0x6d07, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xf3e0);
        EXPECT(gbc.pc(), 0x6d08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0219
        gbc.setState(0x3d71, 0xabf9, 0x2830, 0xccc9, 0xd870, 0x289, 0x1, 0x1);
        gbc.writeMem(0x3d71, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xabf9);
        EXPECT(gbc.pc(), 0x3d72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 021A
        gbc.setState(0xee18, 0x81c9, 0xe730, 0x2f7, 0x8955, 0x4874, 0x1, 0x1);
        gbc.writeMem(0xee18, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x81c9);
        EXPECT(gbc.pc(), 0xee19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee18), 0x90);
        // 90 021B
        gbc.setState(0xbe0a, 0x6789, 0xccf0, 0x30fa, 0x154d, 0x1d62, 0x0, 0x0);
        gbc.writeMem(0xbe0a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6789);
        EXPECT(gbc.pc(), 0xbe0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe0a), 0x90);
        // 90 021C
        gbc.setState(0x3bab, 0x8e1b, 0xcf80, 0x243f, 0xd8e8, 0xb2d1, 0x0, 0x0);
        gbc.writeMem(0x3bab, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8e1b);
        EXPECT(gbc.pc(), 0x3bac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 021D
        gbc.setState(0xed63, 0xb442, 0xfb90, 0xefa0, 0x1afd, 0xcb40, 0x1, 0x1);
        gbc.writeMem(0xed63, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb442);
        EXPECT(gbc.pc(), 0xed64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed63), 0x90);
        // 90 021E
        gbc.setState(0x874, 0xc697, 0x7760, 0xdb6a, 0x8f94, 0x3b13, 0x1, 0x1);
        gbc.writeMem(0x874, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc697);
        EXPECT(gbc.pc(), 0x875);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 021F
        gbc.setState(0x8e50, 0x5a64, 0xf7f0, 0xd996, 0x6ae, 0x17a, 0x1, 0x0);
        gbc.writeMem(0x8e50, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5a64);
        EXPECT(gbc.pc(), 0x8e51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e50), 0x90);
        // 90 0220
        gbc.setState(0xacb5, 0x1289, 0x3e40, 0xacc5, 0xb78a, 0xe7de, 0x1, 0x0);
        gbc.writeMem(0xacb5, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1289);
        EXPECT(gbc.pc(), 0xacb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacb5), 0x90);
        // 90 0221
        gbc.setState(0x8a16, 0x76cd, 0x21a0, 0x6b80, 0x28f8, 0xd43d, 0x1, 0x1);
        gbc.writeMem(0x8a16, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x76cd);
        EXPECT(gbc.pc(), 0x8a17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a16), 0x90);
        // 90 0222
        gbc.setState(0xa3c0, 0xcaed, 0x3660, 0x4585, 0x7dff, 0xf240, 0x1, 0x0);
        gbc.writeMem(0xa3c0, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xcaed);
        EXPECT(gbc.pc(), 0xa3c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3c0), 0x90);
        // 90 0223
        gbc.setState(0x72f5, 0xf13e, 0xa270, 0xc2c0, 0xe456, 0x68b6, 0x0, 0x0);
        gbc.writeMem(0x72f5, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xf13e);
        EXPECT(gbc.pc(), 0x72f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0224
        gbc.setState(0x7f29, 0xf0ee, 0x2d90, 0x8942, 0x917c, 0xfc37, 0x0, 0x1);
        gbc.writeMem(0x7f29, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf0ee);
        EXPECT(gbc.pc(), 0x7f2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0225
        gbc.setState(0x34e7, 0xd0ae, 0x5340, 0xa954, 0xcc71, 0x592c, 0x0, 0x0);
        gbc.writeMem(0x34e7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xd0ae);
        EXPECT(gbc.pc(), 0x34e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0226
        gbc.setState(0xb3e2, 0x3b3b, 0x11f0, 0xdd60, 0x3e10, 0xeec5, 0x1, 0x1);
        gbc.writeMem(0xb3e2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x3b3b);
        EXPECT(gbc.pc(), 0xb3e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3e2), 0x90);
        // 90 0227
        gbc.setState(0xc363, 0x771f, 0x6120, 0xc511, 0xf464, 0xcb3b, 0x0, 0x0);
        gbc.writeMem(0xc363, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x771f);
        EXPECT(gbc.pc(), 0xc364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc363), 0x90);
        // 90 0228
        gbc.setState(0xd3c8, 0x302f, 0xc0f0, 0x8199, 0x52b3, 0x920f, 0x0, 0x1);
        gbc.writeMem(0xd3c8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x302f);
        EXPECT(gbc.pc(), 0xd3c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3c8), 0x90);
        // 90 0229
        gbc.setState(0x19a8, 0x437a, 0x8c20, 0x4d6f, 0x725b, 0x1417, 0x0, 0x0);
        gbc.writeMem(0x19a8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x437a);
        EXPECT(gbc.pc(), 0x19a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 022A
        gbc.setState(0xb77, 0x7a1b, 0x9a50, 0x8618, 0x583c, 0xb2a3, 0x0, 0x1);
        gbc.writeMem(0xb77, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x7a1b);
        EXPECT(gbc.pc(), 0xb78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 022B
        gbc.setState(0x260e, 0xdfd9, 0xfbb0, 0x44ba, 0xc4a4, 0xefa, 0x0, 0x0);
        gbc.writeMem(0x260e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xdfd9);
        EXPECT(gbc.pc(), 0x260f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 022C
        gbc.setState(0x696, 0x19a0, 0xc340, 0xcec2, 0x5e79, 0xb589, 0x1, 0x0);
        gbc.writeMem(0x696, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x19a0);
        EXPECT(gbc.pc(), 0x697);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 022D
        gbc.setState(0x88bc, 0x3f2e, 0xd470, 0x691e, 0x3071, 0x334a, 0x0, 0x1);
        gbc.writeMem(0x88bc, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3f2e);
        EXPECT(gbc.pc(), 0x88bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88bc), 0x90);
        // 90 022E
        gbc.setState(0xd01d, 0xc393, 0x5100, 0xf6a4, 0x3c7f, 0x1ff1, 0x0, 0x1);
        gbc.writeMem(0xd01d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc393);
        EXPECT(gbc.pc(), 0xd01e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd01d), 0x90);
        // 90 022F
        gbc.setState(0x8404, 0x87, 0x7b30, 0x8322, 0x7744, 0x23e0, 0x1, 0x1);
        gbc.writeMem(0x8404, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x87);
        EXPECT(gbc.pc(), 0x8405);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8404), 0x90);
        // 90 0230
        gbc.setState(0xd18c, 0xe647, 0x9c60, 0x1ee6, 0xfed, 0xa7d3, 0x0, 0x1);
        gbc.writeMem(0xd18c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xe647);
        EXPECT(gbc.pc(), 0xd18d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd18c), 0x90);
        // 90 0231
        gbc.setState(0x3511, 0xe625, 0xa540, 0x43c7, 0xf501, 0x3f50, 0x0, 0x0);
        gbc.writeMem(0x3511, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xe625);
        EXPECT(gbc.pc(), 0x3512);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0232
        gbc.setState(0xd2e3, 0x2180, 0xc8b0, 0xc617, 0xe8b6, 0xe3a5, 0x1, 0x1);
        gbc.writeMem(0xd2e3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2180);
        EXPECT(gbc.pc(), 0xd2e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2e3), 0x90);
        // 90 0233
        gbc.setState(0xea7d, 0x454e, 0xb620, 0xe2c3, 0xe1bf, 0xfd85, 0x1, 0x0);
        gbc.writeMem(0xea7d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x454e);
        EXPECT(gbc.pc(), 0xea7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea7d), 0x90);
        // 90 0234
        gbc.setState(0x9, 0xa92e, 0x6690, 0xbf1, 0xd914, 0xdbad, 0x0, 0x1);
        gbc.writeMem(0x9, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xa92e);
        EXPECT(gbc.pc(), 0xa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0235
        gbc.setState(0xe05c, 0xdaed, 0xe280, 0x7f1, 0x9cbb, 0xbd19, 0x0, 0x1);
        gbc.writeMem(0xe05c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xdaed);
        EXPECT(gbc.pc(), 0xe05d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe05c), 0x90);
        // 90 0236
        gbc.setState(0x1bfd, 0x2255, 0x8e70, 0x874f, 0x753c, 0xf725, 0x1, 0x0);
        gbc.writeMem(0x1bfd, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2255);
        EXPECT(gbc.pc(), 0x1bfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0237
        gbc.setState(0xaf21, 0xa7cf, 0x3e20, 0xd5bb, 0x5c43, 0x9cce, 0x0, 0x0);
        gbc.writeMem(0xaf21, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xa7cf);
        EXPECT(gbc.pc(), 0xaf22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf21), 0x90);
        // 90 0238
        gbc.setState(0x2043, 0xc345, 0xbd50, 0x4a35, 0xce48, 0xcd68, 0x0, 0x0);
        gbc.writeMem(0x2043, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc345);
        EXPECT(gbc.pc(), 0x2044);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0239
        gbc.setState(0x9b7f, 0x5bdb, 0xd7c0, 0xdb, 0xb818, 0x5801, 0x1, 0x1);
        gbc.writeMem(0x9b7f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5bdb);
        EXPECT(gbc.pc(), 0x9b80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b7f), 0x90);
        // 90 023A
        gbc.setState(0x9146, 0xd273, 0x93a0, 0xbf60, 0x1878, 0xa932, 0x1, 0x0);
        gbc.writeMem(0x9146, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xd273);
        EXPECT(gbc.pc(), 0x9147);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9146), 0x90);
        // 90 023C
        gbc.setState(0xed60, 0x4619, 0x6100, 0x37bc, 0xd96, 0x414b, 0x1, 0x1);
        gbc.writeMem(0xed60, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4619);
        EXPECT(gbc.pc(), 0xed61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed60), 0x90);
        // 90 023D
        gbc.setState(0xece9, 0xcfd7, 0x1a0, 0xa325, 0xdd11, 0xa972, 0x0, 0x1);
        gbc.writeMem(0xece9, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xcfd7);
        EXPECT(gbc.pc(), 0xecea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xece9), 0x90);
        // 90 023E
        gbc.setState(0xb7c3, 0x3642, 0xc9a0, 0xdf71, 0xfef0, 0x2281, 0x0, 0x1);
        gbc.writeMem(0xb7c3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x3642);
        EXPECT(gbc.pc(), 0xb7c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7c3), 0x90);
        // 90 023F
        gbc.setState(0x4841, 0x8a18, 0x3ef0, 0x75e8, 0xcf8f, 0x4505, 0x1, 0x1);
        gbc.writeMem(0x4841, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x8a18);
        EXPECT(gbc.pc(), 0x4842);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0240
        gbc.setState(0x3211, 0xa4c6, 0x5dc0, 0x859, 0xb067, 0x838a, 0x1, 0x0);
        gbc.writeMem(0x3211, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa4c6);
        EXPECT(gbc.pc(), 0x3212);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0241
        gbc.setState(0x7e69, 0xcacf, 0x25a0, 0xc978, 0x62b2, 0x37a5, 0x0, 0x1);
        gbc.writeMem(0x7e69, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xcacf);
        EXPECT(gbc.pc(), 0x7e6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0242
        gbc.setState(0xa869, 0xf79f, 0xd050, 0x656d, 0x2ffe, 0x58f3, 0x0, 0x0);
        gbc.writeMem(0xa869, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf79f);
        EXPECT(gbc.pc(), 0xa86a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa869), 0x90);
        // 90 0243
        gbc.setState(0x1ddc, 0x76fd, 0x1860, 0x7c10, 0x9574, 0x8e6e, 0x0, 0x1);
        gbc.writeMem(0x1ddc, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x76fd);
        EXPECT(gbc.pc(), 0x1ddd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0244
        gbc.setState(0x1b95, 0xcbf9, 0x3060, 0xc09f, 0x8d99, 0x583c, 0x0, 0x1);
        gbc.writeMem(0x1b95, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xcbf9);
        EXPECT(gbc.pc(), 0x1b96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0245
        gbc.setState(0xcb5f, 0xdd4e, 0xf090, 0x5511, 0x4ae5, 0x5cfe, 0x0, 0x1);
        gbc.writeMem(0xcb5f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xdd4e);
        EXPECT(gbc.pc(), 0xcb60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb5f), 0x90);
        // 90 0246
        gbc.setState(0xeef5, 0x6d46, 0x6120, 0x9b3e, 0xd0a5, 0xcaa8, 0x1, 0x1);
        gbc.writeMem(0xeef5, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6d46);
        EXPECT(gbc.pc(), 0xeef6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeef5), 0x90);
        // 90 0247
        gbc.setState(0x6fee, 0xd8cb, 0x46e0, 0x9664, 0xc8e9, 0xf8f9, 0x1, 0x0);
        gbc.writeMem(0x6fee, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd8cb);
        EXPECT(gbc.pc(), 0x6fef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0248
        gbc.setState(0x5977, 0x761a, 0xafd0, 0xef2, 0x2ac7, 0x26fd, 0x0, 0x0);
        gbc.writeMem(0x5977, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x761a);
        EXPECT(gbc.pc(), 0x5978);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0249
        gbc.setState(0x24e, 0xe7fe, 0x2ab0, 0x186a, 0x21e8, 0x876f, 0x0, 0x0);
        gbc.writeMem(0x24e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xe7fe);
        EXPECT(gbc.pc(), 0x24f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 024B
        gbc.setState(0x4c47, 0xe18a, 0x4b60, 0x7508, 0x31b7, 0x883d, 0x1, 0x1);
        gbc.writeMem(0x4c47, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xe18a);
        EXPECT(gbc.pc(), 0x4c48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 024C
        gbc.setState(0xa185, 0x70fb, 0x4680, 0xd1f8, 0x7c49, 0xbde4, 0x0, 0x1);
        gbc.writeMem(0xa185, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x70fb);
        EXPECT(gbc.pc(), 0xa186);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa185), 0x90);
        // 90 024D
        gbc.setState(0xd255, 0xe558, 0xc060, 0x990d, 0xb339, 0xc6d0, 0x0, 0x1);
        gbc.writeMem(0xd255, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe558);
        EXPECT(gbc.pc(), 0xd256);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd255), 0x90);
        // 90 024E
        gbc.setState(0xda03, 0x8c69, 0xa000, 0x31d6, 0xab8e, 0xad55, 0x0, 0x1);
        gbc.writeMem(0xda03, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8c69);
        EXPECT(gbc.pc(), 0xda04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda03), 0x90);
        // 90 024F
        gbc.setState(0x9aaf, 0xc634, 0x61f0, 0xfeee, 0xd2c0, 0x86f5, 0x0, 0x0);
        gbc.writeMem(0x9aaf, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc634);
        EXPECT(gbc.pc(), 0x9ab0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aaf), 0x90);
        // 90 0250
        gbc.setState(0x8469, 0x7072, 0x7650, 0x7bd9, 0x74d8, 0x6705, 0x1, 0x0);
        gbc.writeMem(0x8469, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x7072);
        EXPECT(gbc.pc(), 0x846a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8469), 0x90);
        // 90 0251
        gbc.setState(0x5686, 0x190b, 0xf010, 0x4cb, 0x4a75, 0x51b3, 0x0, 0x0);
        gbc.writeMem(0x5686, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x190b);
        EXPECT(gbc.pc(), 0x5687);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0252
        gbc.setState(0xdb44, 0xee0, 0x19e0, 0x7290, 0xae2c, 0xe8e8, 0x0, 0x1);
        gbc.writeMem(0xdb44, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xee0);
        EXPECT(gbc.pc(), 0xdb45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb44), 0x90);
        // 90 0253
        gbc.setState(0xe1de, 0x3f3d, 0xcbf0, 0x5560, 0x70e4, 0x90c0, 0x1, 0x1);
        gbc.writeMem(0xe1de, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3f3d);
        EXPECT(gbc.pc(), 0xe1df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1de), 0x90);
        // 90 0254
        gbc.setState(0xb78d, 0x6c02, 0xc090, 0x74, 0x3b53, 0x5372, 0x1, 0x1);
        gbc.writeMem(0xb78d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x6c02);
        EXPECT(gbc.pc(), 0xb78e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb78d), 0x90);
        // 90 0255
        gbc.setState(0xd3ee, 0x929e, 0xa40, 0x8536, 0xed03, 0x99cb, 0x0, 0x0);
        gbc.writeMem(0xd3ee, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x929e);
        EXPECT(gbc.pc(), 0xd3ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3ee), 0x90);
        // 90 0256
        gbc.setState(0x2a62, 0x22fc, 0xb9a0, 0x30aa, 0x96cb, 0x5d1e, 0x1, 0x0);
        gbc.writeMem(0x2a62, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x22fc);
        EXPECT(gbc.pc(), 0x2a63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0257
        gbc.setState(0xbd4d, 0x6b2c, 0x4560, 0xff69, 0xdc8b, 0x6e8b, 0x0, 0x0);
        gbc.writeMem(0xbd4d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6b2c);
        EXPECT(gbc.pc(), 0xbd4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd4d), 0x90);
        // 90 0258
        gbc.setState(0x2baa, 0xd825, 0x6e50, 0xccaf, 0x120d, 0x2196, 0x1, 0x1);
        gbc.writeMem(0x2baa, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd825);
        EXPECT(gbc.pc(), 0x2bab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0259
        gbc.setState(0x74d7, 0x358d, 0x78c0, 0x7ddd, 0x6be4, 0x345c, 0x1, 0x1);
        gbc.writeMem(0x74d7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x358d);
        EXPECT(gbc.pc(), 0x74d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 025A
        gbc.setState(0x6c04, 0xe2a1, 0x2590, 0x57ca, 0xe30b, 0xf730, 0x0, 0x0);
        gbc.writeMem(0x6c04, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xe2a1);
        EXPECT(gbc.pc(), 0x6c05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 025C
        gbc.setState(0x92ea, 0x31e6, 0xb400, 0xf45, 0xbe44, 0x6c8b, 0x0, 0x1);
        gbc.writeMem(0x92ea, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x31e6);
        EXPECT(gbc.pc(), 0x92eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92ea), 0x90);
        // 90 025D
        gbc.setState(0x9eac, 0x2d67, 0xceb0, 0xbec0, 0xcd29, 0x6506, 0x1, 0x1);
        gbc.writeMem(0x9eac, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x2d67);
        EXPECT(gbc.pc(), 0x9ead);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eac), 0x90);
        // 90 025E
        gbc.setState(0x32b7, 0x13a9, 0x92e0, 0xb0ab, 0xbf43, 0x5961, 0x0, 0x0);
        gbc.writeMem(0x32b7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x13a9);
        EXPECT(gbc.pc(), 0x32b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 025F
        gbc.setState(0xa6f, 0xb089, 0x7d0, 0xddd1, 0x8689, 0xd17f, 0x1, 0x1);
        gbc.writeMem(0xa6f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb089);
        EXPECT(gbc.pc(), 0xa70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0260
        gbc.setState(0x5124, 0xe013, 0x60f0, 0xc80f, 0xfcc5, 0x274d, 0x0, 0x1);
        gbc.writeMem(0x5124, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe013);
        EXPECT(gbc.pc(), 0x5125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0261
        gbc.setState(0x594c, 0x3ae4, 0xee90, 0xa8f0, 0xa904, 0x7d39, 0x1, 0x1);
        gbc.writeMem(0x594c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3ae4);
        EXPECT(gbc.pc(), 0x594d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0262
        gbc.setState(0x518a, 0x3040, 0xe850, 0x1848, 0x51bb, 0xad9b, 0x0, 0x0);
        gbc.writeMem(0x518a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x3040);
        EXPECT(gbc.pc(), 0x518b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0263
        gbc.setState(0xe0, 0x134c, 0x150, 0x2159, 0xa3dd, 0xc8c1, 0x1, 0x1);
        gbc.writeMem(0xe0, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x134c);
        EXPECT(gbc.pc(), 0xe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0264
        gbc.setState(0xa919, 0x4197, 0x5b10, 0xf93e, 0xc558, 0xa45c, 0x0, 0x0);
        gbc.writeMem(0xa919, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x4197);
        EXPECT(gbc.pc(), 0xa91a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa919), 0x90);
        // 90 0265
        gbc.setState(0xc9c3, 0x27f, 0x3f20, 0x8968, 0x7a4d, 0xecbb, 0x1, 0x0);
        gbc.writeMem(0xc9c3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x27f);
        EXPECT(gbc.pc(), 0xc9c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9c3), 0x90);
        // 90 0267
        gbc.setState(0x903f, 0x613, 0x2920, 0x5f4c, 0xdfe5, 0xa720, 0x0, 0x0);
        gbc.writeMem(0x903f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x613);
        EXPECT(gbc.pc(), 0x9040);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x903f), 0x90);
        // 90 0268
        gbc.setState(0x5be2, 0x131f, 0xbd00, 0x90e0, 0x632a, 0x9be1, 0x1, 0x1);
        gbc.writeMem(0x5be2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x131f);
        EXPECT(gbc.pc(), 0x5be3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0269
        gbc.setState(0x10bb, 0x6f23, 0x4bb0, 0xee56, 0xd245, 0xeb9e, 0x0, 0x1);
        gbc.writeMem(0x10bb, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6f23);
        EXPECT(gbc.pc(), 0x10bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 026A
        gbc.setState(0xd604, 0xbb48, 0xeb50, 0xb060, 0xce38, 0x7793, 0x0, 0x0);
        gbc.writeMem(0xd604, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xbb48);
        EXPECT(gbc.pc(), 0xd605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd604), 0x90);
        // 90 026B
        gbc.setState(0xef51, 0x1f58, 0xca20, 0xb50f, 0xf1d7, 0x7aa2, 0x1, 0x1);
        gbc.writeMem(0xef51, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x1f58);
        EXPECT(gbc.pc(), 0xef52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef51), 0x90);
        // 90 026C
        gbc.setState(0x2d06, 0x81eb, 0xe0, 0xbb8e, 0xd2a1, 0x449c, 0x1, 0x1);
        gbc.writeMem(0x2d06, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x81eb);
        EXPECT(gbc.pc(), 0x2d07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 026D
        gbc.setState(0xcd60, 0xa50e, 0xb3c0, 0x9d12, 0x195a, 0xb836, 0x1, 0x0);
        gbc.writeMem(0xcd60, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa50e);
        EXPECT(gbc.pc(), 0xcd61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd60), 0x90);
        // 90 026E
        gbc.setState(0x6b9c, 0x6d75, 0xfaf0, 0x388c, 0x3337, 0x2204, 0x1, 0x0);
        gbc.writeMem(0x6b9c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6d75);
        EXPECT(gbc.pc(), 0x6b9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 026F
        gbc.setState(0xc59f, 0xcae3, 0xd470, 0xf80b, 0xb336, 0xd16a, 0x1, 0x0);
        gbc.writeMem(0xc59f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xcae3);
        EXPECT(gbc.pc(), 0xc5a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc59f), 0x90);
        // 90 0270
        gbc.setState(0x23fe, 0x6800, 0xe910, 0x9051, 0xc6ed, 0x8cee, 0x0, 0x0);
        gbc.writeMem(0x23fe, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x6800);
        EXPECT(gbc.pc(), 0x23ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0271
        gbc.setState(0x47a7, 0xfc47, 0x34d0, 0xf351, 0xc652, 0x1427, 0x0, 0x0);
        gbc.writeMem(0x47a7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xfc47);
        EXPECT(gbc.pc(), 0x47a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0272
        gbc.setState(0x84c3, 0x1644, 0x67d0, 0x9c14, 0xd11, 0xcda6, 0x0, 0x1);
        gbc.writeMem(0x84c3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x1644);
        EXPECT(gbc.pc(), 0x84c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84c3), 0x90);
        // 90 0273
        gbc.setState(0xa7a1, 0x9cca, 0x6220, 0x91d6, 0xe0bf, 0xb8af, 0x1, 0x1);
        gbc.writeMem(0xa7a1, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9cca);
        EXPECT(gbc.pc(), 0xa7a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7a1), 0x90);
        // 90 0275
        gbc.setState(0xa520, 0x98ad, 0x9f80, 0x81bc, 0xd8b4, 0x7d41, 0x1, 0x1);
        gbc.writeMem(0xa520, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x98ad);
        EXPECT(gbc.pc(), 0xa521);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa520), 0x90);
        // 90 0276
        gbc.setState(0x5902, 0x4b02, 0x9d00, 0x7801, 0x3bd0, 0x1694, 0x1, 0x0);
        gbc.writeMem(0x5902, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x4b02);
        EXPECT(gbc.pc(), 0x5903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0277
        gbc.setState(0x9d5d, 0x595a, 0xa5e0, 0xfe5, 0xa35e, 0x4e40, 0x0, 0x0);
        gbc.writeMem(0x9d5d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x595a);
        EXPECT(gbc.pc(), 0x9d5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d5d), 0x90);
        // 90 0278
        gbc.setState(0x4238, 0xa393, 0x7600, 0xe21a, 0x4bce, 0x137d, 0x1, 0x0);
        gbc.writeMem(0x4238, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa393);
        EXPECT(gbc.pc(), 0x4239);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0279
        gbc.setState(0xb9b3, 0x7a89, 0x9d60, 0xea8c, 0x708b, 0x6f20, 0x1, 0x0);
        gbc.writeMem(0xb9b3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7a89);
        EXPECT(gbc.pc(), 0xb9b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9b3), 0x90);
        // 90 027A
        gbc.setState(0xa278, 0x2eae, 0x7fb0, 0x9f67, 0xe4e8, 0x4bec, 0x0, 0x1);
        gbc.writeMem(0xa278, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x2eae);
        EXPECT(gbc.pc(), 0xa279);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa278), 0x90);
        // 90 027B
        gbc.setState(0xfdc, 0x6adf, 0x8f20, 0x5ea6, 0x83dd, 0x67eb, 0x1, 0x1);
        gbc.writeMem(0xfdc, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6adf);
        EXPECT(gbc.pc(), 0xfdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 027C
        gbc.setState(0xb991, 0x52a1, 0x8310, 0x1988, 0xa0c1, 0x9d04, 0x1, 0x0);
        gbc.writeMem(0xb991, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x52a1);
        EXPECT(gbc.pc(), 0xb992);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb991), 0x90);
        // 90 027E
        gbc.setState(0xb8b1, 0x3f3d, 0x8730, 0x1117, 0x5b4d, 0xbf10, 0x0, 0x1);
        gbc.writeMem(0xb8b1, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x3f3d);
        EXPECT(gbc.pc(), 0xb8b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8b1), 0x90);
        // 90 027F
        gbc.setState(0x1370, 0x3385, 0x5490, 0xf237, 0x8f98, 0x129e, 0x0, 0x1);
        gbc.writeMem(0x1370, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3385);
        EXPECT(gbc.pc(), 0x1371);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0280
        gbc.setState(0x8418, 0x258a, 0x13d0, 0x9751, 0xcc63, 0x450b, 0x0, 0x1);
        gbc.writeMem(0x8418, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x258a);
        EXPECT(gbc.pc(), 0x8419);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8418), 0x90);
        // 90 0281
        gbc.setState(0xc74a, 0xb065, 0x3c0, 0xf3a2, 0xb189, 0x583c, 0x1, 0x1);
        gbc.writeMem(0xc74a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb065);
        EXPECT(gbc.pc(), 0xc74b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc74a), 0x90);
        // 90 0282
        gbc.setState(0x2e9c, 0x315e, 0xbf90, 0x6147, 0x6227, 0x1690, 0x0, 0x1);
        gbc.writeMem(0x2e9c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x315e);
        EXPECT(gbc.pc(), 0x2e9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0283
        gbc.setState(0x43d2, 0x2d78, 0x6240, 0x47ac, 0x6f97, 0xc59, 0x1, 0x0);
        gbc.writeMem(0x43d2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x2d78);
        EXPECT(gbc.pc(), 0x43d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0284
        gbc.setState(0x5969, 0xc17a, 0x820, 0xf4f2, 0x5561, 0xc3e7, 0x1, 0x0);
        gbc.writeMem(0x5969, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc17a);
        EXPECT(gbc.pc(), 0x596a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0285
        gbc.setState(0x8f8e, 0xa45a, 0xe580, 0x77e0, 0x832f, 0x8fd2, 0x1, 0x1);
        gbc.writeMem(0x8f8e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa45a);
        EXPECT(gbc.pc(), 0x8f8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f8e), 0x90);
        // 90 0286
        gbc.setState(0xae26, 0xfefc, 0x8450, 0x5e3c, 0xdba9, 0x488a, 0x1, 0x1);
        gbc.writeMem(0xae26, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xfefc);
        EXPECT(gbc.pc(), 0xae27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae26), 0x90);
        // 90 0287
        gbc.setState(0x6a0e, 0x3e99, 0x46c0, 0xc7c9, 0x5996, 0x7bde, 0x1, 0x1);
        gbc.writeMem(0x6a0e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3e99);
        EXPECT(gbc.pc(), 0x6a0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0288
        gbc.setState(0x64c4, 0xc662, 0xb0d0, 0xb8a4, 0x14a5, 0xb162, 0x0, 0x0);
        gbc.writeMem(0x64c4, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xc662);
        EXPECT(gbc.pc(), 0x64c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0289
        gbc.setState(0xd783, 0x812e, 0x310, 0x14d3, 0xc45a, 0xd80, 0x0, 0x1);
        gbc.writeMem(0xd783, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x812e);
        EXPECT(gbc.pc(), 0xd784);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd783), 0x90);
        // 90 028A
        gbc.setState(0x526c, 0xbec2, 0x7c00, 0x12ff, 0x527e, 0x8ff4, 0x0, 0x1);
        gbc.writeMem(0x526c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xbec2);
        EXPECT(gbc.pc(), 0x526d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 028C
        gbc.setState(0xda9, 0xc0fc, 0xafd0, 0x3810, 0x35ef, 0xfb7, 0x1, 0x0);
        gbc.writeMem(0xda9, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc0fc);
        EXPECT(gbc.pc(), 0xdaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 028D
        gbc.setState(0xa26f, 0x4439, 0x9070, 0x3082, 0x7690, 0x32d9, 0x1, 0x1);
        gbc.writeMem(0xa26f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4439);
        EXPECT(gbc.pc(), 0xa270);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa26f), 0x90);
        // 90 028E
        gbc.setState(0x1df7, 0x4319, 0x1b30, 0x276b, 0xba8, 0x83b9, 0x1, 0x0);
        gbc.writeMem(0x1df7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x4319);
        EXPECT(gbc.pc(), 0x1df8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 028F
        gbc.setState(0xc09b, 0x3b36, 0x8a70, 0x765e, 0x7158, 0xa789, 0x1, 0x1);
        gbc.writeMem(0xc09b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3b36);
        EXPECT(gbc.pc(), 0xc09c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc09b), 0x90);
        // 90 0290
        gbc.setState(0xa84b, 0x8668, 0xbef0, 0x28dc, 0x782a, 0x6676, 0x0, 0x0);
        gbc.writeMem(0xa84b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8668);
        EXPECT(gbc.pc(), 0xa84c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa84b), 0x90);
        // 90 0291
        gbc.setState(0xb111, 0x78cc, 0x1880, 0x496f, 0xb341, 0xaceb, 0x0, 0x1);
        gbc.writeMem(0xb111, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x78cc);
        EXPECT(gbc.pc(), 0xb112);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb111), 0x90);
        // 90 0292
        gbc.setState(0x6fa0, 0x8307, 0xae30, 0xe8b7, 0xf84c, 0xee34, 0x1, 0x0);
        gbc.writeMem(0x6fa0, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x8307);
        EXPECT(gbc.pc(), 0x6fa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0293
        gbc.setState(0x646d, 0x5db9, 0x5b70, 0x69b1, 0xcfc1, 0x9f1e, 0x0, 0x1);
        gbc.writeMem(0x646d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5db9);
        EXPECT(gbc.pc(), 0x646e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0294
        gbc.setState(0x2619, 0x568d, 0xd3b0, 0xa9ca, 0xa149, 0xbf86, 0x1, 0x1);
        gbc.writeMem(0x2619, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x568d);
        EXPECT(gbc.pc(), 0x261a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0296
        gbc.setState(0xd9a6, 0x4106, 0xfff0, 0xd5f8, 0x3537, 0xfae2, 0x0, 0x0);
        gbc.writeMem(0xd9a6, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x4106);
        EXPECT(gbc.pc(), 0xd9a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9a6), 0x90);
        // 90 0297
        gbc.setState(0xe793, 0x72a5, 0x24f0, 0x56c3, 0x9151, 0xcd86, 0x0, 0x0);
        gbc.writeMem(0xe793, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x72a5);
        EXPECT(gbc.pc(), 0xe794);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe793), 0x90);
        // 90 0298
        gbc.setState(0xcb2c, 0xb7a3, 0x3650, 0xc0af, 0xba10, 0x63df, 0x1, 0x1);
        gbc.writeMem(0xcb2c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xb7a3);
        EXPECT(gbc.pc(), 0xcb2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb2c), 0x90);
        // 90 0299
        gbc.setState(0x6080, 0xfe45, 0xe620, 0xa26c, 0xf0c8, 0xb004, 0x0, 0x0);
        gbc.writeMem(0x6080, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xfe45);
        EXPECT(gbc.pc(), 0x6081);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 029A
        gbc.setState(0xae9d, 0x97ce, 0x2a00, 0xe91f, 0x1a01, 0x345f, 0x0, 0x0);
        gbc.writeMem(0xae9d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x97ce);
        EXPECT(gbc.pc(), 0xae9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae9d), 0x90);
        // 90 029B
        gbc.setState(0xd600, 0xea77, 0x6910, 0x7a9c, 0x1246, 0xa360, 0x1, 0x1);
        gbc.writeMem(0xd600, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xea77);
        EXPECT(gbc.pc(), 0xd601);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd600), 0x90);
        // 90 029C
        gbc.setState(0x39e2, 0x586a, 0xe50, 0xaafb, 0x2633, 0x8bc4, 0x0, 0x1);
        gbc.writeMem(0x39e2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x586a);
        EXPECT(gbc.pc(), 0x39e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 029D
        gbc.setState(0x120e, 0x667d, 0xb660, 0x2fcd, 0xf2e0, 0xfea0, 0x0, 0x0);
        gbc.writeMem(0x120e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x667d);
        EXPECT(gbc.pc(), 0x120f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 029E
        gbc.setState(0x25c7, 0x18bd, 0x1c80, 0xfde4, 0x460b, 0xc71d, 0x1, 0x1);
        gbc.writeMem(0x25c7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x18bd);
        EXPECT(gbc.pc(), 0x25c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 029F
        gbc.setState(0x3c4c, 0x43c3, 0xc210, 0x746d, 0x60be, 0x7951, 0x1, 0x1);
        gbc.writeMem(0x3c4c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x43c3);
        EXPECT(gbc.pc(), 0x3c4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 02A0
        gbc.setState(0xbe4, 0x50e8, 0x32a0, 0xb7bd, 0x4c38, 0x60db, 0x1, 0x1);
        gbc.writeMem(0xbe4, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x50e8);
        EXPECT(gbc.pc(), 0xbe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 02A1
        gbc.setState(0xccd6, 0x14b6, 0xa140, 0x3360, 0xc306, 0x5c68, 0x0, 0x1);
        gbc.writeMem(0xccd6, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x14b6);
        EXPECT(gbc.pc(), 0xccd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccd6), 0x90);
        // 90 02A2
        gbc.setState(0x37bf, 0x1660, 0xe6b0, 0x969, 0xe33b, 0x87ec, 0x0, 0x1);
        gbc.writeMem(0x37bf, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1660);
        EXPECT(gbc.pc(), 0x37c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 02A4
        gbc.setState(0x5d5a, 0x436e, 0xc8f0, 0x32ad, 0xefc8, 0x810, 0x0, 0x1);
        gbc.writeMem(0x5d5a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x436e);
        EXPECT(gbc.pc(), 0x5d5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 02A5
        gbc.setState(0x7302, 0x746e, 0x6ea0, 0x86d9, 0xabb4, 0x1f8e, 0x1, 0x0);
        gbc.writeMem(0x7302, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x746e);
        EXPECT(gbc.pc(), 0x7303);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 02A6
        gbc.setState(0x1272, 0x53ac, 0x70e0, 0x8404, 0x600a, 0x9214, 0x1, 0x1);
        gbc.writeMem(0x1272, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x53ac);
        EXPECT(gbc.pc(), 0x1273);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 02A7
        gbc.setState(0xda43, 0xe3f2, 0x9360, 0x5dca, 0x8071, 0x66c1, 0x0, 0x1);
        gbc.writeMem(0xda43, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe3f2);
        EXPECT(gbc.pc(), 0xda44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda43), 0x90);
        // 90 02A8
        gbc.setState(0x7a5, 0x57d7, 0x6f60, 0xb7a5, 0x2022, 0x7c7d, 0x1, 0x0);
        gbc.writeMem(0x7a5, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x57d7);
        EXPECT(gbc.pc(), 0x7a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 02A9
        gbc.setState(0x9248, 0xfac0, 0x6390, 0x6f9d, 0xa9a0, 0xf7f3, 0x1, 0x0);
        gbc.writeMem(0x9248, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xfac0);
        EXPECT(gbc.pc(), 0x9249);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9248), 0x90);
        // 90 02AA
        gbc.setState(0x4587, 0x7b70, 0x4520, 0xd243, 0x49b6, 0x7a2c, 0x1, 0x0);
        gbc.writeMem(0x4587, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7b70);
        EXPECT(gbc.pc(), 0x4588);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 02AB
        gbc.setState(0xaceb, 0xa375, 0xbfe0, 0x9186, 0x1f71, 0x7ccc, 0x0, 0x0);
        gbc.writeMem(0xaceb, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xa375);
        EXPECT(gbc.pc(), 0xacec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaceb), 0x90);
        // 90 02AC
        gbc.setState(0x73cc, 0x9722, 0xf930, 0xe517, 0x5298, 0xb582, 0x1, 0x1);
        gbc.writeMem(0x73cc, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9722);
        EXPECT(gbc.pc(), 0x73cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 02AD
        gbc.setState(0xafd2, 0xaa2b, 0x6d0, 0x7bb1, 0x860f, 0xabe8, 0x0, 0x0);
        gbc.writeMem(0xafd2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xaa2b);
        EXPECT(gbc.pc(), 0xafd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafd2), 0x90);
        // 90 02AE
        gbc.setState(0x7216, 0xb521, 0x7ee0, 0xca6f, 0x9b6d, 0xa021, 0x1, 0x1);
        gbc.writeMem(0x7216, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xb521);
        EXPECT(gbc.pc(), 0x7217);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 02AF
        gbc.setState(0xec04, 0xf515, 0x2a90, 0xc9d5, 0x7661, 0xd768, 0x0, 0x0);
        gbc.writeMem(0xec04, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf515);
        EXPECT(gbc.pc(), 0xec05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec04), 0x90);
        // 90 02B0
        gbc.setState(0xb81c, 0x75ea, 0xf530, 0x2dd7, 0xee86, 0xd6e9, 0x0, 0x0);
        gbc.writeMem(0xb81c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x75ea);
        EXPECT(gbc.pc(), 0xb81d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb81c), 0x90);
        // 90 02B1
        gbc.setState(0x229b, 0x1241, 0xa850, 0x2926, 0x21ad, 0x3eb9, 0x1, 0x0);
        gbc.writeMem(0x229b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1241);
        EXPECT(gbc.pc(), 0x229c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 02B2
        gbc.setState(0x5e86, 0x6a42, 0x7c0, 0x40f2, 0x1e59, 0x2bd5, 0x1, 0x1);
        gbc.writeMem(0x5e86, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x6a42);
        EXPECT(gbc.pc(), 0x5e87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 02B3
        gbc.setState(0x98a0, 0xbf88, 0xf0f0, 0x7a79, 0xf93a, 0x1f52, 0x1, 0x0);
        gbc.writeMem(0x98a0, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xbf88);
        EXPECT(gbc.pc(), 0x98a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98a0), 0x90);
        // 90 02B4
        gbc.setState(0x844, 0x7a81, 0x6cd0, 0xe4e6, 0x4f73, 0xa9be, 0x1, 0x0);
        gbc.writeMem(0x844, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7a81);
        EXPECT(gbc.pc(), 0x845);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 02B5
        gbc.setState(0x1129, 0x3706, 0xcda0, 0x44a4, 0x7fab, 0x302a, 0x0, 0x0);
        gbc.writeMem(0x1129, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x3706);
        EXPECT(gbc.pc(), 0x112a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 02B6
        gbc.setState(0x20d9, 0xa24d, 0xe550, 0xedc0, 0x347d, 0xdd08, 0x0, 0x0);
        gbc.writeMem(0x20d9, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xa24d);
        EXPECT(gbc.pc(), 0x20da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 02B7
        gbc.setState(0x8124, 0x4395, 0xe820, 0x8108, 0x7f63, 0xd164, 0x0, 0x1);
        gbc.writeMem(0x8124, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x4395);
        EXPECT(gbc.pc(), 0x8125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8124), 0x90);
        // 90 02B8
        gbc.setState(0x2ce2, 0xa6e1, 0x9310, 0x4454, 0xaff2, 0xe379, 0x0, 0x1);
        gbc.writeMem(0x2ce2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa6e1);
        EXPECT(gbc.pc(), 0x2ce3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 02B9
        gbc.setState(0x1d7d, 0x52d, 0x4e20, 0x1b14, 0xf685, 0x4c45, 0x0, 0x0);
        gbc.writeMem(0x1d7d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x52d);
        EXPECT(gbc.pc(), 0x1d7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 02BA
        gbc.setState(0xb7d1, 0xeca7, 0x79c0, 0x1b2e, 0x7c8c, 0x4253, 0x1, 0x0);
        gbc.writeMem(0xb7d1, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xeca7);
        EXPECT(gbc.pc(), 0xb7d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7d1), 0x90);
        // 90 02BB
        gbc.setState(0x181e, 0x3e39, 0xa370, 0xaf97, 0x8b8e, 0xd1bc, 0x1, 0x0);
        gbc.writeMem(0x181e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x3e39);
        EXPECT(gbc.pc(), 0x181f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 02BC
        gbc.setState(0x709b, 0xceaa, 0x5e0, 0x2315, 0x5967, 0xb4ec, 0x1, 0x0);
        gbc.writeMem(0x709b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xceaa);
        EXPECT(gbc.pc(), 0x709c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 02BD
        gbc.setState(0xea90, 0xe73c, 0xbb10, 0x931d, 0x951f, 0x7643, 0x0, 0x0);
        gbc.writeMem(0xea90, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe73c);
        EXPECT(gbc.pc(), 0xea91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea90), 0x90);
        // 90 02BE
        gbc.setState(0x27ed, 0x7b, 0xe8b0, 0xd292, 0x3b21, 0x77c3, 0x0, 0x0);
        gbc.writeMem(0x27ed, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x7b);
        EXPECT(gbc.pc(), 0x27ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 02BF
        gbc.setState(0x2c3e, 0x1d2e, 0xdee0, 0x8f39, 0x6695, 0xaf4b, 0x0, 0x0);
        gbc.writeMem(0x2c3e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1d2e);
        EXPECT(gbc.pc(), 0x2c3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 02C0
        gbc.setState(0x48fb, 0xda95, 0x6c0, 0x5c86, 0xbbd, 0xcb20, 0x1, 0x0);
        gbc.writeMem(0x48fb, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xda95);
        EXPECT(gbc.pc(), 0x48fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 02C1
        gbc.setState(0x9fc5, 0xc2de, 0x3580, 0x3c53, 0xf32c, 0xd61c, 0x0, 0x1);
        gbc.writeMem(0x9fc5, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc2de);
        EXPECT(gbc.pc(), 0x9fc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fc5), 0x90);
        // 90 02C2
        gbc.setState(0x7cb2, 0x67ad, 0xec80, 0xbecf, 0xb69e, 0x5c98, 0x1, 0x1);
        gbc.writeMem(0x7cb2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x67ad);
        EXPECT(gbc.pc(), 0x7cb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 02C3
        gbc.setState(0x2afe, 0xb7e, 0x7240, 0x9607, 0x9b0d, 0x4306, 0x1, 0x0);
        gbc.writeMem(0x2afe, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb7e);
        EXPECT(gbc.pc(), 0x2aff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 02C4
        gbc.setState(0x9f6b, 0x9829, 0xa8b0, 0xf1b2, 0xe8aa, 0x409f, 0x0, 0x0);
        gbc.writeMem(0x9f6b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x9829);
        EXPECT(gbc.pc(), 0x9f6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f6b), 0x90);
        // 90 02C5
        gbc.setState(0x8900, 0x818f, 0x8060, 0x8dc0, 0x6743, 0x437f, 0x1, 0x0);
        gbc.writeMem(0x8900, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x818f);
        EXPECT(gbc.pc(), 0x8901);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8900), 0x90);
        // 90 02C6
        gbc.setState(0x1031, 0xdad9, 0xfa0, 0x6331, 0x55d1, 0x9279, 0x1, 0x0);
        gbc.writeMem(0x1031, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xdad9);
        EXPECT(gbc.pc(), 0x1032);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 02C7
        gbc.setState(0x9c28, 0xd648, 0x79b0, 0xfef6, 0x3527, 0x39f2, 0x1, 0x1);
        gbc.writeMem(0x9c28, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd648);
        EXPECT(gbc.pc(), 0x9c29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c28), 0x90);
        // 90 02C8
        gbc.setState(0xd65e, 0xc750, 0x4c20, 0xcbbf, 0x95dc, 0x38f9, 0x0, 0x1);
        gbc.writeMem(0xd65e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc750);
        EXPECT(gbc.pc(), 0xd65f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd65e), 0x90);
        // 90 02C9
        gbc.setState(0xc95f, 0xf2df, 0xf1a0, 0x5cf6, 0xc292, 0x5dfe, 0x1, 0x1);
        gbc.writeMem(0xc95f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xf2df);
        EXPECT(gbc.pc(), 0xc960);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc95f), 0x90);
        // 90 02CA
        gbc.setState(0x3fae, 0xcd03, 0x26c0, 0x1d55, 0x926b, 0x6911, 0x0, 0x0);
        gbc.writeMem(0x3fae, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xcd03);
        EXPECT(gbc.pc(), 0x3faf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 02CB
        gbc.setState(0x38c4, 0x1ca8, 0x9c10, 0xd86e, 0xee87, 0x2d7a, 0x0, 0x0);
        gbc.writeMem(0x38c4, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x1ca8);
        EXPECT(gbc.pc(), 0x38c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 02CC
        gbc.setState(0xb963, 0x1b66, 0xeb60, 0x4ba2, 0x3a5a, 0xaa69, 0x0, 0x0);
        gbc.writeMem(0xb963, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1b66);
        EXPECT(gbc.pc(), 0xb964);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb963), 0x90);
        // 90 02CD
        gbc.setState(0x2443, 0x3119, 0xf360, 0xc2f3, 0x5fc6, 0x2c1a, 0x1, 0x1);
        gbc.writeMem(0x2443, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3119);
        EXPECT(gbc.pc(), 0x2444);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 02CE
        gbc.setState(0x30ce, 0x2ef9, 0x40e0, 0x2b67, 0x4a4a, 0x83d1, 0x0, 0x0);
        gbc.writeMem(0x30ce, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x2ef9);
        EXPECT(gbc.pc(), 0x30cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 02CF
        gbc.setState(0x1146, 0x4b83, 0xb3d0, 0xb49c, 0xe0d5, 0xd545, 0x1, 0x1);
        gbc.writeMem(0x1146, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x4b83);
        EXPECT(gbc.pc(), 0x1147);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 02D0
        gbc.setState(0x77d6, 0xf1dc, 0x51c0, 0x48e6, 0x2397, 0xae96, 0x0, 0x1);
        gbc.writeMem(0x77d6, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf1dc);
        EXPECT(gbc.pc(), 0x77d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 02D1
        gbc.setState(0xcd00, 0x9a72, 0x3430, 0x61e1, 0x39f5, 0x3eff, 0x0, 0x0);
        gbc.writeMem(0xcd00, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x9a72);
        EXPECT(gbc.pc(), 0xcd01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd00), 0x90);
        // 90 02D2
        gbc.setState(0xd77c, 0xbb59, 0xbf20, 0x1064, 0x1cb4, 0x7da4, 0x0, 0x0);
        gbc.writeMem(0xd77c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xbb59);
        EXPECT(gbc.pc(), 0xd77d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd77c), 0x90);
        // 90 02D3
        gbc.setState(0x4680, 0xd14b, 0x2990, 0x87d1, 0xfa22, 0x99e1, 0x0, 0x1);
        gbc.writeMem(0x4680, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd14b);
        EXPECT(gbc.pc(), 0x4681);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 02D4
        gbc.setState(0xcf8e, 0xa3f0, 0xc340, 0x9045, 0xebbd, 0x15f7, 0x0, 0x1);
        gbc.writeMem(0xcf8e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xa3f0);
        EXPECT(gbc.pc(), 0xcf8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf8e), 0x90);
        // 90 02D5
        gbc.setState(0x183, 0xc7bb, 0x3510, 0x1832, 0x4374, 0x4fa1, 0x1, 0x1);
        gbc.writeMem(0x183, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xc7bb);
        EXPECT(gbc.pc(), 0x184);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 02D6
        gbc.setState(0x27ea, 0x336b, 0xde60, 0xe0ac, 0x5263, 0xca0c, 0x1, 0x0);
        gbc.writeMem(0x27ea, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x336b);
        EXPECT(gbc.pc(), 0x27eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 02D7
        gbc.setState(0xd8f1, 0x2ba2, 0x5d10, 0xd81c, 0xaf4, 0xc1f1, 0x0, 0x1);
        gbc.writeMem(0xd8f1, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x2ba2);
        EXPECT(gbc.pc(), 0xd8f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8f1), 0x90);
        // 90 02D8
        gbc.setState(0xd7e6, 0x8daa, 0xf4c0, 0xd111, 0x9ae1, 0x37c2, 0x0, 0x1);
        gbc.writeMem(0xd7e6, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8daa);
        EXPECT(gbc.pc(), 0xd7e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7e6), 0x90);
        // 90 02DA
        gbc.setState(0xb767, 0x2e35, 0xa800, 0x3030, 0x7d71, 0x38fc, 0x0, 0x1);
        gbc.writeMem(0xb767, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2e35);
        EXPECT(gbc.pc(), 0xb768);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb767), 0x90);
        // 90 02DB
        gbc.setState(0x2089, 0x4313, 0xdb20, 0x9a6e, 0x7f1c, 0xed93, 0x1, 0x1);
        gbc.writeMem(0x2089, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x4313);
        EXPECT(gbc.pc(), 0x208a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 02DC
        gbc.setState(0x7e4f, 0x2a80, 0x8cc0, 0xabc7, 0xad3b, 0x710f, 0x0, 0x0);
        gbc.writeMem(0x7e4f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x2a80);
        EXPECT(gbc.pc(), 0x7e50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 02DD
        gbc.setState(0x281f, 0x75fb, 0x2e10, 0xf1b0, 0x310b, 0xaeff, 0x1, 0x1);
        gbc.writeMem(0x281f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x75fb);
        EXPECT(gbc.pc(), 0x2820);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 02DE
        gbc.setState(0x5143, 0x71c9, 0x2400, 0x6cd0, 0xff1, 0xbc9b, 0x1, 0x1);
        gbc.writeMem(0x5143, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x71c9);
        EXPECT(gbc.pc(), 0x5144);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 02DF
        gbc.setState(0x11f0, 0x19a6, 0x6320, 0x1176, 0x42fc, 0x67b0, 0x1, 0x1);
        gbc.writeMem(0x11f0, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x19a6);
        EXPECT(gbc.pc(), 0x11f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 02E0
        gbc.setState(0x9797, 0x180a, 0x66d0, 0x4129, 0x305b, 0xb300, 0x1, 0x0);
        gbc.writeMem(0x9797, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x180a);
        EXPECT(gbc.pc(), 0x9798);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9797), 0x90);
        // 90 02E2
        gbc.setState(0x7abf, 0xcd3e, 0xf520, 0x4cb, 0xa30e, 0x3e1a, 0x1, 0x1);
        gbc.writeMem(0x7abf, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xcd3e);
        EXPECT(gbc.pc(), 0x7ac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 02E3
        gbc.setState(0x9e1b, 0x116c, 0x6cc0, 0x86d2, 0x244a, 0x830d, 0x1, 0x0);
        gbc.writeMem(0x9e1b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x116c);
        EXPECT(gbc.pc(), 0x9e1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e1b), 0x90);
        // 90 02E4
        gbc.setState(0x1547, 0x8424, 0xb420, 0xd910, 0x69bb, 0x51c7, 0x1, 0x1);
        gbc.writeMem(0x1547, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8424);
        EXPECT(gbc.pc(), 0x1548);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 02E5
        gbc.setState(0xe517, 0x981a, 0x2a80, 0x38b2, 0x161c, 0x77a7, 0x1, 0x1);
        gbc.writeMem(0xe517, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x981a);
        EXPECT(gbc.pc(), 0xe518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe517), 0x90);
        // 90 02E6
        gbc.setState(0xba12, 0xb356, 0xbb20, 0xd69e, 0x8331, 0x3082, 0x0, 0x1);
        gbc.writeMem(0xba12, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xb356);
        EXPECT(gbc.pc(), 0xba13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba12), 0x90);
        // 90 02E7
        gbc.setState(0xdba7, 0xd633, 0xaaf0, 0x4f67, 0xdade, 0x2073, 0x0, 0x0);
        gbc.writeMem(0xdba7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd633);
        EXPECT(gbc.pc(), 0xdba8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdba7), 0x90);
        // 90 02E8
        gbc.setState(0x4171, 0xd293, 0x3e00, 0x402b, 0xe6eb, 0xe727, 0x0, 0x0);
        gbc.writeMem(0x4171, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xd293);
        EXPECT(gbc.pc(), 0x4172);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 02E9
        gbc.setState(0xc0c2, 0x5130, 0xf8e0, 0x3269, 0x4cc0, 0x59cc, 0x0, 0x1);
        gbc.writeMem(0xc0c2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x5130);
        EXPECT(gbc.pc(), 0xc0c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0c2), 0x90);
        // 90 02EA
        gbc.setState(0x9694, 0x2e83, 0xdcf0, 0xc44e, 0xf36e, 0x53b7, 0x0, 0x1);
        gbc.writeMem(0x9694, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2e83);
        EXPECT(gbc.pc(), 0x9695);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9694), 0x90);
        // 90 02EB
        gbc.setState(0x2cc1, 0xe098, 0xef60, 0x306f, 0x469f, 0xe7a1, 0x1, 0x1);
        gbc.writeMem(0x2cc1, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe098);
        EXPECT(gbc.pc(), 0x2cc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 02EC
        gbc.setState(0x49b8, 0x8a73, 0x7060, 0x8572, 0xa024, 0xb5bb, 0x1, 0x1);
        gbc.writeMem(0x49b8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x8a73);
        EXPECT(gbc.pc(), 0x49b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 02EE
        gbc.setState(0x9e02, 0xfffc, 0xb5b0, 0x9fa1, 0x10a8, 0xda25, 0x0, 0x0);
        gbc.writeMem(0x9e02, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xfffc);
        EXPECT(gbc.pc(), 0x9e03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e02), 0x90);
        // 90 02EF
        gbc.setState(0x9ec, 0xf496, 0xfeb0, 0xdab4, 0xd70f, 0x873d, 0x1, 0x0);
        gbc.writeMem(0x9ec, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf496);
        EXPECT(gbc.pc(), 0x9ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 02F1
        gbc.setState(0x5ec6, 0xc75b, 0x6f50, 0x14ca, 0xd940, 0x7c96, 0x0, 0x1);
        gbc.writeMem(0x5ec6, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc75b);
        EXPECT(gbc.pc(), 0x5ec7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 02F2
        gbc.setState(0xe536, 0xacee, 0x7f00, 0x1075, 0xaa44, 0x94d8, 0x1, 0x0);
        gbc.writeMem(0xe536, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xacee);
        EXPECT(gbc.pc(), 0xe537);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe536), 0x90);
        // 90 02F3
        gbc.setState(0xa29b, 0x6499, 0xa830, 0x96ef, 0x9de4, 0xbc07, 0x0, 0x1);
        gbc.writeMem(0xa29b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6499);
        EXPECT(gbc.pc(), 0xa29c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa29b), 0x90);
        // 90 02F4
        gbc.setState(0xaa3c, 0x6728, 0x30b0, 0x6858, 0x9124, 0xef15, 0x0, 0x1);
        gbc.writeMem(0xaa3c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6728);
        EXPECT(gbc.pc(), 0xaa3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa3c), 0x90);
        // 90 02F5
        gbc.setState(0xa5b6, 0x76f7, 0x1db0, 0x931e, 0xef3c, 0xd433, 0x1, 0x0);
        gbc.writeMem(0xa5b6, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x76f7);
        EXPECT(gbc.pc(), 0xa5b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5b6), 0x90);
        // 90 02F6
        gbc.setState(0xd122, 0xccc7, 0xd8b0, 0xf6c4, 0x6b43, 0xc9de, 0x0, 0x1);
        gbc.writeMem(0xd122, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xccc7);
        EXPECT(gbc.pc(), 0xd123);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd122), 0x90);
        // 90 02F7
        gbc.setState(0x795e, 0x6fbe, 0x4d20, 0xdf19, 0xa2ae, 0x6c4b, 0x0, 0x1);
        gbc.writeMem(0x795e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x6fbe);
        EXPECT(gbc.pc(), 0x795f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 02F8
        gbc.setState(0x6c71, 0x8eb8, 0x9720, 0x4e9b, 0xdd72, 0xbc4f, 0x1, 0x1);
        gbc.writeMem(0x6c71, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x8eb8);
        EXPECT(gbc.pc(), 0x6c72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 02F9
        gbc.setState(0x4238, 0x8559, 0x1d90, 0xba6f, 0xd8c1, 0x3d6a, 0x1, 0x0);
        gbc.writeMem(0x4238, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x8559);
        EXPECT(gbc.pc(), 0x4239);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 02FA
        gbc.setState(0xcbef, 0x89bb, 0xee60, 0x8b, 0x64a0, 0xb739, 0x1, 0x0);
        gbc.writeMem(0xcbef, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x89bb);
        EXPECT(gbc.pc(), 0xcbf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbef), 0x90);
        // 90 02FB
        gbc.setState(0xaf52, 0x9eec, 0xee0, 0x975c, 0x35c9, 0xc569, 0x0, 0x1);
        gbc.writeMem(0xaf52, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x9eec);
        EXPECT(gbc.pc(), 0xaf53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf52), 0x90);
        // 90 02FC
        gbc.setState(0xdfc7, 0x3b8a, 0xbf0, 0xced7, 0x5583, 0x7e6b, 0x0, 0x1);
        gbc.writeMem(0xdfc7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3b8a);
        EXPECT(gbc.pc(), 0xdfc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfc7), 0x90);
        // 90 02FD
        gbc.setState(0x2b76, 0x8454, 0x1720, 0x3125, 0x9a7c, 0xcbfa, 0x0, 0x1);
        gbc.writeMem(0x2b76, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8454);
        EXPECT(gbc.pc(), 0x2b77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 02FE
        gbc.setState(0xbf5f, 0x3e62, 0xb160, 0xe73a, 0x5edc, 0x203, 0x0, 0x0);
        gbc.writeMem(0xbf5f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x3e62);
        EXPECT(gbc.pc(), 0xbf60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf5f), 0x90);
        // 90 02FF
        gbc.setState(0x1617, 0x4698, 0x5f0, 0x9623, 0xd3d2, 0xcb0d, 0x0, 0x0);
        gbc.writeMem(0x1617, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x4698);
        EXPECT(gbc.pc(), 0x1618);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0300
        gbc.setState(0x1bfa, 0xcd33, 0x8500, 0xb10f, 0xed03, 0x90b7, 0x0, 0x0);
        gbc.writeMem(0x1bfa, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xcd33);
        EXPECT(gbc.pc(), 0x1bfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0301
        gbc.setState(0x4bc3, 0x3892, 0x15c0, 0x5591, 0x2176, 0x26e4, 0x1, 0x1);
        gbc.writeMem(0x4bc3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3892);
        EXPECT(gbc.pc(), 0x4bc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0302
        gbc.setState(0xc9f5, 0xd85e, 0xd0c0, 0x1ca5, 0xde35, 0x74e8, 0x0, 0x0);
        gbc.writeMem(0xc9f5, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd85e);
        EXPECT(gbc.pc(), 0xc9f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9f5), 0x90);
        // 90 0303
        gbc.setState(0x56b0, 0x68c0, 0xca50, 0x3b3d, 0x1c3a, 0x8774, 0x0, 0x1);
        gbc.writeMem(0x56b0, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x68c0);
        EXPECT(gbc.pc(), 0x56b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0304
        gbc.setState(0x519e, 0x42b2, 0x2cf0, 0xfe25, 0x5506, 0x5386, 0x1, 0x0);
        gbc.writeMem(0x519e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x42b2);
        EXPECT(gbc.pc(), 0x519f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0305
        gbc.setState(0x2ed3, 0x7510, 0xd8a0, 0x724b, 0xb0ff, 0xb9fc, 0x0, 0x0);
        gbc.writeMem(0x2ed3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7510);
        EXPECT(gbc.pc(), 0x2ed4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0306
        gbc.setState(0x5c8, 0xebcf, 0x9950, 0xe382, 0xe825, 0x6e2f, 0x1, 0x0);
        gbc.writeMem(0x5c8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xebcf);
        EXPECT(gbc.pc(), 0x5c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0307
        gbc.setState(0x7d7e, 0x83d6, 0x9d10, 0x7f8b, 0x4b83, 0xfe51, 0x1, 0x0);
        gbc.writeMem(0x7d7e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x83d6);
        EXPECT(gbc.pc(), 0x7d7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0308
        gbc.setState(0xebed, 0x9053, 0x1f60, 0x704c, 0x29ed, 0xc2e4, 0x0, 0x1);
        gbc.writeMem(0xebed, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9053);
        EXPECT(gbc.pc(), 0xebee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebed), 0x90);
        // 90 0309
        gbc.setState(0x10ca, 0x3d0d, 0x9e00, 0x1e93, 0x674c, 0x7029, 0x0, 0x1);
        gbc.writeMem(0x10ca, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3d0d);
        EXPECT(gbc.pc(), 0x10cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 030A
        gbc.setState(0xda9d, 0xd7f8, 0xa750, 0x17ee, 0x4b35, 0xf976, 0x0, 0x1);
        gbc.writeMem(0xda9d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd7f8);
        EXPECT(gbc.pc(), 0xda9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda9d), 0x90);
        // 90 030B
        gbc.setState(0x6458, 0x84e1, 0x3310, 0x3f68, 0x65e1, 0xcee4, 0x1, 0x0);
        gbc.writeMem(0x6458, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x84e1);
        EXPECT(gbc.pc(), 0x6459);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 030C
        gbc.setState(0x6678, 0xb542, 0xd7a0, 0x8a54, 0xd84b, 0xbdff, 0x1, 0x0);
        gbc.writeMem(0x6678, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xb542);
        EXPECT(gbc.pc(), 0x6679);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 030D
        gbc.setState(0x355f, 0x7863, 0x6b0, 0x6e0f, 0x798b, 0xfd2, 0x1, 0x1);
        gbc.writeMem(0x355f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7863);
        EXPECT(gbc.pc(), 0x3560);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 030F
        gbc.setState(0xa462, 0x819, 0x9640, 0x74b4, 0xc358, 0xc8d2, 0x1, 0x1);
        gbc.writeMem(0xa462, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x819);
        EXPECT(gbc.pc(), 0xa463);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa462), 0x90);
        // 90 0310
        gbc.setState(0xca94, 0xa389, 0x5f70, 0xaff9, 0x6688, 0xd414, 0x1, 0x0);
        gbc.writeMem(0xca94, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa389);
        EXPECT(gbc.pc(), 0xca95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca94), 0x90);
        // 90 0311
        gbc.setState(0x18ea, 0xe4cc, 0x18f0, 0xeda4, 0xc764, 0x1f00, 0x0, 0x0);
        gbc.writeMem(0x18ea, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe4cc);
        EXPECT(gbc.pc(), 0x18eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0312
        gbc.setState(0x5a45, 0xbc36, 0x32b0, 0xe380, 0x6300, 0x8af0, 0x0, 0x1);
        gbc.writeMem(0x5a45, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xbc36);
        EXPECT(gbc.pc(), 0x5a46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0313
        gbc.setState(0xae02, 0x690f, 0xda70, 0xac22, 0xd0b4, 0x3d13, 0x0, 0x0);
        gbc.writeMem(0xae02, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x690f);
        EXPECT(gbc.pc(), 0xae03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae02), 0x90);
        // 90 0314
        gbc.setState(0x1fc0, 0xa599, 0xa10, 0xf8e8, 0xc4db, 0xdcc8, 0x0, 0x1);
        gbc.writeMem(0x1fc0, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa599);
        EXPECT(gbc.pc(), 0x1fc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0315
        gbc.setState(0x62d4, 0x1689, 0x8e30, 0x5844, 0x8ef5, 0x6ce2, 0x1, 0x0);
        gbc.writeMem(0x62d4, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1689);
        EXPECT(gbc.pc(), 0x62d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0316
        gbc.setState(0x200f, 0xfa0a, 0x48d0, 0xd9ed, 0xb27b, 0xb0b0, 0x1, 0x0);
        gbc.writeMem(0x200f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xfa0a);
        EXPECT(gbc.pc(), 0x2010);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0317
        gbc.setState(0x2ad8, 0x1f64, 0x1ab0, 0xf512, 0xdf08, 0xb423, 0x0, 0x1);
        gbc.writeMem(0x2ad8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x1f64);
        EXPECT(gbc.pc(), 0x2ad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0318
        gbc.setState(0x3077, 0x3090, 0x55a0, 0x226d, 0x4aea, 0xce00, 0x1, 0x0);
        gbc.writeMem(0x3077, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3090);
        EXPECT(gbc.pc(), 0x3078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0319
        gbc.setState(0xf2a, 0xb1b, 0x4f00, 0x84c9, 0x388f, 0x463e, 0x1, 0x0);
        gbc.writeMem(0xf2a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb1b);
        EXPECT(gbc.pc(), 0xf2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 031B
        gbc.setState(0xab6, 0x74ca, 0xa8c0, 0x7710, 0x5ad2, 0x6fa6, 0x1, 0x0);
        gbc.writeMem(0xab6, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x74ca);
        EXPECT(gbc.pc(), 0xab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 031C
        gbc.setState(0x4f5a, 0xf156, 0x9920, 0xfd27, 0x7dab, 0x588d, 0x0, 0x1);
        gbc.writeMem(0x4f5a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf156);
        EXPECT(gbc.pc(), 0x4f5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 031D
        gbc.setState(0x3d40, 0x91cf, 0xa4f0, 0x9ff6, 0x180b, 0x8ef1, 0x0, 0x0);
        gbc.writeMem(0x3d40, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x91cf);
        EXPECT(gbc.pc(), 0x3d41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 031E
        gbc.setState(0xd747, 0x50a0, 0xe750, 0x99e, 0x4f92, 0xfd6e, 0x0, 0x1);
        gbc.writeMem(0xd747, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x50a0);
        EXPECT(gbc.pc(), 0xd748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd747), 0x90);
        // 90 031F
        gbc.setState(0xdd87, 0x370a, 0x2d50, 0x52ee, 0x63a5, 0x3258, 0x1, 0x1);
        gbc.writeMem(0xdd87, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x370a);
        EXPECT(gbc.pc(), 0xdd88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd87), 0x90);
        // 90 0320
        gbc.setState(0x47a4, 0xf1c1, 0x15b0, 0x63a5, 0xc24e, 0xc52a, 0x1, 0x1);
        gbc.writeMem(0x47a4, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf1c1);
        EXPECT(gbc.pc(), 0x47a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0321
        gbc.setState(0xa6c7, 0x205b, 0xbd50, 0x989, 0xd21a, 0x4401, 0x1, 0x0);
        gbc.writeMem(0xa6c7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x205b);
        EXPECT(gbc.pc(), 0xa6c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6c7), 0x90);
        // 90 0322
        gbc.setState(0x2684, 0x145b, 0xc810, 0x2f25, 0xdf68, 0x51f6, 0x1, 0x0);
        gbc.writeMem(0x2684, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x145b);
        EXPECT(gbc.pc(), 0x2685);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0323
        gbc.setState(0x4d0a, 0x91a0, 0x9a70, 0x9d1d, 0xc467, 0x1272, 0x0, 0x1);
        gbc.writeMem(0x4d0a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x91a0);
        EXPECT(gbc.pc(), 0x4d0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0324
        gbc.setState(0x841c, 0x2cf0, 0x90d0, 0xb69a, 0xb207, 0x5f7d, 0x1, 0x0);
        gbc.writeMem(0x841c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2cf0);
        EXPECT(gbc.pc(), 0x841d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x841c), 0x90);
        // 90 0325
        gbc.setState(0x3b4a, 0x3c06, 0x2420, 0xd86, 0xc8dd, 0x84bf, 0x1, 0x1);
        gbc.writeMem(0x3b4a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x3c06);
        EXPECT(gbc.pc(), 0x3b4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0326
        gbc.setState(0x5bce, 0xf8ef, 0xfa80, 0xa913, 0x76a6, 0xc30a, 0x1, 0x1);
        gbc.writeMem(0x5bce, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf8ef);
        EXPECT(gbc.pc(), 0x5bcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0327
        gbc.setState(0x5bc9, 0x20dc, 0x5420, 0xb5a3, 0x22b2, 0xba71, 0x0, 0x1);
        gbc.writeMem(0x5bc9, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x20dc);
        EXPECT(gbc.pc(), 0x5bca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0328
        gbc.setState(0xa2c8, 0x7dc2, 0xdbb0, 0xe4e0, 0x3907, 0x47b6, 0x0, 0x0);
        gbc.writeMem(0xa2c8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7dc2);
        EXPECT(gbc.pc(), 0xa2c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2c8), 0x90);
        // 90 0329
        gbc.setState(0x9790, 0xfb7a, 0x78c0, 0x6366, 0x8c04, 0x96a6, 0x1, 0x1);
        gbc.writeMem(0x9790, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xfb7a);
        EXPECT(gbc.pc(), 0x9791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9790), 0x90);
        // 90 032A
        gbc.setState(0xdeed, 0x4484, 0xb4b0, 0x5c50, 0x577a, 0x383, 0x0, 0x0);
        gbc.writeMem(0xdeed, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4484);
        EXPECT(gbc.pc(), 0xdeee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeed), 0x90);
        // 90 032B
        gbc.setState(0x9f29, 0x1873, 0xfc80, 0xfc2b, 0x4c8a, 0xa836, 0x1, 0x1);
        gbc.writeMem(0x9f29, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x1873);
        EXPECT(gbc.pc(), 0x9f2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f29), 0x90);
        // 90 032D
        gbc.setState(0x6d87, 0xebc7, 0xead0, 0xb59, 0x6f03, 0x4caf, 0x0, 0x0);
        gbc.writeMem(0x6d87, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xebc7);
        EXPECT(gbc.pc(), 0x6d88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 032E
        gbc.setState(0x47c8, 0xd576, 0x3ec0, 0xc9e1, 0x32c3, 0xe1f5, 0x0, 0x1);
        gbc.writeMem(0x47c8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xd576);
        EXPECT(gbc.pc(), 0x47c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 032F
        gbc.setState(0xb2ad, 0x5cba, 0x3b10, 0xcb1, 0x5448, 0xfd25, 0x1, 0x0);
        gbc.writeMem(0xb2ad, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5cba);
        EXPECT(gbc.pc(), 0xb2ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2ad), 0x90);
        // 90 0330
        gbc.setState(0x93f8, 0xf81b, 0xec30, 0x8ebf, 0x8fde, 0x9990, 0x1, 0x0);
        gbc.writeMem(0x93f8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xf81b);
        EXPECT(gbc.pc(), 0x93f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93f8), 0x90);
        // 90 0331
        gbc.setState(0x9793, 0x2968, 0x60d0, 0x2337, 0xe918, 0xc3b9, 0x1, 0x0);
        gbc.writeMem(0x9793, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2968);
        EXPECT(gbc.pc(), 0x9794);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9793), 0x90);
        // 90 0332
        gbc.setState(0x9ec5, 0xad05, 0xb2a0, 0xc095, 0x8b6d, 0xd690, 0x0, 0x0);
        gbc.writeMem(0x9ec5, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xad05);
        EXPECT(gbc.pc(), 0x9ec6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ec5), 0x90);
        // 90 0333
        gbc.setState(0x3e2d, 0x9ab3, 0x5eb0, 0xaaf4, 0xeac3, 0xe9d0, 0x1, 0x0);
        gbc.writeMem(0x3e2d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9ab3);
        EXPECT(gbc.pc(), 0x3e2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0334
        gbc.setState(0xec29, 0x19b9, 0x1720, 0x2e46, 0xeb6f, 0xa247, 0x0, 0x0);
        gbc.writeMem(0xec29, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x19b9);
        EXPECT(gbc.pc(), 0xec2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec29), 0x90);
        // 90 0335
        gbc.setState(0xa69c, 0xd59d, 0x8b80, 0x9de1, 0x5bbb, 0xe5b3, 0x0, 0x1);
        gbc.writeMem(0xa69c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xd59d);
        EXPECT(gbc.pc(), 0xa69d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa69c), 0x90);
        // 90 0337
        gbc.setState(0x308a, 0xd1d3, 0xd8f0, 0x9490, 0x6832, 0xf291, 0x0, 0x0);
        gbc.writeMem(0x308a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xd1d3);
        EXPECT(gbc.pc(), 0x308b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0338
        gbc.setState(0xa255, 0x67ff, 0x39c0, 0x776, 0x7cc6, 0x2873, 0x1, 0x0);
        gbc.writeMem(0xa255, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x67ff);
        EXPECT(gbc.pc(), 0xa256);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa255), 0x90);
        // 90 0339
        gbc.setState(0xe6, 0x3799, 0xb840, 0x51f4, 0xd79e, 0x6987, 0x1, 0x0);
        gbc.writeMem(0xe6, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3799);
        EXPECT(gbc.pc(), 0xe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 033A
        gbc.setState(0x8f31, 0xc19d, 0xc480, 0xad20, 0x507c, 0xfe02, 0x0, 0x1);
        gbc.writeMem(0x8f31, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc19d);
        EXPECT(gbc.pc(), 0x8f32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f31), 0x90);
        // 90 033B
        gbc.setState(0xc468, 0xea82, 0x4920, 0x80bc, 0x7e21, 0xea5b, 0x0, 0x0);
        gbc.writeMem(0xc468, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xea82);
        EXPECT(gbc.pc(), 0xc469);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc468), 0x90);
        // 90 033D
        gbc.setState(0x8015, 0x2077, 0xca40, 0xaf49, 0xf550, 0x1278, 0x1, 0x1);
        gbc.writeMem(0x8015, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x2077);
        EXPECT(gbc.pc(), 0x8016);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8015), 0x90);
        // 90 033E
        gbc.setState(0x7917, 0x7c3, 0x5200, 0x9ed2, 0xf76d, 0xdbe6, 0x1, 0x0);
        gbc.writeMem(0x7917, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7c3);
        EXPECT(gbc.pc(), 0x7918);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 033F
        gbc.setState(0xb9d, 0xad16, 0x450, 0xacc1, 0xde53, 0x4be0, 0x0, 0x0);
        gbc.writeMem(0xb9d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xad16);
        EXPECT(gbc.pc(), 0xb9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0340
        gbc.setState(0x1021, 0x5dc4, 0x3300, 0x6117, 0xe476, 0xb57f, 0x1, 0x1);
        gbc.writeMem(0x1021, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x5dc4);
        EXPECT(gbc.pc(), 0x1022);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0341
        gbc.setState(0xa1c5, 0x8d5b, 0x4890, 0x5b61, 0xde39, 0x1ae4, 0x1, 0x0);
        gbc.writeMem(0xa1c5, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x8d5b);
        EXPECT(gbc.pc(), 0xa1c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1c5), 0x90);
        // 90 0342
        gbc.setState(0x20f6, 0x62b6, 0x2cc0, 0x2d1d, 0xf7b9, 0x9fec, 0x0, 0x1);
        gbc.writeMem(0x20f6, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x62b6);
        EXPECT(gbc.pc(), 0x20f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0343
        gbc.setState(0x1728, 0xd7c5, 0x4b40, 0xf0ff, 0xff6f, 0x433b, 0x1, 0x1);
        gbc.writeMem(0x1728, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xd7c5);
        EXPECT(gbc.pc(), 0x1729);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0344
        gbc.setState(0xe906, 0x6f11, 0xb3a0, 0xdbae, 0xa2aa, 0xb0b4, 0x1, 0x1);
        gbc.writeMem(0xe906, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6f11);
        EXPECT(gbc.pc(), 0xe907);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe906), 0x90);
        // 90 0345
        gbc.setState(0x796, 0xde0, 0x30f0, 0x9df6, 0x55c6, 0x4411, 0x1, 0x1);
        gbc.writeMem(0x796, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xde0);
        EXPECT(gbc.pc(), 0x797);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0346
        gbc.setState(0xe72a, 0x5b23, 0xe4a0, 0xeb7a, 0x3bc0, 0x221a, 0x1, 0x1);
        gbc.writeMem(0xe72a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5b23);
        EXPECT(gbc.pc(), 0xe72b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe72a), 0x90);
        // 90 0347
        gbc.setState(0xd407, 0x382f, 0xd820, 0xde3c, 0xa610, 0x8721, 0x0, 0x1);
        gbc.writeMem(0xd407, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x382f);
        EXPECT(gbc.pc(), 0xd408);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd407), 0x90);
        // 90 0348
        gbc.setState(0xe9af, 0xa0b5, 0x4920, 0xd376, 0x1d1, 0xa99f, 0x0, 0x0);
        gbc.writeMem(0xe9af, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xa0b5);
        EXPECT(gbc.pc(), 0xe9b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9af), 0x90);
        // 90 0349
        gbc.setState(0x7304, 0xb708, 0x5d90, 0x3019, 0xb453, 0x33f6, 0x1, 0x0);
        gbc.writeMem(0x7304, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb708);
        EXPECT(gbc.pc(), 0x7305);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 034A
        gbc.setState(0x346b, 0xaf49, 0x3620, 0xed03, 0xcf4c, 0xf86f, 0x0, 0x0);
        gbc.writeMem(0x346b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xaf49);
        EXPECT(gbc.pc(), 0x346c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 034B
        gbc.setState(0x1114, 0x24de, 0x56f0, 0x4e05, 0x4e35, 0x7797, 0x0, 0x1);
        gbc.writeMem(0x1114, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x24de);
        EXPECT(gbc.pc(), 0x1115);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 034C
        gbc.setState(0x2662, 0x8e50, 0xcdf0, 0xc6f2, 0xfdca, 0xdc27, 0x0, 0x1);
        gbc.writeMem(0x2662, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8e50);
        EXPECT(gbc.pc(), 0x2663);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 034D
        gbc.setState(0x5a0b, 0x2e47, 0xe30, 0x40b9, 0xd069, 0x1f50, 0x1, 0x0);
        gbc.writeMem(0x5a0b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2e47);
        EXPECT(gbc.pc(), 0x5a0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 034E
        gbc.setState(0x7b67, 0x5c61, 0xf420, 0xf4d5, 0xbe8, 0xe5f7, 0x0, 0x1);
        gbc.writeMem(0x7b67, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5c61);
        EXPECT(gbc.pc(), 0x7b68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 034F
        gbc.setState(0x3fe3, 0x4b78, 0xdeb0, 0x27e0, 0xae48, 0xd30d, 0x0, 0x0);
        gbc.writeMem(0x3fe3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x4b78);
        EXPECT(gbc.pc(), 0x3fe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0350
        gbc.setState(0x33e7, 0xab6a, 0xd9f0, 0xe1d9, 0x3234, 0x6e7b, 0x1, 0x0);
        gbc.writeMem(0x33e7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xab6a);
        EXPECT(gbc.pc(), 0x33e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0351
        gbc.setState(0x318b, 0x8718, 0xdf70, 0xeb3b, 0x7a37, 0xba53, 0x0, 0x1);
        gbc.writeMem(0x318b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x8718);
        EXPECT(gbc.pc(), 0x318c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0352
        gbc.setState(0x37a3, 0xfde2, 0x2e70, 0xcb4, 0xdefa, 0x1808, 0x0, 0x0);
        gbc.writeMem(0x37a3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xfde2);
        EXPECT(gbc.pc(), 0x37a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0353
        gbc.setState(0x2dc3, 0x9fb1, 0x58b0, 0x51b1, 0x242a, 0xcf4d, 0x0, 0x1);
        gbc.writeMem(0x2dc3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x9fb1);
        EXPECT(gbc.pc(), 0x2dc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0354
        gbc.setState(0x4bcb, 0xb4bb, 0xb010, 0x322b, 0xd41c, 0xc743, 0x1, 0x0);
        gbc.writeMem(0x4bcb, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb4bb);
        EXPECT(gbc.pc(), 0x4bcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0355
        gbc.setState(0xc530, 0xd2f0, 0xe870, 0xb387, 0x8915, 0x8558, 0x0, 0x1);
        gbc.writeMem(0xc530, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xd2f0);
        EXPECT(gbc.pc(), 0xc531);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc530), 0x90);
        // 90 0356
        gbc.setState(0xb463, 0x15b9, 0x6df0, 0x87a8, 0xbc75, 0x408d, 0x0, 0x1);
        gbc.writeMem(0xb463, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x15b9);
        EXPECT(gbc.pc(), 0xb464);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb463), 0x90);
        // 90 0357
        gbc.setState(0x38f6, 0x7868, 0x55c0, 0xc296, 0xaf7c, 0x54b3, 0x0, 0x1);
        gbc.writeMem(0x38f6, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7868);
        EXPECT(gbc.pc(), 0x38f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0358
        gbc.setState(0x7a4c, 0x2ae, 0x6b80, 0x8e87, 0x500d, 0xd3ca, 0x1, 0x1);
        gbc.writeMem(0x7a4c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2ae);
        EXPECT(gbc.pc(), 0x7a4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0359
        gbc.setState(0x7b78, 0xa41d, 0xf970, 0xc7cd, 0x9c1c, 0x7be9, 0x0, 0x0);
        gbc.writeMem(0x7b78, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa41d);
        EXPECT(gbc.pc(), 0x7b79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 035A
        gbc.setState(0x2935, 0xf0af, 0x24f0, 0x9e05, 0x930f, 0x8395, 0x1, 0x1);
        gbc.writeMem(0x2935, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xf0af);
        EXPECT(gbc.pc(), 0x2936);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 035B
        gbc.setState(0x99a3, 0x8b48, 0xfaf0, 0x7ad8, 0x3912, 0x2cd6, 0x0, 0x1);
        gbc.writeMem(0x99a3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8b48);
        EXPECT(gbc.pc(), 0x99a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99a3), 0x90);
        // 90 035C
        gbc.setState(0x5d30, 0x6eb4, 0xb690, 0x43d6, 0x5940, 0xfc16, 0x0, 0x0);
        gbc.writeMem(0x5d30, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x6eb4);
        EXPECT(gbc.pc(), 0x5d31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 035D
        gbc.setState(0xb2f7, 0xa65e, 0x620, 0x8fbc, 0x9ef9, 0x703c, 0x0, 0x1);
        gbc.writeMem(0xb2f7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa65e);
        EXPECT(gbc.pc(), 0xb2f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2f7), 0x90);
        // 90 035E
        gbc.setState(0xb5f3, 0xb47a, 0x3fe0, 0x72c0, 0x781d, 0x558b, 0x1, 0x0);
        gbc.writeMem(0xb5f3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xb47a);
        EXPECT(gbc.pc(), 0xb5f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5f3), 0x90);
        // 90 035F
        gbc.setState(0xc3fb, 0xf981, 0x69d0, 0xe454, 0x801b, 0xbe9b, 0x0, 0x0);
        gbc.writeMem(0xc3fb, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xf981);
        EXPECT(gbc.pc(), 0xc3fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3fb), 0x90);
        // 90 0360
        gbc.setState(0x9be8, 0x121d, 0xc790, 0xfb9b, 0x6ec2, 0x6f82, 0x1, 0x0);
        gbc.writeMem(0x9be8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x121d);
        EXPECT(gbc.pc(), 0x9be9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9be8), 0x90);
        // 90 0361
        gbc.setState(0xa840, 0x411b, 0xd9b0, 0x1403, 0x212f, 0xc691, 0x1, 0x0);
        gbc.writeMem(0xa840, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x411b);
        EXPECT(gbc.pc(), 0xa841);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa840), 0x90);
        // 90 0362
        gbc.setState(0x394e, 0xd5e4, 0xb6f0, 0x24e5, 0x44e3, 0x49b2, 0x0, 0x1);
        gbc.writeMem(0x394e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xd5e4);
        EXPECT(gbc.pc(), 0x394f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0363
        gbc.setState(0x433c, 0x1182, 0x5660, 0xe3b1, 0xf9e5, 0x92db, 0x0, 0x1);
        gbc.writeMem(0x433c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1182);
        EXPECT(gbc.pc(), 0x433d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0364
        gbc.setState(0x76b9, 0xad85, 0xbf90, 0x5144, 0x2ae8, 0x3aa0, 0x0, 0x0);
        gbc.writeMem(0x76b9, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xad85);
        EXPECT(gbc.pc(), 0x76ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0365
        gbc.setState(0x9c1a, 0x634b, 0x9a0, 0xee9b, 0xe132, 0xa9ef, 0x0, 0x1);
        gbc.writeMem(0x9c1a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x634b);
        EXPECT(gbc.pc(), 0x9c1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c1a), 0x90);
        // 90 0366
        gbc.setState(0x7d66, 0xfda1, 0xcd0, 0x4762, 0x444f, 0xb4a9, 0x0, 0x0);
        gbc.writeMem(0x7d66, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xfda1);
        EXPECT(gbc.pc(), 0x7d67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0367
        gbc.setState(0xb3fb, 0x2b6e, 0x75b0, 0x417e, 0xceb1, 0xc840, 0x1, 0x1);
        gbc.writeMem(0xb3fb, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2b6e);
        EXPECT(gbc.pc(), 0xb3fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3fb), 0x90);
        // 90 0368
        gbc.setState(0x3370, 0x1de8, 0x7510, 0xf811, 0xb9a7, 0x46b2, 0x0, 0x0);
        gbc.writeMem(0x3370, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1de8);
        EXPECT(gbc.pc(), 0x3371);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0369
        gbc.setState(0xd422, 0x51bd, 0x7ab0, 0xf928, 0xd148, 0x9b51, 0x1, 0x1);
        gbc.writeMem(0xd422, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x51bd);
        EXPECT(gbc.pc(), 0xd423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd422), 0x90);
        // 90 036A
        gbc.setState(0xa489, 0xc1fa, 0xace0, 0xdd75, 0xa374, 0x7e2a, 0x1, 0x1);
        gbc.writeMem(0xa489, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xc1fa);
        EXPECT(gbc.pc(), 0xa48a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa489), 0x90);
        // 90 036B
        gbc.setState(0x963f, 0xca2f, 0x12a0, 0xf273, 0xc90e, 0x3325, 0x0, 0x1);
        gbc.writeMem(0x963f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xca2f);
        EXPECT(gbc.pc(), 0x9640);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x963f), 0x90);
        // 90 036C
        gbc.setState(0x5a24, 0x7173, 0xbea0, 0xb9a8, 0xa20b, 0x95ea, 0x1, 0x0);
        gbc.writeMem(0x5a24, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x7173);
        EXPECT(gbc.pc(), 0x5a25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 036D
        gbc.setState(0x5939, 0x6544, 0x3b00, 0x944f, 0xa2ac, 0x1e2c, 0x1, 0x1);
        gbc.writeMem(0x5939, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x6544);
        EXPECT(gbc.pc(), 0x593a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 036E
        gbc.setState(0x1fec, 0x7d0a, 0xe3a0, 0x75e0, 0xf4ec, 0x1d16, 0x0, 0x1);
        gbc.writeMem(0x1fec, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x7d0a);
        EXPECT(gbc.pc(), 0x1fed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 036F
        gbc.setState(0x2d57, 0xb68f, 0x2aa0, 0x8a92, 0x28b9, 0xe267, 0x0, 0x0);
        gbc.writeMem(0x2d57, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb68f);
        EXPECT(gbc.pc(), 0x2d58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0370
        gbc.setState(0xb211, 0x453b, 0xd190, 0xd9ad, 0xaeb0, 0x61a4, 0x0, 0x0);
        gbc.writeMem(0xb211, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x453b);
        EXPECT(gbc.pc(), 0xb212);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb211), 0x90);
        // 90 0371
        gbc.setState(0x5e92, 0xd73c, 0xca40, 0x5168, 0x2e82, 0x9660, 0x0, 0x0);
        gbc.writeMem(0x5e92, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd73c);
        EXPECT(gbc.pc(), 0x5e93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0372
        gbc.setState(0x132f, 0x4fc7, 0x1c20, 0xf381, 0xc73, 0x91bf, 0x0, 0x0);
        gbc.writeMem(0x132f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4fc7);
        EXPECT(gbc.pc(), 0x1330);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0374
        gbc.setState(0xefc1, 0x9997, 0x2510, 0xd0a8, 0xc7d0, 0x1efe, 0x1, 0x1);
        gbc.writeMem(0xefc1, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9997);
        EXPECT(gbc.pc(), 0xefc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefc1), 0x90);
        // 90 0375
        gbc.setState(0x82c2, 0xc88d, 0x21b0, 0x2602, 0x4a9f, 0xb8ae, 0x0, 0x1);
        gbc.writeMem(0x82c2, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc88d);
        EXPECT(gbc.pc(), 0x82c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82c2), 0x90);
        // 90 0376
        gbc.setState(0xb673, 0xb54c, 0xbb40, 0xb124, 0x4007, 0x85bb, 0x0, 0x1);
        gbc.writeMem(0xb673, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb54c);
        EXPECT(gbc.pc(), 0xb674);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb673), 0x90);
        // 90 0377
        gbc.setState(0xa668, 0xe0, 0xed10, 0xefba, 0x9a5, 0x637d, 0x0, 0x0);
        gbc.writeMem(0xa668, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xe0);
        EXPECT(gbc.pc(), 0xa669);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa668), 0x90);
        // 90 0378
        gbc.setState(0x2e3e, 0x680, 0x7d80, 0xb608, 0x6ba, 0x11b8, 0x1, 0x0);
        gbc.writeMem(0x2e3e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x680);
        EXPECT(gbc.pc(), 0x2e3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0379
        gbc.setState(0x5c2c, 0x3cb5, 0xd650, 0x30e3, 0x8f66, 0x5ce4, 0x0, 0x1);
        gbc.writeMem(0x5c2c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3cb5);
        EXPECT(gbc.pc(), 0x5c2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 037A
        gbc.setState(0x61db, 0x1b3d, 0xeb30, 0xafd5, 0x69f3, 0xf9b4, 0x1, 0x1);
        gbc.writeMem(0x61db, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1b3d);
        EXPECT(gbc.pc(), 0x61dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 037D
        gbc.setState(0x8dc5, 0x5a48, 0x350, 0xd0c2, 0x7903, 0x3c97, 0x1, 0x1);
        gbc.writeMem(0x8dc5, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x5a48);
        EXPECT(gbc.pc(), 0x8dc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dc5), 0x90);
        // 90 037E
        gbc.setState(0x8185, 0x2ace, 0x6650, 0x18ba, 0xb749, 0xf926, 0x1, 0x0);
        gbc.writeMem(0x8185, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x2ace);
        EXPECT(gbc.pc(), 0x8186);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8185), 0x90);
        // 90 037F
        gbc.setState(0x6742, 0x2d9c, 0x6b80, 0x8e31, 0x8c6d, 0x3041, 0x1, 0x1);
        gbc.writeMem(0x6742, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x2d9c);
        EXPECT(gbc.pc(), 0x6743);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0380
        gbc.setState(0xb24f, 0xaea7, 0xa320, 0x4c30, 0x981e, 0x1b12, 0x0, 0x1);
        gbc.writeMem(0xb24f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xaea7);
        EXPECT(gbc.pc(), 0xb250);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb24f), 0x90);
        // 90 0381
        gbc.setState(0xc43b, 0x44dc, 0xedd0, 0x4267, 0x82f6, 0x4b68, 0x1, 0x0);
        gbc.writeMem(0xc43b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x44dc);
        EXPECT(gbc.pc(), 0xc43c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc43b), 0x90);
        // 90 0382
        gbc.setState(0xdd43, 0x6fef, 0x8ba0, 0x85db, 0xc356, 0xef7e, 0x1, 0x1);
        gbc.writeMem(0xdd43, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6fef);
        EXPECT(gbc.pc(), 0xdd44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd43), 0x90);
        // 90 0384
        gbc.setState(0x7db0, 0x6eef, 0x2ae0, 0xe95d, 0x7a90, 0xd0ad, 0x1, 0x0);
        gbc.writeMem(0x7db0, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6eef);
        EXPECT(gbc.pc(), 0x7db1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0385
        gbc.setState(0x2de4, 0x619d, 0x5e90, 0x417, 0x99ab, 0x3160, 0x1, 0x1);
        gbc.writeMem(0x2de4, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x619d);
        EXPECT(gbc.pc(), 0x2de5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 0387
        gbc.setState(0x826d, 0xb451, 0xf5f0, 0x476a, 0xab63, 0x31, 0x0, 0x0);
        gbc.writeMem(0x826d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb451);
        EXPECT(gbc.pc(), 0x826e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x826d), 0x90);
        // 90 0388
        gbc.setState(0x1b18, 0xa686, 0x4780, 0x871d, 0x3578, 0x5a98, 0x0, 0x1);
        gbc.writeMem(0x1b18, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa686);
        EXPECT(gbc.pc(), 0x1b19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 0389
        gbc.setState(0x4438, 0xa7e9, 0xb450, 0xdd11, 0xaa28, 0xdb46, 0x1, 0x0);
        gbc.writeMem(0x4438, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa7e9);
        EXPECT(gbc.pc(), 0x4439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 038A
        gbc.setState(0x6dd6, 0x36e0, 0x3d30, 0xb8a5, 0xa729, 0x5e7d, 0x1, 0x1);
        gbc.writeMem(0x6dd6, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x36e0);
        EXPECT(gbc.pc(), 0x6dd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 038B
        gbc.setState(0xd530, 0x2ef7, 0x8e10, 0xb8f4, 0xcaa1, 0x3e43, 0x0, 0x0);
        gbc.writeMem(0xd530, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2ef7);
        EXPECT(gbc.pc(), 0xd531);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd530), 0x90);
        // 90 038C
        gbc.setState(0xc0e8, 0x866d, 0xce30, 0x535f, 0xfd23, 0xfca4, 0x1, 0x0);
        gbc.writeMem(0xc0e8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x866d);
        EXPECT(gbc.pc(), 0xc0e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0e8), 0x90);
        // 90 038D
        gbc.setState(0x81ea, 0x9a22, 0xdf80, 0x7c87, 0xe3d0, 0xdc49, 0x0, 0x1);
        gbc.writeMem(0x81ea, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9a22);
        EXPECT(gbc.pc(), 0x81eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81ea), 0x90);
        // 90 038E
        gbc.setState(0x226d, 0x992, 0x5470, 0x7241, 0x335, 0x5093, 0x0, 0x1);
        gbc.writeMem(0x226d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x992);
        EXPECT(gbc.pc(), 0x226e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 038F
        gbc.setState(0xcf36, 0x3e49, 0xf750, 0x8487, 0x3b4d, 0x5126, 0x0, 0x1);
        gbc.writeMem(0xcf36, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x3e49);
        EXPECT(gbc.pc(), 0xcf37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf36), 0x90);
        // 90 0390
        gbc.setState(0xe4ce, 0xe86, 0x3f10, 0x3fc2, 0x305e, 0xd294, 0x0, 0x0);
        gbc.writeMem(0xe4ce, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xe86);
        EXPECT(gbc.pc(), 0xe4cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4ce), 0x90);
        // 90 0391
        gbc.setState(0xdca0, 0xde47, 0xc6b0, 0x8ade, 0x2927, 0x9ec1, 0x1, 0x1);
        gbc.writeMem(0xdca0, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xde47);
        EXPECT(gbc.pc(), 0xdca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdca0), 0x90);
        // 90 0392
        gbc.setState(0x2803, 0x1847, 0x22d0, 0xabf8, 0x2708, 0x65a6, 0x0, 0x0);
        gbc.writeMem(0x2803, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x1847);
        EXPECT(gbc.pc(), 0x2804);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 0393
        gbc.setState(0xe3fc, 0x690f, 0x8b90, 0xb290, 0xd546, 0x7b29, 0x1, 0x1);
        gbc.writeMem(0xe3fc, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x690f);
        EXPECT(gbc.pc(), 0xe3fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3fc), 0x90);
        // 90 0394
        gbc.setState(0x8c2f, 0x897, 0xcd10, 0x9d41, 0x3ee5, 0x2d61, 0x1, 0x1);
        gbc.writeMem(0x8c2f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x897);
        EXPECT(gbc.pc(), 0x8c30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c2f), 0x90);
        // 90 0395
        gbc.setState(0xa4dd, 0x98e, 0xd1a0, 0xe00e, 0xbf03, 0xcf81, 0x1, 0x0);
        gbc.writeMem(0xa4dd, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x98e);
        EXPECT(gbc.pc(), 0xa4de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4dd), 0x90);
        // 90 0396
        gbc.setState(0x9560, 0x12d1, 0xcd90, 0x3416, 0x1b99, 0xa14e, 0x1, 0x0);
        gbc.writeMem(0x9560, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x12d1);
        EXPECT(gbc.pc(), 0x9561);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9560), 0x90);
        // 90 0397
        gbc.setState(0x226d, 0xf9b6, 0xf7f0, 0x5e72, 0x4272, 0x9b3b, 0x0, 0x0);
        gbc.writeMem(0x226d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xf9b6);
        EXPECT(gbc.pc(), 0x226e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0398
        gbc.setState(0x2f85, 0x6af8, 0xfa10, 0xd7b, 0xa355, 0xbec7, 0x0, 0x1);
        gbc.writeMem(0x2f85, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x6af8);
        EXPECT(gbc.pc(), 0x2f86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 0399
        gbc.setState(0xae0e, 0xc14, 0xff50, 0x35b, 0xfea1, 0x7789, 0x1, 0x0);
        gbc.writeMem(0xae0e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xc14);
        EXPECT(gbc.pc(), 0xae0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae0e), 0x90);
        // 90 039A
        gbc.setState(0x28fb, 0x7144, 0x40b0, 0xb2ad, 0x2bfb, 0x973b, 0x1, 0x0);
        gbc.writeMem(0x28fb, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7144);
        EXPECT(gbc.pc(), 0x28fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 039B
        gbc.setState(0x9d7d, 0x2327, 0xa260, 0x89b7, 0xc909, 0x16d5, 0x1, 0x1);
        gbc.writeMem(0x9d7d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2327);
        EXPECT(gbc.pc(), 0x9d7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d7d), 0x90);
        // 90 039C
        gbc.setState(0x1259, 0x69cc, 0x8a90, 0x1dc, 0x1f8c, 0xdf6c, 0x0, 0x0);
        gbc.writeMem(0x1259, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x69cc);
        EXPECT(gbc.pc(), 0x125a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 039D
        gbc.setState(0xc51, 0xba21, 0xf9d0, 0x70d0, 0x7fd5, 0x979, 0x0, 0x1);
        gbc.writeMem(0xc51, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xba21);
        EXPECT(gbc.pc(), 0xc52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 039E
        gbc.setState(0x29e0, 0x9430, 0x6ad0, 0x25ea, 0xf8e, 0xcca1, 0x1, 0x1);
        gbc.writeMem(0x29e0, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9430);
        EXPECT(gbc.pc(), 0x29e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 039F
        gbc.setState(0x821a, 0x40ee, 0xed20, 0x1899, 0xf994, 0x150c, 0x0, 0x0);
        gbc.writeMem(0x821a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x40ee);
        EXPECT(gbc.pc(), 0x821b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x821a), 0x90);
        // 90 03A0
        gbc.setState(0x6ccb, 0xbec4, 0x4100, 0xfeee, 0xf882, 0x1753, 0x1, 0x0);
        gbc.writeMem(0x6ccb, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xbec4);
        EXPECT(gbc.pc(), 0x6ccc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 03A1
        gbc.setState(0xc5fd, 0xb75e, 0x2bf0, 0x94e, 0x2319, 0x75, 0x1, 0x1);
        gbc.writeMem(0xc5fd, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xb75e);
        EXPECT(gbc.pc(), 0xc5fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5fd), 0x90);
        // 90 03A2
        gbc.setState(0x6162, 0xc51a, 0x76b0, 0xd530, 0x3bc6, 0xc7f, 0x0, 0x0);
        gbc.writeMem(0x6162, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc51a);
        EXPECT(gbc.pc(), 0x6163);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 03A3
        gbc.setState(0x3821, 0x5ac5, 0xc060, 0xee0b, 0x3d43, 0x1482, 0x1, 0x0);
        gbc.writeMem(0x3821, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5ac5);
        EXPECT(gbc.pc(), 0x3822);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 03A4
        gbc.setState(0x1338, 0x873d, 0x4e40, 0x348b, 0x69a0, 0x2e4a, 0x1, 0x0);
        gbc.writeMem(0x1338, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x873d);
        EXPECT(gbc.pc(), 0x1339);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 03A5
        gbc.setState(0xdb88, 0xf490, 0xb3b0, 0xcbb, 0x9519, 0x8955, 0x1, 0x0);
        gbc.writeMem(0xdb88, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf490);
        EXPECT(gbc.pc(), 0xdb89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb88), 0x90);
        // 90 03A6
        gbc.setState(0xedb6, 0x1ada, 0xf7c0, 0x6a05, 0x16db, 0x6e12, 0x0, 0x0);
        gbc.writeMem(0xedb6, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x1ada);
        EXPECT(gbc.pc(), 0xedb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedb6), 0x90);
        // 90 03A7
        gbc.setState(0x4b31, 0xb8e9, 0xf4d0, 0x5715, 0xcaa1, 0x6766, 0x0, 0x1);
        gbc.writeMem(0x4b31, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xb8e9);
        EXPECT(gbc.pc(), 0x4b32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 03A8
        gbc.setState(0x6b66, 0x7ccc, 0x90, 0xafa, 0x7b92, 0xeddc, 0x0, 0x1);
        gbc.writeMem(0x6b66, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7ccc);
        EXPECT(gbc.pc(), 0x6b67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 03A9
        gbc.setState(0xb972, 0x4297, 0x8e30, 0x31c3, 0x6a84, 0x40f6, 0x0, 0x0);
        gbc.writeMem(0xb972, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x4297);
        EXPECT(gbc.pc(), 0xb973);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb972), 0x90);
        // 90 03AA
        gbc.setState(0x460b, 0x28e4, 0x3110, 0x6613, 0xb000, 0x62fc, 0x0, 0x1);
        gbc.writeMem(0x460b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x28e4);
        EXPECT(gbc.pc(), 0x460c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 03AB
        gbc.setState(0xe1a8, 0xd2ac, 0x8a70, 0x7e09, 0x80, 0xa84e, 0x1, 0x1);
        gbc.writeMem(0xe1a8, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd2ac);
        EXPECT(gbc.pc(), 0xe1a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1a8), 0x90);
        // 90 03AC
        gbc.setState(0x18aa, 0xbbf6, 0xbfa0, 0x1c25, 0xec43, 0xded2, 0x0, 0x1);
        gbc.writeMem(0x18aa, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xbbf6);
        EXPECT(gbc.pc(), 0x18ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 03AD
        gbc.setState(0x9002, 0x6e08, 0xb880, 0x8ec, 0xa8c6, 0x5a13, 0x0, 0x1);
        gbc.writeMem(0x9002, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6e08);
        EXPECT(gbc.pc(), 0x9003);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9002), 0x90);
        // 90 03AE
        gbc.setState(0x6dfe, 0x536, 0xd490, 0x54fb, 0x8aad, 0xcf76, 0x0, 0x0);
        gbc.writeMem(0x6dfe, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x536);
        EXPECT(gbc.pc(), 0x6dff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 03AF
        gbc.setState(0x2a89, 0xdf19, 0xbb20, 0x57e4, 0xd775, 0x161b, 0x1, 0x0);
        gbc.writeMem(0x2a89, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xdf19);
        EXPECT(gbc.pc(), 0x2a8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 03B0
        gbc.setState(0x4246, 0xa4ac, 0x6250, 0xf66d, 0x6ef5, 0xfe46, 0x1, 0x1);
        gbc.writeMem(0x4246, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa4ac);
        EXPECT(gbc.pc(), 0x4247);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 03B1
        gbc.setState(0x4c17, 0x163d, 0x5160, 0x49e3, 0x9f89, 0xf942, 0x0, 0x0);
        gbc.writeMem(0x4c17, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x163d);
        EXPECT(gbc.pc(), 0x4c18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 03B2
        gbc.setState(0x657d, 0xce68, 0x3660, 0xc9b7, 0x972a, 0xffbe, 0x0, 0x1);
        gbc.writeMem(0x657d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xce68);
        EXPECT(gbc.pc(), 0x657e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 03B3
        gbc.setState(0x3038, 0xb949, 0xb790, 0x4d62, 0x2a82, 0x70ff, 0x1, 0x0);
        gbc.writeMem(0x3038, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xb949);
        EXPECT(gbc.pc(), 0x3039);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 03B4
        gbc.setState(0x9db7, 0xce40, 0x2cb0, 0x7161, 0x4510, 0x6f9c, 0x1, 0x1);
        gbc.writeMem(0x9db7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xce40);
        EXPECT(gbc.pc(), 0x9db8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9db7), 0x90);
        // 90 03B5
        gbc.setState(0xd484, 0x831f, 0xc0d0, 0xc41e, 0x6bbb, 0x29db, 0x1, 0x1);
        gbc.writeMem(0xd484, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x831f);
        EXPECT(gbc.pc(), 0xd485);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd484), 0x90);
        // 90 03B6
        gbc.setState(0xb046, 0x184, 0xb300, 0x72f1, 0xb005, 0x92ab, 0x1, 0x1);
        gbc.writeMem(0xb046, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x184);
        EXPECT(gbc.pc(), 0xb047);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb046), 0x90);
        // 90 03B7
        gbc.setState(0x63a9, 0x5590, 0xfb40, 0xf5f3, 0xb824, 0x8322, 0x0, 0x0);
        gbc.writeMem(0x63a9, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5590);
        EXPECT(gbc.pc(), 0x63aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 03B8
        gbc.setState(0x1889, 0xbcc4, 0xcfc0, 0xb4a8, 0x6745, 0xeb0f, 0x1, 0x1);
        gbc.writeMem(0x1889, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xbcc4);
        EXPECT(gbc.pc(), 0x188a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 03B9
        gbc.setState(0xd988, 0x3731, 0x97c0, 0x1d6d, 0xf53e, 0x54c3, 0x1, 0x0);
        gbc.writeMem(0xd988, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3731);
        EXPECT(gbc.pc(), 0xd989);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd988), 0x90);
        // 90 03BA
        gbc.setState(0xb903, 0x1b09, 0xa8e0, 0x45aa, 0x84b3, 0x4942, 0x1, 0x1);
        gbc.writeMem(0xb903, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x1b09);
        EXPECT(gbc.pc(), 0xb904);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb903), 0x90);
        // 90 03BB
        gbc.setState(0xb6b7, 0x37a9, 0x5890, 0x8e26, 0x828a, 0x617c, 0x0, 0x1);
        gbc.writeMem(0xb6b7, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x37a9);
        EXPECT(gbc.pc(), 0xb6b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6b7), 0x90);
        // 90 03BC
        gbc.setState(0x694c, 0x92e8, 0x42a0, 0xd00f, 0xb4ff, 0x9968, 0x1, 0x0);
        gbc.writeMem(0x694c, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x92e8);
        EXPECT(gbc.pc(), 0x694d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 03BD
        gbc.setState(0x5405, 0xd1, 0xfeb0, 0x7b6b, 0x6525, 0xabe, 0x1, 0x1);
        gbc.writeMem(0x5405, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xd1);
        EXPECT(gbc.pc(), 0x5406);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 03BE
        gbc.setState(0x4c64, 0xc9d3, 0x6440, 0xdf0d, 0xee4b, 0x2bc0, 0x1, 0x0);
        gbc.writeMem(0x4c64, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc9d3);
        EXPECT(gbc.pc(), 0x4c65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 03BF
        gbc.setState(0x5cd3, 0xb3af, 0xf3b0, 0xc146, 0xb52c, 0xc414, 0x1, 0x0);
        gbc.writeMem(0x5cd3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb3af);
        EXPECT(gbc.pc(), 0x5cd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 03C0
        gbc.setState(0x1f2b, 0x4627, 0xa3f0, 0xfe9b, 0x6b41, 0xfff2, 0x0, 0x0);
        gbc.writeMem(0x1f2b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x4627);
        EXPECT(gbc.pc(), 0x1f2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 03C1
        gbc.setState(0xc30e, 0xf13e, 0x4e90, 0x74ca, 0xf6c5, 0xb37a, 0x1, 0x0);
        gbc.writeMem(0xc30e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf13e);
        EXPECT(gbc.pc(), 0xc30f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc30e), 0x90);
        // 90 03C2
        gbc.setState(0xaad, 0x4c7d, 0xcd80, 0xae0, 0x9ae7, 0x8d54, 0x0, 0x1);
        gbc.writeMem(0xaad, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4c7d);
        EXPECT(gbc.pc(), 0xaae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 03C3
        gbc.setState(0xb841, 0xf93b, 0x7860, 0xd403, 0x37c8, 0x1add, 0x0, 0x1);
        gbc.writeMem(0xb841, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xf93b);
        EXPECT(gbc.pc(), 0xb842);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb841), 0x90);
        // 90 03C4
        gbc.setState(0x3ba6, 0x5b3c, 0x4a90, 0x6032, 0x3ff2, 0x83dc, 0x0, 0x1);
        gbc.writeMem(0x3ba6, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5b3c);
        EXPECT(gbc.pc(), 0x3ba7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 03C5
        gbc.setState(0xd72b, 0xf882, 0x69d0, 0xf362, 0x85b9, 0x3fcc, 0x0, 0x0);
        gbc.writeMem(0xd72b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf882);
        EXPECT(gbc.pc(), 0xd72c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd72b), 0x90);
        // 90 03C6
        gbc.setState(0x7282, 0x2830, 0xdea0, 0xe6c7, 0xd190, 0x3201, 0x1, 0x1);
        gbc.writeMem(0x7282, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2830);
        EXPECT(gbc.pc(), 0x7283);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 03C7
        gbc.setState(0x31e, 0x47f5, 0x68f0, 0xd7e3, 0x7808, 0x38c0, 0x1, 0x1);
        gbc.writeMem(0x31e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x47f5);
        EXPECT(gbc.pc(), 0x31f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 03C8
        gbc.setState(0x67af, 0xd981, 0x1ca0, 0x4d98, 0xd8de, 0x8126, 0x0, 0x0);
        gbc.writeMem(0x67af, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xd981);
        EXPECT(gbc.pc(), 0x67b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 03C9
        gbc.setState(0xc812, 0x40a3, 0xd580, 0xff3, 0xbd31, 0x98f2, 0x0, 0x0);
        gbc.writeMem(0xc812, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x40a3);
        EXPECT(gbc.pc(), 0xc813);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc812), 0x90);
        // 90 03CA
        gbc.setState(0xb370, 0x712c, 0x47b0, 0x9a6f, 0xd214, 0x1465, 0x0, 0x1);
        gbc.writeMem(0xb370, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x712c);
        EXPECT(gbc.pc(), 0xb371);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb370), 0x90);
        // 90 03CB
        gbc.setState(0x627, 0x5371, 0xc370, 0x2ac4, 0xa9f3, 0x6b31, 0x0, 0x1);
        gbc.writeMem(0x627, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x5371);
        EXPECT(gbc.pc(), 0x628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 03CC
        gbc.setState(0x3b03, 0xef86, 0x9190, 0x2310, 0xe672, 0xdcb0, 0x1, 0x0);
        gbc.writeMem(0x3b03, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xef86);
        EXPECT(gbc.pc(), 0x3b04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 03CD
        gbc.setState(0x3eef, 0x6de3, 0x5400, 0xc50e, 0xc4c9, 0xd296, 0x0, 0x0);
        gbc.writeMem(0x3eef, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x6de3);
        EXPECT(gbc.pc(), 0x3ef0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 03CE
        gbc.setState(0x78e6, 0x8943, 0x3da0, 0x5ebb, 0xd93e, 0xfd43, 0x0, 0x0);
        gbc.writeMem(0x78e6, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x8943);
        EXPECT(gbc.pc(), 0x78e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 03CF
        gbc.setState(0x5623, 0x2c2e, 0xb6a0, 0x2e81, 0xd216, 0x8713, 0x1, 0x0);
        gbc.writeMem(0x5623, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2c2e);
        EXPECT(gbc.pc(), 0x5624);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 03D0
        gbc.setState(0x66a5, 0x1604, 0xa850, 0x619c, 0xb629, 0xd8e3, 0x0, 0x0);
        gbc.writeMem(0x66a5, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1604);
        EXPECT(gbc.pc(), 0x66a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 03D1
        gbc.setState(0x2d3b, 0xf8d1, 0xf0e0, 0xd9bf, 0x436b, 0x6fcd, 0x1, 0x0);
        gbc.writeMem(0x2d3b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf8d1);
        EXPECT(gbc.pc(), 0x2d3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 03D2
        gbc.setState(0x5444, 0xacbc, 0xe290, 0xb7e2, 0x8e92, 0xb029, 0x0, 0x0);
        gbc.writeMem(0x5444, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xacbc);
        EXPECT(gbc.pc(), 0x5445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 03D3
        gbc.setState(0xee38, 0xe5af, 0x7a60, 0xd8e3, 0x670d, 0x1e41, 0x0, 0x0);
        gbc.writeMem(0xee38, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xe5af);
        EXPECT(gbc.pc(), 0xee39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee38), 0x90);
        // 90 03D4
        gbc.setState(0x270, 0x5939, 0x910, 0x8568, 0xa841, 0x2c0b, 0x0, 0x1);
        gbc.writeMem(0x270, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x5939);
        EXPECT(gbc.pc(), 0x271);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 03D5
        gbc.setState(0x6e90, 0x5b27, 0x51b0, 0x7464, 0x7f21, 0x5c26, 0x1, 0x0);
        gbc.writeMem(0x6e90, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5b27);
        EXPECT(gbc.pc(), 0x6e91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 03D6
        gbc.setState(0xe523, 0xbe12, 0xed00, 0x228e, 0x8a1f, 0x8404, 0x0, 0x0);
        gbc.writeMem(0xe523, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xbe12);
        EXPECT(gbc.pc(), 0xe524);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe523), 0x90);
        // 90 03D7
        gbc.setState(0xa07a, 0xe08b, 0xa1a0, 0x8fc6, 0x62bc, 0x445, 0x1, 0x0);
        gbc.writeMem(0xa07a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xe08b);
        EXPECT(gbc.pc(), 0xa07b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa07a), 0x90);
        // 90 03D8
        gbc.setState(0xc27e, 0x307f, 0x94a0, 0x3eb9, 0x20cb, 0x97fb, 0x0, 0x0);
        gbc.writeMem(0xc27e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x307f);
        EXPECT(gbc.pc(), 0xc27f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc27e), 0x90);
        // 90 03D9
        gbc.setState(0x280b, 0x585a, 0xfe20, 0x51af, 0x4fe8, 0xd935, 0x1, 0x0);
        gbc.writeMem(0x280b, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x585a);
        EXPECT(gbc.pc(), 0x280c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 03DB
        gbc.setState(0xefe1, 0xe494, 0x5d60, 0x40ed, 0x575c, 0x4cd8, 0x1, 0x1);
        gbc.writeMem(0xefe1, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe494);
        EXPECT(gbc.pc(), 0xefe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefe1), 0x90);
        // 90 03DC
        gbc.setState(0xcccf, 0x8e08, 0x87a0, 0x701f, 0x5c65, 0xe5aa, 0x1, 0x1);
        gbc.writeMem(0xcccf, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x8e08);
        EXPECT(gbc.pc(), 0xccd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcccf), 0x90);
        // 90 03DD
        gbc.setState(0xc67e, 0x34a5, 0xfd10, 0x4a15, 0x3a39, 0xe08d, 0x0, 0x1);
        gbc.writeMem(0xc67e, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x34a5);
        EXPECT(gbc.pc(), 0xc67f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc67e), 0x90);
        // 90 03DE
        gbc.setState(0x27b3, 0xf07c, 0x2360, 0x657c, 0x8081, 0x7759, 0x0, 0x0);
        gbc.writeMem(0x27b3, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xf07c);
        EXPECT(gbc.pc(), 0x27b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 03DF
        gbc.setState(0x671, 0x9132, 0xf800, 0x9f92, 0xfda0, 0xa731, 0x0, 0x1);
        gbc.writeMem(0x671, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9132);
        EXPECT(gbc.pc(), 0x672);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 03E0
        gbc.setState(0xd01, 0xe500, 0xc710, 0xb124, 0x546f, 0x7c66, 0x0, 0x1);
        gbc.writeMem(0xd01, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xe500);
        EXPECT(gbc.pc(), 0xd02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 03E1
        gbc.setState(0x4e9f, 0xb65e, 0x55f0, 0x4f48, 0x221a, 0x8f0f, 0x0, 0x1);
        gbc.writeMem(0x4e9f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb65e);
        EXPECT(gbc.pc(), 0x4ea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 90 03E2
        gbc.setState(0x235d, 0xe8a3, 0x58f0, 0x124f, 0x3b6c, 0x9bd3, 0x1, 0x0);
        gbc.writeMem(0x235d, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xe8a3);
        EXPECT(gbc.pc(), 0x235e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 90 03E3
        gbc.setState(0xa7ea, 0x1ed6, 0x3ea0, 0x9302, 0xfe3, 0x633b, 0x1, 0x1);
        gbc.writeMem(0xa7ea, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1ed6);
        EXPECT(gbc.pc(), 0xa7eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7ea), 0x90);
        // 90 03E4
        gbc.setState(0xa876, 0x6e65, 0xafd0, 0x7166, 0x3a26, 0x77a0, 0x1, 0x1);
        gbc.writeMem(0xa876, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x6e65);
        EXPECT(gbc.pc(), 0xa877);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa876), 0x90);
        // 90 03E5
        gbc.setState(0x6f27, 0xacaf, 0x7a70, 0xa24a, 0x5ca6, 0xceec, 0x1, 0x0);
        gbc.writeMem(0x6f27, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xacaf);
        EXPECT(gbc.pc(), 0x6f28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 90 03E6
        gbc.setState(0x690a, 0xdd46, 0x1130, 0xe68c, 0x198d, 0xb54d, 0x1, 0x0);
        gbc.writeMem(0x690a, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xdd46);
        EXPECT(gbc.pc(), 0x690b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 90 03E7
        gbc.setState(0x6413, 0xded1, 0x1f40, 0x229, 0x64c7, 0x9663, 0x0, 0x1);
        gbc.writeMem(0x6413, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xded1);
        EXPECT(gbc.pc(), 0x6414);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
    }
