    TEST(gbcemu, opcode_cb_9c) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 9C 0000
        gbc.setState(0x1a2a, 0x6844, 0xd8a0, 0x90d, 0x5bc2, 0x7f10, 0x0, 0x1);
        gbc.writeMem(0x1a2a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6844, gbc.sp());
        EXPECT(0x1a2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0001
        gbc.setState(0xc5ac, 0x1d87, 0x5820, 0x6873, 0x9882, 0x75fa, 0x0, 0x0);
        gbc.writeMem(0xc5ac, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1d87, gbc.sp());
        EXPECT(0xc5ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5ac));
        EXPECT(0x9c, gbc.readMem(0xc5ad));
        // CB 9C 0002
        gbc.setState(0xea80, 0x48bb, 0x4bc0, 0xac73, 0xaa2, 0xae2c, 0x1, 0x1);
        gbc.writeMem(0xea80, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x48bb, gbc.sp());
        EXPECT(0xea82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea80));
        EXPECT(0x9c, gbc.readMem(0xea81));
        // CB 9C 0003
        gbc.setState(0x5e22, 0x71c8, 0xc9d0, 0x3b87, 0x41f4, 0x75d9, 0x0, 0x0);
        gbc.writeMem(0x5e22, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x71c8, gbc.sp());
        EXPECT(0x5e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0004
        gbc.setState(0x37f9, 0x10c1, 0xe80, 0x7fab, 0x99b6, 0x1bd9, 0x0, 0x0);
        gbc.writeMem(0x37f9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x10c1, gbc.sp());
        EXPECT(0x37fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0005
        gbc.setState(0xbf7, 0xd6dc, 0xe2d0, 0x9b71, 0x67de, 0x513c, 0x1, 0x1);
        gbc.writeMem(0xbf7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd6dc, gbc.sp());
        EXPECT(0xbf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0006
        gbc.setState(0x742f, 0x3acb, 0x1d0, 0xea49, 0x2ee9, 0x5433, 0x1, 0x1);
        gbc.writeMem(0x742f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3acb, gbc.sp());
        EXPECT(0x7431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0007
        gbc.setState(0x913d, 0x341e, 0xdff0, 0x10ab, 0x6721, 0x2a25, 0x0, 0x1);
        gbc.writeMem(0x913d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x341e, gbc.sp());
        EXPECT(0x913f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x913d));
        EXPECT(0x9c, gbc.readMem(0x913e));
        // CB 9C 0008
        gbc.setState(0xc35e, 0xe285, 0xbb90, 0xe496, 0xe23e, 0x9124, 0x1, 0x0);
        gbc.writeMem(0xc35e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe285, gbc.sp());
        EXPECT(0xc360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc35e));
        EXPECT(0x9c, gbc.readMem(0xc35f));
        // CB 9C 0009
        gbc.setState(0xa54e, 0x2ac0, 0x2140, 0xe3c6, 0xe4f6, 0x8400, 0x0, 0x1);
        gbc.writeMem(0xa54e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2ac0, gbc.sp());
        EXPECT(0xa550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa54e));
        EXPECT(0x9c, gbc.readMem(0xa54f));
        // CB 9C 000A
        gbc.setState(0x4d83, 0x6fc, 0x93e0, 0xf897, 0x6813, 0xe5ee, 0x1, 0x1);
        gbc.writeMem(0x4d83, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6fc, gbc.sp());
        EXPECT(0x4d85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 000B
        gbc.setState(0x221a, 0x5f25, 0xe560, 0x937f, 0x6177, 0x18a, 0x0, 0x0);
        gbc.writeMem(0x221a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5f25, gbc.sp());
        EXPECT(0x221c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 000C
        gbc.setState(0xa867, 0xf2c1, 0x35d0, 0x4b12, 0x933b, 0x4e9a, 0x1, 0x0);
        gbc.writeMem(0xa867, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf2c1, gbc.sp());
        EXPECT(0xa869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa867));
        EXPECT(0x9c, gbc.readMem(0xa868));
        // CB 9C 000D
        gbc.setState(0x4e52, 0x6dd3, 0xf3f0, 0x5996, 0xd415, 0x5d3a, 0x0, 0x0);
        gbc.writeMem(0x4e52, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6dd3, gbc.sp());
        EXPECT(0x4e54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 000E
        gbc.setState(0x8217, 0xf05c, 0xf200, 0x4166, 0xe81c, 0xc13a, 0x0, 0x1);
        gbc.writeMem(0x8217, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf05c, gbc.sp());
        EXPECT(0x8219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8217));
        EXPECT(0x9c, gbc.readMem(0x8218));
        // CB 9C 000F
        gbc.setState(0x763d, 0xe009, 0xb320, 0x2de3, 0xf013, 0x8ffa, 0x1, 0x1);
        gbc.writeMem(0x763d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe009, gbc.sp());
        EXPECT(0x763f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0010
        gbc.setState(0x4318, 0xa66, 0xf400, 0x9385, 0x1612, 0xb8f3, 0x1, 0x0);
        gbc.writeMem(0x4318, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa66, gbc.sp());
        EXPECT(0x431a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0011
        gbc.setState(0x283a, 0x2914, 0xa6f0, 0xe73b, 0xae29, 0x4d03, 0x0, 0x0);
        gbc.writeMem(0x283a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2914, gbc.sp());
        EXPECT(0x283c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0012
        gbc.setState(0xb120, 0xf6f9, 0x4cc0, 0x4f1d, 0xefa8, 0xf2ea, 0x1, 0x0);
        gbc.writeMem(0xb120, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf6f9, gbc.sp());
        EXPECT(0xb122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb120));
        EXPECT(0x9c, gbc.readMem(0xb121));
        // CB 9C 0013
        gbc.setState(0xcb6b, 0xe95e, 0x11a0, 0xa7ed, 0xc3ac, 0xdc96, 0x1, 0x0);
        gbc.writeMem(0xcb6b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe95e, gbc.sp());
        EXPECT(0xcb6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb6b));
        EXPECT(0x9c, gbc.readMem(0xcb6c));
        // CB 9C 0014
        gbc.setState(0x7c24, 0x8a31, 0x8200, 0x32ee, 0x309a, 0xacc5, 0x0, 0x1);
        gbc.writeMem(0x7c24, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8a31, gbc.sp());
        EXPECT(0x7c26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0015
        gbc.setState(0x6c37, 0x4226, 0x7be0, 0xe73b, 0x451b, 0xfff, 0x0, 0x1);
        gbc.writeMem(0x6c37, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4226, gbc.sp());
        EXPECT(0x6c39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0016
        gbc.setState(0x13f, 0xfa58, 0xcb40, 0xa7aa, 0x6bcc, 0x38e7, 0x0, 0x1);
        gbc.writeMem(0x13f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xfa58, gbc.sp());
        EXPECT(0x141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0017
        gbc.setState(0xd9f5, 0xa12f, 0x66c0, 0x70cf, 0x2d1b, 0xcb29, 0x1, 0x1);
        gbc.writeMem(0xd9f5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa12f, gbc.sp());
        EXPECT(0xd9f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9f5));
        EXPECT(0x9c, gbc.readMem(0xd9f6));
        // CB 9C 0018
        gbc.setState(0x18d9, 0xeaa, 0x5840, 0x3fab, 0x17d0, 0x2d81, 0x0, 0x0);
        gbc.writeMem(0x18d9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xeaa, gbc.sp());
        EXPECT(0x18db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0019
        gbc.setState(0x3651, 0xee0d, 0x3f00, 0x1a08, 0xb67c, 0x6f71, 0x1, 0x1);
        gbc.writeMem(0x3651, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xee0d, gbc.sp());
        EXPECT(0x3653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 001A
        gbc.setState(0xe4a9, 0x90c2, 0xd2a0, 0x8ea6, 0x4ff2, 0xb83a, 0x0, 0x1);
        gbc.writeMem(0xe4a9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x90c2, gbc.sp());
        EXPECT(0xe4ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a9));
        EXPECT(0x9c, gbc.readMem(0xe4aa));
        // CB 9C 001B
        gbc.setState(0xab14, 0x6c0c, 0x74f0, 0x3457, 0x71ec, 0x1939, 0x1, 0x1);
        gbc.writeMem(0xab14, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6c0c, gbc.sp());
        EXPECT(0xab16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab14));
        EXPECT(0x9c, gbc.readMem(0xab15));
        // CB 9C 001C
        gbc.setState(0x5e5a, 0xa708, 0x55d0, 0x8f5f, 0xdca7, 0x5ed7, 0x1, 0x1);
        gbc.writeMem(0x5e5a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa708, gbc.sp());
        EXPECT(0x5e5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 001D
        gbc.setState(0xa604, 0x5402, 0x3a40, 0xcf79, 0x8e31, 0xaf2d, 0x0, 0x1);
        gbc.writeMem(0xa604, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5402, gbc.sp());
        EXPECT(0xa606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa604));
        EXPECT(0x9c, gbc.readMem(0xa605));
        // CB 9C 001E
        gbc.setState(0xd89e, 0x489, 0xfa80, 0x3ce2, 0x8e63, 0xd5d5, 0x0, 0x0);
        gbc.writeMem(0xd89e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x489, gbc.sp());
        EXPECT(0xd8a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd89e));
        EXPECT(0x9c, gbc.readMem(0xd89f));
        // CB 9C 001F
        gbc.setState(0xcbe, 0x314c, 0xa660, 0x3218, 0xe924, 0xc7c8, 0x1, 0x1);
        gbc.writeMem(0xcbe, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x314c, gbc.sp());
        EXPECT(0xcc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0020
        gbc.setState(0xcfcc, 0x8934, 0x57c0, 0xb292, 0xa2af, 0xb5a6, 0x1, 0x0);
        gbc.writeMem(0xcfcc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8934, gbc.sp());
        EXPECT(0xcfce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfcc));
        EXPECT(0x9c, gbc.readMem(0xcfcd));
        // CB 9C 0021
        gbc.setState(0x1237, 0xfd02, 0xcdf0, 0x9587, 0x309e, 0x9960, 0x1, 0x1);
        gbc.writeMem(0x1237, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfd02, gbc.sp());
        EXPECT(0x1239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0023
        gbc.setState(0x2156, 0x2664, 0x3ce0, 0xee05, 0xf86e, 0x7bc0, 0x0, 0x0);
        gbc.writeMem(0x2156, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2664, gbc.sp());
        EXPECT(0x2158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0025
        gbc.setState(0x51f, 0xb3c7, 0x3ec0, 0x534b, 0x244c, 0xddb9, 0x0, 0x1);
        gbc.writeMem(0x51f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb3c7, gbc.sp());
        EXPECT(0x521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0026
        gbc.setState(0xdfd4, 0xa6b0, 0x53f0, 0xe2d2, 0xc6f2, 0x408c, 0x0, 0x1);
        gbc.writeMem(0xdfd4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa6b0, gbc.sp());
        EXPECT(0xdfd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfd4));
        EXPECT(0x9c, gbc.readMem(0xdfd5));
        // CB 9C 0027
        gbc.setState(0xe865, 0xee06, 0x5f80, 0x9211, 0xa4b7, 0x46d8, 0x1, 0x1);
        gbc.writeMem(0xe865, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xee06, gbc.sp());
        EXPECT(0xe867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe865));
        EXPECT(0x9c, gbc.readMem(0xe866));
        // CB 9C 0028
        gbc.setState(0x5e0d, 0x9f4d, 0x5fe0, 0x1211, 0x973b, 0x2218, 0x1, 0x0);
        gbc.writeMem(0x5e0d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9f4d, gbc.sp());
        EXPECT(0x5e0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0029
        gbc.setState(0x90cd, 0x89bc, 0x7310, 0xe7a0, 0x7704, 0x5ff1, 0x1, 0x0);
        gbc.writeMem(0x90cd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x89bc, gbc.sp());
        EXPECT(0x90cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90cd));
        EXPECT(0x9c, gbc.readMem(0x90ce));
        // CB 9C 002A
        gbc.setState(0xc2de, 0x2c13, 0x4370, 0xfe91, 0xe30a, 0x9457, 0x1, 0x0);
        gbc.writeMem(0xc2de, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2c13, gbc.sp());
        EXPECT(0xc2e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2de));
        EXPECT(0x9c, gbc.readMem(0xc2df));
        // CB 9C 002B
        gbc.setState(0x285c, 0xeb8d, 0x61e0, 0xe168, 0x3d1, 0x6cd3, 0x1, 0x0);
        gbc.writeMem(0x285c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xeb8d, gbc.sp());
        EXPECT(0x285e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 002C
        gbc.setState(0x4af3, 0xb150, 0xe060, 0x2e73, 0x6e01, 0xc40d, 0x0, 0x0);
        gbc.writeMem(0x4af3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb150, gbc.sp());
        EXPECT(0x4af5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 002D
        gbc.setState(0x876d, 0x6218, 0x2120, 0x3973, 0x95f7, 0x5b47, 0x1, 0x1);
        gbc.writeMem(0x876d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6218, gbc.sp());
        EXPECT(0x876f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x876d));
        EXPECT(0x9c, gbc.readMem(0x876e));
        // CB 9C 002E
        gbc.setState(0x24dc, 0x76e4, 0x6730, 0xd4a6, 0x586b, 0x9ba2, 0x0, 0x0);
        gbc.writeMem(0x24dc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x76e4, gbc.sp());
        EXPECT(0x24de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 002F
        gbc.setState(0xd9d3, 0xa05e, 0x9d80, 0xfb4a, 0xa08c, 0x7842, 0x0, 0x1);
        gbc.writeMem(0xd9d3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa05e, gbc.sp());
        EXPECT(0xd9d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d3));
        EXPECT(0x9c, gbc.readMem(0xd9d4));
        // CB 9C 0030
        gbc.setState(0xd6fd, 0x1b1f, 0x3290, 0x4a91, 0x195c, 0x3428, 0x0, 0x0);
        gbc.writeMem(0xd6fd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1b1f, gbc.sp());
        EXPECT(0xd6ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6fd));
        EXPECT(0x9c, gbc.readMem(0xd6fe));
        // CB 9C 0031
        gbc.setState(0xa90c, 0x5a1d, 0x4c00, 0x1886, 0xa325, 0x51a5, 0x0, 0x1);
        gbc.writeMem(0xa90c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5a1d, gbc.sp());
        EXPECT(0xa90e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa90c));
        EXPECT(0x9c, gbc.readMem(0xa90d));
        // CB 9C 0032
        gbc.setState(0xbc4a, 0xc9ab, 0x2a40, 0xc17e, 0x8f58, 0x8107, 0x1, 0x0);
        gbc.writeMem(0xbc4a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc9ab, gbc.sp());
        EXPECT(0xbc4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc4a));
        EXPECT(0x9c, gbc.readMem(0xbc4b));
        // CB 9C 0033
        gbc.setState(0xe73a, 0x8861, 0x5570, 0xfe0c, 0x31d6, 0xaad, 0x1, 0x1);
        gbc.writeMem(0xe73a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8861, gbc.sp());
        EXPECT(0xe73c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe73a));
        EXPECT(0x9c, gbc.readMem(0xe73b));
        // CB 9C 0034
        gbc.setState(0xc444, 0x946f, 0x8540, 0xf125, 0x952a, 0xe9e4, 0x1, 0x1);
        gbc.writeMem(0xc444, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x946f, gbc.sp());
        EXPECT(0xc446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc444));
        EXPECT(0x9c, gbc.readMem(0xc445));
        // CB 9C 0035
        gbc.setState(0x68b9, 0xf09, 0x8eb0, 0x6354, 0xf8ef, 0xcb93, 0x1, 0x1);
        gbc.writeMem(0x68b9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf09, gbc.sp());
        EXPECT(0x68bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0036
        gbc.setState(0x331b, 0x8973, 0x3420, 0xaae1, 0x47c, 0x92ed, 0x1, 0x1);
        gbc.writeMem(0x331b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8973, gbc.sp());
        EXPECT(0x331d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0039
        gbc.setState(0x9c3d, 0x56cb, 0xb960, 0xa4a4, 0xa72d, 0x304c, 0x1, 0x1);
        gbc.writeMem(0x9c3d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x56cb, gbc.sp());
        EXPECT(0x9c3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c3d));
        EXPECT(0x9c, gbc.readMem(0x9c3e));
        // CB 9C 003A
        gbc.setState(0x1c15, 0x417d, 0x5a00, 0x9244, 0x9fd6, 0xacbb, 0x1, 0x0);
        gbc.writeMem(0x1c15, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x417d, gbc.sp());
        EXPECT(0x1c17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 003B
        gbc.setState(0x11b3, 0x7241, 0xa340, 0x1f67, 0xfe00, 0x5e48, 0x1, 0x1);
        gbc.writeMem(0x11b3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7241, gbc.sp());
        EXPECT(0x11b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 003C
        gbc.setState(0xbe7f, 0x8ffa, 0x4a50, 0x39a3, 0x6e66, 0x1518, 0x1, 0x1);
        gbc.writeMem(0xbe7f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8ffa, gbc.sp());
        EXPECT(0xbe81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe7f));
        EXPECT(0x9c, gbc.readMem(0xbe80));
        // CB 9C 003E
        gbc.setState(0x2526, 0x43ac, 0x850, 0xb031, 0x1217, 0xd403, 0x1, 0x0);
        gbc.writeMem(0x2526, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x43ac, gbc.sp());
        EXPECT(0x2528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 003F
        gbc.setState(0xab9e, 0xfad9, 0xe880, 0xd3c1, 0x47fe, 0xb411, 0x1, 0x0);
        gbc.writeMem(0xab9e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xfad9, gbc.sp());
        EXPECT(0xaba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab9e));
        EXPECT(0x9c, gbc.readMem(0xab9f));
        // CB 9C 0040
        gbc.setState(0xd8b2, 0x8eaa, 0x3860, 0x4192, 0x4d5b, 0xf198, 0x0, 0x1);
        gbc.writeMem(0xd8b2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8eaa, gbc.sp());
        EXPECT(0xd8b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8b2));
        EXPECT(0x9c, gbc.readMem(0xd8b3));
        // CB 9C 0041
        gbc.setState(0xe58a, 0x7a0c, 0x7fb0, 0x7d1f, 0xdfbb, 0xfbd1, 0x1, 0x0);
        gbc.writeMem(0xe58a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7a0c, gbc.sp());
        EXPECT(0xe58c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe58a));
        EXPECT(0x9c, gbc.readMem(0xe58b));
        // CB 9C 0042
        gbc.setState(0xc43b, 0xf5ef, 0xeb30, 0x91d8, 0x6392, 0x4a96, 0x1, 0x0);
        gbc.writeMem(0xc43b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf5ef, gbc.sp());
        EXPECT(0xc43d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc43b));
        EXPECT(0x9c, gbc.readMem(0xc43c));
        // CB 9C 0043
        gbc.setState(0x4a99, 0x836, 0xa0e0, 0xfa9, 0xa758, 0x58f, 0x0, 0x1);
        gbc.writeMem(0x4a99, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x836, gbc.sp());
        EXPECT(0x4a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0044
        gbc.setState(0xe51a, 0xb06a, 0x4d30, 0x801c, 0x1c19, 0x11ee, 0x0, 0x1);
        gbc.writeMem(0xe51a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb06a, gbc.sp());
        EXPECT(0xe51c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe51a));
        EXPECT(0x9c, gbc.readMem(0xe51b));
        // CB 9C 0045
        gbc.setState(0xb414, 0x336d, 0xf9d0, 0x6e68, 0xdef, 0xc04e, 0x0, 0x0);
        gbc.writeMem(0xb414, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x336d, gbc.sp());
        EXPECT(0xb416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb414));
        EXPECT(0x9c, gbc.readMem(0xb415));
        // CB 9C 0046
        gbc.setState(0x746b, 0x2758, 0xdff0, 0x2a84, 0xbf07, 0xff67, 0x0, 0x0);
        gbc.writeMem(0x746b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2758, gbc.sp());
        EXPECT(0x746d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0048
        gbc.setState(0x3b3d, 0x623c, 0x9770, 0xecba, 0xc650, 0x8248, 0x1, 0x0);
        gbc.writeMem(0x3b3d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x623c, gbc.sp());
        EXPECT(0x3b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0049
        gbc.setState(0xd7ed, 0x590e, 0x4b70, 0x48d3, 0xbfed, 0x2eb7, 0x0, 0x0);
        gbc.writeMem(0xd7ed, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x590e, gbc.sp());
        EXPECT(0xd7ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7ed));
        EXPECT(0x9c, gbc.readMem(0xd7ee));
        // CB 9C 004A
        gbc.setState(0x7908, 0xdb56, 0xfe40, 0x1fc1, 0x2887, 0x6630, 0x1, 0x1);
        gbc.writeMem(0x7908, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xdb56, gbc.sp());
        EXPECT(0x790a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 004B
        gbc.setState(0x8af6, 0x8661, 0xc340, 0x8feb, 0x1e58, 0x4b27, 0x1, 0x0);
        gbc.writeMem(0x8af6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8661, gbc.sp());
        EXPECT(0x8af8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8af6));
        EXPECT(0x9c, gbc.readMem(0x8af7));
        // CB 9C 004C
        gbc.setState(0xed77, 0xdbf9, 0x2820, 0x8c82, 0x896, 0x93c4, 0x0, 0x1);
        gbc.writeMem(0xed77, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdbf9, gbc.sp());
        EXPECT(0xed79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed77));
        EXPECT(0x9c, gbc.readMem(0xed78));
        // CB 9C 004D
        gbc.setState(0x786d, 0xb9e3, 0x31c0, 0x8fd1, 0x2d71, 0x657c, 0x1, 0x0);
        gbc.writeMem(0x786d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb9e3, gbc.sp());
        EXPECT(0x786f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 004E
        gbc.setState(0x3ba2, 0x33b, 0x2380, 0x5edd, 0xccfe, 0x4ab4, 0x0, 0x1);
        gbc.writeMem(0x3ba2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x33b, gbc.sp());
        EXPECT(0x3ba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 004F
        gbc.setState(0x4242, 0xc572, 0xcec0, 0x7ac2, 0xe13f, 0xe884, 0x0, 0x0);
        gbc.writeMem(0x4242, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc572, gbc.sp());
        EXPECT(0x4244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0050
        gbc.setState(0xde0c, 0x9083, 0x44e0, 0xa726, 0x511e, 0x217f, 0x0, 0x1);
        gbc.writeMem(0xde0c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9083, gbc.sp());
        EXPECT(0xde0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde0c));
        EXPECT(0x9c, gbc.readMem(0xde0d));
        // CB 9C 0051
        gbc.setState(0x2cd4, 0x5551, 0xc70, 0xe691, 0x2156, 0xf6a0, 0x1, 0x0);
        gbc.writeMem(0x2cd4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5551, gbc.sp());
        EXPECT(0x2cd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0052
        gbc.setState(0x509e, 0x2540, 0x1270, 0x2edc, 0xfd7f, 0xdc11, 0x1, 0x0);
        gbc.writeMem(0x509e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2540, gbc.sp());
        EXPECT(0x50a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0053
        gbc.setState(0x95f5, 0xf987, 0x60f0, 0x47a4, 0xe145, 0xfe66, 0x0, 0x1);
        gbc.writeMem(0x95f5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf987, gbc.sp());
        EXPECT(0x95f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f5));
        EXPECT(0x9c, gbc.readMem(0x95f6));
        // CB 9C 0054
        gbc.setState(0x9aa4, 0xff1e, 0x1670, 0x54ef, 0xddd0, 0xd160, 0x1, 0x1);
        gbc.writeMem(0x9aa4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xff1e, gbc.sp());
        EXPECT(0x9aa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aa4));
        EXPECT(0x9c, gbc.readMem(0x9aa5));
        // CB 9C 0055
        gbc.setState(0x5e6, 0xf7dd, 0xc3b0, 0x485d, 0xc892, 0xf8fc, 0x1, 0x0);
        gbc.writeMem(0x5e6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf7dd, gbc.sp());
        EXPECT(0x5e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0056
        gbc.setState(0x5eef, 0x5ba4, 0x5d80, 0xd5cb, 0x9550, 0x9fb1, 0x0, 0x1);
        gbc.writeMem(0x5eef, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5ba4, gbc.sp());
        EXPECT(0x5ef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0057
        gbc.setState(0x4d1d, 0x3f4a, 0x6140, 0x85c1, 0x6775, 0xd348, 0x0, 0x0);
        gbc.writeMem(0x4d1d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3f4a, gbc.sp());
        EXPECT(0x4d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0058
        gbc.setState(0x7f57, 0x21b3, 0x4bc0, 0xe491, 0xb112, 0x111d, 0x1, 0x1);
        gbc.writeMem(0x7f57, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x21b3, gbc.sp());
        EXPECT(0x7f59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0059
        gbc.setState(0x7c, 0x4a3, 0x7780, 0xba0f, 0x5be6, 0x2dd6, 0x1, 0x1);
        gbc.writeMem(0x7c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4a3, gbc.sp());
        EXPECT(0x7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 005A
        gbc.setState(0x4ceb, 0x508e, 0x3730, 0x9065, 0x53a8, 0xb828, 0x0, 0x1);
        gbc.writeMem(0x4ceb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x508e, gbc.sp());
        EXPECT(0x4ced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 005B
        gbc.setState(0x5c82, 0xb62e, 0x2a30, 0x454f, 0x84a, 0xeccf, 0x0, 0x1);
        gbc.writeMem(0x5c82, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb62e, gbc.sp());
        EXPECT(0x5c84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 005C
        gbc.setState(0xbca9, 0x9354, 0x2430, 0x17fb, 0xe249, 0x3c29, 0x0, 0x0);
        gbc.writeMem(0xbca9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9354, gbc.sp());
        EXPECT(0xbcab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbca9));
        EXPECT(0x9c, gbc.readMem(0xbcaa));
        // CB 9C 005D
        gbc.setState(0x17ee, 0xd7f4, 0xb6b0, 0xf225, 0x9ec7, 0x7ff1, 0x0, 0x0);
        gbc.writeMem(0x17ee, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd7f4, gbc.sp());
        EXPECT(0x17f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 005E
        gbc.setState(0xc23d, 0x1805, 0x9bd0, 0x61a2, 0x29d2, 0xe023, 0x0, 0x1);
        gbc.writeMem(0xc23d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1805, gbc.sp());
        EXPECT(0xc23f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc23d));
        EXPECT(0x9c, gbc.readMem(0xc23e));
        // CB 9C 005F
        gbc.setState(0xc783, 0xc83b, 0xe310, 0x7fe2, 0xde53, 0xaff0, 0x0, 0x1);
        gbc.writeMem(0xc783, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc83b, gbc.sp());
        EXPECT(0xc785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc783));
        EXPECT(0x9c, gbc.readMem(0xc784));
        // CB 9C 0060
        gbc.setState(0xc59b, 0xd3fb, 0x8530, 0x4af9, 0xf691, 0xade3, 0x1, 0x1);
        gbc.writeMem(0xc59b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd3fb, gbc.sp());
        EXPECT(0xc59d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc59b));
        EXPECT(0x9c, gbc.readMem(0xc59c));
        // CB 9C 0061
        gbc.setState(0xa888, 0x5d15, 0x3110, 0x9d49, 0xe2a7, 0xc29, 0x1, 0x1);
        gbc.writeMem(0xa888, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5d15, gbc.sp());
        EXPECT(0xa88a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa888));
        EXPECT(0x9c, gbc.readMem(0xa889));
        // CB 9C 0062
        gbc.setState(0x26f0, 0xec0d, 0x29e0, 0xf8c7, 0x97ac, 0xab1c, 0x1, 0x0);
        gbc.writeMem(0x26f0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xec0d, gbc.sp());
        EXPECT(0x26f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0063
        gbc.setState(0x8a07, 0xd489, 0x1390, 0xad7d, 0xfdd9, 0x3c79, 0x1, 0x0);
        gbc.writeMem(0x8a07, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd489, gbc.sp());
        EXPECT(0x8a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a07));
        EXPECT(0x9c, gbc.readMem(0x8a08));
        // CB 9C 0064
        gbc.setState(0x98f0, 0xe454, 0xae70, 0x85e7, 0xb5c4, 0x8429, 0x1, 0x1);
        gbc.writeMem(0x98f0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe454, gbc.sp());
        EXPECT(0x98f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f0));
        EXPECT(0x9c, gbc.readMem(0x98f1));
        // CB 9C 0065
        gbc.setState(0x1ffe, 0x45d8, 0x8100, 0xe490, 0xd50d, 0xf65b, 0x0, 0x1);
        gbc.writeMem(0x1ffe, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x45d8, gbc.sp());
        EXPECT(0x2000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0067
        gbc.setState(0x6cdf, 0x33c8, 0xf450, 0x3a40, 0x89fb, 0x61e7, 0x0, 0x0);
        gbc.writeMem(0x6cdf, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x33c8, gbc.sp());
        EXPECT(0x6ce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0068
        gbc.setState(0xc338, 0x242c, 0x65a0, 0x665f, 0xeb6b, 0xe4fe, 0x0, 0x0);
        gbc.writeMem(0xc338, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x242c, gbc.sp());
        EXPECT(0xc33a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc338));
        EXPECT(0x9c, gbc.readMem(0xc339));
        // CB 9C 0069
        gbc.setState(0xd02, 0xe418, 0x47a0, 0x1498, 0xb298, 0xb649, 0x0, 0x1);
        gbc.writeMem(0xd02, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe418, gbc.sp());
        EXPECT(0xd04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 006A
        gbc.setState(0x99e6, 0x9d8, 0xe20, 0x6ab8, 0x1036, 0x6556, 0x1, 0x1);
        gbc.writeMem(0x99e6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9d8, gbc.sp());
        EXPECT(0x99e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99e6));
        EXPECT(0x9c, gbc.readMem(0x99e7));
        // CB 9C 006B
        gbc.setState(0x11a1, 0x4dba, 0x16e0, 0xbcd2, 0x57f0, 0x47b6, 0x1, 0x0);
        gbc.writeMem(0x11a1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4dba, gbc.sp());
        EXPECT(0x11a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 006C
        gbc.setState(0x7fb3, 0x796b, 0x5de0, 0x9fb1, 0x6a7f, 0x2d68, 0x0, 0x0);
        gbc.writeMem(0x7fb3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x796b, gbc.sp());
        EXPECT(0x7fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 006D
        gbc.setState(0x4078, 0x5cb0, 0x5410, 0xe010, 0x86ea, 0x7a84, 0x0, 0x0);
        gbc.writeMem(0x4078, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5cb0, gbc.sp());
        EXPECT(0x407a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 006E
        gbc.setState(0xb12f, 0x6972, 0x58f0, 0x7667, 0xdbf8, 0xdea2, 0x1, 0x0);
        gbc.writeMem(0xb12f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6972, gbc.sp());
        EXPECT(0xb131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb12f));
        EXPECT(0x9c, gbc.readMem(0xb130));
        // CB 9C 006F
        gbc.setState(0x1f75, 0x9cfa, 0x6030, 0x1f33, 0x3cbf, 0x9b3d, 0x0, 0x0);
        gbc.writeMem(0x1f75, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9cfa, gbc.sp());
        EXPECT(0x1f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0070
        gbc.setState(0x89d2, 0x3d8a, 0x9a50, 0xa573, 0xfd13, 0xd57e, 0x1, 0x1);
        gbc.writeMem(0x89d2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3d8a, gbc.sp());
        EXPECT(0x89d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89d2));
        EXPECT(0x9c, gbc.readMem(0x89d3));
        // CB 9C 0071
        gbc.setState(0x9b, 0x1613, 0xab80, 0x9182, 0x949b, 0xe554, 0x1, 0x0);
        gbc.writeMem(0x9b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1613, gbc.sp());
        EXPECT(0x9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0072
        gbc.setState(0x2fbe, 0x249, 0xe590, 0xde3b, 0x1655, 0xfc50, 0x1, 0x0);
        gbc.writeMem(0x2fbe, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x249, gbc.sp());
        EXPECT(0x2fc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0073
        gbc.setState(0xc91, 0xdb28, 0xf640, 0x1520, 0xea22, 0x399, 0x0, 0x0);
        gbc.writeMem(0xc91, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xdb28, gbc.sp());
        EXPECT(0xc93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0074
        gbc.setState(0x7fe7, 0xb618, 0x6820, 0x4568, 0xd469, 0x5c2, 0x1, 0x0);
        gbc.writeMem(0x7fe7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb618, gbc.sp());
        EXPECT(0x7fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0075
        gbc.setState(0xc1c0, 0xc941, 0x7960, 0xafdb, 0x3dc7, 0x9b0c, 0x0, 0x0);
        gbc.writeMem(0xc1c0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc941, gbc.sp());
        EXPECT(0xc1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c0));
        EXPECT(0x9c, gbc.readMem(0xc1c1));
        // CB 9C 0076
        gbc.setState(0x7b75, 0xf81, 0x2dc0, 0x7999, 0xb274, 0x5f7f, 0x0, 0x0);
        gbc.writeMem(0x7b75, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf81, gbc.sp());
        EXPECT(0x7b77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0077
        gbc.setState(0xc4cb, 0x36f3, 0xd2b0, 0x2ec4, 0x340e, 0x92f6, 0x1, 0x0);
        gbc.writeMem(0xc4cb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x36f3, gbc.sp());
        EXPECT(0xc4cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4cb));
        EXPECT(0x9c, gbc.readMem(0xc4cc));
        // CB 9C 0078
        gbc.setState(0x784c, 0xad2b, 0x8770, 0xb44d, 0xf9f8, 0xc7f6, 0x1, 0x0);
        gbc.writeMem(0x784c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xad2b, gbc.sp());
        EXPECT(0x784e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0079
        gbc.setState(0x3da7, 0x913, 0xd200, 0xb7b5, 0x7fb1, 0x3f32, 0x1, 0x1);
        gbc.writeMem(0x3da7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x913, gbc.sp());
        EXPECT(0x3da9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 007B
        gbc.setState(0xc381, 0xc834, 0x6db0, 0x8fb7, 0xb203, 0xcb9e, 0x0, 0x0);
        gbc.writeMem(0xc381, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc834, gbc.sp());
        EXPECT(0xc383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc381));
        EXPECT(0x9c, gbc.readMem(0xc382));
        // CB 9C 007C
        gbc.setState(0xcb2f, 0x79a5, 0x3ef0, 0xf15b, 0xccb8, 0xe3ca, 0x0, 0x1);
        gbc.writeMem(0xcb2f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x79a5, gbc.sp());
        EXPECT(0xcb31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb2f));
        EXPECT(0x9c, gbc.readMem(0xcb30));
        // CB 9C 007D
        gbc.setState(0xe466, 0x1eaf, 0xc8a0, 0xd6aa, 0x8ffc, 0x6cc6, 0x1, 0x1);
        gbc.writeMem(0xe466, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1eaf, gbc.sp());
        EXPECT(0xe468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe466));
        EXPECT(0x9c, gbc.readMem(0xe467));
        // CB 9C 007E
        gbc.setState(0x284a, 0xea4b, 0x97e0, 0x4a1a, 0x4501, 0x1c5d, 0x0, 0x0);
        gbc.writeMem(0x284a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xea4b, gbc.sp());
        EXPECT(0x284c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 007F
        gbc.setState(0x9608, 0xd7d4, 0xae50, 0x1589, 0x677c, 0x120d, 0x0, 0x1);
        gbc.writeMem(0x9608, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd7d4, gbc.sp());
        EXPECT(0x960a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9608));
        EXPECT(0x9c, gbc.readMem(0x9609));
        // CB 9C 0081
        gbc.setState(0xe37a, 0x1c60, 0xa6f0, 0x12ea, 0x1d84, 0x3bbc, 0x1, 0x0);
        gbc.writeMem(0xe37a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1c60, gbc.sp());
        EXPECT(0xe37c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe37a));
        EXPECT(0x9c, gbc.readMem(0xe37b));
        // CB 9C 0082
        gbc.setState(0x414, 0xde7e, 0x5030, 0x1cbe, 0xe8ea, 0x77b2, 0x1, 0x0);
        gbc.writeMem(0x414, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xde7e, gbc.sp());
        EXPECT(0x416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0083
        gbc.setState(0x62c3, 0x779c, 0x5da0, 0x14a7, 0xc048, 0xb71e, 0x0, 0x1);
        gbc.writeMem(0x62c3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x779c, gbc.sp());
        EXPECT(0x62c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0084
        gbc.setState(0xb1ac, 0x48ed, 0xd9f0, 0xf819, 0xd7b9, 0x6739, 0x0, 0x1);
        gbc.writeMem(0xb1ac, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x48ed, gbc.sp());
        EXPECT(0xb1ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ac));
        EXPECT(0x9c, gbc.readMem(0xb1ad));
        // CB 9C 0085
        gbc.setState(0x554c, 0x6f3b, 0x8490, 0x3633, 0x4bd1, 0x7e43, 0x0, 0x0);
        gbc.writeMem(0x554c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6f3b, gbc.sp());
        EXPECT(0x554e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0086
        gbc.setState(0x24db, 0xe074, 0x76e0, 0x1fd, 0x1efb, 0x202e, 0x1, 0x0);
        gbc.writeMem(0x24db, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe074, gbc.sp());
        EXPECT(0x24dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0087
        gbc.setState(0xdf7b, 0xb594, 0x7860, 0x782b, 0x3699, 0x98a4, 0x0, 0x0);
        gbc.writeMem(0xdf7b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb594, gbc.sp());
        EXPECT(0xdf7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf7b));
        EXPECT(0x9c, gbc.readMem(0xdf7c));
        // CB 9C 0088
        gbc.setState(0x5dc2, 0x617b, 0x6a0, 0x3f1a, 0x3fe1, 0xcd3b, 0x0, 0x0);
        gbc.writeMem(0x5dc2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x617b, gbc.sp());
        EXPECT(0x5dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0089
        gbc.setState(0xeb2b, 0x3d44, 0x8d80, 0x89de, 0x7daa, 0xd95b, 0x1, 0x0);
        gbc.writeMem(0xeb2b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3d44, gbc.sp());
        EXPECT(0xeb2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb2b));
        EXPECT(0x9c, gbc.readMem(0xeb2c));
        // CB 9C 008A
        gbc.setState(0xbb45, 0x134d, 0x4f00, 0x47b8, 0xf2ef, 0xd463, 0x0, 0x0);
        gbc.writeMem(0xbb45, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x134d, gbc.sp());
        EXPECT(0xbb47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb45));
        EXPECT(0x9c, gbc.readMem(0xbb46));
        // CB 9C 008B
        gbc.setState(0x8b32, 0xed48, 0x8540, 0x9f03, 0x2c37, 0xe3aa, 0x1, 0x0);
        gbc.writeMem(0x8b32, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xed48, gbc.sp());
        EXPECT(0x8b34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b32));
        EXPECT(0x9c, gbc.readMem(0x8b33));
        // CB 9C 008C
        gbc.setState(0xa4bb, 0x987, 0xbb30, 0xf6a, 0xa529, 0xffc6, 0x0, 0x1);
        gbc.writeMem(0xa4bb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x987, gbc.sp());
        EXPECT(0xa4bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4bb));
        EXPECT(0x9c, gbc.readMem(0xa4bc));
        // CB 9C 008D
        gbc.setState(0xb4ae, 0x6e1, 0x7db0, 0xf683, 0x7502, 0xd655, 0x1, 0x0);
        gbc.writeMem(0xb4ae, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6e1, gbc.sp());
        EXPECT(0xb4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ae));
        EXPECT(0x9c, gbc.readMem(0xb4af));
        // CB 9C 008E
        gbc.setState(0x59da, 0xb567, 0x5c30, 0xcb4a, 0xa6ce, 0x439d, 0x0, 0x0);
        gbc.writeMem(0x59da, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb567, gbc.sp());
        EXPECT(0x59dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 008F
        gbc.setState(0x860f, 0xde7b, 0x9a40, 0x3e23, 0xe1c1, 0x6c94, 0x1, 0x1);
        gbc.writeMem(0x860f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xde7b, gbc.sp());
        EXPECT(0x8611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x860f));
        EXPECT(0x9c, gbc.readMem(0x8610));
        // CB 9C 0090
        gbc.setState(0x9c21, 0xd7e8, 0x49e0, 0xc377, 0xca2a, 0xa702, 0x1, 0x0);
        gbc.writeMem(0x9c21, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd7e8, gbc.sp());
        EXPECT(0x9c23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c21));
        EXPECT(0x9c, gbc.readMem(0x9c22));
        // CB 9C 0091
        gbc.setState(0x5e08, 0xa29d, 0xf880, 0x805a, 0x9e8e, 0x5cc0, 0x1, 0x0);
        gbc.writeMem(0x5e08, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa29d, gbc.sp());
        EXPECT(0x5e0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0092
        gbc.setState(0x219d, 0x2df2, 0x3ef0, 0x6fa9, 0x2e1c, 0xfb4b, 0x1, 0x0);
        gbc.writeMem(0x219d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2df2, gbc.sp());
        EXPECT(0x219f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0093
        gbc.setState(0x4563, 0xfaaf, 0xc8d0, 0x6cd4, 0xdf0b, 0xbd6, 0x0, 0x0);
        gbc.writeMem(0x4563, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xfaaf, gbc.sp());
        EXPECT(0x4565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0094
        gbc.setState(0xcf79, 0x1c40, 0x38a0, 0xbf01, 0x3cc2, 0xc501, 0x0, 0x1);
        gbc.writeMem(0xcf79, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1c40, gbc.sp());
        EXPECT(0xcf7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf79));
        EXPECT(0x9c, gbc.readMem(0xcf7a));
        // CB 9C 0095
        gbc.setState(0x13f3, 0x2d5c, 0x5590, 0x825b, 0x38af, 0xce58, 0x1, 0x0);
        gbc.writeMem(0x13f3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2d5c, gbc.sp());
        EXPECT(0x13f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0097
        gbc.setState(0x516a, 0x6b07, 0x6e60, 0xe286, 0xf881, 0x79f0, 0x0, 0x0);
        gbc.writeMem(0x516a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6b07, gbc.sp());
        EXPECT(0x516c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0098
        gbc.setState(0x2c8a, 0x510b, 0x14a0, 0x39d2, 0x60ae, 0xc5c6, 0x1, 0x1);
        gbc.writeMem(0x2c8a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x510b, gbc.sp());
        EXPECT(0x2c8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0099
        gbc.setState(0xa470, 0x5f85, 0xb80, 0xd2e3, 0x9e44, 0x7d41, 0x1, 0x1);
        gbc.writeMem(0xa470, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5f85, gbc.sp());
        EXPECT(0xa472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa470));
        EXPECT(0x9c, gbc.readMem(0xa471));
        // CB 9C 009A
        gbc.setState(0x2725, 0xb993, 0x5030, 0xe85e, 0x2955, 0x730b, 0x1, 0x1);
        gbc.writeMem(0x2725, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb993, gbc.sp());
        EXPECT(0x2727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 009B
        gbc.setState(0xa3ce, 0x371d, 0x320, 0x8512, 0xd203, 0x9121, 0x0, 0x0);
        gbc.writeMem(0xa3ce, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x371d, gbc.sp());
        EXPECT(0xa3d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ce));
        EXPECT(0x9c, gbc.readMem(0xa3cf));
        // CB 9C 009C
        gbc.setState(0x80b0, 0x2eb, 0x9f20, 0xbbb3, 0x42b3, 0x1bac, 0x1, 0x0);
        gbc.writeMem(0x80b0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2eb, gbc.sp());
        EXPECT(0x80b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80b0));
        EXPECT(0x9c, gbc.readMem(0x80b1));
        // CB 9C 009D
        gbc.setState(0xc5ce, 0xfe6a, 0x5a50, 0x25be, 0x6d9a, 0x860c, 0x0, 0x0);
        gbc.writeMem(0xc5ce, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfe6a, gbc.sp());
        EXPECT(0xc5d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5ce));
        EXPECT(0x9c, gbc.readMem(0xc5cf));
        // CB 9C 009E
        gbc.setState(0xd2e2, 0xad70, 0x9390, 0x37b3, 0xdab2, 0x21db, 0x0, 0x1);
        gbc.writeMem(0xd2e2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xad70, gbc.sp());
        EXPECT(0xd2e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e2));
        EXPECT(0x9c, gbc.readMem(0xd2e3));
        // CB 9C 009F
        gbc.setState(0xb5d3, 0xca8a, 0x1790, 0xb163, 0x9fdb, 0x4bcc, 0x1, 0x0);
        gbc.writeMem(0xb5d3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xca8a, gbc.sp());
        EXPECT(0xb5d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5d3));
        EXPECT(0x9c, gbc.readMem(0xb5d4));
        // CB 9C 00A0
        gbc.setState(0x3d63, 0x2802, 0x9f20, 0x15e4, 0xc6ff, 0x6c10, 0x0, 0x1);
        gbc.writeMem(0x3d63, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2802, gbc.sp());
        EXPECT(0x3d65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 00A1
        gbc.setState(0x42c4, 0xb2a2, 0xc640, 0x2909, 0x4c11, 0xf79a, 0x0, 0x0);
        gbc.writeMem(0x42c4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb2a2, gbc.sp());
        EXPECT(0x42c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 00A2
        gbc.setState(0xdf4d, 0x7f10, 0x5f10, 0xbcab, 0x180c, 0xf671, 0x1, 0x1);
        gbc.writeMem(0xdf4d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7f10, gbc.sp());
        EXPECT(0xdf4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf4d));
        EXPECT(0x9c, gbc.readMem(0xdf4e));
        // CB 9C 00A3
        gbc.setState(0x988, 0xdc46, 0x6330, 0xb463, 0x78ee, 0xa1e0, 0x0, 0x0);
        gbc.writeMem(0x988, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xdc46, gbc.sp());
        EXPECT(0x98a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00A4
        gbc.setState(0x3732, 0x80a4, 0x2650, 0xb213, 0x428f, 0x29fc, 0x1, 0x1);
        gbc.writeMem(0x3732, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x80a4, gbc.sp());
        EXPECT(0x3734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00A5
        gbc.setState(0x2ff3, 0xb1c5, 0xc560, 0x3d7f, 0xe7a6, 0x5145, 0x0, 0x1);
        gbc.writeMem(0x2ff3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb1c5, gbc.sp());
        EXPECT(0x2ff5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 00A6
        gbc.setState(0x6899, 0x41c1, 0xf130, 0x398e, 0x3e35, 0x4486, 0x0, 0x0);
        gbc.writeMem(0x6899, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x41c1, gbc.sp());
        EXPECT(0x689b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00A7
        gbc.setState(0x1918, 0xa41, 0x81b0, 0x821f, 0xc5ad, 0x3400, 0x0, 0x0);
        gbc.writeMem(0x1918, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa41, gbc.sp());
        EXPECT(0x191a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00A8
        gbc.setState(0x31f4, 0x9091, 0x8ab0, 0x249b, 0x360c, 0x1e2f, 0x0, 0x0);
        gbc.writeMem(0x31f4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9091, gbc.sp());
        EXPECT(0x31f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00A9
        gbc.setState(0xbcbd, 0xe5aa, 0xb170, 0x56f2, 0x5b88, 0x4388, 0x0, 0x0);
        gbc.writeMem(0xbcbd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe5aa, gbc.sp());
        EXPECT(0xbcbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcbd));
        EXPECT(0x9c, gbc.readMem(0xbcbe));
        // CB 9C 00AA
        gbc.setState(0x1e6f, 0xa354, 0x8c30, 0x9c8, 0xc454, 0x8c06, 0x0, 0x1);
        gbc.writeMem(0x1e6f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa354, gbc.sp());
        EXPECT(0x1e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00AB
        gbc.setState(0x3321, 0xdcd4, 0x3c70, 0xdd85, 0x2978, 0x7eca, 0x1, 0x1);
        gbc.writeMem(0x3321, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdcd4, gbc.sp());
        EXPECT(0x3323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00AC
        gbc.setState(0xb0d, 0x2eaf, 0x3e40, 0xb89a, 0xf60d, 0x7665, 0x1, 0x0);
        gbc.writeMem(0xb0d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2eaf, gbc.sp());
        EXPECT(0xb0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 00AD
        gbc.setState(0x2ed1, 0x6646, 0x8990, 0xe3c1, 0x1d98, 0xa9b0, 0x0, 0x1);
        gbc.writeMem(0x2ed1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6646, gbc.sp());
        EXPECT(0x2ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00AF
        gbc.setState(0x8c8d, 0x1ae, 0xcc90, 0x5aec, 0xe5f4, 0xda5e, 0x1, 0x1);
        gbc.writeMem(0x8c8d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1ae, gbc.sp());
        EXPECT(0x8c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c8d));
        EXPECT(0x9c, gbc.readMem(0x8c8e));
        // CB 9C 00B0
        gbc.setState(0x46f7, 0xb5c4, 0xafd0, 0xf672, 0x6dbc, 0xb7d1, 0x1, 0x0);
        gbc.writeMem(0x46f7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb5c4, gbc.sp());
        EXPECT(0x46f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00B1
        gbc.setState(0xea5f, 0x3a0f, 0x60c0, 0x566b, 0x97ae, 0x6d0b, 0x1, 0x1);
        gbc.writeMem(0xea5f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3a0f, gbc.sp());
        EXPECT(0xea61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea5f));
        EXPECT(0x9c, gbc.readMem(0xea60));
        // CB 9C 00B2
        gbc.setState(0x860d, 0x8e56, 0x5190, 0x4dc2, 0x26a, 0x5ddb, 0x0, 0x0);
        gbc.writeMem(0x860d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8e56, gbc.sp());
        EXPECT(0x860f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x860d));
        EXPECT(0x9c, gbc.readMem(0x860e));
        // CB 9C 00B3
        gbc.setState(0x8e18, 0x5d73, 0x33b0, 0xbbb4, 0xf090, 0xa910, 0x0, 0x0);
        gbc.writeMem(0x8e18, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5d73, gbc.sp());
        EXPECT(0x8e1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e18));
        EXPECT(0x9c, gbc.readMem(0x8e19));
        // CB 9C 00B4
        gbc.setState(0x2b8f, 0x6292, 0xa190, 0xa174, 0x13d8, 0x86eb, 0x1, 0x0);
        gbc.writeMem(0x2b8f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6292, gbc.sp());
        EXPECT(0x2b91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00B5
        gbc.setState(0xc04d, 0xb9ee, 0xb780, 0x7eab, 0x1302, 0xcf3c, 0x1, 0x1);
        gbc.writeMem(0xc04d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb9ee, gbc.sp());
        EXPECT(0xc04f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc04d));
        EXPECT(0x9c, gbc.readMem(0xc04e));
        // CB 9C 00B6
        gbc.setState(0x1bc3, 0xf8d3, 0xd9d0, 0x7a19, 0x140f, 0xaff3, 0x0, 0x0);
        gbc.writeMem(0x1bc3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf8d3, gbc.sp());
        EXPECT(0x1bc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00B7
        gbc.setState(0x9b4e, 0x3850, 0xdce0, 0x82fa, 0xdf5e, 0x91bd, 0x1, 0x1);
        gbc.writeMem(0x9b4e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3850, gbc.sp());
        EXPECT(0x9b50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b4e));
        EXPECT(0x9c, gbc.readMem(0x9b4f));
        // CB 9C 00B8
        gbc.setState(0x4ccd, 0xb0b7, 0xe200, 0x5a40, 0x41a8, 0x757c, 0x1, 0x1);
        gbc.writeMem(0x4ccd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb0b7, gbc.sp());
        EXPECT(0x4ccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 00B9
        gbc.setState(0x547e, 0x1a9f, 0xeea0, 0x979f, 0xcb2e, 0x5f5c, 0x1, 0x1);
        gbc.writeMem(0x547e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1a9f, gbc.sp());
        EXPECT(0x5480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 00BA
        gbc.setState(0x7009, 0xb6fb, 0xbd0, 0x5ca5, 0xb479, 0x7a8d, 0x0, 0x0);
        gbc.writeMem(0x7009, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb6fb, gbc.sp());
        EXPECT(0x700b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00BB
        gbc.setState(0xc40b, 0xf3, 0x15b0, 0xd995, 0x50bd, 0xdc16, 0x1, 0x1);
        gbc.writeMem(0xc40b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf3, gbc.sp());
        EXPECT(0xc40d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc40b));
        EXPECT(0x9c, gbc.readMem(0xc40c));
        // CB 9C 00BC
        gbc.setState(0x10da, 0xc0d, 0x2370, 0x3391, 0x6e06, 0x4150, 0x0, 0x0);
        gbc.writeMem(0x10da, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc0d, gbc.sp());
        EXPECT(0x10dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00BD
        gbc.setState(0xbdd2, 0xf350, 0x47c0, 0x5de2, 0xc1e2, 0xd750, 0x1, 0x1);
        gbc.writeMem(0xbdd2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf350, gbc.sp());
        EXPECT(0xbdd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdd2));
        EXPECT(0x9c, gbc.readMem(0xbdd3));
        // CB 9C 00BE
        gbc.setState(0x6a54, 0xbc54, 0xd980, 0xef97, 0xd1a3, 0x1b55, 0x0, 0x0);
        gbc.writeMem(0x6a54, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xbc54, gbc.sp());
        EXPECT(0x6a56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 00BF
        gbc.setState(0x32ae, 0xdee8, 0xaaf0, 0xb269, 0xa8b4, 0x3b94, 0x1, 0x1);
        gbc.writeMem(0x32ae, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xdee8, gbc.sp());
        EXPECT(0x32b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00C0
        gbc.setState(0x8ff2, 0x1ea8, 0xf3c0, 0x18b8, 0x3978, 0x1901, 0x1, 0x1);
        gbc.writeMem(0x8ff2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1ea8, gbc.sp());
        EXPECT(0x8ff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ff2));
        EXPECT(0x9c, gbc.readMem(0x8ff3));
        // CB 9C 00C1
        gbc.setState(0x2edf, 0x3671, 0xc2e0, 0xece1, 0xd204, 0xbd7e, 0x0, 0x0);
        gbc.writeMem(0x2edf, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3671, gbc.sp());
        EXPECT(0x2ee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 00C3
        gbc.setState(0x23db, 0x8147, 0x59f0, 0xd040, 0x5609, 0x818d, 0x0, 0x1);
        gbc.writeMem(0x23db, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8147, gbc.sp());
        EXPECT(0x23dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00C4
        gbc.setState(0xc890, 0x2905, 0xa0f0, 0x4dbc, 0x9db9, 0xdf35, 0x1, 0x1);
        gbc.writeMem(0xc890, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2905, gbc.sp());
        EXPECT(0xc892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc890));
        EXPECT(0x9c, gbc.readMem(0xc891));
        // CB 9C 00C5
        gbc.setState(0x935f, 0x380c, 0x43e0, 0x9766, 0x7e2d, 0xb2de, 0x1, 0x0);
        gbc.writeMem(0x935f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x380c, gbc.sp());
        EXPECT(0x9361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x935f));
        EXPECT(0x9c, gbc.readMem(0x9360));
        // CB 9C 00C6
        gbc.setState(0x77e7, 0x9a50, 0x52d0, 0x7b23, 0x63c9, 0xae7, 0x0, 0x1);
        gbc.writeMem(0x77e7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9a50, gbc.sp());
        EXPECT(0x77e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00C7
        gbc.setState(0x2171, 0x3548, 0x8d10, 0x3184, 0x84cf, 0x4ea9, 0x0, 0x1);
        gbc.writeMem(0x2171, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3548, gbc.sp());
        EXPECT(0x2173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00C8
        gbc.setState(0x4d17, 0xddf8, 0x35c0, 0x2c75, 0x33f4, 0x2ae0, 0x1, 0x0);
        gbc.writeMem(0x4d17, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xddf8, gbc.sp());
        EXPECT(0x4d19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 00C9
        gbc.setState(0xa516, 0x5c8c, 0xa860, 0xe870, 0x6099, 0xaaa0, 0x1, 0x1);
        gbc.writeMem(0xa516, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5c8c, gbc.sp());
        EXPECT(0xa518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa516));
        EXPECT(0x9c, gbc.readMem(0xa517));
        // CB 9C 00CA
        gbc.setState(0x9e05, 0x9d6, 0xae30, 0x469a, 0x32b2, 0x519f, 0x1, 0x1);
        gbc.writeMem(0x9e05, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9d6, gbc.sp());
        EXPECT(0x9e07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e05));
        EXPECT(0x9c, gbc.readMem(0x9e06));
        // CB 9C 00CB
        gbc.setState(0x8132, 0x25d5, 0xfdf0, 0xf02e, 0x23f5, 0x7d9, 0x1, 0x0);
        gbc.writeMem(0x8132, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x25d5, gbc.sp());
        EXPECT(0x8134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8132));
        EXPECT(0x9c, gbc.readMem(0x8133));
        // CB 9C 00CC
        gbc.setState(0xc6cf, 0x8e1d, 0xeb60, 0x84c6, 0x3bb6, 0xd188, 0x1, 0x1);
        gbc.writeMem(0xc6cf, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8e1d, gbc.sp());
        EXPECT(0xc6d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6cf));
        EXPECT(0x9c, gbc.readMem(0xc6d0));
        // CB 9C 00CD
        gbc.setState(0xe4c6, 0x118c, 0x44c0, 0x1208, 0x560d, 0xefeb, 0x0, 0x1);
        gbc.writeMem(0xe4c6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x118c, gbc.sp());
        EXPECT(0xe4c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c6));
        EXPECT(0x9c, gbc.readMem(0xe4c7));
        // CB 9C 00CE
        gbc.setState(0x1ff, 0xf90a, 0x6980, 0x1a12, 0x8355, 0x4f68, 0x0, 0x0);
        gbc.writeMem(0x1ff, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf90a, gbc.sp());
        EXPECT(0x201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 00CF
        gbc.setState(0x35a, 0x4d99, 0x2160, 0xa89c, 0xfea6, 0x7dca, 0x0, 0x1);
        gbc.writeMem(0x35a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4d99, gbc.sp());
        EXPECT(0x35c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 00D1
        gbc.setState(0x3a85, 0xda08, 0x7b60, 0x9162, 0xb565, 0x19a2, 0x0, 0x0);
        gbc.writeMem(0x3a85, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xda08, gbc.sp());
        EXPECT(0x3a87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 00D2
        gbc.setState(0x6241, 0x250d, 0x2f90, 0x69a, 0x9076, 0xb611, 0x1, 0x0);
        gbc.writeMem(0x6241, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x250d, gbc.sp());
        EXPECT(0x6243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00D3
        gbc.setState(0xf5e, 0x8a0d, 0xb010, 0x9743, 0x6344, 0x6786, 0x0, 0x1);
        gbc.writeMem(0xf5e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8a0d, gbc.sp());
        EXPECT(0xf60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00D4
        gbc.setState(0xe9b6, 0x3fb1, 0xc8d0, 0x7d34, 0xcf18, 0x978c, 0x0, 0x1);
        gbc.writeMem(0xe9b6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3fb1, gbc.sp());
        EXPECT(0xe9b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9b6));
        EXPECT(0x9c, gbc.readMem(0xe9b7));
        // CB 9C 00D5
        gbc.setState(0x399d, 0x790d, 0xb290, 0xae72, 0xde38, 0x704c, 0x1, 0x1);
        gbc.writeMem(0x399d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x790d, gbc.sp());
        EXPECT(0x399f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00D6
        gbc.setState(0x7392, 0x1b70, 0xe870, 0x7344, 0x9b60, 0x8fd0, 0x0, 0x0);
        gbc.writeMem(0x7392, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1b70, gbc.sp());
        EXPECT(0x7394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00D7
        gbc.setState(0xc661, 0x34b4, 0xeaa0, 0x20b5, 0x3329, 0x465f, 0x0, 0x0);
        gbc.writeMem(0xc661, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x34b4, gbc.sp());
        EXPECT(0xc663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc661));
        EXPECT(0x9c, gbc.readMem(0xc662));
        // CB 9C 00D8
        gbc.setState(0xd052, 0xda4f, 0x3f50, 0xb26d, 0x8232, 0xc8f3, 0x0, 0x0);
        gbc.writeMem(0xd052, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xda4f, gbc.sp());
        EXPECT(0xd054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd052));
        EXPECT(0x9c, gbc.readMem(0xd053));
        // CB 9C 00D9
        gbc.setState(0x587, 0xf2e2, 0xc050, 0xbac3, 0x9d04, 0x140, 0x0, 0x1);
        gbc.writeMem(0x587, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf2e2, gbc.sp());
        EXPECT(0x589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00DA
        gbc.setState(0xe57c, 0xc70c, 0xcf30, 0x6199, 0x6f82, 0xf7f5, 0x1, 0x0);
        gbc.writeMem(0xe57c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc70c, gbc.sp());
        EXPECT(0xe57e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe57c));
        EXPECT(0x9c, gbc.readMem(0xe57d));
        // CB 9C 00DB
        gbc.setState(0x64c6, 0x924e, 0xbdb0, 0xb3d, 0x2a60, 0xc483, 0x1, 0x0);
        gbc.writeMem(0x64c6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x924e, gbc.sp());
        EXPECT(0x64c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00DC
        gbc.setState(0x24f1, 0x24af, 0x5210, 0x9f8a, 0xa18a, 0x895e, 0x0, 0x0);
        gbc.writeMem(0x24f1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x24af, gbc.sp());
        EXPECT(0x24f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00DD
        gbc.setState(0x9ede, 0xa3c6, 0x13d0, 0x4feb, 0x8722, 0xba8b, 0x0, 0x1);
        gbc.writeMem(0x9ede, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa3c6, gbc.sp());
        EXPECT(0x9ee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ede));
        EXPECT(0x9c, gbc.readMem(0x9edf));
        // CB 9C 00DE
        gbc.setState(0x9281, 0x7571, 0x62a0, 0xd236, 0xb4, 0x46e9, 0x0, 0x1);
        gbc.writeMem(0x9281, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7571, gbc.sp());
        EXPECT(0x9283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9281));
        EXPECT(0x9c, gbc.readMem(0x9282));
        // CB 9C 00DF
        gbc.setState(0x2a66, 0x145f, 0x4d30, 0x37c8, 0xbdb6, 0x2511, 0x1, 0x0);
        gbc.writeMem(0x2a66, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x145f, gbc.sp());
        EXPECT(0x2a68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00E0
        gbc.setState(0x5ad1, 0x7552, 0x620, 0xfaae, 0xa05e, 0xf397, 0x0, 0x1);
        gbc.writeMem(0x5ad1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7552, gbc.sp());
        EXPECT(0x5ad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 00E1
        gbc.setState(0x18ea, 0x4a11, 0xe300, 0x73a5, 0x39f8, 0xd68a, 0x1, 0x0);
        gbc.writeMem(0x18ea, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4a11, gbc.sp());
        EXPECT(0x18ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 00E2
        gbc.setState(0x8d73, 0xe7c3, 0x5a00, 0x46a3, 0x8b5f, 0xce5d, 0x1, 0x0);
        gbc.writeMem(0x8d73, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe7c3, gbc.sp());
        EXPECT(0x8d75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d73));
        EXPECT(0x9c, gbc.readMem(0x8d74));
        // CB 9C 00E3
        gbc.setState(0xe131, 0x6e2b, 0x68c0, 0x51ef, 0x1b86, 0x5864, 0x1, 0x0);
        gbc.writeMem(0xe131, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6e2b, gbc.sp());
        EXPECT(0xe133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe131));
        EXPECT(0x9c, gbc.readMem(0xe132));
        // CB 9C 00E4
        gbc.setState(0x229c, 0x9312, 0x3990, 0x3552, 0xc0da, 0xb18b, 0x0, 0x0);
        gbc.writeMem(0x229c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9312, gbc.sp());
        EXPECT(0x229e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00E5
        gbc.setState(0x2c7e, 0xda6a, 0x10c0, 0xd127, 0xeff3, 0x8878, 0x1, 0x0);
        gbc.writeMem(0x2c7e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xda6a, gbc.sp());
        EXPECT(0x2c80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 00E6
        gbc.setState(0x5335, 0xd37e, 0xfc0, 0x856, 0xce0e, 0x6a4a, 0x0, 0x0);
        gbc.writeMem(0x5335, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd37e, gbc.sp());
        EXPECT(0x5337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 00E7
        gbc.setState(0x2666, 0x27bf, 0x25e0, 0xbd4c, 0x1e8, 0x6d5f, 0x1, 0x0);
        gbc.writeMem(0x2666, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x27bf, gbc.sp());
        EXPECT(0x2668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 00E8
        gbc.setState(0x2d04, 0x8f, 0xcc40, 0x7fea, 0xf0f6, 0x8cb7, 0x1, 0x1);
        gbc.writeMem(0x2d04, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8f, gbc.sp());
        EXPECT(0x2d06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 00E9
        gbc.setState(0xd1a3, 0xd7ff, 0x44d0, 0x7d2c, 0x6d2e, 0x8976, 0x0, 0x1);
        gbc.writeMem(0xd1a3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd7ff, gbc.sp());
        EXPECT(0xd1a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a3));
        EXPECT(0x9c, gbc.readMem(0xd1a4));
        // CB 9C 00EA
        gbc.setState(0xd775, 0x301f, 0x3270, 0x963d, 0x176a, 0xb752, 0x1, 0x1);
        gbc.writeMem(0xd775, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x301f, gbc.sp());
        EXPECT(0xd777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd775));
        EXPECT(0x9c, gbc.readMem(0xd776));
        // CB 9C 00EB
        gbc.setState(0x8df, 0x3f4b, 0xacd0, 0x73dc, 0xdfde, 0xbf45, 0x1, 0x0);
        gbc.writeMem(0x8df, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3f4b, gbc.sp());
        EXPECT(0x8e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00EC
        gbc.setState(0x670c, 0x63e5, 0xdf20, 0x60dd, 0xcf59, 0xacd7, 0x0, 0x1);
        gbc.writeMem(0x670c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x63e5, gbc.sp());
        EXPECT(0x670e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 00ED
        gbc.setState(0xb568, 0xe644, 0xd20, 0x1d98, 0x3a09, 0xa1af, 0x0, 0x0);
        gbc.writeMem(0xb568, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe644, gbc.sp());
        EXPECT(0xb56a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb568));
        EXPECT(0x9c, gbc.readMem(0xb569));
        // CB 9C 00EF
        gbc.setState(0x85be, 0x162f, 0x2180, 0xa506, 0x8066, 0xd1fc, 0x0, 0x0);
        gbc.writeMem(0x85be, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x162f, gbc.sp());
        EXPECT(0x85c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85be));
        EXPECT(0x9c, gbc.readMem(0x85bf));
        // CB 9C 00F0
        gbc.setState(0x866d, 0xea7b, 0x4230, 0xff50, 0xe617, 0x7639, 0x1, 0x0);
        gbc.writeMem(0x866d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xea7b, gbc.sp());
        EXPECT(0x866f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x866d));
        EXPECT(0x9c, gbc.readMem(0x866e));
        // CB 9C 00F1
        gbc.setState(0xa75b, 0x5072, 0x2980, 0xcfeb, 0x89eb, 0xd43f, 0x1, 0x1);
        gbc.writeMem(0xa75b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5072, gbc.sp());
        EXPECT(0xa75d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa75b));
        EXPECT(0x9c, gbc.readMem(0xa75c));
        // CB 9C 00F2
        gbc.setState(0xb5dc, 0xb933, 0x1f40, 0x5de, 0x12a, 0x88a3, 0x1, 0x1);
        gbc.writeMem(0xb5dc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb933, gbc.sp());
        EXPECT(0xb5de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5dc));
        EXPECT(0x9c, gbc.readMem(0xb5dd));
        // CB 9C 00F3
        gbc.setState(0x66f6, 0xbab6, 0x9f80, 0x5eb, 0x4d50, 0xb744, 0x1, 0x1);
        gbc.writeMem(0x66f6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbab6, gbc.sp());
        EXPECT(0x66f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 00F4
        gbc.setState(0xcee1, 0x67fe, 0x1c50, 0x944f, 0x41fc, 0x8a3c, 0x0, 0x1);
        gbc.writeMem(0xcee1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x67fe, gbc.sp());
        EXPECT(0xcee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcee1));
        EXPECT(0x9c, gbc.readMem(0xcee2));
        // CB 9C 00F5
        gbc.setState(0xa00a, 0x1ab0, 0x7680, 0xf74f, 0xa5ee, 0xebe9, 0x1, 0x0);
        gbc.writeMem(0xa00a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1ab0, gbc.sp());
        EXPECT(0xa00c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa00a));
        EXPECT(0x9c, gbc.readMem(0xa00b));
        // CB 9C 00F7
        gbc.setState(0xdf5c, 0xee65, 0xebd0, 0xfca5, 0x451a, 0xee41, 0x1, 0x0);
        gbc.writeMem(0xdf5c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xee65, gbc.sp());
        EXPECT(0xdf5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf5c));
        EXPECT(0x9c, gbc.readMem(0xdf5d));
        // CB 9C 00F8
        gbc.setState(0xaec2, 0x3be5, 0x3730, 0xab03, 0x8324, 0x23ab, 0x1, 0x0);
        gbc.writeMem(0xaec2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3be5, gbc.sp());
        EXPECT(0xaec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaec2));
        EXPECT(0x9c, gbc.readMem(0xaec3));
        // CB 9C 00FA
        gbc.setState(0xa07c, 0x7769, 0xd000, 0x378a, 0x387b, 0x4b0f, 0x1, 0x0);
        gbc.writeMem(0xa07c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7769, gbc.sp());
        EXPECT(0xa07e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa07c));
        EXPECT(0x9c, gbc.readMem(0xa07d));
        // CB 9C 00FB
        gbc.setState(0x4324, 0x5f5e, 0x3d40, 0x40fa, 0x11b1, 0xe4a0, 0x0, 0x1);
        gbc.writeMem(0x4324, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5f5e, gbc.sp());
        EXPECT(0x4326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 00FC
        gbc.setState(0x2d0c, 0x12a3, 0xb630, 0xae04, 0xde00, 0x6797, 0x0, 0x0);
        gbc.writeMem(0x2d0c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x12a3, gbc.sp());
        EXPECT(0x2d0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 00FD
        gbc.setState(0x69a5, 0xd65d, 0x5f40, 0xe169, 0x8fe5, 0x2c98, 0x0, 0x1);
        gbc.writeMem(0x69a5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd65d, gbc.sp());
        EXPECT(0x69a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 00FE
        gbc.setState(0xd808, 0xbb39, 0x3cb0, 0xdfba, 0xbc82, 0xe53b, 0x0, 0x1);
        gbc.writeMem(0xd808, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xbb39, gbc.sp());
        EXPECT(0xd80a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd808));
        EXPECT(0x9c, gbc.readMem(0xd809));
        // CB 9C 00FF
        gbc.setState(0xb6be, 0xdbfc, 0xe820, 0x771d, 0x899e, 0x9f68, 0x0, 0x0);
        gbc.writeMem(0xb6be, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xdbfc, gbc.sp());
        EXPECT(0xb6c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6be));
        EXPECT(0x9c, gbc.readMem(0xb6bf));
        // CB 9C 0100
        gbc.setState(0x6551, 0xe669, 0x1900, 0xec, 0xe011, 0x942e, 0x0, 0x1);
        gbc.writeMem(0x6551, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe669, gbc.sp());
        EXPECT(0x6553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0101
        gbc.setState(0xc66d, 0xd9ff, 0xbb80, 0xa08d, 0xb465, 0xffaf, 0x0, 0x0);
        gbc.writeMem(0xc66d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd9ff, gbc.sp());
        EXPECT(0xc66f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc66d));
        EXPECT(0x9c, gbc.readMem(0xc66e));
        // CB 9C 0102
        gbc.setState(0xda91, 0x89b1, 0x4100, 0x386, 0xa084, 0x51f2, 0x1, 0x0);
        gbc.writeMem(0xda91, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x89b1, gbc.sp());
        EXPECT(0xda93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda91));
        EXPECT(0x9c, gbc.readMem(0xda92));
        // CB 9C 0103
        gbc.setState(0xe350, 0x6d8d, 0xc9d0, 0x44d8, 0xdb96, 0xe84b, 0x1, 0x1);
        gbc.writeMem(0xe350, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6d8d, gbc.sp());
        EXPECT(0xe352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe350));
        EXPECT(0x9c, gbc.readMem(0xe351));
        // CB 9C 0104
        gbc.setState(0xcea1, 0x7c90, 0x4650, 0x46e3, 0x4110, 0x248f, 0x1, 0x0);
        gbc.writeMem(0xcea1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7c90, gbc.sp());
        EXPECT(0xcea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcea1));
        EXPECT(0x9c, gbc.readMem(0xcea2));
        // CB 9C 0105
        gbc.setState(0xe562, 0x8415, 0x900, 0x1689, 0x1c4e, 0xc5fd, 0x0, 0x0);
        gbc.writeMem(0xe562, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8415, gbc.sp());
        EXPECT(0xe564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe562));
        EXPECT(0x9c, gbc.readMem(0xe563));
        // CB 9C 0106
        gbc.setState(0xe4fa, 0x7d85, 0x3640, 0xeda7, 0x483f, 0xe2a3, 0x0, 0x1);
        gbc.writeMem(0xe4fa, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7d85, gbc.sp());
        EXPECT(0xe4fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4fa));
        EXPECT(0x9c, gbc.readMem(0xe4fb));
        // CB 9C 0108
        gbc.setState(0x58ae, 0x387e, 0x9b0, 0xf48d, 0x87d4, 0x8601, 0x1, 0x1);
        gbc.writeMem(0x58ae, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x387e, gbc.sp());
        EXPECT(0x58b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0109
        gbc.setState(0x37b8, 0x9736, 0x81c0, 0x377d, 0xc38b, 0xe53c, 0x0, 0x1);
        gbc.writeMem(0x37b8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9736, gbc.sp());
        EXPECT(0x37ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 010A
        gbc.setState(0xe746, 0x45d6, 0x9650, 0x6adc, 0xab6b, 0x7061, 0x1, 0x0);
        gbc.writeMem(0xe746, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x45d6, gbc.sp());
        EXPECT(0xe748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe746));
        EXPECT(0x9c, gbc.readMem(0xe747));
        // CB 9C 010B
        gbc.setState(0x21c0, 0xb31b, 0x3c70, 0x9911, 0x964e, 0x86ae, 0x1, 0x0);
        gbc.writeMem(0x21c0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb31b, gbc.sp());
        EXPECT(0x21c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 010C
        gbc.setState(0x349d, 0xf6b1, 0x66a0, 0x58a8, 0x68e9, 0x4fad, 0x0, 0x0);
        gbc.writeMem(0x349d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf6b1, gbc.sp());
        EXPECT(0x349f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 010D
        gbc.setState(0xcac3, 0x143, 0x8a80, 0x1f3e, 0x8dee, 0x7d55, 0x0, 0x0);
        gbc.writeMem(0xcac3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x143, gbc.sp());
        EXPECT(0xcac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcac3));
        EXPECT(0x9c, gbc.readMem(0xcac4));
        // CB 9C 010E
        gbc.setState(0x822, 0xc1, 0xc490, 0x1262, 0x297, 0xed33, 0x0, 0x1);
        gbc.writeMem(0x822, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc1, gbc.sp());
        EXPECT(0x824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 010F
        gbc.setState(0xb687, 0xd266, 0x8a10, 0x76c8, 0x6a4b, 0xfa46, 0x1, 0x1);
        gbc.writeMem(0xb687, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd266, gbc.sp());
        EXPECT(0xb689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb687));
        EXPECT(0x9c, gbc.readMem(0xb688));
        // CB 9C 0110
        gbc.setState(0x79a, 0x6aa8, 0x7b60, 0x61cf, 0xd9df, 0xabdf, 0x1, 0x1);
        gbc.writeMem(0x79a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6aa8, gbc.sp());
        EXPECT(0x79c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0111
        gbc.setState(0x7a50, 0xd45e, 0x7b80, 0xc5ae, 0x95a9, 0xb3f0, 0x0, 0x1);
        gbc.writeMem(0x7a50, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd45e, gbc.sp());
        EXPECT(0x7a52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0112
        gbc.setState(0xe9d2, 0x93fa, 0x5850, 0xcb31, 0x3f07, 0x9659, 0x1, 0x0);
        gbc.writeMem(0xe9d2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x93fa, gbc.sp());
        EXPECT(0xe9d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9d2));
        EXPECT(0x9c, gbc.readMem(0xe9d3));
        // CB 9C 0114
        gbc.setState(0x5e2f, 0xba73, 0xda0, 0x77f5, 0x17a, 0x34e, 0x1, 0x1);
        gbc.writeMem(0x5e2f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xba73, gbc.sp());
        EXPECT(0x5e31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0115
        gbc.setState(0x5872, 0xde58, 0xe990, 0x3474, 0x21eb, 0x1f02, 0x1, 0x1);
        gbc.writeMem(0x5872, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xde58, gbc.sp());
        EXPECT(0x5874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0116
        gbc.setState(0x346b, 0x98e2, 0x2130, 0xb2bc, 0x3f9f, 0x7b7c, 0x0, 0x1);
        gbc.writeMem(0x346b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x98e2, gbc.sp());
        EXPECT(0x346d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0117
        gbc.setState(0x5901, 0x6052, 0xbd70, 0x4a96, 0x84d0, 0xeb6, 0x1, 0x0);
        gbc.writeMem(0x5901, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6052, gbc.sp());
        EXPECT(0x5903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0118
        gbc.setState(0xc4e5, 0x7979, 0x3640, 0x9fa7, 0x1446, 0x91ef, 0x0, 0x1);
        gbc.writeMem(0xc4e5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7979, gbc.sp());
        EXPECT(0xc4e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4e5));
        EXPECT(0x9c, gbc.readMem(0xc4e6));
        // CB 9C 0119
        gbc.setState(0xc718, 0x8f9, 0xbc30, 0xa6fb, 0xd113, 0x8c79, 0x0, 0x1);
        gbc.writeMem(0xc718, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8f9, gbc.sp());
        EXPECT(0xc71a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc718));
        EXPECT(0x9c, gbc.readMem(0xc719));
        // CB 9C 011A
        gbc.setState(0x9acc, 0xcd57, 0x3dd0, 0x4795, 0x1950, 0xa0ae, 0x1, 0x0);
        gbc.writeMem(0x9acc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xcd57, gbc.sp());
        EXPECT(0x9ace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9acc));
        EXPECT(0x9c, gbc.readMem(0x9acd));
        // CB 9C 011B
        gbc.setState(0xe4a8, 0xaaef, 0xe190, 0xdcf5, 0x7304, 0x9310, 0x0, 0x0);
        gbc.writeMem(0xe4a8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xaaef, gbc.sp());
        EXPECT(0xe4aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a8));
        EXPECT(0x9c, gbc.readMem(0xe4a9));
        // CB 9C 011C
        gbc.setState(0xb545, 0xee02, 0x2470, 0x5846, 0xf9b, 0x4214, 0x1, 0x1);
        gbc.writeMem(0xb545, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xee02, gbc.sp());
        EXPECT(0xb547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb545));
        EXPECT(0x9c, gbc.readMem(0xb546));
        // CB 9C 011D
        gbc.setState(0xe243, 0xe957, 0x67b0, 0x6c67, 0xb8e6, 0x1194, 0x1, 0x0);
        gbc.writeMem(0xe243, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe957, gbc.sp());
        EXPECT(0xe245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe243));
        EXPECT(0x9c, gbc.readMem(0xe244));
        // CB 9C 011E
        gbc.setState(0x285f, 0x8e43, 0xaaa0, 0x4661, 0x6e7f, 0xc6c7, 0x1, 0x0);
        gbc.writeMem(0x285f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8e43, gbc.sp());
        EXPECT(0x2861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 011F
        gbc.setState(0xbf8f, 0x438e, 0xbbb0, 0x6f33, 0x50b2, 0x8667, 0x1, 0x0);
        gbc.writeMem(0xbf8f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x438e, gbc.sp());
        EXPECT(0xbf91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf8f));
        EXPECT(0x9c, gbc.readMem(0xbf90));
        // CB 9C 0120
        gbc.setState(0x60b2, 0xf451, 0x4b80, 0xb3cc, 0x3cde, 0x9766, 0x0, 0x1);
        gbc.writeMem(0x60b2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf451, gbc.sp());
        EXPECT(0x60b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0121
        gbc.setState(0xce3e, 0x35b6, 0x7fe0, 0xfddd, 0xb90c, 0x16f9, 0x1, 0x1);
        gbc.writeMem(0xce3e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x35b6, gbc.sp());
        EXPECT(0xce40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce3e));
        EXPECT(0x9c, gbc.readMem(0xce3f));
        // CB 9C 0122
        gbc.setState(0x31ee, 0x40cc, 0x1500, 0x472b, 0x387d, 0xb433, 0x0, 0x0);
        gbc.writeMem(0x31ee, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x40cc, gbc.sp());
        EXPECT(0x31f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0123
        gbc.setState(0x8342, 0xe34f, 0x4470, 0xd11d, 0x44e8, 0x3674, 0x0, 0x0);
        gbc.writeMem(0x8342, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe34f, gbc.sp());
        EXPECT(0x8344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8342));
        EXPECT(0x9c, gbc.readMem(0x8343));
        // CB 9C 0124
        gbc.setState(0x7007, 0x9f1b, 0xd980, 0xcd4e, 0xdc7e, 0x66c4, 0x0, 0x0);
        gbc.writeMem(0x7007, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9f1b, gbc.sp());
        EXPECT(0x7009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0125
        gbc.setState(0xcb9b, 0x624d, 0x9790, 0xc450, 0x315a, 0xa6a, 0x1, 0x1);
        gbc.writeMem(0xcb9b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x624d, gbc.sp());
        EXPECT(0xcb9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb9b));
        EXPECT(0x9c, gbc.readMem(0xcb9c));
        // CB 9C 0126
        gbc.setState(0x9750, 0x101, 0x2620, 0x1e3, 0x3525, 0x6fae, 0x0, 0x1);
        gbc.writeMem(0x9750, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x101, gbc.sp());
        EXPECT(0x9752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9750));
        EXPECT(0x9c, gbc.readMem(0x9751));
        // CB 9C 0127
        gbc.setState(0x275b, 0x1206, 0xfaf0, 0xecb9, 0xfa24, 0x8798, 0x0, 0x1);
        gbc.writeMem(0x275b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1206, gbc.sp());
        EXPECT(0x275d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0128
        gbc.setState(0xbf24, 0x8011, 0x8930, 0x80d, 0x2101, 0xf883, 0x1, 0x0);
        gbc.writeMem(0xbf24, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8011, gbc.sp());
        EXPECT(0xbf26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf24));
        EXPECT(0x9c, gbc.readMem(0xbf25));
        // CB 9C 0129
        gbc.setState(0xebc9, 0x41ea, 0xbbe0, 0x2649, 0x20f8, 0x23cf, 0x1, 0x1);
        gbc.writeMem(0xebc9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x41ea, gbc.sp());
        EXPECT(0xebcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebc9));
        EXPECT(0x9c, gbc.readMem(0xebca));
        // CB 9C 012B
        gbc.setState(0x9804, 0xf13, 0xb6e0, 0x7210, 0x9d02, 0xb3d9, 0x1, 0x0);
        gbc.writeMem(0x9804, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf13, gbc.sp());
        EXPECT(0x9806, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9804));
        EXPECT(0x9c, gbc.readMem(0x9805));
        // CB 9C 012C
        gbc.setState(0x4c05, 0x4481, 0x5190, 0xaf47, 0xfc49, 0xcecd, 0x1, 0x0);
        gbc.writeMem(0x4c05, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4481, gbc.sp());
        EXPECT(0x4c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 012D
        gbc.setState(0x294e, 0x9085, 0x2870, 0xb7ce, 0x1c4d, 0x83c8, 0x1, 0x1);
        gbc.writeMem(0x294e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9085, gbc.sp());
        EXPECT(0x2950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 012E
        gbc.setState(0x226, 0x7252, 0x79e0, 0xcaad, 0x9f18, 0xe898, 0x0, 0x1);
        gbc.writeMem(0x226, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7252, gbc.sp());
        EXPECT(0x228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 012F
        gbc.setState(0xe8a, 0xdcf0, 0x48b0, 0x38ce, 0x9294, 0x8f3d, 0x0, 0x0);
        gbc.writeMem(0xe8a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xdcf0, gbc.sp());
        EXPECT(0xe8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0130
        gbc.setState(0x9aac, 0x50e2, 0x9a00, 0x2eab, 0x865, 0xc327, 0x0, 0x1);
        gbc.writeMem(0x9aac, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x50e2, gbc.sp());
        EXPECT(0x9aae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aac));
        EXPECT(0x9c, gbc.readMem(0x9aad));
        // CB 9C 0131
        gbc.setState(0x43b, 0x48d7, 0xa1c0, 0x9edd, 0xa356, 0xa43c, 0x1, 0x1);
        gbc.writeMem(0x43b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x48d7, gbc.sp());
        EXPECT(0x43d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0132
        gbc.setState(0x9ec7, 0x11c2, 0x6400, 0x928a, 0x63a9, 0x65ab, 0x1, 0x1);
        gbc.writeMem(0x9ec7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x11c2, gbc.sp());
        EXPECT(0x9ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ec7));
        EXPECT(0x9c, gbc.readMem(0x9ec8));
        // CB 9C 0133
        gbc.setState(0x2a20, 0x9a53, 0xf980, 0x4852, 0x3371, 0x7bd6, 0x0, 0x0);
        gbc.writeMem(0x2a20, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9a53, gbc.sp());
        EXPECT(0x2a22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0134
        gbc.setState(0x5b7c, 0xea00, 0x75d0, 0x9de2, 0x44a, 0x6212, 0x0, 0x0);
        gbc.writeMem(0x5b7c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xea00, gbc.sp());
        EXPECT(0x5b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0135
        gbc.setState(0xe737, 0x9a53, 0x2180, 0x2449, 0x2567, 0x6de3, 0x0, 0x1);
        gbc.writeMem(0xe737, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9a53, gbc.sp());
        EXPECT(0xe739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe737));
        EXPECT(0x9c, gbc.readMem(0xe738));
        // CB 9C 0136
        gbc.setState(0x777d, 0xb453, 0xe390, 0x6114, 0xdcc4, 0x3908, 0x0, 0x0);
        gbc.writeMem(0x777d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb453, gbc.sp());
        EXPECT(0x777f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0137
        gbc.setState(0x35fd, 0x73f8, 0xc480, 0x15af, 0x80ae, 0x7175, 0x0, 0x0);
        gbc.writeMem(0x35fd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x73f8, gbc.sp());
        EXPECT(0x35ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0138
        gbc.setState(0x36b4, 0xe625, 0x1290, 0x3249, 0x62e4, 0x6747, 0x0, 0x1);
        gbc.writeMem(0x36b4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe625, gbc.sp());
        EXPECT(0x36b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0139
        gbc.setState(0x678e, 0xd569, 0x7c60, 0x4649, 0xf490, 0xf96f, 0x1, 0x1);
        gbc.writeMem(0x678e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd569, gbc.sp());
        EXPECT(0x6790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 013A
        gbc.setState(0x6bc2, 0xde51, 0xcef0, 0xa4ac, 0x6f92, 0xaba3, 0x0, 0x1);
        gbc.writeMem(0x6bc2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xde51, gbc.sp());
        EXPECT(0x6bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 013B
        gbc.setState(0xa5b3, 0x64ff, 0x9ff0, 0x31a, 0xddfa, 0x6f38, 0x0, 0x1);
        gbc.writeMem(0xa5b3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x64ff, gbc.sp());
        EXPECT(0xa5b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5b3));
        EXPECT(0x9c, gbc.readMem(0xa5b4));
        // CB 9C 013C
        gbc.setState(0xa656, 0x97b6, 0x8c30, 0xd912, 0x7215, 0x4298, 0x1, 0x0);
        gbc.writeMem(0xa656, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x97b6, gbc.sp());
        EXPECT(0xa658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa656));
        EXPECT(0x9c, gbc.readMem(0xa657));
        // CB 9C 013D
        gbc.setState(0x3ca6, 0x6139, 0xe7e0, 0xd99c, 0x3c4a, 0xd3f3, 0x0, 0x1);
        gbc.writeMem(0x3ca6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6139, gbc.sp());
        EXPECT(0x3ca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 013E
        gbc.setState(0xd39f, 0x36ab, 0x7f60, 0xea10, 0x5135, 0x4564, 0x1, 0x0);
        gbc.writeMem(0xd39f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x36ab, gbc.sp());
        EXPECT(0xd3a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd39f));
        EXPECT(0x9c, gbc.readMem(0xd3a0));
        // CB 9C 013F
        gbc.setState(0xe318, 0x548, 0xfa10, 0xa1d8, 0x9540, 0x495f, 0x0, 0x0);
        gbc.writeMem(0xe318, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x548, gbc.sp());
        EXPECT(0xe31a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe318));
        EXPECT(0x9c, gbc.readMem(0xe319));
        // CB 9C 0140
        gbc.setState(0xadc9, 0xef13, 0x4e70, 0xaa0b, 0xba9, 0xbec0, 0x0, 0x0);
        gbc.writeMem(0xadc9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xef13, gbc.sp());
        EXPECT(0xadcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc9));
        EXPECT(0x9c, gbc.readMem(0xadca));
        // CB 9C 0141
        gbc.setState(0x52b6, 0x596a, 0x2b60, 0xa812, 0xaef3, 0x645a, 0x0, 0x0);
        gbc.writeMem(0x52b6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x596a, gbc.sp());
        EXPECT(0x52b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0142
        gbc.setState(0x3ed9, 0xb587, 0xfb40, 0x5daf, 0xcb2b, 0x1fa7, 0x1, 0x1);
        gbc.writeMem(0x3ed9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb587, gbc.sp());
        EXPECT(0x3edb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0143
        gbc.setState(0x782c, 0xff4e, 0xdba0, 0x2f1, 0x356a, 0x2d49, 0x1, 0x0);
        gbc.writeMem(0x782c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xff4e, gbc.sp());
        EXPECT(0x782e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0144
        gbc.setState(0x1878, 0xf37b, 0x9b60, 0xce51, 0x7bad, 0x112, 0x1, 0x1);
        gbc.writeMem(0x1878, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf37b, gbc.sp());
        EXPECT(0x187a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0145
        gbc.setState(0xc1fb, 0xa1ad, 0x68c0, 0xa229, 0xf79a, 0xcde6, 0x0, 0x1);
        gbc.writeMem(0xc1fb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa1ad, gbc.sp());
        EXPECT(0xc1fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1fb));
        EXPECT(0x9c, gbc.readMem(0xc1fc));
        // CB 9C 0146
        gbc.setState(0x7af6, 0xabb6, 0x7940, 0x7887, 0x502d, 0x9ea7, 0x1, 0x0);
        gbc.writeMem(0x7af6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xabb6, gbc.sp());
        EXPECT(0x7af8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0147
        gbc.setState(0x9062, 0x24b5, 0x3240, 0xf501, 0x809e, 0xa89e, 0x0, 0x1);
        gbc.writeMem(0x9062, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x24b5, gbc.sp());
        EXPECT(0x9064, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9062));
        EXPECT(0x9c, gbc.readMem(0x9063));
        // CB 9C 0148
        gbc.setState(0x499b, 0x9aaa, 0x2f40, 0xaa8a, 0x1977, 0x8f4b, 0x1, 0x0);
        gbc.writeMem(0x499b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9aaa, gbc.sp());
        EXPECT(0x499d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0149
        gbc.setState(0x15a4, 0xe07d, 0xfab0, 0xc74e, 0x35fd, 0x81d0, 0x0, 0x1);
        gbc.writeMem(0x15a4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe07d, gbc.sp());
        EXPECT(0x15a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 014A
        gbc.setState(0x5f6a, 0x596e, 0x1bd0, 0xa258, 0x3bc1, 0x501f, 0x1, 0x0);
        gbc.writeMem(0x5f6a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x596e, gbc.sp());
        EXPECT(0x5f6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 014B
        gbc.setState(0xcdd9, 0x6195, 0x4030, 0x7ff6, 0x483b, 0xab50, 0x0, 0x0);
        gbc.writeMem(0xcdd9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6195, gbc.sp());
        EXPECT(0xcddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd9));
        EXPECT(0x9c, gbc.readMem(0xcdda));
        // CB 9C 014C
        gbc.setState(0x84c5, 0x9031, 0x6590, 0x9a00, 0x612b, 0x1b5e, 0x0, 0x0);
        gbc.writeMem(0x84c5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9031, gbc.sp());
        EXPECT(0x84c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c5));
        EXPECT(0x9c, gbc.readMem(0x84c6));
        // CB 9C 014D
        gbc.setState(0x79ce, 0x946d, 0x3dc0, 0x1e5a, 0xb7f4, 0x5b4, 0x0, 0x1);
        gbc.writeMem(0x79ce, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x946d, gbc.sp());
        EXPECT(0x79d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 014E
        gbc.setState(0x903a, 0x244c, 0xe0a0, 0x950e, 0x620e, 0xc424, 0x1, 0x0);
        gbc.writeMem(0x903a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x244c, gbc.sp());
        EXPECT(0x903c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x903a));
        EXPECT(0x9c, gbc.readMem(0x903b));
        // CB 9C 014F
        gbc.setState(0x4f6d, 0x6812, 0xdc40, 0x804c, 0xb40, 0xa5f3, 0x0, 0x0);
        gbc.writeMem(0x4f6d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6812, gbc.sp());
        EXPECT(0x4f6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0150
        gbc.setState(0xdc0a, 0xd2ce, 0xf30, 0x251c, 0x4b76, 0xf797, 0x1, 0x0);
        gbc.writeMem(0xdc0a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd2ce, gbc.sp());
        EXPECT(0xdc0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc0a));
        EXPECT(0x9c, gbc.readMem(0xdc0b));
        // CB 9C 0151
        gbc.setState(0xb965, 0x5707, 0x4320, 0xa7fa, 0xfd3a, 0x247a, 0x1, 0x1);
        gbc.writeMem(0xb965, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5707, gbc.sp());
        EXPECT(0xb967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb965));
        EXPECT(0x9c, gbc.readMem(0xb966));
        // CB 9C 0152
        gbc.setState(0xbc43, 0x50de, 0x2460, 0x4020, 0xd309, 0xb57, 0x1, 0x1);
        gbc.writeMem(0xbc43, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x50de, gbc.sp());
        EXPECT(0xbc45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc43));
        EXPECT(0x9c, gbc.readMem(0xbc44));
        // CB 9C 0153
        gbc.setState(0x1fe8, 0x3417, 0xaa60, 0x3aec, 0xed3d, 0xd985, 0x1, 0x1);
        gbc.writeMem(0x1fe8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3417, gbc.sp());
        EXPECT(0x1fea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0154
        gbc.setState(0xb1a4, 0xf885, 0xe650, 0x1648, 0xa965, 0x6b51, 0x0, 0x1);
        gbc.writeMem(0xb1a4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf885, gbc.sp());
        EXPECT(0xb1a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1a4));
        EXPECT(0x9c, gbc.readMem(0xb1a5));
        // CB 9C 0155
        gbc.setState(0x2ac, 0xa96d, 0x300, 0xe055, 0x9035, 0x8303, 0x1, 0x1);
        gbc.writeMem(0x2ac, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa96d, gbc.sp());
        EXPECT(0x2ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0156
        gbc.setState(0x870e, 0xb266, 0xfc30, 0xae47, 0x3271, 0x7f9, 0x1, 0x0);
        gbc.writeMem(0x870e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb266, gbc.sp());
        EXPECT(0x8710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x870e));
        EXPECT(0x9c, gbc.readMem(0x870f));
        // CB 9C 0157
        gbc.setState(0x301c, 0xf933, 0x7950, 0xeef6, 0x3a75, 0x90ed, 0x1, 0x1);
        gbc.writeMem(0x301c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf933, gbc.sp());
        EXPECT(0x301e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0158
        gbc.setState(0x5eb, 0xa7f8, 0xef20, 0xa531, 0x6b04, 0x1c21, 0x1, 0x0);
        gbc.writeMem(0x5eb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa7f8, gbc.sp());
        EXPECT(0x5ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0159
        gbc.setState(0xaf6b, 0x47c4, 0xe2b0, 0x9bf8, 0x82af, 0x9bd2, 0x0, 0x1);
        gbc.writeMem(0xaf6b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x47c4, gbc.sp());
        EXPECT(0xaf6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf6b));
        EXPECT(0x9c, gbc.readMem(0xaf6c));
        // CB 9C 015A
        gbc.setState(0x6d49, 0xa145, 0xc670, 0x98ec, 0x1be6, 0xedd4, 0x0, 0x0);
        gbc.writeMem(0x6d49, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa145, gbc.sp());
        EXPECT(0x6d4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 015B
        gbc.setState(0xabe, 0x856e, 0x76a0, 0x98ac, 0xb5c8, 0xbf59, 0x1, 0x0);
        gbc.writeMem(0xabe, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x856e, gbc.sp());
        EXPECT(0xac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 015C
        gbc.setState(0x7a76, 0xc35c, 0xf850, 0x58c3, 0x1a15, 0x8d77, 0x1, 0x0);
        gbc.writeMem(0x7a76, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc35c, gbc.sp());
        EXPECT(0x7a78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 015D
        gbc.setState(0x68a2, 0x82b8, 0xcea0, 0xb297, 0x78a3, 0x841c, 0x0, 0x1);
        gbc.writeMem(0x68a2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x82b8, gbc.sp());
        EXPECT(0x68a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 015E
        gbc.setState(0xd37a, 0xd032, 0x8ff0, 0x5ff1, 0xca9e, 0xb0c0, 0x0, 0x0);
        gbc.writeMem(0xd37a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd032, gbc.sp());
        EXPECT(0xd37c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd37a));
        EXPECT(0x9c, gbc.readMem(0xd37b));
        // CB 9C 015F
        gbc.setState(0x9dec, 0x75, 0x1660, 0x18bd, 0xc01, 0x4598, 0x0, 0x1);
        gbc.writeMem(0x9dec, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x75, gbc.sp());
        EXPECT(0x9dee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dec));
        EXPECT(0x9c, gbc.readMem(0x9ded));
        // CB 9C 0160
        gbc.setState(0x5486, 0xc2a2, 0x5280, 0xec54, 0x9b29, 0xf208, 0x1, 0x1);
        gbc.writeMem(0x5486, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc2a2, gbc.sp());
        EXPECT(0x5488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0161
        gbc.setState(0x143d, 0xdff5, 0x7630, 0x57e9, 0xda13, 0xdfa5, 0x0, 0x1);
        gbc.writeMem(0x143d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xdff5, gbc.sp());
        EXPECT(0x143f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0162
        gbc.setState(0x48ee, 0x2626, 0x65e0, 0x381d, 0x752, 0x1cbb, 0x0, 0x1);
        gbc.writeMem(0x48ee, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2626, gbc.sp());
        EXPECT(0x48f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0163
        gbc.setState(0x23de, 0x9c81, 0xcf20, 0x2906, 0x31f4, 0xcc76, 0x0, 0x0);
        gbc.writeMem(0x23de, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9c81, gbc.sp());
        EXPECT(0x23e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0164
        gbc.setState(0x5b99, 0xc3ee, 0x2af0, 0x3517, 0x966a, 0xface, 0x0, 0x0);
        gbc.writeMem(0x5b99, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc3ee, gbc.sp());
        EXPECT(0x5b9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0165
        gbc.setState(0x8ea8, 0x84a7, 0xf5d0, 0x90ba, 0x156e, 0x5a25, 0x0, 0x1);
        gbc.writeMem(0x8ea8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x84a7, gbc.sp());
        EXPECT(0x8eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea8));
        EXPECT(0x9c, gbc.readMem(0x8ea9));
        // CB 9C 0166
        gbc.setState(0x47ce, 0xc834, 0xc170, 0x2264, 0x9088, 0x40e4, 0x1, 0x1);
        gbc.writeMem(0x47ce, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc834, gbc.sp());
        EXPECT(0x47d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0167
        gbc.setState(0x9a05, 0x1434, 0xc6e0, 0x2048, 0x1de0, 0x3e0, 0x1, 0x0);
        gbc.writeMem(0x9a05, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1434, gbc.sp());
        EXPECT(0x9a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a05));
        EXPECT(0x9c, gbc.readMem(0x9a06));
        // CB 9C 0168
        gbc.setState(0xd3a, 0x18a5, 0x45e0, 0xdb25, 0x5975, 0x7da5, 0x1, 0x0);
        gbc.writeMem(0xd3a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x18a5, gbc.sp());
        EXPECT(0xd3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0169
        gbc.setState(0xaaa6, 0xe24, 0x7d70, 0x1f87, 0x4e98, 0xd8e7, 0x0, 0x1);
        gbc.writeMem(0xaaa6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe24, gbc.sp());
        EXPECT(0xaaa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa6));
        EXPECT(0x9c, gbc.readMem(0xaaa7));
        // CB 9C 016A
        gbc.setState(0x77e5, 0x9244, 0xd210, 0x858e, 0x5fb8, 0xb1e9, 0x1, 0x0);
        gbc.writeMem(0x77e5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9244, gbc.sp());
        EXPECT(0x77e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 016B
        gbc.setState(0xec8d, 0xb434, 0x7c0, 0xb99f, 0x5022, 0xaffb, 0x1, 0x0);
        gbc.writeMem(0xec8d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb434, gbc.sp());
        EXPECT(0xec8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec8d));
        EXPECT(0x9c, gbc.readMem(0xec8e));
        // CB 9C 016C
        gbc.setState(0xe195, 0xca51, 0xf400, 0xb34a, 0x5b88, 0xb395, 0x1, 0x1);
        gbc.writeMem(0xe195, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xca51, gbc.sp());
        EXPECT(0xe197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe195));
        EXPECT(0x9c, gbc.readMem(0xe196));
        // CB 9C 016D
        gbc.setState(0xb83b, 0xce96, 0xa9b0, 0x1d91, 0x1c93, 0xe1eb, 0x0, 0x0);
        gbc.writeMem(0xb83b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xce96, gbc.sp());
        EXPECT(0xb83d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb83b));
        EXPECT(0x9c, gbc.readMem(0xb83c));
        // CB 9C 016E
        gbc.setState(0xe7b8, 0x4b94, 0xec50, 0x1f49, 0xcca1, 0xc109, 0x1, 0x0);
        gbc.writeMem(0xe7b8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4b94, gbc.sp());
        EXPECT(0xe7ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7b8));
        EXPECT(0x9c, gbc.readMem(0xe7b9));
        // CB 9C 016F
        gbc.setState(0xcd4a, 0x398b, 0x720, 0x171d, 0xb59e, 0x3c64, 0x1, 0x1);
        gbc.writeMem(0xcd4a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x398b, gbc.sp());
        EXPECT(0xcd4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd4a));
        EXPECT(0x9c, gbc.readMem(0xcd4b));
        // CB 9C 0170
        gbc.setState(0xa2d1, 0x9c96, 0x4fb0, 0x6f9c, 0x20b9, 0x933e, 0x1, 0x0);
        gbc.writeMem(0xa2d1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9c96, gbc.sp());
        EXPECT(0xa2d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d1));
        EXPECT(0x9c, gbc.readMem(0xa2d2));
        // CB 9C 0171
        gbc.setState(0x70af, 0xc6a, 0x1be0, 0x602f, 0x23f8, 0xac95, 0x0, 0x0);
        gbc.writeMem(0x70af, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc6a, gbc.sp());
        EXPECT(0x70b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0172
        gbc.setState(0xff8, 0xc412, 0x9a70, 0xc1b2, 0xa4da, 0xe92a, 0x1, 0x1);
        gbc.writeMem(0xff8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc412, gbc.sp());
        EXPECT(0xffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0173
        gbc.setState(0x19ac, 0x4da7, 0x92e0, 0x498c, 0xd457, 0x6109, 0x1, 0x1);
        gbc.writeMem(0x19ac, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4da7, gbc.sp());
        EXPECT(0x19ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0174
        gbc.setState(0xc225, 0xac7c, 0x7f50, 0x41fa, 0x5e8c, 0x367, 0x0, 0x0);
        gbc.writeMem(0xc225, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xac7c, gbc.sp());
        EXPECT(0xc227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc225));
        EXPECT(0x9c, gbc.readMem(0xc226));
        // CB 9C 0175
        gbc.setState(0xe82d, 0xc513, 0xfd40, 0x8ab2, 0xdba8, 0xeb0e, 0x0, 0x1);
        gbc.writeMem(0xe82d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc513, gbc.sp());
        EXPECT(0xe82f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe82d));
        EXPECT(0x9c, gbc.readMem(0xe82e));
        // CB 9C 0176
        gbc.setState(0xe3f3, 0xdcd4, 0x8620, 0xfd1d, 0x5ead, 0x8ebb, 0x1, 0x0);
        gbc.writeMem(0xe3f3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdcd4, gbc.sp());
        EXPECT(0xe3f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3f3));
        EXPECT(0x9c, gbc.readMem(0xe3f4));
        // CB 9C 0177
        gbc.setState(0x6fed, 0x6cab, 0x7fb0, 0xbadf, 0x913c, 0xad31, 0x1, 0x1);
        gbc.writeMem(0x6fed, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6cab, gbc.sp());
        EXPECT(0x6fef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0178
        gbc.setState(0x9a48, 0x8f49, 0xeca0, 0x80fc, 0x3cbc, 0xcef4, 0x1, 0x1);
        gbc.writeMem(0x9a48, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8f49, gbc.sp());
        EXPECT(0x9a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a48));
        EXPECT(0x9c, gbc.readMem(0x9a49));
        // CB 9C 0179
        gbc.setState(0xed80, 0x3502, 0x26f0, 0xfa2, 0x487a, 0x2dd4, 0x1, 0x0);
        gbc.writeMem(0xed80, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3502, gbc.sp());
        EXPECT(0xed82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed80));
        EXPECT(0x9c, gbc.readMem(0xed81));
        // CB 9C 017A
        gbc.setState(0xcf37, 0xf5c1, 0x630, 0x4dda, 0xbe6d, 0x765c, 0x1, 0x0);
        gbc.writeMem(0xcf37, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf5c1, gbc.sp());
        EXPECT(0xcf39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf37));
        EXPECT(0x9c, gbc.readMem(0xcf38));
        // CB 9C 017B
        gbc.setState(0x7a1b, 0x80e4, 0xf820, 0xa759, 0x28ba, 0xf4fa, 0x0, 0x1);
        gbc.writeMem(0x7a1b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x80e4, gbc.sp());
        EXPECT(0x7a1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 017C
        gbc.setState(0xd988, 0x938e, 0x9880, 0x2940, 0x5dcf, 0xaf99, 0x1, 0x1);
        gbc.writeMem(0xd988, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x938e, gbc.sp());
        EXPECT(0xd98a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd988));
        EXPECT(0x9c, gbc.readMem(0xd989));
        // CB 9C 017D
        gbc.setState(0x7e7f, 0x1bff, 0x1f20, 0x52fb, 0x7412, 0x830a, 0x0, 0x0);
        gbc.writeMem(0x7e7f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1bff, gbc.sp());
        EXPECT(0x7e81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 017F
        gbc.setState(0xcee5, 0x47c2, 0x7fc0, 0xb907, 0xa3a3, 0xa0aa, 0x0, 0x1);
        gbc.writeMem(0xcee5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x47c2, gbc.sp());
        EXPECT(0xcee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcee5));
        EXPECT(0x9c, gbc.readMem(0xcee6));
        // CB 9C 0180
        gbc.setState(0x2979, 0x570e, 0xaa00, 0x4aa0, 0x7b7c, 0x280d, 0x0, 0x1);
        gbc.writeMem(0x2979, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x570e, gbc.sp());
        EXPECT(0x297b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0181
        gbc.setState(0xa61, 0x806e, 0x2db0, 0x1c4c, 0x686d, 0x9aac, 0x1, 0x0);
        gbc.writeMem(0xa61, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x806e, gbc.sp());
        EXPECT(0xa63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0182
        gbc.setState(0xaef, 0x15c3, 0x1fc0, 0x7dd1, 0x34f2, 0x778d, 0x1, 0x1);
        gbc.writeMem(0xaef, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x15c3, gbc.sp());
        EXPECT(0xaf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0183
        gbc.setState(0xa775, 0xc8a, 0x4260, 0xfa36, 0xa59c, 0xace4, 0x1, 0x1);
        gbc.writeMem(0xa775, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc8a, gbc.sp());
        EXPECT(0xa777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa775));
        EXPECT(0x9c, gbc.readMem(0xa776));
        // CB 9C 0184
        gbc.setState(0x43f3, 0xe2ff, 0x2310, 0x3685, 0x2e38, 0x10d9, 0x0, 0x1);
        gbc.writeMem(0x43f3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe2ff, gbc.sp());
        EXPECT(0x43f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0185
        gbc.setState(0x551d, 0x72d8, 0x2aa0, 0x17b8, 0x6e11, 0x3d3, 0x1, 0x1);
        gbc.writeMem(0x551d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x72d8, gbc.sp());
        EXPECT(0x551f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0186
        gbc.setState(0xe7b9, 0x9959, 0xa7d0, 0x5ed4, 0x4970, 0x5972, 0x1, 0x1);
        gbc.writeMem(0xe7b9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9959, gbc.sp());
        EXPECT(0xe7bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7b9));
        EXPECT(0x9c, gbc.readMem(0xe7ba));
        // CB 9C 0187
        gbc.setState(0x312a, 0xfc25, 0x5920, 0xd302, 0xcd85, 0x6ffa, 0x1, 0x0);
        gbc.writeMem(0x312a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xfc25, gbc.sp());
        EXPECT(0x312c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0188
        gbc.setState(0x4bcb, 0x1df3, 0x6030, 0xd230, 0x83fd, 0x2d56, 0x0, 0x1);
        gbc.writeMem(0x4bcb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1df3, gbc.sp());
        EXPECT(0x4bcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0189
        gbc.setState(0x3aad, 0x5194, 0xd410, 0x92c2, 0x3723, 0xb192, 0x1, 0x1);
        gbc.writeMem(0x3aad, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5194, gbc.sp());
        EXPECT(0x3aaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 018A
        gbc.setState(0x9e7b, 0xdc7d, 0xd490, 0xda85, 0x1da1, 0xa40b, 0x0, 0x0);
        gbc.writeMem(0x9e7b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xdc7d, gbc.sp());
        EXPECT(0x9e7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e7b));
        EXPECT(0x9c, gbc.readMem(0x9e7c));
        // CB 9C 018B
        gbc.setState(0x2542, 0x1a68, 0xad60, 0xbc6b, 0x5525, 0xd071, 0x1, 0x0);
        gbc.writeMem(0x2542, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1a68, gbc.sp());
        EXPECT(0x2544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 018C
        gbc.setState(0x4af4, 0xed5e, 0xfd50, 0xbbef, 0xa76f, 0x81c7, 0x0, 0x1);
        gbc.writeMem(0x4af4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xed5e, gbc.sp());
        EXPECT(0x4af6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 018D
        gbc.setState(0xc717, 0x6ae3, 0xb9c0, 0x3940, 0xb0c2, 0x17d1, 0x0, 0x0);
        gbc.writeMem(0xc717, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6ae3, gbc.sp());
        EXPECT(0xc719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc717));
        EXPECT(0x9c, gbc.readMem(0xc718));
        // CB 9C 018E
        gbc.setState(0x2f5f, 0xec80, 0xff70, 0xce7, 0xda3f, 0x1ac6, 0x1, 0x0);
        gbc.writeMem(0x2f5f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xec80, gbc.sp());
        EXPECT(0x2f61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 018F
        gbc.setState(0x227, 0x766d, 0xe6c0, 0xba13, 0xbfc, 0x4056, 0x0, 0x1);
        gbc.writeMem(0x227, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x766d, gbc.sp());
        EXPECT(0x229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0190
        gbc.setState(0x691c, 0xe563, 0x3340, 0x8715, 0xff3f, 0x4d21, 0x0, 0x0);
        gbc.writeMem(0x691c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe563, gbc.sp());
        EXPECT(0x691e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0191
        gbc.setState(0x6604, 0x79f4, 0x29b0, 0xe54d, 0x3e06, 0xb92c, 0x1, 0x1);
        gbc.writeMem(0x6604, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x79f4, gbc.sp());
        EXPECT(0x6606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0192
        gbc.setState(0x2b90, 0x90b3, 0x300, 0x1b3d, 0x8936, 0x15a2, 0x1, 0x0);
        gbc.writeMem(0x2b90, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x90b3, gbc.sp());
        EXPECT(0x2b92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0193
        gbc.setState(0x5185, 0x611a, 0xc730, 0x190b, 0xd519, 0xf7f0, 0x1, 0x0);
        gbc.writeMem(0x5185, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x611a, gbc.sp());
        EXPECT(0x5187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0194
        gbc.setState(0xde24, 0xbf5, 0x5f0, 0x4844, 0xb822, 0xf6ad, 0x0, 0x1);
        gbc.writeMem(0xde24, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xbf5, gbc.sp());
        EXPECT(0xde26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde24));
        EXPECT(0x9c, gbc.readMem(0xde25));
        // CB 9C 0195
        gbc.setState(0xc82d, 0xaa3, 0x78d0, 0xe45a, 0x92cc, 0xe680, 0x0, 0x1);
        gbc.writeMem(0xc82d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xaa3, gbc.sp());
        EXPECT(0xc82f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc82d));
        EXPECT(0x9c, gbc.readMem(0xc82e));
        // CB 9C 0196
        gbc.setState(0x1a99, 0xbc4a, 0x6240, 0x7b30, 0x971a, 0xc327, 0x0, 0x1);
        gbc.writeMem(0x1a99, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbc4a, gbc.sp());
        EXPECT(0x1a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0197
        gbc.setState(0x393a, 0xc1bc, 0x8690, 0xc7f6, 0xbb02, 0xb518, 0x0, 0x1);
        gbc.writeMem(0x393a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc1bc, gbc.sp());
        EXPECT(0x393c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0198
        gbc.setState(0x4ae2, 0x115f, 0xb5a0, 0x7036, 0xea2e, 0x50e8, 0x1, 0x0);
        gbc.writeMem(0x4ae2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x115f, gbc.sp());
        EXPECT(0x4ae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0199
        gbc.setState(0xbb04, 0x5dd7, 0xb570, 0x78b5, 0xe607, 0xca64, 0x1, 0x1);
        gbc.writeMem(0xbb04, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5dd7, gbc.sp());
        EXPECT(0xbb06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb04));
        EXPECT(0x9c, gbc.readMem(0xbb05));
        // CB 9C 019A
        gbc.setState(0x4f12, 0xc521, 0x9250, 0x196c, 0x1a6d, 0x6c17, 0x1, 0x1);
        gbc.writeMem(0x4f12, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc521, gbc.sp());
        EXPECT(0x4f14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 019B
        gbc.setState(0x346a, 0x19f1, 0xcc90, 0x476a, 0x3c4f, 0x5ba6, 0x1, 0x0);
        gbc.writeMem(0x346a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x19f1, gbc.sp());
        EXPECT(0x346c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 019C
        gbc.setState(0x63e5, 0x986f, 0x3410, 0xbb06, 0x3665, 0xcffe, 0x1, 0x1);
        gbc.writeMem(0x63e5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x986f, gbc.sp());
        EXPECT(0x63e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 019D
        gbc.setState(0x167e, 0xda0, 0x1be0, 0x205d, 0x7863, 0x5eba, 0x0, 0x0);
        gbc.writeMem(0x167e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xda0, gbc.sp());
        EXPECT(0x1680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 019E
        gbc.setState(0x7868, 0x289f, 0x7ea0, 0xdf58, 0xa7bc, 0x477b, 0x0, 0x0);
        gbc.writeMem(0x7868, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x289f, gbc.sp());
        EXPECT(0x786a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 019F
        gbc.setState(0xec9f, 0x5cd6, 0x3e0, 0x2728, 0x8270, 0x8e00, 0x1, 0x1);
        gbc.writeMem(0xec9f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5cd6, gbc.sp());
        EXPECT(0xeca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec9f));
        EXPECT(0x9c, gbc.readMem(0xeca0));
        // CB 9C 01A0
        gbc.setState(0xe231, 0xafc6, 0xd870, 0x145, 0xb22, 0xa69d, 0x0, 0x0);
        gbc.writeMem(0xe231, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xafc6, gbc.sp());
        EXPECT(0xe233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe231));
        EXPECT(0x9c, gbc.readMem(0xe232));
        // CB 9C 01A1
        gbc.setState(0x70d8, 0x260b, 0x18c0, 0xaad2, 0x7817, 0xe56f, 0x0, 0x0);
        gbc.writeMem(0x70d8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x260b, gbc.sp());
        EXPECT(0x70da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 01A2
        gbc.setState(0x11ad, 0x3e26, 0xda90, 0x768b, 0x5917, 0xfee, 0x0, 0x0);
        gbc.writeMem(0x11ad, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3e26, gbc.sp());
        EXPECT(0x11af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 01A3
        gbc.setState(0x9458, 0x20b, 0x2f90, 0x64d, 0x9ba4, 0xa7b9, 0x1, 0x1);
        gbc.writeMem(0x9458, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x20b, gbc.sp());
        EXPECT(0x945a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9458));
        EXPECT(0x9c, gbc.readMem(0x9459));
        // CB 9C 01A4
        gbc.setState(0xbaf1, 0x4f29, 0xe770, 0x1b8c, 0x6f89, 0x11dd, 0x0, 0x1);
        gbc.writeMem(0xbaf1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4f29, gbc.sp());
        EXPECT(0xbaf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaf1));
        EXPECT(0x9c, gbc.readMem(0xbaf2));
        // CB 9C 01A5
        gbc.setState(0x491, 0xf210, 0x740, 0xde8b, 0x5fac, 0x22b, 0x0, 0x0);
        gbc.writeMem(0x491, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf210, gbc.sp());
        EXPECT(0x493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 01A6
        gbc.setState(0x587, 0xc60c, 0x71d0, 0x5959, 0x1b3, 0xf54d, 0x1, 0x0);
        gbc.writeMem(0x587, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc60c, gbc.sp());
        EXPECT(0x589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 01A7
        gbc.setState(0x9f29, 0xd0f1, 0xb920, 0x1323, 0xce2a, 0x3c0b, 0x1, 0x0);
        gbc.writeMem(0x9f29, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd0f1, gbc.sp());
        EXPECT(0x9f2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f29));
        EXPECT(0x9c, gbc.readMem(0x9f2a));
        // CB 9C 01A9
        gbc.setState(0xdf98, 0x666f, 0x8470, 0xcfd7, 0x2dc7, 0x3c21, 0x0, 0x1);
        gbc.writeMem(0xdf98, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x666f, gbc.sp());
        EXPECT(0xdf9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf98));
        EXPECT(0x9c, gbc.readMem(0xdf99));
        // CB 9C 01AB
        gbc.setState(0xe369, 0xca47, 0xf850, 0xcd8, 0xaa85, 0xc302, 0x1, 0x0);
        gbc.writeMem(0xe369, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xca47, gbc.sp());
        EXPECT(0xe36b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe369));
        EXPECT(0x9c, gbc.readMem(0xe36a));
        // CB 9C 01AC
        gbc.setState(0x2de4, 0x1956, 0x8780, 0xa3e, 0x9bd4, 0xeae2, 0x0, 0x1);
        gbc.writeMem(0x2de4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1956, gbc.sp());
        EXPECT(0x2de6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 01AD
        gbc.setState(0x4064, 0xb95e, 0xacc0, 0x5913, 0xdbc1, 0x7154, 0x0, 0x0);
        gbc.writeMem(0x4064, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb95e, gbc.sp());
        EXPECT(0x4066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 01AE
        gbc.setState(0x7c3f, 0x3f4c, 0x6d80, 0xd3b6, 0x8aa2, 0xac72, 0x0, 0x0);
        gbc.writeMem(0x7c3f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3f4c, gbc.sp());
        EXPECT(0x7c41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 01AF
        gbc.setState(0xd628, 0xa728, 0x7380, 0xeaf4, 0x45e, 0x84b7, 0x1, 0x0);
        gbc.writeMem(0xd628, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa728, gbc.sp());
        EXPECT(0xd62a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd628));
        EXPECT(0x9c, gbc.readMem(0xd629));
        // CB 9C 01B0
        gbc.setState(0xd81b, 0x64ce, 0xda50, 0x26fb, 0xd5f, 0x8663, 0x1, 0x1);
        gbc.writeMem(0xd81b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x64ce, gbc.sp());
        EXPECT(0xd81d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd81b));
        EXPECT(0x9c, gbc.readMem(0xd81c));
        // CB 9C 01B1
        gbc.setState(0x7831, 0x90b7, 0x4580, 0x3c65, 0xffb3, 0x2e53, 0x1, 0x0);
        gbc.writeMem(0x7831, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x90b7, gbc.sp());
        EXPECT(0x7833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 01B2
        gbc.setState(0xe6ca, 0x4bcd, 0x9650, 0xd2ed, 0x3f37, 0xc046, 0x0, 0x0);
        gbc.writeMem(0xe6ca, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4bcd, gbc.sp());
        EXPECT(0xe6cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6ca));
        EXPECT(0x9c, gbc.readMem(0xe6cb));
        // CB 9C 01B3
        gbc.setState(0x96e8, 0x1df9, 0x1a50, 0xb07a, 0x8f29, 0x7a19, 0x1, 0x0);
        gbc.writeMem(0x96e8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1df9, gbc.sp());
        EXPECT(0x96ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e8));
        EXPECT(0x9c, gbc.readMem(0x96e9));
        // CB 9C 01B4
        gbc.setState(0x3e9b, 0xac1f, 0xcb20, 0xe14c, 0xf11, 0x590e, 0x0, 0x0);
        gbc.writeMem(0x3e9b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xac1f, gbc.sp());
        EXPECT(0x3e9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 01B6
        gbc.setState(0xee9e, 0x4ccc, 0xc2d0, 0x8a78, 0x80dc, 0x2183, 0x0, 0x1);
        gbc.writeMem(0xee9e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4ccc, gbc.sp());
        EXPECT(0xeea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee9e));
        EXPECT(0x9c, gbc.readMem(0xee9f));
        // CB 9C 01B7
        gbc.setState(0xe61c, 0x1569, 0x49a0, 0xc202, 0x7eb6, 0x4045, 0x1, 0x1);
        gbc.writeMem(0xe61c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1569, gbc.sp());
        EXPECT(0xe61e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe61c));
        EXPECT(0x9c, gbc.readMem(0xe61d));
        // CB 9C 01B8
        gbc.setState(0xbb5, 0x4b61, 0x2ee0, 0x832, 0x91a3, 0xfd55, 0x0, 0x0);
        gbc.writeMem(0xbb5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4b61, gbc.sp());
        EXPECT(0xbb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 01B9
        gbc.setState(0x9564, 0xc33b, 0x3ee0, 0xb6ce, 0x8988, 0xbda8, 0x0, 0x1);
        gbc.writeMem(0x9564, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc33b, gbc.sp());
        EXPECT(0x9566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9564));
        EXPECT(0x9c, gbc.readMem(0x9565));
        // CB 9C 01BA
        gbc.setState(0x417d, 0xa2b6, 0x4950, 0x2ff6, 0xbc13, 0x7cd3, 0x1, 0x0);
        gbc.writeMem(0x417d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa2b6, gbc.sp());
        EXPECT(0x417f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 01BB
        gbc.setState(0x1515, 0xe47c, 0xfc80, 0x7dd2, 0x1943, 0xfacc, 0x0, 0x0);
        gbc.writeMem(0x1515, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe47c, gbc.sp());
        EXPECT(0x1517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 01BC
        gbc.setState(0xb2c4, 0x2a9a, 0x2290, 0xc9eb, 0xc8cd, 0xba2, 0x1, 0x1);
        gbc.writeMem(0xb2c4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2a9a, gbc.sp());
        EXPECT(0xb2c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2c4));
        EXPECT(0x9c, gbc.readMem(0xb2c5));
        // CB 9C 01BD
        gbc.setState(0xb311, 0x62de, 0x360, 0x1e4d, 0x7673, 0x6f90, 0x0, 0x0);
        gbc.writeMem(0xb311, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x62de, gbc.sp());
        EXPECT(0xb313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb311));
        EXPECT(0x9c, gbc.readMem(0xb312));
        // CB 9C 01BE
        gbc.setState(0x56e3, 0xcca, 0x6080, 0x33ec, 0x2493, 0xed00, 0x0, 0x0);
        gbc.writeMem(0x56e3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xcca, gbc.sp());
        EXPECT(0x56e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 01BF
        gbc.setState(0x315c, 0x55bf, 0xedd0, 0xbd52, 0x6ab7, 0x2cc6, 0x1, 0x0);
        gbc.writeMem(0x315c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x55bf, gbc.sp());
        EXPECT(0x315e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 01C0
        gbc.setState(0xd2c3, 0xc7ff, 0x90a0, 0x1d9c, 0xb0a6, 0xf5f1, 0x1, 0x1);
        gbc.writeMem(0xd2c3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc7ff, gbc.sp());
        EXPECT(0xd2c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2c3));
        EXPECT(0x9c, gbc.readMem(0xd2c4));
        // CB 9C 01C1
        gbc.setState(0xbad8, 0x5402, 0xb10, 0x9f35, 0x757c, 0xbafc, 0x1, 0x0);
        gbc.writeMem(0xbad8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5402, gbc.sp());
        EXPECT(0xbada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad8));
        EXPECT(0x9c, gbc.readMem(0xbad9));
        // CB 9C 01C3
        gbc.setState(0x91e2, 0xeb64, 0xe7e0, 0x2dc2, 0x475d, 0x1572, 0x1, 0x1);
        gbc.writeMem(0x91e2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xeb64, gbc.sp());
        EXPECT(0x91e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91e2));
        EXPECT(0x9c, gbc.readMem(0x91e3));
        // CB 9C 01C4
        gbc.setState(0xc0bb, 0x1119, 0xb3c0, 0xb792, 0x6b74, 0xf5b9, 0x1, 0x0);
        gbc.writeMem(0xc0bb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1119, gbc.sp());
        EXPECT(0xc0bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0bb));
        EXPECT(0x9c, gbc.readMem(0xc0bc));
        // CB 9C 01C5
        gbc.setState(0xd108, 0xd544, 0xc1d0, 0xac75, 0xc942, 0x3d1a, 0x0, 0x0);
        gbc.writeMem(0xd108, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd544, gbc.sp());
        EXPECT(0xd10a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd108));
        EXPECT(0x9c, gbc.readMem(0xd109));
        // CB 9C 01C6
        gbc.setState(0xd853, 0xe175, 0xb9f0, 0xb346, 0x6750, 0xee2d, 0x0, 0x0);
        gbc.writeMem(0xd853, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe175, gbc.sp());
        EXPECT(0xd855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd853));
        EXPECT(0x9c, gbc.readMem(0xd854));
        // CB 9C 01C7
        gbc.setState(0xaf79, 0x19d9, 0xd850, 0xdd0b, 0x4bc6, 0xbf67, 0x1, 0x1);
        gbc.writeMem(0xaf79, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x19d9, gbc.sp());
        EXPECT(0xaf7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf79));
        EXPECT(0x9c, gbc.readMem(0xaf7a));
        // CB 9C 01C8
        gbc.setState(0xec44, 0x4689, 0x4500, 0x6f9e, 0x5ab2, 0xd1c1, 0x1, 0x0);
        gbc.writeMem(0xec44, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4689, gbc.sp());
        EXPECT(0xec46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec44));
        EXPECT(0x9c, gbc.readMem(0xec45));
        // CB 9C 01C9
        gbc.setState(0xe050, 0xb4ea, 0xbc30, 0x4070, 0x5c23, 0xe108, 0x1, 0x1);
        gbc.writeMem(0xe050, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb4ea, gbc.sp());
        EXPECT(0xe052, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe050));
        EXPECT(0x9c, gbc.readMem(0xe051));
        // CB 9C 01CA
        gbc.setState(0x81f6, 0xd3d1, 0x4360, 0x64, 0x77b5, 0x5d73, 0x1, 0x1);
        gbc.writeMem(0x81f6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd3d1, gbc.sp());
        EXPECT(0x81f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81f6));
        EXPECT(0x9c, gbc.readMem(0x81f7));
        // CB 9C 01CB
        gbc.setState(0x64b1, 0x1f98, 0xa930, 0x1740, 0xa19e, 0x2123, 0x1, 0x0);
        gbc.writeMem(0x64b1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1f98, gbc.sp());
        EXPECT(0x64b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 01CC
        gbc.setState(0xab35, 0xa119, 0x37c0, 0xe257, 0xf12c, 0x5eda, 0x1, 0x1);
        gbc.writeMem(0xab35, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa119, gbc.sp());
        EXPECT(0xab37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab35));
        EXPECT(0x9c, gbc.readMem(0xab36));
        // CB 9C 01CD
        gbc.setState(0x3f5c, 0xe0ba, 0xf420, 0x4570, 0x94ad, 0xae02, 0x0, 0x1);
        gbc.writeMem(0x3f5c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe0ba, gbc.sp());
        EXPECT(0x3f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 01CE
        gbc.setState(0x1f05, 0x94db, 0x92d0, 0x82b2, 0x6507, 0xa419, 0x1, 0x0);
        gbc.writeMem(0x1f05, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x94db, gbc.sp());
        EXPECT(0x1f07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 01CF
        gbc.setState(0x9274, 0xc3e3, 0x3450, 0x85e2, 0x5f10, 0xb73c, 0x0, 0x1);
        gbc.writeMem(0x9274, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc3e3, gbc.sp());
        EXPECT(0x9276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9274));
        EXPECT(0x9c, gbc.readMem(0x9275));
        // CB 9C 01D0
        gbc.setState(0xb6b0, 0x9903, 0x9910, 0x2493, 0x273d, 0xc7a5, 0x0, 0x1);
        gbc.writeMem(0xb6b0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9903, gbc.sp());
        EXPECT(0xb6b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6b0));
        EXPECT(0x9c, gbc.readMem(0xb6b1));
        // CB 9C 01D1
        gbc.setState(0x5bc, 0xffee, 0x1950, 0x25ec, 0x6632, 0x3d38, 0x0, 0x1);
        gbc.writeMem(0x5bc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xffee, gbc.sp());
        EXPECT(0x5be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 01D2
        gbc.setState(0x4fdb, 0xb406, 0xec00, 0xb8ba, 0xc000, 0x9cdb, 0x1, 0x1);
        gbc.writeMem(0x4fdb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb406, gbc.sp());
        EXPECT(0x4fdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 01D3
        gbc.setState(0x9bbe, 0xa118, 0xb2f0, 0x5cc2, 0x6540, 0x2a71, 0x1, 0x0);
        gbc.writeMem(0x9bbe, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa118, gbc.sp());
        EXPECT(0x9bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bbe));
        EXPECT(0x9c, gbc.readMem(0x9bbf));
        // CB 9C 01D4
        gbc.setState(0xac06, 0xd58c, 0x4d30, 0xec53, 0xf179, 0x5a1b, 0x0, 0x1);
        gbc.writeMem(0xac06, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd58c, gbc.sp());
        EXPECT(0xac08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac06));
        EXPECT(0x9c, gbc.readMem(0xac07));
        // CB 9C 01D5
        gbc.setState(0x3a3d, 0xb9a4, 0xa440, 0x8904, 0x174c, 0x8361, 0x1, 0x1);
        gbc.writeMem(0x3a3d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb9a4, gbc.sp());
        EXPECT(0x3a3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 01D6
        gbc.setState(0x2d11, 0x3898, 0x9ad0, 0x7a74, 0xf483, 0x5b5c, 0x1, 0x1);
        gbc.writeMem(0x2d11, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3898, gbc.sp());
        EXPECT(0x2d13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 01D7
        gbc.setState(0x31fd, 0x7d0a, 0x210, 0x51b5, 0x6a4c, 0x9f55, 0x0, 0x0);
        gbc.writeMem(0x31fd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7d0a, gbc.sp());
        EXPECT(0x31ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 01D8
        gbc.setState(0xbb72, 0x5387, 0x6b60, 0xebd5, 0x7619, 0x2b91, 0x1, 0x1);
        gbc.writeMem(0xbb72, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5387, gbc.sp());
        EXPECT(0xbb74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb72));
        EXPECT(0x9c, gbc.readMem(0xbb73));
        // CB 9C 01D9
        gbc.setState(0xc5c1, 0x2bf0, 0x9710, 0x560a, 0xeb67, 0x77f4, 0x0, 0x1);
        gbc.writeMem(0xc5c1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2bf0, gbc.sp());
        EXPECT(0xc5c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c1));
        EXPECT(0x9c, gbc.readMem(0xc5c2));
        // CB 9C 01DA
        gbc.setState(0xd8cd, 0xefa, 0xec10, 0x341c, 0x629c, 0xe8a9, 0x0, 0x1);
        gbc.writeMem(0xd8cd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xefa, gbc.sp());
        EXPECT(0xd8cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8cd));
        EXPECT(0x9c, gbc.readMem(0xd8ce));
        // CB 9C 01DB
        gbc.setState(0xd043, 0x42f4, 0xe430, 0xb664, 0x2612, 0x1106, 0x1, 0x1);
        gbc.writeMem(0xd043, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x42f4, gbc.sp());
        EXPECT(0xd045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd043));
        EXPECT(0x9c, gbc.readMem(0xd044));
        // CB 9C 01DC
        gbc.setState(0x1fa0, 0xa0e4, 0x12f0, 0x3691, 0x2c09, 0xc63f, 0x1, 0x0);
        gbc.writeMem(0x1fa0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa0e4, gbc.sp());
        EXPECT(0x1fa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 01DD
        gbc.setState(0x2c46, 0xc27c, 0x7170, 0x4e47, 0x5a0e, 0x81f6, 0x1, 0x0);
        gbc.writeMem(0x2c46, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc27c, gbc.sp());
        EXPECT(0x2c48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 01DE
        gbc.setState(0xa737, 0xcc80, 0xc3e0, 0x2b77, 0xe7e0, 0x79d8, 0x1, 0x1);
        gbc.writeMem(0xa737, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcc80, gbc.sp());
        EXPECT(0xa739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa737));
        EXPECT(0x9c, gbc.readMem(0xa738));
        // CB 9C 01DF
        gbc.setState(0xd763, 0x3346, 0x2650, 0x6ff9, 0xff7, 0xef43, 0x1, 0x1);
        gbc.writeMem(0xd763, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3346, gbc.sp());
        EXPECT(0xd765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd763));
        EXPECT(0x9c, gbc.readMem(0xd764));
        // CB 9C 01E0
        gbc.setState(0xc690, 0xeb0b, 0xc460, 0xc7dd, 0xffe5, 0xc356, 0x0, 0x1);
        gbc.writeMem(0xc690, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xeb0b, gbc.sp());
        EXPECT(0xc692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc690));
        EXPECT(0x9c, gbc.readMem(0xc691));
        // CB 9C 01E1
        gbc.setState(0x67, 0x788e, 0x89a0, 0x4a84, 0xb5dd, 0xd203, 0x0, 0x1);
        gbc.writeMem(0x67, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x788e, gbc.sp());
        EXPECT(0x69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 01E2
        gbc.setState(0xb547, 0x6a41, 0x1f60, 0x88ce, 0x25cc, 0xefbb, 0x1, 0x1);
        gbc.writeMem(0xb547, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6a41, gbc.sp());
        EXPECT(0xb549, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb547));
        EXPECT(0x9c, gbc.readMem(0xb548));
        // CB 9C 01E3
        gbc.setState(0xe349, 0xf9c9, 0x5220, 0x744b, 0xed72, 0xcc8d, 0x1, 0x1);
        gbc.writeMem(0xe349, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf9c9, gbc.sp());
        EXPECT(0xe34b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe349));
        EXPECT(0x9c, gbc.readMem(0xe34a));
        // CB 9C 01E4
        gbc.setState(0x78d6, 0x8f8c, 0x9e80, 0x30b6, 0xc53d, 0x4, 0x0, 0x0);
        gbc.writeMem(0x78d6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8f8c, gbc.sp());
        EXPECT(0x78d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 01E5
        gbc.setState(0x292a, 0x43fa, 0x8b20, 0x8384, 0x8362, 0x6f22, 0x1, 0x0);
        gbc.writeMem(0x292a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x43fa, gbc.sp());
        EXPECT(0x292c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 01E6
        gbc.setState(0x193, 0x92b1, 0xfe70, 0x5bd8, 0xd22e, 0xb4dc, 0x0, 0x0);
        gbc.writeMem(0x193, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x92b1, gbc.sp());
        EXPECT(0x195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 01E7
        gbc.setState(0xad6a, 0x4c3c, 0x9590, 0x9011, 0x1675, 0x3812, 0x0, 0x0);
        gbc.writeMem(0xad6a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4c3c, gbc.sp());
        EXPECT(0xad6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad6a));
        EXPECT(0x9c, gbc.readMem(0xad6b));
        // CB 9C 01E8
        gbc.setState(0x5282, 0x46ac, 0xfc30, 0x69e1, 0x6c73, 0x3e4f, 0x0, 0x0);
        gbc.writeMem(0x5282, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x46ac, gbc.sp());
        EXPECT(0x5284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 01E9
        gbc.setState(0xa373, 0x3c9, 0x6360, 0xd989, 0x3f8a, 0x2841, 0x0, 0x1);
        gbc.writeMem(0xa373, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3c9, gbc.sp());
        EXPECT(0xa375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa373));
        EXPECT(0x9c, gbc.readMem(0xa374));
        // CB 9C 01EA
        gbc.setState(0x14b2, 0x9f42, 0x96f0, 0xc0a6, 0xdb6e, 0x5e90, 0x1, 0x0);
        gbc.writeMem(0x14b2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9f42, gbc.sp());
        EXPECT(0x14b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 01EB
        gbc.setState(0x2b6c, 0xf07d, 0x4610, 0xc4fa, 0xb1b4, 0xe6b3, 0x0, 0x1);
        gbc.writeMem(0x2b6c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf07d, gbc.sp());
        EXPECT(0x2b6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 01EC
        gbc.setState(0xe597, 0x9421, 0x4800, 0x5458, 0x80ea, 0x9ecb, 0x0, 0x1);
        gbc.writeMem(0xe597, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9421, gbc.sp());
        EXPECT(0xe599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe597));
        EXPECT(0x9c, gbc.readMem(0xe598));
        // CB 9C 01ED
        gbc.setState(0xae69, 0x4e8f, 0x3b50, 0x30fa, 0x6ba7, 0x376e, 0x1, 0x1);
        gbc.writeMem(0xae69, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4e8f, gbc.sp());
        EXPECT(0xae6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae69));
        EXPECT(0x9c, gbc.readMem(0xae6a));
        // CB 9C 01EE
        gbc.setState(0x9203, 0xa805, 0x1470, 0xf403, 0x5e6d, 0xa8c1, 0x0, 0x1);
        gbc.writeMem(0x9203, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa805, gbc.sp());
        EXPECT(0x9205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9203));
        EXPECT(0x9c, gbc.readMem(0x9204));
        // CB 9C 01EF
        gbc.setState(0x94eb, 0xcb16, 0x3b70, 0xb506, 0x863d, 0xfcd7, 0x0, 0x1);
        gbc.writeMem(0x94eb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xcb16, gbc.sp());
        EXPECT(0x94ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94eb));
        EXPECT(0x9c, gbc.readMem(0x94ec));
        // CB 9C 01F0
        gbc.setState(0x9828, 0x1eed, 0xba40, 0x9dcf, 0xb48c, 0x20fa, 0x1, 0x0);
        gbc.writeMem(0x9828, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1eed, gbc.sp());
        EXPECT(0x982a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9828));
        EXPECT(0x9c, gbc.readMem(0x9829));
        // CB 9C 01F1
        gbc.setState(0xe023, 0x360c, 0x6940, 0x2048, 0xb2b1, 0x93ea, 0x0, 0x1);
        gbc.writeMem(0xe023, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x360c, gbc.sp());
        EXPECT(0xe025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe023));
        EXPECT(0x9c, gbc.readMem(0xe024));
        // CB 9C 01F2
        gbc.setState(0xe62c, 0x892, 0x3400, 0xdda1, 0xa2b5, 0xa4e8, 0x0, 0x1);
        gbc.writeMem(0xe62c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x892, gbc.sp());
        EXPECT(0xe62e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe62c));
        EXPECT(0x9c, gbc.readMem(0xe62d));
        // CB 9C 01F4
        gbc.setState(0x38f5, 0x3460, 0x6360, 0x153d, 0x34f0, 0x589b, 0x1, 0x0);
        gbc.writeMem(0x38f5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3460, gbc.sp());
        EXPECT(0x38f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 01F5
        gbc.setState(0x588, 0x6b64, 0x52d0, 0xc7e0, 0xfe01, 0x6842, 0x0, 0x1);
        gbc.writeMem(0x588, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6b64, gbc.sp());
        EXPECT(0x58a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 01F6
        gbc.setState(0xbd85, 0x76e9, 0xfb40, 0xe577, 0x3d3c, 0xdffd, 0x1, 0x0);
        gbc.writeMem(0xbd85, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x76e9, gbc.sp());
        EXPECT(0xbd87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd85));
        EXPECT(0x9c, gbc.readMem(0xbd86));
        // CB 9C 01F7
        gbc.setState(0x189b, 0x2814, 0x32a0, 0xde00, 0x8958, 0x2d6f, 0x0, 0x0);
        gbc.writeMem(0x189b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2814, gbc.sp());
        EXPECT(0x189d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 01F8
        gbc.setState(0x2c0e, 0x7266, 0xb0a0, 0x8ab0, 0xb38e, 0x2da4, 0x1, 0x1);
        gbc.writeMem(0x2c0e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7266, gbc.sp());
        EXPECT(0x2c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 01FA
        gbc.setState(0xd28c, 0xa80a, 0xf020, 0xd011, 0x5060, 0x69ad, 0x1, 0x1);
        gbc.writeMem(0xd28c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa80a, gbc.sp());
        EXPECT(0xd28e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd28c));
        EXPECT(0x9c, gbc.readMem(0xd28d));
        // CB 9C 01FB
        gbc.setState(0x5cfd, 0xb0e8, 0xf50, 0x62a6, 0x5004, 0x5ae5, 0x0, 0x0);
        gbc.writeMem(0x5cfd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb0e8, gbc.sp());
        EXPECT(0x5cff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 01FC
        gbc.setState(0xa63b, 0xf468, 0x6930, 0x9ec8, 0x8103, 0xce82, 0x1, 0x1);
        gbc.writeMem(0xa63b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf468, gbc.sp());
        EXPECT(0xa63d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa63b));
        EXPECT(0x9c, gbc.readMem(0xa63c));
        // CB 9C 01FD
        gbc.setState(0x91b5, 0x810f, 0x2280, 0x253f, 0x15c3, 0xa75d, 0x1, 0x0);
        gbc.writeMem(0x91b5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x810f, gbc.sp());
        EXPECT(0x91b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b5));
        EXPECT(0x9c, gbc.readMem(0x91b6));
        // CB 9C 01FE
        gbc.setState(0xa66b, 0x376a, 0xafb0, 0x667d, 0xa47b, 0x38cb, 0x0, 0x1);
        gbc.writeMem(0xa66b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x376a, gbc.sp());
        EXPECT(0xa66d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa66b));
        EXPECT(0x9c, gbc.readMem(0xa66c));
        // CB 9C 01FF
        gbc.setState(0xea1e, 0x8bb2, 0x230, 0xc681, 0xad53, 0x8470, 0x0, 0x0);
        gbc.writeMem(0xea1e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8bb2, gbc.sp());
        EXPECT(0xea20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea1e));
        EXPECT(0x9c, gbc.readMem(0xea1f));
        // CB 9C 0200
        gbc.setState(0x6ccd, 0xf2e9, 0xf230, 0xca64, 0x7279, 0x7701, 0x0, 0x1);
        gbc.writeMem(0x6ccd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf2e9, gbc.sp());
        EXPECT(0x6ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0201
        gbc.setState(0xb731, 0xffd3, 0x5b10, 0x1abc, 0x61ba, 0x97a5, 0x0, 0x1);
        gbc.writeMem(0xb731, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xffd3, gbc.sp());
        EXPECT(0xb733, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb731));
        EXPECT(0x9c, gbc.readMem(0xb732));
        // CB 9C 0202
        gbc.setState(0x7cb2, 0xfc04, 0x8830, 0xe65a, 0xe1fd, 0xeb28, 0x0, 0x1);
        gbc.writeMem(0x7cb2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xfc04, gbc.sp());
        EXPECT(0x7cb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0203
        gbc.setState(0x93de, 0x22c6, 0x93e0, 0x85c2, 0x76ae, 0x7007, 0x0, 0x1);
        gbc.writeMem(0x93de, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x22c6, gbc.sp());
        EXPECT(0x93e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93de));
        EXPECT(0x9c, gbc.readMem(0x93df));
        // CB 9C 0204
        gbc.setState(0x8c23, 0x879, 0x9730, 0x7bc7, 0xe98f, 0x6bcd, 0x1, 0x1);
        gbc.writeMem(0x8c23, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x879, gbc.sp());
        EXPECT(0x8c25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c23));
        EXPECT(0x9c, gbc.readMem(0x8c24));
        // CB 9C 0205
        gbc.setState(0x13bc, 0x728b, 0x66b0, 0xd5a7, 0x1b8d, 0xc175, 0x0, 0x1);
        gbc.writeMem(0x13bc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x728b, gbc.sp());
        EXPECT(0x13be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0207
        gbc.setState(0x6a11, 0x702f, 0xf1a0, 0x5fd4, 0x142f, 0xb193, 0x0, 0x0);
        gbc.writeMem(0x6a11, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x702f, gbc.sp());
        EXPECT(0x6a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0208
        gbc.setState(0x1cd4, 0x2e51, 0x2760, 0xbff1, 0x11f2, 0x57d0, 0x0, 0x1);
        gbc.writeMem(0x1cd4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2e51, gbc.sp());
        EXPECT(0x1cd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0209
        gbc.setState(0x10f5, 0x8608, 0x8ce0, 0x425d, 0x23e0, 0x8b7a, 0x1, 0x0);
        gbc.writeMem(0x10f5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8608, gbc.sp());
        EXPECT(0x10f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 020A
        gbc.setState(0x7e09, 0xbe55, 0xada0, 0x40e, 0xff9d, 0x416e, 0x1, 0x0);
        gbc.writeMem(0x7e09, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbe55, gbc.sp());
        EXPECT(0x7e0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 020B
        gbc.setState(0x7511, 0x586e, 0xbc30, 0x21c3, 0xc9f4, 0x4f86, 0x1, 0x0);
        gbc.writeMem(0x7511, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x586e, gbc.sp());
        EXPECT(0x7513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 020C
        gbc.setState(0x744b, 0x572a, 0xf770, 0x8704, 0x15da, 0x4d58, 0x0, 0x1);
        gbc.writeMem(0x744b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x572a, gbc.sp());
        EXPECT(0x744d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 020D
        gbc.setState(0xe1d2, 0x511, 0x94a0, 0x51e4, 0xdd97, 0x5903, 0x0, 0x1);
        gbc.writeMem(0xe1d2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x511, gbc.sp());
        EXPECT(0xe1d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1d2));
        EXPECT(0x9c, gbc.readMem(0xe1d3));
        // CB 9C 020E
        gbc.setState(0x60d7, 0xff94, 0xb6d0, 0x5b09, 0xed63, 0x831d, 0x1, 0x1);
        gbc.writeMem(0x60d7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xff94, gbc.sp());
        EXPECT(0x60d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 020F
        gbc.setState(0xc9e8, 0x1ccd, 0x9310, 0x11bc, 0xeba, 0x48ae, 0x0, 0x1);
        gbc.writeMem(0xc9e8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1ccd, gbc.sp());
        EXPECT(0xc9ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9e8));
        EXPECT(0x9c, gbc.readMem(0xc9e9));
        // CB 9C 0211
        gbc.setState(0x4622, 0x6c49, 0x8ff0, 0xc49f, 0x262d, 0xfb18, 0x1, 0x1);
        gbc.writeMem(0x4622, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6c49, gbc.sp());
        EXPECT(0x4624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0212
        gbc.setState(0x1f7f, 0x9b48, 0x5940, 0x72ab, 0x871c, 0x6b85, 0x0, 0x0);
        gbc.writeMem(0x1f7f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9b48, gbc.sp());
        EXPECT(0x1f81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0213
        gbc.setState(0x2e06, 0xa670, 0x5bc0, 0x5894, 0xd151, 0x25cf, 0x0, 0x0);
        gbc.writeMem(0x2e06, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa670, gbc.sp());
        EXPECT(0x2e08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0214
        gbc.setState(0x9aa, 0x78cd, 0xf3c0, 0x8801, 0xaa2f, 0x3abb, 0x0, 0x0);
        gbc.writeMem(0x9aa, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x78cd, gbc.sp());
        EXPECT(0x9ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0215
        gbc.setState(0x4f9b, 0x410a, 0x7d90, 0xa86d, 0x321b, 0x575f, 0x1, 0x1);
        gbc.writeMem(0x4f9b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x410a, gbc.sp());
        EXPECT(0x4f9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0216
        gbc.setState(0x9fc2, 0xba74, 0xee0, 0x6b6b, 0x21ad, 0x1537, 0x1, 0x1);
        gbc.writeMem(0x9fc2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xba74, gbc.sp());
        EXPECT(0x9fc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc2));
        EXPECT(0x9c, gbc.readMem(0x9fc3));
        // CB 9C 0217
        gbc.setState(0x6e4b, 0xd75f, 0xd9a0, 0xd786, 0x7169, 0x94b4, 0x1, 0x1);
        gbc.writeMem(0x6e4b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd75f, gbc.sp());
        EXPECT(0x6e4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0218
        gbc.setState(0xca78, 0x3d29, 0xeb80, 0xac8f, 0x2442, 0xd075, 0x0, 0x0);
        gbc.writeMem(0xca78, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3d29, gbc.sp());
        EXPECT(0xca7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca78));
        EXPECT(0x9c, gbc.readMem(0xca79));
        // CB 9C 0219
        gbc.setState(0x9053, 0xad2d, 0x8c70, 0x2f76, 0xc039, 0x3190, 0x0, 0x0);
        gbc.writeMem(0x9053, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xad2d, gbc.sp());
        EXPECT(0x9055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9053));
        EXPECT(0x9c, gbc.readMem(0x9054));
        // CB 9C 021A
        gbc.setState(0xbc2b, 0xd4e8, 0xf220, 0x554f, 0x156a, 0xadd6, 0x1, 0x0);
        gbc.writeMem(0xbc2b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd4e8, gbc.sp());
        EXPECT(0xbc2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc2b));
        EXPECT(0x9c, gbc.readMem(0xbc2c));
        // CB 9C 021C
        gbc.setState(0xd329, 0x224, 0x6bc0, 0x4343, 0x3f18, 0x20f8, 0x1, 0x1);
        gbc.writeMem(0xd329, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x224, gbc.sp());
        EXPECT(0xd32b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd329));
        EXPECT(0x9c, gbc.readMem(0xd32a));
        // CB 9C 021D
        gbc.setState(0x64f3, 0xa721, 0xa890, 0x35ee, 0xaeaf, 0x4d7d, 0x0, 0x1);
        gbc.writeMem(0x64f3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa721, gbc.sp());
        EXPECT(0x64f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 021E
        gbc.setState(0x26f3, 0xd0e1, 0xaf90, 0xdfaf, 0xe396, 0x5854, 0x1, 0x1);
        gbc.writeMem(0x26f3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd0e1, gbc.sp());
        EXPECT(0x26f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 021F
        gbc.setState(0x8393, 0x5346, 0xc790, 0xf145, 0xadf2, 0x6202, 0x1, 0x1);
        gbc.writeMem(0x8393, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5346, gbc.sp());
        EXPECT(0x8395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8393));
        EXPECT(0x9c, gbc.readMem(0x8394));
        // CB 9C 0220
        gbc.setState(0xa72a, 0xe6cd, 0xb290, 0x9b07, 0x4355, 0x45e8, 0x0, 0x0);
        gbc.writeMem(0xa72a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe6cd, gbc.sp());
        EXPECT(0xa72c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa72a));
        EXPECT(0x9c, gbc.readMem(0xa72b));
        // CB 9C 0221
        gbc.setState(0x2e35, 0x194a, 0x87e0, 0xef49, 0xaaa8, 0x51fd, 0x0, 0x0);
        gbc.writeMem(0x2e35, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x194a, gbc.sp());
        EXPECT(0x2e37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0222
        gbc.setState(0xe065, 0xb0c8, 0x2500, 0x2330, 0xfcb2, 0x8566, 0x1, 0x1);
        gbc.writeMem(0xe065, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb0c8, gbc.sp());
        EXPECT(0xe067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe065));
        EXPECT(0x9c, gbc.readMem(0xe066));
        // CB 9C 0223
        gbc.setState(0x43af, 0xa4de, 0x6b10, 0x539e, 0x3e6, 0x3782, 0x1, 0x0);
        gbc.writeMem(0x43af, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa4de, gbc.sp());
        EXPECT(0x43b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0224
        gbc.setState(0x84b5, 0x394, 0xb430, 0x490c, 0xade, 0x2da3, 0x1, 0x0);
        gbc.writeMem(0x84b5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x394, gbc.sp());
        EXPECT(0x84b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b5));
        EXPECT(0x9c, gbc.readMem(0x84b6));
        // CB 9C 0225
        gbc.setState(0x4707, 0x5933, 0xd050, 0x127d, 0x9c73, 0x1736, 0x1, 0x1);
        gbc.writeMem(0x4707, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5933, gbc.sp());
        EXPECT(0x4709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0226
        gbc.setState(0xd97, 0xf95b, 0x5660, 0x3ce0, 0x5a07, 0x58d7, 0x0, 0x1);
        gbc.writeMem(0xd97, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf95b, gbc.sp());
        EXPECT(0xd99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0227
        gbc.setState(0x85d0, 0x5b7b, 0x9830, 0x2678, 0xe176, 0x431b, 0x0, 0x1);
        gbc.writeMem(0x85d0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5b7b, gbc.sp());
        EXPECT(0x85d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d0));
        EXPECT(0x9c, gbc.readMem(0x85d1));
        // CB 9C 0228
        gbc.setState(0xb161, 0xbd4, 0x21f0, 0x1efa, 0x1075, 0x22bc, 0x1, 0x1);
        gbc.writeMem(0xb161, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xbd4, gbc.sp());
        EXPECT(0xb163, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb161));
        EXPECT(0x9c, gbc.readMem(0xb162));
        // CB 9C 0229
        gbc.setState(0x17b9, 0x7248, 0x6e60, 0x63de, 0xe89b, 0x6c22, 0x0, 0x0);
        gbc.writeMem(0x17b9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7248, gbc.sp());
        EXPECT(0x17bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 022A
        gbc.setState(0x90cf, 0xce33, 0xad0, 0x58f8, 0x2448, 0xd8c9, 0x0, 0x0);
        gbc.writeMem(0x90cf, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xce33, gbc.sp());
        EXPECT(0x90d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90cf));
        EXPECT(0x9c, gbc.readMem(0x90d0));
        // CB 9C 022B
        gbc.setState(0xeb70, 0x49dc, 0x59e0, 0x4049, 0xcfe5, 0x38f9, 0x1, 0x1);
        gbc.writeMem(0xeb70, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x49dc, gbc.sp());
        EXPECT(0xeb72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb70));
        EXPECT(0x9c, gbc.readMem(0xeb71));
        // CB 9C 022C
        gbc.setState(0xaea, 0x256e, 0xcb30, 0x79a0, 0xcfdc, 0xb35, 0x0, 0x1);
        gbc.writeMem(0xaea, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x256e, gbc.sp());
        EXPECT(0xaec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 022D
        gbc.setState(0x2ce3, 0x31cf, 0x6db0, 0x8d99, 0x69a0, 0x88f1, 0x0, 0x0);
        gbc.writeMem(0x2ce3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x31cf, gbc.sp());
        EXPECT(0x2ce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 022E
        gbc.setState(0xc899, 0xd55a, 0xfa0, 0x6ea3, 0x267d, 0x2c63, 0x1, 0x1);
        gbc.writeMem(0xc899, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd55a, gbc.sp());
        EXPECT(0xc89b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc899));
        EXPECT(0x9c, gbc.readMem(0xc89a));
        // CB 9C 022F
        gbc.setState(0x2ef1, 0x7e16, 0x1eb0, 0xd1f1, 0x39c9, 0x860f, 0x1, 0x1);
        gbc.writeMem(0x2ef1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7e16, gbc.sp());
        EXPECT(0x2ef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0230
        gbc.setState(0xc85f, 0x601c, 0xdc70, 0xf323, 0xb515, 0x78b4, 0x1, 0x1);
        gbc.writeMem(0xc85f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x601c, gbc.sp());
        EXPECT(0xc861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc85f));
        EXPECT(0x9c, gbc.readMem(0xc860));
        // CB 9C 0231
        gbc.setState(0x79d2, 0x3607, 0x9b10, 0xe4f0, 0x90a5, 0x6d16, 0x1, 0x1);
        gbc.writeMem(0x79d2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3607, gbc.sp());
        EXPECT(0x79d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0232
        gbc.setState(0xd085, 0xdb0, 0x390, 0xb905, 0x4c44, 0xd8cc, 0x0, 0x0);
        gbc.writeMem(0xd085, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xdb0, gbc.sp());
        EXPECT(0xd087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd085));
        EXPECT(0x9c, gbc.readMem(0xd086));
        // CB 9C 0233
        gbc.setState(0x2fda, 0xbd9f, 0x69a0, 0xa8db, 0x3109, 0xe3b8, 0x1, 0x0);
        gbc.writeMem(0x2fda, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbd9f, gbc.sp());
        EXPECT(0x2fdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0235
        gbc.setState(0x2af8, 0xb540, 0x8a00, 0x3eab, 0xe29c, 0x81ce, 0x0, 0x1);
        gbc.writeMem(0x2af8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb540, gbc.sp());
        EXPECT(0x2afa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0236
        gbc.setState(0xda63, 0x4b6e, 0x3900, 0x7363, 0xe0a, 0xcfe1, 0x0, 0x1);
        gbc.writeMem(0xda63, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4b6e, gbc.sp());
        EXPECT(0xda65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda63));
        EXPECT(0x9c, gbc.readMem(0xda64));
        // CB 9C 0237
        gbc.setState(0xd622, 0x3ce1, 0xf690, 0x156, 0xbbcb, 0xdab2, 0x1, 0x1);
        gbc.writeMem(0xd622, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3ce1, gbc.sp());
        EXPECT(0xd624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd622));
        EXPECT(0x9c, gbc.readMem(0xd623));
        // CB 9C 0238
        gbc.setState(0xa9dd, 0x3d5c, 0xd710, 0x3958, 0x9ace, 0xd7e7, 0x1, 0x1);
        gbc.writeMem(0xa9dd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3d5c, gbc.sp());
        EXPECT(0xa9df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9dd));
        EXPECT(0x9c, gbc.readMem(0xa9de));
        // CB 9C 0239
        gbc.setState(0xe852, 0x33a, 0x52b0, 0x9984, 0x9a06, 0xb23a, 0x1, 0x1);
        gbc.writeMem(0xe852, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x33a, gbc.sp());
        EXPECT(0xe854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe852));
        EXPECT(0x9c, gbc.readMem(0xe853));
        // CB 9C 023A
        gbc.setState(0x3d5c, 0x488b, 0x5ef0, 0xbf56, 0x5766, 0xa85f, 0x1, 0x1);
        gbc.writeMem(0x3d5c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x488b, gbc.sp());
        EXPECT(0x3d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 023B
        gbc.setState(0x33a1, 0x6e63, 0x9df0, 0xd813, 0x9bde, 0x2aa1, 0x1, 0x0);
        gbc.writeMem(0x33a1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6e63, gbc.sp());
        EXPECT(0x33a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 023C
        gbc.setState(0x8e19, 0x24ab, 0x2f50, 0xf9ce, 0x37d3, 0x6aa, 0x1, 0x0);
        gbc.writeMem(0x8e19, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x24ab, gbc.sp());
        EXPECT(0x8e1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e19));
        EXPECT(0x9c, gbc.readMem(0x8e1a));
        // CB 9C 023D
        gbc.setState(0x6d14, 0xb8e8, 0x1810, 0x5f43, 0x4d28, 0xe3bb, 0x1, 0x1);
        gbc.writeMem(0x6d14, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb8e8, gbc.sp());
        EXPECT(0x6d16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 023E
        gbc.setState(0x7eb3, 0x587c, 0xd820, 0xdd59, 0xb7c1, 0x5cec, 0x1, 0x1);
        gbc.writeMem(0x7eb3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x587c, gbc.sp());
        EXPECT(0x7eb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 023F
        gbc.setState(0xeeb3, 0x5f1f, 0x7ac0, 0xa626, 0x173, 0xbc24, 0x1, 0x1);
        gbc.writeMem(0xeeb3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5f1f, gbc.sp());
        EXPECT(0xeeb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeb3));
        EXPECT(0x9c, gbc.readMem(0xeeb4));
        // CB 9C 0240
        gbc.setState(0x679c, 0xd730, 0x8870, 0xa58f, 0x96bc, 0x5ba2, 0x1, 0x1);
        gbc.writeMem(0x679c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd730, gbc.sp());
        EXPECT(0x679e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0241
        gbc.setState(0xce42, 0x80d0, 0x4c60, 0xc434, 0xc2b0, 0xa5d6, 0x0, 0x1);
        gbc.writeMem(0xce42, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x80d0, gbc.sp());
        EXPECT(0xce44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce42));
        EXPECT(0x9c, gbc.readMem(0xce43));
        // CB 9C 0242
        gbc.setState(0x4641, 0x6d69, 0x6ef0, 0x683f, 0xea0d, 0xc721, 0x0, 0x0);
        gbc.writeMem(0x4641, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6d69, gbc.sp());
        EXPECT(0x4643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0243
        gbc.setState(0x3035, 0xf37e, 0x8dd0, 0x4ea8, 0x9dcf, 0xa795, 0x0, 0x1);
        gbc.writeMem(0x3035, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf37e, gbc.sp());
        EXPECT(0x3037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0244
        gbc.setState(0x6686, 0x2e26, 0xe210, 0x6930, 0x3bde, 0x3462, 0x1, 0x0);
        gbc.writeMem(0x6686, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2e26, gbc.sp());
        EXPECT(0x6688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0245
        gbc.setState(0x3b25, 0xb44f, 0xc520, 0x1111, 0x471f, 0x5d3b, 0x0, 0x1);
        gbc.writeMem(0x3b25, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb44f, gbc.sp());
        EXPECT(0x3b27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0246
        gbc.setState(0x7e5e, 0xc19e, 0x5750, 0x55d, 0xdf9a, 0x52e1, 0x1, 0x1);
        gbc.writeMem(0x7e5e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc19e, gbc.sp());
        EXPECT(0x7e60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0247
        gbc.setState(0x7e90, 0x3572, 0xc10, 0xe15d, 0x3f78, 0x3de2, 0x1, 0x0);
        gbc.writeMem(0x7e90, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3572, gbc.sp());
        EXPECT(0x7e92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0248
        gbc.setState(0x4c81, 0x6815, 0xefa0, 0x16f9, 0xfdaf, 0xecfe, 0x1, 0x0);
        gbc.writeMem(0x4c81, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6815, gbc.sp());
        EXPECT(0x4c83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0249
        gbc.setState(0x5ae8, 0xfd76, 0xe310, 0x4d33, 0xcc53, 0x51e, 0x1, 0x1);
        gbc.writeMem(0x5ae8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xfd76, gbc.sp());
        EXPECT(0x5aea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 024A
        gbc.setState(0x6dae, 0x498, 0x4340, 0xb8b2, 0xe383, 0xfe1f, 0x1, 0x0);
        gbc.writeMem(0x6dae, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x498, gbc.sp());
        EXPECT(0x6db0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 024D
        gbc.setState(0x6481, 0x6d38, 0xeb80, 0x562d, 0xe7ee, 0x6f6d, 0x1, 0x0);
        gbc.writeMem(0x6481, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6d38, gbc.sp());
        EXPECT(0x6483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 024E
        gbc.setState(0xdfdb, 0xe643, 0x460, 0xaaae, 0x50f5, 0x558, 0x0, 0x1);
        gbc.writeMem(0xdfdb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe643, gbc.sp());
        EXPECT(0xdfdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfdb));
        EXPECT(0x9c, gbc.readMem(0xdfdc));
        // CB 9C 024F
        gbc.setState(0x34df, 0x580f, 0xc840, 0x4509, 0x9b54, 0x741f, 0x1, 0x0);
        gbc.writeMem(0x34df, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x580f, gbc.sp());
        EXPECT(0x34e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0250
        gbc.setState(0xa822, 0x64b7, 0x3080, 0xfd56, 0xf3cc, 0x43a1, 0x1, 0x1);
        gbc.writeMem(0xa822, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x64b7, gbc.sp());
        EXPECT(0xa824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa822));
        EXPECT(0x9c, gbc.readMem(0xa823));
        // CB 9C 0251
        gbc.setState(0x4ee0, 0x2bcb, 0x1720, 0x37d1, 0x3edd, 0xd54, 0x0, 0x0);
        gbc.writeMem(0x4ee0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2bcb, gbc.sp());
        EXPECT(0x4ee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0252
        gbc.setState(0x9559, 0x1ae3, 0x33f0, 0x2aab, 0x10e5, 0xb87b, 0x0, 0x0);
        gbc.writeMem(0x9559, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1ae3, gbc.sp());
        EXPECT(0x955b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9559));
        EXPECT(0x9c, gbc.readMem(0x955a));
        // CB 9C 0253
        gbc.setState(0xb08c, 0xc2c8, 0x5b0, 0x834b, 0xdce3, 0x3abf, 0x0, 0x0);
        gbc.writeMem(0xb08c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc2c8, gbc.sp());
        EXPECT(0xb08e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb08c));
        EXPECT(0x9c, gbc.readMem(0xb08d));
        // CB 9C 0254
        gbc.setState(0x7bae, 0x60a9, 0x2d60, 0xb0ae, 0x32f4, 0xec90, 0x1, 0x0);
        gbc.writeMem(0x7bae, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x60a9, gbc.sp());
        EXPECT(0x7bb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0255
        gbc.setState(0x19df, 0x9632, 0x42b0, 0x42f6, 0xdb7, 0x5c5, 0x0, 0x0);
        gbc.writeMem(0x19df, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9632, gbc.sp());
        EXPECT(0x19e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0256
        gbc.setState(0xd094, 0xf642, 0xb070, 0xd0b3, 0x766c, 0x1557, 0x0, 0x0);
        gbc.writeMem(0xd094, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf642, gbc.sp());
        EXPECT(0xd096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd094));
        EXPECT(0x9c, gbc.readMem(0xd095));
        // CB 9C 0257
        gbc.setState(0x78e3, 0xa424, 0xe0a0, 0x6856, 0x6073, 0x3a46, 0x0, 0x0);
        gbc.writeMem(0x78e3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa424, gbc.sp());
        EXPECT(0x78e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0258
        gbc.setState(0xa29a, 0xd5ec, 0xfb20, 0x88b3, 0x1b0a, 0xaefd, 0x0, 0x1);
        gbc.writeMem(0xa29a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd5ec, gbc.sp());
        EXPECT(0xa29c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa29a));
        EXPECT(0x9c, gbc.readMem(0xa29b));
        // CB 9C 0259
        gbc.setState(0x94ce, 0xc9f7, 0x51a0, 0x39b6, 0xfdf8, 0x6bf9, 0x1, 0x0);
        gbc.writeMem(0x94ce, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc9f7, gbc.sp());
        EXPECT(0x94d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94ce));
        EXPECT(0x9c, gbc.readMem(0x94cf));
        // CB 9C 025A
        gbc.setState(0x996f, 0xfffc, 0xad60, 0xdd08, 0x5d7b, 0xb951, 0x0, 0x0);
        gbc.writeMem(0x996f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfffc, gbc.sp());
        EXPECT(0x9971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x996f));
        EXPECT(0x9c, gbc.readMem(0x9970));
        // CB 9C 025B
        gbc.setState(0x9fe7, 0x7a91, 0x3540, 0xc9ec, 0x4cc, 0x1cf9, 0x0, 0x1);
        gbc.writeMem(0x9fe7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7a91, gbc.sp());
        EXPECT(0x9fe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fe7));
        EXPECT(0x9c, gbc.readMem(0x9fe8));
        // CB 9C 025C
        gbc.setState(0xbe24, 0x94e, 0x88a0, 0x868c, 0x3600, 0xdeff, 0x0, 0x1);
        gbc.writeMem(0xbe24, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x94e, gbc.sp());
        EXPECT(0xbe26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe24));
        EXPECT(0x9c, gbc.readMem(0xbe25));
        // CB 9C 025D
        gbc.setState(0xcb46, 0xd039, 0xaa80, 0x5f1d, 0xa3ca, 0x412a, 0x0, 0x1);
        gbc.writeMem(0xcb46, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd039, gbc.sp());
        EXPECT(0xcb48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb46));
        EXPECT(0x9c, gbc.readMem(0xcb47));
        // CB 9C 025E
        gbc.setState(0x979d, 0x187a, 0x5fb0, 0x544b, 0x8e17, 0xc208, 0x0, 0x0);
        gbc.writeMem(0x979d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x187a, gbc.sp());
        EXPECT(0x979f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x979d));
        EXPECT(0x9c, gbc.readMem(0x979e));
        // CB 9C 025F
        gbc.setState(0x8180, 0xed7, 0x8ca0, 0x2fbe, 0x487b, 0x2a16, 0x1, 0x0);
        gbc.writeMem(0x8180, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xed7, gbc.sp());
        EXPECT(0x8182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8180));
        EXPECT(0x9c, gbc.readMem(0x8181));
        // CB 9C 0260
        gbc.setState(0xdc77, 0x7497, 0xf530, 0xbe3e, 0x6c54, 0x5f9a, 0x0, 0x1);
        gbc.writeMem(0xdc77, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7497, gbc.sp());
        EXPECT(0xdc79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc77));
        EXPECT(0x9c, gbc.readMem(0xdc78));
        // CB 9C 0261
        gbc.setState(0xc2f5, 0x5079, 0x5eb0, 0x82b7, 0x9227, 0xeb0d, 0x1, 0x0);
        gbc.writeMem(0xc2f5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5079, gbc.sp());
        EXPECT(0xc2f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f5));
        EXPECT(0x9c, gbc.readMem(0xc2f6));
        // CB 9C 0262
        gbc.setState(0xc53d, 0x7b0f, 0x3f40, 0x30b1, 0x3c87, 0x1c3, 0x1, 0x0);
        gbc.writeMem(0xc53d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7b0f, gbc.sp());
        EXPECT(0xc53f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc53d));
        EXPECT(0x9c, gbc.readMem(0xc53e));
        // CB 9C 0263
        gbc.setState(0x3e99, 0xe4c0, 0xc880, 0xfae3, 0x2d5, 0x2d44, 0x0, 0x1);
        gbc.writeMem(0x3e99, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe4c0, gbc.sp());
        EXPECT(0x3e9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0264
        gbc.setState(0x4a0e, 0x90b4, 0x3b10, 0xb4fc, 0x7a38, 0xce5d, 0x0, 0x0);
        gbc.writeMem(0x4a0e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x90b4, gbc.sp());
        EXPECT(0x4a10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0265
        gbc.setState(0x163e, 0xf8c4, 0x7b0, 0x213, 0x5082, 0x8c19, 0x1, 0x0);
        gbc.writeMem(0x163e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf8c4, gbc.sp());
        EXPECT(0x1640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0266
        gbc.setState(0x4618, 0xd8e4, 0xfd40, 0x7d66, 0xf160, 0xfafa, 0x1, 0x0);
        gbc.writeMem(0x4618, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd8e4, gbc.sp());
        EXPECT(0x461a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0267
        gbc.setState(0x8e45, 0xef5f, 0x6cb0, 0x97c1, 0x19b, 0x880b, 0x1, 0x1);
        gbc.writeMem(0x8e45, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xef5f, gbc.sp());
        EXPECT(0x8e47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e45));
        EXPECT(0x9c, gbc.readMem(0x8e46));
        // CB 9C 0268
        gbc.setState(0x5838, 0x11d7, 0x9710, 0xb9d6, 0x87f2, 0x923b, 0x0, 0x0);
        gbc.writeMem(0x5838, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x11d7, gbc.sp());
        EXPECT(0x583a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0269
        gbc.setState(0xa4b0, 0x19e2, 0x5310, 0x8b57, 0x87e6, 0x5f9, 0x0, 0x0);
        gbc.writeMem(0xa4b0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x19e2, gbc.sp());
        EXPECT(0xa4b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b0));
        EXPECT(0x9c, gbc.readMem(0xa4b1));
        // CB 9C 026A
        gbc.setState(0x76e1, 0x4d36, 0xc140, 0xef52, 0xae57, 0xb2e7, 0x1, 0x1);
        gbc.writeMem(0x76e1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4d36, gbc.sp());
        EXPECT(0x76e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 026B
        gbc.setState(0x78fa, 0x421e, 0xc070, 0xf598, 0x670b, 0x2130, 0x1, 0x1);
        gbc.writeMem(0x78fa, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x421e, gbc.sp());
        EXPECT(0x78fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 026C
        gbc.setState(0x785e, 0xe04d, 0x9b70, 0xc69f, 0x3f05, 0x517f, 0x1, 0x1);
        gbc.writeMem(0x785e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe04d, gbc.sp());
        EXPECT(0x7860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 026D
        gbc.setState(0x85ba, 0xd99f, 0x66e0, 0x7847, 0xf07d, 0x2020, 0x1, 0x1);
        gbc.writeMem(0x85ba, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd99f, gbc.sp());
        EXPECT(0x85bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ba));
        EXPECT(0x9c, gbc.readMem(0x85bb));
        // CB 9C 026E
        gbc.setState(0x53d1, 0xbb34, 0xd640, 0xf948, 0xd9dc, 0x2a5a, 0x1, 0x0);
        gbc.writeMem(0x53d1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbb34, gbc.sp());
        EXPECT(0x53d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 026F
        gbc.setState(0x4dac, 0xa2f0, 0xa790, 0xd180, 0x23b, 0xce12, 0x1, 0x0);
        gbc.writeMem(0x4dac, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa2f0, gbc.sp());
        EXPECT(0x4dae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0271
        gbc.setState(0xef, 0xe4da, 0x11a0, 0xc81, 0x13f3, 0xbbe1, 0x1, 0x0);
        gbc.writeMem(0xef, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe4da, gbc.sp());
        EXPECT(0xf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0272
        gbc.setState(0x2cc3, 0xd2a5, 0x9ee0, 0x2ef, 0x7cc2, 0x2a22, 0x0, 0x1);
        gbc.writeMem(0x2cc3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd2a5, gbc.sp());
        EXPECT(0x2cc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0273
        gbc.setState(0xae03, 0x40a0, 0xca00, 0xe0c0, 0xa319, 0x72ae, 0x0, 0x1);
        gbc.writeMem(0xae03, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x40a0, gbc.sp());
        EXPECT(0xae05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae03));
        EXPECT(0x9c, gbc.readMem(0xae04));
        // CB 9C 0274
        gbc.setState(0x4ee5, 0x28fd, 0x1500, 0x70bc, 0xb8c9, 0x22e4, 0x1, 0x0);
        gbc.writeMem(0x4ee5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x28fd, gbc.sp());
        EXPECT(0x4ee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0275
        gbc.setState(0x2738, 0x1a8a, 0x6800, 0x6def, 0x1ea4, 0x3cdf, 0x1, 0x1);
        gbc.writeMem(0x2738, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1a8a, gbc.sp());
        EXPECT(0x273a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0277
        gbc.setState(0xa06d, 0xcfd6, 0xcc80, 0xa478, 0x1476, 0x68fb, 0x0, 0x0);
        gbc.writeMem(0xa06d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xcfd6, gbc.sp());
        EXPECT(0xa06f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa06d));
        EXPECT(0x9c, gbc.readMem(0xa06e));
        // CB 9C 0278
        gbc.setState(0x81e0, 0x245b, 0x5100, 0x11b, 0x5ef3, 0xb8b6, 0x0, 0x1);
        gbc.writeMem(0x81e0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x245b, gbc.sp());
        EXPECT(0x81e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81e0));
        EXPECT(0x9c, gbc.readMem(0x81e1));
        // CB 9C 0279
        gbc.setState(0x76cd, 0xce2b, 0xd670, 0xb492, 0xf646, 0xafb7, 0x1, 0x0);
        gbc.writeMem(0x76cd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xce2b, gbc.sp());
        EXPECT(0x76cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 027A
        gbc.setState(0xedaa, 0x89b9, 0x17c0, 0xce1b, 0x158c, 0x7848, 0x0, 0x1);
        gbc.writeMem(0xedaa, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x89b9, gbc.sp());
        EXPECT(0xedac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedaa));
        EXPECT(0x9c, gbc.readMem(0xedab));
        // CB 9C 027B
        gbc.setState(0x79b7, 0x1a15, 0x5f30, 0xbf8d, 0x1b0e, 0x2dab, 0x0, 0x1);
        gbc.writeMem(0x79b7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1a15, gbc.sp());
        EXPECT(0x79b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 027C
        gbc.setState(0x834, 0x748a, 0xa6b0, 0x3ff2, 0x49fd, 0x385a, 0x0, 0x1);
        gbc.writeMem(0x834, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x748a, gbc.sp());
        EXPECT(0x836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 027D
        gbc.setState(0x59d7, 0xa457, 0x180, 0xe742, 0x94e9, 0xc31d, 0x0, 0x0);
        gbc.writeMem(0x59d7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa457, gbc.sp());
        EXPECT(0x59d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 027F
        gbc.setState(0x3a9c, 0x17e7, 0x9240, 0x55f2, 0x7167, 0x976, 0x0, 0x0);
        gbc.writeMem(0x3a9c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x17e7, gbc.sp());
        EXPECT(0x3a9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0280
        gbc.setState(0xb8fe, 0xc819, 0xa000, 0x5396, 0xc3d0, 0x26c0, 0x1, 0x0);
        gbc.writeMem(0xb8fe, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc819, gbc.sp());
        EXPECT(0xb900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8fe));
        EXPECT(0x9c, gbc.readMem(0xb8ff));
        // CB 9C 0281
        gbc.setState(0x9c9e, 0xec82, 0xfa90, 0xa859, 0x14f5, 0xeed, 0x0, 0x1);
        gbc.writeMem(0x9c9e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xec82, gbc.sp());
        EXPECT(0x9ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c9e));
        EXPECT(0x9c, gbc.readMem(0x9c9f));
        // CB 9C 0282
        gbc.setState(0x86cf, 0xd409, 0x7610, 0x8f20, 0xcb25, 0x68a4, 0x0, 0x1);
        gbc.writeMem(0x86cf, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd409, gbc.sp());
        EXPECT(0x86d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86cf));
        EXPECT(0x9c, gbc.readMem(0x86d0));
        // CB 9C 0283
        gbc.setState(0x7500, 0xd1f9, 0xcaa0, 0x78b3, 0xc6f8, 0xe852, 0x1, 0x0);
        gbc.writeMem(0x7500, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd1f9, gbc.sp());
        EXPECT(0x7502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0284
        gbc.setState(0x6224, 0x690d, 0xbac0, 0xbfab, 0xf47d, 0x5872, 0x0, 0x0);
        gbc.writeMem(0x6224, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x690d, gbc.sp());
        EXPECT(0x6226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0285
        gbc.setState(0xc243, 0x82a6, 0x7820, 0x87cc, 0xf5d3, 0xd8fe, 0x1, 0x0);
        gbc.writeMem(0xc243, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x82a6, gbc.sp());
        EXPECT(0xc245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc243));
        EXPECT(0x9c, gbc.readMem(0xc244));
        // CB 9C 0286
        gbc.setState(0xdccc, 0xe916, 0x5db0, 0x1bb, 0x5ea8, 0xf257, 0x1, 0x1);
        gbc.writeMem(0xdccc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe916, gbc.sp());
        EXPECT(0xdcce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdccc));
        EXPECT(0x9c, gbc.readMem(0xdccd));
        // CB 9C 0287
        gbc.setState(0xc83c, 0xdf51, 0xc130, 0xee98, 0x74f0, 0x7b41, 0x1, 0x1);
        gbc.writeMem(0xc83c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xdf51, gbc.sp());
        EXPECT(0xc83e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc83c));
        EXPECT(0x9c, gbc.readMem(0xc83d));
        // CB 9C 0288
        gbc.setState(0xba13, 0xed2, 0xd2c0, 0x616, 0x8276, 0xa817, 0x1, 0x0);
        gbc.writeMem(0xba13, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xed2, gbc.sp());
        EXPECT(0xba15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba13));
        EXPECT(0x9c, gbc.readMem(0xba14));
        // CB 9C 0289
        gbc.setState(0xdbd4, 0x52a8, 0x5400, 0xca08, 0x412b, 0xdc99, 0x0, 0x0);
        gbc.writeMem(0xdbd4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x52a8, gbc.sp());
        EXPECT(0xdbd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbd4));
        EXPECT(0x9c, gbc.readMem(0xdbd5));
        // CB 9C 028A
        gbc.setState(0x99d0, 0x5184, 0xa4a0, 0x7306, 0x84ae, 0xe90d, 0x1, 0x1);
        gbc.writeMem(0x99d0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5184, gbc.sp());
        EXPECT(0x99d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99d0));
        EXPECT(0x9c, gbc.readMem(0x99d1));
        // CB 9C 028B
        gbc.setState(0xab14, 0xa076, 0x5dd0, 0x962a, 0x8883, 0x82c2, 0x0, 0x1);
        gbc.writeMem(0xab14, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa076, gbc.sp());
        EXPECT(0xab16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab14));
        EXPECT(0x9c, gbc.readMem(0xab15));
        // CB 9C 028C
        gbc.setState(0x67bf, 0x5f3e, 0x5cb0, 0xfeb8, 0x4c63, 0x845b, 0x1, 0x0);
        gbc.writeMem(0x67bf, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5f3e, gbc.sp());
        EXPECT(0x67c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 028D
        gbc.setState(0x6be, 0x2cac, 0x8ec0, 0xaa69, 0x3c52, 0x5165, 0x0, 0x0);
        gbc.writeMem(0x6be, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2cac, gbc.sp());
        EXPECT(0x6c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 028E
        gbc.setState(0x4783, 0x3e2a, 0x3aa0, 0x117c, 0xeb4, 0x82c9, 0x1, 0x1);
        gbc.writeMem(0x4783, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3e2a, gbc.sp());
        EXPECT(0x4785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 028F
        gbc.setState(0xabf2, 0x335, 0x9ce0, 0x9e36, 0x33f4, 0x7563, 0x1, 0x1);
        gbc.writeMem(0xabf2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x335, gbc.sp());
        EXPECT(0xabf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabf2));
        EXPECT(0x9c, gbc.readMem(0xabf3));
        // CB 9C 0290
        gbc.setState(0xe65, 0x82e1, 0x2590, 0x8e30, 0xc1ae, 0x2787, 0x0, 0x1);
        gbc.writeMem(0xe65, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x82e1, gbc.sp());
        EXPECT(0xe67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0291
        gbc.setState(0x566d, 0xb33a, 0x20b0, 0x45c8, 0x3c9a, 0xefcd, 0x1, 0x1);
        gbc.writeMem(0x566d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb33a, gbc.sp());
        EXPECT(0x566f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0292
        gbc.setState(0x611, 0xaf2f, 0x6b70, 0xb8ba, 0xfbba, 0xa4f7, 0x0, 0x0);
        gbc.writeMem(0x611, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xaf2f, gbc.sp());
        EXPECT(0x613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0293
        gbc.setState(0xe8cf, 0x9eb4, 0x2070, 0xb780, 0xaf64, 0x4fd6, 0x0, 0x0);
        gbc.writeMem(0xe8cf, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9eb4, gbc.sp());
        EXPECT(0xe8d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8cf));
        EXPECT(0x9c, gbc.readMem(0xe8d0));
        // CB 9C 0294
        gbc.setState(0xe17c, 0xfb96, 0x7350, 0x77ef, 0x4094, 0xcec9, 0x1, 0x0);
        gbc.writeMem(0xe17c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfb96, gbc.sp());
        EXPECT(0xe17e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe17c));
        EXPECT(0x9c, gbc.readMem(0xe17d));
        // CB 9C 0295
        gbc.setState(0xc4ed, 0x6117, 0x34f0, 0xab23, 0xc3f, 0xf1d8, 0x0, 0x0);
        gbc.writeMem(0xc4ed, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6117, gbc.sp());
        EXPECT(0xc4ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ed));
        EXPECT(0x9c, gbc.readMem(0xc4ee));
        // CB 9C 0297
        gbc.setState(0xb520, 0x414b, 0x8c70, 0xd519, 0xf33d, 0x13f2, 0x0, 0x0);
        gbc.writeMem(0xb520, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x414b, gbc.sp());
        EXPECT(0xb522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb520));
        EXPECT(0x9c, gbc.readMem(0xb521));
        // CB 9C 0298
        gbc.setState(0xe659, 0x4821, 0xb5f0, 0x1a5, 0xd43e, 0x76ec, 0x0, 0x0);
        gbc.writeMem(0xe659, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4821, gbc.sp());
        EXPECT(0xe65b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe659));
        EXPECT(0x9c, gbc.readMem(0xe65a));
        // CB 9C 029A
        gbc.setState(0xcba, 0x67fc, 0x3550, 0xc6cb, 0x301e, 0x5cd2, 0x0, 0x0);
        gbc.writeMem(0xcba, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x67fc, gbc.sp());
        EXPECT(0xcbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 029B
        gbc.setState(0xe828, 0xbc88, 0x9510, 0x4e44, 0xf52a, 0x22b9, 0x0, 0x0);
        gbc.writeMem(0xe828, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbc88, gbc.sp());
        EXPECT(0xe82a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe828));
        EXPECT(0x9c, gbc.readMem(0xe829));
        // CB 9C 029C
        gbc.setState(0xdf8d, 0x7b33, 0xa170, 0x2623, 0x1d76, 0x125a, 0x0, 0x1);
        gbc.writeMem(0xdf8d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7b33, gbc.sp());
        EXPECT(0xdf8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf8d));
        EXPECT(0x9c, gbc.readMem(0xdf8e));
        // CB 9C 029D
        gbc.setState(0x1ad3, 0x1b71, 0x8160, 0x419, 0xef5a, 0xdf68, 0x1, 0x1);
        gbc.writeMem(0x1ad3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1b71, gbc.sp());
        EXPECT(0x1ad5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 029E
        gbc.setState(0xcb54, 0xa0b0, 0xce50, 0xc6fa, 0xb771, 0x1651, 0x0, 0x0);
        gbc.writeMem(0xcb54, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa0b0, gbc.sp());
        EXPECT(0xcb56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb54));
        EXPECT(0x9c, gbc.readMem(0xcb55));
        // CB 9C 029F
        gbc.setState(0x3a99, 0xd51a, 0xd2c0, 0xded7, 0xe75, 0xb31e, 0x0, 0x1);
        gbc.writeMem(0x3a99, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd51a, gbc.sp());
        EXPECT(0x3a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 02A0
        gbc.setState(0x6c40, 0xaeec, 0xe980, 0x41ef, 0x144e, 0x56d2, 0x1, 0x0);
        gbc.writeMem(0x6c40, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xaeec, gbc.sp());
        EXPECT(0x6c42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 02A1
        gbc.setState(0xb967, 0xfb3a, 0xc4b0, 0xab2, 0x8f82, 0xf558, 0x1, 0x1);
        gbc.writeMem(0xb967, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xfb3a, gbc.sp());
        EXPECT(0xb969, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb967));
        EXPECT(0x9c, gbc.readMem(0xb968));
        // CB 9C 02A2
        gbc.setState(0xe93, 0x9f4e, 0x9b90, 0xd33c, 0xf3a, 0x2921, 0x0, 0x1);
        gbc.writeMem(0xe93, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9f4e, gbc.sp());
        EXPECT(0xe95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 02A3
        gbc.setState(0x6a39, 0xa387, 0xd370, 0x8610, 0x552c, 0xe6e4, 0x1, 0x0);
        gbc.writeMem(0x6a39, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa387, gbc.sp());
        EXPECT(0x6a3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 02A4
        gbc.setState(0x2c10, 0xe0f7, 0x76b0, 0xb637, 0x2ae7, 0xb417, 0x1, 0x1);
        gbc.writeMem(0x2c10, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe0f7, gbc.sp());
        EXPECT(0x2c12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 02A5
        gbc.setState(0x8f14, 0xbf4d, 0x7f20, 0x8b0a, 0xb9c2, 0x8599, 0x0, 0x0);
        gbc.writeMem(0x8f14, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbf4d, gbc.sp());
        EXPECT(0x8f16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f14));
        EXPECT(0x9c, gbc.readMem(0x8f15));
        // CB 9C 02A6
        gbc.setState(0x6bf, 0x8b08, 0x7510, 0x5d13, 0xbd8f, 0xb330, 0x1, 0x1);
        gbc.writeMem(0x6bf, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8b08, gbc.sp());
        EXPECT(0x6c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 02A7
        gbc.setState(0xcfcd, 0x8b51, 0x3870, 0xa78a, 0xe934, 0x7515, 0x0, 0x0);
        gbc.writeMem(0xcfcd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8b51, gbc.sp());
        EXPECT(0xcfcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfcd));
        EXPECT(0x9c, gbc.readMem(0xcfce));
        // CB 9C 02A8
        gbc.setState(0xf4, 0xe41a, 0x4160, 0x9693, 0xfe1, 0x66ac, 0x0, 0x0);
        gbc.writeMem(0xf4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe41a, gbc.sp());
        EXPECT(0xf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 02A9
        gbc.setState(0x2573, 0xad92, 0x2d50, 0xe404, 0x932d, 0xe85e, 0x1, 0x0);
        gbc.writeMem(0x2573, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xad92, gbc.sp());
        EXPECT(0x2575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 02AA
        gbc.setState(0x997b, 0x7e7a, 0xbe0, 0x28a2, 0xdc28, 0xba8b, 0x0, 0x1);
        gbc.writeMem(0x997b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7e7a, gbc.sp());
        EXPECT(0x997d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x997b));
        EXPECT(0x9c, gbc.readMem(0x997c));
        // CB 9C 02AB
        gbc.setState(0xc592, 0xdfd1, 0xf8e0, 0xc27b, 0xa402, 0xb826, 0x0, 0x1);
        gbc.writeMem(0xc592, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xdfd1, gbc.sp());
        EXPECT(0xc594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc592));
        EXPECT(0x9c, gbc.readMem(0xc593));
        // CB 9C 02AC
        gbc.setState(0x2d5, 0xf706, 0xc090, 0x782e, 0x6437, 0x99ee, 0x1, 0x1);
        gbc.writeMem(0x2d5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf706, gbc.sp());
        EXPECT(0x2d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 02AD
        gbc.setState(0x3294, 0x41a3, 0x6020, 0x2f5c, 0xb3e6, 0xe388, 0x1, 0x1);
        gbc.writeMem(0x3294, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x41a3, gbc.sp());
        EXPECT(0x3296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 02AE
        gbc.setState(0xbba6, 0xc634, 0xf4c0, 0x4425, 0xa8d, 0xda62, 0x0, 0x1);
        gbc.writeMem(0xbba6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc634, gbc.sp());
        EXPECT(0xbba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbba6));
        EXPECT(0x9c, gbc.readMem(0xbba7));
        // CB 9C 02AF
        gbc.setState(0x804d, 0x802a, 0xf490, 0xbc0c, 0x8db7, 0x1f3e, 0x0, 0x0);
        gbc.writeMem(0x804d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x802a, gbc.sp());
        EXPECT(0x804f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x804d));
        EXPECT(0x9c, gbc.readMem(0x804e));
        // CB 9C 02B0
        gbc.setState(0xb1b0, 0x9303, 0xbbb0, 0x4342, 0x9671, 0x800a, 0x1, 0x0);
        gbc.writeMem(0xb1b0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9303, gbc.sp());
        EXPECT(0xb1b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1b0));
        EXPECT(0x9c, gbc.readMem(0xb1b1));
        // CB 9C 02B1
        gbc.setState(0x7cb9, 0x957d, 0xf840, 0x34c8, 0x5147, 0xb218, 0x0, 0x0);
        gbc.writeMem(0x7cb9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x957d, gbc.sp());
        EXPECT(0x7cbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 02B2
        gbc.setState(0x7939, 0x7340, 0xc070, 0x3f03, 0xfca7, 0x857d, 0x1, 0x0);
        gbc.writeMem(0x7939, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7340, gbc.sp());
        EXPECT(0x793b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 02B3
        gbc.setState(0x696f, 0x6484, 0x4bf0, 0x906a, 0x917, 0xd673, 0x0, 0x1);
        gbc.writeMem(0x696f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6484, gbc.sp());
        EXPECT(0x6971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 02B4
        gbc.setState(0x17a1, 0xe31e, 0x81f0, 0xa472, 0xeac6, 0x7b18, 0x0, 0x1);
        gbc.writeMem(0x17a1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe31e, gbc.sp());
        EXPECT(0x17a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 02B5
        gbc.setState(0x2e81, 0x9a5e, 0x75d0, 0x8031, 0x7dd6, 0x9155, 0x1, 0x1);
        gbc.writeMem(0x2e81, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9a5e, gbc.sp());
        EXPECT(0x2e83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 02B6
        gbc.setState(0x2810, 0x41a8, 0xb2d0, 0x1ced, 0x8141, 0x865c, 0x1, 0x0);
        gbc.writeMem(0x2810, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x41a8, gbc.sp());
        EXPECT(0x2812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 02B7
        gbc.setState(0xd5d9, 0x967, 0x7930, 0x4e56, 0xdaf7, 0x92f4, 0x1, 0x1);
        gbc.writeMem(0xd5d9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x967, gbc.sp());
        EXPECT(0xd5db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5d9));
        EXPECT(0x9c, gbc.readMem(0xd5da));
        // CB 9C 02B8
        gbc.setState(0x9ab, 0xa321, 0x3500, 0xc22d, 0x34e, 0x410c, 0x1, 0x1);
        gbc.writeMem(0x9ab, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa321, gbc.sp());
        EXPECT(0x9ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 02B9
        gbc.setState(0x2ce8, 0xa7cb, 0xb380, 0x1323, 0x42d3, 0x73cb, 0x1, 0x0);
        gbc.writeMem(0x2ce8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa7cb, gbc.sp());
        EXPECT(0x2cea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 02BA
        gbc.setState(0xc4ad, 0x5a03, 0xc5a0, 0xcea0, 0x49db, 0x820, 0x1, 0x1);
        gbc.writeMem(0xc4ad, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5a03, gbc.sp());
        EXPECT(0xc4af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ad));
        EXPECT(0x9c, gbc.readMem(0xc4ae));
        // CB 9C 02BB
        gbc.setState(0x24d9, 0x526a, 0x5430, 0x698d, 0x451a, 0xdd85, 0x1, 0x0);
        gbc.writeMem(0x24d9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x526a, gbc.sp());
        EXPECT(0x24db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 02BC
        gbc.setState(0x66b2, 0x3d8b, 0x5cb0, 0xc29f, 0xd163, 0x2188, 0x0, 0x0);
        gbc.writeMem(0x66b2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3d8b, gbc.sp());
        EXPECT(0x66b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 02BD
        gbc.setState(0xe0ba, 0x4d1c, 0x84c0, 0xc428, 0xf35c, 0x2319, 0x1, 0x1);
        gbc.writeMem(0xe0ba, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4d1c, gbc.sp());
        EXPECT(0xe0bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ba));
        EXPECT(0x9c, gbc.readMem(0xe0bb));
        // CB 9C 02BE
        gbc.setState(0xdfda, 0x7312, 0xa6d0, 0x6a4b, 0xb03d, 0xa1ab, 0x1, 0x0);
        gbc.writeMem(0xdfda, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7312, gbc.sp());
        EXPECT(0xdfdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfda));
        EXPECT(0x9c, gbc.readMem(0xdfdb));
        // CB 9C 02BF
        gbc.setState(0x18aa, 0xffe6, 0xbb60, 0x8f06, 0xcec8, 0x4a49, 0x0, 0x1);
        gbc.writeMem(0x18aa, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xffe6, gbc.sp());
        EXPECT(0x18ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 02C0
        gbc.setState(0xcf9b, 0x977, 0xc2b0, 0x3200, 0x1d02, 0x233d, 0x0, 0x0);
        gbc.writeMem(0xcf9b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x977, gbc.sp());
        EXPECT(0xcf9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf9b));
        EXPECT(0x9c, gbc.readMem(0xcf9c));
        // CB 9C 02C1
        gbc.setState(0xce4b, 0xdfb4, 0x24a0, 0x1207, 0x491b, 0xc90b, 0x0, 0x1);
        gbc.writeMem(0xce4b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xdfb4, gbc.sp());
        EXPECT(0xce4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce4b));
        EXPECT(0x9c, gbc.readMem(0xce4c));
        // CB 9C 02C2
        gbc.setState(0xe055, 0xdc15, 0x3e90, 0xacf5, 0xe46b, 0xebf4, 0x0, 0x1);
        gbc.writeMem(0xe055, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xdc15, gbc.sp());
        EXPECT(0xe057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe055));
        EXPECT(0x9c, gbc.readMem(0xe056));
        // CB 9C 02C4
        gbc.setState(0xc75f, 0xf749, 0x6140, 0xcf20, 0x4be7, 0x69b2, 0x0, 0x1);
        gbc.writeMem(0xc75f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf749, gbc.sp());
        EXPECT(0xc761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc75f));
        EXPECT(0x9c, gbc.readMem(0xc760));
        // CB 9C 02C5
        gbc.setState(0x5ba0, 0xf45b, 0xfd00, 0x4a0c, 0x2903, 0x9b6b, 0x1, 0x0);
        gbc.writeMem(0x5ba0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf45b, gbc.sp());
        EXPECT(0x5ba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 02C6
        gbc.setState(0x42d8, 0x6241, 0x81a0, 0x4944, 0x118b, 0xbb7f, 0x0, 0x1);
        gbc.writeMem(0x42d8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6241, gbc.sp());
        EXPECT(0x42da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 02C7
        gbc.setState(0x7c2d, 0xd0ba, 0x8ec0, 0x14ae, 0xe42a, 0x5b82, 0x1, 0x1);
        gbc.writeMem(0x7c2d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd0ba, gbc.sp());
        EXPECT(0x7c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 02C8
        gbc.setState(0xadaa, 0xf5fb, 0x6340, 0xb279, 0x68fd, 0xea66, 0x1, 0x1);
        gbc.writeMem(0xadaa, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf5fb, gbc.sp());
        EXPECT(0xadac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadaa));
        EXPECT(0x9c, gbc.readMem(0xadab));
        // CB 9C 02C9
        gbc.setState(0xd065, 0xa66a, 0xa7a0, 0xe421, 0x50b2, 0xf19d, 0x0, 0x1);
        gbc.writeMem(0xd065, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa66a, gbc.sp());
        EXPECT(0xd067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd065));
        EXPECT(0x9c, gbc.readMem(0xd066));
        // CB 9C 02CB
        gbc.setState(0xd2bc, 0xb2fd, 0xf440, 0xaa5f, 0x3c8b, 0xb90e, 0x1, 0x0);
        gbc.writeMem(0xd2bc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb2fd, gbc.sp());
        EXPECT(0xd2be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2bc));
        EXPECT(0x9c, gbc.readMem(0xd2bd));
        // CB 9C 02CC
        gbc.setState(0xddc4, 0x26ab, 0xd40, 0xea43, 0x35b7, 0x426, 0x0, 0x1);
        gbc.writeMem(0xddc4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x26ab, gbc.sp());
        EXPECT(0xddc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddc4));
        EXPECT(0x9c, gbc.readMem(0xddc5));
        // CB 9C 02CD
        gbc.setState(0x107f, 0x648c, 0x9a30, 0xd5d5, 0xf454, 0xf0a2, 0x0, 0x1);
        gbc.writeMem(0x107f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x648c, gbc.sp());
        EXPECT(0x1081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 02CE
        gbc.setState(0x75ae, 0x25b, 0x75c0, 0xa7, 0xe2ea, 0x7f8f, 0x0, 0x0);
        gbc.writeMem(0x75ae, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x25b, gbc.sp());
        EXPECT(0x75b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 02D0
        gbc.setState(0x1ec2, 0x1993, 0xeba0, 0xb3ac, 0xca0c, 0x997, 0x1, 0x0);
        gbc.writeMem(0x1ec2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1993, gbc.sp());
        EXPECT(0x1ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 02D1
        gbc.setState(0x4952, 0x575d, 0x9910, 0xa3a9, 0x15f6, 0x5a8e, 0x0, 0x1);
        gbc.writeMem(0x4952, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x575d, gbc.sp());
        EXPECT(0x4954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 02D2
        gbc.setState(0xebb, 0x7e43, 0xfce0, 0x408d, 0xe07b, 0x10fb, 0x1, 0x1);
        gbc.writeMem(0xebb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7e43, gbc.sp());
        EXPECT(0xebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 02D3
        gbc.setState(0xe1f4, 0xb79d, 0x24f0, 0x73d1, 0x5f65, 0x3149, 0x0, 0x0);
        gbc.writeMem(0xe1f4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb79d, gbc.sp());
        EXPECT(0xe1f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1f4));
        EXPECT(0x9c, gbc.readMem(0xe1f5));
        // CB 9C 02D4
        gbc.setState(0x22f2, 0x4b52, 0x9520, 0x8aba, 0x5b8e, 0x5f32, 0x1, 0x1);
        gbc.writeMem(0x22f2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4b52, gbc.sp());
        EXPECT(0x22f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 02D5
        gbc.setState(0x683, 0x933b, 0x2af0, 0xa02b, 0x900e, 0xe41a, 0x0, 0x0);
        gbc.writeMem(0x683, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x933b, gbc.sp());
        EXPECT(0x685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 02D6
        gbc.setState(0xa2c1, 0xf699, 0xa410, 0x8902, 0xf78b, 0x22cf, 0x0, 0x1);
        gbc.writeMem(0xa2c1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf699, gbc.sp());
        EXPECT(0xa2c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2c1));
        EXPECT(0x9c, gbc.readMem(0xa2c2));
        // CB 9C 02D7
        gbc.setState(0x500, 0x6bf0, 0x94a0, 0x13e8, 0xa0fa, 0x977, 0x0, 0x0);
        gbc.writeMem(0x500, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6bf0, gbc.sp());
        EXPECT(0x502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 02D8
        gbc.setState(0xa093, 0x60c9, 0x72a0, 0xdcde, 0xca77, 0xde80, 0x0, 0x0);
        gbc.writeMem(0xa093, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x60c9, gbc.sp());
        EXPECT(0xa095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa093));
        EXPECT(0x9c, gbc.readMem(0xa094));
        // CB 9C 02D9
        gbc.setState(0x944c, 0x3d2c, 0x9c00, 0x47db, 0x263c, 0xea98, 0x1, 0x0);
        gbc.writeMem(0x944c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3d2c, gbc.sp());
        EXPECT(0x944e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x944c));
        EXPECT(0x9c, gbc.readMem(0x944d));
        // CB 9C 02DA
        gbc.setState(0xdd01, 0xbc3f, 0xd610, 0x51bf, 0xe6c0, 0xcbf0, 0x1, 0x0);
        gbc.writeMem(0xdd01, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xbc3f, gbc.sp());
        EXPECT(0xdd03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd01));
        EXPECT(0x9c, gbc.readMem(0xdd02));
        // CB 9C 02DB
        gbc.setState(0x1513, 0x6847, 0x8990, 0xcfec, 0x3842, 0xb441, 0x0, 0x0);
        gbc.writeMem(0x1513, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6847, gbc.sp());
        EXPECT(0x1515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 02DC
        gbc.setState(0xc22b, 0x246d, 0x8040, 0xe6a3, 0x8347, 0xdf4e, 0x0, 0x1);
        gbc.writeMem(0xc22b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x246d, gbc.sp());
        EXPECT(0xc22d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc22b));
        EXPECT(0x9c, gbc.readMem(0xc22c));
        // CB 9C 02DD
        gbc.setState(0xeaee, 0x566e, 0xcb20, 0x43b0, 0xce57, 0xae9a, 0x1, 0x1);
        gbc.writeMem(0xeaee, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x566e, gbc.sp());
        EXPECT(0xeaf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaee));
        EXPECT(0x9c, gbc.readMem(0xeaef));
        // CB 9C 02DE
        gbc.setState(0xb37, 0xbac7, 0xb820, 0xc9c1, 0x21f6, 0xe60b, 0x0, 0x0);
        gbc.writeMem(0xb37, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xbac7, gbc.sp());
        EXPECT(0xb39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 02DF
        gbc.setState(0x3e8e, 0xaea7, 0x90b0, 0x8faf, 0xe20, 0x2e7b, 0x0, 0x0);
        gbc.writeMem(0x3e8e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xaea7, gbc.sp());
        EXPECT(0x3e90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 02E0
        gbc.setState(0x8190, 0x1c36, 0x91b0, 0x7523, 0xda32, 0x486d, 0x0, 0x0);
        gbc.writeMem(0x8190, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1c36, gbc.sp());
        EXPECT(0x8192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8190));
        EXPECT(0x9c, gbc.readMem(0x8191));
        // CB 9C 02E1
        gbc.setState(0xe60f, 0xec9f, 0xebc0, 0x6503, 0x75a9, 0xe0a9, 0x1, 0x0);
        gbc.writeMem(0xe60f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xec9f, gbc.sp());
        EXPECT(0xe611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe60f));
        EXPECT(0x9c, gbc.readMem(0xe610));
        // CB 9C 02E2
        gbc.setState(0x5803, 0xb0fb, 0xd730, 0x74e2, 0xa521, 0x230, 0x0, 0x0);
        gbc.writeMem(0x5803, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb0fb, gbc.sp());
        EXPECT(0x5805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 02E3
        gbc.setState(0xe2e5, 0x9f72, 0x2470, 0x1947, 0xa327, 0x94ec, 0x1, 0x0);
        gbc.writeMem(0xe2e5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9f72, gbc.sp());
        EXPECT(0xe2e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2e5));
        EXPECT(0x9c, gbc.readMem(0xe2e6));
        // CB 9C 02E4
        gbc.setState(0x7577, 0x7ad7, 0xdfb0, 0xcd5b, 0x5601, 0x9f46, 0x1, 0x0);
        gbc.writeMem(0x7577, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7ad7, gbc.sp());
        EXPECT(0x7579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 02E5
        gbc.setState(0x41d6, 0xadc8, 0x2f10, 0xa490, 0xf16d, 0x4b64, 0x0, 0x0);
        gbc.writeMem(0x41d6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xadc8, gbc.sp());
        EXPECT(0x41d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 02E6
        gbc.setState(0x7b82, 0x9903, 0xe810, 0xa02b, 0xa8a2, 0x83c3, 0x1, 0x1);
        gbc.writeMem(0x7b82, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9903, gbc.sp());
        EXPECT(0x7b84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 02E7
        gbc.setState(0xa342, 0x41f, 0xdc10, 0xce7d, 0x7335, 0xb272, 0x1, 0x0);
        gbc.writeMem(0xa342, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x41f, gbc.sp());
        EXPECT(0xa344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa342));
        EXPECT(0x9c, gbc.readMem(0xa343));
        // CB 9C 02E8
        gbc.setState(0x8d02, 0xc3f3, 0xbea0, 0x9360, 0xc79f, 0x9616, 0x0, 0x1);
        gbc.writeMem(0x8d02, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc3f3, gbc.sp());
        EXPECT(0x8d04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d02));
        EXPECT(0x9c, gbc.readMem(0x8d03));
        // CB 9C 02E9
        gbc.setState(0x78c9, 0x9050, 0x9de0, 0xc151, 0xc23b, 0xef9a, 0x1, 0x1);
        gbc.writeMem(0x78c9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9050, gbc.sp());
        EXPECT(0x78cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 02EA
        gbc.setState(0xc3c4, 0x891f, 0xb400, 0x38fb, 0x2024, 0xda72, 0x1, 0x0);
        gbc.writeMem(0xc3c4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x891f, gbc.sp());
        EXPECT(0xc3c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3c4));
        EXPECT(0x9c, gbc.readMem(0xc3c5));
        // CB 9C 02EC
        gbc.setState(0x72cc, 0xe22c, 0x51b0, 0xae75, 0x84dd, 0x8e1f, 0x0, 0x1);
        gbc.writeMem(0x72cc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe22c, gbc.sp());
        EXPECT(0x72ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 02ED
        gbc.setState(0x492c, 0x29d7, 0xe20, 0x817f, 0x1c9a, 0x91ac, 0x1, 0x0);
        gbc.writeMem(0x492c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x29d7, gbc.sp());
        EXPECT(0x492e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 02EE
        gbc.setState(0x2217, 0xb552, 0xb2c0, 0xefc4, 0xe2c0, 0x1ce, 0x1, 0x1);
        gbc.writeMem(0x2217, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb552, gbc.sp());
        EXPECT(0x2219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 02EF
        gbc.setState(0x826c, 0xa1f6, 0xb010, 0xd739, 0xd9f2, 0x4a2b, 0x1, 0x0);
        gbc.writeMem(0x826c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa1f6, gbc.sp());
        EXPECT(0x826e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x826c));
        EXPECT(0x9c, gbc.readMem(0x826d));
        // CB 9C 02F0
        gbc.setState(0xc8f4, 0x52c8, 0xd9b0, 0x3df8, 0x2900, 0xe732, 0x0, 0x0);
        gbc.writeMem(0xc8f4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x52c8, gbc.sp());
        EXPECT(0xc8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8f4));
        EXPECT(0x9c, gbc.readMem(0xc8f5));
        // CB 9C 02F1
        gbc.setState(0x77f4, 0x16b1, 0x4a80, 0x4308, 0xc905, 0xb9c8, 0x0, 0x1);
        gbc.writeMem(0x77f4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x16b1, gbc.sp());
        EXPECT(0x77f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 02F2
        gbc.setState(0xccde, 0xa786, 0x60d0, 0xc4c, 0x8ab5, 0xacf7, 0x1, 0x0);
        gbc.writeMem(0xccde, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa786, gbc.sp());
        EXPECT(0xcce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccde));
        EXPECT(0x9c, gbc.readMem(0xccdf));
        // CB 9C 02F3
        gbc.setState(0x963, 0xa27a, 0x1810, 0xfaba, 0xb786, 0x7708, 0x0, 0x1);
        gbc.writeMem(0x963, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa27a, gbc.sp());
        EXPECT(0x965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 02F4
        gbc.setState(0x845e, 0xf870, 0x30f0, 0x8886, 0xd5e2, 0xe280, 0x0, 0x1);
        gbc.writeMem(0x845e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf870, gbc.sp());
        EXPECT(0x8460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x845e));
        EXPECT(0x9c, gbc.readMem(0x845f));
        // CB 9C 02F5
        gbc.setState(0x9346, 0x80ea, 0xc600, 0x4da1, 0x46ad, 0xca5d, 0x1, 0x1);
        gbc.writeMem(0x9346, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x80ea, gbc.sp());
        EXPECT(0x9348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9346));
        EXPECT(0x9c, gbc.readMem(0x9347));
        // CB 9C 02F6
        gbc.setState(0x2809, 0xc5f1, 0xd300, 0xb896, 0xd13c, 0x2c08, 0x1, 0x0);
        gbc.writeMem(0x2809, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc5f1, gbc.sp());
        EXPECT(0x280b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 02F7
        gbc.setState(0xd811, 0xf7ad, 0xd120, 0xe207, 0xb2c3, 0x1334, 0x0, 0x0);
        gbc.writeMem(0xd811, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf7ad, gbc.sp());
        EXPECT(0xd813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd811));
        EXPECT(0x9c, gbc.readMem(0xd812));
        // CB 9C 02F8
        gbc.setState(0xe29c, 0xfbe8, 0x2810, 0xe4f9, 0x36fd, 0x9d18, 0x1, 0x0);
        gbc.writeMem(0xe29c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xfbe8, gbc.sp());
        EXPECT(0xe29e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe29c));
        EXPECT(0x9c, gbc.readMem(0xe29d));
        // CB 9C 02F9
        gbc.setState(0xc648, 0xce0a, 0xedb0, 0x3f14, 0x3d0a, 0x8321, 0x1, 0x1);
        gbc.writeMem(0xc648, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xce0a, gbc.sp());
        EXPECT(0xc64a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc648));
        EXPECT(0x9c, gbc.readMem(0xc649));
        // CB 9C 02FA
        gbc.setState(0xc6f2, 0xa6c1, 0x4cd0, 0x5b65, 0x86f3, 0x65e7, 0x1, 0x0);
        gbc.writeMem(0xc6f2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa6c1, gbc.sp());
        EXPECT(0xc6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6f2));
        EXPECT(0x9c, gbc.readMem(0xc6f3));
        // CB 9C 02FB
        gbc.setState(0x74a6, 0x1647, 0x2790, 0x5813, 0xabc2, 0x72b7, 0x0, 0x0);
        gbc.writeMem(0x74a6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1647, gbc.sp());
        EXPECT(0x74a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 02FC
        gbc.setState(0xbf2a, 0x3baf, 0x1510, 0x4827, 0x1eca, 0x4734, 0x0, 0x1);
        gbc.writeMem(0xbf2a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3baf, gbc.sp());
        EXPECT(0xbf2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf2a));
        EXPECT(0x9c, gbc.readMem(0xbf2b));
        // CB 9C 02FD
        gbc.setState(0x73b8, 0xc7f3, 0x6b40, 0x26f4, 0x9a52, 0x466f, 0x1, 0x0);
        gbc.writeMem(0x73b8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc7f3, gbc.sp());
        EXPECT(0x73ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 02FE
        gbc.setState(0xd86, 0xdfac, 0xe260, 0xb85f, 0x7cb4, 0x7717, 0x1, 0x0);
        gbc.writeMem(0xd86, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xdfac, gbc.sp());
        EXPECT(0xd88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 02FF
        gbc.setState(0x6cac, 0x837a, 0x69e0, 0x120e, 0x7235, 0x8ff2, 0x1, 0x0);
        gbc.writeMem(0x6cac, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x837a, gbc.sp());
        EXPECT(0x6cae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0300
        gbc.setState(0x80df, 0x510a, 0xc4d0, 0xb32a, 0xaa3a, 0x904, 0x1, 0x0);
        gbc.writeMem(0x80df, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x510a, gbc.sp());
        EXPECT(0x80e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80df));
        EXPECT(0x9c, gbc.readMem(0x80e0));
        // CB 9C 0301
        gbc.setState(0xdde7, 0x3b38, 0x8380, 0xf145, 0x41da, 0xbf, 0x0, 0x0);
        gbc.writeMem(0xdde7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3b38, gbc.sp());
        EXPECT(0xdde9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde7));
        EXPECT(0x9c, gbc.readMem(0xdde8));
        // CB 9C 0302
        gbc.setState(0xe245, 0x8e01, 0x8f60, 0x84c7, 0x73d4, 0xb939, 0x0, 0x0);
        gbc.writeMem(0xe245, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8e01, gbc.sp());
        EXPECT(0xe247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe245));
        EXPECT(0x9c, gbc.readMem(0xe246));
        // CB 9C 0303
        gbc.setState(0xd23c, 0xaf85, 0x550, 0xbf8d, 0xce7b, 0xad1c, 0x1, 0x1);
        gbc.writeMem(0xd23c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xaf85, gbc.sp());
        EXPECT(0xd23e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd23c));
        EXPECT(0x9c, gbc.readMem(0xd23d));
        // CB 9C 0304
        gbc.setState(0x730b, 0x4a0d, 0xc640, 0xd988, 0xd879, 0xc1fd, 0x0, 0x0);
        gbc.writeMem(0x730b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4a0d, gbc.sp());
        EXPECT(0x730d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0305
        gbc.setState(0x23b3, 0x9e4f, 0x8490, 0x3b2b, 0xcd3, 0x80a, 0x1, 0x1);
        gbc.writeMem(0x23b3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9e4f, gbc.sp());
        EXPECT(0x23b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0306
        gbc.setState(0xc576, 0x4d2f, 0x810, 0x6da8, 0xe2f0, 0xfd83, 0x1, 0x0);
        gbc.writeMem(0xc576, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4d2f, gbc.sp());
        EXPECT(0xc578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc576));
        EXPECT(0x9c, gbc.readMem(0xc577));
        // CB 9C 0307
        gbc.setState(0x85b8, 0x5c71, 0xb5a0, 0x461c, 0x4c28, 0x81d0, 0x1, 0x1);
        gbc.writeMem(0x85b8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5c71, gbc.sp());
        EXPECT(0x85ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85b8));
        EXPECT(0x9c, gbc.readMem(0x85b9));
        // CB 9C 0308
        gbc.setState(0x2f67, 0xe490, 0x8d10, 0x76cb, 0x2b51, 0x9440, 0x0, 0x0);
        gbc.writeMem(0x2f67, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe490, gbc.sp());
        EXPECT(0x2f69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0309
        gbc.setState(0x713a, 0x2bb, 0xfbe0, 0x1763, 0xeb6, 0x2c98, 0x0, 0x1);
        gbc.writeMem(0x713a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2bb, gbc.sp());
        EXPECT(0x713c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 030A
        gbc.setState(0x6d72, 0xd453, 0x51d0, 0x16c3, 0xa079, 0xc5a, 0x0, 0x1);
        gbc.writeMem(0x6d72, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd453, gbc.sp());
        EXPECT(0x6d74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 030B
        gbc.setState(0x3fca, 0x157d, 0x3430, 0x38ea, 0xb6fb, 0xdc2e, 0x0, 0x1);
        gbc.writeMem(0x3fca, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x157d, gbc.sp());
        EXPECT(0x3fcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 030C
        gbc.setState(0x7170, 0x6007, 0x39d0, 0x1a20, 0xd725, 0x8d9d, 0x0, 0x1);
        gbc.writeMem(0x7170, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6007, gbc.sp());
        EXPECT(0x7172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 030D
        gbc.setState(0xcd8a, 0x27bb, 0xe6c0, 0xcedb, 0x6e8b, 0xd2c3, 0x0, 0x1);
        gbc.writeMem(0xcd8a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x27bb, gbc.sp());
        EXPECT(0xcd8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd8a));
        EXPECT(0x9c, gbc.readMem(0xcd8b));
        // CB 9C 030E
        gbc.setState(0x9900, 0x3bcd, 0xd6a0, 0xf178, 0x1e74, 0xb9f1, 0x1, 0x0);
        gbc.writeMem(0x9900, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3bcd, gbc.sp());
        EXPECT(0x9902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9900));
        EXPECT(0x9c, gbc.readMem(0x9901));
        // CB 9C 0310
        gbc.setState(0xbe8, 0xc7aa, 0xb1b0, 0xc28f, 0xd43f, 0x3403, 0x1, 0x0);
        gbc.writeMem(0xbe8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc7aa, gbc.sp());
        EXPECT(0xbea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0311
        gbc.setState(0x24ed, 0xd273, 0x51c0, 0x15f5, 0x3c72, 0x4f73, 0x0, 0x0);
        gbc.writeMem(0x24ed, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd273, gbc.sp());
        EXPECT(0x24ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0312
        gbc.setState(0x8b21, 0x9859, 0xe930, 0x3586, 0x9cdd, 0x23c8, 0x0, 0x1);
        gbc.writeMem(0x8b21, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9859, gbc.sp());
        EXPECT(0x8b23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b21));
        EXPECT(0x9c, gbc.readMem(0x8b22));
        // CB 9C 0313
        gbc.setState(0x9c4, 0xb50f, 0x97a0, 0x877e, 0x75fd, 0xd191, 0x1, 0x0);
        gbc.writeMem(0x9c4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb50f, gbc.sp());
        EXPECT(0x9c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0315
        gbc.setState(0xcaeb, 0x4e25, 0xad50, 0xb6a3, 0x47ea, 0xffa, 0x1, 0x1);
        gbc.writeMem(0xcaeb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4e25, gbc.sp());
        EXPECT(0xcaed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaeb));
        EXPECT(0x9c, gbc.readMem(0xcaec));
        // CB 9C 0316
        gbc.setState(0x8326, 0xb517, 0x3650, 0xaf6d, 0xb7fd, 0xd729, 0x0, 0x0);
        gbc.writeMem(0x8326, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb517, gbc.sp());
        EXPECT(0x8328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8326));
        EXPECT(0x9c, gbc.readMem(0x8327));
        // CB 9C 0317
        gbc.setState(0x3350, 0xe793, 0x7e20, 0xf654, 0x80b3, 0x563b, 0x0, 0x0);
        gbc.writeMem(0x3350, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe793, gbc.sp());
        EXPECT(0x3352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0318
        gbc.setState(0xd447, 0x8909, 0x18c0, 0x4233, 0x9de8, 0xba66, 0x1, 0x0);
        gbc.writeMem(0xd447, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8909, gbc.sp());
        EXPECT(0xd449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd447));
        EXPECT(0x9c, gbc.readMem(0xd448));
        // CB 9C 0319
        gbc.setState(0x65ce, 0x7a67, 0x4ab0, 0x5230, 0x6d84, 0x8979, 0x1, 0x0);
        gbc.writeMem(0x65ce, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7a67, gbc.sp());
        EXPECT(0x65d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 031A
        gbc.setState(0x29b2, 0xcede, 0x17a0, 0x3dd3, 0x4b49, 0x1ed6, 0x1, 0x1);
        gbc.writeMem(0x29b2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xcede, gbc.sp());
        EXPECT(0x29b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 031B
        gbc.setState(0x7c8e, 0xa8ce, 0x51c0, 0xac24, 0x7b35, 0x7b4f, 0x1, 0x0);
        gbc.writeMem(0x7c8e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa8ce, gbc.sp());
        EXPECT(0x7c90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 031C
        gbc.setState(0x491b, 0xf329, 0x7670, 0xcd9d, 0x9fa6, 0x6585, 0x0, 0x1);
        gbc.writeMem(0x491b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf329, gbc.sp());
        EXPECT(0x491d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 031D
        gbc.setState(0xda51, 0xa2da, 0x1d10, 0x6669, 0x5344, 0xf70e, 0x1, 0x1);
        gbc.writeMem(0xda51, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa2da, gbc.sp());
        EXPECT(0xda53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda51));
        EXPECT(0x9c, gbc.readMem(0xda52));
        // CB 9C 031E
        gbc.setState(0x44de, 0x1230, 0xef60, 0xb25d, 0xee53, 0xc85a, 0x0, 0x0);
        gbc.writeMem(0x44de, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1230, gbc.sp());
        EXPECT(0x44e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 031F
        gbc.setState(0x7155, 0x9fc0, 0x6840, 0x6714, 0x3f98, 0xcb81, 0x0, 0x1);
        gbc.writeMem(0x7155, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9fc0, gbc.sp());
        EXPECT(0x7157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0320
        gbc.setState(0xa5d1, 0x2134, 0xecb0, 0x21af, 0x4b93, 0xa035, 0x0, 0x0);
        gbc.writeMem(0xa5d1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2134, gbc.sp());
        EXPECT(0xa5d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5d1));
        EXPECT(0x9c, gbc.readMem(0xa5d2));
        // CB 9C 0321
        gbc.setState(0x2928, 0x3ec3, 0x3770, 0x8614, 0xcec0, 0x7e55, 0x0, 0x1);
        gbc.writeMem(0x2928, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3ec3, gbc.sp());
        EXPECT(0x292a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0322
        gbc.setState(0x4425, 0x2edf, 0x6e80, 0xc2fb, 0xec40, 0xcc7d, 0x0, 0x0);
        gbc.writeMem(0x4425, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2edf, gbc.sp());
        EXPECT(0x4427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0323
        gbc.setState(0x5170, 0xa6a, 0xd580, 0x6d26, 0x997b, 0xa7f9, 0x1, 0x1);
        gbc.writeMem(0x5170, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa6a, gbc.sp());
        EXPECT(0x5172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0324
        gbc.setState(0xc3eb, 0x5871, 0xbec0, 0x8f81, 0x67d4, 0x6759, 0x0, 0x1);
        gbc.writeMem(0xc3eb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5871, gbc.sp());
        EXPECT(0xc3ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3eb));
        EXPECT(0x9c, gbc.readMem(0xc3ec));
        // CB 9C 0325
        gbc.setState(0x8f84, 0x5383, 0x6740, 0x1394, 0xe405, 0x7d16, 0x1, 0x0);
        gbc.writeMem(0x8f84, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5383, gbc.sp());
        EXPECT(0x8f86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f84));
        EXPECT(0x9c, gbc.readMem(0x8f85));
        // CB 9C 0326
        gbc.setState(0x9689, 0x4a2b, 0x2b30, 0xdbb7, 0x489c, 0x8010, 0x0, 0x1);
        gbc.writeMem(0x9689, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4a2b, gbc.sp());
        EXPECT(0x968b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9689));
        EXPECT(0x9c, gbc.readMem(0x968a));
        // CB 9C 0327
        gbc.setState(0x7717, 0x43db, 0x3670, 0xbe03, 0xd322, 0x45d0, 0x1, 0x1);
        gbc.writeMem(0x7717, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x43db, gbc.sp());
        EXPECT(0x7719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0328
        gbc.setState(0xe315, 0x9521, 0x9970, 0x924e, 0x555c, 0x9e7d, 0x0, 0x1);
        gbc.writeMem(0xe315, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9521, gbc.sp());
        EXPECT(0xe317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe315));
        EXPECT(0x9c, gbc.readMem(0xe316));
        // CB 9C 0329
        gbc.setState(0x9be9, 0x1afe, 0x9f40, 0xd213, 0x1f21, 0xccd1, 0x0, 0x0);
        gbc.writeMem(0x9be9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1afe, gbc.sp());
        EXPECT(0x9beb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9be9));
        EXPECT(0x9c, gbc.readMem(0x9bea));
        // CB 9C 032A
        gbc.setState(0x48f8, 0xf1c9, 0x58a0, 0x81be, 0x86e5, 0x1db4, 0x0, 0x0);
        gbc.writeMem(0x48f8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf1c9, gbc.sp());
        EXPECT(0x48fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 032B
        gbc.setState(0x3173, 0xdbcc, 0xabe0, 0xaa63, 0x5f42, 0x7, 0x0, 0x0);
        gbc.writeMem(0x3173, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdbcc, gbc.sp());
        EXPECT(0x3175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 032C
        gbc.setState(0x3a93, 0x44d, 0xaf00, 0xa5c4, 0x9473, 0x8d6a, 0x0, 0x1);
        gbc.writeMem(0x3a93, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x44d, gbc.sp());
        EXPECT(0x3a95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 032E
        gbc.setState(0xa253, 0x78a8, 0x18d0, 0xb71, 0x76a8, 0x8166, 0x0, 0x1);
        gbc.writeMem(0xa253, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x78a8, gbc.sp());
        EXPECT(0xa255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa253));
        EXPECT(0x9c, gbc.readMem(0xa254));
        // CB 9C 032F
        gbc.setState(0x5622, 0x718f, 0xf5f0, 0x85ff, 0xe8fb, 0xd759, 0x1, 0x1);
        gbc.writeMem(0x5622, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x718f, gbc.sp());
        EXPECT(0x5624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0330
        gbc.setState(0x80c4, 0x4944, 0x48a0, 0x8dcb, 0x84d2, 0xa9ff, 0x0, 0x0);
        gbc.writeMem(0x80c4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4944, gbc.sp());
        EXPECT(0x80c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80c4));
        EXPECT(0x9c, gbc.readMem(0x80c5));
        // CB 9C 0331
        gbc.setState(0x7fcc, 0xeca4, 0x7dc0, 0x6431, 0xf910, 0x2429, 0x1, 0x1);
        gbc.writeMem(0x7fcc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xeca4, gbc.sp());
        EXPECT(0x7fce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0332
        gbc.setState(0x98eb, 0x1025, 0xae40, 0x9aed, 0x1fcd, 0x8e85, 0x1, 0x0);
        gbc.writeMem(0x98eb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1025, gbc.sp());
        EXPECT(0x98ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98eb));
        EXPECT(0x9c, gbc.readMem(0x98ec));
        // CB 9C 0333
        gbc.setState(0xa0a7, 0x7475, 0x2a30, 0x27e, 0x9db0, 0x884d, 0x0, 0x1);
        gbc.writeMem(0xa0a7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7475, gbc.sp());
        EXPECT(0xa0a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a7));
        EXPECT(0x9c, gbc.readMem(0xa0a8));
        // CB 9C 0334
        gbc.setState(0x2ee2, 0x113d, 0xeec0, 0xdef7, 0x33e2, 0x5b33, 0x1, 0x1);
        gbc.writeMem(0x2ee2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x113d, gbc.sp());
        EXPECT(0x2ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0335
        gbc.setState(0xc4cc, 0xae3d, 0xa010, 0x982b, 0xf393, 0x6bf5, 0x0, 0x0);
        gbc.writeMem(0xc4cc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xae3d, gbc.sp());
        EXPECT(0xc4ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4cc));
        EXPECT(0x9c, gbc.readMem(0xc4cd));
        // CB 9C 0337
        gbc.setState(0x3a4d, 0x4e2f, 0x4f00, 0xaaa7, 0x3922, 0x6a63, 0x1, 0x0);
        gbc.writeMem(0x3a4d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4e2f, gbc.sp());
        EXPECT(0x3a4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0338
        gbc.setState(0xc914, 0xc622, 0x3250, 0x952e, 0x7ef2, 0x7ce6, 0x1, 0x0);
        gbc.writeMem(0xc914, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc622, gbc.sp());
        EXPECT(0xc916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc914));
        EXPECT(0x9c, gbc.readMem(0xc915));
        // CB 9C 033A
        gbc.setState(0x4d02, 0x6bd0, 0x19e0, 0x174b, 0xf87, 0x5311, 0x0, 0x0);
        gbc.writeMem(0x4d02, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6bd0, gbc.sp());
        EXPECT(0x4d04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 033B
        gbc.setState(0x6751, 0xd035, 0xc840, 0x6357, 0x82d0, 0x77ff, 0x0, 0x1);
        gbc.writeMem(0x6751, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd035, gbc.sp());
        EXPECT(0x6753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 033C
        gbc.setState(0x711c, 0xcbaf, 0xc640, 0xb29d, 0x9815, 0x609e, 0x0, 0x1);
        gbc.writeMem(0x711c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xcbaf, gbc.sp());
        EXPECT(0x711e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 033D
        gbc.setState(0x3c45, 0x4374, 0x9be0, 0xa5f8, 0x2dba, 0x9435, 0x1, 0x1);
        gbc.writeMem(0x3c45, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4374, gbc.sp());
        EXPECT(0x3c47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 033E
        gbc.setState(0xe95f, 0x81c3, 0x3a50, 0x965d, 0x7907, 0xd52a, 0x0, 0x1);
        gbc.writeMem(0xe95f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x81c3, gbc.sp());
        EXPECT(0xe961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe95f));
        EXPECT(0x9c, gbc.readMem(0xe960));
        // CB 9C 033F
        gbc.setState(0x7cad, 0xa136, 0x110, 0xda62, 0x4cac, 0xb462, 0x1, 0x0);
        gbc.writeMem(0x7cad, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa136, gbc.sp());
        EXPECT(0x7caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0340
        gbc.setState(0xbbdf, 0xa552, 0x4130, 0xf9b1, 0xaa79, 0xce5d, 0x0, 0x1);
        gbc.writeMem(0xbbdf, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa552, gbc.sp());
        EXPECT(0xbbe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbdf));
        EXPECT(0x9c, gbc.readMem(0xbbe0));
        // CB 9C 0341
        gbc.setState(0xcf51, 0x6e9f, 0x5940, 0xc8a, 0xed1b, 0xb3e5, 0x0, 0x0);
        gbc.writeMem(0xcf51, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6e9f, gbc.sp());
        EXPECT(0xcf53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf51));
        EXPECT(0x9c, gbc.readMem(0xcf52));
        // CB 9C 0342
        gbc.setState(0xcb1b, 0x8863, 0x8290, 0xe436, 0x9918, 0x44e2, 0x1, 0x1);
        gbc.writeMem(0xcb1b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8863, gbc.sp());
        EXPECT(0xcb1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb1b));
        EXPECT(0x9c, gbc.readMem(0xcb1c));
        // CB 9C 0343
        gbc.setState(0x27f8, 0x15e0, 0x9e50, 0x8f52, 0xe1b3, 0xa5e4, 0x0, 0x1);
        gbc.writeMem(0x27f8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x15e0, gbc.sp());
        EXPECT(0x27fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0344
        gbc.setState(0xaa8b, 0xeaf0, 0xf520, 0xbe38, 0x7956, 0x50ee, 0x0, 0x0);
        gbc.writeMem(0xaa8b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xeaf0, gbc.sp());
        EXPECT(0xaa8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa8b));
        EXPECT(0x9c, gbc.readMem(0xaa8c));
        // CB 9C 0345
        gbc.setState(0xb180, 0x4d0b, 0x1a10, 0xb113, 0x9748, 0xcd60, 0x1, 0x1);
        gbc.writeMem(0xb180, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4d0b, gbc.sp());
        EXPECT(0xb182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb180));
        EXPECT(0x9c, gbc.readMem(0xb181));
        // CB 9C 0346
        gbc.setState(0x3221, 0xc583, 0x1340, 0x2def, 0xda3d, 0x783a, 0x0, 0x1);
        gbc.writeMem(0x3221, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc583, gbc.sp());
        EXPECT(0x3223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0347
        gbc.setState(0x96f, 0xf99f, 0xf280, 0x4f40, 0xc9a9, 0xc263, 0x0, 0x1);
        gbc.writeMem(0x96f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf99f, gbc.sp());
        EXPECT(0x971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0348
        gbc.setState(0x6ef1, 0xda7d, 0x28b0, 0x580f, 0x1612, 0xfdcb, 0x0, 0x1);
        gbc.writeMem(0x6ef1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xda7d, gbc.sp());
        EXPECT(0x6ef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0349
        gbc.setState(0x956d, 0x34ca, 0x1c20, 0xe691, 0x2f56, 0x6e18, 0x1, 0x0);
        gbc.writeMem(0x956d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x34ca, gbc.sp());
        EXPECT(0x956f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x956d));
        EXPECT(0x9c, gbc.readMem(0x956e));
        // CB 9C 034A
        gbc.setState(0xe078, 0x2d7c, 0xcd00, 0xdf72, 0xa097, 0xf678, 0x1, 0x0);
        gbc.writeMem(0xe078, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2d7c, gbc.sp());
        EXPECT(0xe07a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe078));
        EXPECT(0x9c, gbc.readMem(0xe079));
        // CB 9C 034B
        gbc.setState(0xcfb1, 0x62bb, 0x4ae0, 0xa33d, 0x5889, 0x2f35, 0x0, 0x0);
        gbc.writeMem(0xcfb1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x62bb, gbc.sp());
        EXPECT(0xcfb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfb1));
        EXPECT(0x9c, gbc.readMem(0xcfb2));
        // CB 9C 034C
        gbc.setState(0x7835, 0x7cc8, 0x8b70, 0x5245, 0x1f3d, 0xbd9a, 0x1, 0x1);
        gbc.writeMem(0x7835, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7cc8, gbc.sp());
        EXPECT(0x7837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 034D
        gbc.setState(0x8cf7, 0x7b2c, 0x3190, 0xee23, 0x114b, 0xea3a, 0x1, 0x0);
        gbc.writeMem(0x8cf7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7b2c, gbc.sp());
        EXPECT(0x8cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf7));
        EXPECT(0x9c, gbc.readMem(0x8cf8));
        // CB 9C 034E
        gbc.setState(0xb04a, 0x45d8, 0x7e50, 0x338c, 0xfe1e, 0xaabd, 0x0, 0x1);
        gbc.writeMem(0xb04a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x45d8, gbc.sp());
        EXPECT(0xb04c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb04a));
        EXPECT(0x9c, gbc.readMem(0xb04b));
        // CB 9C 034F
        gbc.setState(0x503, 0xdf84, 0x25c0, 0xdc52, 0xec26, 0xaaec, 0x1, 0x1);
        gbc.writeMem(0x503, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdf84, gbc.sp());
        EXPECT(0x505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0350
        gbc.setState(0xe0d0, 0xd46a, 0xaec0, 0xd4b9, 0x837a, 0x8ef7, 0x1, 0x1);
        gbc.writeMem(0xe0d0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd46a, gbc.sp());
        EXPECT(0xe0d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0d0));
        EXPECT(0x9c, gbc.readMem(0xe0d1));
        // CB 9C 0351
        gbc.setState(0x6c47, 0xa7db, 0xf4c0, 0xc21f, 0xd840, 0x5517, 0x0, 0x1);
        gbc.writeMem(0x6c47, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa7db, gbc.sp());
        EXPECT(0x6c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0352
        gbc.setState(0x1a7a, 0xcfe0, 0x9a00, 0x7fad, 0xcb0b, 0x25c1, 0x1, 0x1);
        gbc.writeMem(0x1a7a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcfe0, gbc.sp());
        EXPECT(0x1a7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0353
        gbc.setState(0xe914, 0x8392, 0xa9a0, 0xb899, 0x556a, 0x318, 0x1, 0x1);
        gbc.writeMem(0xe914, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8392, gbc.sp());
        EXPECT(0xe916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe914));
        EXPECT(0x9c, gbc.readMem(0xe915));
        // CB 9C 0354
        gbc.setState(0xc15c, 0xcf6c, 0x9b50, 0x56df, 0x1b47, 0x3521, 0x0, 0x0);
        gbc.writeMem(0xc15c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xcf6c, gbc.sp());
        EXPECT(0xc15e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc15c));
        EXPECT(0x9c, gbc.readMem(0xc15d));
        // CB 9C 0355
        gbc.setState(0x4c17, 0xb49b, 0x8b30, 0x4506, 0x1f01, 0xd616, 0x1, 0x0);
        gbc.writeMem(0x4c17, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb49b, gbc.sp());
        EXPECT(0x4c19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0356
        gbc.setState(0xe122, 0x4b09, 0x3830, 0xc81a, 0x705, 0x40a8, 0x0, 0x0);
        gbc.writeMem(0xe122, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4b09, gbc.sp());
        EXPECT(0xe124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe122));
        EXPECT(0x9c, gbc.readMem(0xe123));
        // CB 9C 0357
        gbc.setState(0x9543, 0x4369, 0x96a0, 0x4e5c, 0x774f, 0xb269, 0x1, 0x0);
        gbc.writeMem(0x9543, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4369, gbc.sp());
        EXPECT(0x9545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9543));
        EXPECT(0x9c, gbc.readMem(0x9544));
        // CB 9C 0358
        gbc.setState(0x76b1, 0x57e3, 0x3fe0, 0xc1b0, 0xd6d7, 0xdcef, 0x1, 0x1);
        gbc.writeMem(0x76b1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x57e3, gbc.sp());
        EXPECT(0x76b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0359
        gbc.setState(0x8377, 0x4a0f, 0xe640, 0x65b7, 0xcfb8, 0x8137, 0x0, 0x1);
        gbc.writeMem(0x8377, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4a0f, gbc.sp());
        EXPECT(0x8379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8377));
        EXPECT(0x9c, gbc.readMem(0x8378));
        // CB 9C 035A
        gbc.setState(0xa904, 0xeaf1, 0xfc20, 0xc56b, 0x5841, 0xc456, 0x1, 0x1);
        gbc.writeMem(0xa904, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xeaf1, gbc.sp());
        EXPECT(0xa906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa904));
        EXPECT(0x9c, gbc.readMem(0xa905));
        // CB 9C 035B
        gbc.setState(0x29f, 0xbe32, 0xd8e0, 0xe80f, 0xffa7, 0x34b2, 0x0, 0x1);
        gbc.writeMem(0x29f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbe32, gbc.sp());
        EXPECT(0x2a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 035C
        gbc.setState(0x8d64, 0x7a50, 0xb570, 0xef0d, 0xafeb, 0x917, 0x1, 0x0);
        gbc.writeMem(0x8d64, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7a50, gbc.sp());
        EXPECT(0x8d66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d64));
        EXPECT(0x9c, gbc.readMem(0x8d65));
        // CB 9C 035D
        gbc.setState(0x4f8, 0xc083, 0x75d0, 0xb8f9, 0x97b2, 0x26c1, 0x0, 0x1);
        gbc.writeMem(0x4f8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc083, gbc.sp());
        EXPECT(0x4fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 035E
        gbc.setState(0xcaba, 0x8696, 0x8550, 0xf806, 0x358, 0x750b, 0x0, 0x1);
        gbc.writeMem(0xcaba, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8696, gbc.sp());
        EXPECT(0xcabc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaba));
        EXPECT(0x9c, gbc.readMem(0xcabb));
        // CB 9C 035F
        gbc.setState(0x1d78, 0xa884, 0x8c70, 0x2ac7, 0xe089, 0x55be, 0x1, 0x1);
        gbc.writeMem(0x1d78, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa884, gbc.sp());
        EXPECT(0x1d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0360
        gbc.setState(0x3d35, 0xad42, 0x49b0, 0xe727, 0x6606, 0x8fa9, 0x1, 0x0);
        gbc.writeMem(0x3d35, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xad42, gbc.sp());
        EXPECT(0x3d37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0361
        gbc.setState(0xa70f, 0xe975, 0x8a60, 0xaf6, 0x706f, 0x6467, 0x1, 0x0);
        gbc.writeMem(0xa70f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe975, gbc.sp());
        EXPECT(0xa711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa70f));
        EXPECT(0x9c, gbc.readMem(0xa710));
        // CB 9C 0362
        gbc.setState(0x7521, 0x2dd1, 0xdaa0, 0xb19f, 0x9c60, 0xca26, 0x1, 0x1);
        gbc.writeMem(0x7521, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2dd1, gbc.sp());
        EXPECT(0x7523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0363
        gbc.setState(0x3ebf, 0xc99b, 0xea40, 0xfc66, 0x2d41, 0xf2c2, 0x1, 0x0);
        gbc.writeMem(0x3ebf, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc99b, gbc.sp());
        EXPECT(0x3ec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0364
        gbc.setState(0x7b59, 0xc3e3, 0x20f0, 0x3d9a, 0x7f8, 0xc89d, 0x1, 0x1);
        gbc.writeMem(0x7b59, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc3e3, gbc.sp());
        EXPECT(0x7b5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0365
        gbc.setState(0x6068, 0xaee5, 0xb180, 0xd3f9, 0xa992, 0xd4a4, 0x0, 0x0);
        gbc.writeMem(0x6068, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xaee5, gbc.sp());
        EXPECT(0x606a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0366
        gbc.setState(0xb00d, 0xac25, 0xb820, 0xeddb, 0xbf36, 0x1c24, 0x0, 0x1);
        gbc.writeMem(0xb00d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xac25, gbc.sp());
        EXPECT(0xb00f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb00d));
        EXPECT(0x9c, gbc.readMem(0xb00e));
        // CB 9C 0367
        gbc.setState(0x29d6, 0x4f08, 0x5450, 0xaa47, 0x1165, 0xa21a, 0x0, 0x1);
        gbc.writeMem(0x29d6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4f08, gbc.sp());
        EXPECT(0x29d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0368
        gbc.setState(0x61e1, 0x914a, 0x5220, 0x72a1, 0x346a, 0xd498, 0x1, 0x0);
        gbc.writeMem(0x61e1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x914a, gbc.sp());
        EXPECT(0x61e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0369
        gbc.setState(0x5c5a, 0xbf80, 0x3720, 0x3174, 0x3ad0, 0xf8a2, 0x0, 0x0);
        gbc.writeMem(0x5c5a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbf80, gbc.sp());
        EXPECT(0x5c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 036A
        gbc.setState(0x1ef0, 0x2bf0, 0x7960, 0xd6dd, 0xf879, 0x7cb9, 0x0, 0x0);
        gbc.writeMem(0x1ef0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2bf0, gbc.sp());
        EXPECT(0x1ef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 036B
        gbc.setState(0x7552, 0xd659, 0xcd10, 0x913d, 0x3db, 0x4429, 0x0, 0x1);
        gbc.writeMem(0x7552, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd659, gbc.sp());
        EXPECT(0x7554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 036D
        gbc.setState(0xde3d, 0xc8, 0x240, 0xc77f, 0xc3f7, 0x11d4, 0x0, 0x0);
        gbc.writeMem(0xde3d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc8, gbc.sp());
        EXPECT(0xde3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde3d));
        EXPECT(0x9c, gbc.readMem(0xde3e));
        // CB 9C 036E
        gbc.setState(0x5e74, 0x87bd, 0x180, 0x3c94, 0x9190, 0x877f, 0x0, 0x0);
        gbc.writeMem(0x5e74, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x87bd, gbc.sp());
        EXPECT(0x5e76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 036F
        gbc.setState(0x4d6b, 0x3eeb, 0xc620, 0xc5bc, 0x8e9c, 0x6e67, 0x0, 0x1);
        gbc.writeMem(0x4d6b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3eeb, gbc.sp());
        EXPECT(0x4d6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0370
        gbc.setState(0xabef, 0x6d1c, 0x41d0, 0x84af, 0xf579, 0xfeec, 0x1, 0x1);
        gbc.writeMem(0xabef, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6d1c, gbc.sp());
        EXPECT(0xabf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabef));
        EXPECT(0x9c, gbc.readMem(0xabf0));
        // CB 9C 0371
        gbc.setState(0x1def, 0x2f4a, 0xeef0, 0xf545, 0xa0a, 0x69ad, 0x0, 0x0);
        gbc.writeMem(0x1def, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2f4a, gbc.sp());
        EXPECT(0x1df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0372
        gbc.setState(0x93fd, 0x9fc0, 0x56c0, 0x3e55, 0x3f72, 0x4a42, 0x0, 0x1);
        gbc.writeMem(0x93fd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9fc0, gbc.sp());
        EXPECT(0x93ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93fd));
        EXPECT(0x9c, gbc.readMem(0x93fe));
        // CB 9C 0373
        gbc.setState(0x9628, 0x310e, 0x9780, 0xf978, 0xcb03, 0x9673, 0x0, 0x1);
        gbc.writeMem(0x9628, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x310e, gbc.sp());
        EXPECT(0x962a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9628));
        EXPECT(0x9c, gbc.readMem(0x9629));
        // CB 9C 0374
        gbc.setState(0x5af9, 0xac01, 0x9ea0, 0x1470, 0x396f, 0x51ca, 0x0, 0x0);
        gbc.writeMem(0x5af9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xac01, gbc.sp());
        EXPECT(0x5afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0375
        gbc.setState(0x8eb4, 0xc3b8, 0x4830, 0xad41, 0xcb4d, 0x61b9, 0x1, 0x0);
        gbc.writeMem(0x8eb4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc3b8, gbc.sp());
        EXPECT(0x8eb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eb4));
        EXPECT(0x9c, gbc.readMem(0x8eb5));
        // CB 9C 0376
        gbc.setState(0x3ef1, 0x5510, 0x2d50, 0xa811, 0x5eb3, 0x1651, 0x1, 0x1);
        gbc.writeMem(0x3ef1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5510, gbc.sp());
        EXPECT(0x3ef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0377
        gbc.setState(0x1f9f, 0x1843, 0xac70, 0x5052, 0x723e, 0x418e, 0x0, 0x1);
        gbc.writeMem(0x1f9f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1843, gbc.sp());
        EXPECT(0x1fa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0378
        gbc.setState(0x62c6, 0x8091, 0x62e0, 0x7612, 0x33a1, 0x7594, 0x0, 0x0);
        gbc.writeMem(0x62c6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8091, gbc.sp());
        EXPECT(0x62c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 037A
        gbc.setState(0xc4e7, 0x2ea1, 0xf730, 0x192e, 0x9b44, 0x38ee, 0x0, 0x0);
        gbc.writeMem(0xc4e7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2ea1, gbc.sp());
        EXPECT(0xc4e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4e7));
        EXPECT(0x9c, gbc.readMem(0xc4e8));
        // CB 9C 037B
        gbc.setState(0x92cf, 0xcf65, 0x9600, 0xf08c, 0xd8fb, 0xd968, 0x1, 0x0);
        gbc.writeMem(0x92cf, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xcf65, gbc.sp());
        EXPECT(0x92d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92cf));
        EXPECT(0x9c, gbc.readMem(0x92d0));
        // CB 9C 037C
        gbc.setState(0x840e, 0xefae, 0x5f90, 0x7e14, 0x9b3c, 0xd3e8, 0x1, 0x0);
        gbc.writeMem(0x840e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xefae, gbc.sp());
        EXPECT(0x8410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x840e));
        EXPECT(0x9c, gbc.readMem(0x840f));
        // CB 9C 037D
        gbc.setState(0x9f7b, 0x1ec, 0xa9b0, 0x5664, 0x5bc9, 0xb687, 0x1, 0x0);
        gbc.writeMem(0x9f7b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1ec, gbc.sp());
        EXPECT(0x9f7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f7b));
        EXPECT(0x9c, gbc.readMem(0x9f7c));
        // CB 9C 037E
        gbc.setState(0x48dd, 0xf754, 0xda80, 0x8137, 0x7922, 0x31dc, 0x1, 0x0);
        gbc.writeMem(0x48dd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf754, gbc.sp());
        EXPECT(0x48df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 037F
        gbc.setState(0x493d, 0xb407, 0x5c0, 0xcca1, 0xf6e2, 0xc5c7, 0x1, 0x1);
        gbc.writeMem(0x493d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb407, gbc.sp());
        EXPECT(0x493f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0380
        gbc.setState(0xdb61, 0x9cae, 0x97f0, 0x5584, 0xaea9, 0x54d4, 0x0, 0x0);
        gbc.writeMem(0xdb61, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9cae, gbc.sp());
        EXPECT(0xdb63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb61));
        EXPECT(0x9c, gbc.readMem(0xdb62));
        // CB 9C 0382
        gbc.setState(0x8610, 0x680a, 0xefc0, 0x9ee2, 0xbc6, 0x38bd, 0x1, 0x0);
        gbc.writeMem(0x8610, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x680a, gbc.sp());
        EXPECT(0x8612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8610));
        EXPECT(0x9c, gbc.readMem(0x8611));
        // CB 9C 0383
        gbc.setState(0xc0fc, 0xa08c, 0x9f60, 0x92c5, 0x13fb, 0x222a, 0x1, 0x1);
        gbc.writeMem(0xc0fc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa08c, gbc.sp());
        EXPECT(0xc0fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0fc));
        EXPECT(0x9c, gbc.readMem(0xc0fd));
        // CB 9C 0384
        gbc.setState(0x7842, 0x4e7c, 0x5640, 0x4fb, 0xf2e8, 0xca43, 0x1, 0x0);
        gbc.writeMem(0x7842, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4e7c, gbc.sp());
        EXPECT(0x7844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0385
        gbc.setState(0xa5b8, 0x127a, 0x7110, 0xbe64, 0xd7d5, 0x970f, 0x0, 0x1);
        gbc.writeMem(0xa5b8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x127a, gbc.sp());
        EXPECT(0xa5ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5b8));
        EXPECT(0x9c, gbc.readMem(0xa5b9));
        // CB 9C 0386
        gbc.setState(0xcdce, 0x5183, 0x67e0, 0xaa26, 0xcf1d, 0xb706, 0x0, 0x1);
        gbc.writeMem(0xcdce, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5183, gbc.sp());
        EXPECT(0xcdd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdce));
        EXPECT(0x9c, gbc.readMem(0xcdcf));
        // CB 9C 0387
        gbc.setState(0xb7e2, 0x38ce, 0x5f80, 0x4771, 0xea42, 0x4683, 0x0, 0x0);
        gbc.writeMem(0xb7e2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x38ce, gbc.sp());
        EXPECT(0xb7e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e2));
        EXPECT(0x9c, gbc.readMem(0xb7e3));
        // CB 9C 0388
        gbc.setState(0x6991, 0xfb88, 0x6e20, 0xa6bf, 0x8d91, 0xc356, 0x0, 0x0);
        gbc.writeMem(0x6991, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xfb88, gbc.sp());
        EXPECT(0x6993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0389
        gbc.setState(0x170a, 0xc781, 0xb600, 0xce0b, 0x27f4, 0x20bf, 0x0, 0x1);
        gbc.writeMem(0x170a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc781, gbc.sp());
        EXPECT(0x170c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 038A
        gbc.setState(0x96dd, 0x7588, 0xa930, 0xfa4, 0xf36e, 0x81c5, 0x1, 0x0);
        gbc.writeMem(0x96dd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7588, gbc.sp());
        EXPECT(0x96df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96dd));
        EXPECT(0x9c, gbc.readMem(0x96de));
        // CB 9C 038B
        gbc.setState(0x841b, 0x909c, 0xd760, 0xcfe2, 0x89b4, 0xf557, 0x1, 0x0);
        gbc.writeMem(0x841b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x909c, gbc.sp());
        EXPECT(0x841d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x841b));
        EXPECT(0x9c, gbc.readMem(0x841c));
        // CB 9C 038C
        gbc.setState(0x5c1a, 0xfd03, 0xbf20, 0xdbb0, 0xb56f, 0x1cb2, 0x0, 0x1);
        gbc.writeMem(0x5c1a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfd03, gbc.sp());
        EXPECT(0x5c1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 038D
        gbc.setState(0xbca0, 0xe076, 0x4cc0, 0x8e21, 0xb856, 0x3458, 0x0, 0x0);
        gbc.writeMem(0xbca0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe076, gbc.sp());
        EXPECT(0xbca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbca0));
        EXPECT(0x9c, gbc.readMem(0xbca1));
        // CB 9C 038E
        gbc.setState(0x16a4, 0xc99a, 0xc4f0, 0xc4b6, 0xf239, 0xfcff, 0x1, 0x1);
        gbc.writeMem(0x16a4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc99a, gbc.sp());
        EXPECT(0x16a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 038F
        gbc.setState(0x5cff, 0x3f08, 0xc9c0, 0x528a, 0xab6e, 0x9b41, 0x0, 0x1);
        gbc.writeMem(0x5cff, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3f08, gbc.sp());
        EXPECT(0x5d01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0390
        gbc.setState(0x4e26, 0xed98, 0x8ba0, 0x4885, 0x4397, 0x7820, 0x1, 0x1);
        gbc.writeMem(0x4e26, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xed98, gbc.sp());
        EXPECT(0x4e28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0391
        gbc.setState(0x6e0b, 0x1052, 0x8310, 0x111d, 0x1b2a, 0x4fc, 0x0, 0x1);
        gbc.writeMem(0x6e0b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1052, gbc.sp());
        EXPECT(0x6e0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0392
        gbc.setState(0xcf8, 0x5366, 0x9bb0, 0x457c, 0xd657, 0x6af0, 0x1, 0x0);
        gbc.writeMem(0xcf8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5366, gbc.sp());
        EXPECT(0xcfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0393
        gbc.setState(0x2b50, 0x822, 0xd90, 0x6141, 0x18d7, 0xc9d8, 0x1, 0x1);
        gbc.writeMem(0x2b50, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x822, gbc.sp());
        EXPECT(0x2b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0394
        gbc.setState(0xb477, 0xd3d0, 0x51b0, 0x9f6f, 0x6c6a, 0x1187, 0x0, 0x0);
        gbc.writeMem(0xb477, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd3d0, gbc.sp());
        EXPECT(0xb479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb477));
        EXPECT(0x9c, gbc.readMem(0xb478));
        // CB 9C 0395
        gbc.setState(0x2715, 0xb324, 0x84c0, 0x8643, 0xfe6c, 0x29c, 0x1, 0x1);
        gbc.writeMem(0x2715, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb324, gbc.sp());
        EXPECT(0x2717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0396
        gbc.setState(0xd815, 0xbcf7, 0xe1d0, 0xb51a, 0x603e, 0x1056, 0x1, 0x0);
        gbc.writeMem(0xd815, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbcf7, gbc.sp());
        EXPECT(0xd817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd815));
        EXPECT(0x9c, gbc.readMem(0xd816));
        // CB 9C 0397
        gbc.setState(0x1b0b, 0x131b, 0x39a0, 0x355c, 0xd7e5, 0x426b, 0x1, 0x0);
        gbc.writeMem(0x1b0b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x131b, gbc.sp());
        EXPECT(0x1b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 0398
        gbc.setState(0x1467, 0x7acd, 0x5e70, 0xd833, 0x3954, 0x3206, 0x0, 0x0);
        gbc.writeMem(0x1467, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7acd, gbc.sp());
        EXPECT(0x1469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 0399
        gbc.setState(0x44d7, 0xe8e5, 0x7c0, 0xa6d2, 0x8c5, 0xff31, 0x1, 0x0);
        gbc.writeMem(0x44d7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe8e5, gbc.sp());
        EXPECT(0x44d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 039A
        gbc.setState(0xb677, 0xa27, 0xd5a0, 0x6c36, 0x3d43, 0x7042, 0x0, 0x0);
        gbc.writeMem(0xb677, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa27, gbc.sp());
        EXPECT(0xb679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb677));
        EXPECT(0x9c, gbc.readMem(0xb678));
        // CB 9C 039B
        gbc.setState(0x8196, 0xd49a, 0x4600, 0x244c, 0x3f9b, 0x1b39, 0x0, 0x0);
        gbc.writeMem(0x8196, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd49a, gbc.sp());
        EXPECT(0x8198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8196));
        EXPECT(0x9c, gbc.readMem(0x8197));
        // CB 9C 039C
        gbc.setState(0xa287, 0x7dc, 0x84e0, 0x70da, 0x4464, 0xccad, 0x0, 0x1);
        gbc.writeMem(0xa287, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7dc, gbc.sp());
        EXPECT(0xa289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa287));
        EXPECT(0x9c, gbc.readMem(0xa288));
        // CB 9C 039D
        gbc.setState(0x1486, 0xafe, 0xd9d0, 0xb3a9, 0x642b, 0xa83c, 0x0, 0x0);
        gbc.writeMem(0x1486, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xafe, gbc.sp());
        EXPECT(0x1488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 039E
        gbc.setState(0xbd75, 0xa20a, 0x6fd0, 0xd60f, 0xdc77, 0xa8a, 0x0, 0x0);
        gbc.writeMem(0xbd75, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa20a, gbc.sp());
        EXPECT(0xbd77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd75));
        EXPECT(0x9c, gbc.readMem(0xbd76));
        // CB 9C 039F
        gbc.setState(0x4f8b, 0x9092, 0xb4e0, 0xedcc, 0xbea8, 0xeb31, 0x1, 0x0);
        gbc.writeMem(0x4f8b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9092, gbc.sp());
        EXPECT(0x4f8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 03A0
        gbc.setState(0x442c, 0x65, 0x55f0, 0xe074, 0x18d0, 0x1e0d, 0x0, 0x0);
        gbc.writeMem(0x442c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x65, gbc.sp());
        EXPECT(0x442e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 03A1
        gbc.setState(0xc5da, 0x52cc, 0xa780, 0x2b12, 0xdf73, 0xcf6f, 0x0, 0x1);
        gbc.writeMem(0xc5da, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x52cc, gbc.sp());
        EXPECT(0xc5dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5da));
        EXPECT(0x9c, gbc.readMem(0xc5db));
        // CB 9C 03A2
        gbc.setState(0xb490, 0x3c79, 0xc480, 0x6d29, 0x4d59, 0xe433, 0x1, 0x0);
        gbc.writeMem(0xb490, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3c79, gbc.sp());
        EXPECT(0xb492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb490));
        EXPECT(0x9c, gbc.readMem(0xb491));
        // CB 9C 03A3
        gbc.setState(0x5656, 0x28cb, 0xee50, 0xb39c, 0x7c9b, 0xd722, 0x1, 0x1);
        gbc.writeMem(0x5656, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x28cb, gbc.sp());
        EXPECT(0x5658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 03A4
        gbc.setState(0x8bea, 0x623c, 0xb190, 0x56c1, 0xea, 0x4e9a, 0x1, 0x1);
        gbc.writeMem(0x8bea, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x623c, gbc.sp());
        EXPECT(0x8bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bea));
        EXPECT(0x9c, gbc.readMem(0x8beb));
        // CB 9C 03A5
        gbc.setState(0x7cac, 0x7bef, 0xe610, 0x76cb, 0x8f92, 0x89f4, 0x0, 0x1);
        gbc.writeMem(0x7cac, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7bef, gbc.sp());
        EXPECT(0x7cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 03A6
        gbc.setState(0x7385, 0xbbb7, 0x4b0, 0x2a28, 0x174f, 0x3d47, 0x0, 0x1);
        gbc.writeMem(0x7385, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbbb7, gbc.sp());
        EXPECT(0x7387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 03A7
        gbc.setState(0xdf0c, 0x6dbe, 0x3630, 0x6a60, 0x9eef, 0x7748, 0x1, 0x1);
        gbc.writeMem(0xdf0c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6dbe, gbc.sp());
        EXPECT(0xdf0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf0c));
        EXPECT(0x9c, gbc.readMem(0xdf0d));
        // CB 9C 03A8
        gbc.setState(0x9677, 0x3891, 0x6c20, 0xbff4, 0x26f4, 0x488e, 0x1, 0x0);
        gbc.writeMem(0x9677, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3891, gbc.sp());
        EXPECT(0x9679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9677));
        EXPECT(0x9c, gbc.readMem(0x9678));
        // CB 9C 03A9
        gbc.setState(0xd89a, 0x9672, 0x47e0, 0x4f81, 0x2692, 0x67bf, 0x1, 0x0);
        gbc.writeMem(0xd89a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9672, gbc.sp());
        EXPECT(0xd89c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd89a));
        EXPECT(0x9c, gbc.readMem(0xd89b));
        // CB 9C 03AA
        gbc.setState(0x9ca4, 0xc3c8, 0x8270, 0x6da8, 0xa07e, 0xc33f, 0x1, 0x0);
        gbc.writeMem(0x9ca4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc3c8, gbc.sp());
        EXPECT(0x9ca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ca4));
        EXPECT(0x9c, gbc.readMem(0x9ca5));
        // CB 9C 03AC
        gbc.setState(0xd441, 0xda0, 0x1fc0, 0xfb47, 0x3a86, 0xefda, 0x1, 0x1);
        gbc.writeMem(0xd441, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xda0, gbc.sp());
        EXPECT(0xd443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd441));
        EXPECT(0x9c, gbc.readMem(0xd442));
        // CB 9C 03AD
        gbc.setState(0xcdfa, 0x78d8, 0xbe40, 0x7245, 0x1c5f, 0xe259, 0x0, 0x0);
        gbc.writeMem(0xcdfa, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x78d8, gbc.sp());
        EXPECT(0xcdfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdfa));
        EXPECT(0x9c, gbc.readMem(0xcdfb));
        // CB 9C 03AE
        gbc.setState(0xe440, 0x53e9, 0xf990, 0x6ff6, 0xed05, 0x5ee8, 0x0, 0x0);
        gbc.writeMem(0xe440, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x53e9, gbc.sp());
        EXPECT(0xe442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe440));
        EXPECT(0x9c, gbc.readMem(0xe441));
        // CB 9C 03AF
        gbc.setState(0x2c44, 0xd99, 0x30, 0x61a7, 0xb268, 0xd4a8, 0x0, 0x0);
        gbc.writeMem(0x2c44, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd99, gbc.sp());
        EXPECT(0x2c46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 03B0
        gbc.setState(0xd3ea, 0x6ff2, 0x5030, 0x660c, 0x6917, 0x1d72, 0x0, 0x0);
        gbc.writeMem(0xd3ea, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6ff2, gbc.sp());
        EXPECT(0xd3ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ea));
        EXPECT(0x9c, gbc.readMem(0xd3eb));
        // CB 9C 03B1
        gbc.setState(0xaf6f, 0xe12, 0xb0, 0xee49, 0x5706, 0xcedb, 0x1, 0x0);
        gbc.writeMem(0xaf6f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe12, gbc.sp());
        EXPECT(0xaf71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf6f));
        EXPECT(0x9c, gbc.readMem(0xaf70));
        // CB 9C 03B2
        gbc.setState(0xd772, 0xb8d0, 0x64f0, 0x916c, 0x9ebf, 0x8ad6, 0x0, 0x0);
        gbc.writeMem(0xd772, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb8d0, gbc.sp());
        EXPECT(0xd774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd772));
        EXPECT(0x9c, gbc.readMem(0xd773));
        // CB 9C 03B3
        gbc.setState(0x5a4f, 0x756a, 0x5460, 0xb6e8, 0x7cc7, 0xf526, 0x0, 0x1);
        gbc.writeMem(0x5a4f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x756a, gbc.sp());
        EXPECT(0x5a51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 03B4
        gbc.setState(0x5a35, 0x9aea, 0xdab0, 0xc011, 0x8e33, 0x59ce, 0x1, 0x1);
        gbc.writeMem(0x5a35, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9aea, gbc.sp());
        EXPECT(0x5a37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 03B5
        gbc.setState(0x9c16, 0xcdff, 0xdb60, 0x3689, 0x5e85, 0x1f5b, 0x1, 0x1);
        gbc.writeMem(0x9c16, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xcdff, gbc.sp());
        EXPECT(0x9c18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c16));
        EXPECT(0x9c, gbc.readMem(0x9c17));
        // CB 9C 03B6
        gbc.setState(0xa6ff, 0xe364, 0x6450, 0xce5f, 0xce30, 0x8e17, 0x0, 0x0);
        gbc.writeMem(0xa6ff, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe364, gbc.sp());
        EXPECT(0xa701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ff));
        EXPECT(0x9c, gbc.readMem(0xa700));
        // CB 9C 03B7
        gbc.setState(0x4ef9, 0xd228, 0x5c50, 0x106f, 0xca72, 0xf6b6, 0x1, 0x0);
        gbc.writeMem(0x4ef9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd228, gbc.sp());
        EXPECT(0x4efb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 03B8
        gbc.setState(0x5aaa, 0xe5c6, 0xd830, 0x1bca, 0x1f6f, 0x9b11, 0x0, 0x0);
        gbc.writeMem(0x5aaa, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe5c6, gbc.sp());
        EXPECT(0x5aac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 03B9
        gbc.setState(0x43ce, 0x7166, 0xccd0, 0x3d9d, 0x3f1f, 0xc819, 0x0, 0x0);
        gbc.writeMem(0x43ce, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7166, gbc.sp());
        EXPECT(0x43d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 03BA
        gbc.setState(0x67b7, 0x5716, 0x4d0, 0xa5c3, 0x60d0, 0x654, 0x0, 0x1);
        gbc.writeMem(0x67b7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5716, gbc.sp());
        EXPECT(0x67b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 03BB
        gbc.setState(0x7211, 0x5820, 0xbf0, 0x29d0, 0x5b14, 0x92f9, 0x1, 0x0);
        gbc.writeMem(0x7211, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5820, gbc.sp());
        EXPECT(0x7213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 03BC
        gbc.setState(0x60dc, 0xc7e7, 0x21d0, 0x3b26, 0xba81, 0x1822, 0x1, 0x0);
        gbc.writeMem(0x60dc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc7e7, gbc.sp());
        EXPECT(0x60de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 03BD
        gbc.setState(0x1b04, 0x95a6, 0x5580, 0x3169, 0x203a, 0xaae4, 0x1, 0x1);
        gbc.writeMem(0x1b04, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x95a6, gbc.sp());
        EXPECT(0x1b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 03BF
        gbc.setState(0x2546, 0xc207, 0x4160, 0xef82, 0xe36f, 0x569e, 0x0, 0x1);
        gbc.writeMem(0x2546, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc207, gbc.sp());
        EXPECT(0x2548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 03C0
        gbc.setState(0xdf92, 0x98ac, 0x2bf0, 0x215e, 0x12cf, 0x8ecd, 0x0, 0x1);
        gbc.writeMem(0xdf92, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x98ac, gbc.sp());
        EXPECT(0xdf94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf92));
        EXPECT(0x9c, gbc.readMem(0xdf93));
        // CB 9C 03C1
        gbc.setState(0x9838, 0x11d4, 0xadb0, 0xebc8, 0xda, 0xd635, 0x1, 0x0);
        gbc.writeMem(0x9838, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x11d4, gbc.sp());
        EXPECT(0x983a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9838));
        EXPECT(0x9c, gbc.readMem(0x9839));
        // CB 9C 03C2
        gbc.setState(0xc821, 0xa79f, 0x64a0, 0xf59e, 0x591, 0x79c7, 0x1, 0x1);
        gbc.writeMem(0xc821, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa79f, gbc.sp());
        EXPECT(0xc823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc821));
        EXPECT(0x9c, gbc.readMem(0xc822));
        // CB 9C 03C3
        gbc.setState(0xa798, 0xd674, 0xe1c0, 0xa5e6, 0x56a1, 0x398e, 0x0, 0x1);
        gbc.writeMem(0xa798, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd674, gbc.sp());
        EXPECT(0xa79a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa798));
        EXPECT(0x9c, gbc.readMem(0xa799));
        // CB 9C 03C4
        gbc.setState(0x26c7, 0x3a22, 0xe650, 0xc9b1, 0xc7c4, 0xe6fc, 0x1, 0x0);
        gbc.writeMem(0x26c7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3a22, gbc.sp());
        EXPECT(0x26c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 03C5
        gbc.setState(0x8429, 0x6e5, 0xc4c0, 0x4fe2, 0x4af9, 0xbdc2, 0x0, 0x1);
        gbc.writeMem(0x8429, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6e5, gbc.sp());
        EXPECT(0x842b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8429));
        EXPECT(0x9c, gbc.readMem(0x842a));
        // CB 9C 03C6
        gbc.setState(0xab6f, 0xcb6c, 0xfb60, 0x6a99, 0xda70, 0xc69d, 0x1, 0x0);
        gbc.writeMem(0xab6f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xcb6c, gbc.sp());
        EXPECT(0xab71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab6f));
        EXPECT(0x9c, gbc.readMem(0xab70));
        // CB 9C 03C7
        gbc.setState(0x32a4, 0xc9d5, 0x21a0, 0xda53, 0x4543, 0x2cd9, 0x1, 0x0);
        gbc.writeMem(0x32a4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc9d5, gbc.sp());
        EXPECT(0x32a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 03C8
        gbc.setState(0x783, 0x9661, 0x6930, 0xf8c6, 0x1ec, 0x4b8a, 0x1, 0x1);
        gbc.writeMem(0x783, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9661, gbc.sp());
        EXPECT(0x785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 03C9
        gbc.setState(0x9ef3, 0x3f54, 0xdc90, 0x95e3, 0xdd3f, 0xad7a, 0x0, 0x1);
        gbc.writeMem(0x9ef3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3f54, gbc.sp());
        EXPECT(0x9ef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ef3));
        EXPECT(0x9c, gbc.readMem(0x9ef4));
        // CB 9C 03CA
        gbc.setState(0x525a, 0x65f4, 0x1a70, 0xc8c7, 0xe6b0, 0xd729, 0x0, 0x1);
        gbc.writeMem(0x525a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x65f4, gbc.sp());
        EXPECT(0x525c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 03CB
        gbc.setState(0x250d, 0x3f74, 0xb4e0, 0xf4ee, 0x2040, 0xd515, 0x0, 0x1);
        gbc.writeMem(0x250d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3f74, gbc.sp());
        EXPECT(0x250f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 03CC
        gbc.setState(0x7978, 0x37c7, 0x5040, 0x9e7b, 0x6fbe, 0xf857, 0x0, 0x1);
        gbc.writeMem(0x7978, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x37c7, gbc.sp());
        EXPECT(0x797a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 03CD
        gbc.setState(0x6b75, 0xfa8, 0xba60, 0x252f, 0x9d00, 0xa567, 0x1, 0x0);
        gbc.writeMem(0x6b75, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xfa8, gbc.sp());
        EXPECT(0x6b77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 03CE
        gbc.setState(0x70d0, 0x584a, 0x690, 0x58cf, 0x5e8c, 0xad66, 0x1, 0x0);
        gbc.writeMem(0x70d0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x584a, gbc.sp());
        EXPECT(0x70d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 03CF
        gbc.setState(0x2f2c, 0xc4d9, 0xb00, 0xccb3, 0xbf51, 0xee32, 0x0, 0x1);
        gbc.writeMem(0x2f2c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc4d9, gbc.sp());
        EXPECT(0x2f2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 03D0
        gbc.setState(0x86e0, 0x3571, 0x8870, 0xf20, 0xa3f6, 0x5e11, 0x0, 0x1);
        gbc.writeMem(0x86e0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3571, gbc.sp());
        EXPECT(0x86e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86e0));
        EXPECT(0x9c, gbc.readMem(0x86e1));
        // CB 9C 03D1
        gbc.setState(0xa381, 0xae01, 0x6030, 0x67cb, 0xbf24, 0x5363, 0x1, 0x0);
        gbc.writeMem(0xa381, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xae01, gbc.sp());
        EXPECT(0xa383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa381));
        EXPECT(0x9c, gbc.readMem(0xa382));
        // CB 9C 03D2
        gbc.setState(0x2f8d, 0xe118, 0x2d20, 0x52ad, 0x2499, 0x458b, 0x1, 0x1);
        gbc.writeMem(0x2f8d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe118, gbc.sp());
        EXPECT(0x2f8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 03D3
        gbc.setState(0x149b, 0xe414, 0xe880, 0xce70, 0xd88e, 0x969e, 0x1, 0x1);
        gbc.writeMem(0x149b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe414, gbc.sp());
        EXPECT(0x149d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 03D4
        gbc.setState(0x7658, 0x215c, 0x7a00, 0x4685, 0x8c17, 0x923e, 0x1, 0x0);
        gbc.writeMem(0x7658, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x215c, gbc.sp());
        EXPECT(0x765a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 03D5
        gbc.setState(0x245a, 0x4fa9, 0xcc20, 0xadaf, 0x9356, 0xf23c, 0x1, 0x1);
        gbc.writeMem(0x245a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4fa9, gbc.sp());
        EXPECT(0x245c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 03D6
        gbc.setState(0xd3b0, 0xeea7, 0xb6c0, 0x7d8f, 0x1ab8, 0x50b7, 0x0, 0x0);
        gbc.writeMem(0xd3b0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xeea7, gbc.sp());
        EXPECT(0xd3b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3b0));
        EXPECT(0x9c, gbc.readMem(0xd3b1));
        // CB 9C 03D7
        gbc.setState(0xcf3, 0x8fb3, 0x8520, 0x5301, 0xe221, 0xffbc, 0x1, 0x1);
        gbc.writeMem(0xcf3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8fb3, gbc.sp());
        EXPECT(0xcf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 03D8
        gbc.setState(0x334e, 0xaab6, 0x20e0, 0xdd75, 0x81db, 0xf8be, 0x1, 0x1);
        gbc.writeMem(0x334e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xaab6, gbc.sp());
        EXPECT(0x3350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 03D9
        gbc.setState(0xce83, 0x32ee, 0x2fe0, 0x73d6, 0xb252, 0xb59, 0x1, 0x0);
        gbc.writeMem(0xce83, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x32ee, gbc.sp());
        EXPECT(0xce85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce83));
        EXPECT(0x9c, gbc.readMem(0xce84));
        // CB 9C 03DA
        gbc.setState(0x8e7d, 0x227, 0x770, 0x9d41, 0x6c7f, 0xa661, 0x1, 0x1);
        gbc.writeMem(0x8e7d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x227, gbc.sp());
        EXPECT(0x8e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e7d));
        EXPECT(0x9c, gbc.readMem(0x8e7e));
        // CB 9C 03DB
        gbc.setState(0x19d6, 0x99da, 0xbe60, 0x9679, 0xf51c, 0x9d2, 0x1, 0x1);
        gbc.writeMem(0x19d6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x99da, gbc.sp());
        EXPECT(0x19d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 03DC
        gbc.setState(0x2302, 0x2d65, 0x8130, 0xd2a, 0x1f96, 0xbfd9, 0x0, 0x1);
        gbc.writeMem(0x2302, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2d65, gbc.sp());
        EXPECT(0x2304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 03DD
        gbc.setState(0x41ea, 0x4f75, 0x8340, 0x8945, 0x394e, 0x8dce, 0x0, 0x0);
        gbc.writeMem(0x41ea, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4f75, gbc.sp());
        EXPECT(0x41ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 03DE
        gbc.setState(0xbe24, 0x5b2d, 0xa170, 0x927b, 0xbc33, 0x1094, 0x0, 0x0);
        gbc.writeMem(0xbe24, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5b2d, gbc.sp());
        EXPECT(0xbe26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe24));
        EXPECT(0x9c, gbc.readMem(0xbe25));
        // CB 9C 03DF
        gbc.setState(0xd866, 0x8d3, 0xe600, 0x5cb2, 0x1b29, 0x416e, 0x0, 0x1);
        gbc.writeMem(0xd866, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8d3, gbc.sp());
        EXPECT(0xd868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd866));
        EXPECT(0x9c, gbc.readMem(0xd867));
        // CB 9C 03E0
        gbc.setState(0x5c5f, 0x2a9f, 0x590, 0x6184, 0x602c, 0xe6ac, 0x1, 0x1);
        gbc.writeMem(0x5c5f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2a9f, gbc.sp());
        EXPECT(0x5c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 03E1
        gbc.setState(0x9152, 0xa3f6, 0x8520, 0x532f, 0xb11f, 0xf42e, 0x1, 0x1);
        gbc.writeMem(0x9152, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa3f6, gbc.sp());
        EXPECT(0x9154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9152));
        EXPECT(0x9c, gbc.readMem(0x9153));
        // CB 9C 03E2
        gbc.setState(0x1f12, 0xb962, 0x3650, 0xa81d, 0xce47, 0x8308, 0x1, 0x0);
        gbc.writeMem(0x1f12, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb962, gbc.sp());
        EXPECT(0x1f14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 03E3
        gbc.setState(0x32be, 0x9d89, 0x9280, 0x1a60, 0x76a4, 0x3424, 0x0, 0x0);
        gbc.writeMem(0x32be, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9d89, gbc.sp());
        EXPECT(0x32c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 03E4
        gbc.setState(0x6177, 0x3579, 0xdc30, 0xc0d, 0xa69a, 0x2fc3, 0x0, 0x0);
        gbc.writeMem(0x6177, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3579, gbc.sp());
        EXPECT(0x6179, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9C 03E5
        gbc.setState(0x23a9, 0xdd53, 0x90a0, 0x832, 0xc85c, 0xeec5, 0x1, 0x0);
        gbc.writeMem(0x23a9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xdd53, gbc.sp());
        EXPECT(0x23ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9C 03E6
        gbc.setState(0xabe6, 0x157, 0x2c40, 0xc9ff, 0xc0a7, 0x1563, 0x1, 0x1);
        gbc.writeMem(0xabe6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x157, gbc.sp());
        EXPECT(0xabe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabe6));
        EXPECT(0x9c, gbc.readMem(0xabe7));
        // CB 9C 03E7
        gbc.setState(0x2617, 0x6e0c, 0x4310, 0x5d5e, 0x55ad, 0xb079, 0x1, 0x0);
        gbc.writeMem(0x2617, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6e0c, gbc.sp());
        EXPECT(0x2619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
