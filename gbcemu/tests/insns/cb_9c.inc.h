    TEST(gbcemu, opcode_cb_9c) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 9C 0000
        gbc.setState(0x1a2a, 0x6844, 0xd8a0, 0x90d, 0x5bc2, 0x7f10, 0x0, 0x1);
        gbc.writeMem(0x1a2a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6844);
        EXPECT(gbc.pc(), 0x1a2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0001
        gbc.setState(0xc5ac, 0x1d87, 0x5820, 0x6873, 0x9882, 0x75fa, 0x0, 0x0);
        gbc.writeMem(0xc5ac, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x1d87);
        EXPECT(gbc.pc(), 0xc5ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ac), 0xcb);
        EXPECT(gbc.readMem(0xc5ad), 0x9c);
        // CB 9C 0002
        gbc.setState(0xea80, 0x48bb, 0x4bc0, 0xac73, 0xaa2, 0xae2c, 0x1, 0x1);
        gbc.writeMem(0xea80, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x48bb);
        EXPECT(gbc.pc(), 0xea82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea80), 0xcb);
        EXPECT(gbc.readMem(0xea81), 0x9c);
        // CB 9C 0003
        gbc.setState(0x5e22, 0x71c8, 0xc9d0, 0x3b87, 0x41f4, 0x75d9, 0x0, 0x0);
        gbc.writeMem(0x5e22, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x71c8);
        EXPECT(gbc.pc(), 0x5e24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0004
        gbc.setState(0x37f9, 0x10c1, 0xe80, 0x7fab, 0x99b6, 0x1bd9, 0x0, 0x0);
        gbc.writeMem(0x37f9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x10c1);
        EXPECT(gbc.pc(), 0x37fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0005
        gbc.setState(0xbf7, 0xd6dc, 0xe2d0, 0x9b71, 0x67de, 0x513c, 0x1, 0x1);
        gbc.writeMem(0xbf7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd6dc);
        EXPECT(gbc.pc(), 0xbf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0006
        gbc.setState(0x742f, 0x3acb, 0x1d0, 0xea49, 0x2ee9, 0x5433, 0x1, 0x1);
        gbc.writeMem(0x742f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3acb);
        EXPECT(gbc.pc(), 0x7431);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0007
        gbc.setState(0x913d, 0x341e, 0xdff0, 0x10ab, 0x6721, 0x2a25, 0x0, 0x1);
        gbc.writeMem(0x913d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x341e);
        EXPECT(gbc.pc(), 0x913f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x913d), 0xcb);
        EXPECT(gbc.readMem(0x913e), 0x9c);
        // CB 9C 0008
        gbc.setState(0xc35e, 0xe285, 0xbb90, 0xe496, 0xe23e, 0x9124, 0x1, 0x0);
        gbc.writeMem(0xc35e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xe285);
        EXPECT(gbc.pc(), 0xc360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc35e), 0xcb);
        EXPECT(gbc.readMem(0xc35f), 0x9c);
        // CB 9C 0009
        gbc.setState(0xa54e, 0x2ac0, 0x2140, 0xe3c6, 0xe4f6, 0x8400, 0x0, 0x1);
        gbc.writeMem(0xa54e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x2ac0);
        EXPECT(gbc.pc(), 0xa550);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa54e), 0xcb);
        EXPECT(gbc.readMem(0xa54f), 0x9c);
        // CB 9C 000A
        gbc.setState(0x4d83, 0x6fc, 0x93e0, 0xf897, 0x6813, 0xe5ee, 0x1, 0x1);
        gbc.writeMem(0x4d83, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x6fc);
        EXPECT(gbc.pc(), 0x4d85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 000B
        gbc.setState(0x221a, 0x5f25, 0xe560, 0x937f, 0x6177, 0x18a, 0x0, 0x0);
        gbc.writeMem(0x221a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5f25);
        EXPECT(gbc.pc(), 0x221c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 000C
        gbc.setState(0xa867, 0xf2c1, 0x35d0, 0x4b12, 0x933b, 0x4e9a, 0x1, 0x0);
        gbc.writeMem(0xa867, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf2c1);
        EXPECT(gbc.pc(), 0xa869);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa867), 0xcb);
        EXPECT(gbc.readMem(0xa868), 0x9c);
        // CB 9C 000D
        gbc.setState(0x4e52, 0x6dd3, 0xf3f0, 0x5996, 0xd415, 0x5d3a, 0x0, 0x0);
        gbc.writeMem(0x4e52, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6dd3);
        EXPECT(gbc.pc(), 0x4e54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 000E
        gbc.setState(0x8217, 0xf05c, 0xf200, 0x4166, 0xe81c, 0xc13a, 0x0, 0x1);
        gbc.writeMem(0x8217, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf05c);
        EXPECT(gbc.pc(), 0x8219);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8217), 0xcb);
        EXPECT(gbc.readMem(0x8218), 0x9c);
        // CB 9C 000F
        gbc.setState(0x763d, 0xe009, 0xb320, 0x2de3, 0xf013, 0x8ffa, 0x1, 0x1);
        gbc.writeMem(0x763d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xe009);
        EXPECT(gbc.pc(), 0x763f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0010
        gbc.setState(0x4318, 0xa66, 0xf400, 0x9385, 0x1612, 0xb8f3, 0x1, 0x0);
        gbc.writeMem(0x4318, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa66);
        EXPECT(gbc.pc(), 0x431a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0011
        gbc.setState(0x283a, 0x2914, 0xa6f0, 0xe73b, 0xae29, 0x4d03, 0x0, 0x0);
        gbc.writeMem(0x283a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2914);
        EXPECT(gbc.pc(), 0x283c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0012
        gbc.setState(0xb120, 0xf6f9, 0x4cc0, 0x4f1d, 0xefa8, 0xf2ea, 0x1, 0x0);
        gbc.writeMem(0xb120, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xf6f9);
        EXPECT(gbc.pc(), 0xb122);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb120), 0xcb);
        EXPECT(gbc.readMem(0xb121), 0x9c);
        // CB 9C 0013
        gbc.setState(0xcb6b, 0xe95e, 0x11a0, 0xa7ed, 0xc3ac, 0xdc96, 0x1, 0x0);
        gbc.writeMem(0xcb6b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe95e);
        EXPECT(gbc.pc(), 0xcb6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb6b), 0xcb);
        EXPECT(gbc.readMem(0xcb6c), 0x9c);
        // CB 9C 0014
        gbc.setState(0x7c24, 0x8a31, 0x8200, 0x32ee, 0x309a, 0xacc5, 0x0, 0x1);
        gbc.writeMem(0x7c24, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8a31);
        EXPECT(gbc.pc(), 0x7c26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0015
        gbc.setState(0x6c37, 0x4226, 0x7be0, 0xe73b, 0x451b, 0xfff, 0x0, 0x1);
        gbc.writeMem(0x6c37, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x4226);
        EXPECT(gbc.pc(), 0x6c39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0016
        gbc.setState(0x13f, 0xfa58, 0xcb40, 0xa7aa, 0x6bcc, 0x38e7, 0x0, 0x1);
        gbc.writeMem(0x13f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xfa58);
        EXPECT(gbc.pc(), 0x141);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0017
        gbc.setState(0xd9f5, 0xa12f, 0x66c0, 0x70cf, 0x2d1b, 0xcb29, 0x1, 0x1);
        gbc.writeMem(0xd9f5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xa12f);
        EXPECT(gbc.pc(), 0xd9f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9f5), 0xcb);
        EXPECT(gbc.readMem(0xd9f6), 0x9c);
        // CB 9C 0018
        gbc.setState(0x18d9, 0xeaa, 0x5840, 0x3fab, 0x17d0, 0x2d81, 0x0, 0x0);
        gbc.writeMem(0x18d9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xeaa);
        EXPECT(gbc.pc(), 0x18db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0019
        gbc.setState(0x3651, 0xee0d, 0x3f00, 0x1a08, 0xb67c, 0x6f71, 0x1, 0x1);
        gbc.writeMem(0x3651, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xee0d);
        EXPECT(gbc.pc(), 0x3653);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 001A
        gbc.setState(0xe4a9, 0x90c2, 0xd2a0, 0x8ea6, 0x4ff2, 0xb83a, 0x0, 0x1);
        gbc.writeMem(0xe4a9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x90c2);
        EXPECT(gbc.pc(), 0xe4ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4a9), 0xcb);
        EXPECT(gbc.readMem(0xe4aa), 0x9c);
        // CB 9C 001B
        gbc.setState(0xab14, 0x6c0c, 0x74f0, 0x3457, 0x71ec, 0x1939, 0x1, 0x1);
        gbc.writeMem(0xab14, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x6c0c);
        EXPECT(gbc.pc(), 0xab16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab14), 0xcb);
        EXPECT(gbc.readMem(0xab15), 0x9c);
        // CB 9C 001C
        gbc.setState(0x5e5a, 0xa708, 0x55d0, 0x8f5f, 0xdca7, 0x5ed7, 0x1, 0x1);
        gbc.writeMem(0x5e5a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa708);
        EXPECT(gbc.pc(), 0x5e5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 001D
        gbc.setState(0xa604, 0x5402, 0x3a40, 0xcf79, 0x8e31, 0xaf2d, 0x0, 0x1);
        gbc.writeMem(0xa604, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5402);
        EXPECT(gbc.pc(), 0xa606);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa604), 0xcb);
        EXPECT(gbc.readMem(0xa605), 0x9c);
        // CB 9C 001E
        gbc.setState(0xd89e, 0x489, 0xfa80, 0x3ce2, 0x8e63, 0xd5d5, 0x0, 0x0);
        gbc.writeMem(0xd89e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x489);
        EXPECT(gbc.pc(), 0xd8a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd89e), 0xcb);
        EXPECT(gbc.readMem(0xd89f), 0x9c);
        // CB 9C 001F
        gbc.setState(0xcbe, 0x314c, 0xa660, 0x3218, 0xe924, 0xc7c8, 0x1, 0x1);
        gbc.writeMem(0xcbe, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x314c);
        EXPECT(gbc.pc(), 0xcc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0020
        gbc.setState(0xcfcc, 0x8934, 0x57c0, 0xb292, 0xa2af, 0xb5a6, 0x1, 0x0);
        gbc.writeMem(0xcfcc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x8934);
        EXPECT(gbc.pc(), 0xcfce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfcc), 0xcb);
        EXPECT(gbc.readMem(0xcfcd), 0x9c);
        // CB 9C 0021
        gbc.setState(0x1237, 0xfd02, 0xcdf0, 0x9587, 0x309e, 0x9960, 0x1, 0x1);
        gbc.writeMem(0x1237, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xfd02);
        EXPECT(gbc.pc(), 0x1239);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0023
        gbc.setState(0x2156, 0x2664, 0x3ce0, 0xee05, 0xf86e, 0x7bc0, 0x0, 0x0);
        gbc.writeMem(0x2156, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x2664);
        EXPECT(gbc.pc(), 0x2158);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0025
        gbc.setState(0x51f, 0xb3c7, 0x3ec0, 0x534b, 0x244c, 0xddb9, 0x0, 0x1);
        gbc.writeMem(0x51f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb3c7);
        EXPECT(gbc.pc(), 0x521);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0026
        gbc.setState(0xdfd4, 0xa6b0, 0x53f0, 0xe2d2, 0xc6f2, 0x408c, 0x0, 0x1);
        gbc.writeMem(0xdfd4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xa6b0);
        EXPECT(gbc.pc(), 0xdfd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfd4), 0xcb);
        EXPECT(gbc.readMem(0xdfd5), 0x9c);
        // CB 9C 0027
        gbc.setState(0xe865, 0xee06, 0x5f80, 0x9211, 0xa4b7, 0x46d8, 0x1, 0x1);
        gbc.writeMem(0xe865, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xee06);
        EXPECT(gbc.pc(), 0xe867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe865), 0xcb);
        EXPECT(gbc.readMem(0xe866), 0x9c);
        // CB 9C 0028
        gbc.setState(0x5e0d, 0x9f4d, 0x5fe0, 0x1211, 0x973b, 0x2218, 0x1, 0x0);
        gbc.writeMem(0x5e0d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9f4d);
        EXPECT(gbc.pc(), 0x5e0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0029
        gbc.setState(0x90cd, 0x89bc, 0x7310, 0xe7a0, 0x7704, 0x5ff1, 0x1, 0x0);
        gbc.writeMem(0x90cd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x89bc);
        EXPECT(gbc.pc(), 0x90cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90cd), 0xcb);
        EXPECT(gbc.readMem(0x90ce), 0x9c);
        // CB 9C 002A
        gbc.setState(0xc2de, 0x2c13, 0x4370, 0xfe91, 0xe30a, 0x9457, 0x1, 0x0);
        gbc.writeMem(0xc2de, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x2c13);
        EXPECT(gbc.pc(), 0xc2e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2de), 0xcb);
        EXPECT(gbc.readMem(0xc2df), 0x9c);
        // CB 9C 002B
        gbc.setState(0x285c, 0xeb8d, 0x61e0, 0xe168, 0x3d1, 0x6cd3, 0x1, 0x0);
        gbc.writeMem(0x285c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xeb8d);
        EXPECT(gbc.pc(), 0x285e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 002C
        gbc.setState(0x4af3, 0xb150, 0xe060, 0x2e73, 0x6e01, 0xc40d, 0x0, 0x0);
        gbc.writeMem(0x4af3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xb150);
        EXPECT(gbc.pc(), 0x4af5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 002D
        gbc.setState(0x876d, 0x6218, 0x2120, 0x3973, 0x95f7, 0x5b47, 0x1, 0x1);
        gbc.writeMem(0x876d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x6218);
        EXPECT(gbc.pc(), 0x876f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x876d), 0xcb);
        EXPECT(gbc.readMem(0x876e), 0x9c);
        // CB 9C 002E
        gbc.setState(0x24dc, 0x76e4, 0x6730, 0xd4a6, 0x586b, 0x9ba2, 0x0, 0x0);
        gbc.writeMem(0x24dc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x76e4);
        EXPECT(gbc.pc(), 0x24de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 002F
        gbc.setState(0xd9d3, 0xa05e, 0x9d80, 0xfb4a, 0xa08c, 0x7842, 0x0, 0x1);
        gbc.writeMem(0xd9d3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xa05e);
        EXPECT(gbc.pc(), 0xd9d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9d3), 0xcb);
        EXPECT(gbc.readMem(0xd9d4), 0x9c);
        // CB 9C 0030
        gbc.setState(0xd6fd, 0x1b1f, 0x3290, 0x4a91, 0x195c, 0x3428, 0x0, 0x0);
        gbc.writeMem(0xd6fd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x1b1f);
        EXPECT(gbc.pc(), 0xd6ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6fd), 0xcb);
        EXPECT(gbc.readMem(0xd6fe), 0x9c);
        // CB 9C 0031
        gbc.setState(0xa90c, 0x5a1d, 0x4c00, 0x1886, 0xa325, 0x51a5, 0x0, 0x1);
        gbc.writeMem(0xa90c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5a1d);
        EXPECT(gbc.pc(), 0xa90e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa90c), 0xcb);
        EXPECT(gbc.readMem(0xa90d), 0x9c);
        // CB 9C 0032
        gbc.setState(0xbc4a, 0xc9ab, 0x2a40, 0xc17e, 0x8f58, 0x8107, 0x1, 0x0);
        gbc.writeMem(0xbc4a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc9ab);
        EXPECT(gbc.pc(), 0xbc4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc4a), 0xcb);
        EXPECT(gbc.readMem(0xbc4b), 0x9c);
        // CB 9C 0033
        gbc.setState(0xe73a, 0x8861, 0x5570, 0xfe0c, 0x31d6, 0xaad, 0x1, 0x1);
        gbc.writeMem(0xe73a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8861);
        EXPECT(gbc.pc(), 0xe73c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe73a), 0xcb);
        EXPECT(gbc.readMem(0xe73b), 0x9c);
        // CB 9C 0034
        gbc.setState(0xc444, 0x946f, 0x8540, 0xf125, 0x952a, 0xe9e4, 0x1, 0x1);
        gbc.writeMem(0xc444, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x946f);
        EXPECT(gbc.pc(), 0xc446);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc444), 0xcb);
        EXPECT(gbc.readMem(0xc445), 0x9c);
        // CB 9C 0035
        gbc.setState(0x68b9, 0xf09, 0x8eb0, 0x6354, 0xf8ef, 0xcb93, 0x1, 0x1);
        gbc.writeMem(0x68b9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf09);
        EXPECT(gbc.pc(), 0x68bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0036
        gbc.setState(0x331b, 0x8973, 0x3420, 0xaae1, 0x47c, 0x92ed, 0x1, 0x1);
        gbc.writeMem(0x331b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x8973);
        EXPECT(gbc.pc(), 0x331d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0039
        gbc.setState(0x9c3d, 0x56cb, 0xb960, 0xa4a4, 0xa72d, 0x304c, 0x1, 0x1);
        gbc.writeMem(0x9c3d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x56cb);
        EXPECT(gbc.pc(), 0x9c3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c3d), 0xcb);
        EXPECT(gbc.readMem(0x9c3e), 0x9c);
        // CB 9C 003A
        gbc.setState(0x1c15, 0x417d, 0x5a00, 0x9244, 0x9fd6, 0xacbb, 0x1, 0x0);
        gbc.writeMem(0x1c15, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x417d);
        EXPECT(gbc.pc(), 0x1c17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 003B
        gbc.setState(0x11b3, 0x7241, 0xa340, 0x1f67, 0xfe00, 0x5e48, 0x1, 0x1);
        gbc.writeMem(0x11b3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7241);
        EXPECT(gbc.pc(), 0x11b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 003C
        gbc.setState(0xbe7f, 0x8ffa, 0x4a50, 0x39a3, 0x6e66, 0x1518, 0x1, 0x1);
        gbc.writeMem(0xbe7f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8ffa);
        EXPECT(gbc.pc(), 0xbe81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe7f), 0xcb);
        EXPECT(gbc.readMem(0xbe80), 0x9c);
        // CB 9C 003E
        gbc.setState(0x2526, 0x43ac, 0x850, 0xb031, 0x1217, 0xd403, 0x1, 0x0);
        gbc.writeMem(0x2526, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x43ac);
        EXPECT(gbc.pc(), 0x2528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 003F
        gbc.setState(0xab9e, 0xfad9, 0xe880, 0xd3c1, 0x47fe, 0xb411, 0x1, 0x0);
        gbc.writeMem(0xab9e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xfad9);
        EXPECT(gbc.pc(), 0xaba0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab9e), 0xcb);
        EXPECT(gbc.readMem(0xab9f), 0x9c);
        // CB 9C 0040
        gbc.setState(0xd8b2, 0x8eaa, 0x3860, 0x4192, 0x4d5b, 0xf198, 0x0, 0x1);
        gbc.writeMem(0xd8b2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x8eaa);
        EXPECT(gbc.pc(), 0xd8b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8b2), 0xcb);
        EXPECT(gbc.readMem(0xd8b3), 0x9c);
        // CB 9C 0041
        gbc.setState(0xe58a, 0x7a0c, 0x7fb0, 0x7d1f, 0xdfbb, 0xfbd1, 0x1, 0x0);
        gbc.writeMem(0xe58a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x7a0c);
        EXPECT(gbc.pc(), 0xe58c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe58a), 0xcb);
        EXPECT(gbc.readMem(0xe58b), 0x9c);
        // CB 9C 0042
        gbc.setState(0xc43b, 0xf5ef, 0xeb30, 0x91d8, 0x6392, 0x4a96, 0x1, 0x0);
        gbc.writeMem(0xc43b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf5ef);
        EXPECT(gbc.pc(), 0xc43d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc43b), 0xcb);
        EXPECT(gbc.readMem(0xc43c), 0x9c);
        // CB 9C 0043
        gbc.setState(0x4a99, 0x836, 0xa0e0, 0xfa9, 0xa758, 0x58f, 0x0, 0x1);
        gbc.writeMem(0x4a99, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x836);
        EXPECT(gbc.pc(), 0x4a9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0044
        gbc.setState(0xe51a, 0xb06a, 0x4d30, 0x801c, 0x1c19, 0x11ee, 0x0, 0x1);
        gbc.writeMem(0xe51a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xb06a);
        EXPECT(gbc.pc(), 0xe51c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe51a), 0xcb);
        EXPECT(gbc.readMem(0xe51b), 0x9c);
        // CB 9C 0045
        gbc.setState(0xb414, 0x336d, 0xf9d0, 0x6e68, 0xdef, 0xc04e, 0x0, 0x0);
        gbc.writeMem(0xb414, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x336d);
        EXPECT(gbc.pc(), 0xb416);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb414), 0xcb);
        EXPECT(gbc.readMem(0xb415), 0x9c);
        // CB 9C 0046
        gbc.setState(0x746b, 0x2758, 0xdff0, 0x2a84, 0xbf07, 0xff67, 0x0, 0x0);
        gbc.writeMem(0x746b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2758);
        EXPECT(gbc.pc(), 0x746d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0048
        gbc.setState(0x3b3d, 0x623c, 0x9770, 0xecba, 0xc650, 0x8248, 0x1, 0x0);
        gbc.writeMem(0x3b3d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x623c);
        EXPECT(gbc.pc(), 0x3b3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0049
        gbc.setState(0xd7ed, 0x590e, 0x4b70, 0x48d3, 0xbfed, 0x2eb7, 0x0, 0x0);
        gbc.writeMem(0xd7ed, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x590e);
        EXPECT(gbc.pc(), 0xd7ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7ed), 0xcb);
        EXPECT(gbc.readMem(0xd7ee), 0x9c);
        // CB 9C 004A
        gbc.setState(0x7908, 0xdb56, 0xfe40, 0x1fc1, 0x2887, 0x6630, 0x1, 0x1);
        gbc.writeMem(0x7908, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xdb56);
        EXPECT(gbc.pc(), 0x790a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 004B
        gbc.setState(0x8af6, 0x8661, 0xc340, 0x8feb, 0x1e58, 0x4b27, 0x1, 0x0);
        gbc.writeMem(0x8af6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8661);
        EXPECT(gbc.pc(), 0x8af8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8af6), 0xcb);
        EXPECT(gbc.readMem(0x8af7), 0x9c);
        // CB 9C 004C
        gbc.setState(0xed77, 0xdbf9, 0x2820, 0x8c82, 0x896, 0x93c4, 0x0, 0x1);
        gbc.writeMem(0xed77, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xdbf9);
        EXPECT(gbc.pc(), 0xed79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed77), 0xcb);
        EXPECT(gbc.readMem(0xed78), 0x9c);
        // CB 9C 004D
        gbc.setState(0x786d, 0xb9e3, 0x31c0, 0x8fd1, 0x2d71, 0x657c, 0x1, 0x0);
        gbc.writeMem(0x786d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb9e3);
        EXPECT(gbc.pc(), 0x786f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 004E
        gbc.setState(0x3ba2, 0x33b, 0x2380, 0x5edd, 0xccfe, 0x4ab4, 0x0, 0x1);
        gbc.writeMem(0x3ba2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x33b);
        EXPECT(gbc.pc(), 0x3ba4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 004F
        gbc.setState(0x4242, 0xc572, 0xcec0, 0x7ac2, 0xe13f, 0xe884, 0x0, 0x0);
        gbc.writeMem(0x4242, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc572);
        EXPECT(gbc.pc(), 0x4244);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0050
        gbc.setState(0xde0c, 0x9083, 0x44e0, 0xa726, 0x511e, 0x217f, 0x0, 0x1);
        gbc.writeMem(0xde0c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x9083);
        EXPECT(gbc.pc(), 0xde0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde0c), 0xcb);
        EXPECT(gbc.readMem(0xde0d), 0x9c);
        // CB 9C 0051
        gbc.setState(0x2cd4, 0x5551, 0xc70, 0xe691, 0x2156, 0xf6a0, 0x1, 0x0);
        gbc.writeMem(0x2cd4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5551);
        EXPECT(gbc.pc(), 0x2cd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0052
        gbc.setState(0x509e, 0x2540, 0x1270, 0x2edc, 0xfd7f, 0xdc11, 0x1, 0x0);
        gbc.writeMem(0x509e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2540);
        EXPECT(gbc.pc(), 0x50a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0053
        gbc.setState(0x95f5, 0xf987, 0x60f0, 0x47a4, 0xe145, 0xfe66, 0x0, 0x1);
        gbc.writeMem(0x95f5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf987);
        EXPECT(gbc.pc(), 0x95f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95f5), 0xcb);
        EXPECT(gbc.readMem(0x95f6), 0x9c);
        // CB 9C 0054
        gbc.setState(0x9aa4, 0xff1e, 0x1670, 0x54ef, 0xddd0, 0xd160, 0x1, 0x1);
        gbc.writeMem(0x9aa4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xff1e);
        EXPECT(gbc.pc(), 0x9aa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aa4), 0xcb);
        EXPECT(gbc.readMem(0x9aa5), 0x9c);
        // CB 9C 0055
        gbc.setState(0x5e6, 0xf7dd, 0xc3b0, 0x485d, 0xc892, 0xf8fc, 0x1, 0x0);
        gbc.writeMem(0x5e6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xf7dd);
        EXPECT(gbc.pc(), 0x5e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0056
        gbc.setState(0x5eef, 0x5ba4, 0x5d80, 0xd5cb, 0x9550, 0x9fb1, 0x0, 0x1);
        gbc.writeMem(0x5eef, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5ba4);
        EXPECT(gbc.pc(), 0x5ef1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0057
        gbc.setState(0x4d1d, 0x3f4a, 0x6140, 0x85c1, 0x6775, 0xd348, 0x0, 0x0);
        gbc.writeMem(0x4d1d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x3f4a);
        EXPECT(gbc.pc(), 0x4d1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0058
        gbc.setState(0x7f57, 0x21b3, 0x4bc0, 0xe491, 0xb112, 0x111d, 0x1, 0x1);
        gbc.writeMem(0x7f57, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x21b3);
        EXPECT(gbc.pc(), 0x7f59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0059
        gbc.setState(0x7c, 0x4a3, 0x7780, 0xba0f, 0x5be6, 0x2dd6, 0x1, 0x1);
        gbc.writeMem(0x7c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4a3);
        EXPECT(gbc.pc(), 0x7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 005A
        gbc.setState(0x4ceb, 0x508e, 0x3730, 0x9065, 0x53a8, 0xb828, 0x0, 0x1);
        gbc.writeMem(0x4ceb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x508e);
        EXPECT(gbc.pc(), 0x4ced);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 005B
        gbc.setState(0x5c82, 0xb62e, 0x2a30, 0x454f, 0x84a, 0xeccf, 0x0, 0x1);
        gbc.writeMem(0x5c82, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb62e);
        EXPECT(gbc.pc(), 0x5c84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 005C
        gbc.setState(0xbca9, 0x9354, 0x2430, 0x17fb, 0xe249, 0x3c29, 0x0, 0x0);
        gbc.writeMem(0xbca9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x9354);
        EXPECT(gbc.pc(), 0xbcab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbca9), 0xcb);
        EXPECT(gbc.readMem(0xbcaa), 0x9c);
        // CB 9C 005D
        gbc.setState(0x17ee, 0xd7f4, 0xb6b0, 0xf225, 0x9ec7, 0x7ff1, 0x0, 0x0);
        gbc.writeMem(0x17ee, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd7f4);
        EXPECT(gbc.pc(), 0x17f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 005E
        gbc.setState(0xc23d, 0x1805, 0x9bd0, 0x61a2, 0x29d2, 0xe023, 0x0, 0x1);
        gbc.writeMem(0xc23d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x1805);
        EXPECT(gbc.pc(), 0xc23f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc23d), 0xcb);
        EXPECT(gbc.readMem(0xc23e), 0x9c);
        // CB 9C 005F
        gbc.setState(0xc783, 0xc83b, 0xe310, 0x7fe2, 0xde53, 0xaff0, 0x0, 0x1);
        gbc.writeMem(0xc783, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc83b);
        EXPECT(gbc.pc(), 0xc785);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc783), 0xcb);
        EXPECT(gbc.readMem(0xc784), 0x9c);
        // CB 9C 0060
        gbc.setState(0xc59b, 0xd3fb, 0x8530, 0x4af9, 0xf691, 0xade3, 0x1, 0x1);
        gbc.writeMem(0xc59b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xd3fb);
        EXPECT(gbc.pc(), 0xc59d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc59b), 0xcb);
        EXPECT(gbc.readMem(0xc59c), 0x9c);
        // CB 9C 0061
        gbc.setState(0xa888, 0x5d15, 0x3110, 0x9d49, 0xe2a7, 0xc29, 0x1, 0x1);
        gbc.writeMem(0xa888, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x5d15);
        EXPECT(gbc.pc(), 0xa88a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa888), 0xcb);
        EXPECT(gbc.readMem(0xa889), 0x9c);
        // CB 9C 0062
        gbc.setState(0x26f0, 0xec0d, 0x29e0, 0xf8c7, 0x97ac, 0xab1c, 0x1, 0x0);
        gbc.writeMem(0x26f0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xec0d);
        EXPECT(gbc.pc(), 0x26f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0063
        gbc.setState(0x8a07, 0xd489, 0x1390, 0xad7d, 0xfdd9, 0x3c79, 0x1, 0x0);
        gbc.writeMem(0x8a07, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd489);
        EXPECT(gbc.pc(), 0x8a09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a07), 0xcb);
        EXPECT(gbc.readMem(0x8a08), 0x9c);
        // CB 9C 0064
        gbc.setState(0x98f0, 0xe454, 0xae70, 0x85e7, 0xb5c4, 0x8429, 0x1, 0x1);
        gbc.writeMem(0x98f0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe454);
        EXPECT(gbc.pc(), 0x98f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98f0), 0xcb);
        EXPECT(gbc.readMem(0x98f1), 0x9c);
        // CB 9C 0065
        gbc.setState(0x1ffe, 0x45d8, 0x8100, 0xe490, 0xd50d, 0xf65b, 0x0, 0x1);
        gbc.writeMem(0x1ffe, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x45d8);
        EXPECT(gbc.pc(), 0x2000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0067
        gbc.setState(0x6cdf, 0x33c8, 0xf450, 0x3a40, 0x89fb, 0x61e7, 0x0, 0x0);
        gbc.writeMem(0x6cdf, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x33c8);
        EXPECT(gbc.pc(), 0x6ce1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0068
        gbc.setState(0xc338, 0x242c, 0x65a0, 0x665f, 0xeb6b, 0xe4fe, 0x0, 0x0);
        gbc.writeMem(0xc338, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x242c);
        EXPECT(gbc.pc(), 0xc33a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc338), 0xcb);
        EXPECT(gbc.readMem(0xc339), 0x9c);
        // CB 9C 0069
        gbc.setState(0xd02, 0xe418, 0x47a0, 0x1498, 0xb298, 0xb649, 0x0, 0x1);
        gbc.writeMem(0xd02, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe418);
        EXPECT(gbc.pc(), 0xd04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 006A
        gbc.setState(0x99e6, 0x9d8, 0xe20, 0x6ab8, 0x1036, 0x6556, 0x1, 0x1);
        gbc.writeMem(0x99e6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x9d8);
        EXPECT(gbc.pc(), 0x99e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99e6), 0xcb);
        EXPECT(gbc.readMem(0x99e7), 0x9c);
        // CB 9C 006B
        gbc.setState(0x11a1, 0x4dba, 0x16e0, 0xbcd2, 0x57f0, 0x47b6, 0x1, 0x0);
        gbc.writeMem(0x11a1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x4dba);
        EXPECT(gbc.pc(), 0x11a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 006C
        gbc.setState(0x7fb3, 0x796b, 0x5de0, 0x9fb1, 0x6a7f, 0x2d68, 0x0, 0x0);
        gbc.writeMem(0x7fb3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x796b);
        EXPECT(gbc.pc(), 0x7fb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 006D
        gbc.setState(0x4078, 0x5cb0, 0x5410, 0xe010, 0x86ea, 0x7a84, 0x0, 0x0);
        gbc.writeMem(0x4078, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x5cb0);
        EXPECT(gbc.pc(), 0x407a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 006E
        gbc.setState(0xb12f, 0x6972, 0x58f0, 0x7667, 0xdbf8, 0xdea2, 0x1, 0x0);
        gbc.writeMem(0xb12f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x6972);
        EXPECT(gbc.pc(), 0xb131);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb12f), 0xcb);
        EXPECT(gbc.readMem(0xb130), 0x9c);
        // CB 9C 006F
        gbc.setState(0x1f75, 0x9cfa, 0x6030, 0x1f33, 0x3cbf, 0x9b3d, 0x0, 0x0);
        gbc.writeMem(0x1f75, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x9cfa);
        EXPECT(gbc.pc(), 0x1f77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0070
        gbc.setState(0x89d2, 0x3d8a, 0x9a50, 0xa573, 0xfd13, 0xd57e, 0x1, 0x1);
        gbc.writeMem(0x89d2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x3d8a);
        EXPECT(gbc.pc(), 0x89d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89d2), 0xcb);
        EXPECT(gbc.readMem(0x89d3), 0x9c);
        // CB 9C 0071
        gbc.setState(0x9b, 0x1613, 0xab80, 0x9182, 0x949b, 0xe554, 0x1, 0x0);
        gbc.writeMem(0x9b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x1613);
        EXPECT(gbc.pc(), 0x9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0072
        gbc.setState(0x2fbe, 0x249, 0xe590, 0xde3b, 0x1655, 0xfc50, 0x1, 0x0);
        gbc.writeMem(0x2fbe, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x249);
        EXPECT(gbc.pc(), 0x2fc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0073
        gbc.setState(0xc91, 0xdb28, 0xf640, 0x1520, 0xea22, 0x399, 0x0, 0x0);
        gbc.writeMem(0xc91, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xdb28);
        EXPECT(gbc.pc(), 0xc93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0074
        gbc.setState(0x7fe7, 0xb618, 0x6820, 0x4568, 0xd469, 0x5c2, 0x1, 0x0);
        gbc.writeMem(0x7fe7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xb618);
        EXPECT(gbc.pc(), 0x7fe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0075
        gbc.setState(0xc1c0, 0xc941, 0x7960, 0xafdb, 0x3dc7, 0x9b0c, 0x0, 0x0);
        gbc.writeMem(0xc1c0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc941);
        EXPECT(gbc.pc(), 0xc1c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1c0), 0xcb);
        EXPECT(gbc.readMem(0xc1c1), 0x9c);
        // CB 9C 0076
        gbc.setState(0x7b75, 0xf81, 0x2dc0, 0x7999, 0xb274, 0x5f7f, 0x0, 0x0);
        gbc.writeMem(0x7b75, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf81);
        EXPECT(gbc.pc(), 0x7b77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0077
        gbc.setState(0xc4cb, 0x36f3, 0xd2b0, 0x2ec4, 0x340e, 0x92f6, 0x1, 0x0);
        gbc.writeMem(0xc4cb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x36f3);
        EXPECT(gbc.pc(), 0xc4cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4cb), 0xcb);
        EXPECT(gbc.readMem(0xc4cc), 0x9c);
        // CB 9C 0078
        gbc.setState(0x784c, 0xad2b, 0x8770, 0xb44d, 0xf9f8, 0xc7f6, 0x1, 0x0);
        gbc.writeMem(0x784c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xad2b);
        EXPECT(gbc.pc(), 0x784e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0079
        gbc.setState(0x3da7, 0x913, 0xd200, 0xb7b5, 0x7fb1, 0x3f32, 0x1, 0x1);
        gbc.writeMem(0x3da7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x913);
        EXPECT(gbc.pc(), 0x3da9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 007B
        gbc.setState(0xc381, 0xc834, 0x6db0, 0x8fb7, 0xb203, 0xcb9e, 0x0, 0x0);
        gbc.writeMem(0xc381, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc834);
        EXPECT(gbc.pc(), 0xc383);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc381), 0xcb);
        EXPECT(gbc.readMem(0xc382), 0x9c);
        // CB 9C 007C
        gbc.setState(0xcb2f, 0x79a5, 0x3ef0, 0xf15b, 0xccb8, 0xe3ca, 0x0, 0x1);
        gbc.writeMem(0xcb2f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x79a5);
        EXPECT(gbc.pc(), 0xcb31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb2f), 0xcb);
        EXPECT(gbc.readMem(0xcb30), 0x9c);
        // CB 9C 007D
        gbc.setState(0xe466, 0x1eaf, 0xc8a0, 0xd6aa, 0x8ffc, 0x6cc6, 0x1, 0x1);
        gbc.writeMem(0xe466, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x1eaf);
        EXPECT(gbc.pc(), 0xe468);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe466), 0xcb);
        EXPECT(gbc.readMem(0xe467), 0x9c);
        // CB 9C 007E
        gbc.setState(0x284a, 0xea4b, 0x97e0, 0x4a1a, 0x4501, 0x1c5d, 0x0, 0x0);
        gbc.writeMem(0x284a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xea4b);
        EXPECT(gbc.pc(), 0x284c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 007F
        gbc.setState(0x9608, 0xd7d4, 0xae50, 0x1589, 0x677c, 0x120d, 0x0, 0x1);
        gbc.writeMem(0x9608, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd7d4);
        EXPECT(gbc.pc(), 0x960a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9608), 0xcb);
        EXPECT(gbc.readMem(0x9609), 0x9c);
        // CB 9C 0081
        gbc.setState(0xe37a, 0x1c60, 0xa6f0, 0x12ea, 0x1d84, 0x3bbc, 0x1, 0x0);
        gbc.writeMem(0xe37a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x1c60);
        EXPECT(gbc.pc(), 0xe37c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe37a), 0xcb);
        EXPECT(gbc.readMem(0xe37b), 0x9c);
        // CB 9C 0082
        gbc.setState(0x414, 0xde7e, 0x5030, 0x1cbe, 0xe8ea, 0x77b2, 0x1, 0x0);
        gbc.writeMem(0x414, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xde7e);
        EXPECT(gbc.pc(), 0x416);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0083
        gbc.setState(0x62c3, 0x779c, 0x5da0, 0x14a7, 0xc048, 0xb71e, 0x0, 0x1);
        gbc.writeMem(0x62c3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x779c);
        EXPECT(gbc.pc(), 0x62c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0084
        gbc.setState(0xb1ac, 0x48ed, 0xd9f0, 0xf819, 0xd7b9, 0x6739, 0x0, 0x1);
        gbc.writeMem(0xb1ac, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x48ed);
        EXPECT(gbc.pc(), 0xb1ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1ac), 0xcb);
        EXPECT(gbc.readMem(0xb1ad), 0x9c);
        // CB 9C 0085
        gbc.setState(0x554c, 0x6f3b, 0x8490, 0x3633, 0x4bd1, 0x7e43, 0x0, 0x0);
        gbc.writeMem(0x554c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x6f3b);
        EXPECT(gbc.pc(), 0x554e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0086
        gbc.setState(0x24db, 0xe074, 0x76e0, 0x1fd, 0x1efb, 0x202e, 0x1, 0x0);
        gbc.writeMem(0x24db, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xe074);
        EXPECT(gbc.pc(), 0x24dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0087
        gbc.setState(0xdf7b, 0xb594, 0x7860, 0x782b, 0x3699, 0x98a4, 0x0, 0x0);
        gbc.writeMem(0xdf7b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb594);
        EXPECT(gbc.pc(), 0xdf7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf7b), 0xcb);
        EXPECT(gbc.readMem(0xdf7c), 0x9c);
        // CB 9C 0088
        gbc.setState(0x5dc2, 0x617b, 0x6a0, 0x3f1a, 0x3fe1, 0xcd3b, 0x0, 0x0);
        gbc.writeMem(0x5dc2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x617b);
        EXPECT(gbc.pc(), 0x5dc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0089
        gbc.setState(0xeb2b, 0x3d44, 0x8d80, 0x89de, 0x7daa, 0xd95b, 0x1, 0x0);
        gbc.writeMem(0xeb2b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3d44);
        EXPECT(gbc.pc(), 0xeb2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb2b), 0xcb);
        EXPECT(gbc.readMem(0xeb2c), 0x9c);
        // CB 9C 008A
        gbc.setState(0xbb45, 0x134d, 0x4f00, 0x47b8, 0xf2ef, 0xd463, 0x0, 0x0);
        gbc.writeMem(0xbb45, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x134d);
        EXPECT(gbc.pc(), 0xbb47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb45), 0xcb);
        EXPECT(gbc.readMem(0xbb46), 0x9c);
        // CB 9C 008B
        gbc.setState(0x8b32, 0xed48, 0x8540, 0x9f03, 0x2c37, 0xe3aa, 0x1, 0x0);
        gbc.writeMem(0x8b32, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xed48);
        EXPECT(gbc.pc(), 0x8b34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b32), 0xcb);
        EXPECT(gbc.readMem(0x8b33), 0x9c);
        // CB 9C 008C
        gbc.setState(0xa4bb, 0x987, 0xbb30, 0xf6a, 0xa529, 0xffc6, 0x0, 0x1);
        gbc.writeMem(0xa4bb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x987);
        EXPECT(gbc.pc(), 0xa4bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4bb), 0xcb);
        EXPECT(gbc.readMem(0xa4bc), 0x9c);
        // CB 9C 008D
        gbc.setState(0xb4ae, 0x6e1, 0x7db0, 0xf683, 0x7502, 0xd655, 0x1, 0x0);
        gbc.writeMem(0xb4ae, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6e1);
        EXPECT(gbc.pc(), 0xb4b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4ae), 0xcb);
        EXPECT(gbc.readMem(0xb4af), 0x9c);
        // CB 9C 008E
        gbc.setState(0x59da, 0xb567, 0x5c30, 0xcb4a, 0xa6ce, 0x439d, 0x0, 0x0);
        gbc.writeMem(0x59da, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xb567);
        EXPECT(gbc.pc(), 0x59dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 008F
        gbc.setState(0x860f, 0xde7b, 0x9a40, 0x3e23, 0xe1c1, 0x6c94, 0x1, 0x1);
        gbc.writeMem(0x860f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xde7b);
        EXPECT(gbc.pc(), 0x8611);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x860f), 0xcb);
        EXPECT(gbc.readMem(0x8610), 0x9c);
        // CB 9C 0090
        gbc.setState(0x9c21, 0xd7e8, 0x49e0, 0xc377, 0xca2a, 0xa702, 0x1, 0x0);
        gbc.writeMem(0x9c21, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd7e8);
        EXPECT(gbc.pc(), 0x9c23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c21), 0xcb);
        EXPECT(gbc.readMem(0x9c22), 0x9c);
        // CB 9C 0091
        gbc.setState(0x5e08, 0xa29d, 0xf880, 0x805a, 0x9e8e, 0x5cc0, 0x1, 0x0);
        gbc.writeMem(0x5e08, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa29d);
        EXPECT(gbc.pc(), 0x5e0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0092
        gbc.setState(0x219d, 0x2df2, 0x3ef0, 0x6fa9, 0x2e1c, 0xfb4b, 0x1, 0x0);
        gbc.writeMem(0x219d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2df2);
        EXPECT(gbc.pc(), 0x219f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0093
        gbc.setState(0x4563, 0xfaaf, 0xc8d0, 0x6cd4, 0xdf0b, 0xbd6, 0x0, 0x0);
        gbc.writeMem(0x4563, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xfaaf);
        EXPECT(gbc.pc(), 0x4565);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0094
        gbc.setState(0xcf79, 0x1c40, 0x38a0, 0xbf01, 0x3cc2, 0xc501, 0x0, 0x1);
        gbc.writeMem(0xcf79, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1c40);
        EXPECT(gbc.pc(), 0xcf7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf79), 0xcb);
        EXPECT(gbc.readMem(0xcf7a), 0x9c);
        // CB 9C 0095
        gbc.setState(0x13f3, 0x2d5c, 0x5590, 0x825b, 0x38af, 0xce58, 0x1, 0x0);
        gbc.writeMem(0x13f3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x2d5c);
        EXPECT(gbc.pc(), 0x13f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0097
        gbc.setState(0x516a, 0x6b07, 0x6e60, 0xe286, 0xf881, 0x79f0, 0x0, 0x0);
        gbc.writeMem(0x516a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6b07);
        EXPECT(gbc.pc(), 0x516c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0098
        gbc.setState(0x2c8a, 0x510b, 0x14a0, 0x39d2, 0x60ae, 0xc5c6, 0x1, 0x1);
        gbc.writeMem(0x2c8a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x510b);
        EXPECT(gbc.pc(), 0x2c8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0099
        gbc.setState(0xa470, 0x5f85, 0xb80, 0xd2e3, 0x9e44, 0x7d41, 0x1, 0x1);
        gbc.writeMem(0xa470, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x5f85);
        EXPECT(gbc.pc(), 0xa472);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa470), 0xcb);
        EXPECT(gbc.readMem(0xa471), 0x9c);
        // CB 9C 009A
        gbc.setState(0x2725, 0xb993, 0x5030, 0xe85e, 0x2955, 0x730b, 0x1, 0x1);
        gbc.writeMem(0x2725, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xb993);
        EXPECT(gbc.pc(), 0x2727);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 009B
        gbc.setState(0xa3ce, 0x371d, 0x320, 0x8512, 0xd203, 0x9121, 0x0, 0x0);
        gbc.writeMem(0xa3ce, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x371d);
        EXPECT(gbc.pc(), 0xa3d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3ce), 0xcb);
        EXPECT(gbc.readMem(0xa3cf), 0x9c);
        // CB 9C 009C
        gbc.setState(0x80b0, 0x2eb, 0x9f20, 0xbbb3, 0x42b3, 0x1bac, 0x1, 0x0);
        gbc.writeMem(0x80b0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x2eb);
        EXPECT(gbc.pc(), 0x80b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80b0), 0xcb);
        EXPECT(gbc.readMem(0x80b1), 0x9c);
        // CB 9C 009D
        gbc.setState(0xc5ce, 0xfe6a, 0x5a50, 0x25be, 0x6d9a, 0x860c, 0x0, 0x0);
        gbc.writeMem(0xc5ce, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xfe6a);
        EXPECT(gbc.pc(), 0xc5d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5ce), 0xcb);
        EXPECT(gbc.readMem(0xc5cf), 0x9c);
        // CB 9C 009E
        gbc.setState(0xd2e2, 0xad70, 0x9390, 0x37b3, 0xdab2, 0x21db, 0x0, 0x1);
        gbc.writeMem(0xd2e2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xad70);
        EXPECT(gbc.pc(), 0xd2e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2e2), 0xcb);
        EXPECT(gbc.readMem(0xd2e3), 0x9c);
        // CB 9C 009F
        gbc.setState(0xb5d3, 0xca8a, 0x1790, 0xb163, 0x9fdb, 0x4bcc, 0x1, 0x0);
        gbc.writeMem(0xb5d3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xca8a);
        EXPECT(gbc.pc(), 0xb5d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5d3), 0xcb);
        EXPECT(gbc.readMem(0xb5d4), 0x9c);
        // CB 9C 00A0
        gbc.setState(0x3d63, 0x2802, 0x9f20, 0x15e4, 0xc6ff, 0x6c10, 0x0, 0x1);
        gbc.writeMem(0x3d63, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x2802);
        EXPECT(gbc.pc(), 0x3d65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 00A1
        gbc.setState(0x42c4, 0xb2a2, 0xc640, 0x2909, 0x4c11, 0xf79a, 0x0, 0x0);
        gbc.writeMem(0x42c4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb2a2);
        EXPECT(gbc.pc(), 0x42c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 00A2
        gbc.setState(0xdf4d, 0x7f10, 0x5f10, 0xbcab, 0x180c, 0xf671, 0x1, 0x1);
        gbc.writeMem(0xdf4d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7f10);
        EXPECT(gbc.pc(), 0xdf4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf4d), 0xcb);
        EXPECT(gbc.readMem(0xdf4e), 0x9c);
        // CB 9C 00A3
        gbc.setState(0x988, 0xdc46, 0x6330, 0xb463, 0x78ee, 0xa1e0, 0x0, 0x0);
        gbc.writeMem(0x988, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xdc46);
        EXPECT(gbc.pc(), 0x98a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00A4
        gbc.setState(0x3732, 0x80a4, 0x2650, 0xb213, 0x428f, 0x29fc, 0x1, 0x1);
        gbc.writeMem(0x3732, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x80a4);
        EXPECT(gbc.pc(), 0x3734);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00A5
        gbc.setState(0x2ff3, 0xb1c5, 0xc560, 0x3d7f, 0xe7a6, 0x5145, 0x0, 0x1);
        gbc.writeMem(0x2ff3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xb1c5);
        EXPECT(gbc.pc(), 0x2ff5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 00A6
        gbc.setState(0x6899, 0x41c1, 0xf130, 0x398e, 0x3e35, 0x4486, 0x0, 0x0);
        gbc.writeMem(0x6899, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x41c1);
        EXPECT(gbc.pc(), 0x689b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00A7
        gbc.setState(0x1918, 0xa41, 0x81b0, 0x821f, 0xc5ad, 0x3400, 0x0, 0x0);
        gbc.writeMem(0x1918, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa41);
        EXPECT(gbc.pc(), 0x191a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00A8
        gbc.setState(0x31f4, 0x9091, 0x8ab0, 0x249b, 0x360c, 0x1e2f, 0x0, 0x0);
        gbc.writeMem(0x31f4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9091);
        EXPECT(gbc.pc(), 0x31f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00A9
        gbc.setState(0xbcbd, 0xe5aa, 0xb170, 0x56f2, 0x5b88, 0x4388, 0x0, 0x0);
        gbc.writeMem(0xbcbd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe5aa);
        EXPECT(gbc.pc(), 0xbcbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcbd), 0xcb);
        EXPECT(gbc.readMem(0xbcbe), 0x9c);
        // CB 9C 00AA
        gbc.setState(0x1e6f, 0xa354, 0x8c30, 0x9c8, 0xc454, 0x8c06, 0x0, 0x1);
        gbc.writeMem(0x1e6f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xa354);
        EXPECT(gbc.pc(), 0x1e71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00AB
        gbc.setState(0x3321, 0xdcd4, 0x3c70, 0xdd85, 0x2978, 0x7eca, 0x1, 0x1);
        gbc.writeMem(0x3321, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xdcd4);
        EXPECT(gbc.pc(), 0x3323);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00AC
        gbc.setState(0xb0d, 0x2eaf, 0x3e40, 0xb89a, 0xf60d, 0x7665, 0x1, 0x0);
        gbc.writeMem(0xb0d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2eaf);
        EXPECT(gbc.pc(), 0xb0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 00AD
        gbc.setState(0x2ed1, 0x6646, 0x8990, 0xe3c1, 0x1d98, 0xa9b0, 0x0, 0x1);
        gbc.writeMem(0x2ed1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6646);
        EXPECT(gbc.pc(), 0x2ed3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00AF
        gbc.setState(0x8c8d, 0x1ae, 0xcc90, 0x5aec, 0xe5f4, 0xda5e, 0x1, 0x1);
        gbc.writeMem(0x8c8d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1ae);
        EXPECT(gbc.pc(), 0x8c8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c8d), 0xcb);
        EXPECT(gbc.readMem(0x8c8e), 0x9c);
        // CB 9C 00B0
        gbc.setState(0x46f7, 0xb5c4, 0xafd0, 0xf672, 0x6dbc, 0xb7d1, 0x1, 0x0);
        gbc.writeMem(0x46f7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xb5c4);
        EXPECT(gbc.pc(), 0x46f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00B1
        gbc.setState(0xea5f, 0x3a0f, 0x60c0, 0x566b, 0x97ae, 0x6d0b, 0x1, 0x1);
        gbc.writeMem(0xea5f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3a0f);
        EXPECT(gbc.pc(), 0xea61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea5f), 0xcb);
        EXPECT(gbc.readMem(0xea60), 0x9c);
        // CB 9C 00B2
        gbc.setState(0x860d, 0x8e56, 0x5190, 0x4dc2, 0x26a, 0x5ddb, 0x0, 0x0);
        gbc.writeMem(0x860d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x8e56);
        EXPECT(gbc.pc(), 0x860f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x860d), 0xcb);
        EXPECT(gbc.readMem(0x860e), 0x9c);
        // CB 9C 00B3
        gbc.setState(0x8e18, 0x5d73, 0x33b0, 0xbbb4, 0xf090, 0xa910, 0x0, 0x0);
        gbc.writeMem(0x8e18, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5d73);
        EXPECT(gbc.pc(), 0x8e1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e18), 0xcb);
        EXPECT(gbc.readMem(0x8e19), 0x9c);
        // CB 9C 00B4
        gbc.setState(0x2b8f, 0x6292, 0xa190, 0xa174, 0x13d8, 0x86eb, 0x1, 0x0);
        gbc.writeMem(0x2b8f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6292);
        EXPECT(gbc.pc(), 0x2b91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00B5
        gbc.setState(0xc04d, 0xb9ee, 0xb780, 0x7eab, 0x1302, 0xcf3c, 0x1, 0x1);
        gbc.writeMem(0xc04d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb9ee);
        EXPECT(gbc.pc(), 0xc04f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc04d), 0xcb);
        EXPECT(gbc.readMem(0xc04e), 0x9c);
        // CB 9C 00B6
        gbc.setState(0x1bc3, 0xf8d3, 0xd9d0, 0x7a19, 0x140f, 0xaff3, 0x0, 0x0);
        gbc.writeMem(0x1bc3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf8d3);
        EXPECT(gbc.pc(), 0x1bc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00B7
        gbc.setState(0x9b4e, 0x3850, 0xdce0, 0x82fa, 0xdf5e, 0x91bd, 0x1, 0x1);
        gbc.writeMem(0x9b4e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x3850);
        EXPECT(gbc.pc(), 0x9b50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b4e), 0xcb);
        EXPECT(gbc.readMem(0x9b4f), 0x9c);
        // CB 9C 00B8
        gbc.setState(0x4ccd, 0xb0b7, 0xe200, 0x5a40, 0x41a8, 0x757c, 0x1, 0x1);
        gbc.writeMem(0x4ccd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb0b7);
        EXPECT(gbc.pc(), 0x4ccf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 00B9
        gbc.setState(0x547e, 0x1a9f, 0xeea0, 0x979f, 0xcb2e, 0x5f5c, 0x1, 0x1);
        gbc.writeMem(0x547e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1a9f);
        EXPECT(gbc.pc(), 0x5480);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 00BA
        gbc.setState(0x7009, 0xb6fb, 0xbd0, 0x5ca5, 0xb479, 0x7a8d, 0x0, 0x0);
        gbc.writeMem(0x7009, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xb6fb);
        EXPECT(gbc.pc(), 0x700b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00BB
        gbc.setState(0xc40b, 0xf3, 0x15b0, 0xd995, 0x50bd, 0xdc16, 0x1, 0x1);
        gbc.writeMem(0xc40b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf3);
        EXPECT(gbc.pc(), 0xc40d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc40b), 0xcb);
        EXPECT(gbc.readMem(0xc40c), 0x9c);
        // CB 9C 00BC
        gbc.setState(0x10da, 0xc0d, 0x2370, 0x3391, 0x6e06, 0x4150, 0x0, 0x0);
        gbc.writeMem(0x10da, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc0d);
        EXPECT(gbc.pc(), 0x10dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00BD
        gbc.setState(0xbdd2, 0xf350, 0x47c0, 0x5de2, 0xc1e2, 0xd750, 0x1, 0x1);
        gbc.writeMem(0xbdd2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xf350);
        EXPECT(gbc.pc(), 0xbdd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdd2), 0xcb);
        EXPECT(gbc.readMem(0xbdd3), 0x9c);
        // CB 9C 00BE
        gbc.setState(0x6a54, 0xbc54, 0xd980, 0xef97, 0xd1a3, 0x1b55, 0x0, 0x0);
        gbc.writeMem(0x6a54, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xbc54);
        EXPECT(gbc.pc(), 0x6a56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 00BF
        gbc.setState(0x32ae, 0xdee8, 0xaaf0, 0xb269, 0xa8b4, 0x3b94, 0x1, 0x1);
        gbc.writeMem(0x32ae, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xdee8);
        EXPECT(gbc.pc(), 0x32b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00C0
        gbc.setState(0x8ff2, 0x1ea8, 0xf3c0, 0x18b8, 0x3978, 0x1901, 0x1, 0x1);
        gbc.writeMem(0x8ff2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1ea8);
        EXPECT(gbc.pc(), 0x8ff4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ff2), 0xcb);
        EXPECT(gbc.readMem(0x8ff3), 0x9c);
        // CB 9C 00C1
        gbc.setState(0x2edf, 0x3671, 0xc2e0, 0xece1, 0xd204, 0xbd7e, 0x0, 0x0);
        gbc.writeMem(0x2edf, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x3671);
        EXPECT(gbc.pc(), 0x2ee1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 00C3
        gbc.setState(0x23db, 0x8147, 0x59f0, 0xd040, 0x5609, 0x818d, 0x0, 0x1);
        gbc.writeMem(0x23db, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x8147);
        EXPECT(gbc.pc(), 0x23dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00C4
        gbc.setState(0xc890, 0x2905, 0xa0f0, 0x4dbc, 0x9db9, 0xdf35, 0x1, 0x1);
        gbc.writeMem(0xc890, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2905);
        EXPECT(gbc.pc(), 0xc892);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc890), 0xcb);
        EXPECT(gbc.readMem(0xc891), 0x9c);
        // CB 9C 00C5
        gbc.setState(0x935f, 0x380c, 0x43e0, 0x9766, 0x7e2d, 0xb2de, 0x1, 0x0);
        gbc.writeMem(0x935f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x380c);
        EXPECT(gbc.pc(), 0x9361);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x935f), 0xcb);
        EXPECT(gbc.readMem(0x9360), 0x9c);
        // CB 9C 00C6
        gbc.setState(0x77e7, 0x9a50, 0x52d0, 0x7b23, 0x63c9, 0xae7, 0x0, 0x1);
        gbc.writeMem(0x77e7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9a50);
        EXPECT(gbc.pc(), 0x77e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00C7
        gbc.setState(0x2171, 0x3548, 0x8d10, 0x3184, 0x84cf, 0x4ea9, 0x0, 0x1);
        gbc.writeMem(0x2171, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3548);
        EXPECT(gbc.pc(), 0x2173);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00C8
        gbc.setState(0x4d17, 0xddf8, 0x35c0, 0x2c75, 0x33f4, 0x2ae0, 0x1, 0x0);
        gbc.writeMem(0x4d17, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xddf8);
        EXPECT(gbc.pc(), 0x4d19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 00C9
        gbc.setState(0xa516, 0x5c8c, 0xa860, 0xe870, 0x6099, 0xaaa0, 0x1, 0x1);
        gbc.writeMem(0xa516, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5c8c);
        EXPECT(gbc.pc(), 0xa518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa516), 0xcb);
        EXPECT(gbc.readMem(0xa517), 0x9c);
        // CB 9C 00CA
        gbc.setState(0x9e05, 0x9d6, 0xae30, 0x469a, 0x32b2, 0x519f, 0x1, 0x1);
        gbc.writeMem(0x9e05, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x9d6);
        EXPECT(gbc.pc(), 0x9e07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e05), 0xcb);
        EXPECT(gbc.readMem(0x9e06), 0x9c);
        // CB 9C 00CB
        gbc.setState(0x8132, 0x25d5, 0xfdf0, 0xf02e, 0x23f5, 0x7d9, 0x1, 0x0);
        gbc.writeMem(0x8132, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x25d5);
        EXPECT(gbc.pc(), 0x8134);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8132), 0xcb);
        EXPECT(gbc.readMem(0x8133), 0x9c);
        // CB 9C 00CC
        gbc.setState(0xc6cf, 0x8e1d, 0xeb60, 0x84c6, 0x3bb6, 0xd188, 0x1, 0x1);
        gbc.writeMem(0xc6cf, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x8e1d);
        EXPECT(gbc.pc(), 0xc6d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6cf), 0xcb);
        EXPECT(gbc.readMem(0xc6d0), 0x9c);
        // CB 9C 00CD
        gbc.setState(0xe4c6, 0x118c, 0x44c0, 0x1208, 0x560d, 0xefeb, 0x0, 0x1);
        gbc.writeMem(0xe4c6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x118c);
        EXPECT(gbc.pc(), 0xe4c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4c6), 0xcb);
        EXPECT(gbc.readMem(0xe4c7), 0x9c);
        // CB 9C 00CE
        gbc.setState(0x1ff, 0xf90a, 0x6980, 0x1a12, 0x8355, 0x4f68, 0x0, 0x0);
        gbc.writeMem(0x1ff, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf90a);
        EXPECT(gbc.pc(), 0x201);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 00CF
        gbc.setState(0x35a, 0x4d99, 0x2160, 0xa89c, 0xfea6, 0x7dca, 0x0, 0x1);
        gbc.writeMem(0x35a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4d99);
        EXPECT(gbc.pc(), 0x35c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 00D1
        gbc.setState(0x3a85, 0xda08, 0x7b60, 0x9162, 0xb565, 0x19a2, 0x0, 0x0);
        gbc.writeMem(0x3a85, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xda08);
        EXPECT(gbc.pc(), 0x3a87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 00D2
        gbc.setState(0x6241, 0x250d, 0x2f90, 0x69a, 0x9076, 0xb611, 0x1, 0x0);
        gbc.writeMem(0x6241, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x250d);
        EXPECT(gbc.pc(), 0x6243);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00D3
        gbc.setState(0xf5e, 0x8a0d, 0xb010, 0x9743, 0x6344, 0x6786, 0x0, 0x1);
        gbc.writeMem(0xf5e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x8a0d);
        EXPECT(gbc.pc(), 0xf60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00D4
        gbc.setState(0xe9b6, 0x3fb1, 0xc8d0, 0x7d34, 0xcf18, 0x978c, 0x0, 0x1);
        gbc.writeMem(0xe9b6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3fb1);
        EXPECT(gbc.pc(), 0xe9b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9b6), 0xcb);
        EXPECT(gbc.readMem(0xe9b7), 0x9c);
        // CB 9C 00D5
        gbc.setState(0x399d, 0x790d, 0xb290, 0xae72, 0xde38, 0x704c, 0x1, 0x1);
        gbc.writeMem(0x399d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x790d);
        EXPECT(gbc.pc(), 0x399f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00D6
        gbc.setState(0x7392, 0x1b70, 0xe870, 0x7344, 0x9b60, 0x8fd0, 0x0, 0x0);
        gbc.writeMem(0x7392, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1b70);
        EXPECT(gbc.pc(), 0x7394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00D7
        gbc.setState(0xc661, 0x34b4, 0xeaa0, 0x20b5, 0x3329, 0x465f, 0x0, 0x0);
        gbc.writeMem(0xc661, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x34b4);
        EXPECT(gbc.pc(), 0xc663);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc661), 0xcb);
        EXPECT(gbc.readMem(0xc662), 0x9c);
        // CB 9C 00D8
        gbc.setState(0xd052, 0xda4f, 0x3f50, 0xb26d, 0x8232, 0xc8f3, 0x0, 0x0);
        gbc.writeMem(0xd052, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xda4f);
        EXPECT(gbc.pc(), 0xd054);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd052), 0xcb);
        EXPECT(gbc.readMem(0xd053), 0x9c);
        // CB 9C 00D9
        gbc.setState(0x587, 0xf2e2, 0xc050, 0xbac3, 0x9d04, 0x140, 0x0, 0x1);
        gbc.writeMem(0x587, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xf2e2);
        EXPECT(gbc.pc(), 0x589);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00DA
        gbc.setState(0xe57c, 0xc70c, 0xcf30, 0x6199, 0x6f82, 0xf7f5, 0x1, 0x0);
        gbc.writeMem(0xe57c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc70c);
        EXPECT(gbc.pc(), 0xe57e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe57c), 0xcb);
        EXPECT(gbc.readMem(0xe57d), 0x9c);
        // CB 9C 00DB
        gbc.setState(0x64c6, 0x924e, 0xbdb0, 0xb3d, 0x2a60, 0xc483, 0x1, 0x0);
        gbc.writeMem(0x64c6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x924e);
        EXPECT(gbc.pc(), 0x64c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00DC
        gbc.setState(0x24f1, 0x24af, 0x5210, 0x9f8a, 0xa18a, 0x895e, 0x0, 0x0);
        gbc.writeMem(0x24f1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x24af);
        EXPECT(gbc.pc(), 0x24f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00DD
        gbc.setState(0x9ede, 0xa3c6, 0x13d0, 0x4feb, 0x8722, 0xba8b, 0x0, 0x1);
        gbc.writeMem(0x9ede, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xa3c6);
        EXPECT(gbc.pc(), 0x9ee0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ede), 0xcb);
        EXPECT(gbc.readMem(0x9edf), 0x9c);
        // CB 9C 00DE
        gbc.setState(0x9281, 0x7571, 0x62a0, 0xd236, 0xb4, 0x46e9, 0x0, 0x1);
        gbc.writeMem(0x9281, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7571);
        EXPECT(gbc.pc(), 0x9283);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9281), 0xcb);
        EXPECT(gbc.readMem(0x9282), 0x9c);
        // CB 9C 00DF
        gbc.setState(0x2a66, 0x145f, 0x4d30, 0x37c8, 0xbdb6, 0x2511, 0x1, 0x0);
        gbc.writeMem(0x2a66, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x145f);
        EXPECT(gbc.pc(), 0x2a68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00E0
        gbc.setState(0x5ad1, 0x7552, 0x620, 0xfaae, 0xa05e, 0xf397, 0x0, 0x1);
        gbc.writeMem(0x5ad1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x7552);
        EXPECT(gbc.pc(), 0x5ad3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 00E1
        gbc.setState(0x18ea, 0x4a11, 0xe300, 0x73a5, 0x39f8, 0xd68a, 0x1, 0x0);
        gbc.writeMem(0x18ea, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4a11);
        EXPECT(gbc.pc(), 0x18ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 00E2
        gbc.setState(0x8d73, 0xe7c3, 0x5a00, 0x46a3, 0x8b5f, 0xce5d, 0x1, 0x0);
        gbc.writeMem(0x8d73, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xe7c3);
        EXPECT(gbc.pc(), 0x8d75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d73), 0xcb);
        EXPECT(gbc.readMem(0x8d74), 0x9c);
        // CB 9C 00E3
        gbc.setState(0xe131, 0x6e2b, 0x68c0, 0x51ef, 0x1b86, 0x5864, 0x1, 0x0);
        gbc.writeMem(0xe131, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6e2b);
        EXPECT(gbc.pc(), 0xe133);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe131), 0xcb);
        EXPECT(gbc.readMem(0xe132), 0x9c);
        // CB 9C 00E4
        gbc.setState(0x229c, 0x9312, 0x3990, 0x3552, 0xc0da, 0xb18b, 0x0, 0x0);
        gbc.writeMem(0x229c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x9312);
        EXPECT(gbc.pc(), 0x229e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00E5
        gbc.setState(0x2c7e, 0xda6a, 0x10c0, 0xd127, 0xeff3, 0x8878, 0x1, 0x0);
        gbc.writeMem(0x2c7e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xda6a);
        EXPECT(gbc.pc(), 0x2c80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 00E6
        gbc.setState(0x5335, 0xd37e, 0xfc0, 0x856, 0xce0e, 0x6a4a, 0x0, 0x0);
        gbc.writeMem(0x5335, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd37e);
        EXPECT(gbc.pc(), 0x5337);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 00E7
        gbc.setState(0x2666, 0x27bf, 0x25e0, 0xbd4c, 0x1e8, 0x6d5f, 0x1, 0x0);
        gbc.writeMem(0x2666, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x27bf);
        EXPECT(gbc.pc(), 0x2668);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 00E8
        gbc.setState(0x2d04, 0x8f, 0xcc40, 0x7fea, 0xf0f6, 0x8cb7, 0x1, 0x1);
        gbc.writeMem(0x2d04, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x8f);
        EXPECT(gbc.pc(), 0x2d06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 00E9
        gbc.setState(0xd1a3, 0xd7ff, 0x44d0, 0x7d2c, 0x6d2e, 0x8976, 0x0, 0x1);
        gbc.writeMem(0xd1a3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd7ff);
        EXPECT(gbc.pc(), 0xd1a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1a3), 0xcb);
        EXPECT(gbc.readMem(0xd1a4), 0x9c);
        // CB 9C 00EA
        gbc.setState(0xd775, 0x301f, 0x3270, 0x963d, 0x176a, 0xb752, 0x1, 0x1);
        gbc.writeMem(0xd775, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x301f);
        EXPECT(gbc.pc(), 0xd777);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd775), 0xcb);
        EXPECT(gbc.readMem(0xd776), 0x9c);
        // CB 9C 00EB
        gbc.setState(0x8df, 0x3f4b, 0xacd0, 0x73dc, 0xdfde, 0xbf45, 0x1, 0x0);
        gbc.writeMem(0x8df, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3f4b);
        EXPECT(gbc.pc(), 0x8e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00EC
        gbc.setState(0x670c, 0x63e5, 0xdf20, 0x60dd, 0xcf59, 0xacd7, 0x0, 0x1);
        gbc.writeMem(0x670c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x63e5);
        EXPECT(gbc.pc(), 0x670e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 00ED
        gbc.setState(0xb568, 0xe644, 0xd20, 0x1d98, 0x3a09, 0xa1af, 0x0, 0x0);
        gbc.writeMem(0xb568, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xe644);
        EXPECT(gbc.pc(), 0xb56a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb568), 0xcb);
        EXPECT(gbc.readMem(0xb569), 0x9c);
        // CB 9C 00EF
        gbc.setState(0x85be, 0x162f, 0x2180, 0xa506, 0x8066, 0xd1fc, 0x0, 0x0);
        gbc.writeMem(0x85be, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x162f);
        EXPECT(gbc.pc(), 0x85c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85be), 0xcb);
        EXPECT(gbc.readMem(0x85bf), 0x9c);
        // CB 9C 00F0
        gbc.setState(0x866d, 0xea7b, 0x4230, 0xff50, 0xe617, 0x7639, 0x1, 0x0);
        gbc.writeMem(0x866d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xea7b);
        EXPECT(gbc.pc(), 0x866f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x866d), 0xcb);
        EXPECT(gbc.readMem(0x866e), 0x9c);
        // CB 9C 00F1
        gbc.setState(0xa75b, 0x5072, 0x2980, 0xcfeb, 0x89eb, 0xd43f, 0x1, 0x1);
        gbc.writeMem(0xa75b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x5072);
        EXPECT(gbc.pc(), 0xa75d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa75b), 0xcb);
        EXPECT(gbc.readMem(0xa75c), 0x9c);
        // CB 9C 00F2
        gbc.setState(0xb5dc, 0xb933, 0x1f40, 0x5de, 0x12a, 0x88a3, 0x1, 0x1);
        gbc.writeMem(0xb5dc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb933);
        EXPECT(gbc.pc(), 0xb5de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5dc), 0xcb);
        EXPECT(gbc.readMem(0xb5dd), 0x9c);
        // CB 9C 00F3
        gbc.setState(0x66f6, 0xbab6, 0x9f80, 0x5eb, 0x4d50, 0xb744, 0x1, 0x1);
        gbc.writeMem(0x66f6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xbab6);
        EXPECT(gbc.pc(), 0x66f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 00F4
        gbc.setState(0xcee1, 0x67fe, 0x1c50, 0x944f, 0x41fc, 0x8a3c, 0x0, 0x1);
        gbc.writeMem(0xcee1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x67fe);
        EXPECT(gbc.pc(), 0xcee3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcee1), 0xcb);
        EXPECT(gbc.readMem(0xcee2), 0x9c);
        // CB 9C 00F5
        gbc.setState(0xa00a, 0x1ab0, 0x7680, 0xf74f, 0xa5ee, 0xebe9, 0x1, 0x0);
        gbc.writeMem(0xa00a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1ab0);
        EXPECT(gbc.pc(), 0xa00c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa00a), 0xcb);
        EXPECT(gbc.readMem(0xa00b), 0x9c);
        // CB 9C 00F7
        gbc.setState(0xdf5c, 0xee65, 0xebd0, 0xfca5, 0x451a, 0xee41, 0x1, 0x0);
        gbc.writeMem(0xdf5c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xee65);
        EXPECT(gbc.pc(), 0xdf5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf5c), 0xcb);
        EXPECT(gbc.readMem(0xdf5d), 0x9c);
        // CB 9C 00F8
        gbc.setState(0xaec2, 0x3be5, 0x3730, 0xab03, 0x8324, 0x23ab, 0x1, 0x0);
        gbc.writeMem(0xaec2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3be5);
        EXPECT(gbc.pc(), 0xaec4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaec2), 0xcb);
        EXPECT(gbc.readMem(0xaec3), 0x9c);
        // CB 9C 00FA
        gbc.setState(0xa07c, 0x7769, 0xd000, 0x378a, 0x387b, 0x4b0f, 0x1, 0x0);
        gbc.writeMem(0xa07c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7769);
        EXPECT(gbc.pc(), 0xa07e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa07c), 0xcb);
        EXPECT(gbc.readMem(0xa07d), 0x9c);
        // CB 9C 00FB
        gbc.setState(0x4324, 0x5f5e, 0x3d40, 0x40fa, 0x11b1, 0xe4a0, 0x0, 0x1);
        gbc.writeMem(0x4324, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5f5e);
        EXPECT(gbc.pc(), 0x4326);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 00FC
        gbc.setState(0x2d0c, 0x12a3, 0xb630, 0xae04, 0xde00, 0x6797, 0x0, 0x0);
        gbc.writeMem(0x2d0c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x12a3);
        EXPECT(gbc.pc(), 0x2d0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 00FD
        gbc.setState(0x69a5, 0xd65d, 0x5f40, 0xe169, 0x8fe5, 0x2c98, 0x0, 0x1);
        gbc.writeMem(0x69a5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xd65d);
        EXPECT(gbc.pc(), 0x69a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 00FE
        gbc.setState(0xd808, 0xbb39, 0x3cb0, 0xdfba, 0xbc82, 0xe53b, 0x0, 0x1);
        gbc.writeMem(0xd808, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xbb39);
        EXPECT(gbc.pc(), 0xd80a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd808), 0xcb);
        EXPECT(gbc.readMem(0xd809), 0x9c);
        // CB 9C 00FF
        gbc.setState(0xb6be, 0xdbfc, 0xe820, 0x771d, 0x899e, 0x9f68, 0x0, 0x0);
        gbc.writeMem(0xb6be, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xdbfc);
        EXPECT(gbc.pc(), 0xb6c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6be), 0xcb);
        EXPECT(gbc.readMem(0xb6bf), 0x9c);
        // CB 9C 0100
        gbc.setState(0x6551, 0xe669, 0x1900, 0xec, 0xe011, 0x942e, 0x0, 0x1);
        gbc.writeMem(0x6551, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xe669);
        EXPECT(gbc.pc(), 0x6553);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0101
        gbc.setState(0xc66d, 0xd9ff, 0xbb80, 0xa08d, 0xb465, 0xffaf, 0x0, 0x0);
        gbc.writeMem(0xc66d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd9ff);
        EXPECT(gbc.pc(), 0xc66f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc66d), 0xcb);
        EXPECT(gbc.readMem(0xc66e), 0x9c);
        // CB 9C 0102
        gbc.setState(0xda91, 0x89b1, 0x4100, 0x386, 0xa084, 0x51f2, 0x1, 0x0);
        gbc.writeMem(0xda91, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x89b1);
        EXPECT(gbc.pc(), 0xda93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda91), 0xcb);
        EXPECT(gbc.readMem(0xda92), 0x9c);
        // CB 9C 0103
        gbc.setState(0xe350, 0x6d8d, 0xc9d0, 0x44d8, 0xdb96, 0xe84b, 0x1, 0x1);
        gbc.writeMem(0xe350, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x6d8d);
        EXPECT(gbc.pc(), 0xe352);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe350), 0xcb);
        EXPECT(gbc.readMem(0xe351), 0x9c);
        // CB 9C 0104
        gbc.setState(0xcea1, 0x7c90, 0x4650, 0x46e3, 0x4110, 0x248f, 0x1, 0x0);
        gbc.writeMem(0xcea1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x7c90);
        EXPECT(gbc.pc(), 0xcea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcea1), 0xcb);
        EXPECT(gbc.readMem(0xcea2), 0x9c);
        // CB 9C 0105
        gbc.setState(0xe562, 0x8415, 0x900, 0x1689, 0x1c4e, 0xc5fd, 0x0, 0x0);
        gbc.writeMem(0xe562, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x8415);
        EXPECT(gbc.pc(), 0xe564);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe562), 0xcb);
        EXPECT(gbc.readMem(0xe563), 0x9c);
        // CB 9C 0106
        gbc.setState(0xe4fa, 0x7d85, 0x3640, 0xeda7, 0x483f, 0xe2a3, 0x0, 0x1);
        gbc.writeMem(0xe4fa, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x7d85);
        EXPECT(gbc.pc(), 0xe4fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4fa), 0xcb);
        EXPECT(gbc.readMem(0xe4fb), 0x9c);
        // CB 9C 0108
        gbc.setState(0x58ae, 0x387e, 0x9b0, 0xf48d, 0x87d4, 0x8601, 0x1, 0x1);
        gbc.writeMem(0x58ae, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x387e);
        EXPECT(gbc.pc(), 0x58b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0109
        gbc.setState(0x37b8, 0x9736, 0x81c0, 0x377d, 0xc38b, 0xe53c, 0x0, 0x1);
        gbc.writeMem(0x37b8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x9736);
        EXPECT(gbc.pc(), 0x37ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 010A
        gbc.setState(0xe746, 0x45d6, 0x9650, 0x6adc, 0xab6b, 0x7061, 0x1, 0x0);
        gbc.writeMem(0xe746, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x45d6);
        EXPECT(gbc.pc(), 0xe748);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe746), 0xcb);
        EXPECT(gbc.readMem(0xe747), 0x9c);
        // CB 9C 010B
        gbc.setState(0x21c0, 0xb31b, 0x3c70, 0x9911, 0x964e, 0x86ae, 0x1, 0x0);
        gbc.writeMem(0x21c0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xb31b);
        EXPECT(gbc.pc(), 0x21c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 010C
        gbc.setState(0x349d, 0xf6b1, 0x66a0, 0x58a8, 0x68e9, 0x4fad, 0x0, 0x0);
        gbc.writeMem(0x349d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf6b1);
        EXPECT(gbc.pc(), 0x349f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 010D
        gbc.setState(0xcac3, 0x143, 0x8a80, 0x1f3e, 0x8dee, 0x7d55, 0x0, 0x0);
        gbc.writeMem(0xcac3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x143);
        EXPECT(gbc.pc(), 0xcac5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcac3), 0xcb);
        EXPECT(gbc.readMem(0xcac4), 0x9c);
        // CB 9C 010E
        gbc.setState(0x822, 0xc1, 0xc490, 0x1262, 0x297, 0xed33, 0x0, 0x1);
        gbc.writeMem(0x822, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc1);
        EXPECT(gbc.pc(), 0x824);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 010F
        gbc.setState(0xb687, 0xd266, 0x8a10, 0x76c8, 0x6a4b, 0xfa46, 0x1, 0x1);
        gbc.writeMem(0xb687, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xd266);
        EXPECT(gbc.pc(), 0xb689);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb687), 0xcb);
        EXPECT(gbc.readMem(0xb688), 0x9c);
        // CB 9C 0110
        gbc.setState(0x79a, 0x6aa8, 0x7b60, 0x61cf, 0xd9df, 0xabdf, 0x1, 0x1);
        gbc.writeMem(0x79a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x6aa8);
        EXPECT(gbc.pc(), 0x79c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0111
        gbc.setState(0x7a50, 0xd45e, 0x7b80, 0xc5ae, 0x95a9, 0xb3f0, 0x0, 0x1);
        gbc.writeMem(0x7a50, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd45e);
        EXPECT(gbc.pc(), 0x7a52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0112
        gbc.setState(0xe9d2, 0x93fa, 0x5850, 0xcb31, 0x3f07, 0x9659, 0x1, 0x0);
        gbc.writeMem(0xe9d2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x93fa);
        EXPECT(gbc.pc(), 0xe9d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9d2), 0xcb);
        EXPECT(gbc.readMem(0xe9d3), 0x9c);
        // CB 9C 0114
        gbc.setState(0x5e2f, 0xba73, 0xda0, 0x77f5, 0x17a, 0x34e, 0x1, 0x1);
        gbc.writeMem(0x5e2f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xba73);
        EXPECT(gbc.pc(), 0x5e31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0115
        gbc.setState(0x5872, 0xde58, 0xe990, 0x3474, 0x21eb, 0x1f02, 0x1, 0x1);
        gbc.writeMem(0x5872, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xde58);
        EXPECT(gbc.pc(), 0x5874);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0116
        gbc.setState(0x346b, 0x98e2, 0x2130, 0xb2bc, 0x3f9f, 0x7b7c, 0x0, 0x1);
        gbc.writeMem(0x346b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x98e2);
        EXPECT(gbc.pc(), 0x346d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0117
        gbc.setState(0x5901, 0x6052, 0xbd70, 0x4a96, 0x84d0, 0xeb6, 0x1, 0x0);
        gbc.writeMem(0x5901, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x6052);
        EXPECT(gbc.pc(), 0x5903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0118
        gbc.setState(0xc4e5, 0x7979, 0x3640, 0x9fa7, 0x1446, 0x91ef, 0x0, 0x1);
        gbc.writeMem(0xc4e5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x7979);
        EXPECT(gbc.pc(), 0xc4e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4e5), 0xcb);
        EXPECT(gbc.readMem(0xc4e6), 0x9c);
        // CB 9C 0119
        gbc.setState(0xc718, 0x8f9, 0xbc30, 0xa6fb, 0xd113, 0x8c79, 0x0, 0x1);
        gbc.writeMem(0xc718, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x8f9);
        EXPECT(gbc.pc(), 0xc71a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc718), 0xcb);
        EXPECT(gbc.readMem(0xc719), 0x9c);
        // CB 9C 011A
        gbc.setState(0x9acc, 0xcd57, 0x3dd0, 0x4795, 0x1950, 0xa0ae, 0x1, 0x0);
        gbc.writeMem(0x9acc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xcd57);
        EXPECT(gbc.pc(), 0x9ace);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9acc), 0xcb);
        EXPECT(gbc.readMem(0x9acd), 0x9c);
        // CB 9C 011B
        gbc.setState(0xe4a8, 0xaaef, 0xe190, 0xdcf5, 0x7304, 0x9310, 0x0, 0x0);
        gbc.writeMem(0xe4a8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xaaef);
        EXPECT(gbc.pc(), 0xe4aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4a8), 0xcb);
        EXPECT(gbc.readMem(0xe4a9), 0x9c);
        // CB 9C 011C
        gbc.setState(0xb545, 0xee02, 0x2470, 0x5846, 0xf9b, 0x4214, 0x1, 0x1);
        gbc.writeMem(0xb545, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xee02);
        EXPECT(gbc.pc(), 0xb547);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb545), 0xcb);
        EXPECT(gbc.readMem(0xb546), 0x9c);
        // CB 9C 011D
        gbc.setState(0xe243, 0xe957, 0x67b0, 0x6c67, 0xb8e6, 0x1194, 0x1, 0x0);
        gbc.writeMem(0xe243, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xe957);
        EXPECT(gbc.pc(), 0xe245);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe243), 0xcb);
        EXPECT(gbc.readMem(0xe244), 0x9c);
        // CB 9C 011E
        gbc.setState(0x285f, 0x8e43, 0xaaa0, 0x4661, 0x6e7f, 0xc6c7, 0x1, 0x0);
        gbc.writeMem(0x285f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8e43);
        EXPECT(gbc.pc(), 0x2861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 011F
        gbc.setState(0xbf8f, 0x438e, 0xbbb0, 0x6f33, 0x50b2, 0x8667, 0x1, 0x0);
        gbc.writeMem(0xbf8f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x438e);
        EXPECT(gbc.pc(), 0xbf91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf8f), 0xcb);
        EXPECT(gbc.readMem(0xbf90), 0x9c);
        // CB 9C 0120
        gbc.setState(0x60b2, 0xf451, 0x4b80, 0xb3cc, 0x3cde, 0x9766, 0x0, 0x1);
        gbc.writeMem(0x60b2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf451);
        EXPECT(gbc.pc(), 0x60b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0121
        gbc.setState(0xce3e, 0x35b6, 0x7fe0, 0xfddd, 0xb90c, 0x16f9, 0x1, 0x1);
        gbc.writeMem(0xce3e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x35b6);
        EXPECT(gbc.pc(), 0xce40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce3e), 0xcb);
        EXPECT(gbc.readMem(0xce3f), 0x9c);
        // CB 9C 0122
        gbc.setState(0x31ee, 0x40cc, 0x1500, 0x472b, 0x387d, 0xb433, 0x0, 0x0);
        gbc.writeMem(0x31ee, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x40cc);
        EXPECT(gbc.pc(), 0x31f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0123
        gbc.setState(0x8342, 0xe34f, 0x4470, 0xd11d, 0x44e8, 0x3674, 0x0, 0x0);
        gbc.writeMem(0x8342, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xe34f);
        EXPECT(gbc.pc(), 0x8344);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8342), 0xcb);
        EXPECT(gbc.readMem(0x8343), 0x9c);
        // CB 9C 0124
        gbc.setState(0x7007, 0x9f1b, 0xd980, 0xcd4e, 0xdc7e, 0x66c4, 0x0, 0x0);
        gbc.writeMem(0x7007, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x9f1b);
        EXPECT(gbc.pc(), 0x7009);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0125
        gbc.setState(0xcb9b, 0x624d, 0x9790, 0xc450, 0x315a, 0xa6a, 0x1, 0x1);
        gbc.writeMem(0xcb9b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x624d);
        EXPECT(gbc.pc(), 0xcb9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb9b), 0xcb);
        EXPECT(gbc.readMem(0xcb9c), 0x9c);
        // CB 9C 0126
        gbc.setState(0x9750, 0x101, 0x2620, 0x1e3, 0x3525, 0x6fae, 0x0, 0x1);
        gbc.writeMem(0x9750, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x101);
        EXPECT(gbc.pc(), 0x9752);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9750), 0xcb);
        EXPECT(gbc.readMem(0x9751), 0x9c);
        // CB 9C 0127
        gbc.setState(0x275b, 0x1206, 0xfaf0, 0xecb9, 0xfa24, 0x8798, 0x0, 0x1);
        gbc.writeMem(0x275b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1206);
        EXPECT(gbc.pc(), 0x275d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0128
        gbc.setState(0xbf24, 0x8011, 0x8930, 0x80d, 0x2101, 0xf883, 0x1, 0x0);
        gbc.writeMem(0xbf24, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8011);
        EXPECT(gbc.pc(), 0xbf26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf24), 0xcb);
        EXPECT(gbc.readMem(0xbf25), 0x9c);
        // CB 9C 0129
        gbc.setState(0xebc9, 0x41ea, 0xbbe0, 0x2649, 0x20f8, 0x23cf, 0x1, 0x1);
        gbc.writeMem(0xebc9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x41ea);
        EXPECT(gbc.pc(), 0xebcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebc9), 0xcb);
        EXPECT(gbc.readMem(0xebca), 0x9c);
        // CB 9C 012B
        gbc.setState(0x9804, 0xf13, 0xb6e0, 0x7210, 0x9d02, 0xb3d9, 0x1, 0x0);
        gbc.writeMem(0x9804, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf13);
        EXPECT(gbc.pc(), 0x9806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9804), 0xcb);
        EXPECT(gbc.readMem(0x9805), 0x9c);
        // CB 9C 012C
        gbc.setState(0x4c05, 0x4481, 0x5190, 0xaf47, 0xfc49, 0xcecd, 0x1, 0x0);
        gbc.writeMem(0x4c05, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x4481);
        EXPECT(gbc.pc(), 0x4c07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 012D
        gbc.setState(0x294e, 0x9085, 0x2870, 0xb7ce, 0x1c4d, 0x83c8, 0x1, 0x1);
        gbc.writeMem(0x294e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9085);
        EXPECT(gbc.pc(), 0x2950);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 012E
        gbc.setState(0x226, 0x7252, 0x79e0, 0xcaad, 0x9f18, 0xe898, 0x0, 0x1);
        gbc.writeMem(0x226, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7252);
        EXPECT(gbc.pc(), 0x228);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 012F
        gbc.setState(0xe8a, 0xdcf0, 0x48b0, 0x38ce, 0x9294, 0x8f3d, 0x0, 0x0);
        gbc.writeMem(0xe8a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xdcf0);
        EXPECT(gbc.pc(), 0xe8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0130
        gbc.setState(0x9aac, 0x50e2, 0x9a00, 0x2eab, 0x865, 0xc327, 0x0, 0x1);
        gbc.writeMem(0x9aac, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x50e2);
        EXPECT(gbc.pc(), 0x9aae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aac), 0xcb);
        EXPECT(gbc.readMem(0x9aad), 0x9c);
        // CB 9C 0131
        gbc.setState(0x43b, 0x48d7, 0xa1c0, 0x9edd, 0xa356, 0xa43c, 0x1, 0x1);
        gbc.writeMem(0x43b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x48d7);
        EXPECT(gbc.pc(), 0x43d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0132
        gbc.setState(0x9ec7, 0x11c2, 0x6400, 0x928a, 0x63a9, 0x65ab, 0x1, 0x1);
        gbc.writeMem(0x9ec7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x11c2);
        EXPECT(gbc.pc(), 0x9ec9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ec7), 0xcb);
        EXPECT(gbc.readMem(0x9ec8), 0x9c);
        // CB 9C 0133
        gbc.setState(0x2a20, 0x9a53, 0xf980, 0x4852, 0x3371, 0x7bd6, 0x0, 0x0);
        gbc.writeMem(0x2a20, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9a53);
        EXPECT(gbc.pc(), 0x2a22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0134
        gbc.setState(0x5b7c, 0xea00, 0x75d0, 0x9de2, 0x44a, 0x6212, 0x0, 0x0);
        gbc.writeMem(0x5b7c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xea00);
        EXPECT(gbc.pc(), 0x5b7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0135
        gbc.setState(0xe737, 0x9a53, 0x2180, 0x2449, 0x2567, 0x6de3, 0x0, 0x1);
        gbc.writeMem(0xe737, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x9a53);
        EXPECT(gbc.pc(), 0xe739);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe737), 0xcb);
        EXPECT(gbc.readMem(0xe738), 0x9c);
        // CB 9C 0136
        gbc.setState(0x777d, 0xb453, 0xe390, 0x6114, 0xdcc4, 0x3908, 0x0, 0x0);
        gbc.writeMem(0x777d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb453);
        EXPECT(gbc.pc(), 0x777f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0137
        gbc.setState(0x35fd, 0x73f8, 0xc480, 0x15af, 0x80ae, 0x7175, 0x0, 0x0);
        gbc.writeMem(0x35fd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x73f8);
        EXPECT(gbc.pc(), 0x35ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0138
        gbc.setState(0x36b4, 0xe625, 0x1290, 0x3249, 0x62e4, 0x6747, 0x0, 0x1);
        gbc.writeMem(0x36b4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xe625);
        EXPECT(gbc.pc(), 0x36b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0139
        gbc.setState(0x678e, 0xd569, 0x7c60, 0x4649, 0xf490, 0xf96f, 0x1, 0x1);
        gbc.writeMem(0x678e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xd569);
        EXPECT(gbc.pc(), 0x6790);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 013A
        gbc.setState(0x6bc2, 0xde51, 0xcef0, 0xa4ac, 0x6f92, 0xaba3, 0x0, 0x1);
        gbc.writeMem(0x6bc2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xde51);
        EXPECT(gbc.pc(), 0x6bc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 013B
        gbc.setState(0xa5b3, 0x64ff, 0x9ff0, 0x31a, 0xddfa, 0x6f38, 0x0, 0x1);
        gbc.writeMem(0xa5b3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x64ff);
        EXPECT(gbc.pc(), 0xa5b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5b3), 0xcb);
        EXPECT(gbc.readMem(0xa5b4), 0x9c);
        // CB 9C 013C
        gbc.setState(0xa656, 0x97b6, 0x8c30, 0xd912, 0x7215, 0x4298, 0x1, 0x0);
        gbc.writeMem(0xa656, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x97b6);
        EXPECT(gbc.pc(), 0xa658);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa656), 0xcb);
        EXPECT(gbc.readMem(0xa657), 0x9c);
        // CB 9C 013D
        gbc.setState(0x3ca6, 0x6139, 0xe7e0, 0xd99c, 0x3c4a, 0xd3f3, 0x0, 0x1);
        gbc.writeMem(0x3ca6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6139);
        EXPECT(gbc.pc(), 0x3ca8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 013E
        gbc.setState(0xd39f, 0x36ab, 0x7f60, 0xea10, 0x5135, 0x4564, 0x1, 0x0);
        gbc.writeMem(0xd39f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x36ab);
        EXPECT(gbc.pc(), 0xd3a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd39f), 0xcb);
        EXPECT(gbc.readMem(0xd3a0), 0x9c);
        // CB 9C 013F
        gbc.setState(0xe318, 0x548, 0xfa10, 0xa1d8, 0x9540, 0x495f, 0x0, 0x0);
        gbc.writeMem(0xe318, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x548);
        EXPECT(gbc.pc(), 0xe31a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe318), 0xcb);
        EXPECT(gbc.readMem(0xe319), 0x9c);
        // CB 9C 0140
        gbc.setState(0xadc9, 0xef13, 0x4e70, 0xaa0b, 0xba9, 0xbec0, 0x0, 0x0);
        gbc.writeMem(0xadc9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xef13);
        EXPECT(gbc.pc(), 0xadcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadc9), 0xcb);
        EXPECT(gbc.readMem(0xadca), 0x9c);
        // CB 9C 0141
        gbc.setState(0x52b6, 0x596a, 0x2b60, 0xa812, 0xaef3, 0x645a, 0x0, 0x0);
        gbc.writeMem(0x52b6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x596a);
        EXPECT(gbc.pc(), 0x52b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0142
        gbc.setState(0x3ed9, 0xb587, 0xfb40, 0x5daf, 0xcb2b, 0x1fa7, 0x1, 0x1);
        gbc.writeMem(0x3ed9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xb587);
        EXPECT(gbc.pc(), 0x3edb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0143
        gbc.setState(0x782c, 0xff4e, 0xdba0, 0x2f1, 0x356a, 0x2d49, 0x1, 0x0);
        gbc.writeMem(0x782c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xff4e);
        EXPECT(gbc.pc(), 0x782e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0144
        gbc.setState(0x1878, 0xf37b, 0x9b60, 0xce51, 0x7bad, 0x112, 0x1, 0x1);
        gbc.writeMem(0x1878, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xf37b);
        EXPECT(gbc.pc(), 0x187a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0145
        gbc.setState(0xc1fb, 0xa1ad, 0x68c0, 0xa229, 0xf79a, 0xcde6, 0x0, 0x1);
        gbc.writeMem(0xc1fb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa1ad);
        EXPECT(gbc.pc(), 0xc1fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1fb), 0xcb);
        EXPECT(gbc.readMem(0xc1fc), 0x9c);
        // CB 9C 0146
        gbc.setState(0x7af6, 0xabb6, 0x7940, 0x7887, 0x502d, 0x9ea7, 0x1, 0x0);
        gbc.writeMem(0x7af6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xabb6);
        EXPECT(gbc.pc(), 0x7af8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0147
        gbc.setState(0x9062, 0x24b5, 0x3240, 0xf501, 0x809e, 0xa89e, 0x0, 0x1);
        gbc.writeMem(0x9062, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x24b5);
        EXPECT(gbc.pc(), 0x9064);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9062), 0xcb);
        EXPECT(gbc.readMem(0x9063), 0x9c);
        // CB 9C 0148
        gbc.setState(0x499b, 0x9aaa, 0x2f40, 0xaa8a, 0x1977, 0x8f4b, 0x1, 0x0);
        gbc.writeMem(0x499b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9aaa);
        EXPECT(gbc.pc(), 0x499d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0149
        gbc.setState(0x15a4, 0xe07d, 0xfab0, 0xc74e, 0x35fd, 0x81d0, 0x0, 0x1);
        gbc.writeMem(0x15a4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe07d);
        EXPECT(gbc.pc(), 0x15a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 014A
        gbc.setState(0x5f6a, 0x596e, 0x1bd0, 0xa258, 0x3bc1, 0x501f, 0x1, 0x0);
        gbc.writeMem(0x5f6a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x596e);
        EXPECT(gbc.pc(), 0x5f6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 014B
        gbc.setState(0xcdd9, 0x6195, 0x4030, 0x7ff6, 0x483b, 0xab50, 0x0, 0x0);
        gbc.writeMem(0xcdd9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6195);
        EXPECT(gbc.pc(), 0xcddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdd9), 0xcb);
        EXPECT(gbc.readMem(0xcdda), 0x9c);
        // CB 9C 014C
        gbc.setState(0x84c5, 0x9031, 0x6590, 0x9a00, 0x612b, 0x1b5e, 0x0, 0x0);
        gbc.writeMem(0x84c5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x9031);
        EXPECT(gbc.pc(), 0x84c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84c5), 0xcb);
        EXPECT(gbc.readMem(0x84c6), 0x9c);
        // CB 9C 014D
        gbc.setState(0x79ce, 0x946d, 0x3dc0, 0x1e5a, 0xb7f4, 0x5b4, 0x0, 0x1);
        gbc.writeMem(0x79ce, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x946d);
        EXPECT(gbc.pc(), 0x79d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 014E
        gbc.setState(0x903a, 0x244c, 0xe0a0, 0x950e, 0x620e, 0xc424, 0x1, 0x0);
        gbc.writeMem(0x903a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x244c);
        EXPECT(gbc.pc(), 0x903c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x903a), 0xcb);
        EXPECT(gbc.readMem(0x903b), 0x9c);
        // CB 9C 014F
        gbc.setState(0x4f6d, 0x6812, 0xdc40, 0x804c, 0xb40, 0xa5f3, 0x0, 0x0);
        gbc.writeMem(0x4f6d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6812);
        EXPECT(gbc.pc(), 0x4f6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0150
        gbc.setState(0xdc0a, 0xd2ce, 0xf30, 0x251c, 0x4b76, 0xf797, 0x1, 0x0);
        gbc.writeMem(0xdc0a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xd2ce);
        EXPECT(gbc.pc(), 0xdc0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc0a), 0xcb);
        EXPECT(gbc.readMem(0xdc0b), 0x9c);
        // CB 9C 0151
        gbc.setState(0xb965, 0x5707, 0x4320, 0xa7fa, 0xfd3a, 0x247a, 0x1, 0x1);
        gbc.writeMem(0xb965, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5707);
        EXPECT(gbc.pc(), 0xb967);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb965), 0xcb);
        EXPECT(gbc.readMem(0xb966), 0x9c);
        // CB 9C 0152
        gbc.setState(0xbc43, 0x50de, 0x2460, 0x4020, 0xd309, 0xb57, 0x1, 0x1);
        gbc.writeMem(0xbc43, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x50de);
        EXPECT(gbc.pc(), 0xbc45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc43), 0xcb);
        EXPECT(gbc.readMem(0xbc44), 0x9c);
        // CB 9C 0153
        gbc.setState(0x1fe8, 0x3417, 0xaa60, 0x3aec, 0xed3d, 0xd985, 0x1, 0x1);
        gbc.writeMem(0x1fe8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x3417);
        EXPECT(gbc.pc(), 0x1fea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0154
        gbc.setState(0xb1a4, 0xf885, 0xe650, 0x1648, 0xa965, 0x6b51, 0x0, 0x1);
        gbc.writeMem(0xb1a4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf885);
        EXPECT(gbc.pc(), 0xb1a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1a4), 0xcb);
        EXPECT(gbc.readMem(0xb1a5), 0x9c);
        // CB 9C 0155
        gbc.setState(0x2ac, 0xa96d, 0x300, 0xe055, 0x9035, 0x8303, 0x1, 0x1);
        gbc.writeMem(0x2ac, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xa96d);
        EXPECT(gbc.pc(), 0x2ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0156
        gbc.setState(0x870e, 0xb266, 0xfc30, 0xae47, 0x3271, 0x7f9, 0x1, 0x0);
        gbc.writeMem(0x870e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb266);
        EXPECT(gbc.pc(), 0x8710);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x870e), 0xcb);
        EXPECT(gbc.readMem(0x870f), 0x9c);
        // CB 9C 0157
        gbc.setState(0x301c, 0xf933, 0x7950, 0xeef6, 0x3a75, 0x90ed, 0x1, 0x1);
        gbc.writeMem(0x301c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf933);
        EXPECT(gbc.pc(), 0x301e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0158
        gbc.setState(0x5eb, 0xa7f8, 0xef20, 0xa531, 0x6b04, 0x1c21, 0x1, 0x0);
        gbc.writeMem(0x5eb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa7f8);
        EXPECT(gbc.pc(), 0x5ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0159
        gbc.setState(0xaf6b, 0x47c4, 0xe2b0, 0x9bf8, 0x82af, 0x9bd2, 0x0, 0x1);
        gbc.writeMem(0xaf6b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x47c4);
        EXPECT(gbc.pc(), 0xaf6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf6b), 0xcb);
        EXPECT(gbc.readMem(0xaf6c), 0x9c);
        // CB 9C 015A
        gbc.setState(0x6d49, 0xa145, 0xc670, 0x98ec, 0x1be6, 0xedd4, 0x0, 0x0);
        gbc.writeMem(0x6d49, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa145);
        EXPECT(gbc.pc(), 0x6d4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 015B
        gbc.setState(0xabe, 0x856e, 0x76a0, 0x98ac, 0xb5c8, 0xbf59, 0x1, 0x0);
        gbc.writeMem(0xabe, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x856e);
        EXPECT(gbc.pc(), 0xac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 015C
        gbc.setState(0x7a76, 0xc35c, 0xf850, 0x58c3, 0x1a15, 0x8d77, 0x1, 0x0);
        gbc.writeMem(0x7a76, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc35c);
        EXPECT(gbc.pc(), 0x7a78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 015D
        gbc.setState(0x68a2, 0x82b8, 0xcea0, 0xb297, 0x78a3, 0x841c, 0x0, 0x1);
        gbc.writeMem(0x68a2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x82b8);
        EXPECT(gbc.pc(), 0x68a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 015E
        gbc.setState(0xd37a, 0xd032, 0x8ff0, 0x5ff1, 0xca9e, 0xb0c0, 0x0, 0x0);
        gbc.writeMem(0xd37a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xd032);
        EXPECT(gbc.pc(), 0xd37c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd37a), 0xcb);
        EXPECT(gbc.readMem(0xd37b), 0x9c);
        // CB 9C 015F
        gbc.setState(0x9dec, 0x75, 0x1660, 0x18bd, 0xc01, 0x4598, 0x0, 0x1);
        gbc.writeMem(0x9dec, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x75);
        EXPECT(gbc.pc(), 0x9dee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dec), 0xcb);
        EXPECT(gbc.readMem(0x9ded), 0x9c);
        // CB 9C 0160
        gbc.setState(0x5486, 0xc2a2, 0x5280, 0xec54, 0x9b29, 0xf208, 0x1, 0x1);
        gbc.writeMem(0x5486, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc2a2);
        EXPECT(gbc.pc(), 0x5488);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0161
        gbc.setState(0x143d, 0xdff5, 0x7630, 0x57e9, 0xda13, 0xdfa5, 0x0, 0x1);
        gbc.writeMem(0x143d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xdff5);
        EXPECT(gbc.pc(), 0x143f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0162
        gbc.setState(0x48ee, 0x2626, 0x65e0, 0x381d, 0x752, 0x1cbb, 0x0, 0x1);
        gbc.writeMem(0x48ee, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x2626);
        EXPECT(gbc.pc(), 0x48f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0163
        gbc.setState(0x23de, 0x9c81, 0xcf20, 0x2906, 0x31f4, 0xcc76, 0x0, 0x0);
        gbc.writeMem(0x23de, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x9c81);
        EXPECT(gbc.pc(), 0x23e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0164
        gbc.setState(0x5b99, 0xc3ee, 0x2af0, 0x3517, 0x966a, 0xface, 0x0, 0x0);
        gbc.writeMem(0x5b99, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xc3ee);
        EXPECT(gbc.pc(), 0x5b9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0165
        gbc.setState(0x8ea8, 0x84a7, 0xf5d0, 0x90ba, 0x156e, 0x5a25, 0x0, 0x1);
        gbc.writeMem(0x8ea8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x84a7);
        EXPECT(gbc.pc(), 0x8eaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea8), 0xcb);
        EXPECT(gbc.readMem(0x8ea9), 0x9c);
        // CB 9C 0166
        gbc.setState(0x47ce, 0xc834, 0xc170, 0x2264, 0x9088, 0x40e4, 0x1, 0x1);
        gbc.writeMem(0x47ce, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc834);
        EXPECT(gbc.pc(), 0x47d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0167
        gbc.setState(0x9a05, 0x1434, 0xc6e0, 0x2048, 0x1de0, 0x3e0, 0x1, 0x0);
        gbc.writeMem(0x9a05, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1434);
        EXPECT(gbc.pc(), 0x9a07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a05), 0xcb);
        EXPECT(gbc.readMem(0x9a06), 0x9c);
        // CB 9C 0168
        gbc.setState(0xd3a, 0x18a5, 0x45e0, 0xdb25, 0x5975, 0x7da5, 0x1, 0x0);
        gbc.writeMem(0xd3a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x18a5);
        EXPECT(gbc.pc(), 0xd3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0169
        gbc.setState(0xaaa6, 0xe24, 0x7d70, 0x1f87, 0x4e98, 0xd8e7, 0x0, 0x1);
        gbc.writeMem(0xaaa6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe24);
        EXPECT(gbc.pc(), 0xaaa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaa6), 0xcb);
        EXPECT(gbc.readMem(0xaaa7), 0x9c);
        // CB 9C 016A
        gbc.setState(0x77e5, 0x9244, 0xd210, 0x858e, 0x5fb8, 0xb1e9, 0x1, 0x0);
        gbc.writeMem(0x77e5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x9244);
        EXPECT(gbc.pc(), 0x77e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 016B
        gbc.setState(0xec8d, 0xb434, 0x7c0, 0xb99f, 0x5022, 0xaffb, 0x1, 0x0);
        gbc.writeMem(0xec8d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xb434);
        EXPECT(gbc.pc(), 0xec8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec8d), 0xcb);
        EXPECT(gbc.readMem(0xec8e), 0x9c);
        // CB 9C 016C
        gbc.setState(0xe195, 0xca51, 0xf400, 0xb34a, 0x5b88, 0xb395, 0x1, 0x1);
        gbc.writeMem(0xe195, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xca51);
        EXPECT(gbc.pc(), 0xe197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe195), 0xcb);
        EXPECT(gbc.readMem(0xe196), 0x9c);
        // CB 9C 016D
        gbc.setState(0xb83b, 0xce96, 0xa9b0, 0x1d91, 0x1c93, 0xe1eb, 0x0, 0x0);
        gbc.writeMem(0xb83b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xce96);
        EXPECT(gbc.pc(), 0xb83d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb83b), 0xcb);
        EXPECT(gbc.readMem(0xb83c), 0x9c);
        // CB 9C 016E
        gbc.setState(0xe7b8, 0x4b94, 0xec50, 0x1f49, 0xcca1, 0xc109, 0x1, 0x0);
        gbc.writeMem(0xe7b8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4b94);
        EXPECT(gbc.pc(), 0xe7ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7b8), 0xcb);
        EXPECT(gbc.readMem(0xe7b9), 0x9c);
        // CB 9C 016F
        gbc.setState(0xcd4a, 0x398b, 0x720, 0x171d, 0xb59e, 0x3c64, 0x1, 0x1);
        gbc.writeMem(0xcd4a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x398b);
        EXPECT(gbc.pc(), 0xcd4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd4a), 0xcb);
        EXPECT(gbc.readMem(0xcd4b), 0x9c);
        // CB 9C 0170
        gbc.setState(0xa2d1, 0x9c96, 0x4fb0, 0x6f9c, 0x20b9, 0x933e, 0x1, 0x0);
        gbc.writeMem(0xa2d1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x9c96);
        EXPECT(gbc.pc(), 0xa2d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2d1), 0xcb);
        EXPECT(gbc.readMem(0xa2d2), 0x9c);
        // CB 9C 0171
        gbc.setState(0x70af, 0xc6a, 0x1be0, 0x602f, 0x23f8, 0xac95, 0x0, 0x0);
        gbc.writeMem(0x70af, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xc6a);
        EXPECT(gbc.pc(), 0x70b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0172
        gbc.setState(0xff8, 0xc412, 0x9a70, 0xc1b2, 0xa4da, 0xe92a, 0x1, 0x1);
        gbc.writeMem(0xff8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xc412);
        EXPECT(gbc.pc(), 0xffa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0173
        gbc.setState(0x19ac, 0x4da7, 0x92e0, 0x498c, 0xd457, 0x6109, 0x1, 0x1);
        gbc.writeMem(0x19ac, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4da7);
        EXPECT(gbc.pc(), 0x19ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0174
        gbc.setState(0xc225, 0xac7c, 0x7f50, 0x41fa, 0x5e8c, 0x367, 0x0, 0x0);
        gbc.writeMem(0xc225, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xac7c);
        EXPECT(gbc.pc(), 0xc227);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc225), 0xcb);
        EXPECT(gbc.readMem(0xc226), 0x9c);
        // CB 9C 0175
        gbc.setState(0xe82d, 0xc513, 0xfd40, 0x8ab2, 0xdba8, 0xeb0e, 0x0, 0x1);
        gbc.writeMem(0xe82d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc513);
        EXPECT(gbc.pc(), 0xe82f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe82d), 0xcb);
        EXPECT(gbc.readMem(0xe82e), 0x9c);
        // CB 9C 0176
        gbc.setState(0xe3f3, 0xdcd4, 0x8620, 0xfd1d, 0x5ead, 0x8ebb, 0x1, 0x0);
        gbc.writeMem(0xe3f3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xdcd4);
        EXPECT(gbc.pc(), 0xe3f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3f3), 0xcb);
        EXPECT(gbc.readMem(0xe3f4), 0x9c);
        // CB 9C 0177
        gbc.setState(0x6fed, 0x6cab, 0x7fb0, 0xbadf, 0x913c, 0xad31, 0x1, 0x1);
        gbc.writeMem(0x6fed, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x6cab);
        EXPECT(gbc.pc(), 0x6fef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0178
        gbc.setState(0x9a48, 0x8f49, 0xeca0, 0x80fc, 0x3cbc, 0xcef4, 0x1, 0x1);
        gbc.writeMem(0x9a48, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8f49);
        EXPECT(gbc.pc(), 0x9a4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a48), 0xcb);
        EXPECT(gbc.readMem(0x9a49), 0x9c);
        // CB 9C 0179
        gbc.setState(0xed80, 0x3502, 0x26f0, 0xfa2, 0x487a, 0x2dd4, 0x1, 0x0);
        gbc.writeMem(0xed80, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x3502);
        EXPECT(gbc.pc(), 0xed82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed80), 0xcb);
        EXPECT(gbc.readMem(0xed81), 0x9c);
        // CB 9C 017A
        gbc.setState(0xcf37, 0xf5c1, 0x630, 0x4dda, 0xbe6d, 0x765c, 0x1, 0x0);
        gbc.writeMem(0xcf37, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf5c1);
        EXPECT(gbc.pc(), 0xcf39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf37), 0xcb);
        EXPECT(gbc.readMem(0xcf38), 0x9c);
        // CB 9C 017B
        gbc.setState(0x7a1b, 0x80e4, 0xf820, 0xa759, 0x28ba, 0xf4fa, 0x0, 0x1);
        gbc.writeMem(0x7a1b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x80e4);
        EXPECT(gbc.pc(), 0x7a1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 017C
        gbc.setState(0xd988, 0x938e, 0x9880, 0x2940, 0x5dcf, 0xaf99, 0x1, 0x1);
        gbc.writeMem(0xd988, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x938e);
        EXPECT(gbc.pc(), 0xd98a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd988), 0xcb);
        EXPECT(gbc.readMem(0xd989), 0x9c);
        // CB 9C 017D
        gbc.setState(0x7e7f, 0x1bff, 0x1f20, 0x52fb, 0x7412, 0x830a, 0x0, 0x0);
        gbc.writeMem(0x7e7f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x1bff);
        EXPECT(gbc.pc(), 0x7e81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 017F
        gbc.setState(0xcee5, 0x47c2, 0x7fc0, 0xb907, 0xa3a3, 0xa0aa, 0x0, 0x1);
        gbc.writeMem(0xcee5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x47c2);
        EXPECT(gbc.pc(), 0xcee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcee5), 0xcb);
        EXPECT(gbc.readMem(0xcee6), 0x9c);
        // CB 9C 0180
        gbc.setState(0x2979, 0x570e, 0xaa00, 0x4aa0, 0x7b7c, 0x280d, 0x0, 0x1);
        gbc.writeMem(0x2979, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x570e);
        EXPECT(gbc.pc(), 0x297b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0181
        gbc.setState(0xa61, 0x806e, 0x2db0, 0x1c4c, 0x686d, 0x9aac, 0x1, 0x0);
        gbc.writeMem(0xa61, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x806e);
        EXPECT(gbc.pc(), 0xa63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0182
        gbc.setState(0xaef, 0x15c3, 0x1fc0, 0x7dd1, 0x34f2, 0x778d, 0x1, 0x1);
        gbc.writeMem(0xaef, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x15c3);
        EXPECT(gbc.pc(), 0xaf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0183
        gbc.setState(0xa775, 0xc8a, 0x4260, 0xfa36, 0xa59c, 0xace4, 0x1, 0x1);
        gbc.writeMem(0xa775, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc8a);
        EXPECT(gbc.pc(), 0xa777);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa775), 0xcb);
        EXPECT(gbc.readMem(0xa776), 0x9c);
        // CB 9C 0184
        gbc.setState(0x43f3, 0xe2ff, 0x2310, 0x3685, 0x2e38, 0x10d9, 0x0, 0x1);
        gbc.writeMem(0x43f3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xe2ff);
        EXPECT(gbc.pc(), 0x43f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0185
        gbc.setState(0x551d, 0x72d8, 0x2aa0, 0x17b8, 0x6e11, 0x3d3, 0x1, 0x1);
        gbc.writeMem(0x551d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x72d8);
        EXPECT(gbc.pc(), 0x551f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0186
        gbc.setState(0xe7b9, 0x9959, 0xa7d0, 0x5ed4, 0x4970, 0x5972, 0x1, 0x1);
        gbc.writeMem(0xe7b9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9959);
        EXPECT(gbc.pc(), 0xe7bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7b9), 0xcb);
        EXPECT(gbc.readMem(0xe7ba), 0x9c);
        // CB 9C 0187
        gbc.setState(0x312a, 0xfc25, 0x5920, 0xd302, 0xcd85, 0x6ffa, 0x1, 0x0);
        gbc.writeMem(0x312a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xfc25);
        EXPECT(gbc.pc(), 0x312c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0188
        gbc.setState(0x4bcb, 0x1df3, 0x6030, 0xd230, 0x83fd, 0x2d56, 0x0, 0x1);
        gbc.writeMem(0x4bcb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1df3);
        EXPECT(gbc.pc(), 0x4bcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0189
        gbc.setState(0x3aad, 0x5194, 0xd410, 0x92c2, 0x3723, 0xb192, 0x1, 0x1);
        gbc.writeMem(0x3aad, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5194);
        EXPECT(gbc.pc(), 0x3aaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 018A
        gbc.setState(0x9e7b, 0xdc7d, 0xd490, 0xda85, 0x1da1, 0xa40b, 0x0, 0x0);
        gbc.writeMem(0x9e7b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xdc7d);
        EXPECT(gbc.pc(), 0x9e7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e7b), 0xcb);
        EXPECT(gbc.readMem(0x9e7c), 0x9c);
        // CB 9C 018B
        gbc.setState(0x2542, 0x1a68, 0xad60, 0xbc6b, 0x5525, 0xd071, 0x1, 0x0);
        gbc.writeMem(0x2542, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x1a68);
        EXPECT(gbc.pc(), 0x2544);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 018C
        gbc.setState(0x4af4, 0xed5e, 0xfd50, 0xbbef, 0xa76f, 0x81c7, 0x0, 0x1);
        gbc.writeMem(0x4af4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xed5e);
        EXPECT(gbc.pc(), 0x4af6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 018D
        gbc.setState(0xc717, 0x6ae3, 0xb9c0, 0x3940, 0xb0c2, 0x17d1, 0x0, 0x0);
        gbc.writeMem(0xc717, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6ae3);
        EXPECT(gbc.pc(), 0xc719);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc717), 0xcb);
        EXPECT(gbc.readMem(0xc718), 0x9c);
        // CB 9C 018E
        gbc.setState(0x2f5f, 0xec80, 0xff70, 0xce7, 0xda3f, 0x1ac6, 0x1, 0x0);
        gbc.writeMem(0x2f5f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xec80);
        EXPECT(gbc.pc(), 0x2f61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 018F
        gbc.setState(0x227, 0x766d, 0xe6c0, 0xba13, 0xbfc, 0x4056, 0x0, 0x1);
        gbc.writeMem(0x227, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x766d);
        EXPECT(gbc.pc(), 0x229);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0190
        gbc.setState(0x691c, 0xe563, 0x3340, 0x8715, 0xff3f, 0x4d21, 0x0, 0x0);
        gbc.writeMem(0x691c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe563);
        EXPECT(gbc.pc(), 0x691e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0191
        gbc.setState(0x6604, 0x79f4, 0x29b0, 0xe54d, 0x3e06, 0xb92c, 0x1, 0x1);
        gbc.writeMem(0x6604, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x79f4);
        EXPECT(gbc.pc(), 0x6606);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0192
        gbc.setState(0x2b90, 0x90b3, 0x300, 0x1b3d, 0x8936, 0x15a2, 0x1, 0x0);
        gbc.writeMem(0x2b90, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x90b3);
        EXPECT(gbc.pc(), 0x2b92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0193
        gbc.setState(0x5185, 0x611a, 0xc730, 0x190b, 0xd519, 0xf7f0, 0x1, 0x0);
        gbc.writeMem(0x5185, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x611a);
        EXPECT(gbc.pc(), 0x5187);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0194
        gbc.setState(0xde24, 0xbf5, 0x5f0, 0x4844, 0xb822, 0xf6ad, 0x0, 0x1);
        gbc.writeMem(0xde24, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xbf5);
        EXPECT(gbc.pc(), 0xde26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde24), 0xcb);
        EXPECT(gbc.readMem(0xde25), 0x9c);
        // CB 9C 0195
        gbc.setState(0xc82d, 0xaa3, 0x78d0, 0xe45a, 0x92cc, 0xe680, 0x0, 0x1);
        gbc.writeMem(0xc82d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xaa3);
        EXPECT(gbc.pc(), 0xc82f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc82d), 0xcb);
        EXPECT(gbc.readMem(0xc82e), 0x9c);
        // CB 9C 0196
        gbc.setState(0x1a99, 0xbc4a, 0x6240, 0x7b30, 0x971a, 0xc327, 0x0, 0x1);
        gbc.writeMem(0x1a99, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xbc4a);
        EXPECT(gbc.pc(), 0x1a9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0197
        gbc.setState(0x393a, 0xc1bc, 0x8690, 0xc7f6, 0xbb02, 0xb518, 0x0, 0x1);
        gbc.writeMem(0x393a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc1bc);
        EXPECT(gbc.pc(), 0x393c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0198
        gbc.setState(0x4ae2, 0x115f, 0xb5a0, 0x7036, 0xea2e, 0x50e8, 0x1, 0x0);
        gbc.writeMem(0x4ae2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x115f);
        EXPECT(gbc.pc(), 0x4ae4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0199
        gbc.setState(0xbb04, 0x5dd7, 0xb570, 0x78b5, 0xe607, 0xca64, 0x1, 0x1);
        gbc.writeMem(0xbb04, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x5dd7);
        EXPECT(gbc.pc(), 0xbb06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb04), 0xcb);
        EXPECT(gbc.readMem(0xbb05), 0x9c);
        // CB 9C 019A
        gbc.setState(0x4f12, 0xc521, 0x9250, 0x196c, 0x1a6d, 0x6c17, 0x1, 0x1);
        gbc.writeMem(0x4f12, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc521);
        EXPECT(gbc.pc(), 0x4f14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 019B
        gbc.setState(0x346a, 0x19f1, 0xcc90, 0x476a, 0x3c4f, 0x5ba6, 0x1, 0x0);
        gbc.writeMem(0x346a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x19f1);
        EXPECT(gbc.pc(), 0x346c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 019C
        gbc.setState(0x63e5, 0x986f, 0x3410, 0xbb06, 0x3665, 0xcffe, 0x1, 0x1);
        gbc.writeMem(0x63e5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x986f);
        EXPECT(gbc.pc(), 0x63e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 019D
        gbc.setState(0x167e, 0xda0, 0x1be0, 0x205d, 0x7863, 0x5eba, 0x0, 0x0);
        gbc.writeMem(0x167e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xda0);
        EXPECT(gbc.pc(), 0x1680);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 019E
        gbc.setState(0x7868, 0x289f, 0x7ea0, 0xdf58, 0xa7bc, 0x477b, 0x0, 0x0);
        gbc.writeMem(0x7868, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x289f);
        EXPECT(gbc.pc(), 0x786a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 019F
        gbc.setState(0xec9f, 0x5cd6, 0x3e0, 0x2728, 0x8270, 0x8e00, 0x1, 0x1);
        gbc.writeMem(0xec9f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5cd6);
        EXPECT(gbc.pc(), 0xeca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec9f), 0xcb);
        EXPECT(gbc.readMem(0xeca0), 0x9c);
        // CB 9C 01A0
        gbc.setState(0xe231, 0xafc6, 0xd870, 0x145, 0xb22, 0xa69d, 0x0, 0x0);
        gbc.writeMem(0xe231, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xafc6);
        EXPECT(gbc.pc(), 0xe233);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe231), 0xcb);
        EXPECT(gbc.readMem(0xe232), 0x9c);
        // CB 9C 01A1
        gbc.setState(0x70d8, 0x260b, 0x18c0, 0xaad2, 0x7817, 0xe56f, 0x0, 0x0);
        gbc.writeMem(0x70d8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x260b);
        EXPECT(gbc.pc(), 0x70da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 01A2
        gbc.setState(0x11ad, 0x3e26, 0xda90, 0x768b, 0x5917, 0xfee, 0x0, 0x0);
        gbc.writeMem(0x11ad, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3e26);
        EXPECT(gbc.pc(), 0x11af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 01A3
        gbc.setState(0x9458, 0x20b, 0x2f90, 0x64d, 0x9ba4, 0xa7b9, 0x1, 0x1);
        gbc.writeMem(0x9458, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x20b);
        EXPECT(gbc.pc(), 0x945a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9458), 0xcb);
        EXPECT(gbc.readMem(0x9459), 0x9c);
        // CB 9C 01A4
        gbc.setState(0xbaf1, 0x4f29, 0xe770, 0x1b8c, 0x6f89, 0x11dd, 0x0, 0x1);
        gbc.writeMem(0xbaf1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4f29);
        EXPECT(gbc.pc(), 0xbaf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaf1), 0xcb);
        EXPECT(gbc.readMem(0xbaf2), 0x9c);
        // CB 9C 01A5
        gbc.setState(0x491, 0xf210, 0x740, 0xde8b, 0x5fac, 0x22b, 0x0, 0x0);
        gbc.writeMem(0x491, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xf210);
        EXPECT(gbc.pc(), 0x493);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 01A6
        gbc.setState(0x587, 0xc60c, 0x71d0, 0x5959, 0x1b3, 0xf54d, 0x1, 0x0);
        gbc.writeMem(0x587, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc60c);
        EXPECT(gbc.pc(), 0x589);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 01A7
        gbc.setState(0x9f29, 0xd0f1, 0xb920, 0x1323, 0xce2a, 0x3c0b, 0x1, 0x0);
        gbc.writeMem(0x9f29, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd0f1);
        EXPECT(gbc.pc(), 0x9f2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f29), 0xcb);
        EXPECT(gbc.readMem(0x9f2a), 0x9c);
        // CB 9C 01A9
        gbc.setState(0xdf98, 0x666f, 0x8470, 0xcfd7, 0x2dc7, 0x3c21, 0x0, 0x1);
        gbc.writeMem(0xdf98, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x666f);
        EXPECT(gbc.pc(), 0xdf9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf98), 0xcb);
        EXPECT(gbc.readMem(0xdf99), 0x9c);
        // CB 9C 01AB
        gbc.setState(0xe369, 0xca47, 0xf850, 0xcd8, 0xaa85, 0xc302, 0x1, 0x0);
        gbc.writeMem(0xe369, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xca47);
        EXPECT(gbc.pc(), 0xe36b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe369), 0xcb);
        EXPECT(gbc.readMem(0xe36a), 0x9c);
        // CB 9C 01AC
        gbc.setState(0x2de4, 0x1956, 0x8780, 0xa3e, 0x9bd4, 0xeae2, 0x0, 0x1);
        gbc.writeMem(0x2de4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1956);
        EXPECT(gbc.pc(), 0x2de6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 01AD
        gbc.setState(0x4064, 0xb95e, 0xacc0, 0x5913, 0xdbc1, 0x7154, 0x0, 0x0);
        gbc.writeMem(0x4064, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb95e);
        EXPECT(gbc.pc(), 0x4066);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 01AE
        gbc.setState(0x7c3f, 0x3f4c, 0x6d80, 0xd3b6, 0x8aa2, 0xac72, 0x0, 0x0);
        gbc.writeMem(0x7c3f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x3f4c);
        EXPECT(gbc.pc(), 0x7c41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 01AF
        gbc.setState(0xd628, 0xa728, 0x7380, 0xeaf4, 0x45e, 0x84b7, 0x1, 0x0);
        gbc.writeMem(0xd628, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa728);
        EXPECT(gbc.pc(), 0xd62a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd628), 0xcb);
        EXPECT(gbc.readMem(0xd629), 0x9c);
        // CB 9C 01B0
        gbc.setState(0xd81b, 0x64ce, 0xda50, 0x26fb, 0xd5f, 0x8663, 0x1, 0x1);
        gbc.writeMem(0xd81b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x64ce);
        EXPECT(gbc.pc(), 0xd81d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd81b), 0xcb);
        EXPECT(gbc.readMem(0xd81c), 0x9c);
        // CB 9C 01B1
        gbc.setState(0x7831, 0x90b7, 0x4580, 0x3c65, 0xffb3, 0x2e53, 0x1, 0x0);
        gbc.writeMem(0x7831, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x90b7);
        EXPECT(gbc.pc(), 0x7833);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 01B2
        gbc.setState(0xe6ca, 0x4bcd, 0x9650, 0xd2ed, 0x3f37, 0xc046, 0x0, 0x0);
        gbc.writeMem(0xe6ca, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x4bcd);
        EXPECT(gbc.pc(), 0xe6cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6ca), 0xcb);
        EXPECT(gbc.readMem(0xe6cb), 0x9c);
        // CB 9C 01B3
        gbc.setState(0x96e8, 0x1df9, 0x1a50, 0xb07a, 0x8f29, 0x7a19, 0x1, 0x0);
        gbc.writeMem(0x96e8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x1df9);
        EXPECT(gbc.pc(), 0x96ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96e8), 0xcb);
        EXPECT(gbc.readMem(0x96e9), 0x9c);
        // CB 9C 01B4
        gbc.setState(0x3e9b, 0xac1f, 0xcb20, 0xe14c, 0xf11, 0x590e, 0x0, 0x0);
        gbc.writeMem(0x3e9b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xac1f);
        EXPECT(gbc.pc(), 0x3e9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 01B6
        gbc.setState(0xee9e, 0x4ccc, 0xc2d0, 0x8a78, 0x80dc, 0x2183, 0x0, 0x1);
        gbc.writeMem(0xee9e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4ccc);
        EXPECT(gbc.pc(), 0xeea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee9e), 0xcb);
        EXPECT(gbc.readMem(0xee9f), 0x9c);
        // CB 9C 01B7
        gbc.setState(0xe61c, 0x1569, 0x49a0, 0xc202, 0x7eb6, 0x4045, 0x1, 0x1);
        gbc.writeMem(0xe61c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x1569);
        EXPECT(gbc.pc(), 0xe61e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe61c), 0xcb);
        EXPECT(gbc.readMem(0xe61d), 0x9c);
        // CB 9C 01B8
        gbc.setState(0xbb5, 0x4b61, 0x2ee0, 0x832, 0x91a3, 0xfd55, 0x0, 0x0);
        gbc.writeMem(0xbb5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4b61);
        EXPECT(gbc.pc(), 0xbb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 01B9
        gbc.setState(0x9564, 0xc33b, 0x3ee0, 0xb6ce, 0x8988, 0xbda8, 0x0, 0x1);
        gbc.writeMem(0x9564, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc33b);
        EXPECT(gbc.pc(), 0x9566);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9564), 0xcb);
        EXPECT(gbc.readMem(0x9565), 0x9c);
        // CB 9C 01BA
        gbc.setState(0x417d, 0xa2b6, 0x4950, 0x2ff6, 0xbc13, 0x7cd3, 0x1, 0x0);
        gbc.writeMem(0x417d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xa2b6);
        EXPECT(gbc.pc(), 0x417f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 01BB
        gbc.setState(0x1515, 0xe47c, 0xfc80, 0x7dd2, 0x1943, 0xfacc, 0x0, 0x0);
        gbc.writeMem(0x1515, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xe47c);
        EXPECT(gbc.pc(), 0x1517);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 01BC
        gbc.setState(0xb2c4, 0x2a9a, 0x2290, 0xc9eb, 0xc8cd, 0xba2, 0x1, 0x1);
        gbc.writeMem(0xb2c4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x2a9a);
        EXPECT(gbc.pc(), 0xb2c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2c4), 0xcb);
        EXPECT(gbc.readMem(0xb2c5), 0x9c);
        // CB 9C 01BD
        gbc.setState(0xb311, 0x62de, 0x360, 0x1e4d, 0x7673, 0x6f90, 0x0, 0x0);
        gbc.writeMem(0xb311, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x62de);
        EXPECT(gbc.pc(), 0xb313);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb311), 0xcb);
        EXPECT(gbc.readMem(0xb312), 0x9c);
        // CB 9C 01BE
        gbc.setState(0x56e3, 0xcca, 0x6080, 0x33ec, 0x2493, 0xed00, 0x0, 0x0);
        gbc.writeMem(0x56e3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xcca);
        EXPECT(gbc.pc(), 0x56e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 01BF
        gbc.setState(0x315c, 0x55bf, 0xedd0, 0xbd52, 0x6ab7, 0x2cc6, 0x1, 0x0);
        gbc.writeMem(0x315c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x55bf);
        EXPECT(gbc.pc(), 0x315e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 01C0
        gbc.setState(0xd2c3, 0xc7ff, 0x90a0, 0x1d9c, 0xb0a6, 0xf5f1, 0x1, 0x1);
        gbc.writeMem(0xd2c3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc7ff);
        EXPECT(gbc.pc(), 0xd2c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2c3), 0xcb);
        EXPECT(gbc.readMem(0xd2c4), 0x9c);
        // CB 9C 01C1
        gbc.setState(0xbad8, 0x5402, 0xb10, 0x9f35, 0x757c, 0xbafc, 0x1, 0x0);
        gbc.writeMem(0xbad8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x5402);
        EXPECT(gbc.pc(), 0xbada);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbad8), 0xcb);
        EXPECT(gbc.readMem(0xbad9), 0x9c);
        // CB 9C 01C3
        gbc.setState(0x91e2, 0xeb64, 0xe7e0, 0x2dc2, 0x475d, 0x1572, 0x1, 0x1);
        gbc.writeMem(0x91e2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xeb64);
        EXPECT(gbc.pc(), 0x91e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91e2), 0xcb);
        EXPECT(gbc.readMem(0x91e3), 0x9c);
        // CB 9C 01C4
        gbc.setState(0xc0bb, 0x1119, 0xb3c0, 0xb792, 0x6b74, 0xf5b9, 0x1, 0x0);
        gbc.writeMem(0xc0bb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1119);
        EXPECT(gbc.pc(), 0xc0bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0bb), 0xcb);
        EXPECT(gbc.readMem(0xc0bc), 0x9c);
        // CB 9C 01C5
        gbc.setState(0xd108, 0xd544, 0xc1d0, 0xac75, 0xc942, 0x3d1a, 0x0, 0x0);
        gbc.writeMem(0xd108, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xd544);
        EXPECT(gbc.pc(), 0xd10a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd108), 0xcb);
        EXPECT(gbc.readMem(0xd109), 0x9c);
        // CB 9C 01C6
        gbc.setState(0xd853, 0xe175, 0xb9f0, 0xb346, 0x6750, 0xee2d, 0x0, 0x0);
        gbc.writeMem(0xd853, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe175);
        EXPECT(gbc.pc(), 0xd855);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd853), 0xcb);
        EXPECT(gbc.readMem(0xd854), 0x9c);
        // CB 9C 01C7
        gbc.setState(0xaf79, 0x19d9, 0xd850, 0xdd0b, 0x4bc6, 0xbf67, 0x1, 0x1);
        gbc.writeMem(0xaf79, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x19d9);
        EXPECT(gbc.pc(), 0xaf7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf79), 0xcb);
        EXPECT(gbc.readMem(0xaf7a), 0x9c);
        // CB 9C 01C8
        gbc.setState(0xec44, 0x4689, 0x4500, 0x6f9e, 0x5ab2, 0xd1c1, 0x1, 0x0);
        gbc.writeMem(0xec44, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4689);
        EXPECT(gbc.pc(), 0xec46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec44), 0xcb);
        EXPECT(gbc.readMem(0xec45), 0x9c);
        // CB 9C 01C9
        gbc.setState(0xe050, 0xb4ea, 0xbc30, 0x4070, 0x5c23, 0xe108, 0x1, 0x1);
        gbc.writeMem(0xe050, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb4ea);
        EXPECT(gbc.pc(), 0xe052);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe050), 0xcb);
        EXPECT(gbc.readMem(0xe051), 0x9c);
        // CB 9C 01CA
        gbc.setState(0x81f6, 0xd3d1, 0x4360, 0x64, 0x77b5, 0x5d73, 0x1, 0x1);
        gbc.writeMem(0x81f6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd3d1);
        EXPECT(gbc.pc(), 0x81f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81f6), 0xcb);
        EXPECT(gbc.readMem(0x81f7), 0x9c);
        // CB 9C 01CB
        gbc.setState(0x64b1, 0x1f98, 0xa930, 0x1740, 0xa19e, 0x2123, 0x1, 0x0);
        gbc.writeMem(0x64b1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x1f98);
        EXPECT(gbc.pc(), 0x64b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 01CC
        gbc.setState(0xab35, 0xa119, 0x37c0, 0xe257, 0xf12c, 0x5eda, 0x1, 0x1);
        gbc.writeMem(0xab35, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xa119);
        EXPECT(gbc.pc(), 0xab37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab35), 0xcb);
        EXPECT(gbc.readMem(0xab36), 0x9c);
        // CB 9C 01CD
        gbc.setState(0x3f5c, 0xe0ba, 0xf420, 0x4570, 0x94ad, 0xae02, 0x0, 0x1);
        gbc.writeMem(0x3f5c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe0ba);
        EXPECT(gbc.pc(), 0x3f5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 01CE
        gbc.setState(0x1f05, 0x94db, 0x92d0, 0x82b2, 0x6507, 0xa419, 0x1, 0x0);
        gbc.writeMem(0x1f05, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x94db);
        EXPECT(gbc.pc(), 0x1f07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 01CF
        gbc.setState(0x9274, 0xc3e3, 0x3450, 0x85e2, 0x5f10, 0xb73c, 0x0, 0x1);
        gbc.writeMem(0x9274, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xc3e3);
        EXPECT(gbc.pc(), 0x9276);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9274), 0xcb);
        EXPECT(gbc.readMem(0x9275), 0x9c);
        // CB 9C 01D0
        gbc.setState(0xb6b0, 0x9903, 0x9910, 0x2493, 0x273d, 0xc7a5, 0x0, 0x1);
        gbc.writeMem(0xb6b0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x9903);
        EXPECT(gbc.pc(), 0xb6b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6b0), 0xcb);
        EXPECT(gbc.readMem(0xb6b1), 0x9c);
        // CB 9C 01D1
        gbc.setState(0x5bc, 0xffee, 0x1950, 0x25ec, 0x6632, 0x3d38, 0x0, 0x1);
        gbc.writeMem(0x5bc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xffee);
        EXPECT(gbc.pc(), 0x5be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 01D2
        gbc.setState(0x4fdb, 0xb406, 0xec00, 0xb8ba, 0xc000, 0x9cdb, 0x1, 0x1);
        gbc.writeMem(0x4fdb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb406);
        EXPECT(gbc.pc(), 0x4fdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 01D3
        gbc.setState(0x9bbe, 0xa118, 0xb2f0, 0x5cc2, 0x6540, 0x2a71, 0x1, 0x0);
        gbc.writeMem(0x9bbe, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa118);
        EXPECT(gbc.pc(), 0x9bc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bbe), 0xcb);
        EXPECT(gbc.readMem(0x9bbf), 0x9c);
        // CB 9C 01D4
        gbc.setState(0xac06, 0xd58c, 0x4d30, 0xec53, 0xf179, 0x5a1b, 0x0, 0x1);
        gbc.writeMem(0xac06, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xd58c);
        EXPECT(gbc.pc(), 0xac08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac06), 0xcb);
        EXPECT(gbc.readMem(0xac07), 0x9c);
        // CB 9C 01D5
        gbc.setState(0x3a3d, 0xb9a4, 0xa440, 0x8904, 0x174c, 0x8361, 0x1, 0x1);
        gbc.writeMem(0x3a3d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb9a4);
        EXPECT(gbc.pc(), 0x3a3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 01D6
        gbc.setState(0x2d11, 0x3898, 0x9ad0, 0x7a74, 0xf483, 0x5b5c, 0x1, 0x1);
        gbc.writeMem(0x2d11, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x3898);
        EXPECT(gbc.pc(), 0x2d13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 01D7
        gbc.setState(0x31fd, 0x7d0a, 0x210, 0x51b5, 0x6a4c, 0x9f55, 0x0, 0x0);
        gbc.writeMem(0x31fd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x7d0a);
        EXPECT(gbc.pc(), 0x31ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 01D8
        gbc.setState(0xbb72, 0x5387, 0x6b60, 0xebd5, 0x7619, 0x2b91, 0x1, 0x1);
        gbc.writeMem(0xbb72, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x5387);
        EXPECT(gbc.pc(), 0xbb74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb72), 0xcb);
        EXPECT(gbc.readMem(0xbb73), 0x9c);
        // CB 9C 01D9
        gbc.setState(0xc5c1, 0x2bf0, 0x9710, 0x560a, 0xeb67, 0x77f4, 0x0, 0x1);
        gbc.writeMem(0xc5c1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x2bf0);
        EXPECT(gbc.pc(), 0xc5c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5c1), 0xcb);
        EXPECT(gbc.readMem(0xc5c2), 0x9c);
        // CB 9C 01DA
        gbc.setState(0xd8cd, 0xefa, 0xec10, 0x341c, 0x629c, 0xe8a9, 0x0, 0x1);
        gbc.writeMem(0xd8cd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xefa);
        EXPECT(gbc.pc(), 0xd8cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8cd), 0xcb);
        EXPECT(gbc.readMem(0xd8ce), 0x9c);
        // CB 9C 01DB
        gbc.setState(0xd043, 0x42f4, 0xe430, 0xb664, 0x2612, 0x1106, 0x1, 0x1);
        gbc.writeMem(0xd043, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x42f4);
        EXPECT(gbc.pc(), 0xd045);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd043), 0xcb);
        EXPECT(gbc.readMem(0xd044), 0x9c);
        // CB 9C 01DC
        gbc.setState(0x1fa0, 0xa0e4, 0x12f0, 0x3691, 0x2c09, 0xc63f, 0x1, 0x0);
        gbc.writeMem(0x1fa0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa0e4);
        EXPECT(gbc.pc(), 0x1fa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 01DD
        gbc.setState(0x2c46, 0xc27c, 0x7170, 0x4e47, 0x5a0e, 0x81f6, 0x1, 0x0);
        gbc.writeMem(0x2c46, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xc27c);
        EXPECT(gbc.pc(), 0x2c48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 01DE
        gbc.setState(0xa737, 0xcc80, 0xc3e0, 0x2b77, 0xe7e0, 0x79d8, 0x1, 0x1);
        gbc.writeMem(0xa737, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xcc80);
        EXPECT(gbc.pc(), 0xa739);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa737), 0xcb);
        EXPECT(gbc.readMem(0xa738), 0x9c);
        // CB 9C 01DF
        gbc.setState(0xd763, 0x3346, 0x2650, 0x6ff9, 0xff7, 0xef43, 0x1, 0x1);
        gbc.writeMem(0xd763, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3346);
        EXPECT(gbc.pc(), 0xd765);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd763), 0xcb);
        EXPECT(gbc.readMem(0xd764), 0x9c);
        // CB 9C 01E0
        gbc.setState(0xc690, 0xeb0b, 0xc460, 0xc7dd, 0xffe5, 0xc356, 0x0, 0x1);
        gbc.writeMem(0xc690, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xeb0b);
        EXPECT(gbc.pc(), 0xc692);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc690), 0xcb);
        EXPECT(gbc.readMem(0xc691), 0x9c);
        // CB 9C 01E1
        gbc.setState(0x67, 0x788e, 0x89a0, 0x4a84, 0xb5dd, 0xd203, 0x0, 0x1);
        gbc.writeMem(0x67, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x788e);
        EXPECT(gbc.pc(), 0x69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 01E2
        gbc.setState(0xb547, 0x6a41, 0x1f60, 0x88ce, 0x25cc, 0xefbb, 0x1, 0x1);
        gbc.writeMem(0xb547, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6a41);
        EXPECT(gbc.pc(), 0xb549);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb547), 0xcb);
        EXPECT(gbc.readMem(0xb548), 0x9c);
        // CB 9C 01E3
        gbc.setState(0xe349, 0xf9c9, 0x5220, 0x744b, 0xed72, 0xcc8d, 0x1, 0x1);
        gbc.writeMem(0xe349, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf9c9);
        EXPECT(gbc.pc(), 0xe34b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe349), 0xcb);
        EXPECT(gbc.readMem(0xe34a), 0x9c);
        // CB 9C 01E4
        gbc.setState(0x78d6, 0x8f8c, 0x9e80, 0x30b6, 0xc53d, 0x4, 0x0, 0x0);
        gbc.writeMem(0x78d6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x8f8c);
        EXPECT(gbc.pc(), 0x78d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 01E5
        gbc.setState(0x292a, 0x43fa, 0x8b20, 0x8384, 0x8362, 0x6f22, 0x1, 0x0);
        gbc.writeMem(0x292a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x43fa);
        EXPECT(gbc.pc(), 0x292c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 01E6
        gbc.setState(0x193, 0x92b1, 0xfe70, 0x5bd8, 0xd22e, 0xb4dc, 0x0, 0x0);
        gbc.writeMem(0x193, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x92b1);
        EXPECT(gbc.pc(), 0x195);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 01E7
        gbc.setState(0xad6a, 0x4c3c, 0x9590, 0x9011, 0x1675, 0x3812, 0x0, 0x0);
        gbc.writeMem(0xad6a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x4c3c);
        EXPECT(gbc.pc(), 0xad6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad6a), 0xcb);
        EXPECT(gbc.readMem(0xad6b), 0x9c);
        // CB 9C 01E8
        gbc.setState(0x5282, 0x46ac, 0xfc30, 0x69e1, 0x6c73, 0x3e4f, 0x0, 0x0);
        gbc.writeMem(0x5282, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x46ac);
        EXPECT(gbc.pc(), 0x5284);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 01E9
        gbc.setState(0xa373, 0x3c9, 0x6360, 0xd989, 0x3f8a, 0x2841, 0x0, 0x1);
        gbc.writeMem(0xa373, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x3c9);
        EXPECT(gbc.pc(), 0xa375);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa373), 0xcb);
        EXPECT(gbc.readMem(0xa374), 0x9c);
        // CB 9C 01EA
        gbc.setState(0x14b2, 0x9f42, 0x96f0, 0xc0a6, 0xdb6e, 0x5e90, 0x1, 0x0);
        gbc.writeMem(0x14b2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9f42);
        EXPECT(gbc.pc(), 0x14b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 01EB
        gbc.setState(0x2b6c, 0xf07d, 0x4610, 0xc4fa, 0xb1b4, 0xe6b3, 0x0, 0x1);
        gbc.writeMem(0x2b6c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xf07d);
        EXPECT(gbc.pc(), 0x2b6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 01EC
        gbc.setState(0xe597, 0x9421, 0x4800, 0x5458, 0x80ea, 0x9ecb, 0x0, 0x1);
        gbc.writeMem(0xe597, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x9421);
        EXPECT(gbc.pc(), 0xe599);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe597), 0xcb);
        EXPECT(gbc.readMem(0xe598), 0x9c);
        // CB 9C 01ED
        gbc.setState(0xae69, 0x4e8f, 0x3b50, 0x30fa, 0x6ba7, 0x376e, 0x1, 0x1);
        gbc.writeMem(0xae69, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4e8f);
        EXPECT(gbc.pc(), 0xae6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae69), 0xcb);
        EXPECT(gbc.readMem(0xae6a), 0x9c);
        // CB 9C 01EE
        gbc.setState(0x9203, 0xa805, 0x1470, 0xf403, 0x5e6d, 0xa8c1, 0x0, 0x1);
        gbc.writeMem(0x9203, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa805);
        EXPECT(gbc.pc(), 0x9205);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9203), 0xcb);
        EXPECT(gbc.readMem(0x9204), 0x9c);
        // CB 9C 01EF
        gbc.setState(0x94eb, 0xcb16, 0x3b70, 0xb506, 0x863d, 0xfcd7, 0x0, 0x1);
        gbc.writeMem(0x94eb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xcb16);
        EXPECT(gbc.pc(), 0x94ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94eb), 0xcb);
        EXPECT(gbc.readMem(0x94ec), 0x9c);
        // CB 9C 01F0
        gbc.setState(0x9828, 0x1eed, 0xba40, 0x9dcf, 0xb48c, 0x20fa, 0x1, 0x0);
        gbc.writeMem(0x9828, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x1eed);
        EXPECT(gbc.pc(), 0x982a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9828), 0xcb);
        EXPECT(gbc.readMem(0x9829), 0x9c);
        // CB 9C 01F1
        gbc.setState(0xe023, 0x360c, 0x6940, 0x2048, 0xb2b1, 0x93ea, 0x0, 0x1);
        gbc.writeMem(0xe023, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x360c);
        EXPECT(gbc.pc(), 0xe025);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe023), 0xcb);
        EXPECT(gbc.readMem(0xe024), 0x9c);
        // CB 9C 01F2
        gbc.setState(0xe62c, 0x892, 0x3400, 0xdda1, 0xa2b5, 0xa4e8, 0x0, 0x1);
        gbc.writeMem(0xe62c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x892);
        EXPECT(gbc.pc(), 0xe62e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe62c), 0xcb);
        EXPECT(gbc.readMem(0xe62d), 0x9c);
        // CB 9C 01F4
        gbc.setState(0x38f5, 0x3460, 0x6360, 0x153d, 0x34f0, 0x589b, 0x1, 0x0);
        gbc.writeMem(0x38f5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x3460);
        EXPECT(gbc.pc(), 0x38f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 01F5
        gbc.setState(0x588, 0x6b64, 0x52d0, 0xc7e0, 0xfe01, 0x6842, 0x0, 0x1);
        gbc.writeMem(0x588, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x6b64);
        EXPECT(gbc.pc(), 0x58a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 01F6
        gbc.setState(0xbd85, 0x76e9, 0xfb40, 0xe577, 0x3d3c, 0xdffd, 0x1, 0x0);
        gbc.writeMem(0xbd85, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x76e9);
        EXPECT(gbc.pc(), 0xbd87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd85), 0xcb);
        EXPECT(gbc.readMem(0xbd86), 0x9c);
        // CB 9C 01F7
        gbc.setState(0x189b, 0x2814, 0x32a0, 0xde00, 0x8958, 0x2d6f, 0x0, 0x0);
        gbc.writeMem(0x189b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x2814);
        EXPECT(gbc.pc(), 0x189d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 01F8
        gbc.setState(0x2c0e, 0x7266, 0xb0a0, 0x8ab0, 0xb38e, 0x2da4, 0x1, 0x1);
        gbc.writeMem(0x2c0e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7266);
        EXPECT(gbc.pc(), 0x2c10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 01FA
        gbc.setState(0xd28c, 0xa80a, 0xf020, 0xd011, 0x5060, 0x69ad, 0x1, 0x1);
        gbc.writeMem(0xd28c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xa80a);
        EXPECT(gbc.pc(), 0xd28e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd28c), 0xcb);
        EXPECT(gbc.readMem(0xd28d), 0x9c);
        // CB 9C 01FB
        gbc.setState(0x5cfd, 0xb0e8, 0xf50, 0x62a6, 0x5004, 0x5ae5, 0x0, 0x0);
        gbc.writeMem(0x5cfd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xb0e8);
        EXPECT(gbc.pc(), 0x5cff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 01FC
        gbc.setState(0xa63b, 0xf468, 0x6930, 0x9ec8, 0x8103, 0xce82, 0x1, 0x1);
        gbc.writeMem(0xa63b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xf468);
        EXPECT(gbc.pc(), 0xa63d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa63b), 0xcb);
        EXPECT(gbc.readMem(0xa63c), 0x9c);
        // CB 9C 01FD
        gbc.setState(0x91b5, 0x810f, 0x2280, 0x253f, 0x15c3, 0xa75d, 0x1, 0x0);
        gbc.writeMem(0x91b5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x810f);
        EXPECT(gbc.pc(), 0x91b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91b5), 0xcb);
        EXPECT(gbc.readMem(0x91b6), 0x9c);
        // CB 9C 01FE
        gbc.setState(0xa66b, 0x376a, 0xafb0, 0x667d, 0xa47b, 0x38cb, 0x0, 0x1);
        gbc.writeMem(0xa66b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x376a);
        EXPECT(gbc.pc(), 0xa66d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa66b), 0xcb);
        EXPECT(gbc.readMem(0xa66c), 0x9c);
        // CB 9C 01FF
        gbc.setState(0xea1e, 0x8bb2, 0x230, 0xc681, 0xad53, 0x8470, 0x0, 0x0);
        gbc.writeMem(0xea1e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x8bb2);
        EXPECT(gbc.pc(), 0xea20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea1e), 0xcb);
        EXPECT(gbc.readMem(0xea1f), 0x9c);
        // CB 9C 0200
        gbc.setState(0x6ccd, 0xf2e9, 0xf230, 0xca64, 0x7279, 0x7701, 0x0, 0x1);
        gbc.writeMem(0x6ccd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf2e9);
        EXPECT(gbc.pc(), 0x6ccf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0201
        gbc.setState(0xb731, 0xffd3, 0x5b10, 0x1abc, 0x61ba, 0x97a5, 0x0, 0x1);
        gbc.writeMem(0xb731, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xffd3);
        EXPECT(gbc.pc(), 0xb733);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb731), 0xcb);
        EXPECT(gbc.readMem(0xb732), 0x9c);
        // CB 9C 0202
        gbc.setState(0x7cb2, 0xfc04, 0x8830, 0xe65a, 0xe1fd, 0xeb28, 0x0, 0x1);
        gbc.writeMem(0x7cb2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xfc04);
        EXPECT(gbc.pc(), 0x7cb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0203
        gbc.setState(0x93de, 0x22c6, 0x93e0, 0x85c2, 0x76ae, 0x7007, 0x0, 0x1);
        gbc.writeMem(0x93de, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x22c6);
        EXPECT(gbc.pc(), 0x93e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93de), 0xcb);
        EXPECT(gbc.readMem(0x93df), 0x9c);
        // CB 9C 0204
        gbc.setState(0x8c23, 0x879, 0x9730, 0x7bc7, 0xe98f, 0x6bcd, 0x1, 0x1);
        gbc.writeMem(0x8c23, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x879);
        EXPECT(gbc.pc(), 0x8c25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c23), 0xcb);
        EXPECT(gbc.readMem(0x8c24), 0x9c);
        // CB 9C 0205
        gbc.setState(0x13bc, 0x728b, 0x66b0, 0xd5a7, 0x1b8d, 0xc175, 0x0, 0x1);
        gbc.writeMem(0x13bc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x728b);
        EXPECT(gbc.pc(), 0x13be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0207
        gbc.setState(0x6a11, 0x702f, 0xf1a0, 0x5fd4, 0x142f, 0xb193, 0x0, 0x0);
        gbc.writeMem(0x6a11, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x702f);
        EXPECT(gbc.pc(), 0x6a13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0208
        gbc.setState(0x1cd4, 0x2e51, 0x2760, 0xbff1, 0x11f2, 0x57d0, 0x0, 0x1);
        gbc.writeMem(0x1cd4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x2e51);
        EXPECT(gbc.pc(), 0x1cd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0209
        gbc.setState(0x10f5, 0x8608, 0x8ce0, 0x425d, 0x23e0, 0x8b7a, 0x1, 0x0);
        gbc.writeMem(0x10f5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8608);
        EXPECT(gbc.pc(), 0x10f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 020A
        gbc.setState(0x7e09, 0xbe55, 0xada0, 0x40e, 0xff9d, 0x416e, 0x1, 0x0);
        gbc.writeMem(0x7e09, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xbe55);
        EXPECT(gbc.pc(), 0x7e0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 020B
        gbc.setState(0x7511, 0x586e, 0xbc30, 0x21c3, 0xc9f4, 0x4f86, 0x1, 0x0);
        gbc.writeMem(0x7511, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x586e);
        EXPECT(gbc.pc(), 0x7513);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 020C
        gbc.setState(0x744b, 0x572a, 0xf770, 0x8704, 0x15da, 0x4d58, 0x0, 0x1);
        gbc.writeMem(0x744b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x572a);
        EXPECT(gbc.pc(), 0x744d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 020D
        gbc.setState(0xe1d2, 0x511, 0x94a0, 0x51e4, 0xdd97, 0x5903, 0x0, 0x1);
        gbc.writeMem(0xe1d2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x511);
        EXPECT(gbc.pc(), 0xe1d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1d2), 0xcb);
        EXPECT(gbc.readMem(0xe1d3), 0x9c);
        // CB 9C 020E
        gbc.setState(0x60d7, 0xff94, 0xb6d0, 0x5b09, 0xed63, 0x831d, 0x1, 0x1);
        gbc.writeMem(0x60d7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xff94);
        EXPECT(gbc.pc(), 0x60d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 020F
        gbc.setState(0xc9e8, 0x1ccd, 0x9310, 0x11bc, 0xeba, 0x48ae, 0x0, 0x1);
        gbc.writeMem(0xc9e8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x1ccd);
        EXPECT(gbc.pc(), 0xc9ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9e8), 0xcb);
        EXPECT(gbc.readMem(0xc9e9), 0x9c);
        // CB 9C 0211
        gbc.setState(0x4622, 0x6c49, 0x8ff0, 0xc49f, 0x262d, 0xfb18, 0x1, 0x1);
        gbc.writeMem(0x4622, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6c49);
        EXPECT(gbc.pc(), 0x4624);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0212
        gbc.setState(0x1f7f, 0x9b48, 0x5940, 0x72ab, 0x871c, 0x6b85, 0x0, 0x0);
        gbc.writeMem(0x1f7f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x9b48);
        EXPECT(gbc.pc(), 0x1f81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0213
        gbc.setState(0x2e06, 0xa670, 0x5bc0, 0x5894, 0xd151, 0x25cf, 0x0, 0x0);
        gbc.writeMem(0x2e06, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa670);
        EXPECT(gbc.pc(), 0x2e08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0214
        gbc.setState(0x9aa, 0x78cd, 0xf3c0, 0x8801, 0xaa2f, 0x3abb, 0x0, 0x0);
        gbc.writeMem(0x9aa, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x78cd);
        EXPECT(gbc.pc(), 0x9ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0215
        gbc.setState(0x4f9b, 0x410a, 0x7d90, 0xa86d, 0x321b, 0x575f, 0x1, 0x1);
        gbc.writeMem(0x4f9b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x410a);
        EXPECT(gbc.pc(), 0x4f9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0216
        gbc.setState(0x9fc2, 0xba74, 0xee0, 0x6b6b, 0x21ad, 0x1537, 0x1, 0x1);
        gbc.writeMem(0x9fc2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xba74);
        EXPECT(gbc.pc(), 0x9fc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fc2), 0xcb);
        EXPECT(gbc.readMem(0x9fc3), 0x9c);
        // CB 9C 0217
        gbc.setState(0x6e4b, 0xd75f, 0xd9a0, 0xd786, 0x7169, 0x94b4, 0x1, 0x1);
        gbc.writeMem(0x6e4b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xd75f);
        EXPECT(gbc.pc(), 0x6e4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0218
        gbc.setState(0xca78, 0x3d29, 0xeb80, 0xac8f, 0x2442, 0xd075, 0x0, 0x0);
        gbc.writeMem(0xca78, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x3d29);
        EXPECT(gbc.pc(), 0xca7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca78), 0xcb);
        EXPECT(gbc.readMem(0xca79), 0x9c);
        // CB 9C 0219
        gbc.setState(0x9053, 0xad2d, 0x8c70, 0x2f76, 0xc039, 0x3190, 0x0, 0x0);
        gbc.writeMem(0x9053, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xad2d);
        EXPECT(gbc.pc(), 0x9055);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9053), 0xcb);
        EXPECT(gbc.readMem(0x9054), 0x9c);
        // CB 9C 021A
        gbc.setState(0xbc2b, 0xd4e8, 0xf220, 0x554f, 0x156a, 0xadd6, 0x1, 0x0);
        gbc.writeMem(0xbc2b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xd4e8);
        EXPECT(gbc.pc(), 0xbc2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc2b), 0xcb);
        EXPECT(gbc.readMem(0xbc2c), 0x9c);
        // CB 9C 021C
        gbc.setState(0xd329, 0x224, 0x6bc0, 0x4343, 0x3f18, 0x20f8, 0x1, 0x1);
        gbc.writeMem(0xd329, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x224);
        EXPECT(gbc.pc(), 0xd32b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd329), 0xcb);
        EXPECT(gbc.readMem(0xd32a), 0x9c);
        // CB 9C 021D
        gbc.setState(0x64f3, 0xa721, 0xa890, 0x35ee, 0xaeaf, 0x4d7d, 0x0, 0x1);
        gbc.writeMem(0x64f3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa721);
        EXPECT(gbc.pc(), 0x64f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 021E
        gbc.setState(0x26f3, 0xd0e1, 0xaf90, 0xdfaf, 0xe396, 0x5854, 0x1, 0x1);
        gbc.writeMem(0x26f3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd0e1);
        EXPECT(gbc.pc(), 0x26f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 021F
        gbc.setState(0x8393, 0x5346, 0xc790, 0xf145, 0xadf2, 0x6202, 0x1, 0x1);
        gbc.writeMem(0x8393, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x5346);
        EXPECT(gbc.pc(), 0x8395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8393), 0xcb);
        EXPECT(gbc.readMem(0x8394), 0x9c);
        // CB 9C 0220
        gbc.setState(0xa72a, 0xe6cd, 0xb290, 0x9b07, 0x4355, 0x45e8, 0x0, 0x0);
        gbc.writeMem(0xa72a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xe6cd);
        EXPECT(gbc.pc(), 0xa72c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa72a), 0xcb);
        EXPECT(gbc.readMem(0xa72b), 0x9c);
        // CB 9C 0221
        gbc.setState(0x2e35, 0x194a, 0x87e0, 0xef49, 0xaaa8, 0x51fd, 0x0, 0x0);
        gbc.writeMem(0x2e35, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x194a);
        EXPECT(gbc.pc(), 0x2e37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0222
        gbc.setState(0xe065, 0xb0c8, 0x2500, 0x2330, 0xfcb2, 0x8566, 0x1, 0x1);
        gbc.writeMem(0xe065, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xb0c8);
        EXPECT(gbc.pc(), 0xe067);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe065), 0xcb);
        EXPECT(gbc.readMem(0xe066), 0x9c);
        // CB 9C 0223
        gbc.setState(0x43af, 0xa4de, 0x6b10, 0x539e, 0x3e6, 0x3782, 0x1, 0x0);
        gbc.writeMem(0x43af, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa4de);
        EXPECT(gbc.pc(), 0x43b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0224
        gbc.setState(0x84b5, 0x394, 0xb430, 0x490c, 0xade, 0x2da3, 0x1, 0x0);
        gbc.writeMem(0x84b5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x394);
        EXPECT(gbc.pc(), 0x84b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84b5), 0xcb);
        EXPECT(gbc.readMem(0x84b6), 0x9c);
        // CB 9C 0225
        gbc.setState(0x4707, 0x5933, 0xd050, 0x127d, 0x9c73, 0x1736, 0x1, 0x1);
        gbc.writeMem(0x4707, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x5933);
        EXPECT(gbc.pc(), 0x4709);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0226
        gbc.setState(0xd97, 0xf95b, 0x5660, 0x3ce0, 0x5a07, 0x58d7, 0x0, 0x1);
        gbc.writeMem(0xd97, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf95b);
        EXPECT(gbc.pc(), 0xd99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0227
        gbc.setState(0x85d0, 0x5b7b, 0x9830, 0x2678, 0xe176, 0x431b, 0x0, 0x1);
        gbc.writeMem(0x85d0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x5b7b);
        EXPECT(gbc.pc(), 0x85d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85d0), 0xcb);
        EXPECT(gbc.readMem(0x85d1), 0x9c);
        // CB 9C 0228
        gbc.setState(0xb161, 0xbd4, 0x21f0, 0x1efa, 0x1075, 0x22bc, 0x1, 0x1);
        gbc.writeMem(0xb161, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xbd4);
        EXPECT(gbc.pc(), 0xb163);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb161), 0xcb);
        EXPECT(gbc.readMem(0xb162), 0x9c);
        // CB 9C 0229
        gbc.setState(0x17b9, 0x7248, 0x6e60, 0x63de, 0xe89b, 0x6c22, 0x0, 0x0);
        gbc.writeMem(0x17b9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7248);
        EXPECT(gbc.pc(), 0x17bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 022A
        gbc.setState(0x90cf, 0xce33, 0xad0, 0x58f8, 0x2448, 0xd8c9, 0x0, 0x0);
        gbc.writeMem(0x90cf, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xce33);
        EXPECT(gbc.pc(), 0x90d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90cf), 0xcb);
        EXPECT(gbc.readMem(0x90d0), 0x9c);
        // CB 9C 022B
        gbc.setState(0xeb70, 0x49dc, 0x59e0, 0x4049, 0xcfe5, 0x38f9, 0x1, 0x1);
        gbc.writeMem(0xeb70, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x49dc);
        EXPECT(gbc.pc(), 0xeb72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb70), 0xcb);
        EXPECT(gbc.readMem(0xeb71), 0x9c);
        // CB 9C 022C
        gbc.setState(0xaea, 0x256e, 0xcb30, 0x79a0, 0xcfdc, 0xb35, 0x0, 0x1);
        gbc.writeMem(0xaea, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x256e);
        EXPECT(gbc.pc(), 0xaec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 022D
        gbc.setState(0x2ce3, 0x31cf, 0x6db0, 0x8d99, 0x69a0, 0x88f1, 0x0, 0x0);
        gbc.writeMem(0x2ce3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x31cf);
        EXPECT(gbc.pc(), 0x2ce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 022E
        gbc.setState(0xc899, 0xd55a, 0xfa0, 0x6ea3, 0x267d, 0x2c63, 0x1, 0x1);
        gbc.writeMem(0xc899, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd55a);
        EXPECT(gbc.pc(), 0xc89b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc899), 0xcb);
        EXPECT(gbc.readMem(0xc89a), 0x9c);
        // CB 9C 022F
        gbc.setState(0x2ef1, 0x7e16, 0x1eb0, 0xd1f1, 0x39c9, 0x860f, 0x1, 0x1);
        gbc.writeMem(0x2ef1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7e16);
        EXPECT(gbc.pc(), 0x2ef3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0230
        gbc.setState(0xc85f, 0x601c, 0xdc70, 0xf323, 0xb515, 0x78b4, 0x1, 0x1);
        gbc.writeMem(0xc85f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x601c);
        EXPECT(gbc.pc(), 0xc861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc85f), 0xcb);
        EXPECT(gbc.readMem(0xc860), 0x9c);
        // CB 9C 0231
        gbc.setState(0x79d2, 0x3607, 0x9b10, 0xe4f0, 0x90a5, 0x6d16, 0x1, 0x1);
        gbc.writeMem(0x79d2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x3607);
        EXPECT(gbc.pc(), 0x79d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0232
        gbc.setState(0xd085, 0xdb0, 0x390, 0xb905, 0x4c44, 0xd8cc, 0x0, 0x0);
        gbc.writeMem(0xd085, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xdb0);
        EXPECT(gbc.pc(), 0xd087);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd085), 0xcb);
        EXPECT(gbc.readMem(0xd086), 0x9c);
        // CB 9C 0233
        gbc.setState(0x2fda, 0xbd9f, 0x69a0, 0xa8db, 0x3109, 0xe3b8, 0x1, 0x0);
        gbc.writeMem(0x2fda, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xbd9f);
        EXPECT(gbc.pc(), 0x2fdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0235
        gbc.setState(0x2af8, 0xb540, 0x8a00, 0x3eab, 0xe29c, 0x81ce, 0x0, 0x1);
        gbc.writeMem(0x2af8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb540);
        EXPECT(gbc.pc(), 0x2afa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0236
        gbc.setState(0xda63, 0x4b6e, 0x3900, 0x7363, 0xe0a, 0xcfe1, 0x0, 0x1);
        gbc.writeMem(0xda63, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x4b6e);
        EXPECT(gbc.pc(), 0xda65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda63), 0xcb);
        EXPECT(gbc.readMem(0xda64), 0x9c);
        // CB 9C 0237
        gbc.setState(0xd622, 0x3ce1, 0xf690, 0x156, 0xbbcb, 0xdab2, 0x1, 0x1);
        gbc.writeMem(0xd622, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3ce1);
        EXPECT(gbc.pc(), 0xd624);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd622), 0xcb);
        EXPECT(gbc.readMem(0xd623), 0x9c);
        // CB 9C 0238
        gbc.setState(0xa9dd, 0x3d5c, 0xd710, 0x3958, 0x9ace, 0xd7e7, 0x1, 0x1);
        gbc.writeMem(0xa9dd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x3d5c);
        EXPECT(gbc.pc(), 0xa9df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9dd), 0xcb);
        EXPECT(gbc.readMem(0xa9de), 0x9c);
        // CB 9C 0239
        gbc.setState(0xe852, 0x33a, 0x52b0, 0x9984, 0x9a06, 0xb23a, 0x1, 0x1);
        gbc.writeMem(0xe852, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x33a);
        EXPECT(gbc.pc(), 0xe854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe852), 0xcb);
        EXPECT(gbc.readMem(0xe853), 0x9c);
        // CB 9C 023A
        gbc.setState(0x3d5c, 0x488b, 0x5ef0, 0xbf56, 0x5766, 0xa85f, 0x1, 0x1);
        gbc.writeMem(0x3d5c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x488b);
        EXPECT(gbc.pc(), 0x3d5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 023B
        gbc.setState(0x33a1, 0x6e63, 0x9df0, 0xd813, 0x9bde, 0x2aa1, 0x1, 0x0);
        gbc.writeMem(0x33a1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x6e63);
        EXPECT(gbc.pc(), 0x33a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 023C
        gbc.setState(0x8e19, 0x24ab, 0x2f50, 0xf9ce, 0x37d3, 0x6aa, 0x1, 0x0);
        gbc.writeMem(0x8e19, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x24ab);
        EXPECT(gbc.pc(), 0x8e1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e19), 0xcb);
        EXPECT(gbc.readMem(0x8e1a), 0x9c);
        // CB 9C 023D
        gbc.setState(0x6d14, 0xb8e8, 0x1810, 0x5f43, 0x4d28, 0xe3bb, 0x1, 0x1);
        gbc.writeMem(0x6d14, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb8e8);
        EXPECT(gbc.pc(), 0x6d16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 023E
        gbc.setState(0x7eb3, 0x587c, 0xd820, 0xdd59, 0xb7c1, 0x5cec, 0x1, 0x1);
        gbc.writeMem(0x7eb3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x587c);
        EXPECT(gbc.pc(), 0x7eb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 023F
        gbc.setState(0xeeb3, 0x5f1f, 0x7ac0, 0xa626, 0x173, 0xbc24, 0x1, 0x1);
        gbc.writeMem(0xeeb3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5f1f);
        EXPECT(gbc.pc(), 0xeeb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeb3), 0xcb);
        EXPECT(gbc.readMem(0xeeb4), 0x9c);
        // CB 9C 0240
        gbc.setState(0x679c, 0xd730, 0x8870, 0xa58f, 0x96bc, 0x5ba2, 0x1, 0x1);
        gbc.writeMem(0x679c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xd730);
        EXPECT(gbc.pc(), 0x679e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0241
        gbc.setState(0xce42, 0x80d0, 0x4c60, 0xc434, 0xc2b0, 0xa5d6, 0x0, 0x1);
        gbc.writeMem(0xce42, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x80d0);
        EXPECT(gbc.pc(), 0xce44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce42), 0xcb);
        EXPECT(gbc.readMem(0xce43), 0x9c);
        // CB 9C 0242
        gbc.setState(0x4641, 0x6d69, 0x6ef0, 0x683f, 0xea0d, 0xc721, 0x0, 0x0);
        gbc.writeMem(0x4641, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x6d69);
        EXPECT(gbc.pc(), 0x4643);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0243
        gbc.setState(0x3035, 0xf37e, 0x8dd0, 0x4ea8, 0x9dcf, 0xa795, 0x0, 0x1);
        gbc.writeMem(0x3035, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xf37e);
        EXPECT(gbc.pc(), 0x3037);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0244
        gbc.setState(0x6686, 0x2e26, 0xe210, 0x6930, 0x3bde, 0x3462, 0x1, 0x0);
        gbc.writeMem(0x6686, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x2e26);
        EXPECT(gbc.pc(), 0x6688);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0245
        gbc.setState(0x3b25, 0xb44f, 0xc520, 0x1111, 0x471f, 0x5d3b, 0x0, 0x1);
        gbc.writeMem(0x3b25, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb44f);
        EXPECT(gbc.pc(), 0x3b27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0246
        gbc.setState(0x7e5e, 0xc19e, 0x5750, 0x55d, 0xdf9a, 0x52e1, 0x1, 0x1);
        gbc.writeMem(0x7e5e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc19e);
        EXPECT(gbc.pc(), 0x7e60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0247
        gbc.setState(0x7e90, 0x3572, 0xc10, 0xe15d, 0x3f78, 0x3de2, 0x1, 0x0);
        gbc.writeMem(0x7e90, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3572);
        EXPECT(gbc.pc(), 0x7e92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0248
        gbc.setState(0x4c81, 0x6815, 0xefa0, 0x16f9, 0xfdaf, 0xecfe, 0x1, 0x0);
        gbc.writeMem(0x4c81, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6815);
        EXPECT(gbc.pc(), 0x4c83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0249
        gbc.setState(0x5ae8, 0xfd76, 0xe310, 0x4d33, 0xcc53, 0x51e, 0x1, 0x1);
        gbc.writeMem(0x5ae8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xfd76);
        EXPECT(gbc.pc(), 0x5aea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 024A
        gbc.setState(0x6dae, 0x498, 0x4340, 0xb8b2, 0xe383, 0xfe1f, 0x1, 0x0);
        gbc.writeMem(0x6dae, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x498);
        EXPECT(gbc.pc(), 0x6db0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 024D
        gbc.setState(0x6481, 0x6d38, 0xeb80, 0x562d, 0xe7ee, 0x6f6d, 0x1, 0x0);
        gbc.writeMem(0x6481, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6d38);
        EXPECT(gbc.pc(), 0x6483);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 024E
        gbc.setState(0xdfdb, 0xe643, 0x460, 0xaaae, 0x50f5, 0x558, 0x0, 0x1);
        gbc.writeMem(0xdfdb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xe643);
        EXPECT(gbc.pc(), 0xdfdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfdb), 0xcb);
        EXPECT(gbc.readMem(0xdfdc), 0x9c);
        // CB 9C 024F
        gbc.setState(0x34df, 0x580f, 0xc840, 0x4509, 0x9b54, 0x741f, 0x1, 0x0);
        gbc.writeMem(0x34df, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x580f);
        EXPECT(gbc.pc(), 0x34e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0250
        gbc.setState(0xa822, 0x64b7, 0x3080, 0xfd56, 0xf3cc, 0x43a1, 0x1, 0x1);
        gbc.writeMem(0xa822, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x64b7);
        EXPECT(gbc.pc(), 0xa824);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa822), 0xcb);
        EXPECT(gbc.readMem(0xa823), 0x9c);
        // CB 9C 0251
        gbc.setState(0x4ee0, 0x2bcb, 0x1720, 0x37d1, 0x3edd, 0xd54, 0x0, 0x0);
        gbc.writeMem(0x4ee0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x2bcb);
        EXPECT(gbc.pc(), 0x4ee2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0252
        gbc.setState(0x9559, 0x1ae3, 0x33f0, 0x2aab, 0x10e5, 0xb87b, 0x0, 0x0);
        gbc.writeMem(0x9559, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x1ae3);
        EXPECT(gbc.pc(), 0x955b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9559), 0xcb);
        EXPECT(gbc.readMem(0x955a), 0x9c);
        // CB 9C 0253
        gbc.setState(0xb08c, 0xc2c8, 0x5b0, 0x834b, 0xdce3, 0x3abf, 0x0, 0x0);
        gbc.writeMem(0xb08c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xc2c8);
        EXPECT(gbc.pc(), 0xb08e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb08c), 0xcb);
        EXPECT(gbc.readMem(0xb08d), 0x9c);
        // CB 9C 0254
        gbc.setState(0x7bae, 0x60a9, 0x2d60, 0xb0ae, 0x32f4, 0xec90, 0x1, 0x0);
        gbc.writeMem(0x7bae, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x60a9);
        EXPECT(gbc.pc(), 0x7bb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0255
        gbc.setState(0x19df, 0x9632, 0x42b0, 0x42f6, 0xdb7, 0x5c5, 0x0, 0x0);
        gbc.writeMem(0x19df, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9632);
        EXPECT(gbc.pc(), 0x19e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0256
        gbc.setState(0xd094, 0xf642, 0xb070, 0xd0b3, 0x766c, 0x1557, 0x0, 0x0);
        gbc.writeMem(0xd094, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf642);
        EXPECT(gbc.pc(), 0xd096);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd094), 0xcb);
        EXPECT(gbc.readMem(0xd095), 0x9c);
        // CB 9C 0257
        gbc.setState(0x78e3, 0xa424, 0xe0a0, 0x6856, 0x6073, 0x3a46, 0x0, 0x0);
        gbc.writeMem(0x78e3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa424);
        EXPECT(gbc.pc(), 0x78e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0258
        gbc.setState(0xa29a, 0xd5ec, 0xfb20, 0x88b3, 0x1b0a, 0xaefd, 0x0, 0x1);
        gbc.writeMem(0xa29a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd5ec);
        EXPECT(gbc.pc(), 0xa29c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa29a), 0xcb);
        EXPECT(gbc.readMem(0xa29b), 0x9c);
        // CB 9C 0259
        gbc.setState(0x94ce, 0xc9f7, 0x51a0, 0x39b6, 0xfdf8, 0x6bf9, 0x1, 0x0);
        gbc.writeMem(0x94ce, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc9f7);
        EXPECT(gbc.pc(), 0x94d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94ce), 0xcb);
        EXPECT(gbc.readMem(0x94cf), 0x9c);
        // CB 9C 025A
        gbc.setState(0x996f, 0xfffc, 0xad60, 0xdd08, 0x5d7b, 0xb951, 0x0, 0x0);
        gbc.writeMem(0x996f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xfffc);
        EXPECT(gbc.pc(), 0x9971);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x996f), 0xcb);
        EXPECT(gbc.readMem(0x9970), 0x9c);
        // CB 9C 025B
        gbc.setState(0x9fe7, 0x7a91, 0x3540, 0xc9ec, 0x4cc, 0x1cf9, 0x0, 0x1);
        gbc.writeMem(0x9fe7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x7a91);
        EXPECT(gbc.pc(), 0x9fe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fe7), 0xcb);
        EXPECT(gbc.readMem(0x9fe8), 0x9c);
        // CB 9C 025C
        gbc.setState(0xbe24, 0x94e, 0x88a0, 0x868c, 0x3600, 0xdeff, 0x0, 0x1);
        gbc.writeMem(0xbe24, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x94e);
        EXPECT(gbc.pc(), 0xbe26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe24), 0xcb);
        EXPECT(gbc.readMem(0xbe25), 0x9c);
        // CB 9C 025D
        gbc.setState(0xcb46, 0xd039, 0xaa80, 0x5f1d, 0xa3ca, 0x412a, 0x0, 0x1);
        gbc.writeMem(0xcb46, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd039);
        EXPECT(gbc.pc(), 0xcb48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb46), 0xcb);
        EXPECT(gbc.readMem(0xcb47), 0x9c);
        // CB 9C 025E
        gbc.setState(0x979d, 0x187a, 0x5fb0, 0x544b, 0x8e17, 0xc208, 0x0, 0x0);
        gbc.writeMem(0x979d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x187a);
        EXPECT(gbc.pc(), 0x979f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x979d), 0xcb);
        EXPECT(gbc.readMem(0x979e), 0x9c);
        // CB 9C 025F
        gbc.setState(0x8180, 0xed7, 0x8ca0, 0x2fbe, 0x487b, 0x2a16, 0x1, 0x0);
        gbc.writeMem(0x8180, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xed7);
        EXPECT(gbc.pc(), 0x8182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8180), 0xcb);
        EXPECT(gbc.readMem(0x8181), 0x9c);
        // CB 9C 0260
        gbc.setState(0xdc77, 0x7497, 0xf530, 0xbe3e, 0x6c54, 0x5f9a, 0x0, 0x1);
        gbc.writeMem(0xdc77, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7497);
        EXPECT(gbc.pc(), 0xdc79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc77), 0xcb);
        EXPECT(gbc.readMem(0xdc78), 0x9c);
        // CB 9C 0261
        gbc.setState(0xc2f5, 0x5079, 0x5eb0, 0x82b7, 0x9227, 0xeb0d, 0x1, 0x0);
        gbc.writeMem(0xc2f5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5079);
        EXPECT(gbc.pc(), 0xc2f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2f5), 0xcb);
        EXPECT(gbc.readMem(0xc2f6), 0x9c);
        // CB 9C 0262
        gbc.setState(0xc53d, 0x7b0f, 0x3f40, 0x30b1, 0x3c87, 0x1c3, 0x1, 0x0);
        gbc.writeMem(0xc53d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x7b0f);
        EXPECT(gbc.pc(), 0xc53f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc53d), 0xcb);
        EXPECT(gbc.readMem(0xc53e), 0x9c);
        // CB 9C 0263
        gbc.setState(0x3e99, 0xe4c0, 0xc880, 0xfae3, 0x2d5, 0x2d44, 0x0, 0x1);
        gbc.writeMem(0x3e99, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xe4c0);
        EXPECT(gbc.pc(), 0x3e9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0264
        gbc.setState(0x4a0e, 0x90b4, 0x3b10, 0xb4fc, 0x7a38, 0xce5d, 0x0, 0x0);
        gbc.writeMem(0x4a0e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x90b4);
        EXPECT(gbc.pc(), 0x4a10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0265
        gbc.setState(0x163e, 0xf8c4, 0x7b0, 0x213, 0x5082, 0x8c19, 0x1, 0x0);
        gbc.writeMem(0x163e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xf8c4);
        EXPECT(gbc.pc(), 0x1640);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0266
        gbc.setState(0x4618, 0xd8e4, 0xfd40, 0x7d66, 0xf160, 0xfafa, 0x1, 0x0);
        gbc.writeMem(0x4618, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd8e4);
        EXPECT(gbc.pc(), 0x461a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0267
        gbc.setState(0x8e45, 0xef5f, 0x6cb0, 0x97c1, 0x19b, 0x880b, 0x1, 0x1);
        gbc.writeMem(0x8e45, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xef5f);
        EXPECT(gbc.pc(), 0x8e47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e45), 0xcb);
        EXPECT(gbc.readMem(0x8e46), 0x9c);
        // CB 9C 0268
        gbc.setState(0x5838, 0x11d7, 0x9710, 0xb9d6, 0x87f2, 0x923b, 0x0, 0x0);
        gbc.writeMem(0x5838, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x11d7);
        EXPECT(gbc.pc(), 0x583a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0269
        gbc.setState(0xa4b0, 0x19e2, 0x5310, 0x8b57, 0x87e6, 0x5f9, 0x0, 0x0);
        gbc.writeMem(0xa4b0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x19e2);
        EXPECT(gbc.pc(), 0xa4b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4b0), 0xcb);
        EXPECT(gbc.readMem(0xa4b1), 0x9c);
        // CB 9C 026A
        gbc.setState(0x76e1, 0x4d36, 0xc140, 0xef52, 0xae57, 0xb2e7, 0x1, 0x1);
        gbc.writeMem(0x76e1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4d36);
        EXPECT(gbc.pc(), 0x76e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 026B
        gbc.setState(0x78fa, 0x421e, 0xc070, 0xf598, 0x670b, 0x2130, 0x1, 0x1);
        gbc.writeMem(0x78fa, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x421e);
        EXPECT(gbc.pc(), 0x78fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 026C
        gbc.setState(0x785e, 0xe04d, 0x9b70, 0xc69f, 0x3f05, 0x517f, 0x1, 0x1);
        gbc.writeMem(0x785e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe04d);
        EXPECT(gbc.pc(), 0x7860);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 026D
        gbc.setState(0x85ba, 0xd99f, 0x66e0, 0x7847, 0xf07d, 0x2020, 0x1, 0x1);
        gbc.writeMem(0x85ba, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd99f);
        EXPECT(gbc.pc(), 0x85bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85ba), 0xcb);
        EXPECT(gbc.readMem(0x85bb), 0x9c);
        // CB 9C 026E
        gbc.setState(0x53d1, 0xbb34, 0xd640, 0xf948, 0xd9dc, 0x2a5a, 0x1, 0x0);
        gbc.writeMem(0x53d1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xbb34);
        EXPECT(gbc.pc(), 0x53d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 026F
        gbc.setState(0x4dac, 0xa2f0, 0xa790, 0xd180, 0x23b, 0xce12, 0x1, 0x0);
        gbc.writeMem(0x4dac, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xa2f0);
        EXPECT(gbc.pc(), 0x4dae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0271
        gbc.setState(0xef, 0xe4da, 0x11a0, 0xc81, 0x13f3, 0xbbe1, 0x1, 0x0);
        gbc.writeMem(0xef, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe4da);
        EXPECT(gbc.pc(), 0xf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0272
        gbc.setState(0x2cc3, 0xd2a5, 0x9ee0, 0x2ef, 0x7cc2, 0x2a22, 0x0, 0x1);
        gbc.writeMem(0x2cc3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd2a5);
        EXPECT(gbc.pc(), 0x2cc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0273
        gbc.setState(0xae03, 0x40a0, 0xca00, 0xe0c0, 0xa319, 0x72ae, 0x0, 0x1);
        gbc.writeMem(0xae03, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x40a0);
        EXPECT(gbc.pc(), 0xae05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae03), 0xcb);
        EXPECT(gbc.readMem(0xae04), 0x9c);
        // CB 9C 0274
        gbc.setState(0x4ee5, 0x28fd, 0x1500, 0x70bc, 0xb8c9, 0x22e4, 0x1, 0x0);
        gbc.writeMem(0x4ee5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x28fd);
        EXPECT(gbc.pc(), 0x4ee7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0275
        gbc.setState(0x2738, 0x1a8a, 0x6800, 0x6def, 0x1ea4, 0x3cdf, 0x1, 0x1);
        gbc.writeMem(0x2738, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1a8a);
        EXPECT(gbc.pc(), 0x273a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0277
        gbc.setState(0xa06d, 0xcfd6, 0xcc80, 0xa478, 0x1476, 0x68fb, 0x0, 0x0);
        gbc.writeMem(0xa06d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xcfd6);
        EXPECT(gbc.pc(), 0xa06f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa06d), 0xcb);
        EXPECT(gbc.readMem(0xa06e), 0x9c);
        // CB 9C 0278
        gbc.setState(0x81e0, 0x245b, 0x5100, 0x11b, 0x5ef3, 0xb8b6, 0x0, 0x1);
        gbc.writeMem(0x81e0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x245b);
        EXPECT(gbc.pc(), 0x81e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81e0), 0xcb);
        EXPECT(gbc.readMem(0x81e1), 0x9c);
        // CB 9C 0279
        gbc.setState(0x76cd, 0xce2b, 0xd670, 0xb492, 0xf646, 0xafb7, 0x1, 0x0);
        gbc.writeMem(0x76cd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xce2b);
        EXPECT(gbc.pc(), 0x76cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 027A
        gbc.setState(0xedaa, 0x89b9, 0x17c0, 0xce1b, 0x158c, 0x7848, 0x0, 0x1);
        gbc.writeMem(0xedaa, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x89b9);
        EXPECT(gbc.pc(), 0xedac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedaa), 0xcb);
        EXPECT(gbc.readMem(0xedab), 0x9c);
        // CB 9C 027B
        gbc.setState(0x79b7, 0x1a15, 0x5f30, 0xbf8d, 0x1b0e, 0x2dab, 0x0, 0x1);
        gbc.writeMem(0x79b7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1a15);
        EXPECT(gbc.pc(), 0x79b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 027C
        gbc.setState(0x834, 0x748a, 0xa6b0, 0x3ff2, 0x49fd, 0x385a, 0x0, 0x1);
        gbc.writeMem(0x834, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x748a);
        EXPECT(gbc.pc(), 0x836);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 027D
        gbc.setState(0x59d7, 0xa457, 0x180, 0xe742, 0x94e9, 0xc31d, 0x0, 0x0);
        gbc.writeMem(0x59d7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xa457);
        EXPECT(gbc.pc(), 0x59d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 027F
        gbc.setState(0x3a9c, 0x17e7, 0x9240, 0x55f2, 0x7167, 0x976, 0x0, 0x0);
        gbc.writeMem(0x3a9c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x17e7);
        EXPECT(gbc.pc(), 0x3a9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0280
        gbc.setState(0xb8fe, 0xc819, 0xa000, 0x5396, 0xc3d0, 0x26c0, 0x1, 0x0);
        gbc.writeMem(0xb8fe, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc819);
        EXPECT(gbc.pc(), 0xb900);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8fe), 0xcb);
        EXPECT(gbc.readMem(0xb8ff), 0x9c);
        // CB 9C 0281
        gbc.setState(0x9c9e, 0xec82, 0xfa90, 0xa859, 0x14f5, 0xeed, 0x0, 0x1);
        gbc.writeMem(0x9c9e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xec82);
        EXPECT(gbc.pc(), 0x9ca0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c9e), 0xcb);
        EXPECT(gbc.readMem(0x9c9f), 0x9c);
        // CB 9C 0282
        gbc.setState(0x86cf, 0xd409, 0x7610, 0x8f20, 0xcb25, 0x68a4, 0x0, 0x1);
        gbc.writeMem(0x86cf, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd409);
        EXPECT(gbc.pc(), 0x86d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86cf), 0xcb);
        EXPECT(gbc.readMem(0x86d0), 0x9c);
        // CB 9C 0283
        gbc.setState(0x7500, 0xd1f9, 0xcaa0, 0x78b3, 0xc6f8, 0xe852, 0x1, 0x0);
        gbc.writeMem(0x7500, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd1f9);
        EXPECT(gbc.pc(), 0x7502);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0284
        gbc.setState(0x6224, 0x690d, 0xbac0, 0xbfab, 0xf47d, 0x5872, 0x0, 0x0);
        gbc.writeMem(0x6224, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x690d);
        EXPECT(gbc.pc(), 0x6226);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0285
        gbc.setState(0xc243, 0x82a6, 0x7820, 0x87cc, 0xf5d3, 0xd8fe, 0x1, 0x0);
        gbc.writeMem(0xc243, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x82a6);
        EXPECT(gbc.pc(), 0xc245);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc243), 0xcb);
        EXPECT(gbc.readMem(0xc244), 0x9c);
        // CB 9C 0286
        gbc.setState(0xdccc, 0xe916, 0x5db0, 0x1bb, 0x5ea8, 0xf257, 0x1, 0x1);
        gbc.writeMem(0xdccc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe916);
        EXPECT(gbc.pc(), 0xdcce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdccc), 0xcb);
        EXPECT(gbc.readMem(0xdccd), 0x9c);
        // CB 9C 0287
        gbc.setState(0xc83c, 0xdf51, 0xc130, 0xee98, 0x74f0, 0x7b41, 0x1, 0x1);
        gbc.writeMem(0xc83c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xdf51);
        EXPECT(gbc.pc(), 0xc83e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc83c), 0xcb);
        EXPECT(gbc.readMem(0xc83d), 0x9c);
        // CB 9C 0288
        gbc.setState(0xba13, 0xed2, 0xd2c0, 0x616, 0x8276, 0xa817, 0x1, 0x0);
        gbc.writeMem(0xba13, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xed2);
        EXPECT(gbc.pc(), 0xba15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba13), 0xcb);
        EXPECT(gbc.readMem(0xba14), 0x9c);
        // CB 9C 0289
        gbc.setState(0xdbd4, 0x52a8, 0x5400, 0xca08, 0x412b, 0xdc99, 0x0, 0x0);
        gbc.writeMem(0xdbd4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x52a8);
        EXPECT(gbc.pc(), 0xdbd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbd4), 0xcb);
        EXPECT(gbc.readMem(0xdbd5), 0x9c);
        // CB 9C 028A
        gbc.setState(0x99d0, 0x5184, 0xa4a0, 0x7306, 0x84ae, 0xe90d, 0x1, 0x1);
        gbc.writeMem(0x99d0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5184);
        EXPECT(gbc.pc(), 0x99d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99d0), 0xcb);
        EXPECT(gbc.readMem(0x99d1), 0x9c);
        // CB 9C 028B
        gbc.setState(0xab14, 0xa076, 0x5dd0, 0x962a, 0x8883, 0x82c2, 0x0, 0x1);
        gbc.writeMem(0xab14, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa076);
        EXPECT(gbc.pc(), 0xab16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab14), 0xcb);
        EXPECT(gbc.readMem(0xab15), 0x9c);
        // CB 9C 028C
        gbc.setState(0x67bf, 0x5f3e, 0x5cb0, 0xfeb8, 0x4c63, 0x845b, 0x1, 0x0);
        gbc.writeMem(0x67bf, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x5f3e);
        EXPECT(gbc.pc(), 0x67c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 028D
        gbc.setState(0x6be, 0x2cac, 0x8ec0, 0xaa69, 0x3c52, 0x5165, 0x0, 0x0);
        gbc.writeMem(0x6be, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2cac);
        EXPECT(gbc.pc(), 0x6c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 028E
        gbc.setState(0x4783, 0x3e2a, 0x3aa0, 0x117c, 0xeb4, 0x82c9, 0x1, 0x1);
        gbc.writeMem(0x4783, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3e2a);
        EXPECT(gbc.pc(), 0x4785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 028F
        gbc.setState(0xabf2, 0x335, 0x9ce0, 0x9e36, 0x33f4, 0x7563, 0x1, 0x1);
        gbc.writeMem(0xabf2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x335);
        EXPECT(gbc.pc(), 0xabf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabf2), 0xcb);
        EXPECT(gbc.readMem(0xabf3), 0x9c);
        // CB 9C 0290
        gbc.setState(0xe65, 0x82e1, 0x2590, 0x8e30, 0xc1ae, 0x2787, 0x0, 0x1);
        gbc.writeMem(0xe65, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x82e1);
        EXPECT(gbc.pc(), 0xe67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0291
        gbc.setState(0x566d, 0xb33a, 0x20b0, 0x45c8, 0x3c9a, 0xefcd, 0x1, 0x1);
        gbc.writeMem(0x566d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xb33a);
        EXPECT(gbc.pc(), 0x566f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0292
        gbc.setState(0x611, 0xaf2f, 0x6b70, 0xb8ba, 0xfbba, 0xa4f7, 0x0, 0x0);
        gbc.writeMem(0x611, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xaf2f);
        EXPECT(gbc.pc(), 0x613);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0293
        gbc.setState(0xe8cf, 0x9eb4, 0x2070, 0xb780, 0xaf64, 0x4fd6, 0x0, 0x0);
        gbc.writeMem(0xe8cf, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9eb4);
        EXPECT(gbc.pc(), 0xe8d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8cf), 0xcb);
        EXPECT(gbc.readMem(0xe8d0), 0x9c);
        // CB 9C 0294
        gbc.setState(0xe17c, 0xfb96, 0x7350, 0x77ef, 0x4094, 0xcec9, 0x1, 0x0);
        gbc.writeMem(0xe17c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xfb96);
        EXPECT(gbc.pc(), 0xe17e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe17c), 0xcb);
        EXPECT(gbc.readMem(0xe17d), 0x9c);
        // CB 9C 0295
        gbc.setState(0xc4ed, 0x6117, 0x34f0, 0xab23, 0xc3f, 0xf1d8, 0x0, 0x0);
        gbc.writeMem(0xc4ed, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x6117);
        EXPECT(gbc.pc(), 0xc4ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4ed), 0xcb);
        EXPECT(gbc.readMem(0xc4ee), 0x9c);
        // CB 9C 0297
        gbc.setState(0xb520, 0x414b, 0x8c70, 0xd519, 0xf33d, 0x13f2, 0x0, 0x0);
        gbc.writeMem(0xb520, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x414b);
        EXPECT(gbc.pc(), 0xb522);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb520), 0xcb);
        EXPECT(gbc.readMem(0xb521), 0x9c);
        // CB 9C 0298
        gbc.setState(0xe659, 0x4821, 0xb5f0, 0x1a5, 0xd43e, 0x76ec, 0x0, 0x0);
        gbc.writeMem(0xe659, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x4821);
        EXPECT(gbc.pc(), 0xe65b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe659), 0xcb);
        EXPECT(gbc.readMem(0xe65a), 0x9c);
        // CB 9C 029A
        gbc.setState(0xcba, 0x67fc, 0x3550, 0xc6cb, 0x301e, 0x5cd2, 0x0, 0x0);
        gbc.writeMem(0xcba, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x67fc);
        EXPECT(gbc.pc(), 0xcbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 029B
        gbc.setState(0xe828, 0xbc88, 0x9510, 0x4e44, 0xf52a, 0x22b9, 0x0, 0x0);
        gbc.writeMem(0xe828, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xbc88);
        EXPECT(gbc.pc(), 0xe82a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe828), 0xcb);
        EXPECT(gbc.readMem(0xe829), 0x9c);
        // CB 9C 029C
        gbc.setState(0xdf8d, 0x7b33, 0xa170, 0x2623, 0x1d76, 0x125a, 0x0, 0x1);
        gbc.writeMem(0xdf8d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x7b33);
        EXPECT(gbc.pc(), 0xdf8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf8d), 0xcb);
        EXPECT(gbc.readMem(0xdf8e), 0x9c);
        // CB 9C 029D
        gbc.setState(0x1ad3, 0x1b71, 0x8160, 0x419, 0xef5a, 0xdf68, 0x1, 0x1);
        gbc.writeMem(0x1ad3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1b71);
        EXPECT(gbc.pc(), 0x1ad5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 029E
        gbc.setState(0xcb54, 0xa0b0, 0xce50, 0xc6fa, 0xb771, 0x1651, 0x0, 0x0);
        gbc.writeMem(0xcb54, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa0b0);
        EXPECT(gbc.pc(), 0xcb56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb54), 0xcb);
        EXPECT(gbc.readMem(0xcb55), 0x9c);
        // CB 9C 029F
        gbc.setState(0x3a99, 0xd51a, 0xd2c0, 0xded7, 0xe75, 0xb31e, 0x0, 0x1);
        gbc.writeMem(0x3a99, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xd51a);
        EXPECT(gbc.pc(), 0x3a9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 02A0
        gbc.setState(0x6c40, 0xaeec, 0xe980, 0x41ef, 0x144e, 0x56d2, 0x1, 0x0);
        gbc.writeMem(0x6c40, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xaeec);
        EXPECT(gbc.pc(), 0x6c42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 02A1
        gbc.setState(0xb967, 0xfb3a, 0xc4b0, 0xab2, 0x8f82, 0xf558, 0x1, 0x1);
        gbc.writeMem(0xb967, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xfb3a);
        EXPECT(gbc.pc(), 0xb969);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb967), 0xcb);
        EXPECT(gbc.readMem(0xb968), 0x9c);
        // CB 9C 02A2
        gbc.setState(0xe93, 0x9f4e, 0x9b90, 0xd33c, 0xf3a, 0x2921, 0x0, 0x1);
        gbc.writeMem(0xe93, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x9f4e);
        EXPECT(gbc.pc(), 0xe95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 02A3
        gbc.setState(0x6a39, 0xa387, 0xd370, 0x8610, 0x552c, 0xe6e4, 0x1, 0x0);
        gbc.writeMem(0x6a39, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa387);
        EXPECT(gbc.pc(), 0x6a3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 02A4
        gbc.setState(0x2c10, 0xe0f7, 0x76b0, 0xb637, 0x2ae7, 0xb417, 0x1, 0x1);
        gbc.writeMem(0x2c10, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe0f7);
        EXPECT(gbc.pc(), 0x2c12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 02A5
        gbc.setState(0x8f14, 0xbf4d, 0x7f20, 0x8b0a, 0xb9c2, 0x8599, 0x0, 0x0);
        gbc.writeMem(0x8f14, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xbf4d);
        EXPECT(gbc.pc(), 0x8f16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f14), 0xcb);
        EXPECT(gbc.readMem(0x8f15), 0x9c);
        // CB 9C 02A6
        gbc.setState(0x6bf, 0x8b08, 0x7510, 0x5d13, 0xbd8f, 0xb330, 0x1, 0x1);
        gbc.writeMem(0x6bf, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x8b08);
        EXPECT(gbc.pc(), 0x6c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 02A7
        gbc.setState(0xcfcd, 0x8b51, 0x3870, 0xa78a, 0xe934, 0x7515, 0x0, 0x0);
        gbc.writeMem(0xcfcd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8b51);
        EXPECT(gbc.pc(), 0xcfcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfcd), 0xcb);
        EXPECT(gbc.readMem(0xcfce), 0x9c);
        // CB 9C 02A8
        gbc.setState(0xf4, 0xe41a, 0x4160, 0x9693, 0xfe1, 0x66ac, 0x0, 0x0);
        gbc.writeMem(0xf4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe41a);
        EXPECT(gbc.pc(), 0xf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 02A9
        gbc.setState(0x2573, 0xad92, 0x2d50, 0xe404, 0x932d, 0xe85e, 0x1, 0x0);
        gbc.writeMem(0x2573, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xad92);
        EXPECT(gbc.pc(), 0x2575);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 02AA
        gbc.setState(0x997b, 0x7e7a, 0xbe0, 0x28a2, 0xdc28, 0xba8b, 0x0, 0x1);
        gbc.writeMem(0x997b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7e7a);
        EXPECT(gbc.pc(), 0x997d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x997b), 0xcb);
        EXPECT(gbc.readMem(0x997c), 0x9c);
        // CB 9C 02AB
        gbc.setState(0xc592, 0xdfd1, 0xf8e0, 0xc27b, 0xa402, 0xb826, 0x0, 0x1);
        gbc.writeMem(0xc592, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xdfd1);
        EXPECT(gbc.pc(), 0xc594);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc592), 0xcb);
        EXPECT(gbc.readMem(0xc593), 0x9c);
        // CB 9C 02AC
        gbc.setState(0x2d5, 0xf706, 0xc090, 0x782e, 0x6437, 0x99ee, 0x1, 0x1);
        gbc.writeMem(0x2d5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xf706);
        EXPECT(gbc.pc(), 0x2d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 02AD
        gbc.setState(0x3294, 0x41a3, 0x6020, 0x2f5c, 0xb3e6, 0xe388, 0x1, 0x1);
        gbc.writeMem(0x3294, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x41a3);
        EXPECT(gbc.pc(), 0x3296);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 02AE
        gbc.setState(0xbba6, 0xc634, 0xf4c0, 0x4425, 0xa8d, 0xda62, 0x0, 0x1);
        gbc.writeMem(0xbba6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xc634);
        EXPECT(gbc.pc(), 0xbba8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbba6), 0xcb);
        EXPECT(gbc.readMem(0xbba7), 0x9c);
        // CB 9C 02AF
        gbc.setState(0x804d, 0x802a, 0xf490, 0xbc0c, 0x8db7, 0x1f3e, 0x0, 0x0);
        gbc.writeMem(0x804d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x802a);
        EXPECT(gbc.pc(), 0x804f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x804d), 0xcb);
        EXPECT(gbc.readMem(0x804e), 0x9c);
        // CB 9C 02B0
        gbc.setState(0xb1b0, 0x9303, 0xbbb0, 0x4342, 0x9671, 0x800a, 0x1, 0x0);
        gbc.writeMem(0xb1b0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x9303);
        EXPECT(gbc.pc(), 0xb1b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1b0), 0xcb);
        EXPECT(gbc.readMem(0xb1b1), 0x9c);
        // CB 9C 02B1
        gbc.setState(0x7cb9, 0x957d, 0xf840, 0x34c8, 0x5147, 0xb218, 0x0, 0x0);
        gbc.writeMem(0x7cb9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x957d);
        EXPECT(gbc.pc(), 0x7cbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 02B2
        gbc.setState(0x7939, 0x7340, 0xc070, 0x3f03, 0xfca7, 0x857d, 0x1, 0x0);
        gbc.writeMem(0x7939, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7340);
        EXPECT(gbc.pc(), 0x793b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 02B3
        gbc.setState(0x696f, 0x6484, 0x4bf0, 0x906a, 0x917, 0xd673, 0x0, 0x1);
        gbc.writeMem(0x696f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6484);
        EXPECT(gbc.pc(), 0x6971);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 02B4
        gbc.setState(0x17a1, 0xe31e, 0x81f0, 0xa472, 0xeac6, 0x7b18, 0x0, 0x1);
        gbc.writeMem(0x17a1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xe31e);
        EXPECT(gbc.pc(), 0x17a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 02B5
        gbc.setState(0x2e81, 0x9a5e, 0x75d0, 0x8031, 0x7dd6, 0x9155, 0x1, 0x1);
        gbc.writeMem(0x2e81, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9a5e);
        EXPECT(gbc.pc(), 0x2e83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 02B6
        gbc.setState(0x2810, 0x41a8, 0xb2d0, 0x1ced, 0x8141, 0x865c, 0x1, 0x0);
        gbc.writeMem(0x2810, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x41a8);
        EXPECT(gbc.pc(), 0x2812);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 02B7
        gbc.setState(0xd5d9, 0x967, 0x7930, 0x4e56, 0xdaf7, 0x92f4, 0x1, 0x1);
        gbc.writeMem(0xd5d9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x967);
        EXPECT(gbc.pc(), 0xd5db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5d9), 0xcb);
        EXPECT(gbc.readMem(0xd5da), 0x9c);
        // CB 9C 02B8
        gbc.setState(0x9ab, 0xa321, 0x3500, 0xc22d, 0x34e, 0x410c, 0x1, 0x1);
        gbc.writeMem(0x9ab, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa321);
        EXPECT(gbc.pc(), 0x9ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 02B9
        gbc.setState(0x2ce8, 0xa7cb, 0xb380, 0x1323, 0x42d3, 0x73cb, 0x1, 0x0);
        gbc.writeMem(0x2ce8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa7cb);
        EXPECT(gbc.pc(), 0x2cea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 02BA
        gbc.setState(0xc4ad, 0x5a03, 0xc5a0, 0xcea0, 0x49db, 0x820, 0x1, 0x1);
        gbc.writeMem(0xc4ad, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x5a03);
        EXPECT(gbc.pc(), 0xc4af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4ad), 0xcb);
        EXPECT(gbc.readMem(0xc4ae), 0x9c);
        // CB 9C 02BB
        gbc.setState(0x24d9, 0x526a, 0x5430, 0x698d, 0x451a, 0xdd85, 0x1, 0x0);
        gbc.writeMem(0x24d9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x526a);
        EXPECT(gbc.pc(), 0x24db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 02BC
        gbc.setState(0x66b2, 0x3d8b, 0x5cb0, 0xc29f, 0xd163, 0x2188, 0x0, 0x0);
        gbc.writeMem(0x66b2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x3d8b);
        EXPECT(gbc.pc(), 0x66b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 02BD
        gbc.setState(0xe0ba, 0x4d1c, 0x84c0, 0xc428, 0xf35c, 0x2319, 0x1, 0x1);
        gbc.writeMem(0xe0ba, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x4d1c);
        EXPECT(gbc.pc(), 0xe0bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0ba), 0xcb);
        EXPECT(gbc.readMem(0xe0bb), 0x9c);
        // CB 9C 02BE
        gbc.setState(0xdfda, 0x7312, 0xa6d0, 0x6a4b, 0xb03d, 0xa1ab, 0x1, 0x0);
        gbc.writeMem(0xdfda, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7312);
        EXPECT(gbc.pc(), 0xdfdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfda), 0xcb);
        EXPECT(gbc.readMem(0xdfdb), 0x9c);
        // CB 9C 02BF
        gbc.setState(0x18aa, 0xffe6, 0xbb60, 0x8f06, 0xcec8, 0x4a49, 0x0, 0x1);
        gbc.writeMem(0x18aa, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xffe6);
        EXPECT(gbc.pc(), 0x18ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 02C0
        gbc.setState(0xcf9b, 0x977, 0xc2b0, 0x3200, 0x1d02, 0x233d, 0x0, 0x0);
        gbc.writeMem(0xcf9b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x977);
        EXPECT(gbc.pc(), 0xcf9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf9b), 0xcb);
        EXPECT(gbc.readMem(0xcf9c), 0x9c);
        // CB 9C 02C1
        gbc.setState(0xce4b, 0xdfb4, 0x24a0, 0x1207, 0x491b, 0xc90b, 0x0, 0x1);
        gbc.writeMem(0xce4b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xdfb4);
        EXPECT(gbc.pc(), 0xce4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce4b), 0xcb);
        EXPECT(gbc.readMem(0xce4c), 0x9c);
        // CB 9C 02C2
        gbc.setState(0xe055, 0xdc15, 0x3e90, 0xacf5, 0xe46b, 0xebf4, 0x0, 0x1);
        gbc.writeMem(0xe055, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xdc15);
        EXPECT(gbc.pc(), 0xe057);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe055), 0xcb);
        EXPECT(gbc.readMem(0xe056), 0x9c);
        // CB 9C 02C4
        gbc.setState(0xc75f, 0xf749, 0x6140, 0xcf20, 0x4be7, 0x69b2, 0x0, 0x1);
        gbc.writeMem(0xc75f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf749);
        EXPECT(gbc.pc(), 0xc761);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc75f), 0xcb);
        EXPECT(gbc.readMem(0xc760), 0x9c);
        // CB 9C 02C5
        gbc.setState(0x5ba0, 0xf45b, 0xfd00, 0x4a0c, 0x2903, 0x9b6b, 0x1, 0x0);
        gbc.writeMem(0x5ba0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf45b);
        EXPECT(gbc.pc(), 0x5ba2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 02C6
        gbc.setState(0x42d8, 0x6241, 0x81a0, 0x4944, 0x118b, 0xbb7f, 0x0, 0x1);
        gbc.writeMem(0x42d8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x6241);
        EXPECT(gbc.pc(), 0x42da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 02C7
        gbc.setState(0x7c2d, 0xd0ba, 0x8ec0, 0x14ae, 0xe42a, 0x5b82, 0x1, 0x1);
        gbc.writeMem(0x7c2d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd0ba);
        EXPECT(gbc.pc(), 0x7c2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 02C8
        gbc.setState(0xadaa, 0xf5fb, 0x6340, 0xb279, 0x68fd, 0xea66, 0x1, 0x1);
        gbc.writeMem(0xadaa, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf5fb);
        EXPECT(gbc.pc(), 0xadac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadaa), 0xcb);
        EXPECT(gbc.readMem(0xadab), 0x9c);
        // CB 9C 02C9
        gbc.setState(0xd065, 0xa66a, 0xa7a0, 0xe421, 0x50b2, 0xf19d, 0x0, 0x1);
        gbc.writeMem(0xd065, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa66a);
        EXPECT(gbc.pc(), 0xd067);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd065), 0xcb);
        EXPECT(gbc.readMem(0xd066), 0x9c);
        // CB 9C 02CB
        gbc.setState(0xd2bc, 0xb2fd, 0xf440, 0xaa5f, 0x3c8b, 0xb90e, 0x1, 0x0);
        gbc.writeMem(0xd2bc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xb2fd);
        EXPECT(gbc.pc(), 0xd2be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2bc), 0xcb);
        EXPECT(gbc.readMem(0xd2bd), 0x9c);
        // CB 9C 02CC
        gbc.setState(0xddc4, 0x26ab, 0xd40, 0xea43, 0x35b7, 0x426, 0x0, 0x1);
        gbc.writeMem(0xddc4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x26ab);
        EXPECT(gbc.pc(), 0xddc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddc4), 0xcb);
        EXPECT(gbc.readMem(0xddc5), 0x9c);
        // CB 9C 02CD
        gbc.setState(0x107f, 0x648c, 0x9a30, 0xd5d5, 0xf454, 0xf0a2, 0x0, 0x1);
        gbc.writeMem(0x107f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x648c);
        EXPECT(gbc.pc(), 0x1081);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 02CE
        gbc.setState(0x75ae, 0x25b, 0x75c0, 0xa7, 0xe2ea, 0x7f8f, 0x0, 0x0);
        gbc.writeMem(0x75ae, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x25b);
        EXPECT(gbc.pc(), 0x75b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 02D0
        gbc.setState(0x1ec2, 0x1993, 0xeba0, 0xb3ac, 0xca0c, 0x997, 0x1, 0x0);
        gbc.writeMem(0x1ec2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x1993);
        EXPECT(gbc.pc(), 0x1ec4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 02D1
        gbc.setState(0x4952, 0x575d, 0x9910, 0xa3a9, 0x15f6, 0x5a8e, 0x0, 0x1);
        gbc.writeMem(0x4952, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x575d);
        EXPECT(gbc.pc(), 0x4954);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 02D2
        gbc.setState(0xebb, 0x7e43, 0xfce0, 0x408d, 0xe07b, 0x10fb, 0x1, 0x1);
        gbc.writeMem(0xebb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x7e43);
        EXPECT(gbc.pc(), 0xebd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 02D3
        gbc.setState(0xe1f4, 0xb79d, 0x24f0, 0x73d1, 0x5f65, 0x3149, 0x0, 0x0);
        gbc.writeMem(0xe1f4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xb79d);
        EXPECT(gbc.pc(), 0xe1f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1f4), 0xcb);
        EXPECT(gbc.readMem(0xe1f5), 0x9c);
        // CB 9C 02D4
        gbc.setState(0x22f2, 0x4b52, 0x9520, 0x8aba, 0x5b8e, 0x5f32, 0x1, 0x1);
        gbc.writeMem(0x22f2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x4b52);
        EXPECT(gbc.pc(), 0x22f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 02D5
        gbc.setState(0x683, 0x933b, 0x2af0, 0xa02b, 0x900e, 0xe41a, 0x0, 0x0);
        gbc.writeMem(0x683, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x933b);
        EXPECT(gbc.pc(), 0x685);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 02D6
        gbc.setState(0xa2c1, 0xf699, 0xa410, 0x8902, 0xf78b, 0x22cf, 0x0, 0x1);
        gbc.writeMem(0xa2c1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf699);
        EXPECT(gbc.pc(), 0xa2c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2c1), 0xcb);
        EXPECT(gbc.readMem(0xa2c2), 0x9c);
        // CB 9C 02D7
        gbc.setState(0x500, 0x6bf0, 0x94a0, 0x13e8, 0xa0fa, 0x977, 0x0, 0x0);
        gbc.writeMem(0x500, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x6bf0);
        EXPECT(gbc.pc(), 0x502);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 02D8
        gbc.setState(0xa093, 0x60c9, 0x72a0, 0xdcde, 0xca77, 0xde80, 0x0, 0x0);
        gbc.writeMem(0xa093, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x60c9);
        EXPECT(gbc.pc(), 0xa095);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa093), 0xcb);
        EXPECT(gbc.readMem(0xa094), 0x9c);
        // CB 9C 02D9
        gbc.setState(0x944c, 0x3d2c, 0x9c00, 0x47db, 0x263c, 0xea98, 0x1, 0x0);
        gbc.writeMem(0x944c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3d2c);
        EXPECT(gbc.pc(), 0x944e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x944c), 0xcb);
        EXPECT(gbc.readMem(0x944d), 0x9c);
        // CB 9C 02DA
        gbc.setState(0xdd01, 0xbc3f, 0xd610, 0x51bf, 0xe6c0, 0xcbf0, 0x1, 0x0);
        gbc.writeMem(0xdd01, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xbc3f);
        EXPECT(gbc.pc(), 0xdd03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd01), 0xcb);
        EXPECT(gbc.readMem(0xdd02), 0x9c);
        // CB 9C 02DB
        gbc.setState(0x1513, 0x6847, 0x8990, 0xcfec, 0x3842, 0xb441, 0x0, 0x0);
        gbc.writeMem(0x1513, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6847);
        EXPECT(gbc.pc(), 0x1515);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 02DC
        gbc.setState(0xc22b, 0x246d, 0x8040, 0xe6a3, 0x8347, 0xdf4e, 0x0, 0x1);
        gbc.writeMem(0xc22b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x246d);
        EXPECT(gbc.pc(), 0xc22d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc22b), 0xcb);
        EXPECT(gbc.readMem(0xc22c), 0x9c);
        // CB 9C 02DD
        gbc.setState(0xeaee, 0x566e, 0xcb20, 0x43b0, 0xce57, 0xae9a, 0x1, 0x1);
        gbc.writeMem(0xeaee, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x566e);
        EXPECT(gbc.pc(), 0xeaf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaee), 0xcb);
        EXPECT(gbc.readMem(0xeaef), 0x9c);
        // CB 9C 02DE
        gbc.setState(0xb37, 0xbac7, 0xb820, 0xc9c1, 0x21f6, 0xe60b, 0x0, 0x0);
        gbc.writeMem(0xb37, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xbac7);
        EXPECT(gbc.pc(), 0xb39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 02DF
        gbc.setState(0x3e8e, 0xaea7, 0x90b0, 0x8faf, 0xe20, 0x2e7b, 0x0, 0x0);
        gbc.writeMem(0x3e8e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xaea7);
        EXPECT(gbc.pc(), 0x3e90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 02E0
        gbc.setState(0x8190, 0x1c36, 0x91b0, 0x7523, 0xda32, 0x486d, 0x0, 0x0);
        gbc.writeMem(0x8190, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x1c36);
        EXPECT(gbc.pc(), 0x8192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8190), 0xcb);
        EXPECT(gbc.readMem(0x8191), 0x9c);
        // CB 9C 02E1
        gbc.setState(0xe60f, 0xec9f, 0xebc0, 0x6503, 0x75a9, 0xe0a9, 0x1, 0x0);
        gbc.writeMem(0xe60f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xec9f);
        EXPECT(gbc.pc(), 0xe611);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe60f), 0xcb);
        EXPECT(gbc.readMem(0xe610), 0x9c);
        // CB 9C 02E2
        gbc.setState(0x5803, 0xb0fb, 0xd730, 0x74e2, 0xa521, 0x230, 0x0, 0x0);
        gbc.writeMem(0x5803, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb0fb);
        EXPECT(gbc.pc(), 0x5805);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 02E3
        gbc.setState(0xe2e5, 0x9f72, 0x2470, 0x1947, 0xa327, 0x94ec, 0x1, 0x0);
        gbc.writeMem(0xe2e5, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x9f72);
        EXPECT(gbc.pc(), 0xe2e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2e5), 0xcb);
        EXPECT(gbc.readMem(0xe2e6), 0x9c);
        // CB 9C 02E4
        gbc.setState(0x7577, 0x7ad7, 0xdfb0, 0xcd5b, 0x5601, 0x9f46, 0x1, 0x0);
        gbc.writeMem(0x7577, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x7ad7);
        EXPECT(gbc.pc(), 0x7579);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 02E5
        gbc.setState(0x41d6, 0xadc8, 0x2f10, 0xa490, 0xf16d, 0x4b64, 0x0, 0x0);
        gbc.writeMem(0x41d6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xadc8);
        EXPECT(gbc.pc(), 0x41d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 02E6
        gbc.setState(0x7b82, 0x9903, 0xe810, 0xa02b, 0xa8a2, 0x83c3, 0x1, 0x1);
        gbc.writeMem(0x7b82, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x9903);
        EXPECT(gbc.pc(), 0x7b84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 02E7
        gbc.setState(0xa342, 0x41f, 0xdc10, 0xce7d, 0x7335, 0xb272, 0x1, 0x0);
        gbc.writeMem(0xa342, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x41f);
        EXPECT(gbc.pc(), 0xa344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa342), 0xcb);
        EXPECT(gbc.readMem(0xa343), 0x9c);
        // CB 9C 02E8
        gbc.setState(0x8d02, 0xc3f3, 0xbea0, 0x9360, 0xc79f, 0x9616, 0x0, 0x1);
        gbc.writeMem(0x8d02, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xc3f3);
        EXPECT(gbc.pc(), 0x8d04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d02), 0xcb);
        EXPECT(gbc.readMem(0x8d03), 0x9c);
        // CB 9C 02E9
        gbc.setState(0x78c9, 0x9050, 0x9de0, 0xc151, 0xc23b, 0xef9a, 0x1, 0x1);
        gbc.writeMem(0x78c9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9050);
        EXPECT(gbc.pc(), 0x78cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 02EA
        gbc.setState(0xc3c4, 0x891f, 0xb400, 0x38fb, 0x2024, 0xda72, 0x1, 0x0);
        gbc.writeMem(0xc3c4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x891f);
        EXPECT(gbc.pc(), 0xc3c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3c4), 0xcb);
        EXPECT(gbc.readMem(0xc3c5), 0x9c);
        // CB 9C 02EC
        gbc.setState(0x72cc, 0xe22c, 0x51b0, 0xae75, 0x84dd, 0x8e1f, 0x0, 0x1);
        gbc.writeMem(0x72cc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe22c);
        EXPECT(gbc.pc(), 0x72ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 02ED
        gbc.setState(0x492c, 0x29d7, 0xe20, 0x817f, 0x1c9a, 0x91ac, 0x1, 0x0);
        gbc.writeMem(0x492c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x29d7);
        EXPECT(gbc.pc(), 0x492e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 02EE
        gbc.setState(0x2217, 0xb552, 0xb2c0, 0xefc4, 0xe2c0, 0x1ce, 0x1, 0x1);
        gbc.writeMem(0x2217, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb552);
        EXPECT(gbc.pc(), 0x2219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 02EF
        gbc.setState(0x826c, 0xa1f6, 0xb010, 0xd739, 0xd9f2, 0x4a2b, 0x1, 0x0);
        gbc.writeMem(0x826c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xa1f6);
        EXPECT(gbc.pc(), 0x826e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x826c), 0xcb);
        EXPECT(gbc.readMem(0x826d), 0x9c);
        // CB 9C 02F0
        gbc.setState(0xc8f4, 0x52c8, 0xd9b0, 0x3df8, 0x2900, 0xe732, 0x0, 0x0);
        gbc.writeMem(0xc8f4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x52c8);
        EXPECT(gbc.pc(), 0xc8f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8f4), 0xcb);
        EXPECT(gbc.readMem(0xc8f5), 0x9c);
        // CB 9C 02F1
        gbc.setState(0x77f4, 0x16b1, 0x4a80, 0x4308, 0xc905, 0xb9c8, 0x0, 0x1);
        gbc.writeMem(0x77f4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x16b1);
        EXPECT(gbc.pc(), 0x77f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 02F2
        gbc.setState(0xccde, 0xa786, 0x60d0, 0xc4c, 0x8ab5, 0xacf7, 0x1, 0x0);
        gbc.writeMem(0xccde, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xa786);
        EXPECT(gbc.pc(), 0xcce0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccde), 0xcb);
        EXPECT(gbc.readMem(0xccdf), 0x9c);
        // CB 9C 02F3
        gbc.setState(0x963, 0xa27a, 0x1810, 0xfaba, 0xb786, 0x7708, 0x0, 0x1);
        gbc.writeMem(0x963, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xa27a);
        EXPECT(gbc.pc(), 0x965);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 02F4
        gbc.setState(0x845e, 0xf870, 0x30f0, 0x8886, 0xd5e2, 0xe280, 0x0, 0x1);
        gbc.writeMem(0x845e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf870);
        EXPECT(gbc.pc(), 0x8460);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x845e), 0xcb);
        EXPECT(gbc.readMem(0x845f), 0x9c);
        // CB 9C 02F5
        gbc.setState(0x9346, 0x80ea, 0xc600, 0x4da1, 0x46ad, 0xca5d, 0x1, 0x1);
        gbc.writeMem(0x9346, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x80ea);
        EXPECT(gbc.pc(), 0x9348);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9346), 0xcb);
        EXPECT(gbc.readMem(0x9347), 0x9c);
        // CB 9C 02F6
        gbc.setState(0x2809, 0xc5f1, 0xd300, 0xb896, 0xd13c, 0x2c08, 0x1, 0x0);
        gbc.writeMem(0x2809, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc5f1);
        EXPECT(gbc.pc(), 0x280b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 02F7
        gbc.setState(0xd811, 0xf7ad, 0xd120, 0xe207, 0xb2c3, 0x1334, 0x0, 0x0);
        gbc.writeMem(0xd811, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf7ad);
        EXPECT(gbc.pc(), 0xd813);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd811), 0xcb);
        EXPECT(gbc.readMem(0xd812), 0x9c);
        // CB 9C 02F8
        gbc.setState(0xe29c, 0xfbe8, 0x2810, 0xe4f9, 0x36fd, 0x9d18, 0x1, 0x0);
        gbc.writeMem(0xe29c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xfbe8);
        EXPECT(gbc.pc(), 0xe29e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe29c), 0xcb);
        EXPECT(gbc.readMem(0xe29d), 0x9c);
        // CB 9C 02F9
        gbc.setState(0xc648, 0xce0a, 0xedb0, 0x3f14, 0x3d0a, 0x8321, 0x1, 0x1);
        gbc.writeMem(0xc648, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xce0a);
        EXPECT(gbc.pc(), 0xc64a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc648), 0xcb);
        EXPECT(gbc.readMem(0xc649), 0x9c);
        // CB 9C 02FA
        gbc.setState(0xc6f2, 0xa6c1, 0x4cd0, 0x5b65, 0x86f3, 0x65e7, 0x1, 0x0);
        gbc.writeMem(0xc6f2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa6c1);
        EXPECT(gbc.pc(), 0xc6f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6f2), 0xcb);
        EXPECT(gbc.readMem(0xc6f3), 0x9c);
        // CB 9C 02FB
        gbc.setState(0x74a6, 0x1647, 0x2790, 0x5813, 0xabc2, 0x72b7, 0x0, 0x0);
        gbc.writeMem(0x74a6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1647);
        EXPECT(gbc.pc(), 0x74a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 02FC
        gbc.setState(0xbf2a, 0x3baf, 0x1510, 0x4827, 0x1eca, 0x4734, 0x0, 0x1);
        gbc.writeMem(0xbf2a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3baf);
        EXPECT(gbc.pc(), 0xbf2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf2a), 0xcb);
        EXPECT(gbc.readMem(0xbf2b), 0x9c);
        // CB 9C 02FD
        gbc.setState(0x73b8, 0xc7f3, 0x6b40, 0x26f4, 0x9a52, 0x466f, 0x1, 0x0);
        gbc.writeMem(0x73b8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc7f3);
        EXPECT(gbc.pc(), 0x73ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 02FE
        gbc.setState(0xd86, 0xdfac, 0xe260, 0xb85f, 0x7cb4, 0x7717, 0x1, 0x0);
        gbc.writeMem(0xd86, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xdfac);
        EXPECT(gbc.pc(), 0xd88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 02FF
        gbc.setState(0x6cac, 0x837a, 0x69e0, 0x120e, 0x7235, 0x8ff2, 0x1, 0x0);
        gbc.writeMem(0x6cac, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x837a);
        EXPECT(gbc.pc(), 0x6cae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0300
        gbc.setState(0x80df, 0x510a, 0xc4d0, 0xb32a, 0xaa3a, 0x904, 0x1, 0x0);
        gbc.writeMem(0x80df, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x510a);
        EXPECT(gbc.pc(), 0x80e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80df), 0xcb);
        EXPECT(gbc.readMem(0x80e0), 0x9c);
        // CB 9C 0301
        gbc.setState(0xdde7, 0x3b38, 0x8380, 0xf145, 0x41da, 0xbf, 0x0, 0x0);
        gbc.writeMem(0xdde7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x3b38);
        EXPECT(gbc.pc(), 0xdde9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdde7), 0xcb);
        EXPECT(gbc.readMem(0xdde8), 0x9c);
        // CB 9C 0302
        gbc.setState(0xe245, 0x8e01, 0x8f60, 0x84c7, 0x73d4, 0xb939, 0x0, 0x0);
        gbc.writeMem(0xe245, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x8e01);
        EXPECT(gbc.pc(), 0xe247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe245), 0xcb);
        EXPECT(gbc.readMem(0xe246), 0x9c);
        // CB 9C 0303
        gbc.setState(0xd23c, 0xaf85, 0x550, 0xbf8d, 0xce7b, 0xad1c, 0x1, 0x1);
        gbc.writeMem(0xd23c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xaf85);
        EXPECT(gbc.pc(), 0xd23e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd23c), 0xcb);
        EXPECT(gbc.readMem(0xd23d), 0x9c);
        // CB 9C 0304
        gbc.setState(0x730b, 0x4a0d, 0xc640, 0xd988, 0xd879, 0xc1fd, 0x0, 0x0);
        gbc.writeMem(0x730b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4a0d);
        EXPECT(gbc.pc(), 0x730d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0305
        gbc.setState(0x23b3, 0x9e4f, 0x8490, 0x3b2b, 0xcd3, 0x80a, 0x1, 0x1);
        gbc.writeMem(0x23b3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x9e4f);
        EXPECT(gbc.pc(), 0x23b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0306
        gbc.setState(0xc576, 0x4d2f, 0x810, 0x6da8, 0xe2f0, 0xfd83, 0x1, 0x0);
        gbc.writeMem(0xc576, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4d2f);
        EXPECT(gbc.pc(), 0xc578);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc576), 0xcb);
        EXPECT(gbc.readMem(0xc577), 0x9c);
        // CB 9C 0307
        gbc.setState(0x85b8, 0x5c71, 0xb5a0, 0x461c, 0x4c28, 0x81d0, 0x1, 0x1);
        gbc.writeMem(0x85b8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x5c71);
        EXPECT(gbc.pc(), 0x85ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85b8), 0xcb);
        EXPECT(gbc.readMem(0x85b9), 0x9c);
        // CB 9C 0308
        gbc.setState(0x2f67, 0xe490, 0x8d10, 0x76cb, 0x2b51, 0x9440, 0x0, 0x0);
        gbc.writeMem(0x2f67, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe490);
        EXPECT(gbc.pc(), 0x2f69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0309
        gbc.setState(0x713a, 0x2bb, 0xfbe0, 0x1763, 0xeb6, 0x2c98, 0x0, 0x1);
        gbc.writeMem(0x713a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2bb);
        EXPECT(gbc.pc(), 0x713c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 030A
        gbc.setState(0x6d72, 0xd453, 0x51d0, 0x16c3, 0xa079, 0xc5a, 0x0, 0x1);
        gbc.writeMem(0x6d72, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xd453);
        EXPECT(gbc.pc(), 0x6d74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 030B
        gbc.setState(0x3fca, 0x157d, 0x3430, 0x38ea, 0xb6fb, 0xdc2e, 0x0, 0x1);
        gbc.writeMem(0x3fca, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x157d);
        EXPECT(gbc.pc(), 0x3fcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 030C
        gbc.setState(0x7170, 0x6007, 0x39d0, 0x1a20, 0xd725, 0x8d9d, 0x0, 0x1);
        gbc.writeMem(0x7170, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x6007);
        EXPECT(gbc.pc(), 0x7172);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 030D
        gbc.setState(0xcd8a, 0x27bb, 0xe6c0, 0xcedb, 0x6e8b, 0xd2c3, 0x0, 0x1);
        gbc.writeMem(0xcd8a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x27bb);
        EXPECT(gbc.pc(), 0xcd8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd8a), 0xcb);
        EXPECT(gbc.readMem(0xcd8b), 0x9c);
        // CB 9C 030E
        gbc.setState(0x9900, 0x3bcd, 0xd6a0, 0xf178, 0x1e74, 0xb9f1, 0x1, 0x0);
        gbc.writeMem(0x9900, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3bcd);
        EXPECT(gbc.pc(), 0x9902);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9900), 0xcb);
        EXPECT(gbc.readMem(0x9901), 0x9c);
        // CB 9C 0310
        gbc.setState(0xbe8, 0xc7aa, 0xb1b0, 0xc28f, 0xd43f, 0x3403, 0x1, 0x0);
        gbc.writeMem(0xbe8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xc7aa);
        EXPECT(gbc.pc(), 0xbea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0311
        gbc.setState(0x24ed, 0xd273, 0x51c0, 0x15f5, 0x3c72, 0x4f73, 0x0, 0x0);
        gbc.writeMem(0x24ed, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd273);
        EXPECT(gbc.pc(), 0x24ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0312
        gbc.setState(0x8b21, 0x9859, 0xe930, 0x3586, 0x9cdd, 0x23c8, 0x0, 0x1);
        gbc.writeMem(0x8b21, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9859);
        EXPECT(gbc.pc(), 0x8b23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b21), 0xcb);
        EXPECT(gbc.readMem(0x8b22), 0x9c);
        // CB 9C 0313
        gbc.setState(0x9c4, 0xb50f, 0x97a0, 0x877e, 0x75fd, 0xd191, 0x1, 0x0);
        gbc.writeMem(0x9c4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb50f);
        EXPECT(gbc.pc(), 0x9c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0315
        gbc.setState(0xcaeb, 0x4e25, 0xad50, 0xb6a3, 0x47ea, 0xffa, 0x1, 0x1);
        gbc.writeMem(0xcaeb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x4e25);
        EXPECT(gbc.pc(), 0xcaed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaeb), 0xcb);
        EXPECT(gbc.readMem(0xcaec), 0x9c);
        // CB 9C 0316
        gbc.setState(0x8326, 0xb517, 0x3650, 0xaf6d, 0xb7fd, 0xd729, 0x0, 0x0);
        gbc.writeMem(0x8326, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb517);
        EXPECT(gbc.pc(), 0x8328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8326), 0xcb);
        EXPECT(gbc.readMem(0x8327), 0x9c);
        // CB 9C 0317
        gbc.setState(0x3350, 0xe793, 0x7e20, 0xf654, 0x80b3, 0x563b, 0x0, 0x0);
        gbc.writeMem(0x3350, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe793);
        EXPECT(gbc.pc(), 0x3352);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0318
        gbc.setState(0xd447, 0x8909, 0x18c0, 0x4233, 0x9de8, 0xba66, 0x1, 0x0);
        gbc.writeMem(0xd447, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8909);
        EXPECT(gbc.pc(), 0xd449);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd447), 0xcb);
        EXPECT(gbc.readMem(0xd448), 0x9c);
        // CB 9C 0319
        gbc.setState(0x65ce, 0x7a67, 0x4ab0, 0x5230, 0x6d84, 0x8979, 0x1, 0x0);
        gbc.writeMem(0x65ce, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x7a67);
        EXPECT(gbc.pc(), 0x65d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 031A
        gbc.setState(0x29b2, 0xcede, 0x17a0, 0x3dd3, 0x4b49, 0x1ed6, 0x1, 0x1);
        gbc.writeMem(0x29b2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xcede);
        EXPECT(gbc.pc(), 0x29b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 031B
        gbc.setState(0x7c8e, 0xa8ce, 0x51c0, 0xac24, 0x7b35, 0x7b4f, 0x1, 0x0);
        gbc.writeMem(0x7c8e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xa8ce);
        EXPECT(gbc.pc(), 0x7c90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 031C
        gbc.setState(0x491b, 0xf329, 0x7670, 0xcd9d, 0x9fa6, 0x6585, 0x0, 0x1);
        gbc.writeMem(0x491b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xf329);
        EXPECT(gbc.pc(), 0x491d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 031D
        gbc.setState(0xda51, 0xa2da, 0x1d10, 0x6669, 0x5344, 0xf70e, 0x1, 0x1);
        gbc.writeMem(0xda51, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xa2da);
        EXPECT(gbc.pc(), 0xda53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda51), 0xcb);
        EXPECT(gbc.readMem(0xda52), 0x9c);
        // CB 9C 031E
        gbc.setState(0x44de, 0x1230, 0xef60, 0xb25d, 0xee53, 0xc85a, 0x0, 0x0);
        gbc.writeMem(0x44de, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1230);
        EXPECT(gbc.pc(), 0x44e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 031F
        gbc.setState(0x7155, 0x9fc0, 0x6840, 0x6714, 0x3f98, 0xcb81, 0x0, 0x1);
        gbc.writeMem(0x7155, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9fc0);
        EXPECT(gbc.pc(), 0x7157);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0320
        gbc.setState(0xa5d1, 0x2134, 0xecb0, 0x21af, 0x4b93, 0xa035, 0x0, 0x0);
        gbc.writeMem(0xa5d1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2134);
        EXPECT(gbc.pc(), 0xa5d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5d1), 0xcb);
        EXPECT(gbc.readMem(0xa5d2), 0x9c);
        // CB 9C 0321
        gbc.setState(0x2928, 0x3ec3, 0x3770, 0x8614, 0xcec0, 0x7e55, 0x0, 0x1);
        gbc.writeMem(0x2928, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x3ec3);
        EXPECT(gbc.pc(), 0x292a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0322
        gbc.setState(0x4425, 0x2edf, 0x6e80, 0xc2fb, 0xec40, 0xcc7d, 0x0, 0x0);
        gbc.writeMem(0x4425, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2edf);
        EXPECT(gbc.pc(), 0x4427);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0323
        gbc.setState(0x5170, 0xa6a, 0xd580, 0x6d26, 0x997b, 0xa7f9, 0x1, 0x1);
        gbc.writeMem(0x5170, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xa6a);
        EXPECT(gbc.pc(), 0x5172);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0324
        gbc.setState(0xc3eb, 0x5871, 0xbec0, 0x8f81, 0x67d4, 0x6759, 0x0, 0x1);
        gbc.writeMem(0xc3eb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5871);
        EXPECT(gbc.pc(), 0xc3ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3eb), 0xcb);
        EXPECT(gbc.readMem(0xc3ec), 0x9c);
        // CB 9C 0325
        gbc.setState(0x8f84, 0x5383, 0x6740, 0x1394, 0xe405, 0x7d16, 0x1, 0x0);
        gbc.writeMem(0x8f84, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x5383);
        EXPECT(gbc.pc(), 0x8f86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f84), 0xcb);
        EXPECT(gbc.readMem(0x8f85), 0x9c);
        // CB 9C 0326
        gbc.setState(0x9689, 0x4a2b, 0x2b30, 0xdbb7, 0x489c, 0x8010, 0x0, 0x1);
        gbc.writeMem(0x9689, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x4a2b);
        EXPECT(gbc.pc(), 0x968b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9689), 0xcb);
        EXPECT(gbc.readMem(0x968a), 0x9c);
        // CB 9C 0327
        gbc.setState(0x7717, 0x43db, 0x3670, 0xbe03, 0xd322, 0x45d0, 0x1, 0x1);
        gbc.writeMem(0x7717, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x43db);
        EXPECT(gbc.pc(), 0x7719);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0328
        gbc.setState(0xe315, 0x9521, 0x9970, 0x924e, 0x555c, 0x9e7d, 0x0, 0x1);
        gbc.writeMem(0xe315, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9521);
        EXPECT(gbc.pc(), 0xe317);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe315), 0xcb);
        EXPECT(gbc.readMem(0xe316), 0x9c);
        // CB 9C 0329
        gbc.setState(0x9be9, 0x1afe, 0x9f40, 0xd213, 0x1f21, 0xccd1, 0x0, 0x0);
        gbc.writeMem(0x9be9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x1afe);
        EXPECT(gbc.pc(), 0x9beb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9be9), 0xcb);
        EXPECT(gbc.readMem(0x9bea), 0x9c);
        // CB 9C 032A
        gbc.setState(0x48f8, 0xf1c9, 0x58a0, 0x81be, 0x86e5, 0x1db4, 0x0, 0x0);
        gbc.writeMem(0x48f8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf1c9);
        EXPECT(gbc.pc(), 0x48fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 032B
        gbc.setState(0x3173, 0xdbcc, 0xabe0, 0xaa63, 0x5f42, 0x7, 0x0, 0x0);
        gbc.writeMem(0x3173, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xdbcc);
        EXPECT(gbc.pc(), 0x3175);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 032C
        gbc.setState(0x3a93, 0x44d, 0xaf00, 0xa5c4, 0x9473, 0x8d6a, 0x0, 0x1);
        gbc.writeMem(0x3a93, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x44d);
        EXPECT(gbc.pc(), 0x3a95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 032E
        gbc.setState(0xa253, 0x78a8, 0x18d0, 0xb71, 0x76a8, 0x8166, 0x0, 0x1);
        gbc.writeMem(0xa253, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x78a8);
        EXPECT(gbc.pc(), 0xa255);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa253), 0xcb);
        EXPECT(gbc.readMem(0xa254), 0x9c);
        // CB 9C 032F
        gbc.setState(0x5622, 0x718f, 0xf5f0, 0x85ff, 0xe8fb, 0xd759, 0x1, 0x1);
        gbc.writeMem(0x5622, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x718f);
        EXPECT(gbc.pc(), 0x5624);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0330
        gbc.setState(0x80c4, 0x4944, 0x48a0, 0x8dcb, 0x84d2, 0xa9ff, 0x0, 0x0);
        gbc.writeMem(0x80c4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x4944);
        EXPECT(gbc.pc(), 0x80c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80c4), 0xcb);
        EXPECT(gbc.readMem(0x80c5), 0x9c);
        // CB 9C 0331
        gbc.setState(0x7fcc, 0xeca4, 0x7dc0, 0x6431, 0xf910, 0x2429, 0x1, 0x1);
        gbc.writeMem(0x7fcc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xeca4);
        EXPECT(gbc.pc(), 0x7fce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0332
        gbc.setState(0x98eb, 0x1025, 0xae40, 0x9aed, 0x1fcd, 0x8e85, 0x1, 0x0);
        gbc.writeMem(0x98eb, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x1025);
        EXPECT(gbc.pc(), 0x98ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98eb), 0xcb);
        EXPECT(gbc.readMem(0x98ec), 0x9c);
        // CB 9C 0333
        gbc.setState(0xa0a7, 0x7475, 0x2a30, 0x27e, 0x9db0, 0x884d, 0x0, 0x1);
        gbc.writeMem(0xa0a7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x7475);
        EXPECT(gbc.pc(), 0xa0a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0a7), 0xcb);
        EXPECT(gbc.readMem(0xa0a8), 0x9c);
        // CB 9C 0334
        gbc.setState(0x2ee2, 0x113d, 0xeec0, 0xdef7, 0x33e2, 0x5b33, 0x1, 0x1);
        gbc.writeMem(0x2ee2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x113d);
        EXPECT(gbc.pc(), 0x2ee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0335
        gbc.setState(0xc4cc, 0xae3d, 0xa010, 0x982b, 0xf393, 0x6bf5, 0x0, 0x0);
        gbc.writeMem(0xc4cc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xae3d);
        EXPECT(gbc.pc(), 0xc4ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4cc), 0xcb);
        EXPECT(gbc.readMem(0xc4cd), 0x9c);
        // CB 9C 0337
        gbc.setState(0x3a4d, 0x4e2f, 0x4f00, 0xaaa7, 0x3922, 0x6a63, 0x1, 0x0);
        gbc.writeMem(0x3a4d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4e2f);
        EXPECT(gbc.pc(), 0x3a4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0338
        gbc.setState(0xc914, 0xc622, 0x3250, 0x952e, 0x7ef2, 0x7ce6, 0x1, 0x0);
        gbc.writeMem(0xc914, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc622);
        EXPECT(gbc.pc(), 0xc916);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc914), 0xcb);
        EXPECT(gbc.readMem(0xc915), 0x9c);
        // CB 9C 033A
        gbc.setState(0x4d02, 0x6bd0, 0x19e0, 0x174b, 0xf87, 0x5311, 0x0, 0x0);
        gbc.writeMem(0x4d02, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x6bd0);
        EXPECT(gbc.pc(), 0x4d04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 033B
        gbc.setState(0x6751, 0xd035, 0xc840, 0x6357, 0x82d0, 0x77ff, 0x0, 0x1);
        gbc.writeMem(0x6751, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xd035);
        EXPECT(gbc.pc(), 0x6753);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 033C
        gbc.setState(0x711c, 0xcbaf, 0xc640, 0xb29d, 0x9815, 0x609e, 0x0, 0x1);
        gbc.writeMem(0x711c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xcbaf);
        EXPECT(gbc.pc(), 0x711e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 033D
        gbc.setState(0x3c45, 0x4374, 0x9be0, 0xa5f8, 0x2dba, 0x9435, 0x1, 0x1);
        gbc.writeMem(0x3c45, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4374);
        EXPECT(gbc.pc(), 0x3c47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 033E
        gbc.setState(0xe95f, 0x81c3, 0x3a50, 0x965d, 0x7907, 0xd52a, 0x0, 0x1);
        gbc.writeMem(0xe95f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x81c3);
        EXPECT(gbc.pc(), 0xe961);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe95f), 0xcb);
        EXPECT(gbc.readMem(0xe960), 0x9c);
        // CB 9C 033F
        gbc.setState(0x7cad, 0xa136, 0x110, 0xda62, 0x4cac, 0xb462, 0x1, 0x0);
        gbc.writeMem(0x7cad, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa136);
        EXPECT(gbc.pc(), 0x7caf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0340
        gbc.setState(0xbbdf, 0xa552, 0x4130, 0xf9b1, 0xaa79, 0xce5d, 0x0, 0x1);
        gbc.writeMem(0xbbdf, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa552);
        EXPECT(gbc.pc(), 0xbbe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbdf), 0xcb);
        EXPECT(gbc.readMem(0xbbe0), 0x9c);
        // CB 9C 0341
        gbc.setState(0xcf51, 0x6e9f, 0x5940, 0xc8a, 0xed1b, 0xb3e5, 0x0, 0x0);
        gbc.writeMem(0xcf51, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x6e9f);
        EXPECT(gbc.pc(), 0xcf53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf51), 0xcb);
        EXPECT(gbc.readMem(0xcf52), 0x9c);
        // CB 9C 0342
        gbc.setState(0xcb1b, 0x8863, 0x8290, 0xe436, 0x9918, 0x44e2, 0x1, 0x1);
        gbc.writeMem(0xcb1b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8863);
        EXPECT(gbc.pc(), 0xcb1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb1b), 0xcb);
        EXPECT(gbc.readMem(0xcb1c), 0x9c);
        // CB 9C 0343
        gbc.setState(0x27f8, 0x15e0, 0x9e50, 0x8f52, 0xe1b3, 0xa5e4, 0x0, 0x1);
        gbc.writeMem(0x27f8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x15e0);
        EXPECT(gbc.pc(), 0x27fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0344
        gbc.setState(0xaa8b, 0xeaf0, 0xf520, 0xbe38, 0x7956, 0x50ee, 0x0, 0x0);
        gbc.writeMem(0xaa8b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xeaf0);
        EXPECT(gbc.pc(), 0xaa8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa8b), 0xcb);
        EXPECT(gbc.readMem(0xaa8c), 0x9c);
        // CB 9C 0345
        gbc.setState(0xb180, 0x4d0b, 0x1a10, 0xb113, 0x9748, 0xcd60, 0x1, 0x1);
        gbc.writeMem(0xb180, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x4d0b);
        EXPECT(gbc.pc(), 0xb182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb180), 0xcb);
        EXPECT(gbc.readMem(0xb181), 0x9c);
        // CB 9C 0346
        gbc.setState(0x3221, 0xc583, 0x1340, 0x2def, 0xda3d, 0x783a, 0x0, 0x1);
        gbc.writeMem(0x3221, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc583);
        EXPECT(gbc.pc(), 0x3223);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0347
        gbc.setState(0x96f, 0xf99f, 0xf280, 0x4f40, 0xc9a9, 0xc263, 0x0, 0x1);
        gbc.writeMem(0x96f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xf99f);
        EXPECT(gbc.pc(), 0x971);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0348
        gbc.setState(0x6ef1, 0xda7d, 0x28b0, 0x580f, 0x1612, 0xfdcb, 0x0, 0x1);
        gbc.writeMem(0x6ef1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xda7d);
        EXPECT(gbc.pc(), 0x6ef3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0349
        gbc.setState(0x956d, 0x34ca, 0x1c20, 0xe691, 0x2f56, 0x6e18, 0x1, 0x0);
        gbc.writeMem(0x956d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x34ca);
        EXPECT(gbc.pc(), 0x956f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x956d), 0xcb);
        EXPECT(gbc.readMem(0x956e), 0x9c);
        // CB 9C 034A
        gbc.setState(0xe078, 0x2d7c, 0xcd00, 0xdf72, 0xa097, 0xf678, 0x1, 0x0);
        gbc.writeMem(0xe078, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x2d7c);
        EXPECT(gbc.pc(), 0xe07a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe078), 0xcb);
        EXPECT(gbc.readMem(0xe079), 0x9c);
        // CB 9C 034B
        gbc.setState(0xcfb1, 0x62bb, 0x4ae0, 0xa33d, 0x5889, 0x2f35, 0x0, 0x0);
        gbc.writeMem(0xcfb1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x62bb);
        EXPECT(gbc.pc(), 0xcfb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfb1), 0xcb);
        EXPECT(gbc.readMem(0xcfb2), 0x9c);
        // CB 9C 034C
        gbc.setState(0x7835, 0x7cc8, 0x8b70, 0x5245, 0x1f3d, 0xbd9a, 0x1, 0x1);
        gbc.writeMem(0x7835, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7cc8);
        EXPECT(gbc.pc(), 0x7837);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 034D
        gbc.setState(0x8cf7, 0x7b2c, 0x3190, 0xee23, 0x114b, 0xea3a, 0x1, 0x0);
        gbc.writeMem(0x8cf7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7b2c);
        EXPECT(gbc.pc(), 0x8cf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cf7), 0xcb);
        EXPECT(gbc.readMem(0x8cf8), 0x9c);
        // CB 9C 034E
        gbc.setState(0xb04a, 0x45d8, 0x7e50, 0x338c, 0xfe1e, 0xaabd, 0x0, 0x1);
        gbc.writeMem(0xb04a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x45d8);
        EXPECT(gbc.pc(), 0xb04c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb04a), 0xcb);
        EXPECT(gbc.readMem(0xb04b), 0x9c);
        // CB 9C 034F
        gbc.setState(0x503, 0xdf84, 0x25c0, 0xdc52, 0xec26, 0xaaec, 0x1, 0x1);
        gbc.writeMem(0x503, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xdf84);
        EXPECT(gbc.pc(), 0x505);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0350
        gbc.setState(0xe0d0, 0xd46a, 0xaec0, 0xd4b9, 0x837a, 0x8ef7, 0x1, 0x1);
        gbc.writeMem(0xe0d0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd46a);
        EXPECT(gbc.pc(), 0xe0d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0d0), 0xcb);
        EXPECT(gbc.readMem(0xe0d1), 0x9c);
        // CB 9C 0351
        gbc.setState(0x6c47, 0xa7db, 0xf4c0, 0xc21f, 0xd840, 0x5517, 0x0, 0x1);
        gbc.writeMem(0x6c47, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa7db);
        EXPECT(gbc.pc(), 0x6c49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0352
        gbc.setState(0x1a7a, 0xcfe0, 0x9a00, 0x7fad, 0xcb0b, 0x25c1, 0x1, 0x1);
        gbc.writeMem(0x1a7a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xcfe0);
        EXPECT(gbc.pc(), 0x1a7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0353
        gbc.setState(0xe914, 0x8392, 0xa9a0, 0xb899, 0x556a, 0x318, 0x1, 0x1);
        gbc.writeMem(0xe914, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8392);
        EXPECT(gbc.pc(), 0xe916);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe914), 0xcb);
        EXPECT(gbc.readMem(0xe915), 0x9c);
        // CB 9C 0354
        gbc.setState(0xc15c, 0xcf6c, 0x9b50, 0x56df, 0x1b47, 0x3521, 0x0, 0x0);
        gbc.writeMem(0xc15c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xcf6c);
        EXPECT(gbc.pc(), 0xc15e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc15c), 0xcb);
        EXPECT(gbc.readMem(0xc15d), 0x9c);
        // CB 9C 0355
        gbc.setState(0x4c17, 0xb49b, 0x8b30, 0x4506, 0x1f01, 0xd616, 0x1, 0x0);
        gbc.writeMem(0x4c17, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb49b);
        EXPECT(gbc.pc(), 0x4c19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0356
        gbc.setState(0xe122, 0x4b09, 0x3830, 0xc81a, 0x705, 0x40a8, 0x0, 0x0);
        gbc.writeMem(0xe122, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x4b09);
        EXPECT(gbc.pc(), 0xe124);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe122), 0xcb);
        EXPECT(gbc.readMem(0xe123), 0x9c);
        // CB 9C 0357
        gbc.setState(0x9543, 0x4369, 0x96a0, 0x4e5c, 0x774f, 0xb269, 0x1, 0x0);
        gbc.writeMem(0x9543, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x4369);
        EXPECT(gbc.pc(), 0x9545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9543), 0xcb);
        EXPECT(gbc.readMem(0x9544), 0x9c);
        // CB 9C 0358
        gbc.setState(0x76b1, 0x57e3, 0x3fe0, 0xc1b0, 0xd6d7, 0xdcef, 0x1, 0x1);
        gbc.writeMem(0x76b1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x57e3);
        EXPECT(gbc.pc(), 0x76b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0359
        gbc.setState(0x8377, 0x4a0f, 0xe640, 0x65b7, 0xcfb8, 0x8137, 0x0, 0x1);
        gbc.writeMem(0x8377, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4a0f);
        EXPECT(gbc.pc(), 0x8379);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8377), 0xcb);
        EXPECT(gbc.readMem(0x8378), 0x9c);
        // CB 9C 035A
        gbc.setState(0xa904, 0xeaf1, 0xfc20, 0xc56b, 0x5841, 0xc456, 0x1, 0x1);
        gbc.writeMem(0xa904, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xeaf1);
        EXPECT(gbc.pc(), 0xa906);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa904), 0xcb);
        EXPECT(gbc.readMem(0xa905), 0x9c);
        // CB 9C 035B
        gbc.setState(0x29f, 0xbe32, 0xd8e0, 0xe80f, 0xffa7, 0x34b2, 0x0, 0x1);
        gbc.writeMem(0x29f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xbe32);
        EXPECT(gbc.pc(), 0x2a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 035C
        gbc.setState(0x8d64, 0x7a50, 0xb570, 0xef0d, 0xafeb, 0x917, 0x1, 0x0);
        gbc.writeMem(0x8d64, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7a50);
        EXPECT(gbc.pc(), 0x8d66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d64), 0xcb);
        EXPECT(gbc.readMem(0x8d65), 0x9c);
        // CB 9C 035D
        gbc.setState(0x4f8, 0xc083, 0x75d0, 0xb8f9, 0x97b2, 0x26c1, 0x0, 0x1);
        gbc.writeMem(0x4f8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xc083);
        EXPECT(gbc.pc(), 0x4fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 035E
        gbc.setState(0xcaba, 0x8696, 0x8550, 0xf806, 0x358, 0x750b, 0x0, 0x1);
        gbc.writeMem(0xcaba, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x8696);
        EXPECT(gbc.pc(), 0xcabc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaba), 0xcb);
        EXPECT(gbc.readMem(0xcabb), 0x9c);
        // CB 9C 035F
        gbc.setState(0x1d78, 0xa884, 0x8c70, 0x2ac7, 0xe089, 0x55be, 0x1, 0x1);
        gbc.writeMem(0x1d78, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xa884);
        EXPECT(gbc.pc(), 0x1d7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0360
        gbc.setState(0x3d35, 0xad42, 0x49b0, 0xe727, 0x6606, 0x8fa9, 0x1, 0x0);
        gbc.writeMem(0x3d35, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xad42);
        EXPECT(gbc.pc(), 0x3d37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0361
        gbc.setState(0xa70f, 0xe975, 0x8a60, 0xaf6, 0x706f, 0x6467, 0x1, 0x0);
        gbc.writeMem(0xa70f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe975);
        EXPECT(gbc.pc(), 0xa711);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa70f), 0xcb);
        EXPECT(gbc.readMem(0xa710), 0x9c);
        // CB 9C 0362
        gbc.setState(0x7521, 0x2dd1, 0xdaa0, 0xb19f, 0x9c60, 0xca26, 0x1, 0x1);
        gbc.writeMem(0x7521, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x2dd1);
        EXPECT(gbc.pc(), 0x7523);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0363
        gbc.setState(0x3ebf, 0xc99b, 0xea40, 0xfc66, 0x2d41, 0xf2c2, 0x1, 0x0);
        gbc.writeMem(0x3ebf, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc99b);
        EXPECT(gbc.pc(), 0x3ec1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0364
        gbc.setState(0x7b59, 0xc3e3, 0x20f0, 0x3d9a, 0x7f8, 0xc89d, 0x1, 0x1);
        gbc.writeMem(0x7b59, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc3e3);
        EXPECT(gbc.pc(), 0x7b5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0365
        gbc.setState(0x6068, 0xaee5, 0xb180, 0xd3f9, 0xa992, 0xd4a4, 0x0, 0x0);
        gbc.writeMem(0x6068, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xaee5);
        EXPECT(gbc.pc(), 0x606a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0366
        gbc.setState(0xb00d, 0xac25, 0xb820, 0xeddb, 0xbf36, 0x1c24, 0x0, 0x1);
        gbc.writeMem(0xb00d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xac25);
        EXPECT(gbc.pc(), 0xb00f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb00d), 0xcb);
        EXPECT(gbc.readMem(0xb00e), 0x9c);
        // CB 9C 0367
        gbc.setState(0x29d6, 0x4f08, 0x5450, 0xaa47, 0x1165, 0xa21a, 0x0, 0x1);
        gbc.writeMem(0x29d6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4f08);
        EXPECT(gbc.pc(), 0x29d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0368
        gbc.setState(0x61e1, 0x914a, 0x5220, 0x72a1, 0x346a, 0xd498, 0x1, 0x0);
        gbc.writeMem(0x61e1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x914a);
        EXPECT(gbc.pc(), 0x61e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0369
        gbc.setState(0x5c5a, 0xbf80, 0x3720, 0x3174, 0x3ad0, 0xf8a2, 0x0, 0x0);
        gbc.writeMem(0x5c5a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xbf80);
        EXPECT(gbc.pc(), 0x5c5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 036A
        gbc.setState(0x1ef0, 0x2bf0, 0x7960, 0xd6dd, 0xf879, 0x7cb9, 0x0, 0x0);
        gbc.writeMem(0x1ef0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2bf0);
        EXPECT(gbc.pc(), 0x1ef2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 036B
        gbc.setState(0x7552, 0xd659, 0xcd10, 0x913d, 0x3db, 0x4429, 0x0, 0x1);
        gbc.writeMem(0x7552, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd659);
        EXPECT(gbc.pc(), 0x7554);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 036D
        gbc.setState(0xde3d, 0xc8, 0x240, 0xc77f, 0xc3f7, 0x11d4, 0x0, 0x0);
        gbc.writeMem(0xde3d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc8);
        EXPECT(gbc.pc(), 0xde3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde3d), 0xcb);
        EXPECT(gbc.readMem(0xde3e), 0x9c);
        // CB 9C 036E
        gbc.setState(0x5e74, 0x87bd, 0x180, 0x3c94, 0x9190, 0x877f, 0x0, 0x0);
        gbc.writeMem(0x5e74, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x87bd);
        EXPECT(gbc.pc(), 0x5e76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 036F
        gbc.setState(0x4d6b, 0x3eeb, 0xc620, 0xc5bc, 0x8e9c, 0x6e67, 0x0, 0x1);
        gbc.writeMem(0x4d6b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3eeb);
        EXPECT(gbc.pc(), 0x4d6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0370
        gbc.setState(0xabef, 0x6d1c, 0x41d0, 0x84af, 0xf579, 0xfeec, 0x1, 0x1);
        gbc.writeMem(0xabef, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x6d1c);
        EXPECT(gbc.pc(), 0xabf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabef), 0xcb);
        EXPECT(gbc.readMem(0xabf0), 0x9c);
        // CB 9C 0371
        gbc.setState(0x1def, 0x2f4a, 0xeef0, 0xf545, 0xa0a, 0x69ad, 0x0, 0x0);
        gbc.writeMem(0x1def, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2f4a);
        EXPECT(gbc.pc(), 0x1df1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0372
        gbc.setState(0x93fd, 0x9fc0, 0x56c0, 0x3e55, 0x3f72, 0x4a42, 0x0, 0x1);
        gbc.writeMem(0x93fd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x9fc0);
        EXPECT(gbc.pc(), 0x93ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93fd), 0xcb);
        EXPECT(gbc.readMem(0x93fe), 0x9c);
        // CB 9C 0373
        gbc.setState(0x9628, 0x310e, 0x9780, 0xf978, 0xcb03, 0x9673, 0x0, 0x1);
        gbc.writeMem(0x9628, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x310e);
        EXPECT(gbc.pc(), 0x962a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9628), 0xcb);
        EXPECT(gbc.readMem(0x9629), 0x9c);
        // CB 9C 0374
        gbc.setState(0x5af9, 0xac01, 0x9ea0, 0x1470, 0x396f, 0x51ca, 0x0, 0x0);
        gbc.writeMem(0x5af9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xac01);
        EXPECT(gbc.pc(), 0x5afb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0375
        gbc.setState(0x8eb4, 0xc3b8, 0x4830, 0xad41, 0xcb4d, 0x61b9, 0x1, 0x0);
        gbc.writeMem(0x8eb4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xc3b8);
        EXPECT(gbc.pc(), 0x8eb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eb4), 0xcb);
        EXPECT(gbc.readMem(0x8eb5), 0x9c);
        // CB 9C 0376
        gbc.setState(0x3ef1, 0x5510, 0x2d50, 0xa811, 0x5eb3, 0x1651, 0x1, 0x1);
        gbc.writeMem(0x3ef1, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5510);
        EXPECT(gbc.pc(), 0x3ef3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0377
        gbc.setState(0x1f9f, 0x1843, 0xac70, 0x5052, 0x723e, 0x418e, 0x0, 0x1);
        gbc.writeMem(0x1f9f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1843);
        EXPECT(gbc.pc(), 0x1fa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0378
        gbc.setState(0x62c6, 0x8091, 0x62e0, 0x7612, 0x33a1, 0x7594, 0x0, 0x0);
        gbc.writeMem(0x62c6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x8091);
        EXPECT(gbc.pc(), 0x62c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 037A
        gbc.setState(0xc4e7, 0x2ea1, 0xf730, 0x192e, 0x9b44, 0x38ee, 0x0, 0x0);
        gbc.writeMem(0xc4e7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2ea1);
        EXPECT(gbc.pc(), 0xc4e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4e7), 0xcb);
        EXPECT(gbc.readMem(0xc4e8), 0x9c);
        // CB 9C 037B
        gbc.setState(0x92cf, 0xcf65, 0x9600, 0xf08c, 0xd8fb, 0xd968, 0x1, 0x0);
        gbc.writeMem(0x92cf, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xcf65);
        EXPECT(gbc.pc(), 0x92d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92cf), 0xcb);
        EXPECT(gbc.readMem(0x92d0), 0x9c);
        // CB 9C 037C
        gbc.setState(0x840e, 0xefae, 0x5f90, 0x7e14, 0x9b3c, 0xd3e8, 0x1, 0x0);
        gbc.writeMem(0x840e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xefae);
        EXPECT(gbc.pc(), 0x8410);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x840e), 0xcb);
        EXPECT(gbc.readMem(0x840f), 0x9c);
        // CB 9C 037D
        gbc.setState(0x9f7b, 0x1ec, 0xa9b0, 0x5664, 0x5bc9, 0xb687, 0x1, 0x0);
        gbc.writeMem(0x9f7b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x1ec);
        EXPECT(gbc.pc(), 0x9f7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f7b), 0xcb);
        EXPECT(gbc.readMem(0x9f7c), 0x9c);
        // CB 9C 037E
        gbc.setState(0x48dd, 0xf754, 0xda80, 0x8137, 0x7922, 0x31dc, 0x1, 0x0);
        gbc.writeMem(0x48dd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xf754);
        EXPECT(gbc.pc(), 0x48df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 037F
        gbc.setState(0x493d, 0xb407, 0x5c0, 0xcca1, 0xf6e2, 0xc5c7, 0x1, 0x1);
        gbc.writeMem(0x493d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb407);
        EXPECT(gbc.pc(), 0x493f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0380
        gbc.setState(0xdb61, 0x9cae, 0x97f0, 0x5584, 0xaea9, 0x54d4, 0x0, 0x0);
        gbc.writeMem(0xdb61, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9cae);
        EXPECT(gbc.pc(), 0xdb63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb61), 0xcb);
        EXPECT(gbc.readMem(0xdb62), 0x9c);
        // CB 9C 0382
        gbc.setState(0x8610, 0x680a, 0xefc0, 0x9ee2, 0xbc6, 0x38bd, 0x1, 0x0);
        gbc.writeMem(0x8610, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x680a);
        EXPECT(gbc.pc(), 0x8612);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8610), 0xcb);
        EXPECT(gbc.readMem(0x8611), 0x9c);
        // CB 9C 0383
        gbc.setState(0xc0fc, 0xa08c, 0x9f60, 0x92c5, 0x13fb, 0x222a, 0x1, 0x1);
        gbc.writeMem(0xc0fc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa08c);
        EXPECT(gbc.pc(), 0xc0fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0fc), 0xcb);
        EXPECT(gbc.readMem(0xc0fd), 0x9c);
        // CB 9C 0384
        gbc.setState(0x7842, 0x4e7c, 0x5640, 0x4fb, 0xf2e8, 0xca43, 0x1, 0x0);
        gbc.writeMem(0x7842, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x4e7c);
        EXPECT(gbc.pc(), 0x7844);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0385
        gbc.setState(0xa5b8, 0x127a, 0x7110, 0xbe64, 0xd7d5, 0x970f, 0x0, 0x1);
        gbc.writeMem(0xa5b8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x127a);
        EXPECT(gbc.pc(), 0xa5ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5b8), 0xcb);
        EXPECT(gbc.readMem(0xa5b9), 0x9c);
        // CB 9C 0386
        gbc.setState(0xcdce, 0x5183, 0x67e0, 0xaa26, 0xcf1d, 0xb706, 0x0, 0x1);
        gbc.writeMem(0xcdce, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5183);
        EXPECT(gbc.pc(), 0xcdd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdce), 0xcb);
        EXPECT(gbc.readMem(0xcdcf), 0x9c);
        // CB 9C 0387
        gbc.setState(0xb7e2, 0x38ce, 0x5f80, 0x4771, 0xea42, 0x4683, 0x0, 0x0);
        gbc.writeMem(0xb7e2, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x38ce);
        EXPECT(gbc.pc(), 0xb7e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7e2), 0xcb);
        EXPECT(gbc.readMem(0xb7e3), 0x9c);
        // CB 9C 0388
        gbc.setState(0x6991, 0xfb88, 0x6e20, 0xa6bf, 0x8d91, 0xc356, 0x0, 0x0);
        gbc.writeMem(0x6991, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xfb88);
        EXPECT(gbc.pc(), 0x6993);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0389
        gbc.setState(0x170a, 0xc781, 0xb600, 0xce0b, 0x27f4, 0x20bf, 0x0, 0x1);
        gbc.writeMem(0x170a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xc781);
        EXPECT(gbc.pc(), 0x170c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 038A
        gbc.setState(0x96dd, 0x7588, 0xa930, 0xfa4, 0xf36e, 0x81c5, 0x1, 0x0);
        gbc.writeMem(0x96dd, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7588);
        EXPECT(gbc.pc(), 0x96df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96dd), 0xcb);
        EXPECT(gbc.readMem(0x96de), 0x9c);
        // CB 9C 038B
        gbc.setState(0x841b, 0x909c, 0xd760, 0xcfe2, 0x89b4, 0xf557, 0x1, 0x0);
        gbc.writeMem(0x841b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x909c);
        EXPECT(gbc.pc(), 0x841d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x841b), 0xcb);
        EXPECT(gbc.readMem(0x841c), 0x9c);
        // CB 9C 038C
        gbc.setState(0x5c1a, 0xfd03, 0xbf20, 0xdbb0, 0xb56f, 0x1cb2, 0x0, 0x1);
        gbc.writeMem(0x5c1a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xfd03);
        EXPECT(gbc.pc(), 0x5c1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 038D
        gbc.setState(0xbca0, 0xe076, 0x4cc0, 0x8e21, 0xb856, 0x3458, 0x0, 0x0);
        gbc.writeMem(0xbca0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xe076);
        EXPECT(gbc.pc(), 0xbca2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbca0), 0xcb);
        EXPECT(gbc.readMem(0xbca1), 0x9c);
        // CB 9C 038E
        gbc.setState(0x16a4, 0xc99a, 0xc4f0, 0xc4b6, 0xf239, 0xfcff, 0x1, 0x1);
        gbc.writeMem(0x16a4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc99a);
        EXPECT(gbc.pc(), 0x16a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 038F
        gbc.setState(0x5cff, 0x3f08, 0xc9c0, 0x528a, 0xab6e, 0x9b41, 0x0, 0x1);
        gbc.writeMem(0x5cff, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x3f08);
        EXPECT(gbc.pc(), 0x5d01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0390
        gbc.setState(0x4e26, 0xed98, 0x8ba0, 0x4885, 0x4397, 0x7820, 0x1, 0x1);
        gbc.writeMem(0x4e26, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xed98);
        EXPECT(gbc.pc(), 0x4e28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0391
        gbc.setState(0x6e0b, 0x1052, 0x8310, 0x111d, 0x1b2a, 0x4fc, 0x0, 0x1);
        gbc.writeMem(0x6e0b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x1052);
        EXPECT(gbc.pc(), 0x6e0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0392
        gbc.setState(0xcf8, 0x5366, 0x9bb0, 0x457c, 0xd657, 0x6af0, 0x1, 0x0);
        gbc.writeMem(0xcf8, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5366);
        EXPECT(gbc.pc(), 0xcfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0393
        gbc.setState(0x2b50, 0x822, 0xd90, 0x6141, 0x18d7, 0xc9d8, 0x1, 0x1);
        gbc.writeMem(0x2b50, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x822);
        EXPECT(gbc.pc(), 0x2b52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0394
        gbc.setState(0xb477, 0xd3d0, 0x51b0, 0x9f6f, 0x6c6a, 0x1187, 0x0, 0x0);
        gbc.writeMem(0xb477, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd3d0);
        EXPECT(gbc.pc(), 0xb479);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb477), 0xcb);
        EXPECT(gbc.readMem(0xb478), 0x9c);
        // CB 9C 0395
        gbc.setState(0x2715, 0xb324, 0x84c0, 0x8643, 0xfe6c, 0x29c, 0x1, 0x1);
        gbc.writeMem(0x2715, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb324);
        EXPECT(gbc.pc(), 0x2717);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0396
        gbc.setState(0xd815, 0xbcf7, 0xe1d0, 0xb51a, 0x603e, 0x1056, 0x1, 0x0);
        gbc.writeMem(0xd815, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xbcf7);
        EXPECT(gbc.pc(), 0xd817);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd815), 0xcb);
        EXPECT(gbc.readMem(0xd816), 0x9c);
        // CB 9C 0397
        gbc.setState(0x1b0b, 0x131b, 0x39a0, 0x355c, 0xd7e5, 0x426b, 0x1, 0x0);
        gbc.writeMem(0x1b0b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x131b);
        EXPECT(gbc.pc(), 0x1b0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 0398
        gbc.setState(0x1467, 0x7acd, 0x5e70, 0xd833, 0x3954, 0x3206, 0x0, 0x0);
        gbc.writeMem(0x1467, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7acd);
        EXPECT(gbc.pc(), 0x1469);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 0399
        gbc.setState(0x44d7, 0xe8e5, 0x7c0, 0xa6d2, 0x8c5, 0xff31, 0x1, 0x0);
        gbc.writeMem(0x44d7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe8e5);
        EXPECT(gbc.pc(), 0x44d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 039A
        gbc.setState(0xb677, 0xa27, 0xd5a0, 0x6c36, 0x3d43, 0x7042, 0x0, 0x0);
        gbc.writeMem(0xb677, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xa27);
        EXPECT(gbc.pc(), 0xb679);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb677), 0xcb);
        EXPECT(gbc.readMem(0xb678), 0x9c);
        // CB 9C 039B
        gbc.setState(0x8196, 0xd49a, 0x4600, 0x244c, 0x3f9b, 0x1b39, 0x0, 0x0);
        gbc.writeMem(0x8196, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd49a);
        EXPECT(gbc.pc(), 0x8198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8196), 0xcb);
        EXPECT(gbc.readMem(0x8197), 0x9c);
        // CB 9C 039C
        gbc.setState(0xa287, 0x7dc, 0x84e0, 0x70da, 0x4464, 0xccad, 0x0, 0x1);
        gbc.writeMem(0xa287, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x7dc);
        EXPECT(gbc.pc(), 0xa289);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa287), 0xcb);
        EXPECT(gbc.readMem(0xa288), 0x9c);
        // CB 9C 039D
        gbc.setState(0x1486, 0xafe, 0xd9d0, 0xb3a9, 0x642b, 0xa83c, 0x0, 0x0);
        gbc.writeMem(0x1486, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xafe);
        EXPECT(gbc.pc(), 0x1488);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 039E
        gbc.setState(0xbd75, 0xa20a, 0x6fd0, 0xd60f, 0xdc77, 0xa8a, 0x0, 0x0);
        gbc.writeMem(0xbd75, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa20a);
        EXPECT(gbc.pc(), 0xbd77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd75), 0xcb);
        EXPECT(gbc.readMem(0xbd76), 0x9c);
        // CB 9C 039F
        gbc.setState(0x4f8b, 0x9092, 0xb4e0, 0xedcc, 0xbea8, 0xeb31, 0x1, 0x0);
        gbc.writeMem(0x4f8b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9092);
        EXPECT(gbc.pc(), 0x4f8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 03A0
        gbc.setState(0x442c, 0x65, 0x55f0, 0xe074, 0x18d0, 0x1e0d, 0x0, 0x0);
        gbc.writeMem(0x442c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x65);
        EXPECT(gbc.pc(), 0x442e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 03A1
        gbc.setState(0xc5da, 0x52cc, 0xa780, 0x2b12, 0xdf73, 0xcf6f, 0x0, 0x1);
        gbc.writeMem(0xc5da, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x52cc);
        EXPECT(gbc.pc(), 0xc5dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5da), 0xcb);
        EXPECT(gbc.readMem(0xc5db), 0x9c);
        // CB 9C 03A2
        gbc.setState(0xb490, 0x3c79, 0xc480, 0x6d29, 0x4d59, 0xe433, 0x1, 0x0);
        gbc.writeMem(0xb490, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3c79);
        EXPECT(gbc.pc(), 0xb492);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb490), 0xcb);
        EXPECT(gbc.readMem(0xb491), 0x9c);
        // CB 9C 03A3
        gbc.setState(0x5656, 0x28cb, 0xee50, 0xb39c, 0x7c9b, 0xd722, 0x1, 0x1);
        gbc.writeMem(0x5656, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x28cb);
        EXPECT(gbc.pc(), 0x5658);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 03A4
        gbc.setState(0x8bea, 0x623c, 0xb190, 0x56c1, 0xea, 0x4e9a, 0x1, 0x1);
        gbc.writeMem(0x8bea, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x623c);
        EXPECT(gbc.pc(), 0x8bec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bea), 0xcb);
        EXPECT(gbc.readMem(0x8beb), 0x9c);
        // CB 9C 03A5
        gbc.setState(0x7cac, 0x7bef, 0xe610, 0x76cb, 0x8f92, 0x89f4, 0x0, 0x1);
        gbc.writeMem(0x7cac, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7bef);
        EXPECT(gbc.pc(), 0x7cae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 03A6
        gbc.setState(0x7385, 0xbbb7, 0x4b0, 0x2a28, 0x174f, 0x3d47, 0x0, 0x1);
        gbc.writeMem(0x7385, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xbbb7);
        EXPECT(gbc.pc(), 0x7387);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 03A7
        gbc.setState(0xdf0c, 0x6dbe, 0x3630, 0x6a60, 0x9eef, 0x7748, 0x1, 0x1);
        gbc.writeMem(0xdf0c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6dbe);
        EXPECT(gbc.pc(), 0xdf0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf0c), 0xcb);
        EXPECT(gbc.readMem(0xdf0d), 0x9c);
        // CB 9C 03A8
        gbc.setState(0x9677, 0x3891, 0x6c20, 0xbff4, 0x26f4, 0x488e, 0x1, 0x0);
        gbc.writeMem(0x9677, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3891);
        EXPECT(gbc.pc(), 0x9679);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9677), 0xcb);
        EXPECT(gbc.readMem(0x9678), 0x9c);
        // CB 9C 03A9
        gbc.setState(0xd89a, 0x9672, 0x47e0, 0x4f81, 0x2692, 0x67bf, 0x1, 0x0);
        gbc.writeMem(0xd89a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x9672);
        EXPECT(gbc.pc(), 0xd89c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd89a), 0xcb);
        EXPECT(gbc.readMem(0xd89b), 0x9c);
        // CB 9C 03AA
        gbc.setState(0x9ca4, 0xc3c8, 0x8270, 0x6da8, 0xa07e, 0xc33f, 0x1, 0x0);
        gbc.writeMem(0x9ca4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xc3c8);
        EXPECT(gbc.pc(), 0x9ca6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ca4), 0xcb);
        EXPECT(gbc.readMem(0x9ca5), 0x9c);
        // CB 9C 03AC
        gbc.setState(0xd441, 0xda0, 0x1fc0, 0xfb47, 0x3a86, 0xefda, 0x1, 0x1);
        gbc.writeMem(0xd441, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xda0);
        EXPECT(gbc.pc(), 0xd443);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd441), 0xcb);
        EXPECT(gbc.readMem(0xd442), 0x9c);
        // CB 9C 03AD
        gbc.setState(0xcdfa, 0x78d8, 0xbe40, 0x7245, 0x1c5f, 0xe259, 0x0, 0x0);
        gbc.writeMem(0xcdfa, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x78d8);
        EXPECT(gbc.pc(), 0xcdfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdfa), 0xcb);
        EXPECT(gbc.readMem(0xcdfb), 0x9c);
        // CB 9C 03AE
        gbc.setState(0xe440, 0x53e9, 0xf990, 0x6ff6, 0xed05, 0x5ee8, 0x0, 0x0);
        gbc.writeMem(0xe440, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x53e9);
        EXPECT(gbc.pc(), 0xe442);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe440), 0xcb);
        EXPECT(gbc.readMem(0xe441), 0x9c);
        // CB 9C 03AF
        gbc.setState(0x2c44, 0xd99, 0x30, 0x61a7, 0xb268, 0xd4a8, 0x0, 0x0);
        gbc.writeMem(0x2c44, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd99);
        EXPECT(gbc.pc(), 0x2c46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 03B0
        gbc.setState(0xd3ea, 0x6ff2, 0x5030, 0x660c, 0x6917, 0x1d72, 0x0, 0x0);
        gbc.writeMem(0xd3ea, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x6ff2);
        EXPECT(gbc.pc(), 0xd3ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3ea), 0xcb);
        EXPECT(gbc.readMem(0xd3eb), 0x9c);
        // CB 9C 03B1
        gbc.setState(0xaf6f, 0xe12, 0xb0, 0xee49, 0x5706, 0xcedb, 0x1, 0x0);
        gbc.writeMem(0xaf6f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xe12);
        EXPECT(gbc.pc(), 0xaf71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf6f), 0xcb);
        EXPECT(gbc.readMem(0xaf70), 0x9c);
        // CB 9C 03B2
        gbc.setState(0xd772, 0xb8d0, 0x64f0, 0x916c, 0x9ebf, 0x8ad6, 0x0, 0x0);
        gbc.writeMem(0xd772, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xb8d0);
        EXPECT(gbc.pc(), 0xd774);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd772), 0xcb);
        EXPECT(gbc.readMem(0xd773), 0x9c);
        // CB 9C 03B3
        gbc.setState(0x5a4f, 0x756a, 0x5460, 0xb6e8, 0x7cc7, 0xf526, 0x0, 0x1);
        gbc.writeMem(0x5a4f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x756a);
        EXPECT(gbc.pc(), 0x5a51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 03B4
        gbc.setState(0x5a35, 0x9aea, 0xdab0, 0xc011, 0x8e33, 0x59ce, 0x1, 0x1);
        gbc.writeMem(0x5a35, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x9aea);
        EXPECT(gbc.pc(), 0x5a37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 03B5
        gbc.setState(0x9c16, 0xcdff, 0xdb60, 0x3689, 0x5e85, 0x1f5b, 0x1, 0x1);
        gbc.writeMem(0x9c16, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xcdff);
        EXPECT(gbc.pc(), 0x9c18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c16), 0xcb);
        EXPECT(gbc.readMem(0x9c17), 0x9c);
        // CB 9C 03B6
        gbc.setState(0xa6ff, 0xe364, 0x6450, 0xce5f, 0xce30, 0x8e17, 0x0, 0x0);
        gbc.writeMem(0xa6ff, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe364);
        EXPECT(gbc.pc(), 0xa701);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6ff), 0xcb);
        EXPECT(gbc.readMem(0xa700), 0x9c);
        // CB 9C 03B7
        gbc.setState(0x4ef9, 0xd228, 0x5c50, 0x106f, 0xca72, 0xf6b6, 0x1, 0x0);
        gbc.writeMem(0x4ef9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd228);
        EXPECT(gbc.pc(), 0x4efb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 03B8
        gbc.setState(0x5aaa, 0xe5c6, 0xd830, 0x1bca, 0x1f6f, 0x9b11, 0x0, 0x0);
        gbc.writeMem(0x5aaa, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xe5c6);
        EXPECT(gbc.pc(), 0x5aac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 03B9
        gbc.setState(0x43ce, 0x7166, 0xccd0, 0x3d9d, 0x3f1f, 0xc819, 0x0, 0x0);
        gbc.writeMem(0x43ce, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x7166);
        EXPECT(gbc.pc(), 0x43d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 03BA
        gbc.setState(0x67b7, 0x5716, 0x4d0, 0xa5c3, 0x60d0, 0x654, 0x0, 0x1);
        gbc.writeMem(0x67b7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5716);
        EXPECT(gbc.pc(), 0x67b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 03BB
        gbc.setState(0x7211, 0x5820, 0xbf0, 0x29d0, 0x5b14, 0x92f9, 0x1, 0x0);
        gbc.writeMem(0x7211, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x5820);
        EXPECT(gbc.pc(), 0x7213);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 03BC
        gbc.setState(0x60dc, 0xc7e7, 0x21d0, 0x3b26, 0xba81, 0x1822, 0x1, 0x0);
        gbc.writeMem(0x60dc, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc7e7);
        EXPECT(gbc.pc(), 0x60de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 03BD
        gbc.setState(0x1b04, 0x95a6, 0x5580, 0x3169, 0x203a, 0xaae4, 0x1, 0x1);
        gbc.writeMem(0x1b04, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x95a6);
        EXPECT(gbc.pc(), 0x1b06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 03BF
        gbc.setState(0x2546, 0xc207, 0x4160, 0xef82, 0xe36f, 0x569e, 0x0, 0x1);
        gbc.writeMem(0x2546, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc207);
        EXPECT(gbc.pc(), 0x2548);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 03C0
        gbc.setState(0xdf92, 0x98ac, 0x2bf0, 0x215e, 0x12cf, 0x8ecd, 0x0, 0x1);
        gbc.writeMem(0xdf92, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x98ac);
        EXPECT(gbc.pc(), 0xdf94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf92), 0xcb);
        EXPECT(gbc.readMem(0xdf93), 0x9c);
        // CB 9C 03C1
        gbc.setState(0x9838, 0x11d4, 0xadb0, 0xebc8, 0xda, 0xd635, 0x1, 0x0);
        gbc.writeMem(0x9838, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x11d4);
        EXPECT(gbc.pc(), 0x983a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9838), 0xcb);
        EXPECT(gbc.readMem(0x9839), 0x9c);
        // CB 9C 03C2
        gbc.setState(0xc821, 0xa79f, 0x64a0, 0xf59e, 0x591, 0x79c7, 0x1, 0x1);
        gbc.writeMem(0xc821, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa79f);
        EXPECT(gbc.pc(), 0xc823);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc821), 0xcb);
        EXPECT(gbc.readMem(0xc822), 0x9c);
        // CB 9C 03C3
        gbc.setState(0xa798, 0xd674, 0xe1c0, 0xa5e6, 0x56a1, 0x398e, 0x0, 0x1);
        gbc.writeMem(0xa798, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd674);
        EXPECT(gbc.pc(), 0xa79a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa798), 0xcb);
        EXPECT(gbc.readMem(0xa799), 0x9c);
        // CB 9C 03C4
        gbc.setState(0x26c7, 0x3a22, 0xe650, 0xc9b1, 0xc7c4, 0xe6fc, 0x1, 0x0);
        gbc.writeMem(0x26c7, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x3a22);
        EXPECT(gbc.pc(), 0x26c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 03C5
        gbc.setState(0x8429, 0x6e5, 0xc4c0, 0x4fe2, 0x4af9, 0xbdc2, 0x0, 0x1);
        gbc.writeMem(0x8429, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x6e5);
        EXPECT(gbc.pc(), 0x842b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8429), 0xcb);
        EXPECT(gbc.readMem(0x842a), 0x9c);
        // CB 9C 03C6
        gbc.setState(0xab6f, 0xcb6c, 0xfb60, 0x6a99, 0xda70, 0xc69d, 0x1, 0x0);
        gbc.writeMem(0xab6f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xcb6c);
        EXPECT(gbc.pc(), 0xab71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab6f), 0xcb);
        EXPECT(gbc.readMem(0xab70), 0x9c);
        // CB 9C 03C7
        gbc.setState(0x32a4, 0xc9d5, 0x21a0, 0xda53, 0x4543, 0x2cd9, 0x1, 0x0);
        gbc.writeMem(0x32a4, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc9d5);
        EXPECT(gbc.pc(), 0x32a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 03C8
        gbc.setState(0x783, 0x9661, 0x6930, 0xf8c6, 0x1ec, 0x4b8a, 0x1, 0x1);
        gbc.writeMem(0x783, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x9661);
        EXPECT(gbc.pc(), 0x785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 03C9
        gbc.setState(0x9ef3, 0x3f54, 0xdc90, 0x95e3, 0xdd3f, 0xad7a, 0x0, 0x1);
        gbc.writeMem(0x9ef3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3f54);
        EXPECT(gbc.pc(), 0x9ef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ef3), 0xcb);
        EXPECT(gbc.readMem(0x9ef4), 0x9c);
        // CB 9C 03CA
        gbc.setState(0x525a, 0x65f4, 0x1a70, 0xc8c7, 0xe6b0, 0xd729, 0x0, 0x1);
        gbc.writeMem(0x525a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x65f4);
        EXPECT(gbc.pc(), 0x525c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 03CB
        gbc.setState(0x250d, 0x3f74, 0xb4e0, 0xf4ee, 0x2040, 0xd515, 0x0, 0x1);
        gbc.writeMem(0x250d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3f74);
        EXPECT(gbc.pc(), 0x250f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 03CC
        gbc.setState(0x7978, 0x37c7, 0x5040, 0x9e7b, 0x6fbe, 0xf857, 0x0, 0x1);
        gbc.writeMem(0x7978, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x37c7);
        EXPECT(gbc.pc(), 0x797a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 03CD
        gbc.setState(0x6b75, 0xfa8, 0xba60, 0x252f, 0x9d00, 0xa567, 0x1, 0x0);
        gbc.writeMem(0x6b75, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xfa8);
        EXPECT(gbc.pc(), 0x6b77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 03CE
        gbc.setState(0x70d0, 0x584a, 0x690, 0x58cf, 0x5e8c, 0xad66, 0x1, 0x0);
        gbc.writeMem(0x70d0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x584a);
        EXPECT(gbc.pc(), 0x70d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 03CF
        gbc.setState(0x2f2c, 0xc4d9, 0xb00, 0xccb3, 0xbf51, 0xee32, 0x0, 0x1);
        gbc.writeMem(0x2f2c, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc4d9);
        EXPECT(gbc.pc(), 0x2f2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 03D0
        gbc.setState(0x86e0, 0x3571, 0x8870, 0xf20, 0xa3f6, 0x5e11, 0x0, 0x1);
        gbc.writeMem(0x86e0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x3571);
        EXPECT(gbc.pc(), 0x86e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86e0), 0xcb);
        EXPECT(gbc.readMem(0x86e1), 0x9c);
        // CB 9C 03D1
        gbc.setState(0xa381, 0xae01, 0x6030, 0x67cb, 0xbf24, 0x5363, 0x1, 0x0);
        gbc.writeMem(0xa381, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xae01);
        EXPECT(gbc.pc(), 0xa383);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa381), 0xcb);
        EXPECT(gbc.readMem(0xa382), 0x9c);
        // CB 9C 03D2
        gbc.setState(0x2f8d, 0xe118, 0x2d20, 0x52ad, 0x2499, 0x458b, 0x1, 0x1);
        gbc.writeMem(0x2f8d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xe118);
        EXPECT(gbc.pc(), 0x2f8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 03D3
        gbc.setState(0x149b, 0xe414, 0xe880, 0xce70, 0xd88e, 0x969e, 0x1, 0x1);
        gbc.writeMem(0x149b, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xe414);
        EXPECT(gbc.pc(), 0x149d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 03D4
        gbc.setState(0x7658, 0x215c, 0x7a00, 0x4685, 0x8c17, 0x923e, 0x1, 0x0);
        gbc.writeMem(0x7658, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x215c);
        EXPECT(gbc.pc(), 0x765a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 03D5
        gbc.setState(0x245a, 0x4fa9, 0xcc20, 0xadaf, 0x9356, 0xf23c, 0x1, 0x1);
        gbc.writeMem(0x245a, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x4fa9);
        EXPECT(gbc.pc(), 0x245c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 03D6
        gbc.setState(0xd3b0, 0xeea7, 0xb6c0, 0x7d8f, 0x1ab8, 0x50b7, 0x0, 0x0);
        gbc.writeMem(0xd3b0, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xeea7);
        EXPECT(gbc.pc(), 0xd3b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3b0), 0xcb);
        EXPECT(gbc.readMem(0xd3b1), 0x9c);
        // CB 9C 03D7
        gbc.setState(0xcf3, 0x8fb3, 0x8520, 0x5301, 0xe221, 0xffbc, 0x1, 0x1);
        gbc.writeMem(0xcf3, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8fb3);
        EXPECT(gbc.pc(), 0xcf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 03D8
        gbc.setState(0x334e, 0xaab6, 0x20e0, 0xdd75, 0x81db, 0xf8be, 0x1, 0x1);
        gbc.writeMem(0x334e, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xaab6);
        EXPECT(gbc.pc(), 0x3350);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 03D9
        gbc.setState(0xce83, 0x32ee, 0x2fe0, 0x73d6, 0xb252, 0xb59, 0x1, 0x0);
        gbc.writeMem(0xce83, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x32ee);
        EXPECT(gbc.pc(), 0xce85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce83), 0xcb);
        EXPECT(gbc.readMem(0xce84), 0x9c);
        // CB 9C 03DA
        gbc.setState(0x8e7d, 0x227, 0x770, 0x9d41, 0x6c7f, 0xa661, 0x1, 0x1);
        gbc.writeMem(0x8e7d, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x227);
        EXPECT(gbc.pc(), 0x8e7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e7d), 0xcb);
        EXPECT(gbc.readMem(0x8e7e), 0x9c);
        // CB 9C 03DB
        gbc.setState(0x19d6, 0x99da, 0xbe60, 0x9679, 0xf51c, 0x9d2, 0x1, 0x1);
        gbc.writeMem(0x19d6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x99da);
        EXPECT(gbc.pc(), 0x19d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 03DC
        gbc.setState(0x2302, 0x2d65, 0x8130, 0xd2a, 0x1f96, 0xbfd9, 0x0, 0x1);
        gbc.writeMem(0x2302, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2d65);
        EXPECT(gbc.pc(), 0x2304);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 03DD
        gbc.setState(0x41ea, 0x4f75, 0x8340, 0x8945, 0x394e, 0x8dce, 0x0, 0x0);
        gbc.writeMem(0x41ea, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x4f75);
        EXPECT(gbc.pc(), 0x41ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 03DE
        gbc.setState(0xbe24, 0x5b2d, 0xa170, 0x927b, 0xbc33, 0x1094, 0x0, 0x0);
        gbc.writeMem(0xbe24, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5b2d);
        EXPECT(gbc.pc(), 0xbe26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe24), 0xcb);
        EXPECT(gbc.readMem(0xbe25), 0x9c);
        // CB 9C 03DF
        gbc.setState(0xd866, 0x8d3, 0xe600, 0x5cb2, 0x1b29, 0x416e, 0x0, 0x1);
        gbc.writeMem(0xd866, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8d3);
        EXPECT(gbc.pc(), 0xd868);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd866), 0xcb);
        EXPECT(gbc.readMem(0xd867), 0x9c);
        // CB 9C 03E0
        gbc.setState(0x5c5f, 0x2a9f, 0x590, 0x6184, 0x602c, 0xe6ac, 0x1, 0x1);
        gbc.writeMem(0x5c5f, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x2a9f);
        EXPECT(gbc.pc(), 0x5c61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 03E1
        gbc.setState(0x9152, 0xa3f6, 0x8520, 0x532f, 0xb11f, 0xf42e, 0x1, 0x1);
        gbc.writeMem(0x9152, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa3f6);
        EXPECT(gbc.pc(), 0x9154);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9152), 0xcb);
        EXPECT(gbc.readMem(0x9153), 0x9c);
        // CB 9C 03E2
        gbc.setState(0x1f12, 0xb962, 0x3650, 0xa81d, 0xce47, 0x8308, 0x1, 0x0);
        gbc.writeMem(0x1f12, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb962);
        EXPECT(gbc.pc(), 0x1f14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 03E3
        gbc.setState(0x32be, 0x9d89, 0x9280, 0x1a60, 0x76a4, 0x3424, 0x0, 0x0);
        gbc.writeMem(0x32be, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x9d89);
        EXPECT(gbc.pc(), 0x32c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 03E4
        gbc.setState(0x6177, 0x3579, 0xdc30, 0xc0d, 0xa69a, 0x2fc3, 0x0, 0x0);
        gbc.writeMem(0x6177, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3579);
        EXPECT(gbc.pc(), 0x6179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 9C 03E5
        gbc.setState(0x23a9, 0xdd53, 0x90a0, 0x832, 0xc85c, 0xeec5, 0x1, 0x0);
        gbc.writeMem(0x23a9, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xdd53);
        EXPECT(gbc.pc(), 0x23ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 9C 03E6
        gbc.setState(0xabe6, 0x157, 0x2c40, 0xc9ff, 0xc0a7, 0x1563, 0x1, 0x1);
        gbc.writeMem(0xabe6, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x157);
        EXPECT(gbc.pc(), 0xabe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabe6), 0xcb);
        EXPECT(gbc.readMem(0xabe7), 0x9c);
        // CB 9C 03E7
        gbc.setState(0x2617, 0x6e0c, 0x4310, 0x5d5e, 0x55ad, 0xb079, 0x1, 0x0);
        gbc.writeMem(0x2617, { 0xcb, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x6e0c);
        EXPECT(gbc.pc(), 0x2619);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
    }
