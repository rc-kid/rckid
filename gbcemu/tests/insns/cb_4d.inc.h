    TEST(gbcemu, opcode_cb_4d) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 4D 0000
        gbc.setState(0x40a6, 0xef12, 0xa5f0, 0xdc3f, 0x3c7b, 0x39af, 0x1, 0x1);
        gbc.writeMem(0x40a6, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xef12);
        EXPECT(gbc.pc(), 0x40a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0001
        gbc.setState(0x9d59, 0x230, 0xa320, 0xd92c, 0xbd17, 0x8afb, 0x0, 0x0);
        gbc.writeMem(0x9d59, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x230);
        EXPECT(gbc.pc(), 0x9d5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d59), 0xcb);
        EXPECT(gbc.readMem(0x9d5a), 0x4d);
        // CB 4D 0002
        gbc.setState(0x59e, 0xf8c9, 0x9d60, 0x738a, 0x2aa9, 0xc0be, 0x0, 0x1);
        gbc.writeMem(0x59e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xf8c9);
        EXPECT(gbc.pc(), 0x5a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0003
        gbc.setState(0x961e, 0xac2e, 0x77f0, 0xcba9, 0xc2fa, 0xbc2e, 0x1, 0x0);
        gbc.writeMem(0x961e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xac2e);
        EXPECT(gbc.pc(), 0x9620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x961e), 0xcb);
        EXPECT(gbc.readMem(0x961f), 0x4d);
        // CB 4D 0004
        gbc.setState(0x8649, 0x9c50, 0x2b50, 0x4c31, 0x3d6a, 0x88d2, 0x0, 0x1);
        gbc.writeMem(0x8649, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x9c50);
        EXPECT(gbc.pc(), 0x864b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8649), 0xcb);
        EXPECT(gbc.readMem(0x864a), 0x4d);
        // CB 4D 0005
        gbc.setState(0x1b33, 0x41bc, 0xc520, 0x718e, 0x3523, 0xce8e, 0x0, 0x1);
        gbc.writeMem(0x1b33, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x41bc);
        EXPECT(gbc.pc(), 0x1b35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0006
        gbc.setState(0x434b, 0xbc83, 0x7ed0, 0x8f48, 0xd7c6, 0x1381, 0x1, 0x1);
        gbc.writeMem(0x434b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xbc83);
        EXPECT(gbc.pc(), 0x434d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0007
        gbc.setState(0x4e14, 0xbe0d, 0x6ab0, 0xa91, 0x4e49, 0xd809, 0x0, 0x0);
        gbc.writeMem(0x4e14, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xbe0d);
        EXPECT(gbc.pc(), 0x4e16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0008
        gbc.setState(0x2d67, 0x2b80, 0x45b0, 0x71b9, 0x4ee9, 0xe6c, 0x1, 0x1);
        gbc.writeMem(0x2d67, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2b80);
        EXPECT(gbc.pc(), 0x2d69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0009
        gbc.setState(0xc6ab, 0xb0a4, 0xc9e0, 0x57c4, 0x865f, 0x3b15, 0x1, 0x0);
        gbc.writeMem(0xc6ab, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb0a4);
        EXPECT(gbc.pc(), 0xc6ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6ab), 0xcb);
        EXPECT(gbc.readMem(0xc6ac), 0x4d);
        // CB 4D 000A
        gbc.setState(0x82de, 0x7697, 0x6fe0, 0x9761, 0xe6f2, 0xb0ea, 0x0, 0x0);
        gbc.writeMem(0x82de, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x7697);
        EXPECT(gbc.pc(), 0x82e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82de), 0xcb);
        EXPECT(gbc.readMem(0x82df), 0x4d);
        // CB 4D 000B
        gbc.setState(0x6882, 0x5cdd, 0x6ef0, 0x3d, 0xb146, 0x7e63, 0x1, 0x1);
        gbc.writeMem(0x6882, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5cdd);
        EXPECT(gbc.pc(), 0x6884);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 000C
        gbc.setState(0x32dd, 0x10d0, 0x980, 0x1463, 0xd58a, 0x6b39, 0x1, 0x1);
        gbc.writeMem(0x32dd, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x10d0);
        EXPECT(gbc.pc(), 0x32df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 000D
        gbc.setState(0x4a65, 0xb5ad, 0x43c0, 0x420d, 0xd683, 0x77ab, 0x1, 0x1);
        gbc.writeMem(0x4a65, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb5ad);
        EXPECT(gbc.pc(), 0x4a67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 000E
        gbc.setState(0xd470, 0x9c7e, 0x1f40, 0xbbec, 0x1901, 0x1551, 0x1, 0x0);
        gbc.writeMem(0xd470, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9c7e);
        EXPECT(gbc.pc(), 0xd472);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd470), 0xcb);
        EXPECT(gbc.readMem(0xd471), 0x4d);
        // CB 4D 000F
        gbc.setState(0xcca5, 0xd2a4, 0xf310, 0x2d50, 0x2793, 0x5918, 0x0, 0x1);
        gbc.writeMem(0xcca5, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd2a4);
        EXPECT(gbc.pc(), 0xcca7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcca5), 0xcb);
        EXPECT(gbc.readMem(0xcca6), 0x4d);
        // CB 4D 0010
        gbc.setState(0xb230, 0x454, 0x2db0, 0xc02e, 0x1191, 0x8cc3, 0x0, 0x0);
        gbc.writeMem(0xb230, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x454);
        EXPECT(gbc.pc(), 0xb232);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb230), 0xcb);
        EXPECT(gbc.readMem(0xb231), 0x4d);
        // CB 4D 0011
        gbc.setState(0xcf5a, 0xcf6f, 0xc380, 0x7498, 0xd1a2, 0xeb17, 0x0, 0x0);
        gbc.writeMem(0xcf5a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xcf6f);
        EXPECT(gbc.pc(), 0xcf5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf5a), 0xcb);
        EXPECT(gbc.readMem(0xcf5b), 0x4d);
        // CB 4D 0012
        gbc.setState(0x9852, 0xc111, 0xab50, 0xdb67, 0x1787, 0x176a, 0x1, 0x0);
        gbc.writeMem(0x9852, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc111);
        EXPECT(gbc.pc(), 0x9854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9852), 0xcb);
        EXPECT(gbc.readMem(0x9853), 0x4d);
        // CB 4D 0013
        gbc.setState(0x6abe, 0x569d, 0x1d80, 0x73cb, 0xd2bb, 0xb7a2, 0x0, 0x0);
        gbc.writeMem(0x6abe, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x569d);
        EXPECT(gbc.pc(), 0x6ac0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0014
        gbc.setState(0xc27a, 0xde5e, 0xc2a0, 0x20b6, 0x949a, 0x906b, 0x1, 0x1);
        gbc.writeMem(0xc27a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xde5e);
        EXPECT(gbc.pc(), 0xc27c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc27a), 0xcb);
        EXPECT(gbc.readMem(0xc27b), 0x4d);
        // CB 4D 0015
        gbc.setState(0xd82d, 0x659f, 0x300, 0x789b, 0xe06, 0x2124, 0x0, 0x0);
        gbc.writeMem(0xd82d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x659f);
        EXPECT(gbc.pc(), 0xd82f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd82d), 0xcb);
        EXPECT(gbc.readMem(0xd82e), 0x4d);
        // CB 4D 0016
        gbc.setState(0x684c, 0xb4ba, 0xc500, 0xf69d, 0x37d4, 0xb006, 0x0, 0x0);
        gbc.writeMem(0x684c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb4ba);
        EXPECT(gbc.pc(), 0x684e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0017
        gbc.setState(0xe8cb, 0x724e, 0xc430, 0x6a2, 0x1bb8, 0xfde7, 0x1, 0x1);
        gbc.writeMem(0xe8cb, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x724e);
        EXPECT(gbc.pc(), 0xe8cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8cb), 0xcb);
        EXPECT(gbc.readMem(0xe8cc), 0x4d);
        // CB 4D 0018
        gbc.setState(0x395, 0x2eeb, 0x4840, 0xc13e, 0xd8d, 0x673c, 0x0, 0x1);
        gbc.writeMem(0x395, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2eeb);
        EXPECT(gbc.pc(), 0x397);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0019
        gbc.setState(0xb1d9, 0xcec5, 0x4f00, 0x8a78, 0x5a3a, 0x2308, 0x1, 0x1);
        gbc.writeMem(0xb1d9, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xcec5);
        EXPECT(gbc.pc(), 0xb1db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1d9), 0xcb);
        EXPECT(gbc.readMem(0xb1da), 0x4d);
        // CB 4D 001A
        gbc.setState(0x7070, 0x38af, 0xaf30, 0x45d7, 0x2d52, 0x62ce, 0x0, 0x1);
        gbc.writeMem(0x7070, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x38af);
        EXPECT(gbc.pc(), 0x7072);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 001B
        gbc.setState(0x5aae, 0x8226, 0x9a80, 0x7a09, 0x7dd1, 0x559b, 0x0, 0x1);
        gbc.writeMem(0x5aae, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8226);
        EXPECT(gbc.pc(), 0x5ab0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 001C
        gbc.setState(0xd33a, 0xc91e, 0x6460, 0x31a7, 0x796f, 0x3228, 0x1, 0x1);
        gbc.writeMem(0xd33a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xc91e);
        EXPECT(gbc.pc(), 0xd33c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd33a), 0xcb);
        EXPECT(gbc.readMem(0xd33b), 0x4d);
        // CB 4D 001D
        gbc.setState(0xa6da, 0x3c01, 0xa240, 0x6464, 0x6cf7, 0x7988, 0x1, 0x0);
        gbc.writeMem(0xa6da, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x3c01);
        EXPECT(gbc.pc(), 0xa6dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6da), 0xcb);
        EXPECT(gbc.readMem(0xa6db), 0x4d);
        // CB 4D 001E
        gbc.setState(0xd61b, 0x645c, 0x9790, 0x598, 0xf507, 0x902b, 0x0, 0x1);
        gbc.writeMem(0xd61b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x645c);
        EXPECT(gbc.pc(), 0xd61d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd61b), 0xcb);
        EXPECT(gbc.readMem(0xd61c), 0x4d);
        // CB 4D 001F
        gbc.setState(0x884c, 0xee58, 0xefa0, 0x11b3, 0x7d93, 0x92ad, 0x0, 0x1);
        gbc.writeMem(0x884c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xee58);
        EXPECT(gbc.pc(), 0x884e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x884c), 0xcb);
        EXPECT(gbc.readMem(0x884d), 0x4d);
        // CB 4D 0020
        gbc.setState(0x2b01, 0x8d38, 0x7e50, 0xd893, 0xb36d, 0xf5fe, 0x0, 0x0);
        gbc.writeMem(0x2b01, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x8d38);
        EXPECT(gbc.pc(), 0x2b03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0022
        gbc.setState(0xca31, 0x9811, 0x19f0, 0x999b, 0x20f2, 0x4475, 0x1, 0x0);
        gbc.writeMem(0xca31, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9811);
        EXPECT(gbc.pc(), 0xca33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca31), 0xcb);
        EXPECT(gbc.readMem(0xca32), 0x4d);
        // CB 4D 0023
        gbc.setState(0x98b6, 0x41, 0x7bc0, 0xc757, 0x6ac4, 0xe7fc, 0x1, 0x0);
        gbc.writeMem(0x98b6, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x41);
        EXPECT(gbc.pc(), 0x98b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98b6), 0xcb);
        EXPECT(gbc.readMem(0x98b7), 0x4d);
        // CB 4D 0025
        gbc.setState(0xc48d, 0xfdb, 0xabb0, 0xb138, 0xdfe6, 0x6a2, 0x0, 0x0);
        gbc.writeMem(0xc48d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xfdb);
        EXPECT(gbc.pc(), 0xc48f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc48d), 0xcb);
        EXPECT(gbc.readMem(0xc48e), 0x4d);
        // CB 4D 0026
        gbc.setState(0xaad7, 0x55a6, 0x5c00, 0xb0a0, 0x3048, 0x5f1, 0x1, 0x1);
        gbc.writeMem(0xaad7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x55a6);
        EXPECT(gbc.pc(), 0xaad9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaad7), 0xcb);
        EXPECT(gbc.readMem(0xaad8), 0x4d);
        // CB 4D 0027
        gbc.setState(0x566, 0x590d, 0xe900, 0xd489, 0xdedd, 0x30ea, 0x1, 0x0);
        gbc.writeMem(0x566, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x590d);
        EXPECT(gbc.pc(), 0x568);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0028
        gbc.setState(0x69dc, 0x6ef5, 0x1d20, 0x9223, 0xab7a, 0x613d, 0x1, 0x0);
        gbc.writeMem(0x69dc, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x6ef5);
        EXPECT(gbc.pc(), 0x69de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0029
        gbc.setState(0xdf91, 0x236f, 0x3ad0, 0xcbdc, 0x58a5, 0xa273, 0x0, 0x0);
        gbc.writeMem(0xdf91, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x236f);
        EXPECT(gbc.pc(), 0xdf93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf91), 0xcb);
        EXPECT(gbc.readMem(0xdf92), 0x4d);
        // CB 4D 002A
        gbc.setState(0xe6d7, 0x16f9, 0x4190, 0xf325, 0x7332, 0xf9dc, 0x1, 0x1);
        gbc.writeMem(0xe6d7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x16f9);
        EXPECT(gbc.pc(), 0xe6d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6d7), 0xcb);
        EXPECT(gbc.readMem(0xe6d8), 0x4d);
        // CB 4D 002B
        gbc.setState(0xacdb, 0x660f, 0x550, 0xeb42, 0xce2a, 0x1103, 0x1, 0x0);
        gbc.writeMem(0xacdb, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x660f);
        EXPECT(gbc.pc(), 0xacdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacdb), 0xcb);
        EXPECT(gbc.readMem(0xacdc), 0x4d);
        // CB 4D 002C
        gbc.setState(0x49dd, 0xcbee, 0x1ad0, 0xe3b0, 0x47af, 0x3bcc, 0x0, 0x1);
        gbc.writeMem(0x49dd, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xcbee);
        EXPECT(gbc.pc(), 0x49df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 002D
        gbc.setState(0xac0d, 0x719c, 0x7a20, 0xe050, 0xb92e, 0xb68b, 0x0, 0x0);
        gbc.writeMem(0xac0d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x719c);
        EXPECT(gbc.pc(), 0xac0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac0d), 0xcb);
        EXPECT(gbc.readMem(0xac0e), 0x4d);
        // CB 4D 002E
        gbc.setState(0x2f0, 0xa896, 0xeeb0, 0x3e05, 0x6afc, 0x6b23, 0x1, 0x0);
        gbc.writeMem(0x2f0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa896);
        EXPECT(gbc.pc(), 0x2f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 002F
        gbc.setState(0x82ea, 0x4949, 0xd3d0, 0x8df3, 0xc5ff, 0xd151, 0x0, 0x1);
        gbc.writeMem(0x82ea, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x4949);
        EXPECT(gbc.pc(), 0x82ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82ea), 0xcb);
        EXPECT(gbc.readMem(0x82eb), 0x4d);
        // CB 4D 0030
        gbc.setState(0x3e01, 0x6012, 0xfa40, 0x3a59, 0x7f4f, 0x68a6, 0x1, 0x0);
        gbc.writeMem(0x3e01, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x6012);
        EXPECT(gbc.pc(), 0x3e03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0031
        gbc.setState(0xe38, 0x1f9d, 0xef40, 0xd553, 0x4209, 0x5365, 0x0, 0x0);
        gbc.writeMem(0xe38, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x1f9d);
        EXPECT(gbc.pc(), 0xe3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0032
        gbc.setState(0x835b, 0xfc48, 0xb740, 0x72b9, 0x587e, 0x1bd5, 0x1, 0x0);
        gbc.writeMem(0x835b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xfc48);
        EXPECT(gbc.pc(), 0x835d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x835b), 0xcb);
        EXPECT(gbc.readMem(0x835c), 0x4d);
        // CB 4D 0033
        gbc.setState(0xee0, 0x94b1, 0xad20, 0x7eef, 0xd08c, 0x2091, 0x0, 0x0);
        gbc.writeMem(0xee0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x94b1);
        EXPECT(gbc.pc(), 0xee2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0034
        gbc.setState(0x823, 0x4d7e, 0x45a0, 0xb03c, 0xc90a, 0xe254, 0x1, 0x1);
        gbc.writeMem(0x823, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4d7e);
        EXPECT(gbc.pc(), 0x825);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0035
        gbc.setState(0x1c51, 0x5740, 0x45a0, 0x2330, 0xe9f, 0x926f, 0x1, 0x1);
        gbc.writeMem(0x1c51, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5740);
        EXPECT(gbc.pc(), 0x1c53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0036
        gbc.setState(0x7eb2, 0xfcaf, 0x7010, 0xa13, 0xb1dd, 0x33, 0x0, 0x0);
        gbc.writeMem(0x7eb2, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xfcaf);
        EXPECT(gbc.pc(), 0x7eb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0037
        gbc.setState(0xc551, 0x4a7b, 0x1b10, 0xf3b1, 0xebc9, 0xdc9e, 0x0, 0x1);
        gbc.writeMem(0xc551, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4a7b);
        EXPECT(gbc.pc(), 0xc553);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc551), 0xcb);
        EXPECT(gbc.readMem(0xc552), 0x4d);
        // CB 4D 0038
        gbc.setState(0x39fe, 0xc162, 0x62e0, 0x50f6, 0xfe47, 0x57ae, 0x0, 0x0);
        gbc.writeMem(0x39fe, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc162);
        EXPECT(gbc.pc(), 0x3a00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0039
        gbc.setState(0xae47, 0x245c, 0x4870, 0x5c46, 0xfee6, 0x48bd, 0x1, 0x0);
        gbc.writeMem(0xae47, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x245c);
        EXPECT(gbc.pc(), 0xae49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae47), 0xcb);
        EXPECT(gbc.readMem(0xae48), 0x4d);
        // CB 4D 003A
        gbc.setState(0x4c7b, 0x73da, 0x1470, 0x5bf5, 0x9eeb, 0x9abe, 0x0, 0x1);
        gbc.writeMem(0x4c7b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x73da);
        EXPECT(gbc.pc(), 0x4c7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 003B
        gbc.setState(0x7525, 0x742b, 0xec20, 0x29ec, 0x9e3e, 0xa0ae, 0x0, 0x1);
        gbc.writeMem(0x7525, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x742b);
        EXPECT(gbc.pc(), 0x7527);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 003C
        gbc.setState(0x6404, 0xee09, 0x7930, 0x11ea, 0xdf0f, 0xb8c0, 0x0, 0x0);
        gbc.writeMem(0x6404, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xee09);
        EXPECT(gbc.pc(), 0x6406);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 003D
        gbc.setState(0x29ee, 0x506a, 0x7800, 0x93e6, 0xf7e0, 0x8237, 0x1, 0x1);
        gbc.writeMem(0x29ee, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x506a);
        EXPECT(gbc.pc(), 0x29f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 003E
        gbc.setState(0x4ff3, 0xca2a, 0x9050, 0x6ed2, 0xec3d, 0xb1c5, 0x1, 0x1);
        gbc.writeMem(0x4ff3, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xca2a);
        EXPECT(gbc.pc(), 0x4ff5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 003F
        gbc.setState(0xa09b, 0x6ab3, 0x2e60, 0xf4c3, 0xc654, 0x2e5e, 0x1, 0x0);
        gbc.writeMem(0xa09b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x6ab3);
        EXPECT(gbc.pc(), 0xa09d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa09b), 0xcb);
        EXPECT(gbc.readMem(0xa09c), 0x4d);
        // CB 4D 0040
        gbc.setState(0x9709, 0x99b2, 0x6550, 0x6ae8, 0xe907, 0xd93, 0x1, 0x0);
        gbc.writeMem(0x9709, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x99b2);
        EXPECT(gbc.pc(), 0x970b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9709), 0xcb);
        EXPECT(gbc.readMem(0x970a), 0x4d);
        // CB 4D 0041
        gbc.setState(0x7996, 0x46ea, 0x8a20, 0x3d1a, 0xdfbc, 0x85b, 0x0, 0x1);
        gbc.writeMem(0x7996, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x46ea);
        EXPECT(gbc.pc(), 0x7998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0042
        gbc.setState(0xbe31, 0xee53, 0x8030, 0x1c63, 0xe2b, 0xf60, 0x1, 0x1);
        gbc.writeMem(0xbe31, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xee53);
        EXPECT(gbc.pc(), 0xbe33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe31), 0xcb);
        EXPECT(gbc.readMem(0xbe32), 0x4d);
        // CB 4D 0043
        gbc.setState(0xbda7, 0x6fc4, 0xa8d0, 0x3269, 0xf506, 0xeb0c, 0x0, 0x0);
        gbc.writeMem(0xbda7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x6fc4);
        EXPECT(gbc.pc(), 0xbda9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbda7), 0xcb);
        EXPECT(gbc.readMem(0xbda8), 0x4d);
        // CB 4D 0044
        gbc.setState(0x86d0, 0xa167, 0xf670, 0xbbc5, 0x3167, 0xefac, 0x1, 0x1);
        gbc.writeMem(0x86d0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xa167);
        EXPECT(gbc.pc(), 0x86d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86d0), 0xcb);
        EXPECT(gbc.readMem(0x86d1), 0x4d);
        // CB 4D 0045
        gbc.setState(0x3982, 0xd21f, 0xad10, 0x9463, 0x1e15, 0xd40b, 0x1, 0x0);
        gbc.writeMem(0x3982, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd21f);
        EXPECT(gbc.pc(), 0x3984);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0046
        gbc.setState(0x9854, 0x9096, 0x82c0, 0x344, 0x35d1, 0xc7f5, 0x1, 0x0);
        gbc.writeMem(0x9854, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x9096);
        EXPECT(gbc.pc(), 0x9856);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9854), 0xcb);
        EXPECT(gbc.readMem(0x9855), 0x4d);
        // CB 4D 0047
        gbc.setState(0x9359, 0xc113, 0x20b0, 0x2779, 0x8ed, 0xc2d2, 0x0, 0x1);
        gbc.writeMem(0x9359, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc113);
        EXPECT(gbc.pc(), 0x935b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9359), 0xcb);
        EXPECT(gbc.readMem(0x935a), 0x4d);
        // CB 4D 0048
        gbc.setState(0x4935, 0x4569, 0xda70, 0xa693, 0x78a9, 0x3f9f, 0x1, 0x0);
        gbc.writeMem(0x4935, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4569);
        EXPECT(gbc.pc(), 0x4937);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0049
        gbc.setState(0xa8e4, 0x30ad, 0x12f0, 0xde39, 0x32ea, 0xfc0e, 0x0, 0x1);
        gbc.writeMem(0xa8e4, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x30ad);
        EXPECT(gbc.pc(), 0xa8e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8e4), 0xcb);
        EXPECT(gbc.readMem(0xa8e5), 0x4d);
        // CB 4D 004A
        gbc.setState(0x1f1, 0x871d, 0x64e0, 0x31ce, 0x5343, 0x3eb6, 0x1, 0x0);
        gbc.writeMem(0x1f1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x871d);
        EXPECT(gbc.pc(), 0x1f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 004C
        gbc.setState(0x14b9, 0x853e, 0x4a20, 0xf65e, 0x7f85, 0xe6e4, 0x1, 0x1);
        gbc.writeMem(0x14b9, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x853e);
        EXPECT(gbc.pc(), 0x14bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 004D
        gbc.setState(0x2980, 0x8b6f, 0x5f60, 0xf435, 0xcf03, 0x91fa, 0x1, 0x1);
        gbc.writeMem(0x2980, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8b6f);
        EXPECT(gbc.pc(), 0x2982);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 004E
        gbc.setState(0x2b6, 0x8337, 0x20b0, 0xbf12, 0x9662, 0x70c7, 0x1, 0x0);
        gbc.writeMem(0x2b6, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8337);
        EXPECT(gbc.pc(), 0x2b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 004F
        gbc.setState(0xd537, 0xe90a, 0x2330, 0xb79, 0x42d1, 0x2fdf, 0x0, 0x1);
        gbc.writeMem(0xd537, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe90a);
        EXPECT(gbc.pc(), 0xd539);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd537), 0xcb);
        EXPECT(gbc.readMem(0xd538), 0x4d);
        // CB 4D 0050
        gbc.setState(0x5544, 0x2b1e, 0x9fd0, 0xb73b, 0x59d5, 0xe3af, 0x1, 0x1);
        gbc.writeMem(0x5544, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2b1e);
        EXPECT(gbc.pc(), 0x5546);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0051
        gbc.setState(0x1d1d, 0x87f3, 0xfde0, 0xc389, 0x1657, 0x10a5, 0x1, 0x1);
        gbc.writeMem(0x1d1d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x87f3);
        EXPECT(gbc.pc(), 0x1d1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0052
        gbc.setState(0xeb36, 0xdc3c, 0x5510, 0x5df8, 0xaf1a, 0xc4bc, 0x0, 0x1);
        gbc.writeMem(0xeb36, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xdc3c);
        EXPECT(gbc.pc(), 0xeb38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb36), 0xcb);
        EXPECT(gbc.readMem(0xeb37), 0x4d);
        // CB 4D 0053
        gbc.setState(0x1710, 0x30c8, 0x3120, 0x1066, 0x9e85, 0xf48e, 0x0, 0x1);
        gbc.writeMem(0x1710, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x30c8);
        EXPECT(gbc.pc(), 0x1712);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0054
        gbc.setState(0xe32, 0xe00, 0x82b0, 0xc922, 0xe3bc, 0xfeb0, 0x1, 0x0);
        gbc.writeMem(0xe32, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe00);
        EXPECT(gbc.pc(), 0xe34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0055
        gbc.setState(0x1ac8, 0xdc4, 0xd970, 0x11ef, 0x2ee4, 0x5ac9, 0x1, 0x0);
        gbc.writeMem(0x1ac8, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xdc4);
        EXPECT(gbc.pc(), 0x1aca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0056
        gbc.setState(0x56ee, 0xc6ec, 0x6310, 0x9a6e, 0x7ddf, 0x97e0, 0x1, 0x0);
        gbc.writeMem(0x56ee, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc6ec);
        EXPECT(gbc.pc(), 0x56f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0057
        gbc.setState(0x3885, 0x6bbf, 0x7e00, 0xc013, 0x7fe1, 0xca22, 0x1, 0x0);
        gbc.writeMem(0x3885, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6bbf);
        EXPECT(gbc.pc(), 0x3887);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0058
        gbc.setState(0x78f6, 0xc857, 0x6c60, 0x6da1, 0x270c, 0x6a26, 0x0, 0x0);
        gbc.writeMem(0x78f6, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc857);
        EXPECT(gbc.pc(), 0x78f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0059
        gbc.setState(0x1045, 0x94b8, 0xfe0, 0x8e00, 0xa659, 0x17ba, 0x1, 0x0);
        gbc.writeMem(0x1045, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x94b8);
        EXPECT(gbc.pc(), 0x1047);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 005A
        gbc.setState(0x35c3, 0x37cd, 0x1a70, 0x1b6b, 0x165c, 0xa13f, 0x1, 0x1);
        gbc.writeMem(0x35c3, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x37cd);
        EXPECT(gbc.pc(), 0x35c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 005B
        gbc.setState(0xdc47, 0x28a2, 0xb2c0, 0x27e8, 0xcb22, 0x43a2, 0x1, 0x1);
        gbc.writeMem(0xdc47, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x28a2);
        EXPECT(gbc.pc(), 0xdc49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc47), 0xcb);
        EXPECT(gbc.readMem(0xdc48), 0x4d);
        // CB 4D 005C
        gbc.setState(0x806e, 0x1382, 0x6940, 0xf555, 0xbdc4, 0xdcb0, 0x0, 0x1);
        gbc.writeMem(0x806e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x1382);
        EXPECT(gbc.pc(), 0x8070);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x806e), 0xcb);
        EXPECT(gbc.readMem(0x806f), 0x4d);
        // CB 4D 005D
        gbc.setState(0xc6d7, 0xa41e, 0x8220, 0xe3d4, 0x2b17, 0x9282, 0x0, 0x0);
        gbc.writeMem(0xc6d7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa41e);
        EXPECT(gbc.pc(), 0xc6d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6d7), 0xcb);
        EXPECT(gbc.readMem(0xc6d8), 0x4d);
        // CB 4D 005E
        gbc.setState(0xa9a2, 0x1f58, 0xd9f0, 0x23bc, 0x1dee, 0xbc5b, 0x1, 0x0);
        gbc.writeMem(0xa9a2, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1f58);
        EXPECT(gbc.pc(), 0xa9a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9a2), 0xcb);
        EXPECT(gbc.readMem(0xa9a3), 0x4d);
        // CB 4D 005F
        gbc.setState(0x5028, 0xb917, 0x9850, 0xe6a4, 0xbfd6, 0xc5e2, 0x1, 0x1);
        gbc.writeMem(0x5028, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb917);
        EXPECT(gbc.pc(), 0x502a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0060
        gbc.setState(0x3ca7, 0x394a, 0xb9f0, 0xf59d, 0x201, 0xca1b, 0x1, 0x1);
        gbc.writeMem(0x3ca7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x394a);
        EXPECT(gbc.pc(), 0x3ca9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0061
        gbc.setState(0xd88e, 0x8a91, 0x6700, 0x3adb, 0xec0f, 0xfd79, 0x0, 0x1);
        gbc.writeMem(0xd88e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x8a91);
        EXPECT(gbc.pc(), 0xd890);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd88e), 0xcb);
        EXPECT(gbc.readMem(0xd88f), 0x4d);
        // CB 4D 0062
        gbc.setState(0xa466, 0xc97b, 0x9800, 0x4ce7, 0x22b2, 0x2695, 0x1, 0x1);
        gbc.writeMem(0xa466, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xc97b);
        EXPECT(gbc.pc(), 0xa468);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa466), 0xcb);
        EXPECT(gbc.readMem(0xa467), 0x4d);
        // CB 4D 0063
        gbc.setState(0x15d7, 0xfd3b, 0xad50, 0x7827, 0x8ac4, 0xfda3, 0x1, 0x0);
        gbc.writeMem(0x15d7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xfd3b);
        EXPECT(gbc.pc(), 0x15d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0064
        gbc.setState(0x18d6, 0x1260, 0xf070, 0x107, 0x4995, 0x2d02, 0x1, 0x1);
        gbc.writeMem(0x18d6, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1260);
        EXPECT(gbc.pc(), 0x18d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0065
        gbc.setState(0xd9da, 0xfeb3, 0xf320, 0x2430, 0x17f4, 0x31f4, 0x0, 0x1);
        gbc.writeMem(0xd9da, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xfeb3);
        EXPECT(gbc.pc(), 0xd9dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9da), 0xcb);
        EXPECT(gbc.readMem(0xd9db), 0x4d);
        // CB 4D 0066
        gbc.setState(0xd514, 0xd2ce, 0x17e0, 0x4c6b, 0x8cdf, 0x2d39, 0x0, 0x1);
        gbc.writeMem(0xd514, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd2ce);
        EXPECT(gbc.pc(), 0xd516);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd514), 0xcb);
        EXPECT(gbc.readMem(0xd515), 0x4d);
        // CB 4D 0067
        gbc.setState(0x738c, 0xdb7, 0x8f50, 0xfbe2, 0x5e46, 0xbe2b, 0x0, 0x0);
        gbc.writeMem(0x738c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xdb7);
        EXPECT(gbc.pc(), 0x738e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0068
        gbc.setState(0x16ed, 0x1947, 0xdb90, 0xb184, 0x90e2, 0xa89a, 0x0, 0x0);
        gbc.writeMem(0x16ed, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1947);
        EXPECT(gbc.pc(), 0x16ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0069
        gbc.setState(0x176a, 0x3b06, 0xca80, 0x9db, 0x4af3, 0xd078, 0x0, 0x0);
        gbc.writeMem(0x176a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x3b06);
        EXPECT(gbc.pc(), 0x176c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 006A
        gbc.setState(0x2f46, 0xb369, 0x55c0, 0xb9c9, 0x85b2, 0xe6a5, 0x1, 0x0);
        gbc.writeMem(0x2f46, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xb369);
        EXPECT(gbc.pc(), 0x2f48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 006B
        gbc.setState(0x8f92, 0xe08a, 0x7a0, 0x4f09, 0x22f5, 0x20dc, 0x0, 0x0);
        gbc.writeMem(0x8f92, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe08a);
        EXPECT(gbc.pc(), 0x8f94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f92), 0xcb);
        EXPECT(gbc.readMem(0x8f93), 0x4d);
        // CB 4D 006C
        gbc.setState(0xd7b8, 0x214b, 0x50f0, 0xc161, 0xfcaf, 0x4f17, 0x1, 0x0);
        gbc.writeMem(0xd7b8, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x214b);
        EXPECT(gbc.pc(), 0xd7ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7b8), 0xcb);
        EXPECT(gbc.readMem(0xd7b9), 0x4d);
        // CB 4D 006D
        gbc.setState(0xa70, 0xa803, 0x8e20, 0xabb5, 0xb03d, 0x47e5, 0x1, 0x0);
        gbc.writeMem(0xa70, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa803);
        EXPECT(gbc.pc(), 0xa72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 006E
        gbc.setState(0xa3ad, 0x9d5c, 0xf350, 0x86b8, 0x6701, 0xfa47, 0x0, 0x1);
        gbc.writeMem(0xa3ad, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9d5c);
        EXPECT(gbc.pc(), 0xa3af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3ad), 0xcb);
        EXPECT(gbc.readMem(0xa3ae), 0x4d);
        // CB 4D 006F
        gbc.setState(0x125c, 0x7def, 0x2480, 0x8df3, 0xe057, 0x5344, 0x1, 0x1);
        gbc.writeMem(0x125c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x7def);
        EXPECT(gbc.pc(), 0x125e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0070
        gbc.setState(0x25c6, 0xcd70, 0xad30, 0x670c, 0xbb06, 0x4b02, 0x0, 0x0);
        gbc.writeMem(0x25c6, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xcd70);
        EXPECT(gbc.pc(), 0x25c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0071
        gbc.setState(0x38ed, 0xc640, 0x32e0, 0x3a65, 0x6ee8, 0x899f, 0x0, 0x1);
        gbc.writeMem(0x38ed, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc640);
        EXPECT(gbc.pc(), 0x38ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0072
        gbc.setState(0x254c, 0xab9d, 0x2020, 0x74dc, 0x1a4c, 0x3401, 0x1, 0x1);
        gbc.writeMem(0x254c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xab9d);
        EXPECT(gbc.pc(), 0x254e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0073
        gbc.setState(0xaa5d, 0xe210, 0x8bf0, 0x5be2, 0x2b43, 0x8b7, 0x1, 0x0);
        gbc.writeMem(0xaa5d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xe210);
        EXPECT(gbc.pc(), 0xaa5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa5d), 0xcb);
        EXPECT(gbc.readMem(0xaa5e), 0x4d);
        // CB 4D 0074
        gbc.setState(0x6c30, 0x1d4e, 0x9850, 0xcdf5, 0x8daf, 0xdaac, 0x0, 0x1);
        gbc.writeMem(0x6c30, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1d4e);
        EXPECT(gbc.pc(), 0x6c32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0075
        gbc.setState(0x7e7e, 0xc8b5, 0x5630, 0x3564, 0x2058, 0x506e, 0x0, 0x0);
        gbc.writeMem(0x7e7e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc8b5);
        EXPECT(gbc.pc(), 0x7e80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0076
        gbc.setState(0x2b6a, 0x65ae, 0xa160, 0x8593, 0xf9f8, 0x5239, 0x1, 0x1);
        gbc.writeMem(0x2b6a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x65ae);
        EXPECT(gbc.pc(), 0x2b6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0078
        gbc.setState(0x3516, 0xff90, 0x8080, 0xc8f0, 0x4528, 0x246c, 0x0, 0x0);
        gbc.writeMem(0x3516, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xff90);
        EXPECT(gbc.pc(), 0x3518);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0079
        gbc.setState(0x718f, 0xf1d8, 0xd4f0, 0x7d0, 0xf7c4, 0x4c1b, 0x1, 0x0);
        gbc.writeMem(0x718f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf1d8);
        EXPECT(gbc.pc(), 0x7191);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 007A
        gbc.setState(0x5dd7, 0xdc4a, 0x9860, 0xb71a, 0xa9f8, 0x21b7, 0x1, 0x0);
        gbc.writeMem(0x5dd7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xdc4a);
        EXPECT(gbc.pc(), 0x5dd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 007B
        gbc.setState(0x6cab, 0xb1ca, 0xfff0, 0x22fb, 0x6e14, 0x2367, 0x1, 0x0);
        gbc.writeMem(0x6cab, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb1ca);
        EXPECT(gbc.pc(), 0x6cad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 007C
        gbc.setState(0x88a1, 0xe71b, 0x6b00, 0xf14b, 0x2ac4, 0x167b, 0x0, 0x1);
        gbc.writeMem(0x88a1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe71b);
        EXPECT(gbc.pc(), 0x88a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88a1), 0xcb);
        EXPECT(gbc.readMem(0x88a2), 0x4d);
        // CB 4D 007D
        gbc.setState(0xbc50, 0xbafd, 0xe040, 0x8f72, 0x46e9, 0x86d3, 0x0, 0x0);
        gbc.writeMem(0xbc50, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xbafd);
        EXPECT(gbc.pc(), 0xbc52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc50), 0xcb);
        EXPECT(gbc.readMem(0xbc51), 0x4d);
        // CB 4D 007E
        gbc.setState(0xa2b3, 0x5a6a, 0x2d30, 0x76fb, 0x808f, 0x3dc6, 0x0, 0x1);
        gbc.writeMem(0xa2b3, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x5a6a);
        EXPECT(gbc.pc(), 0xa2b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2b3), 0xcb);
        EXPECT(gbc.readMem(0xa2b4), 0x4d);
        // CB 4D 007F
        gbc.setState(0x3b0d, 0x5131, 0x70d0, 0x93f6, 0xc7aa, 0xfd03, 0x1, 0x0);
        gbc.writeMem(0x3b0d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5131);
        EXPECT(gbc.pc(), 0x3b0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0080
        gbc.setState(0xaa0c, 0xf317, 0xc140, 0x2025, 0xbfde, 0x6719, 0x0, 0x1);
        gbc.writeMem(0xaa0c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xf317);
        EXPECT(gbc.pc(), 0xaa0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa0c), 0xcb);
        EXPECT(gbc.readMem(0xaa0d), 0x4d);
        // CB 4D 0081
        gbc.setState(0xbb49, 0x143d, 0x3fb0, 0x616f, 0x242d, 0x2bf2, 0x1, 0x0);
        gbc.writeMem(0xbb49, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x143d);
        EXPECT(gbc.pc(), 0xbb4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb49), 0xcb);
        EXPECT(gbc.readMem(0xbb4a), 0x4d);
        // CB 4D 0082
        gbc.setState(0x6f76, 0x13ef, 0xbcb0, 0xa3b2, 0xa5e5, 0x957b, 0x0, 0x0);
        gbc.writeMem(0x6f76, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x13ef);
        EXPECT(gbc.pc(), 0x6f78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0083
        gbc.setState(0x1d25, 0x1587, 0x6aa0, 0x98b4, 0x31a6, 0x79ec, 0x0, 0x0);
        gbc.writeMem(0x1d25, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1587);
        EXPECT(gbc.pc(), 0x1d27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0085
        gbc.setState(0x6997, 0x6cdf, 0xb960, 0xe4fb, 0xe935, 0x8586, 0x1, 0x0);
        gbc.writeMem(0x6997, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6cdf);
        EXPECT(gbc.pc(), 0x6999);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0086
        gbc.setState(0xbab6, 0x4378, 0xc0b0, 0x5e3f, 0x5b8a, 0x99ad, 0x0, 0x0);
        gbc.writeMem(0xbab6, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x4378);
        EXPECT(gbc.pc(), 0xbab8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbab6), 0xcb);
        EXPECT(gbc.readMem(0xbab7), 0x4d);
        // CB 4D 0088
        gbc.setState(0x4988, 0xf780, 0x1580, 0x6ecf, 0x76e0, 0xa357, 0x0, 0x1);
        gbc.writeMem(0x4988, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf780);
        EXPECT(gbc.pc(), 0x498a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0089
        gbc.setState(0x46bb, 0x20e6, 0xf6c0, 0x1dde, 0xc23f, 0x2aa6, 0x1, 0x0);
        gbc.writeMem(0x46bb, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x20e6);
        EXPECT(gbc.pc(), 0x46bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 008A
        gbc.setState(0x6ec4, 0xb406, 0x53b0, 0x80a6, 0x8e6e, 0x9e77, 0x1, 0x0);
        gbc.writeMem(0x6ec4, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb406);
        EXPECT(gbc.pc(), 0x6ec6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 008B
        gbc.setState(0xdc0b, 0xb4f5, 0xa0f0, 0x1f28, 0x2e9d, 0x44, 0x0, 0x0);
        gbc.writeMem(0xdc0b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xb4f5);
        EXPECT(gbc.pc(), 0xdc0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc0b), 0xcb);
        EXPECT(gbc.readMem(0xdc0c), 0x4d);
        // CB 4D 008C
        gbc.setState(0x4547, 0x1c10, 0x1cc0, 0x5d19, 0xc7f0, 0x38e4, 0x0, 0x0);
        gbc.writeMem(0x4547, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1c10);
        EXPECT(gbc.pc(), 0x4549);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 008D
        gbc.setState(0x50d2, 0x151e, 0xd50, 0x5c30, 0x95c7, 0x6c5e, 0x1, 0x1);
        gbc.writeMem(0x50d2, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x151e);
        EXPECT(gbc.pc(), 0x50d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 008E
        gbc.setState(0x309c, 0xfff9, 0xfb50, 0x270, 0xfd01, 0x1c1e, 0x0, 0x0);
        gbc.writeMem(0x309c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xfff9);
        EXPECT(gbc.pc(), 0x309e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 008F
        gbc.setState(0xec6c, 0x7d48, 0x1c50, 0xdeec, 0x1f0a, 0x868a, 0x1, 0x1);
        gbc.writeMem(0xec6c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7d48);
        EXPECT(gbc.pc(), 0xec6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec6c), 0xcb);
        EXPECT(gbc.readMem(0xec6d), 0x4d);
        // CB 4D 0090
        gbc.setState(0xeed, 0x960b, 0xc350, 0x4d90, 0x49c6, 0x2346, 0x0, 0x0);
        gbc.writeMem(0xeed, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x960b);
        EXPECT(gbc.pc(), 0xeef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0091
        gbc.setState(0x4eee, 0x9efb, 0x54b0, 0x4555, 0xfcd4, 0x257, 0x1, 0x0);
        gbc.writeMem(0x4eee, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9efb);
        EXPECT(gbc.pc(), 0x4ef0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0092
        gbc.setState(0xbfd4, 0x2dea, 0x10e0, 0xa52d, 0x9b58, 0x64a, 0x0, 0x1);
        gbc.writeMem(0xbfd4, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x2dea);
        EXPECT(gbc.pc(), 0xbfd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfd4), 0xcb);
        EXPECT(gbc.readMem(0xbfd5), 0x4d);
        // CB 4D 0093
        gbc.setState(0x9bc9, 0xcead, 0x3840, 0x18fd, 0x672f, 0xb78, 0x0, 0x0);
        gbc.writeMem(0x9bc9, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xcead);
        EXPECT(gbc.pc(), 0x9bcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bc9), 0xcb);
        EXPECT(gbc.readMem(0x9bca), 0x4d);
        // CB 4D 0094
        gbc.setState(0xd69f, 0xf60f, 0x8300, 0x384f, 0xd65b, 0x3658, 0x1, 0x0);
        gbc.writeMem(0xd69f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xf60f);
        EXPECT(gbc.pc(), 0xd6a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd69f), 0xcb);
        EXPECT(gbc.readMem(0xd6a0), 0x4d);
        // CB 4D 0095
        gbc.setState(0x98b9, 0xc35, 0xea00, 0x137a, 0xb3d1, 0x95e1, 0x1, 0x0);
        gbc.writeMem(0x98b9, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc35);
        EXPECT(gbc.pc(), 0x98bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98b9), 0xcb);
        EXPECT(gbc.readMem(0x98ba), 0x4d);
        // CB 4D 0096
        gbc.setState(0x13f7, 0x80a5, 0x42f0, 0xf21c, 0xb243, 0x912c, 0x1, 0x1);
        gbc.writeMem(0x13f7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x80a5);
        EXPECT(gbc.pc(), 0x13f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0097
        gbc.setState(0x9341, 0x1c93, 0xe100, 0xec98, 0xd55b, 0x1a4a, 0x1, 0x0);
        gbc.writeMem(0x9341, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1c93);
        EXPECT(gbc.pc(), 0x9343);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9341), 0xcb);
        EXPECT(gbc.readMem(0x9342), 0x4d);
        // CB 4D 0098
        gbc.setState(0x9c7c, 0xa42c, 0xd260, 0x9577, 0xef9b, 0x51c1, 0x1, 0x1);
        gbc.writeMem(0x9c7c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa42c);
        EXPECT(gbc.pc(), 0x9c7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c7c), 0xcb);
        EXPECT(gbc.readMem(0x9c7d), 0x4d);
        // CB 4D 0099
        gbc.setState(0x517a, 0x3c9c, 0xe640, 0x73b4, 0xcfa4, 0x57b, 0x1, 0x0);
        gbc.writeMem(0x517a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x3c9c);
        EXPECT(gbc.pc(), 0x517c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 009A
        gbc.setState(0xffe, 0x4b66, 0x8190, 0x8b66, 0x99fd, 0xbc94, 0x0, 0x1);
        gbc.writeMem(0xffe, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x4b66);
        EXPECT(gbc.pc(), 0x1000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 009B
        gbc.setState(0x430e, 0x92c3, 0x3880, 0x8b02, 0x632e, 0xcaf, 0x0, 0x0);
        gbc.writeMem(0x430e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x92c3);
        EXPECT(gbc.pc(), 0x4310);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 009C
        gbc.setState(0x1821, 0x2838, 0xc920, 0xc56c, 0xad5d, 0xdab4, 0x1, 0x0);
        gbc.writeMem(0x1821, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2838);
        EXPECT(gbc.pc(), 0x1823);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 009D
        gbc.setState(0x51bf, 0xb4ef, 0x2c00, 0x244a, 0xb9ec, 0x4388, 0x0, 0x1);
        gbc.writeMem(0x51bf, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xb4ef);
        EXPECT(gbc.pc(), 0x51c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 009E
        gbc.setState(0x5a96, 0xcc59, 0xa670, 0x72c4, 0x3c49, 0x45ef, 0x1, 0x1);
        gbc.writeMem(0x5a96, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xcc59);
        EXPECT(gbc.pc(), 0x5a98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 009F
        gbc.setState(0xb4ad, 0x3fcf, 0xde80, 0xff21, 0xb86, 0xba69, 0x0, 0x0);
        gbc.writeMem(0xb4ad, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3fcf);
        EXPECT(gbc.pc(), 0xb4af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4ad), 0xcb);
        EXPECT(gbc.readMem(0xb4ae), 0x4d);
        // CB 4D 00A0
        gbc.setState(0x456f, 0x7bd7, 0x250, 0x4b8c, 0x5e91, 0xdec2, 0x1, 0x0);
        gbc.writeMem(0x456f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7bd7);
        EXPECT(gbc.pc(), 0x4571);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 00A1
        gbc.setState(0x8c4e, 0x1153, 0xf830, 0x27c3, 0x6826, 0x48c7, 0x1, 0x1);
        gbc.writeMem(0x8c4e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x1153);
        EXPECT(gbc.pc(), 0x8c50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c4e), 0xcb);
        EXPECT(gbc.readMem(0x8c4f), 0x4d);
        // CB 4D 00A2
        gbc.setState(0xbb8d, 0xdbce, 0xa5f0, 0xa4d8, 0xc6d9, 0xb87a, 0x0, 0x0);
        gbc.writeMem(0xbb8d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xdbce);
        EXPECT(gbc.pc(), 0xbb8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb8d), 0xcb);
        EXPECT(gbc.readMem(0xbb8e), 0x4d);
        // CB 4D 00A3
        gbc.setState(0x44aa, 0x5674, 0x9e0, 0xb82a, 0x4c7f, 0xdacf, 0x1, 0x1);
        gbc.writeMem(0x44aa, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x5674);
        EXPECT(gbc.pc(), 0x44ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00A4
        gbc.setState(0x99e6, 0xcfcb, 0x24c0, 0x480b, 0x8d83, 0x53b3, 0x0, 0x1);
        gbc.writeMem(0x99e6, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xcfcb);
        EXPECT(gbc.pc(), 0x99e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99e6), 0xcb);
        EXPECT(gbc.readMem(0x99e7), 0x4d);
        // CB 4D 00A5
        gbc.setState(0x9ad, 0x3a88, 0x6af0, 0xb817, 0xb057, 0x8b6b, 0x1, 0x1);
        gbc.writeMem(0x9ad, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3a88);
        EXPECT(gbc.pc(), 0x9af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 00A6
        gbc.setState(0xd0b4, 0xf7f8, 0xe5b0, 0x95aa, 0x4bc6, 0x7f1c, 0x1, 0x1);
        gbc.writeMem(0xd0b4, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf7f8);
        EXPECT(gbc.pc(), 0xd0b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0b4), 0xcb);
        EXPECT(gbc.readMem(0xd0b5), 0x4d);
        // CB 4D 00A7
        gbc.setState(0xdc8e, 0xba59, 0xbfb0, 0x39ad, 0x78e7, 0xce7f, 0x0, 0x1);
        gbc.writeMem(0xdc8e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xba59);
        EXPECT(gbc.pc(), 0xdc90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc8e), 0xcb);
        EXPECT(gbc.readMem(0xdc8f), 0x4d);
        // CB 4D 00A8
        gbc.setState(0xbe2, 0x7097, 0xf530, 0xa005, 0x53f1, 0xdc90, 0x0, 0x1);
        gbc.writeMem(0xbe2, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7097);
        EXPECT(gbc.pc(), 0xbe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 00A9
        gbc.setState(0x3c55, 0xa70f, 0x8510, 0xa4b5, 0x463d, 0xb6e2, 0x1, 0x1);
        gbc.writeMem(0x3c55, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xa70f);
        EXPECT(gbc.pc(), 0x3c57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 00AA
        gbc.setState(0x5355, 0xbd4c, 0xc6b0, 0xdb2a, 0xb501, 0x9bed, 0x1, 0x1);
        gbc.writeMem(0x5355, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xbd4c);
        EXPECT(gbc.pc(), 0x5357);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 00AB
        gbc.setState(0x6b6e, 0x8348, 0xd3c0, 0x1c45, 0x7c6f, 0x25fc, 0x1, 0x1);
        gbc.writeMem(0x6b6e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x8348);
        EXPECT(gbc.pc(), 0x6b70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00AC
        gbc.setState(0x79e8, 0x1056, 0xfb40, 0xd8f6, 0x2a8a, 0x29a6, 0x0, 0x1);
        gbc.writeMem(0x79e8, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x1056);
        EXPECT(gbc.pc(), 0x79ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00AD
        gbc.setState(0x3c2e, 0xc0cd, 0x29c0, 0x400, 0x3bb0, 0xf100, 0x1, 0x0);
        gbc.writeMem(0x3c2e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc0cd);
        EXPECT(gbc.pc(), 0x3c30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00AE
        gbc.setState(0x4cf5, 0x7095, 0xfab0, 0x44b0, 0xe217, 0x5fa4, 0x0, 0x0);
        gbc.writeMem(0x4cf5, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7095);
        EXPECT(gbc.pc(), 0x4cf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 00AF
        gbc.setState(0x79e7, 0x4534, 0x540, 0xc13, 0xe4a4, 0x5420, 0x1, 0x0);
        gbc.writeMem(0x79e7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4534);
        EXPECT(gbc.pc(), 0x79e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00B0
        gbc.setState(0x6a81, 0xd90f, 0xfd70, 0x1d35, 0x5d75, 0xbe2e, 0x0, 0x0);
        gbc.writeMem(0x6a81, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd90f);
        EXPECT(gbc.pc(), 0x6a83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 00B1
        gbc.setState(0x3cf8, 0x1db4, 0x9730, 0xbc73, 0x28dc, 0x6979, 0x0, 0x1);
        gbc.writeMem(0x3cf8, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x1db4);
        EXPECT(gbc.pc(), 0x3cfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 00B2
        gbc.setState(0x5d8, 0x5d30, 0x6d20, 0x76e1, 0xd03d, 0x73ed, 0x1, 0x0);
        gbc.writeMem(0x5d8, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5d30);
        EXPECT(gbc.pc(), 0x5da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00B3
        gbc.setState(0xc6e3, 0x7f46, 0x14c0, 0x6dee, 0x95ba, 0x32e1, 0x0, 0x0);
        gbc.writeMem(0xc6e3, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7f46);
        EXPECT(gbc.pc(), 0xc6e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6e3), 0xcb);
        EXPECT(gbc.readMem(0xc6e4), 0x4d);
        // CB 4D 00B4
        gbc.setState(0xe07b, 0xc71, 0xb380, 0x9103, 0xa42f, 0x2fda, 0x0, 0x0);
        gbc.writeMem(0xe07b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc71);
        EXPECT(gbc.pc(), 0xe07d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe07b), 0xcb);
        EXPECT(gbc.readMem(0xe07c), 0x4d);
        // CB 4D 00B5
        gbc.setState(0x75cc, 0x9525, 0xe0c0, 0x6752, 0x78de, 0xce1f, 0x1, 0x0);
        gbc.writeMem(0x75cc, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x9525);
        EXPECT(gbc.pc(), 0x75ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00B6
        gbc.setState(0x2ffd, 0xc78, 0x2780, 0x3b77, 0x3869, 0xb399, 0x0, 0x0);
        gbc.writeMem(0x2ffd, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xc78);
        EXPECT(gbc.pc(), 0x2fff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00B7
        gbc.setState(0x73cd, 0x6615, 0x8800, 0x2ad1, 0xe33a, 0xe9ef, 0x0, 0x1);
        gbc.writeMem(0x73cd, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6615);
        EXPECT(gbc.pc(), 0x73cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00B8
        gbc.setState(0x9557, 0xb769, 0xc9f0, 0x8764, 0x55b2, 0x305d, 0x0, 0x1);
        gbc.writeMem(0x9557, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb769);
        EXPECT(gbc.pc(), 0x9559);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9557), 0xcb);
        EXPECT(gbc.readMem(0x9558), 0x4d);
        // CB 4D 00B9
        gbc.setState(0x224, 0x97f3, 0x1100, 0xa874, 0x780c, 0x8175, 0x1, 0x0);
        gbc.writeMem(0x224, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x97f3);
        EXPECT(gbc.pc(), 0x226);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00BA
        gbc.setState(0x2d40, 0x7446, 0xf790, 0x4726, 0x8381, 0x6559, 0x1, 0x0);
        gbc.writeMem(0x2d40, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x7446);
        EXPECT(gbc.pc(), 0x2d42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 00BB
        gbc.setState(0x49, 0x4a83, 0xbb40, 0xec42, 0x8f7, 0x24a5, 0x1, 0x0);
        gbc.writeMem(0x49, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x4a83);
        EXPECT(gbc.pc(), 0x4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00BC
        gbc.setState(0xacc9, 0x9ae2, 0x9cc0, 0x423f, 0xc1af, 0x7386, 0x1, 0x0);
        gbc.writeMem(0xacc9, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9ae2);
        EXPECT(gbc.pc(), 0xaccb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacc9), 0xcb);
        EXPECT(gbc.readMem(0xacca), 0x4d);
        // CB 4D 00BD
        gbc.setState(0xcefd, 0x5227, 0xd1e0, 0x4826, 0x8d6b, 0xd2d, 0x0, 0x1);
        gbc.writeMem(0xcefd, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5227);
        EXPECT(gbc.pc(), 0xceff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcefd), 0xcb);
        EXPECT(gbc.readMem(0xcefe), 0x4d);
        // CB 4D 00BE
        gbc.setState(0xc05b, 0x8981, 0x56f0, 0xa444, 0xa015, 0x1860, 0x0, 0x0);
        gbc.writeMem(0xc05b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8981);
        EXPECT(gbc.pc(), 0xc05d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc05b), 0xcb);
        EXPECT(gbc.readMem(0xc05c), 0x4d);
        // CB 4D 00BF
        gbc.setState(0xbf96, 0xb073, 0xfcb0, 0x44e0, 0x4d7b, 0x700c, 0x1, 0x0);
        gbc.writeMem(0xbf96, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb073);
        EXPECT(gbc.pc(), 0xbf98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf96), 0xcb);
        EXPECT(gbc.readMem(0xbf97), 0x4d);
        // CB 4D 00C0
        gbc.setState(0x122f, 0xe4a0, 0xa0, 0xa0cf, 0x35a5, 0xe598, 0x1, 0x0);
        gbc.writeMem(0x122f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xe4a0);
        EXPECT(gbc.pc(), 0x1231);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00C2
        gbc.setState(0x7401, 0x7a7d, 0xfe60, 0x5430, 0x7a37, 0x31fb, 0x0, 0x1);
        gbc.writeMem(0x7401, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x7a7d);
        EXPECT(gbc.pc(), 0x7403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00C3
        gbc.setState(0x3a59, 0x6c48, 0x4fd0, 0xe083, 0x93a1, 0x7401, 0x0, 0x1);
        gbc.writeMem(0x3a59, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x6c48);
        EXPECT(gbc.pc(), 0x3a5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 00C4
        gbc.setState(0x25d0, 0xd055, 0x2a90, 0x7d2b, 0xe109, 0x3b64, 0x1, 0x0);
        gbc.writeMem(0x25d0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd055);
        EXPECT(gbc.pc(), 0x25d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 00C5
        gbc.setState(0x6bef, 0xc57a, 0x9eb0, 0xfe39, 0x26d5, 0xabdf, 0x1, 0x0);
        gbc.writeMem(0x6bef, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc57a);
        EXPECT(gbc.pc(), 0x6bf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 00C6
        gbc.setState(0xea2f, 0x5417, 0xcc0, 0x5c6f, 0x4554, 0x5c6a, 0x1, 0x0);
        gbc.writeMem(0xea2f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x5417);
        EXPECT(gbc.pc(), 0xea31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea2f), 0xcb);
        EXPECT(gbc.readMem(0xea30), 0x4d);
        // CB 4D 00C8
        gbc.setState(0xbc2c, 0xa71c, 0x4770, 0x8719, 0x53ae, 0xd6f9, 0x0, 0x0);
        gbc.writeMem(0xbc2c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xa71c);
        EXPECT(gbc.pc(), 0xbc2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc2c), 0xcb);
        EXPECT(gbc.readMem(0xbc2d), 0x4d);
        // CB 4D 00C9
        gbc.setState(0x8c4c, 0xcf3, 0x1ab0, 0xb66a, 0x2ecb, 0x7d5a, 0x1, 0x0);
        gbc.writeMem(0x8c4c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xcf3);
        EXPECT(gbc.pc(), 0x8c4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c4c), 0xcb);
        EXPECT(gbc.readMem(0x8c4d), 0x4d);
        // CB 4D 00CA
        gbc.setState(0x53ff, 0x7fd4, 0xb180, 0x766d, 0x2707, 0x2cb1, 0x0, 0x1);
        gbc.writeMem(0x53ff, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x7fd4);
        EXPECT(gbc.pc(), 0x5401);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00CB
        gbc.setState(0xd775, 0x7313, 0x6720, 0x213a, 0xc9e1, 0xed6, 0x1, 0x1);
        gbc.writeMem(0xd775, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x7313);
        EXPECT(gbc.pc(), 0xd777);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd775), 0xcb);
        EXPECT(gbc.readMem(0xd776), 0x4d);
        // CB 4D 00CC
        gbc.setState(0x515f, 0x75c0, 0x2e60, 0xc4da, 0x1281, 0xc4b8, 0x0, 0x1);
        gbc.writeMem(0x515f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x75c0);
        EXPECT(gbc.pc(), 0x5161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00CD
        gbc.setState(0xd84, 0xdc13, 0x1a40, 0xe325, 0x38c3, 0xbcbd, 0x0, 0x0);
        gbc.writeMem(0xd84, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xdc13);
        EXPECT(gbc.pc(), 0xd86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00CE
        gbc.setState(0xd27f, 0xe9db, 0x1460, 0xde5f, 0xdb94, 0x94f, 0x1, 0x1);
        gbc.writeMem(0xd27f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe9db);
        EXPECT(gbc.pc(), 0xd281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd27f), 0xcb);
        EXPECT(gbc.readMem(0xd280), 0x4d);
        // CB 4D 00CF
        gbc.setState(0x4e96, 0x5d1f, 0xcde0, 0x3310, 0x9b5d, 0x3a19, 0x1, 0x1);
        gbc.writeMem(0x4e96, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x5d1f);
        EXPECT(gbc.pc(), 0x4e98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00D0
        gbc.setState(0xaa7e, 0xf37c, 0xa350, 0x145b, 0x713d, 0xbb3, 0x1, 0x0);
        gbc.writeMem(0xaa7e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xf37c);
        EXPECT(gbc.pc(), 0xaa80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa7e), 0xcb);
        EXPECT(gbc.readMem(0xaa7f), 0x4d);
        // CB 4D 00D1
        gbc.setState(0x20b0, 0xf1b4, 0xea70, 0x220a, 0x7ad2, 0x2edc, 0x1, 0x0);
        gbc.writeMem(0x20b0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xf1b4);
        EXPECT(gbc.pc(), 0x20b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 00D2
        gbc.setState(0xb8dc, 0x6ef0, 0x3a00, 0x94a4, 0xd7f4, 0x4fa2, 0x1, 0x1);
        gbc.writeMem(0xb8dc, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x6ef0);
        EXPECT(gbc.pc(), 0xb8de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8dc), 0xcb);
        EXPECT(gbc.readMem(0xb8dd), 0x4d);
        // CB 4D 00D3
        gbc.setState(0xaee, 0xb660, 0x55b0, 0x85e1, 0x83b8, 0xd461, 0x1, 0x1);
        gbc.writeMem(0xaee, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb660);
        EXPECT(gbc.pc(), 0xaf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 00D6
        gbc.setState(0xdf5c, 0x3126, 0xb300, 0x8b02, 0x58a0, 0xa3c8, 0x1, 0x0);
        gbc.writeMem(0xdf5c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3126);
        EXPECT(gbc.pc(), 0xdf5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf5c), 0xcb);
        EXPECT(gbc.readMem(0xdf5d), 0x4d);
        // CB 4D 00D7
        gbc.setState(0x272f, 0x933e, 0x9b00, 0x850f, 0xdd15, 0x479e, 0x1, 0x0);
        gbc.writeMem(0x272f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x933e);
        EXPECT(gbc.pc(), 0x2731);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00D8
        gbc.setState(0x1031, 0xc075, 0x4100, 0x5950, 0xbb76, 0x8a6, 0x1, 0x0);
        gbc.writeMem(0x1031, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc075);
        EXPECT(gbc.pc(), 0x1033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00D9
        gbc.setState(0x6976, 0xf164, 0xd6a0, 0x7ea4, 0x2077, 0x3fa, 0x0, 0x1);
        gbc.writeMem(0x6976, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xf164);
        EXPECT(gbc.pc(), 0x6978);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00DA
        gbc.setState(0xbdae, 0xa952, 0x7b40, 0xe8e, 0x6bc5, 0xb92e, 0x1, 0x0);
        gbc.writeMem(0xbdae, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa952);
        EXPECT(gbc.pc(), 0xbdb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdae), 0xcb);
        EXPECT(gbc.readMem(0xbdaf), 0x4d);
        // CB 4D 00DB
        gbc.setState(0x16c1, 0x80d0, 0x1c0, 0x29b4, 0x2448, 0xa374, 0x1, 0x1);
        gbc.writeMem(0x16c1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x80d0);
        EXPECT(gbc.pc(), 0x16c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00DC
        gbc.setState(0xd0bf, 0x785f, 0xe380, 0x4d77, 0x59b8, 0x7306, 0x1, 0x0);
        gbc.writeMem(0xd0bf, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x785f);
        EXPECT(gbc.pc(), 0xd0c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0bf), 0xcb);
        EXPECT(gbc.readMem(0xd0c0), 0x4d);
        // CB 4D 00DD
        gbc.setState(0x5067, 0xaaaa, 0x6b40, 0xcc46, 0xae11, 0x2eab, 0x1, 0x1);
        gbc.writeMem(0x5067, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xaaaa);
        EXPECT(gbc.pc(), 0x5069);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00DE
        gbc.setState(0x10bb, 0x8949, 0x33c0, 0xcedc, 0xdc6d, 0x118d, 0x1, 0x1);
        gbc.writeMem(0x10bb, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x8949);
        EXPECT(gbc.pc(), 0x10bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00DF
        gbc.setState(0x976b, 0x677a, 0x970, 0x7c11, 0x2f03, 0xe09, 0x0, 0x0);
        gbc.writeMem(0x976b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x677a);
        EXPECT(gbc.pc(), 0x976d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x976b), 0xcb);
        EXPECT(gbc.readMem(0x976c), 0x4d);
        // CB 4D 00E0
        gbc.setState(0x45ca, 0xe99, 0xb190, 0x6982, 0xd7f3, 0x6cbb, 0x1, 0x1);
        gbc.writeMem(0x45ca, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xe99);
        EXPECT(gbc.pc(), 0x45cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 00E1
        gbc.setState(0x1950, 0x5ef, 0xe350, 0x3028, 0x2732, 0xc5bd, 0x0, 0x0);
        gbc.writeMem(0x1950, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x5ef);
        EXPECT(gbc.pc(), 0x1952);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 00E2
        gbc.setState(0x11de, 0x9c8, 0x8bd0, 0x587f, 0x3ae3, 0x7717, 0x1, 0x0);
        gbc.writeMem(0x11de, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x9c8);
        EXPECT(gbc.pc(), 0x11e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 00E3
        gbc.setState(0x7815, 0x64d6, 0x8260, 0x55f5, 0xf222, 0xe405, 0x0, 0x0);
        gbc.writeMem(0x7815, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x64d6);
        EXPECT(gbc.pc(), 0x7817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00E4
        gbc.setState(0x57b4, 0xe797, 0xcfc0, 0x6e72, 0xbf8, 0x47d5, 0x1, 0x0);
        gbc.writeMem(0x57b4, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe797);
        EXPECT(gbc.pc(), 0x57b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00E5
        gbc.setState(0x28d1, 0x85aa, 0xfe30, 0x43ca, 0x91d, 0x65b1, 0x1, 0x0);
        gbc.writeMem(0x28d1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x85aa);
        EXPECT(gbc.pc(), 0x28d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 00E6
        gbc.setState(0x2fa3, 0x1bde, 0xf1d0, 0xed8, 0x6512, 0xb3a5, 0x0, 0x1);
        gbc.writeMem(0x2fa3, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1bde);
        EXPECT(gbc.pc(), 0x2fa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 00E7
        gbc.setState(0x98e9, 0x8fa6, 0x6fc0, 0xc228, 0x9943, 0xf68d, 0x0, 0x1);
        gbc.writeMem(0x98e9, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x8fa6);
        EXPECT(gbc.pc(), 0x98eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98e9), 0xcb);
        EXPECT(gbc.readMem(0x98ea), 0x4d);
        // CB 4D 00E8
        gbc.setState(0x6826, 0x2235, 0xa810, 0xad0, 0x9443, 0x75b9, 0x1, 0x0);
        gbc.writeMem(0x6826, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2235);
        EXPECT(gbc.pc(), 0x6828);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 00E9
        gbc.setState(0xda07, 0x7017, 0x5e30, 0x536b, 0x7bdb, 0x6ecb, 0x0, 0x1);
        gbc.writeMem(0xda07, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x7017);
        EXPECT(gbc.pc(), 0xda09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda07), 0xcb);
        EXPECT(gbc.readMem(0xda08), 0x4d);
        // CB 4D 00EA
        gbc.setState(0x5b40, 0x4c45, 0xe360, 0x5378, 0xec0d, 0x50ac, 0x1, 0x1);
        gbc.writeMem(0x5b40, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4c45);
        EXPECT(gbc.pc(), 0x5b42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00EB
        gbc.setState(0xc982, 0x4b45, 0x6f00, 0xea59, 0x8eb, 0x7e89, 0x1, 0x1);
        gbc.writeMem(0xc982, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x4b45);
        EXPECT(gbc.pc(), 0xc984);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc982), 0xcb);
        EXPECT(gbc.readMem(0xc983), 0x4d);
        // CB 4D 00EC
        gbc.setState(0x8e0a, 0x8274, 0xbb0, 0xa390, 0x73dc, 0x24d7, 0x1, 0x1);
        gbc.writeMem(0x8e0a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x8274);
        EXPECT(gbc.pc(), 0x8e0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e0a), 0xcb);
        EXPECT(gbc.readMem(0x8e0b), 0x4d);
        // CB 4D 00ED
        gbc.setState(0xea6a, 0xa163, 0xb090, 0x5396, 0x72ef, 0x6b3f, 0x1, 0x1);
        gbc.writeMem(0xea6a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa163);
        EXPECT(gbc.pc(), 0xea6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea6a), 0xcb);
        EXPECT(gbc.readMem(0xea6b), 0x4d);
        // CB 4D 00EE
        gbc.setState(0x881c, 0x1966, 0xd540, 0xebe9, 0x9738, 0x5296, 0x1, 0x1);
        gbc.writeMem(0x881c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1966);
        EXPECT(gbc.pc(), 0x881e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x881c), 0xcb);
        EXPECT(gbc.readMem(0x881d), 0x4d);
        // CB 4D 00EF
        gbc.setState(0xda93, 0xc97f, 0xdd80, 0x9e0f, 0x7d36, 0xd80a, 0x1, 0x1);
        gbc.writeMem(0xda93, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xc97f);
        EXPECT(gbc.pc(), 0xda95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda93), 0xcb);
        EXPECT(gbc.readMem(0xda94), 0x4d);
        // CB 4D 00F0
        gbc.setState(0xd692, 0x3045, 0xf290, 0x802e, 0xddbb, 0xd, 0x0, 0x0);
        gbc.writeMem(0xd692, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x3045);
        EXPECT(gbc.pc(), 0xd694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd692), 0xcb);
        EXPECT(gbc.readMem(0xd693), 0x4d);
        // CB 4D 00F1
        gbc.setState(0x23fd, 0x4fbf, 0x2740, 0xbeeb, 0x1e96, 0x5d41, 0x1, 0x0);
        gbc.writeMem(0x23fd, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x4fbf);
        EXPECT(gbc.pc(), 0x23ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00F2
        gbc.setState(0xd235, 0xa09, 0xfe90, 0xa73c, 0xdf4f, 0x64a2, 0x1, 0x1);
        gbc.writeMem(0xd235, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa09);
        EXPECT(gbc.pc(), 0xd237);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd235), 0xcb);
        EXPECT(gbc.readMem(0xd236), 0x4d);
        // CB 4D 00F3
        gbc.setState(0xe6c, 0x4491, 0x8710, 0x304d, 0x14d8, 0x4d65, 0x1, 0x1);
        gbc.writeMem(0xe6c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4491);
        EXPECT(gbc.pc(), 0xe6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 00F4
        gbc.setState(0x33ed, 0xa7da, 0x6b20, 0x83ae, 0x17c6, 0x82ee, 0x0, 0x1);
        gbc.writeMem(0x33ed, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xa7da);
        EXPECT(gbc.pc(), 0x33ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 00F6
        gbc.setState(0x9185, 0x9d62, 0x6060, 0x351a, 0xbbdf, 0xf8a3, 0x1, 0x1);
        gbc.writeMem(0x9185, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9d62);
        EXPECT(gbc.pc(), 0x9187);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9185), 0xcb);
        EXPECT(gbc.readMem(0x9186), 0x4d);
        // CB 4D 00F7
        gbc.setState(0xde2f, 0x4e49, 0x3620, 0x5cd2, 0xc7cc, 0xe11e, 0x1, 0x1);
        gbc.writeMem(0xde2f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x4e49);
        EXPECT(gbc.pc(), 0xde31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde2f), 0xcb);
        EXPECT(gbc.readMem(0xde30), 0x4d);
        // CB 4D 00F8
        gbc.setState(0x9d5b, 0x9c8d, 0x6b70, 0x10a5, 0x62c9, 0x59d7, 0x0, 0x1);
        gbc.writeMem(0x9d5b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x9c8d);
        EXPECT(gbc.pc(), 0x9d5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d5b), 0xcb);
        EXPECT(gbc.readMem(0x9d5c), 0x4d);
        // CB 4D 00F9
        gbc.setState(0x2c4e, 0xc444, 0xfc50, 0x1977, 0xab2, 0x1a3c, 0x0, 0x0);
        gbc.writeMem(0x2c4e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xc444);
        EXPECT(gbc.pc(), 0x2c50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 00FA
        gbc.setState(0x1fb2, 0x2da7, 0x5550, 0x3db8, 0x92f6, 0x30ec, 0x0, 0x0);
        gbc.writeMem(0x1fb2, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x2da7);
        EXPECT(gbc.pc(), 0x1fb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 00FB
        gbc.setState(0x8b64, 0x8825, 0x9350, 0x8f83, 0x42ab, 0x391, 0x1, 0x0);
        gbc.writeMem(0x8b64, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8825);
        EXPECT(gbc.pc(), 0x8b66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b64), 0xcb);
        EXPECT(gbc.readMem(0x8b65), 0x4d);
        // CB 4D 00FC
        gbc.setState(0xe620, 0xe197, 0xcea0, 0x3aea, 0xa17f, 0x2281, 0x0, 0x1);
        gbc.writeMem(0xe620, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe197);
        EXPECT(gbc.pc(), 0xe622);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe620), 0xcb);
        EXPECT(gbc.readMem(0xe621), 0x4d);
        // CB 4D 00FD
        gbc.setState(0x11c1, 0x3a9e, 0x7870, 0x92da, 0xc666, 0x19e7, 0x0, 0x0);
        gbc.writeMem(0x11c1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x3a9e);
        EXPECT(gbc.pc(), 0x11c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 00FE
        gbc.setState(0x815d, 0x1885, 0x690, 0x19eb, 0xbb4e, 0x473a, 0x1, 0x1);
        gbc.writeMem(0x815d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x1885);
        EXPECT(gbc.pc(), 0x815f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x815d), 0xcb);
        EXPECT(gbc.readMem(0x815e), 0x4d);
        // CB 4D 00FF
        gbc.setState(0xdcea, 0xa213, 0x34f0, 0x5c15, 0x9649, 0xf0af, 0x1, 0x0);
        gbc.writeMem(0xdcea, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa213);
        EXPECT(gbc.pc(), 0xdcec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcea), 0xcb);
        EXPECT(gbc.readMem(0xdceb), 0x4d);
        // CB 4D 0100
        gbc.setState(0xbec3, 0x549f, 0x1eb0, 0x4451, 0x7971, 0x9386, 0x1, 0x1);
        gbc.writeMem(0xbec3, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x549f);
        EXPECT(gbc.pc(), 0xbec5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbec3), 0xcb);
        EXPECT(gbc.readMem(0xbec4), 0x4d);
        // CB 4D 0101
        gbc.setState(0x33a7, 0x64d6, 0x61d0, 0xef43, 0x8ee0, 0x53bb, 0x1, 0x0);
        gbc.writeMem(0x33a7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x64d6);
        EXPECT(gbc.pc(), 0x33a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0102
        gbc.setState(0x283f, 0x2b66, 0xb5e0, 0x45be, 0x5d65, 0xc1b5, 0x1, 0x1);
        gbc.writeMem(0x283f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2b66);
        EXPECT(gbc.pc(), 0x2841);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0103
        gbc.setState(0x8b59, 0x4e87, 0x9490, 0xcdff, 0x17ef, 0xb93, 0x1, 0x1);
        gbc.writeMem(0x8b59, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x4e87);
        EXPECT(gbc.pc(), 0x8b5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b59), 0xcb);
        EXPECT(gbc.readMem(0x8b5a), 0x4d);
        // CB 4D 0104
        gbc.setState(0xc3a5, 0xfd81, 0x2800, 0x98e1, 0x11e7, 0x890c, 0x1, 0x1);
        gbc.writeMem(0xc3a5, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xfd81);
        EXPECT(gbc.pc(), 0xc3a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3a5), 0xcb);
        EXPECT(gbc.readMem(0xc3a6), 0x4d);
        // CB 4D 0105
        gbc.setState(0xb0d5, 0xb788, 0x9390, 0x251c, 0x4176, 0x3597, 0x0, 0x1);
        gbc.writeMem(0xb0d5, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xb788);
        EXPECT(gbc.pc(), 0xb0d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0d5), 0xcb);
        EXPECT(gbc.readMem(0xb0d6), 0x4d);
        // CB 4D 0106
        gbc.setState(0xd424, 0xf29b, 0x59f0, 0xbf80, 0x7b6f, 0x293c, 0x0, 0x1);
        gbc.writeMem(0xd424, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf29b);
        EXPECT(gbc.pc(), 0xd426);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd424), 0xcb);
        EXPECT(gbc.readMem(0xd425), 0x4d);
        // CB 4D 0107
        gbc.setState(0x5fdb, 0x994d, 0x3460, 0x2319, 0x6ea4, 0x5ebc, 0x1, 0x1);
        gbc.writeMem(0x5fdb, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x994d);
        EXPECT(gbc.pc(), 0x5fdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0108
        gbc.setState(0x9393, 0x70df, 0x8380, 0x8b96, 0x116, 0x16a, 0x0, 0x0);
        gbc.writeMem(0x9393, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x70df);
        EXPECT(gbc.pc(), 0x9395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9393), 0xcb);
        EXPECT(gbc.readMem(0x9394), 0x4d);
        // CB 4D 0109
        gbc.setState(0x59e4, 0xf2c5, 0x12c0, 0xb380, 0xc573, 0x98e2, 0x0, 0x0);
        gbc.writeMem(0x59e4, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf2c5);
        EXPECT(gbc.pc(), 0x59e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 010A
        gbc.setState(0xead8, 0x50d5, 0x84c0, 0xffe1, 0x34d8, 0x29a5, 0x0, 0x0);
        gbc.writeMem(0xead8, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x50d5);
        EXPECT(gbc.pc(), 0xeada);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xead8), 0xcb);
        EXPECT(gbc.readMem(0xead9), 0x4d);
        // CB 4D 010B
        gbc.setState(0xcd35, 0xf652, 0x640, 0x985f, 0xc1b0, 0xc510, 0x1, 0x0);
        gbc.writeMem(0xcd35, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf652);
        EXPECT(gbc.pc(), 0xcd37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd35), 0xcb);
        EXPECT(gbc.readMem(0xcd36), 0x4d);
        // CB 4D 010C
        gbc.setState(0x1e, 0xe4cc, 0xecd0, 0xcf45, 0x14d7, 0xabc1, 0x0, 0x1);
        gbc.writeMem(0x1e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe4cc);
        EXPECT(gbc.pc(), 0x20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 010D
        gbc.setState(0x1c1b, 0xee5c, 0xbd40, 0x7186, 0x2d68, 0xa4e3, 0x0, 0x1);
        gbc.writeMem(0x1c1b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xee5c);
        EXPECT(gbc.pc(), 0x1c1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 010E
        gbc.setState(0x328a, 0x4b08, 0x9800, 0x33ac, 0x81ad, 0xa7dc, 0x0, 0x0);
        gbc.writeMem(0x328a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x4b08);
        EXPECT(gbc.pc(), 0x328c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 010F
        gbc.setState(0x93be, 0xf4c, 0x5740, 0x39d9, 0xae1d, 0x7c56, 0x0, 0x0);
        gbc.writeMem(0x93be, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xf4c);
        EXPECT(gbc.pc(), 0x93c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93be), 0xcb);
        EXPECT(gbc.readMem(0x93bf), 0x4d);
        // CB 4D 0110
        gbc.setState(0xb36b, 0xa903, 0x7f40, 0x6a37, 0x421f, 0xf5c, 0x1, 0x0);
        gbc.writeMem(0xb36b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa903);
        EXPECT(gbc.pc(), 0xb36d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb36b), 0xcb);
        EXPECT(gbc.readMem(0xb36c), 0x4d);
        // CB 4D 0111
        gbc.setState(0xc08f, 0x2c8b, 0x9d90, 0xf88f, 0x9f47, 0x6678, 0x0, 0x0);
        gbc.writeMem(0xc08f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x2c8b);
        EXPECT(gbc.pc(), 0xc091);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc08f), 0xcb);
        EXPECT(gbc.readMem(0xc090), 0x4d);
        // CB 4D 0112
        gbc.setState(0x4e1d, 0x1473, 0x4ed0, 0x9f8c, 0xab39, 0x7122, 0x1, 0x0);
        gbc.writeMem(0x4e1d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1473);
        EXPECT(gbc.pc(), 0x4e1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0113
        gbc.setState(0xee1b, 0x8b55, 0x8ec0, 0x8af2, 0x216b, 0x522d, 0x1, 0x1);
        gbc.writeMem(0xee1b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8b55);
        EXPECT(gbc.pc(), 0xee1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee1b), 0xcb);
        EXPECT(gbc.readMem(0xee1c), 0x4d);
        // CB 4D 0114
        gbc.setState(0xaf23, 0x5549, 0x8140, 0xf9ba, 0x5d33, 0x1fe3, 0x0, 0x0);
        gbc.writeMem(0xaf23, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x5549);
        EXPECT(gbc.pc(), 0xaf25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf23), 0xcb);
        EXPECT(gbc.readMem(0xaf24), 0x4d);
        // CB 4D 0115
        gbc.setState(0xaa7c, 0x8380, 0x9fb0, 0x25ca, 0x17ae, 0x1003, 0x1, 0x1);
        gbc.writeMem(0xaa7c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8380);
        EXPECT(gbc.pc(), 0xaa7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa7c), 0xcb);
        EXPECT(gbc.readMem(0xaa7d), 0x4d);
        // CB 4D 0116
        gbc.setState(0x45e4, 0x2f7b, 0x50a0, 0x8355, 0xf4c, 0x5c5e, 0x0, 0x1);
        gbc.writeMem(0x45e4, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2f7b);
        EXPECT(gbc.pc(), 0x45e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0117
        gbc.setState(0x8b69, 0xd8e1, 0xcaf0, 0x6675, 0xbc3, 0xfef5, 0x0, 0x0);
        gbc.writeMem(0x8b69, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xd8e1);
        EXPECT(gbc.pc(), 0x8b6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b69), 0xcb);
        EXPECT(gbc.readMem(0x8b6a), 0x4d);
        // CB 4D 0118
        gbc.setState(0x11bb, 0x8dc1, 0x3640, 0x8a9f, 0xee0e, 0x9722, 0x0, 0x0);
        gbc.writeMem(0x11bb, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x8dc1);
        EXPECT(gbc.pc(), 0x11bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0119
        gbc.setState(0xb620, 0x9a46, 0xd1a0, 0x1987, 0xac67, 0xe295, 0x0, 0x1);
        gbc.writeMem(0xb620, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x9a46);
        EXPECT(gbc.pc(), 0xb622);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb620), 0xcb);
        EXPECT(gbc.readMem(0xb621), 0x4d);
        // CB 4D 011A
        gbc.setState(0x3207, 0xdc67, 0xefe0, 0xc777, 0x2c18, 0x72d5, 0x1, 0x0);
        gbc.writeMem(0x3207, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xdc67);
        EXPECT(gbc.pc(), 0x3209);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 011B
        gbc.setState(0xb043, 0xf4cb, 0xae40, 0x32cd, 0x2931, 0x279b, 0x1, 0x0);
        gbc.writeMem(0xb043, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xf4cb);
        EXPECT(gbc.pc(), 0xb045);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb043), 0xcb);
        EXPECT(gbc.readMem(0xb044), 0x4d);
        // CB 4D 011C
        gbc.setState(0xeca9, 0x6200, 0x1f0, 0x7a13, 0xe522, 0x816d, 0x1, 0x0);
        gbc.writeMem(0xeca9, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6200);
        EXPECT(gbc.pc(), 0xecab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeca9), 0xcb);
        EXPECT(gbc.readMem(0xecaa), 0x4d);
        // CB 4D 011D
        gbc.setState(0x9162, 0xefb0, 0xfb10, 0x172e, 0x1506, 0x9aa5, 0x1, 0x1);
        gbc.writeMem(0x9162, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xefb0);
        EXPECT(gbc.pc(), 0x9164);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9162), 0xcb);
        EXPECT(gbc.readMem(0x9163), 0x4d);
        // CB 4D 011E
        gbc.setState(0x851d, 0x84e7, 0x30, 0x7722, 0x519d, 0x8d9e, 0x0, 0x1);
        gbc.writeMem(0x851d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x84e7);
        EXPECT(gbc.pc(), 0x851f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x851d), 0xcb);
        EXPECT(gbc.readMem(0x851e), 0x4d);
        // CB 4D 011F
        gbc.setState(0xce6f, 0x6afb, 0x62e0, 0xac06, 0x6259, 0xc2f0, 0x1, 0x1);
        gbc.writeMem(0xce6f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6afb);
        EXPECT(gbc.pc(), 0xce71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce6f), 0xcb);
        EXPECT(gbc.readMem(0xce70), 0x4d);
        // CB 4D 0120
        gbc.setState(0xa760, 0xf782, 0x5060, 0xad47, 0x8e63, 0x6210, 0x0, 0x1);
        gbc.writeMem(0xa760, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf782);
        EXPECT(gbc.pc(), 0xa762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa760), 0xcb);
        EXPECT(gbc.readMem(0xa761), 0x4d);
        // CB 4D 0121
        gbc.setState(0xde4, 0xbc38, 0xcf60, 0x43, 0xa113, 0xfd76, 0x1, 0x0);
        gbc.writeMem(0xde4, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xbc38);
        EXPECT(gbc.pc(), 0xde6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0122
        gbc.setState(0xb26e, 0x969e, 0x1890, 0x7b8b, 0xe534, 0x946f, 0x0, 0x0);
        gbc.writeMem(0xb26e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x969e);
        EXPECT(gbc.pc(), 0xb270);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb26e), 0xcb);
        EXPECT(gbc.readMem(0xb26f), 0x4d);
        // CB 4D 0123
        gbc.setState(0x80c2, 0x8f, 0xf120, 0x8cfc, 0xa0c5, 0xb192, 0x0, 0x0);
        gbc.writeMem(0x80c2, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x8f);
        EXPECT(gbc.pc(), 0x80c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80c2), 0xcb);
        EXPECT(gbc.readMem(0x80c3), 0x4d);
        // CB 4D 0124
        gbc.setState(0x3c80, 0x7828, 0xce60, 0xf659, 0x41ec, 0x8c2d, 0x1, 0x1);
        gbc.writeMem(0x3c80, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x7828);
        EXPECT(gbc.pc(), 0x3c82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0125
        gbc.setState(0xe14e, 0x4066, 0xd1e0, 0x77e, 0x50ba, 0xb7d1, 0x0, 0x0);
        gbc.writeMem(0xe14e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x4066);
        EXPECT(gbc.pc(), 0xe150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe14e), 0xcb);
        EXPECT(gbc.readMem(0xe14f), 0x4d);
        // CB 4D 0126
        gbc.setState(0x7354, 0x9d50, 0x40c0, 0xd932, 0x867b, 0xd22c, 0x1, 0x1);
        gbc.writeMem(0x7354, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x9d50);
        EXPECT(gbc.pc(), 0x7356);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0127
        gbc.setState(0xec8e, 0x5997, 0x8ee0, 0x72b2, 0xbf97, 0xfce4, 0x0, 0x0);
        gbc.writeMem(0xec8e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x5997);
        EXPECT(gbc.pc(), 0xec90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec8e), 0xcb);
        EXPECT(gbc.readMem(0xec8f), 0x4d);
        // CB 4D 0129
        gbc.setState(0x47e9, 0x12c9, 0x2490, 0x1cd2, 0x9ff9, 0x8ef4, 0x1, 0x0);
        gbc.writeMem(0x47e9, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x12c9);
        EXPECT(gbc.pc(), 0x47eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 012A
        gbc.setState(0x4e49, 0xc287, 0x7e0, 0x8bcf, 0x6c0a, 0x9606, 0x0, 0x1);
        gbc.writeMem(0x4e49, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc287);
        EXPECT(gbc.pc(), 0x4e4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 012B
        gbc.setState(0x5342, 0xae63, 0xbf80, 0x79f6, 0xf567, 0xc228, 0x1, 0x1);
        gbc.writeMem(0x5342, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xae63);
        EXPECT(gbc.pc(), 0x5344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 012C
        gbc.setState(0x5289, 0x9de0, 0x2ea0, 0x7042, 0x4a6b, 0xff18, 0x1, 0x0);
        gbc.writeMem(0x5289, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9de0);
        EXPECT(gbc.pc(), 0x528b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 012D
        gbc.setState(0x8420, 0xfb22, 0x5c50, 0x5c01, 0xe501, 0x3615, 0x1, 0x1);
        gbc.writeMem(0x8420, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xfb22);
        EXPECT(gbc.pc(), 0x8422);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8420), 0xcb);
        EXPECT(gbc.readMem(0x8421), 0x4d);
        // CB 4D 012E
        gbc.setState(0xa190, 0xab22, 0xd600, 0x51ad, 0x14ce, 0x7aee, 0x0, 0x0);
        gbc.writeMem(0xa190, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xab22);
        EXPECT(gbc.pc(), 0xa192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa190), 0xcb);
        EXPECT(gbc.readMem(0xa191), 0x4d);
        // CB 4D 012F
        gbc.setState(0xe1da, 0xc56e, 0xdfe0, 0xee67, 0x214c, 0xaaae, 0x1, 0x0);
        gbc.writeMem(0xe1da, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc56e);
        EXPECT(gbc.pc(), 0xe1dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1da), 0xcb);
        EXPECT(gbc.readMem(0xe1db), 0x4d);
        // CB 4D 0130
        gbc.setState(0x7864, 0x2a15, 0x8a10, 0x8e5e, 0xcbb4, 0xd408, 0x1, 0x0);
        gbc.writeMem(0x7864, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x2a15);
        EXPECT(gbc.pc(), 0x7866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0132
        gbc.setState(0x8621, 0xbfe5, 0xbb10, 0x4a09, 0x57a6, 0xec93, 0x0, 0x0);
        gbc.writeMem(0x8621, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xbfe5);
        EXPECT(gbc.pc(), 0x8623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8621), 0xcb);
        EXPECT(gbc.readMem(0x8622), 0x4d);
        // CB 4D 0133
        gbc.setState(0x640e, 0xc64f, 0xd4a0, 0x3752, 0x4d36, 0x7f3c, 0x0, 0x0);
        gbc.writeMem(0x640e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xc64f);
        EXPECT(gbc.pc(), 0x6410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0134
        gbc.setState(0x41c5, 0x187f, 0xb940, 0x9c08, 0x9b91, 0xc580, 0x1, 0x1);
        gbc.writeMem(0x41c5, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x187f);
        EXPECT(gbc.pc(), 0x41c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0135
        gbc.setState(0xa5e1, 0x3a8a, 0xe6f0, 0xfb26, 0xd03d, 0x8752, 0x1, 0x1);
        gbc.writeMem(0xa5e1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x3a8a);
        EXPECT(gbc.pc(), 0xa5e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5e1), 0xcb);
        EXPECT(gbc.readMem(0xa5e2), 0x4d);
        // CB 4D 0136
        gbc.setState(0x90ab, 0xbb47, 0x6360, 0x2b22, 0xdc99, 0x224e, 0x1, 0x0);
        gbc.writeMem(0x90ab, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xbb47);
        EXPECT(gbc.pc(), 0x90ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90ab), 0xcb);
        EXPECT(gbc.readMem(0x90ac), 0x4d);
        // CB 4D 0137
        gbc.setState(0x13b3, 0x3432, 0x6250, 0x44c7, 0xd596, 0xdc93, 0x1, 0x1);
        gbc.writeMem(0x13b3, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x3432);
        EXPECT(gbc.pc(), 0x13b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0138
        gbc.setState(0x7a20, 0x1518, 0x3950, 0x82e, 0xe476, 0x5193, 0x0, 0x0);
        gbc.writeMem(0x7a20, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1518);
        EXPECT(gbc.pc(), 0x7a22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 013A
        gbc.setState(0x2a06, 0x2462, 0xa0d0, 0xc4ec, 0x4558, 0xd327, 0x0, 0x0);
        gbc.writeMem(0x2a06, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x2462);
        EXPECT(gbc.pc(), 0x2a08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 013B
        gbc.setState(0x2c9a, 0xc0b3, 0x22f0, 0x41a9, 0x3967, 0xb688, 0x1, 0x1);
        gbc.writeMem(0x2c9a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc0b3);
        EXPECT(gbc.pc(), 0x2c9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 013E
        gbc.setState(0x814f, 0x36da, 0xc150, 0x3788, 0xf65, 0x9943, 0x0, 0x1);
        gbc.writeMem(0x814f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x36da);
        EXPECT(gbc.pc(), 0x8151);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x814f), 0xcb);
        EXPECT(gbc.readMem(0x8150), 0x4d);
        // CB 4D 013F
        gbc.setState(0x3e40, 0xc677, 0x4470, 0x82a0, 0xeecd, 0x3656, 0x1, 0x1);
        gbc.writeMem(0x3e40, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xc677);
        EXPECT(gbc.pc(), 0x3e42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0140
        gbc.setState(0xc82, 0xf759, 0xb380, 0x382f, 0x195c, 0xaa93, 0x0, 0x0);
        gbc.writeMem(0xc82, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf759);
        EXPECT(gbc.pc(), 0xc84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0141
        gbc.setState(0xb5a6, 0x5675, 0x2dc0, 0x85a8, 0x4907, 0x78b6, 0x1, 0x0);
        gbc.writeMem(0xb5a6, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x5675);
        EXPECT(gbc.pc(), 0xb5a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5a6), 0xcb);
        EXPECT(gbc.readMem(0xb5a7), 0x4d);
        // CB 4D 0142
        gbc.setState(0x6a6d, 0xccd4, 0xda80, 0x4e09, 0xc56, 0xc42a, 0x1, 0x1);
        gbc.writeMem(0x6a6d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xccd4);
        EXPECT(gbc.pc(), 0x6a6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0143
        gbc.setState(0x3264, 0xeb00, 0xb640, 0x741, 0xd116, 0x7468, 0x1, 0x1);
        gbc.writeMem(0x3264, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xeb00);
        EXPECT(gbc.pc(), 0x3266);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0144
        gbc.setState(0x3025, 0x2373, 0x3740, 0x2126, 0x58ad, 0x540b, 0x1, 0x0);
        gbc.writeMem(0x3025, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2373);
        EXPECT(gbc.pc(), 0x3027);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0146
        gbc.setState(0x9447, 0x75ed, 0xfd90, 0x1860, 0x3108, 0x56c3, 0x1, 0x1);
        gbc.writeMem(0x9447, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x75ed);
        EXPECT(gbc.pc(), 0x9449);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9447), 0xcb);
        EXPECT(gbc.readMem(0x9448), 0x4d);
        // CB 4D 0147
        gbc.setState(0xa2d7, 0x700b, 0x60b0, 0x13a3, 0x9591, 0x6d02, 0x1, 0x0);
        gbc.writeMem(0xa2d7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x700b);
        EXPECT(gbc.pc(), 0xa2d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2d7), 0xcb);
        EXPECT(gbc.readMem(0xa2d8), 0x4d);
        // CB 4D 0148
        gbc.setState(0x6ac9, 0x3954, 0x4c60, 0xe1a1, 0x7a03, 0xe2eb, 0x0, 0x0);
        gbc.writeMem(0x6ac9, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x3954);
        EXPECT(gbc.pc(), 0x6acb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0149
        gbc.setState(0x45ff, 0x7a20, 0x76e0, 0x9423, 0xaba0, 0xb2e4, 0x0, 0x0);
        gbc.writeMem(0x45ff, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7a20);
        EXPECT(gbc.pc(), 0x4601);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 014A
        gbc.setState(0x2d48, 0xe7cb, 0xcc90, 0xf7db, 0xfdd1, 0x92d8, 0x0, 0x1);
        gbc.writeMem(0x2d48, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe7cb);
        EXPECT(gbc.pc(), 0x2d4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 014D
        gbc.setState(0x8b78, 0x13a2, 0x9520, 0xc7d8, 0x7b20, 0x707d, 0x1, 0x1);
        gbc.writeMem(0x8b78, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x13a2);
        EXPECT(gbc.pc(), 0x8b7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b78), 0xcb);
        EXPECT(gbc.readMem(0x8b79), 0x4d);
        // CB 4D 014E
        gbc.setState(0xbb48, 0xdc49, 0x6800, 0x14bf, 0x93b, 0xefcf, 0x1, 0x0);
        gbc.writeMem(0xbb48, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xdc49);
        EXPECT(gbc.pc(), 0xbb4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb48), 0xcb);
        EXPECT(gbc.readMem(0xbb49), 0x4d);
        // CB 4D 0150
        gbc.setState(0xe69, 0x104f, 0x9cd0, 0x208a, 0xea5f, 0xb4cf, 0x0, 0x0);
        gbc.writeMem(0xe69, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x104f);
        EXPECT(gbc.pc(), 0xe6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0151
        gbc.setState(0x97ea, 0xdc0e, 0xd0a0, 0xcb65, 0x572c, 0xf116, 0x1, 0x1);
        gbc.writeMem(0x97ea, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xdc0e);
        EXPECT(gbc.pc(), 0x97ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97ea), 0xcb);
        EXPECT(gbc.readMem(0x97eb), 0x4d);
        // CB 4D 0152
        gbc.setState(0x8c3a, 0x1fa7, 0x47a0, 0x881b, 0x1f86, 0x175f, 0x0, 0x0);
        gbc.writeMem(0x8c3a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x1fa7);
        EXPECT(gbc.pc(), 0x8c3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c3a), 0xcb);
        EXPECT(gbc.readMem(0x8c3b), 0x4d);
        // CB 4D 0153
        gbc.setState(0x23c1, 0x25bf, 0x3050, 0xe6de, 0xa6c7, 0xb335, 0x0, 0x0);
        gbc.writeMem(0x23c1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x25bf);
        EXPECT(gbc.pc(), 0x23c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0154
        gbc.setState(0x4001, 0xb102, 0xcc60, 0x6eda, 0xc99, 0x46a8, 0x1, 0x0);
        gbc.writeMem(0x4001, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb102);
        EXPECT(gbc.pc(), 0x4003);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0155
        gbc.setState(0x3b0a, 0xb919, 0x92d0, 0xc0bb, 0x7260, 0xeea4, 0x1, 0x1);
        gbc.writeMem(0x3b0a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb919);
        EXPECT(gbc.pc(), 0x3b0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0156
        gbc.setState(0xb08f, 0xe37c, 0x3920, 0x2392, 0x470b, 0xb0e, 0x1, 0x0);
        gbc.writeMem(0xb08f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe37c);
        EXPECT(gbc.pc(), 0xb091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb08f), 0xcb);
        EXPECT(gbc.readMem(0xb090), 0x4d);
        // CB 4D 0157
        gbc.setState(0x8ece, 0xbdd6, 0x8350, 0x88a2, 0xc44f, 0x2544, 0x1, 0x1);
        gbc.writeMem(0x8ece, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xbdd6);
        EXPECT(gbc.pc(), 0x8ed0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ece), 0xcb);
        EXPECT(gbc.readMem(0x8ecf), 0x4d);
        // CB 4D 0158
        gbc.setState(0x8e3e, 0x46, 0xa30, 0x5e83, 0x1cbb, 0x1f79, 0x1, 0x1);
        gbc.writeMem(0x8e3e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x46);
        EXPECT(gbc.pc(), 0x8e40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e3e), 0xcb);
        EXPECT(gbc.readMem(0x8e3f), 0x4d);
        // CB 4D 0159
        gbc.setState(0x685e, 0xf920, 0x3240, 0xdd3e, 0x536b, 0xdfd4, 0x0, 0x0);
        gbc.writeMem(0x685e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf920);
        EXPECT(gbc.pc(), 0x6860);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 015A
        gbc.setState(0x1d0b, 0xa27f, 0xc640, 0xa7db, 0xb5f2, 0xfcb7, 0x1, 0x1);
        gbc.writeMem(0x1d0b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa27f);
        EXPECT(gbc.pc(), 0x1d0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 015B
        gbc.setState(0x5add, 0xfda3, 0xeba0, 0x74c4, 0x4186, 0x6c16, 0x0, 0x0);
        gbc.writeMem(0x5add, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xfda3);
        EXPECT(gbc.pc(), 0x5adf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 015C
        gbc.setState(0xac90, 0x85c4, 0x7350, 0x492d, 0xf018, 0x3e9a, 0x0, 0x0);
        gbc.writeMem(0xac90, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x85c4);
        EXPECT(gbc.pc(), 0xac92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac90), 0xcb);
        EXPECT(gbc.readMem(0xac91), 0x4d);
        // CB 4D 015D
        gbc.setState(0xa5d6, 0xde02, 0x51a0, 0x9439, 0x2d96, 0xfd91, 0x0, 0x1);
        gbc.writeMem(0xa5d6, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xde02);
        EXPECT(gbc.pc(), 0xa5d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5d6), 0xcb);
        EXPECT(gbc.readMem(0xa5d7), 0x4d);
        // CB 4D 015E
        gbc.setState(0x2d7a, 0xb695, 0x2380, 0xb3c8, 0x8a9f, 0x5f82, 0x0, 0x0);
        gbc.writeMem(0x2d7a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xb695);
        EXPECT(gbc.pc(), 0x2d7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 015F
        gbc.setState(0x7b8b, 0xfcc4, 0x5560, 0xfbdb, 0xe96c, 0x777d, 0x0, 0x1);
        gbc.writeMem(0x7b8b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xfcc4);
        EXPECT(gbc.pc(), 0x7b8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0160
        gbc.setState(0xc665, 0x74be, 0x5e0, 0x429d, 0xdfa6, 0x5cd3, 0x1, 0x0);
        gbc.writeMem(0xc665, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x74be);
        EXPECT(gbc.pc(), 0xc667);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc665), 0xcb);
        EXPECT(gbc.readMem(0xc666), 0x4d);
        // CB 4D 0161
        gbc.setState(0x8884, 0x1a70, 0x1390, 0x3103, 0x9fa1, 0xa14f, 0x1, 0x0);
        gbc.writeMem(0x8884, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x1a70);
        EXPECT(gbc.pc(), 0x8886);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8884), 0xcb);
        EXPECT(gbc.readMem(0x8885), 0x4d);
        // CB 4D 0162
        gbc.setState(0xb337, 0xee2f, 0x28e0, 0xdd04, 0x8971, 0x47e8, 0x1, 0x0);
        gbc.writeMem(0xb337, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xee2f);
        EXPECT(gbc.pc(), 0xb339);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb337), 0xcb);
        EXPECT(gbc.readMem(0xb338), 0x4d);
        // CB 4D 0163
        gbc.setState(0x386e, 0x58d, 0x3bf0, 0x997d, 0x1065, 0x5e40, 0x1, 0x0);
        gbc.writeMem(0x386e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x58d);
        EXPECT(gbc.pc(), 0x3870);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0164
        gbc.setState(0xe078, 0x5546, 0xdf70, 0x1334, 0x949d, 0x9896, 0x1, 0x0);
        gbc.writeMem(0xe078, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5546);
        EXPECT(gbc.pc(), 0xe07a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe078), 0xcb);
        EXPECT(gbc.readMem(0xe079), 0x4d);
        // CB 4D 0165
        gbc.setState(0xc9b, 0x362f, 0x2170, 0x71ad, 0x7cd4, 0xd2, 0x1, 0x1);
        gbc.writeMem(0xc9b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x362f);
        EXPECT(gbc.pc(), 0xc9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0166
        gbc.setState(0x922d, 0x8bd3, 0x3c90, 0x58f0, 0x87e2, 0xdc0d, 0x0, 0x0);
        gbc.writeMem(0x922d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8bd3);
        EXPECT(gbc.pc(), 0x922f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x922d), 0xcb);
        EXPECT(gbc.readMem(0x922e), 0x4d);
        // CB 4D 0167
        gbc.setState(0x9490, 0x4a8b, 0x55a0, 0x6dde, 0x71cd, 0xebf, 0x1, 0x1);
        gbc.writeMem(0x9490, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4a8b);
        EXPECT(gbc.pc(), 0x9492);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9490), 0xcb);
        EXPECT(gbc.readMem(0x9491), 0x4d);
        // CB 4D 0168
        gbc.setState(0x3fad, 0xc77d, 0xa540, 0x45b0, 0x3a42, 0x6333, 0x1, 0x0);
        gbc.writeMem(0x3fad, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc77d);
        EXPECT(gbc.pc(), 0x3faf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0169
        gbc.setState(0x1e1f, 0xa2d2, 0x610, 0x413c, 0xe4b4, 0xae1, 0x0, 0x1);
        gbc.writeMem(0x1e1f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa2d2);
        EXPECT(gbc.pc(), 0x1e21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 016A
        gbc.setState(0xc426, 0x39f7, 0x68c0, 0x1639, 0xabd8, 0xf1f0, 0x1, 0x0);
        gbc.writeMem(0xc426, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x39f7);
        EXPECT(gbc.pc(), 0xc428);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc426), 0xcb);
        EXPECT(gbc.readMem(0xc427), 0x4d);
        // CB 4D 016C
        gbc.setState(0x6030, 0x8b4c, 0xbb30, 0xf629, 0x2342, 0xe7c, 0x1, 0x1);
        gbc.writeMem(0x6030, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8b4c);
        EXPECT(gbc.pc(), 0x6032);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 016D
        gbc.setState(0x351e, 0x2cde, 0xc940, 0x59b7, 0x9c6a, 0x9d95, 0x1, 0x0);
        gbc.writeMem(0x351e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2cde);
        EXPECT(gbc.pc(), 0x3520);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 016F
        gbc.setState(0x5b13, 0xd102, 0x66b0, 0xa747, 0x5216, 0x1def, 0x0, 0x0);
        gbc.writeMem(0x5b13, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xd102);
        EXPECT(gbc.pc(), 0x5b15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0170
        gbc.setState(0x22c6, 0xd49f, 0x46f0, 0xdcef, 0x5b7d, 0x48c, 0x1, 0x1);
        gbc.writeMem(0x22c6, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xd49f);
        EXPECT(gbc.pc(), 0x22c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0171
        gbc.setState(0x4bde, 0x3452, 0x9150, 0x962f, 0x45f3, 0x6db0, 0x1, 0x1);
        gbc.writeMem(0x4bde, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x3452);
        EXPECT(gbc.pc(), 0x4be0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0172
        gbc.setState(0x645b, 0x6bab, 0x8530, 0x9688, 0xb1d2, 0xb6ed, 0x0, 0x0);
        gbc.writeMem(0x645b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6bab);
        EXPECT(gbc.pc(), 0x645d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0173
        gbc.setState(0x18e4, 0x2db2, 0x15c0, 0xd9f7, 0x2e4d, 0x70ac, 0x1, 0x0);
        gbc.writeMem(0x18e4, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x2db2);
        EXPECT(gbc.pc(), 0x18e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0174
        gbc.setState(0xd653, 0x3b7f, 0x4720, 0x13d5, 0x6432, 0x9771, 0x1, 0x1);
        gbc.writeMem(0xd653, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x3b7f);
        EXPECT(gbc.pc(), 0xd655);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd653), 0xcb);
        EXPECT(gbc.readMem(0xd654), 0x4d);
        // CB 4D 0175
        gbc.setState(0xa738, 0x9a4f, 0xc060, 0x6a5, 0xaba2, 0xf275, 0x0, 0x0);
        gbc.writeMem(0xa738, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9a4f);
        EXPECT(gbc.pc(), 0xa73a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa738), 0xcb);
        EXPECT(gbc.readMem(0xa739), 0x4d);
        // CB 4D 0176
        gbc.setState(0x9fae, 0xe6dc, 0x2530, 0xeb08, 0xdb70, 0xb834, 0x0, 0x0);
        gbc.writeMem(0x9fae, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe6dc);
        EXPECT(gbc.pc(), 0x9fb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fae), 0xcb);
        EXPECT(gbc.readMem(0x9faf), 0x4d);
        // CB 4D 0177
        gbc.setState(0xd245, 0xff45, 0x6410, 0x8516, 0xfb8e, 0x43ec, 0x0, 0x1);
        gbc.writeMem(0xd245, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xff45);
        EXPECT(gbc.pc(), 0xd247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd245), 0xcb);
        EXPECT(gbc.readMem(0xd246), 0x4d);
        // CB 4D 0178
        gbc.setState(0x6fb4, 0xca1b, 0x9c40, 0x347a, 0xcf3f, 0x5db3, 0x0, 0x0);
        gbc.writeMem(0x6fb4, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xca1b);
        EXPECT(gbc.pc(), 0x6fb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0179
        gbc.setState(0x18e5, 0xe3af, 0xf870, 0x1e71, 0xb9e7, 0x87af, 0x1, 0x0);
        gbc.writeMem(0x18e5, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xe3af);
        EXPECT(gbc.pc(), 0x18e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 017A
        gbc.setState(0x45ec, 0x50d, 0x67e0, 0xe630, 0xd8d6, 0x769d, 0x0, 0x0);
        gbc.writeMem(0x45ec, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x50d);
        EXPECT(gbc.pc(), 0x45ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 017B
        gbc.setState(0xdacc, 0x872f, 0x5c60, 0x8b41, 0xdd4c, 0xd356, 0x0, 0x0);
        gbc.writeMem(0xdacc, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x872f);
        EXPECT(gbc.pc(), 0xdace);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdacc), 0xcb);
        EXPECT(gbc.readMem(0xdacd), 0x4d);
        // CB 4D 017C
        gbc.setState(0xcd0f, 0x8676, 0x4ef0, 0x8957, 0xf75b, 0xe193, 0x1, 0x0);
        gbc.writeMem(0xcd0f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8676);
        EXPECT(gbc.pc(), 0xcd11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd0f), 0xcb);
        EXPECT(gbc.readMem(0xcd10), 0x4d);
        // CB 4D 017D
        gbc.setState(0xd649, 0x3f07, 0xb660, 0xd055, 0x2906, 0x7240, 0x1, 0x1);
        gbc.writeMem(0xd649, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x3f07);
        EXPECT(gbc.pc(), 0xd64b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd649), 0xcb);
        EXPECT(gbc.readMem(0xd64a), 0x4d);
        // CB 4D 017E
        gbc.setState(0xebb, 0x2f1, 0x9ad0, 0x6820, 0x3f4a, 0x6e89, 0x0, 0x1);
        gbc.writeMem(0xebb, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2f1);
        EXPECT(gbc.pc(), 0xebd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 017F
        gbc.setState(0x6fee, 0xc0a4, 0x1190, 0x3c40, 0x7b84, 0xe8c1, 0x0, 0x1);
        gbc.writeMem(0x6fee, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xc0a4);
        EXPECT(gbc.pc(), 0x6ff0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0180
        gbc.setState(0x6030, 0xf3ee, 0xe2a0, 0x2d54, 0x6bee, 0x54ea, 0x0, 0x0);
        gbc.writeMem(0x6030, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xf3ee);
        EXPECT(gbc.pc(), 0x6032);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0181
        gbc.setState(0x7230, 0xd5e5, 0x61f0, 0x4195, 0x86dc, 0x595e, 0x0, 0x1);
        gbc.writeMem(0x7230, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xd5e5);
        EXPECT(gbc.pc(), 0x7232);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0182
        gbc.setState(0x98c0, 0x5d0e, 0xbc60, 0xc55d, 0xe079, 0x5dc3, 0x0, 0x1);
        gbc.writeMem(0x98c0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x5d0e);
        EXPECT(gbc.pc(), 0x98c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98c0), 0xcb);
        EXPECT(gbc.readMem(0x98c1), 0x4d);
        // CB 4D 0183
        gbc.setState(0x8a5d, 0x9a12, 0xadb0, 0x4484, 0x7a92, 0x435e, 0x0, 0x1);
        gbc.writeMem(0x8a5d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x9a12);
        EXPECT(gbc.pc(), 0x8a5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a5d), 0xcb);
        EXPECT(gbc.readMem(0x8a5e), 0x4d);
        // CB 4D 0184
        gbc.setState(0x7fe0, 0x7ce3, 0x3c10, 0x526f, 0xa495, 0x5260, 0x0, 0x1);
        gbc.writeMem(0x7fe0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7ce3);
        EXPECT(gbc.pc(), 0x7fe2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0185
        gbc.setState(0xb3f2, 0xdc56, 0x5540, 0xd4fd, 0x62fc, 0xc2db, 0x1, 0x0);
        gbc.writeMem(0xb3f2, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xdc56);
        EXPECT(gbc.pc(), 0xb3f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3f2), 0xcb);
        EXPECT(gbc.readMem(0xb3f3), 0x4d);
        // CB 4D 0186
        gbc.setState(0x38c2, 0xa9, 0x4ca0, 0x1bd4, 0x5814, 0x9606, 0x1, 0x1);
        gbc.writeMem(0x38c2, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xa9);
        EXPECT(gbc.pc(), 0x38c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0187
        gbc.setState(0x3e05, 0x421d, 0x8180, 0x2a07, 0x4be8, 0xcf66, 0x1, 0x0);
        gbc.writeMem(0x3e05, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x421d);
        EXPECT(gbc.pc(), 0x3e07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0188
        gbc.setState(0x41df, 0xb9fa, 0x6a30, 0x712, 0xe583, 0xd39f, 0x1, 0x1);
        gbc.writeMem(0x41df, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb9fa);
        EXPECT(gbc.pc(), 0x41e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0189
        gbc.setState(0x2b49, 0xd569, 0xebe0, 0x4e60, 0x8e80, 0x2536, 0x1, 0x1);
        gbc.writeMem(0x2b49, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd569);
        EXPECT(gbc.pc(), 0x2b4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 018A
        gbc.setState(0xe03c, 0xac8, 0xf450, 0x8132, 0x4305, 0xa3b3, 0x0, 0x0);
        gbc.writeMem(0xe03c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xac8);
        EXPECT(gbc.pc(), 0xe03e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe03c), 0xcb);
        EXPECT(gbc.readMem(0xe03d), 0x4d);
        // CB 4D 018B
        gbc.setState(0x5229, 0xa749, 0xb090, 0xb41c, 0x2c78, 0xdab9, 0x1, 0x0);
        gbc.writeMem(0x5229, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa749);
        EXPECT(gbc.pc(), 0x522b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 018C
        gbc.setState(0x1852, 0x7ff2, 0x2e0, 0x9d61, 0x6cd0, 0x242f, 0x1, 0x0);
        gbc.writeMem(0x1852, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7ff2);
        EXPECT(gbc.pc(), 0x1854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 018D
        gbc.setState(0x7bfb, 0x368f, 0x95d0, 0xefb8, 0xdf93, 0xec13, 0x0, 0x1);
        gbc.writeMem(0x7bfb, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x368f);
        EXPECT(gbc.pc(), 0x7bfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 018E
        gbc.setState(0x6064, 0xc35, 0x8240, 0xa291, 0xf07f, 0xa691, 0x1, 0x0);
        gbc.writeMem(0x6064, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc35);
        EXPECT(gbc.pc(), 0x6066);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 018F
        gbc.setState(0xb242, 0x1fd, 0x1c20, 0x865d, 0x20e5, 0xc2f6, 0x0, 0x1);
        gbc.writeMem(0xb242, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x1fd);
        EXPECT(gbc.pc(), 0xb244);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb242), 0xcb);
        EXPECT(gbc.readMem(0xb243), 0x4d);
        // CB 4D 0190
        gbc.setState(0x8992, 0xc081, 0x8550, 0x409e, 0xf6e1, 0xfc1f, 0x1, 0x1);
        gbc.writeMem(0x8992, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc081);
        EXPECT(gbc.pc(), 0x8994);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8992), 0xcb);
        EXPECT(gbc.readMem(0x8993), 0x4d);
        // CB 4D 0191
        gbc.setState(0x7de2, 0xf226, 0xb590, 0xb49a, 0xffb7, 0x76fc, 0x1, 0x0);
        gbc.writeMem(0x7de2, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xf226);
        EXPECT(gbc.pc(), 0x7de4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0192
        gbc.setState(0x3765, 0xbcb2, 0xef40, 0xb0fd, 0xb957, 0xcb53, 0x0, 0x0);
        gbc.writeMem(0x3765, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xbcb2);
        EXPECT(gbc.pc(), 0x3767);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0193
        gbc.setState(0xe49e, 0x3100, 0x2b00, 0xb810, 0x7ffa, 0x5146, 0x0, 0x1);
        gbc.writeMem(0xe49e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x3100);
        EXPECT(gbc.pc(), 0xe4a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe49e), 0xcb);
        EXPECT(gbc.readMem(0xe49f), 0x4d);
        // CB 4D 0194
        gbc.setState(0x316d, 0x858a, 0xc010, 0xdd0c, 0xb71d, 0x39ba, 0x0, 0x1);
        gbc.writeMem(0x316d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x858a);
        EXPECT(gbc.pc(), 0x316f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0195
        gbc.setState(0x1d04, 0xc12b, 0xea50, 0xf23e, 0x20f2, 0x1a80, 0x1, 0x0);
        gbc.writeMem(0x1d04, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xc12b);
        EXPECT(gbc.pc(), 0x1d06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0196
        gbc.setState(0x79cb, 0x5a91, 0x63d0, 0x60f6, 0x94f3, 0xe896, 0x0, 0x0);
        gbc.writeMem(0x79cb, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5a91);
        EXPECT(gbc.pc(), 0x79cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0197
        gbc.setState(0xa4b, 0xf359, 0xd730, 0x9f1b, 0x1de5, 0x5870, 0x1, 0x0);
        gbc.writeMem(0xa4b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf359);
        EXPECT(gbc.pc(), 0xa4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0198
        gbc.setState(0x1bef, 0xd96, 0x4ba0, 0x62fb, 0x1db2, 0xcd77, 0x1, 0x1);
        gbc.writeMem(0x1bef, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd96);
        EXPECT(gbc.pc(), 0x1bf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0199
        gbc.setState(0x7108, 0xb359, 0x9ff0, 0x59b3, 0xbb15, 0x9710, 0x1, 0x1);
        gbc.writeMem(0x7108, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb359);
        EXPECT(gbc.pc(), 0x710a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 019B
        gbc.setState(0x26d4, 0x8863, 0xe130, 0x6460, 0x3429, 0xd378, 0x0, 0x0);
        gbc.writeMem(0x26d4, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8863);
        EXPECT(gbc.pc(), 0x26d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 019C
        gbc.setState(0x6f92, 0x2e3a, 0x8a00, 0x58a3, 0x87fc, 0x2d83, 0x1, 0x0);
        gbc.writeMem(0x6f92, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x2e3a);
        EXPECT(gbc.pc(), 0x6f94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 019D
        gbc.setState(0xc60c, 0x9b86, 0xd6e0, 0xf07b, 0xaba7, 0xff12, 0x0, 0x0);
        gbc.writeMem(0xc60c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9b86);
        EXPECT(gbc.pc(), 0xc60e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc60c), 0xcb);
        EXPECT(gbc.readMem(0xc60d), 0x4d);
        // CB 4D 019E
        gbc.setState(0xd90, 0x37ec, 0x37f0, 0x345, 0xa359, 0x3264, 0x1, 0x0);
        gbc.writeMem(0xd90, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x37ec);
        EXPECT(gbc.pc(), 0xd92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 019F
        gbc.setState(0xda72, 0xc428, 0x6000, 0x3737, 0x3902, 0xe404, 0x0, 0x0);
        gbc.writeMem(0xda72, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xc428);
        EXPECT(gbc.pc(), 0xda74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda72), 0xcb);
        EXPECT(gbc.readMem(0xda73), 0x4d);
        // CB 4D 01A0
        gbc.setState(0xac5e, 0x8be6, 0x8710, 0x8b7c, 0x4344, 0x1ba6, 0x1, 0x0);
        gbc.writeMem(0xac5e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x8be6);
        EXPECT(gbc.pc(), 0xac60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac5e), 0xcb);
        EXPECT(gbc.readMem(0xac5f), 0x4d);
        // CB 4D 01A1
        gbc.setState(0xa466, 0x8aa, 0xb260, 0xb57, 0x1fe6, 0xf2f5, 0x1, 0x0);
        gbc.writeMem(0xa466, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x8aa);
        EXPECT(gbc.pc(), 0xa468);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa466), 0xcb);
        EXPECT(gbc.readMem(0xa467), 0x4d);
        // CB 4D 01A2
        gbc.setState(0xeb41, 0x10ee, 0xa020, 0x3036, 0x40f7, 0x5278, 0x1, 0x0);
        gbc.writeMem(0xeb41, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x10ee);
        EXPECT(gbc.pc(), 0xeb43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb41), 0xcb);
        EXPECT(gbc.readMem(0xeb42), 0x4d);
        // CB 4D 01A3
        gbc.setState(0x123e, 0x8f5c, 0x4640, 0x27b1, 0x42aa, 0x79e5, 0x0, 0x0);
        gbc.writeMem(0x123e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x8f5c);
        EXPECT(gbc.pc(), 0x1240);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 01A4
        gbc.setState(0xe5e4, 0x982b, 0xdb70, 0x24fa, 0xc58e, 0x7358, 0x1, 0x0);
        gbc.writeMem(0xe5e4, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x982b);
        EXPECT(gbc.pc(), 0xe5e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5e4), 0xcb);
        EXPECT(gbc.readMem(0xe5e5), 0x4d);
        // CB 4D 01A5
        gbc.setState(0x3bdc, 0x50a9, 0x4660, 0xb6c5, 0x2c7f, 0xfddc, 0x0, 0x0);
        gbc.writeMem(0x3bdc, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x50a9);
        EXPECT(gbc.pc(), 0x3bde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 01A6
        gbc.setState(0x6275, 0x614b, 0x18f0, 0xc6bc, 0x8573, 0xa406, 0x1, 0x0);
        gbc.writeMem(0x6275, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x614b);
        EXPECT(gbc.pc(), 0x6277);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 01A7
        gbc.setState(0x8319, 0xd027, 0x92d0, 0xf53a, 0x2b9b, 0x83e6, 0x1, 0x1);
        gbc.writeMem(0x8319, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd027);
        EXPECT(gbc.pc(), 0x831b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8319), 0xcb);
        EXPECT(gbc.readMem(0x831a), 0x4d);
        // CB 4D 01A9
        gbc.setState(0x1d72, 0x2eb8, 0x59a0, 0xa5ab, 0xbc30, 0xe036, 0x1, 0x1);
        gbc.writeMem(0x1d72, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2eb8);
        EXPECT(gbc.pc(), 0x1d74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 01AA
        gbc.setState(0x9a95, 0x9f6a, 0x1c20, 0x374f, 0x4289, 0xe4f0, 0x1, 0x0);
        gbc.writeMem(0x9a95, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9f6a);
        EXPECT(gbc.pc(), 0x9a97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a95), 0xcb);
        EXPECT(gbc.readMem(0x9a96), 0x4d);
        // CB 4D 01AB
        gbc.setState(0xc171, 0x922d, 0x3930, 0xa1ca, 0xb19c, 0xc215, 0x0, 0x0);
        gbc.writeMem(0xc171, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x922d);
        EXPECT(gbc.pc(), 0xc173);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc171), 0xcb);
        EXPECT(gbc.readMem(0xc172), 0x4d);
        // CB 4D 01AC
        gbc.setState(0x6008, 0xc375, 0x7a10, 0x751d, 0x9685, 0x59b3, 0x1, 0x1);
        gbc.writeMem(0x6008, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xc375);
        EXPECT(gbc.pc(), 0x600a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 01AD
        gbc.setState(0x77ac, 0x26ff, 0x5570, 0x1809, 0xb7c4, 0x46ac, 0x1, 0x0);
        gbc.writeMem(0x77ac, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x26ff);
        EXPECT(gbc.pc(), 0x77ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 01AE
        gbc.setState(0xa97b, 0xda5b, 0xf590, 0xec5, 0x5789, 0xb6e3, 0x0, 0x0);
        gbc.writeMem(0xa97b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xda5b);
        EXPECT(gbc.pc(), 0xa97d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa97b), 0xcb);
        EXPECT(gbc.readMem(0xa97c), 0x4d);
        // CB 4D 01AF
        gbc.setState(0xe669, 0xb7dc, 0xd4e0, 0xd03c, 0x276c, 0x4361, 0x0, 0x0);
        gbc.writeMem(0xe669, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb7dc);
        EXPECT(gbc.pc(), 0xe66b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe669), 0xcb);
        EXPECT(gbc.readMem(0xe66a), 0x4d);
        // CB 4D 01B0
        gbc.setState(0x986d, 0xb0ac, 0x480, 0x1880, 0x589c, 0xc76b, 0x0, 0x1);
        gbc.writeMem(0x986d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xb0ac);
        EXPECT(gbc.pc(), 0x986f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x986d), 0xcb);
        EXPECT(gbc.readMem(0x986e), 0x4d);
        // CB 4D 01B2
        gbc.setState(0x93eb, 0xf8e8, 0xac60, 0xdaa0, 0xda02, 0xa3, 0x1, 0x1);
        gbc.writeMem(0x93eb, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xf8e8);
        EXPECT(gbc.pc(), 0x93ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93eb), 0xcb);
        EXPECT(gbc.readMem(0x93ec), 0x4d);
        // CB 4D 01B3
        gbc.setState(0x2780, 0x1b66, 0x8cb0, 0x1069, 0x673c, 0x6433, 0x1, 0x0);
        gbc.writeMem(0x2780, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1b66);
        EXPECT(gbc.pc(), 0x2782);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 01B4
        gbc.setState(0x2264, 0x2917, 0x9840, 0xe6cc, 0xddbe, 0xfd1e, 0x1, 0x0);
        gbc.writeMem(0x2264, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2917);
        EXPECT(gbc.pc(), 0x2266);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 01B5
        gbc.setState(0x4cf0, 0x67c5, 0xb730, 0x5234, 0xb7b0, 0x750e, 0x0, 0x0);
        gbc.writeMem(0x4cf0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x67c5);
        EXPECT(gbc.pc(), 0x4cf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 01B6
        gbc.setState(0x59f7, 0xcf7a, 0x3dc0, 0x5495, 0x63f, 0xddf, 0x0, 0x1);
        gbc.writeMem(0x59f7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xcf7a);
        EXPECT(gbc.pc(), 0x59f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 01B7
        gbc.setState(0xe9fb, 0xa13e, 0xe550, 0x5bbc, 0x9b4c, 0x3d84, 0x0, 0x1);
        gbc.writeMem(0xe9fb, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa13e);
        EXPECT(gbc.pc(), 0xe9fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9fb), 0xcb);
        EXPECT(gbc.readMem(0xe9fc), 0x4d);
        // CB 4D 01B8
        gbc.setState(0xda94, 0x6cb0, 0x6980, 0x4566, 0xaed9, 0x1281, 0x0, 0x0);
        gbc.writeMem(0xda94, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6cb0);
        EXPECT(gbc.pc(), 0xda96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda94), 0xcb);
        EXPECT(gbc.readMem(0xda95), 0x4d);
        // CB 4D 01B9
        gbc.setState(0x58da, 0x3e90, 0x1cf0, 0x58a6, 0x1caa, 0x24d2, 0x1, 0x0);
        gbc.writeMem(0x58da, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x3e90);
        EXPECT(gbc.pc(), 0x58dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 01BA
        gbc.setState(0x2e41, 0x262e, 0x7b40, 0xe380, 0x31f6, 0x73b4, 0x0, 0x0);
        gbc.writeMem(0x2e41, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x262e);
        EXPECT(gbc.pc(), 0x2e43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 01BB
        gbc.setState(0x5fd3, 0x5cd1, 0x8f30, 0x7545, 0xe82, 0x7623, 0x0, 0x1);
        gbc.writeMem(0x5fd3, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x5cd1);
        EXPECT(gbc.pc(), 0x5fd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 01BC
        gbc.setState(0x9f0b, 0xa989, 0x5f20, 0x306b, 0x2850, 0x303f, 0x1, 0x1);
        gbc.writeMem(0x9f0b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa989);
        EXPECT(gbc.pc(), 0x9f0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f0b), 0xcb);
        EXPECT(gbc.readMem(0x9f0c), 0x4d);
        // CB 4D 01BD
        gbc.setState(0x8460, 0x9735, 0x63d0, 0xd6fe, 0x904, 0x23d0, 0x0, 0x0);
        gbc.writeMem(0x8460, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9735);
        EXPECT(gbc.pc(), 0x8462);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8460), 0xcb);
        EXPECT(gbc.readMem(0x8461), 0x4d);
        // CB 4D 01BE
        gbc.setState(0xc828, 0x9e26, 0xeaf0, 0x3a8c, 0xca07, 0xb402, 0x1, 0x0);
        gbc.writeMem(0xc828, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x9e26);
        EXPECT(gbc.pc(), 0xc82a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc828), 0xcb);
        EXPECT(gbc.readMem(0xc829), 0x4d);
        // CB 4D 01BF
        gbc.setState(0xed3a, 0xe133, 0x9db0, 0xc756, 0x19f0, 0x9ad4, 0x1, 0x1);
        gbc.writeMem(0xed3a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe133);
        EXPECT(gbc.pc(), 0xed3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed3a), 0xcb);
        EXPECT(gbc.readMem(0xed3b), 0x4d);
        // CB 4D 01C0
        gbc.setState(0x4aa0, 0x2d57, 0x4260, 0xf7b1, 0x62ca, 0xe59, 0x0, 0x0);
        gbc.writeMem(0x4aa0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x2d57);
        EXPECT(gbc.pc(), 0x4aa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 01C1
        gbc.setState(0xe36e, 0x79b6, 0xe930, 0xd337, 0xa743, 0x2b8d, 0x0, 0x0);
        gbc.writeMem(0xe36e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x79b6);
        EXPECT(gbc.pc(), 0xe370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe36e), 0xcb);
        EXPECT(gbc.readMem(0xe36f), 0x4d);
        // CB 4D 01C2
        gbc.setState(0x30f6, 0x71c, 0x7a80, 0x878b, 0x42cb, 0x8dca, 0x0, 0x1);
        gbc.writeMem(0x30f6, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x71c);
        EXPECT(gbc.pc(), 0x30f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 01C3
        gbc.setState(0xeb68, 0x601, 0x6190, 0x37c, 0xee80, 0x7589, 0x1, 0x1);
        gbc.writeMem(0xeb68, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x601);
        EXPECT(gbc.pc(), 0xeb6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb68), 0xcb);
        EXPECT(gbc.readMem(0xeb69), 0x4d);
        // CB 4D 01C4
        gbc.setState(0xdb50, 0x3d8a, 0x78a0, 0x8cf2, 0xb5f4, 0xdec0, 0x1, 0x1);
        gbc.writeMem(0xdb50, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3d8a);
        EXPECT(gbc.pc(), 0xdb52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb50), 0xcb);
        EXPECT(gbc.readMem(0xdb51), 0x4d);
        // CB 4D 01C5
        gbc.setState(0x8109, 0xc2ea, 0xffd0, 0xfae6, 0x9c9c, 0xbfd0, 0x1, 0x1);
        gbc.writeMem(0x8109, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xc2ea);
        EXPECT(gbc.pc(), 0x810b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8109), 0xcb);
        EXPECT(gbc.readMem(0x810a), 0x4d);
        // CB 4D 01C6
        gbc.setState(0xe9b7, 0x5071, 0x4500, 0xa4ad, 0x2626, 0x8a69, 0x1, 0x1);
        gbc.writeMem(0xe9b7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x5071);
        EXPECT(gbc.pc(), 0xe9b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9b7), 0xcb);
        EXPECT(gbc.readMem(0xe9b8), 0x4d);
        // CB 4D 01C7
        gbc.setState(0x7c, 0xfaa3, 0xca0, 0x6712, 0x7a70, 0x8424, 0x0, 0x1);
        gbc.writeMem(0x7c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xfaa3);
        EXPECT(gbc.pc(), 0x7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 01C8
        gbc.setState(0x9d54, 0x1c0b, 0x14e0, 0x69eb, 0xc722, 0xedb6, 0x0, 0x1);
        gbc.writeMem(0x9d54, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1c0b);
        EXPECT(gbc.pc(), 0x9d56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d54), 0xcb);
        EXPECT(gbc.readMem(0x9d55), 0x4d);
        // CB 4D 01CA
        gbc.setState(0x5e26, 0x3365, 0x63a0, 0x97ca, 0x5d0b, 0x581c, 0x0, 0x1);
        gbc.writeMem(0x5e26, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x3365);
        EXPECT(gbc.pc(), 0x5e28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 01CB
        gbc.setState(0x8b17, 0x5dae, 0xc130, 0x6c0c, 0x154c, 0x43db, 0x0, 0x1);
        gbc.writeMem(0x8b17, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5dae);
        EXPECT(gbc.pc(), 0x8b19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b17), 0xcb);
        EXPECT(gbc.readMem(0x8b18), 0x4d);
        // CB 4D 01CC
        gbc.setState(0xe813, 0x1c55, 0x2470, 0xd0b, 0x13b0, 0xc8d8, 0x1, 0x0);
        gbc.writeMem(0xe813, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1c55);
        EXPECT(gbc.pc(), 0xe815);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe813), 0xcb);
        EXPECT(gbc.readMem(0xe814), 0x4d);
        // CB 4D 01CD
        gbc.setState(0xe5f0, 0x1ca5, 0xcd40, 0x848a, 0xb054, 0xb2a7, 0x0, 0x0);
        gbc.writeMem(0xe5f0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x1ca5);
        EXPECT(gbc.pc(), 0xe5f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5f0), 0xcb);
        EXPECT(gbc.readMem(0xe5f1), 0x4d);
        // CB 4D 01CE
        gbc.setState(0x982f, 0xa9b1, 0x1f60, 0xbb9d, 0xa318, 0x69df, 0x1, 0x0);
        gbc.writeMem(0x982f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xa9b1);
        EXPECT(gbc.pc(), 0x9831);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x982f), 0xcb);
        EXPECT(gbc.readMem(0x9830), 0x4d);
        // CB 4D 01CF
        gbc.setState(0x7b79, 0x6898, 0xcd10, 0x8c99, 0x4452, 0x9f90, 0x0, 0x0);
        gbc.writeMem(0x7b79, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x6898);
        EXPECT(gbc.pc(), 0x7b7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 01D0
        gbc.setState(0xcca, 0x3966, 0x1cb0, 0x42b1, 0x946a, 0xf5f0, 0x0, 0x0);
        gbc.writeMem(0xcca, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x3966);
        EXPECT(gbc.pc(), 0xccc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 01D2
        gbc.setState(0x2310, 0xa748, 0xffd0, 0xd785, 0xde29, 0xa2e3, 0x1, 0x0);
        gbc.writeMem(0x2310, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa748);
        EXPECT(gbc.pc(), 0x2312);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 01D3
        gbc.setState(0x563d, 0xd7e4, 0x6480, 0x40c4, 0xe319, 0x8750, 0x0, 0x0);
        gbc.writeMem(0x563d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xd7e4);
        EXPECT(gbc.pc(), 0x563f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 01D5
        gbc.setState(0xe862, 0xc1ac, 0xd030, 0x128d, 0xb6f1, 0xe134, 0x1, 0x0);
        gbc.writeMem(0xe862, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc1ac);
        EXPECT(gbc.pc(), 0xe864);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe862), 0xcb);
        EXPECT(gbc.readMem(0xe863), 0x4d);
        // CB 4D 01D6
        gbc.setState(0xb71a, 0xd63b, 0xc9c0, 0x9309, 0xae50, 0xa155, 0x0, 0x0);
        gbc.writeMem(0xb71a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd63b);
        EXPECT(gbc.pc(), 0xb71c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb71a), 0xcb);
        EXPECT(gbc.readMem(0xb71b), 0x4d);
        // CB 4D 01D7
        gbc.setState(0x660d, 0xbc0c, 0xcfe0, 0xe4ee, 0xf79e, 0x22fd, 0x0, 0x0);
        gbc.writeMem(0x660d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xbc0c);
        EXPECT(gbc.pc(), 0x660f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 01D8
        gbc.setState(0x91d8, 0x6165, 0x1360, 0xc544, 0xd3e8, 0x396, 0x1, 0x1);
        gbc.writeMem(0x91d8, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x6165);
        EXPECT(gbc.pc(), 0x91da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91d8), 0xcb);
        EXPECT(gbc.readMem(0x91d9), 0x4d);
        // CB 4D 01D9
        gbc.setState(0xa238, 0xdc10, 0x8680, 0x22d6, 0xf5b6, 0xb7b0, 0x1, 0x0);
        gbc.writeMem(0xa238, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xdc10);
        EXPECT(gbc.pc(), 0xa23a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa238), 0xcb);
        EXPECT(gbc.readMem(0xa239), 0x4d);
        // CB 4D 01DA
        gbc.setState(0x1e0e, 0xcc7b, 0x5c60, 0x3bf1, 0x7cb9, 0x1f57, 0x1, 0x1);
        gbc.writeMem(0x1e0e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xcc7b);
        EXPECT(gbc.pc(), 0x1e10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 01DB
        gbc.setState(0x398, 0xdb88, 0xe7a0, 0xa503, 0xa5d1, 0xdc67, 0x1, 0x1);
        gbc.writeMem(0x398, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xdb88);
        EXPECT(gbc.pc(), 0x39a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 01DC
        gbc.setState(0x861f, 0x184e, 0xffe0, 0x8ff5, 0x4169, 0xff47, 0x0, 0x1);
        gbc.writeMem(0x861f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x184e);
        EXPECT(gbc.pc(), 0x8621);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x861f), 0xcb);
        EXPECT(gbc.readMem(0x8620), 0x4d);
        // CB 4D 01DE
        gbc.setState(0x7890, 0x1140, 0x330, 0x6a5f, 0xa8a6, 0x79e5, 0x1, 0x1);
        gbc.writeMem(0x7890, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x1140);
        EXPECT(gbc.pc(), 0x7892);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 01DF
        gbc.setState(0x6c9e, 0x1c76, 0x5bb0, 0x1ff7, 0xab10, 0xcad8, 0x0, 0x0);
        gbc.writeMem(0x6c9e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1c76);
        EXPECT(gbc.pc(), 0x6ca0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 01E0
        gbc.setState(0x9e6e, 0xe593, 0x5520, 0xeec6, 0xb7df, 0x2558, 0x1, 0x0);
        gbc.writeMem(0x9e6e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xe593);
        EXPECT(gbc.pc(), 0x9e70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e6e), 0xcb);
        EXPECT(gbc.readMem(0x9e6f), 0x4d);
        // CB 4D 01E1
        gbc.setState(0x9986, 0x71a2, 0xee50, 0x142, 0x633f, 0x1f37, 0x1, 0x0);
        gbc.writeMem(0x9986, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x71a2);
        EXPECT(gbc.pc(), 0x9988);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9986), 0xcb);
        EXPECT(gbc.readMem(0x9987), 0x4d);
        // CB 4D 01E2
        gbc.setState(0xac35, 0xe13d, 0x5b60, 0x304d, 0xd99, 0x217c, 0x1, 0x0);
        gbc.writeMem(0xac35, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe13d);
        EXPECT(gbc.pc(), 0xac37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac35), 0xcb);
        EXPECT(gbc.readMem(0xac36), 0x4d);
        // CB 4D 01E3
        gbc.setState(0xcdb, 0xc5cc, 0x8b40, 0xeae, 0x6e52, 0x706c, 0x1, 0x1);
        gbc.writeMem(0xcdb, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xc5cc);
        EXPECT(gbc.pc(), 0xcdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 01E5
        gbc.setState(0x4015, 0x416b, 0x8010, 0x8bba, 0xab2, 0x18d6, 0x1, 0x1);
        gbc.writeMem(0x4015, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x416b);
        EXPECT(gbc.pc(), 0x4017);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 01E7
        gbc.setState(0x1424, 0x52d4, 0x3d70, 0xf800, 0x93d3, 0xbefc, 0x0, 0x0);
        gbc.writeMem(0x1424, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x52d4);
        EXPECT(gbc.pc(), 0x1426);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 01E8
        gbc.setState(0x9e9d, 0xe8c0, 0xe390, 0x9240, 0xffa8, 0x1557, 0x1, 0x1);
        gbc.writeMem(0x9e9d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe8c0);
        EXPECT(gbc.pc(), 0x9e9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e9d), 0xcb);
        EXPECT(gbc.readMem(0x9e9e), 0x4d);
        // CB 4D 01E9
        gbc.setState(0xe717, 0x4034, 0x8d30, 0xded6, 0xdb9b, 0x52f9, 0x1, 0x0);
        gbc.writeMem(0xe717, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x4034);
        EXPECT(gbc.pc(), 0xe719);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe717), 0xcb);
        EXPECT(gbc.readMem(0xe718), 0x4d);
        // CB 4D 01EA
        gbc.setState(0x8be, 0xb1f1, 0xa6c0, 0x8bf7, 0xebfe, 0xa6e6, 0x1, 0x1);
        gbc.writeMem(0x8be, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb1f1);
        EXPECT(gbc.pc(), 0x8c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 01EB
        gbc.setState(0x1397, 0xc61b, 0x6c10, 0x63d3, 0x3eb0, 0x5f84, 0x1, 0x0);
        gbc.writeMem(0x1397, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc61b);
        EXPECT(gbc.pc(), 0x1399);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 01EC
        gbc.setState(0xbec9, 0x1caa, 0x5300, 0xd506, 0xe63f, 0x2670, 0x1, 0x1);
        gbc.writeMem(0xbec9, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x1caa);
        EXPECT(gbc.pc(), 0xbecb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbec9), 0xcb);
        EXPECT(gbc.readMem(0xbeca), 0x4d);
        // CB 4D 01ED
        gbc.setState(0x66cf, 0x7dc4, 0x8810, 0x1369, 0xed2d, 0xbbb8, 0x0, 0x0);
        gbc.writeMem(0x66cf, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7dc4);
        EXPECT(gbc.pc(), 0x66d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 01EE
        gbc.setState(0xdb2c, 0x7e67, 0x2b60, 0xce0c, 0x2325, 0xdd16, 0x0, 0x1);
        gbc.writeMem(0xdb2c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x7e67);
        EXPECT(gbc.pc(), 0xdb2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb2c), 0xcb);
        EXPECT(gbc.readMem(0xdb2d), 0x4d);
        // CB 4D 01EF
        gbc.setState(0x1396, 0xf275, 0xb250, 0x11c6, 0x3515, 0xedee, 0x1, 0x1);
        gbc.writeMem(0x1396, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xf275);
        EXPECT(gbc.pc(), 0x1398);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 01F1
        gbc.setState(0xba1e, 0xe1b, 0x7f40, 0xbfc0, 0xdd5c, 0xb193, 0x1, 0x0);
        gbc.writeMem(0xba1e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe1b);
        EXPECT(gbc.pc(), 0xba20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba1e), 0xcb);
        EXPECT(gbc.readMem(0xba1f), 0x4d);
        // CB 4D 01F2
        gbc.setState(0x2582, 0x806, 0xb390, 0xe164, 0x9e61, 0x1997, 0x1, 0x1);
        gbc.writeMem(0x2582, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x806);
        EXPECT(gbc.pc(), 0x2584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 01F4
        gbc.setState(0xbbcb, 0x93b2, 0x45d0, 0xaa67, 0xfd43, 0xd869, 0x0, 0x0);
        gbc.writeMem(0xbbcb, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x93b2);
        EXPECT(gbc.pc(), 0xbbcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbcb), 0xcb);
        EXPECT(gbc.readMem(0xbbcc), 0x4d);
        // CB 4D 01F5
        gbc.setState(0x7e49, 0x83a3, 0x3b10, 0xe20f, 0xcd5e, 0x1a53, 0x1, 0x0);
        gbc.writeMem(0x7e49, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x83a3);
        EXPECT(gbc.pc(), 0x7e4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 01F6
        gbc.setState(0x8518, 0x36a, 0x4e00, 0x122a, 0x6138, 0xad8, 0x0, 0x0);
        gbc.writeMem(0x8518, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x36a);
        EXPECT(gbc.pc(), 0x851a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8518), 0xcb);
        EXPECT(gbc.readMem(0x8519), 0x4d);
        // CB 4D 01F7
        gbc.setState(0xc00b, 0x34f6, 0x7f30, 0x61ff, 0xfbef, 0x46fa, 0x0, 0x1);
        gbc.writeMem(0xc00b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x34f6);
        EXPECT(gbc.pc(), 0xc00d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc00b), 0xcb);
        EXPECT(gbc.readMem(0xc00c), 0x4d);
        // CB 4D 01F8
        gbc.setState(0xd97d, 0xfe11, 0xde0, 0xa513, 0xf607, 0xeed6, 0x0, 0x0);
        gbc.writeMem(0xd97d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xfe11);
        EXPECT(gbc.pc(), 0xd97f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd97d), 0xcb);
        EXPECT(gbc.readMem(0xd97e), 0x4d);
        // CB 4D 01F9
        gbc.setState(0x302c, 0x8109, 0xe630, 0x683a, 0xe29a, 0xfbed, 0x0, 0x0);
        gbc.writeMem(0x302c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x8109);
        EXPECT(gbc.pc(), 0x302e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 01FA
        gbc.setState(0x421f, 0x4702, 0x7870, 0x6d62, 0xe54f, 0x1124, 0x0, 0x1);
        gbc.writeMem(0x421f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4702);
        EXPECT(gbc.pc(), 0x4221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 01FB
        gbc.setState(0x5916, 0x106e, 0xe230, 0x38bf, 0x5f06, 0x22ce, 0x1, 0x0);
        gbc.writeMem(0x5916, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x106e);
        EXPECT(gbc.pc(), 0x5918);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 01FC
        gbc.setState(0x64f2, 0xa990, 0x3540, 0x85c6, 0xe5b0, 0xa3af, 0x0, 0x1);
        gbc.writeMem(0x64f2, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa990);
        EXPECT(gbc.pc(), 0x64f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 01FD
        gbc.setState(0xeb8b, 0x7c7c, 0x6770, 0x76f1, 0x78b4, 0x9d78, 0x0, 0x0);
        gbc.writeMem(0xeb8b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7c7c);
        EXPECT(gbc.pc(), 0xeb8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb8b), 0xcb);
        EXPECT(gbc.readMem(0xeb8c), 0x4d);
        // CB 4D 01FE
        gbc.setState(0x8c4d, 0x68b7, 0xdc50, 0x6357, 0xffe8, 0xdf3b, 0x1, 0x1);
        gbc.writeMem(0x8c4d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x68b7);
        EXPECT(gbc.pc(), 0x8c4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c4d), 0xcb);
        EXPECT(gbc.readMem(0x8c4e), 0x4d);
        // CB 4D 01FF
        gbc.setState(0xec73, 0x6c8d, 0x6990, 0xb221, 0xd415, 0xc488, 0x0, 0x0);
        gbc.writeMem(0xec73, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x6c8d);
        EXPECT(gbc.pc(), 0xec75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec73), 0xcb);
        EXPECT(gbc.readMem(0xec74), 0x4d);
        // CB 4D 0200
        gbc.setState(0xf98, 0x39e, 0x8270, 0xece3, 0xb289, 0x6b21, 0x0, 0x0);
        gbc.writeMem(0xf98, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x39e);
        EXPECT(gbc.pc(), 0xf9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0201
        gbc.setState(0xa959, 0xd459, 0xc670, 0xc777, 0x4826, 0xe44b, 0x1, 0x1);
        gbc.writeMem(0xa959, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xd459);
        EXPECT(gbc.pc(), 0xa95b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa959), 0xcb);
        EXPECT(gbc.readMem(0xa95a), 0x4d);
        // CB 4D 0202
        gbc.setState(0x8294, 0x60d4, 0x5c30, 0x5b4d, 0xb9c2, 0x29f9, 0x0, 0x1);
        gbc.writeMem(0x8294, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x60d4);
        EXPECT(gbc.pc(), 0x8296);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8294), 0xcb);
        EXPECT(gbc.readMem(0x8295), 0x4d);
        // CB 4D 0203
        gbc.setState(0x4d20, 0x1197, 0xf3a0, 0x80f1, 0x55b9, 0x41bd, 0x1, 0x1);
        gbc.writeMem(0x4d20, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1197);
        EXPECT(gbc.pc(), 0x4d22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0205
        gbc.setState(0x78fe, 0x3b10, 0xc550, 0xc1fb, 0xd753, 0x6f5a, 0x1, 0x0);
        gbc.writeMem(0x78fe, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3b10);
        EXPECT(gbc.pc(), 0x7900);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0206
        gbc.setState(0x4cfb, 0x34b7, 0xf0e0, 0x652b, 0x5e2d, 0x8573, 0x0, 0x0);
        gbc.writeMem(0x4cfb, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x34b7);
        EXPECT(gbc.pc(), 0x4cfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0207
        gbc.setState(0xbb65, 0xcbcf, 0xe060, 0x66f7, 0xd4ec, 0xffd2, 0x1, 0x1);
        gbc.writeMem(0xbb65, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xcbcf);
        EXPECT(gbc.pc(), 0xbb67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb65), 0xcb);
        EXPECT(gbc.readMem(0xbb66), 0x4d);
        // CB 4D 0208
        gbc.setState(0xa603, 0x2215, 0xe060, 0x55a0, 0x3f43, 0x85d8, 0x1, 0x1);
        gbc.writeMem(0xa603, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2215);
        EXPECT(gbc.pc(), 0xa605);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa603), 0xcb);
        EXPECT(gbc.readMem(0xa604), 0x4d);
        // CB 4D 0209
        gbc.setState(0xe2bf, 0xea7, 0x86e0, 0x3dea, 0x175e, 0x673f, 0x0, 0x0);
        gbc.writeMem(0xe2bf, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xea7);
        EXPECT(gbc.pc(), 0xe2c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2bf), 0xcb);
        EXPECT(gbc.readMem(0xe2c0), 0x4d);
        // CB 4D 020A
        gbc.setState(0xe270, 0xb03a, 0x7830, 0x9c5, 0xa2, 0x1bfd, 0x1, 0x1);
        gbc.writeMem(0xe270, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb03a);
        EXPECT(gbc.pc(), 0xe272);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe270), 0xcb);
        EXPECT(gbc.readMem(0xe271), 0x4d);
        // CB 4D 020B
        gbc.setState(0x2ff9, 0x6e0a, 0x650, 0x105e, 0x155d, 0x8fff, 0x0, 0x0);
        gbc.writeMem(0x2ff9, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x6e0a);
        EXPECT(gbc.pc(), 0x2ffb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 020C
        gbc.setState(0x506b, 0xc9d, 0x3cc0, 0xb3b2, 0x6602, 0xd544, 0x1, 0x1);
        gbc.writeMem(0x506b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xc9d);
        EXPECT(gbc.pc(), 0x506d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 020D
        gbc.setState(0x4f67, 0xabb3, 0xd400, 0xe110, 0xb3e3, 0x1c18, 0x1, 0x0);
        gbc.writeMem(0x4f67, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xabb3);
        EXPECT(gbc.pc(), 0x4f69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 020F
        gbc.setState(0x5fc9, 0x1d8d, 0xe670, 0x54f, 0x7f6d, 0xab3f, 0x1, 0x1);
        gbc.writeMem(0x5fc9, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x1d8d);
        EXPECT(gbc.pc(), 0x5fcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0210
        gbc.setState(0x329d, 0x2367, 0x2fa0, 0x7d0e, 0x282e, 0xfa3a, 0x1, 0x1);
        gbc.writeMem(0x329d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x2367);
        EXPECT(gbc.pc(), 0x329f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0211
        gbc.setState(0xb76f, 0x36e4, 0x3690, 0xd807, 0x9497, 0xbc77, 0x1, 0x0);
        gbc.writeMem(0xb76f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x36e4);
        EXPECT(gbc.pc(), 0xb771);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb76f), 0xcb);
        EXPECT(gbc.readMem(0xb770), 0x4d);
        // CB 4D 0212
        gbc.setState(0xcc94, 0xde7d, 0xd0d0, 0xab6a, 0x4391, 0x90f4, 0x1, 0x1);
        gbc.writeMem(0xcc94, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xde7d);
        EXPECT(gbc.pc(), 0xcc96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc94), 0xcb);
        EXPECT(gbc.readMem(0xcc95), 0x4d);
        // CB 4D 0213
        gbc.setState(0xb49, 0x5c3d, 0xa60, 0xb1d6, 0x7a76, 0x2cb7, 0x0, 0x0);
        gbc.writeMem(0xb49, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5c3d);
        EXPECT(gbc.pc(), 0xb4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0215
        gbc.setState(0x2194, 0x1a29, 0x8c40, 0x7558, 0x3b8, 0xf230, 0x1, 0x0);
        gbc.writeMem(0x2194, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x1a29);
        EXPECT(gbc.pc(), 0x2196);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0216
        gbc.setState(0x674d, 0x3203, 0xefa0, 0x9e04, 0xe4fc, 0x41a3, 0x0, 0x0);
        gbc.writeMem(0x674d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3203);
        EXPECT(gbc.pc(), 0x674f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0217
        gbc.setState(0x116d, 0xbb0c, 0xbb80, 0xbbe2, 0x911a, 0x7223, 0x0, 0x1);
        gbc.writeMem(0x116d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xbb0c);
        EXPECT(gbc.pc(), 0x116f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 021A
        gbc.setState(0x7116, 0x1fe1, 0x8ab0, 0xd312, 0x5606, 0xcdb1, 0x1, 0x0);
        gbc.writeMem(0x7116, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x1fe1);
        EXPECT(gbc.pc(), 0x7118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 021B
        gbc.setState(0xaba7, 0x4dd5, 0x6ab0, 0xa418, 0xa06d, 0x955, 0x0, 0x1);
        gbc.writeMem(0xaba7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4dd5);
        EXPECT(gbc.pc(), 0xaba9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaba7), 0xcb);
        EXPECT(gbc.readMem(0xaba8), 0x4d);
        // CB 4D 021C
        gbc.setState(0xc0e9, 0x26c9, 0x1730, 0x5b37, 0x267c, 0xa56e, 0x1, 0x0);
        gbc.writeMem(0xc0e9, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x26c9);
        EXPECT(gbc.pc(), 0xc0eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0e9), 0xcb);
        EXPECT(gbc.readMem(0xc0ea), 0x4d);
        // CB 4D 021D
        gbc.setState(0xd2c, 0x7c30, 0xaeb0, 0xaa54, 0x68a3, 0x3a19, 0x0, 0x1);
        gbc.writeMem(0xd2c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x7c30);
        EXPECT(gbc.pc(), 0xd2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 021F
        gbc.setState(0x48a5, 0x9354, 0xd60, 0x9c7d, 0x6b5f, 0x1faf, 0x0, 0x0);
        gbc.writeMem(0x48a5, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9354);
        EXPECT(gbc.pc(), 0x48a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0220
        gbc.setState(0x7831, 0x1a31, 0x670, 0xdcf, 0x527e, 0xfffd, 0x0, 0x0);
        gbc.writeMem(0x7831, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1a31);
        EXPECT(gbc.pc(), 0x7833);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0221
        gbc.setState(0x510a, 0x460f, 0x3230, 0x9e84, 0xadd4, 0x49cc, 0x1, 0x1);
        gbc.writeMem(0x510a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x460f);
        EXPECT(gbc.pc(), 0x510c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0222
        gbc.setState(0xb5b1, 0x5266, 0xd5e0, 0xbb59, 0x4f4d, 0xc370, 0x1, 0x0);
        gbc.writeMem(0xb5b1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5266);
        EXPECT(gbc.pc(), 0xb5b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5b1), 0xcb);
        EXPECT(gbc.readMem(0xb5b2), 0x4d);
        // CB 4D 0223
        gbc.setState(0x615f, 0x5c09, 0x90a0, 0x497e, 0x544, 0xa8b3, 0x0, 0x0);
        gbc.writeMem(0x615f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5c09);
        EXPECT(gbc.pc(), 0x6161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0224
        gbc.setState(0x171a, 0xed55, 0x7f40, 0xbd8c, 0x7e99, 0x6cd9, 0x0, 0x1);
        gbc.writeMem(0x171a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xed55);
        EXPECT(gbc.pc(), 0x171c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0225
        gbc.setState(0x9056, 0x2dbe, 0x5940, 0xb5c5, 0x9939, 0x7c39, 0x0, 0x0);
        gbc.writeMem(0x9056, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2dbe);
        EXPECT(gbc.pc(), 0x9058);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9056), 0xcb);
        EXPECT(gbc.readMem(0x9057), 0x4d);
        // CB 4D 0226
        gbc.setState(0xa304, 0x3173, 0x4220, 0x386c, 0x8c3a, 0x4b41, 0x0, 0x1);
        gbc.writeMem(0xa304, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x3173);
        EXPECT(gbc.pc(), 0xa306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa304), 0xcb);
        EXPECT(gbc.readMem(0xa305), 0x4d);
        // CB 4D 0227
        gbc.setState(0x3e9b, 0xa42c, 0xad0, 0xd6cf, 0xae78, 0xfc7a, 0x0, 0x1);
        gbc.writeMem(0x3e9b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa42c);
        EXPECT(gbc.pc(), 0x3e9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0228
        gbc.setState(0x7cb6, 0x4d4d, 0xb800, 0xd7e2, 0xadd, 0x315d, 0x1, 0x1);
        gbc.writeMem(0x7cb6, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x4d4d);
        EXPECT(gbc.pc(), 0x7cb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0229
        gbc.setState(0xade8, 0xf523, 0x1d0, 0x1bf, 0xd78a, 0x126c, 0x1, 0x0);
        gbc.writeMem(0xade8, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xf523);
        EXPECT(gbc.pc(), 0xadea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xade8), 0xcb);
        EXPECT(gbc.readMem(0xade9), 0x4d);
        // CB 4D 022A
        gbc.setState(0xe91, 0x49e2, 0xecb0, 0x3e, 0xb223, 0x2bfd, 0x1, 0x0);
        gbc.writeMem(0xe91, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x49e2);
        EXPECT(gbc.pc(), 0xe93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 022B
        gbc.setState(0x6dd4, 0x4bd6, 0xd930, 0x3d71, 0xd5f6, 0xc028, 0x1, 0x0);
        gbc.writeMem(0x6dd4, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x4bd6);
        EXPECT(gbc.pc(), 0x6dd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 022C
        gbc.setState(0x4906, 0xd738, 0x5070, 0x59a0, 0xffa0, 0xcd9e, 0x1, 0x0);
        gbc.writeMem(0x4906, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd738);
        EXPECT(gbc.pc(), 0x4908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 022D
        gbc.setState(0x56, 0x1858, 0xbb70, 0x6a72, 0xe6b6, 0x449b, 0x1, 0x1);
        gbc.writeMem(0x56, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1858);
        EXPECT(gbc.pc(), 0x58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 022E
        gbc.setState(0x25fe, 0xae5c, 0x70c0, 0xf59a, 0x594f, 0x9348, 0x0, 0x0);
        gbc.writeMem(0x25fe, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xae5c);
        EXPECT(gbc.pc(), 0x2600);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 022F
        gbc.setState(0x63f6, 0x634a, 0x46c0, 0x444b, 0x53db, 0xb528, 0x0, 0x0);
        gbc.writeMem(0x63f6, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x634a);
        EXPECT(gbc.pc(), 0x63f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0230
        gbc.setState(0x3c1e, 0x202c, 0xa2c0, 0x6da3, 0x5270, 0x4d30, 0x0, 0x0);
        gbc.writeMem(0x3c1e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x202c);
        EXPECT(gbc.pc(), 0x3c20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0231
        gbc.setState(0x6dd5, 0xbc1a, 0x1000, 0x514c, 0xb010, 0x4dca, 0x1, 0x0);
        gbc.writeMem(0x6dd5, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xbc1a);
        EXPECT(gbc.pc(), 0x6dd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0232
        gbc.setState(0x1ba0, 0xd948, 0xc8a0, 0xdf30, 0x6a1f, 0xbea0, 0x1, 0x1);
        gbc.writeMem(0x1ba0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd948);
        EXPECT(gbc.pc(), 0x1ba2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0233
        gbc.setState(0x5ac6, 0x2a4c, 0x7ea0, 0xb411, 0xc7f9, 0x9337, 0x1, 0x1);
        gbc.writeMem(0x5ac6, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x2a4c);
        EXPECT(gbc.pc(), 0x5ac8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0234
        gbc.setState(0x9574, 0x91c6, 0x2d60, 0x4b2a, 0x4a42, 0xdc99, 0x0, 0x1);
        gbc.writeMem(0x9574, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x91c6);
        EXPECT(gbc.pc(), 0x9576);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9574), 0xcb);
        EXPECT(gbc.readMem(0x9575), 0x4d);
        // CB 4D 0235
        gbc.setState(0xd15b, 0xd547, 0x69e0, 0xff23, 0x988b, 0xb6c5, 0x0, 0x1);
        gbc.writeMem(0xd15b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd547);
        EXPECT(gbc.pc(), 0xd15d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd15b), 0xcb);
        EXPECT(gbc.readMem(0xd15c), 0x4d);
        // CB 4D 0236
        gbc.setState(0x62fc, 0x3278, 0xd810, 0xe974, 0xed4a, 0xa161, 0x1, 0x0);
        gbc.writeMem(0x62fc, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3278);
        EXPECT(gbc.pc(), 0x62fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0237
        gbc.setState(0x149c, 0xf42d, 0xcbf0, 0xc0c, 0xcc87, 0x2f5b, 0x0, 0x0);
        gbc.writeMem(0x149c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf42d);
        EXPECT(gbc.pc(), 0x149e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0238
        gbc.setState(0x2b83, 0xe14f, 0xd10, 0x54a8, 0xe17, 0x3102, 0x1, 0x1);
        gbc.writeMem(0x2b83, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe14f);
        EXPECT(gbc.pc(), 0x2b85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0239
        gbc.setState(0x6997, 0x18c4, 0x58e0, 0x6649, 0x395a, 0xc913, 0x0, 0x1);
        gbc.writeMem(0x6997, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x18c4);
        EXPECT(gbc.pc(), 0x6999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 023A
        gbc.setState(0x90c5, 0x57db, 0xab30, 0xa0af, 0x7866, 0xc270, 0x0, 0x1);
        gbc.writeMem(0x90c5, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x57db);
        EXPECT(gbc.pc(), 0x90c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90c5), 0xcb);
        EXPECT(gbc.readMem(0x90c6), 0x4d);
        // CB 4D 023B
        gbc.setState(0xdd92, 0x46c6, 0x2e20, 0xed53, 0x72ff, 0x3823, 0x1, 0x0);
        gbc.writeMem(0xdd92, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x46c6);
        EXPECT(gbc.pc(), 0xdd94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd92), 0xcb);
        EXPECT(gbc.readMem(0xdd93), 0x4d);
        // CB 4D 023C
        gbc.setState(0x5f54, 0x885b, 0xe230, 0xfaa3, 0xf7a1, 0x7bb7, 0x0, 0x1);
        gbc.writeMem(0x5f54, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x885b);
        EXPECT(gbc.pc(), 0x5f56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 023D
        gbc.setState(0x773e, 0xaf45, 0xcb0, 0xa6c, 0xf603, 0xba1a, 0x1, 0x1);
        gbc.writeMem(0x773e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xaf45);
        EXPECT(gbc.pc(), 0x7740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 023E
        gbc.setState(0xc651, 0xa1cd, 0x6b50, 0x9388, 0x23e7, 0xdd95, 0x1, 0x1);
        gbc.writeMem(0xc651, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa1cd);
        EXPECT(gbc.pc(), 0xc653);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc651), 0xcb);
        EXPECT(gbc.readMem(0xc652), 0x4d);
        // CB 4D 023F
        gbc.setState(0x27e8, 0x475d, 0x3600, 0xdf18, 0x812f, 0x71e, 0x1, 0x1);
        gbc.writeMem(0x27e8, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x475d);
        EXPECT(gbc.pc(), 0x27ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0240
        gbc.setState(0xcb93, 0x3958, 0xf610, 0xa4d4, 0x7709, 0x2352, 0x1, 0x1);
        gbc.writeMem(0xcb93, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x3958);
        EXPECT(gbc.pc(), 0xcb95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb93), 0xcb);
        EXPECT(gbc.readMem(0xcb94), 0x4d);
        // CB 4D 0241
        gbc.setState(0x13a1, 0x1d34, 0x9870, 0xcd89, 0x1e, 0xd448, 0x0, 0x0);
        gbc.writeMem(0x13a1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x1d34);
        EXPECT(gbc.pc(), 0x13a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0242
        gbc.setState(0x1b87, 0xab9f, 0xef90, 0x9f92, 0x919f, 0x2f3f, 0x1, 0x0);
        gbc.writeMem(0x1b87, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xab9f);
        EXPECT(gbc.pc(), 0x1b89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0243
        gbc.setState(0x4dae, 0xf840, 0xa20, 0xfe19, 0x8b67, 0xb8b5, 0x0, 0x1);
        gbc.writeMem(0x4dae, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf840);
        EXPECT(gbc.pc(), 0x4db0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0244
        gbc.setState(0x81d6, 0x9324, 0x7670, 0xd285, 0x1dc9, 0x4f25, 0x0, 0x0);
        gbc.writeMem(0x81d6, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x9324);
        EXPECT(gbc.pc(), 0x81d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81d6), 0xcb);
        EXPECT(gbc.readMem(0x81d7), 0x4d);
        // CB 4D 0245
        gbc.setState(0xc58, 0x280d, 0xe420, 0x2858, 0x315e, 0x4a24, 0x0, 0x1);
        gbc.writeMem(0xc58, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x280d);
        EXPECT(gbc.pc(), 0xc5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0246
        gbc.setState(0xeb6c, 0x72a9, 0x5550, 0x3ee1, 0xdb16, 0x97ea, 0x0, 0x1);
        gbc.writeMem(0xeb6c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x72a9);
        EXPECT(gbc.pc(), 0xeb6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb6c), 0xcb);
        EXPECT(gbc.readMem(0xeb6d), 0x4d);
        // CB 4D 0247
        gbc.setState(0x75c8, 0x8e2a, 0xfb60, 0xd2ef, 0xe4a7, 0xe20b, 0x1, 0x0);
        gbc.writeMem(0x75c8, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x8e2a);
        EXPECT(gbc.pc(), 0x75ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0248
        gbc.setState(0xb508, 0x62f7, 0xbeb0, 0x3ae6, 0x71f2, 0x88bc, 0x1, 0x1);
        gbc.writeMem(0xb508, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x62f7);
        EXPECT(gbc.pc(), 0xb50a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb508), 0xcb);
        EXPECT(gbc.readMem(0xb509), 0x4d);
        // CB 4D 0249
        gbc.setState(0xa6cd, 0xa384, 0xdd90, 0x9d72, 0xdc69, 0x450, 0x0, 0x1);
        gbc.writeMem(0xa6cd, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa384);
        EXPECT(gbc.pc(), 0xa6cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6cd), 0xcb);
        EXPECT(gbc.readMem(0xa6ce), 0x4d);
        // CB 4D 024A
        gbc.setState(0x69b6, 0xb6ac, 0x4150, 0xa704, 0x66ee, 0x6b38, 0x0, 0x1);
        gbc.writeMem(0x69b6, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb6ac);
        EXPECT(gbc.pc(), 0x69b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 024B
        gbc.setState(0x2053, 0x89aa, 0x79c0, 0x20c2, 0xe4a0, 0xa0aa, 0x0, 0x0);
        gbc.writeMem(0x2053, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x89aa);
        EXPECT(gbc.pc(), 0x2055);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 024C
        gbc.setState(0x9c7b, 0xe864, 0x4cf0, 0x2be1, 0x8bcc, 0xb0d9, 0x0, 0x1);
        gbc.writeMem(0x9c7b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xe864);
        EXPECT(gbc.pc(), 0x9c7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c7b), 0xcb);
        EXPECT(gbc.readMem(0x9c7c), 0x4d);
        // CB 4D 024D
        gbc.setState(0xcb18, 0xdc7, 0x2f10, 0x4575, 0x1d5f, 0x24a, 0x1, 0x1);
        gbc.writeMem(0xcb18, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xdc7);
        EXPECT(gbc.pc(), 0xcb1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb18), 0xcb);
        EXPECT(gbc.readMem(0xcb19), 0x4d);
        // CB 4D 024E
        gbc.setState(0x10da, 0xc04c, 0x85f0, 0x6205, 0x8d63, 0xbe64, 0x1, 0x1);
        gbc.writeMem(0x10da, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xc04c);
        EXPECT(gbc.pc(), 0x10dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 024F
        gbc.setState(0xa786, 0xa985, 0x2b30, 0x3118, 0x532a, 0x40ec, 0x0, 0x1);
        gbc.writeMem(0xa786, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xa985);
        EXPECT(gbc.pc(), 0xa788);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa786), 0xcb);
        EXPECT(gbc.readMem(0xa787), 0x4d);
        // CB 4D 0250
        gbc.setState(0x8e18, 0x77e1, 0xfd00, 0x26f2, 0x1f3a, 0x2f08, 0x0, 0x1);
        gbc.writeMem(0x8e18, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x77e1);
        EXPECT(gbc.pc(), 0x8e1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e18), 0xcb);
        EXPECT(gbc.readMem(0x8e19), 0x4d);
        // CB 4D 0251
        gbc.setState(0xeeb4, 0x2975, 0xe650, 0xc729, 0x69bd, 0xfef6, 0x1, 0x1);
        gbc.writeMem(0xeeb4, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2975);
        EXPECT(gbc.pc(), 0xeeb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeb4), 0xcb);
        EXPECT(gbc.readMem(0xeeb5), 0x4d);
        // CB 4D 0252
        gbc.setState(0xe25a, 0x84b6, 0x4b0, 0x4fbc, 0xe1fe, 0xa6cf, 0x1, 0x1);
        gbc.writeMem(0xe25a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x84b6);
        EXPECT(gbc.pc(), 0xe25c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe25a), 0xcb);
        EXPECT(gbc.readMem(0xe25b), 0x4d);
        // CB 4D 0253
        gbc.setState(0x603e, 0x88ce, 0xea80, 0xb667, 0xf46b, 0xed1e, 0x0, 0x1);
        gbc.writeMem(0x603e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x88ce);
        EXPECT(gbc.pc(), 0x6040);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0254
        gbc.setState(0x8c35, 0x1244, 0xe50, 0x1001, 0xc0b4, 0xed33, 0x0, 0x0);
        gbc.writeMem(0x8c35, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1244);
        EXPECT(gbc.pc(), 0x8c37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c35), 0xcb);
        EXPECT(gbc.readMem(0x8c36), 0x4d);
        // CB 4D 0255
        gbc.setState(0x8761, 0xb478, 0x20d0, 0xabf3, 0xa448, 0x19a, 0x0, 0x0);
        gbc.writeMem(0x8761, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb478);
        EXPECT(gbc.pc(), 0x8763);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8761), 0xcb);
        EXPECT(gbc.readMem(0x8762), 0x4d);
        // CB 4D 0256
        gbc.setState(0x9e64, 0x261e, 0xd760, 0xd9ae, 0x8cd0, 0xd87c, 0x1, 0x0);
        gbc.writeMem(0x9e64, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x261e);
        EXPECT(gbc.pc(), 0x9e66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e64), 0xcb);
        EXPECT(gbc.readMem(0x9e65), 0x4d);
        // CB 4D 0257
        gbc.setState(0x55cd, 0x58e7, 0x4a20, 0xb5a6, 0x1c7f, 0x4987, 0x1, 0x0);
        gbc.writeMem(0x55cd, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x58e7);
        EXPECT(gbc.pc(), 0x55cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0258
        gbc.setState(0x7781, 0x924b, 0x4f30, 0x753d, 0x9c2, 0x499, 0x0, 0x1);
        gbc.writeMem(0x7781, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x924b);
        EXPECT(gbc.pc(), 0x7783);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0259
        gbc.setState(0x9a8c, 0x8a91, 0xc730, 0x47df, 0x3908, 0x19fb, 0x0, 0x0);
        gbc.writeMem(0x9a8c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x8a91);
        EXPECT(gbc.pc(), 0x9a8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a8c), 0xcb);
        EXPECT(gbc.readMem(0x9a8d), 0x4d);
        // CB 4D 025A
        gbc.setState(0xd23d, 0x50b4, 0x1210, 0xbc3, 0xf466, 0x26ec, 0x1, 0x0);
        gbc.writeMem(0xd23d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x50b4);
        EXPECT(gbc.pc(), 0xd23f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd23d), 0xcb);
        EXPECT(gbc.readMem(0xd23e), 0x4d);
        // CB 4D 025B
        gbc.setState(0xeff2, 0x6f6e, 0xda70, 0xc2b3, 0x30a2, 0xdf5c, 0x0, 0x0);
        gbc.writeMem(0xeff2, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6f6e);
        EXPECT(gbc.pc(), 0xeff4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeff2), 0xcb);
        EXPECT(gbc.readMem(0xeff3), 0x4d);
        // CB 4D 025C
        gbc.setState(0x37f3, 0x274c, 0x7300, 0x80b9, 0x831a, 0x88d, 0x0, 0x1);
        gbc.writeMem(0x37f3, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x274c);
        EXPECT(gbc.pc(), 0x37f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 025D
        gbc.setState(0x8db, 0xfeaf, 0x93a0, 0xc1f6, 0xdadc, 0x9c8b, 0x1, 0x0);
        gbc.writeMem(0x8db, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xfeaf);
        EXPECT(gbc.pc(), 0x8dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 025E
        gbc.setState(0x44c7, 0xd46b, 0x42a0, 0xe84e, 0x84ff, 0xe7cc, 0x0, 0x0);
        gbc.writeMem(0x44c7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xd46b);
        EXPECT(gbc.pc(), 0x44c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 025F
        gbc.setState(0x2945, 0x9db7, 0x440, 0x537, 0x11ba, 0xc3c2, 0x1, 0x1);
        gbc.writeMem(0x2945, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9db7);
        EXPECT(gbc.pc(), 0x2947);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0260
        gbc.setState(0x5419, 0x8cfe, 0x9b00, 0x2bbf, 0x3af, 0xa4a9, 0x0, 0x0);
        gbc.writeMem(0x5419, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x8cfe);
        EXPECT(gbc.pc(), 0x541b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0261
        gbc.setState(0x53dd, 0x440d, 0x51f0, 0xe689, 0x6d98, 0x382b, 0x0, 0x1);
        gbc.writeMem(0x53dd, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x440d);
        EXPECT(gbc.pc(), 0x53df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0262
        gbc.setState(0x2986, 0x7ed4, 0xe640, 0x4ffc, 0xb11a, 0x7dcf, 0x1, 0x1);
        gbc.writeMem(0x2986, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7ed4);
        EXPECT(gbc.pc(), 0x2988);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0263
        gbc.setState(0x56fd, 0x9fcb, 0x79a0, 0xeca8, 0xfbfc, 0xed21, 0x0, 0x1);
        gbc.writeMem(0x56fd, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x9fcb);
        EXPECT(gbc.pc(), 0x56ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0264
        gbc.setState(0x2a74, 0xac6, 0x7df0, 0x4397, 0x6d1d, 0x2543, 0x0, 0x1);
        gbc.writeMem(0x2a74, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xac6);
        EXPECT(gbc.pc(), 0x2a76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0265
        gbc.setState(0x4d27, 0x8383, 0x5820, 0xc384, 0xd601, 0x5bd3, 0x1, 0x1);
        gbc.writeMem(0x4d27, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x8383);
        EXPECT(gbc.pc(), 0x4d29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0266
        gbc.setState(0x3bbc, 0x8654, 0x5ce0, 0xeb4, 0x50d4, 0x604b, 0x1, 0x0);
        gbc.writeMem(0x3bbc, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8654);
        EXPECT(gbc.pc(), 0x3bbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0267
        gbc.setState(0x57d, 0x3fc6, 0xc360, 0xd4df, 0xad93, 0x1eaa, 0x1, 0x0);
        gbc.writeMem(0x57d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3fc6);
        EXPECT(gbc.pc(), 0x57f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0268
        gbc.setState(0x40e3, 0x4d73, 0x9d00, 0x5a70, 0x428f, 0xa825, 0x1, 0x0);
        gbc.writeMem(0x40e3, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4d73);
        EXPECT(gbc.pc(), 0x40e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0269
        gbc.setState(0x14e2, 0x694, 0xfaa0, 0x2a7a, 0x13d9, 0xf461, 0x0, 0x0);
        gbc.writeMem(0x14e2, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x694);
        EXPECT(gbc.pc(), 0x14e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 026A
        gbc.setState(0x3b2, 0xfc78, 0x7280, 0x1ed9, 0xdc82, 0x53c1, 0x1, 0x1);
        gbc.writeMem(0x3b2, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xfc78);
        EXPECT(gbc.pc(), 0x3b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 026B
        gbc.setState(0x2f80, 0x4f5a, 0x2cf0, 0x5b0c, 0x8ad6, 0x559f, 0x1, 0x0);
        gbc.writeMem(0x2f80, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4f5a);
        EXPECT(gbc.pc(), 0x2f82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 026C
        gbc.setState(0xc191, 0x69f2, 0x3bd0, 0x6c75, 0xd3bf, 0xcde8, 0x1, 0x1);
        gbc.writeMem(0xc191, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x69f2);
        EXPECT(gbc.pc(), 0xc193);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc191), 0xcb);
        EXPECT(gbc.readMem(0xc192), 0x4d);
        // CB 4D 026D
        gbc.setState(0xf93, 0xa817, 0x6a90, 0x5da9, 0xd14b, 0xfc2c, 0x0, 0x0);
        gbc.writeMem(0xf93, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa817);
        EXPECT(gbc.pc(), 0xf95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 026E
        gbc.setState(0xeca1, 0xec48, 0xffe0, 0x527f, 0xdfca, 0xba09, 0x0, 0x1);
        gbc.writeMem(0xeca1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xec48);
        EXPECT(gbc.pc(), 0xeca3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeca1), 0xcb);
        EXPECT(gbc.readMem(0xeca2), 0x4d);
        // CB 4D 026F
        gbc.setState(0x52e0, 0xf3f5, 0x83b0, 0x89e, 0xe40, 0xf0c6, 0x0, 0x0);
        gbc.writeMem(0x52e0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf3f5);
        EXPECT(gbc.pc(), 0x52e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0270
        gbc.setState(0x4ad, 0x2b2b, 0xc240, 0x4be0, 0x2596, 0x1255, 0x1, 0x1);
        gbc.writeMem(0x4ad, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x2b2b);
        EXPECT(gbc.pc(), 0x4af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0272
        gbc.setState(0xbd2d, 0x87d7, 0x73e0, 0x94e, 0x6523, 0x93c9, 0x0, 0x1);
        gbc.writeMem(0xbd2d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x87d7);
        EXPECT(gbc.pc(), 0xbd2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd2d), 0xcb);
        EXPECT(gbc.readMem(0xbd2e), 0x4d);
        // CB 4D 0273
        gbc.setState(0x59, 0xae16, 0x7700, 0x7b0, 0xa135, 0x967, 0x1, 0x0);
        gbc.writeMem(0x59, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xae16);
        EXPECT(gbc.pc(), 0x5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0274
        gbc.setState(0xd3c1, 0xcae7, 0x37f0, 0xa89, 0xc1c7, 0x2d0a, 0x0, 0x0);
        gbc.writeMem(0xd3c1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xcae7);
        EXPECT(gbc.pc(), 0xd3c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3c1), 0xcb);
        EXPECT(gbc.readMem(0xd3c2), 0x4d);
        // CB 4D 0275
        gbc.setState(0x3bb0, 0xc24a, 0x86f0, 0xb847, 0x2a88, 0xb24d, 0x1, 0x1);
        gbc.writeMem(0x3bb0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc24a);
        EXPECT(gbc.pc(), 0x3bb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0276
        gbc.setState(0xb533, 0x3638, 0x11e0, 0x616, 0x48a5, 0x10aa, 0x1, 0x1);
        gbc.writeMem(0xb533, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3638);
        EXPECT(gbc.pc(), 0xb535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb533), 0xcb);
        EXPECT(gbc.readMem(0xb534), 0x4d);
        // CB 4D 0277
        gbc.setState(0xada, 0x55a7, 0xfb60, 0xad2b, 0xc17c, 0x326a, 0x0, 0x0);
        gbc.writeMem(0xada, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x55a7);
        EXPECT(gbc.pc(), 0xadc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0278
        gbc.setState(0x3348, 0xd48d, 0x5a50, 0x7d0d, 0xfe07, 0x4f35, 0x1, 0x1);
        gbc.writeMem(0x3348, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xd48d);
        EXPECT(gbc.pc(), 0x334a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0279
        gbc.setState(0xde86, 0x6696, 0x210, 0xc609, 0xf048, 0x4152, 0x0, 0x1);
        gbc.writeMem(0xde86, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6696);
        EXPECT(gbc.pc(), 0xde88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde86), 0xcb);
        EXPECT(gbc.readMem(0xde87), 0x4d);
        // CB 4D 027A
        gbc.setState(0x1646, 0xf504, 0xc450, 0xc17d, 0xdd32, 0xe1d, 0x1, 0x1);
        gbc.writeMem(0x1646, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf504);
        EXPECT(gbc.pc(), 0x1648);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 027B
        gbc.setState(0x9e3f, 0x8522, 0x2f10, 0x446b, 0x9519, 0x467e, 0x0, 0x0);
        gbc.writeMem(0x9e3f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x8522);
        EXPECT(gbc.pc(), 0x9e41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e3f), 0xcb);
        EXPECT(gbc.readMem(0x9e40), 0x4d);
        // CB 4D 027C
        gbc.setState(0x6f2a, 0xbb4f, 0x2380, 0x181b, 0x5043, 0xd78c, 0x1, 0x0);
        gbc.writeMem(0x6f2a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xbb4f);
        EXPECT(gbc.pc(), 0x6f2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 027D
        gbc.setState(0x31a1, 0x6cda, 0xe860, 0x53fc, 0x50f0, 0xe0d2, 0x1, 0x0);
        gbc.writeMem(0x31a1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6cda);
        EXPECT(gbc.pc(), 0x31a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 027E
        gbc.setState(0x3647, 0xc7bf, 0xb090, 0xae0a, 0xb55d, 0x31a0, 0x0, 0x0);
        gbc.writeMem(0x3647, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xc7bf);
        EXPECT(gbc.pc(), 0x3649);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 027F
        gbc.setState(0xe334, 0xbd8f, 0x8f70, 0x6f0d, 0x230f, 0xa31b, 0x1, 0x1);
        gbc.writeMem(0xe334, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xbd8f);
        EXPECT(gbc.pc(), 0xe336);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe334), 0xcb);
        EXPECT(gbc.readMem(0xe335), 0x4d);
        // CB 4D 0280
        gbc.setState(0x9047, 0x8c31, 0x5110, 0xc964, 0x83a3, 0xb5a7, 0x0, 0x0);
        gbc.writeMem(0x9047, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8c31);
        EXPECT(gbc.pc(), 0x9049);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9047), 0xcb);
        EXPECT(gbc.readMem(0x9048), 0x4d);
        // CB 4D 0281
        gbc.setState(0x6498, 0x5b75, 0x2ac0, 0xc3b, 0x426c, 0x22b, 0x0, 0x0);
        gbc.writeMem(0x6498, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x5b75);
        EXPECT(gbc.pc(), 0x649a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0282
        gbc.setState(0xdeda, 0x8e74, 0x15a0, 0xa371, 0x47d1, 0x61be, 0x0, 0x1);
        gbc.writeMem(0xdeda, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8e74);
        EXPECT(gbc.pc(), 0xdedc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeda), 0xcb);
        EXPECT(gbc.readMem(0xdedb), 0x4d);
        // CB 4D 0283
        gbc.setState(0x360d, 0xf953, 0x8360, 0x4e99, 0x24c1, 0xa3c9, 0x0, 0x1);
        gbc.writeMem(0x360d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xf953);
        EXPECT(gbc.pc(), 0x360f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0284
        gbc.setState(0xa904, 0x3f01, 0x8bc0, 0x9a5, 0x435f, 0x2074, 0x0, 0x0);
        gbc.writeMem(0xa904, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x3f01);
        EXPECT(gbc.pc(), 0xa906);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa904), 0xcb);
        EXPECT(gbc.readMem(0xa905), 0x4d);
        // CB 4D 0285
        gbc.setState(0x131, 0x8478, 0x9e70, 0xbe3a, 0x9881, 0x61ff, 0x0, 0x0);
        gbc.writeMem(0x131, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8478);
        EXPECT(gbc.pc(), 0x133);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0286
        gbc.setState(0xa69b, 0x1d7a, 0xadd0, 0x5af2, 0x629, 0xeeca, 0x0, 0x0);
        gbc.writeMem(0xa69b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1d7a);
        EXPECT(gbc.pc(), 0xa69d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa69b), 0xcb);
        EXPECT(gbc.readMem(0xa69c), 0x4d);
        // CB 4D 0287
        gbc.setState(0xbcce, 0x711a, 0x64e0, 0x90c9, 0xaf7f, 0xd52e, 0x0, 0x1);
        gbc.writeMem(0xbcce, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x711a);
        EXPECT(gbc.pc(), 0xbcd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcce), 0xcb);
        EXPECT(gbc.readMem(0xbccf), 0x4d);
        // CB 4D 0288
        gbc.setState(0x9f73, 0x1d3c, 0x1050, 0xc0d, 0x7cc3, 0xcea4, 0x1, 0x0);
        gbc.writeMem(0x9f73, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1d3c);
        EXPECT(gbc.pc(), 0x9f75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f73), 0xcb);
        EXPECT(gbc.readMem(0x9f74), 0x4d);
        // CB 4D 0289
        gbc.setState(0x175b, 0xe5e9, 0xe9f0, 0xddc8, 0x9125, 0xff1, 0x1, 0x0);
        gbc.writeMem(0x175b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe5e9);
        EXPECT(gbc.pc(), 0x175d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 028A
        gbc.setState(0x43d7, 0x9673, 0x5380, 0x4b9c, 0x5b71, 0xfdac, 0x0, 0x0);
        gbc.writeMem(0x43d7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x9673);
        EXPECT(gbc.pc(), 0x43d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 028B
        gbc.setState(0x59f8, 0x8453, 0x3f0, 0x334f, 0x8108, 0x1c87, 0x1, 0x0);
        gbc.writeMem(0x59f8, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8453);
        EXPECT(gbc.pc(), 0x59fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 028C
        gbc.setState(0xa2d8, 0x6936, 0x76a0, 0x7450, 0x6e34, 0x4785, 0x0, 0x1);
        gbc.writeMem(0xa2d8, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6936);
        EXPECT(gbc.pc(), 0xa2da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2d8), 0xcb);
        EXPECT(gbc.readMem(0xa2d9), 0x4d);
        // CB 4D 028D
        gbc.setState(0x53ae, 0xa485, 0x2200, 0x3075, 0x9f49, 0x4ec2, 0x0, 0x1);
        gbc.writeMem(0x53ae, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa485);
        EXPECT(gbc.pc(), 0x53b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 028E
        gbc.setState(0x2686, 0x36f1, 0x1dc0, 0x6496, 0xc9c8, 0xef11, 0x1, 0x1);
        gbc.writeMem(0x2686, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x36f1);
        EXPECT(gbc.pc(), 0x2688);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 028F
        gbc.setState(0x1daa, 0xc410, 0x2670, 0x9577, 0x4d36, 0x773f, 0x0, 0x0);
        gbc.writeMem(0x1daa, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xc410);
        EXPECT(gbc.pc(), 0x1dac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0290
        gbc.setState(0x74cb, 0xcf8f, 0x49b0, 0xa5a2, 0xfc54, 0xff4, 0x1, 0x1);
        gbc.writeMem(0x74cb, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xcf8f);
        EXPECT(gbc.pc(), 0x74cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0291
        gbc.setState(0xbaf1, 0xd9f7, 0x8f00, 0xe4ac, 0xee89, 0xfbec, 0x1, 0x1);
        gbc.writeMem(0xbaf1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd9f7);
        EXPECT(gbc.pc(), 0xbaf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaf1), 0xcb);
        EXPECT(gbc.readMem(0xbaf2), 0x4d);
        // CB 4D 0292
        gbc.setState(0xdef9, 0x6188, 0xdf50, 0x710c, 0xd234, 0x9042, 0x1, 0x0);
        gbc.writeMem(0xdef9, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x6188);
        EXPECT(gbc.pc(), 0xdefb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdef9), 0xcb);
        EXPECT(gbc.readMem(0xdefa), 0x4d);
        // CB 4D 0293
        gbc.setState(0x48c0, 0x91f5, 0xfe90, 0x1c37, 0xa94f, 0x1598, 0x0, 0x0);
        gbc.writeMem(0x48c0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x91f5);
        EXPECT(gbc.pc(), 0x48c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0295
        gbc.setState(0x85c2, 0xb560, 0xea20, 0xcd06, 0x65a5, 0x927c, 0x0, 0x1);
        gbc.writeMem(0x85c2, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb560);
        EXPECT(gbc.pc(), 0x85c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85c2), 0xcb);
        EXPECT(gbc.readMem(0x85c3), 0x4d);
        // CB 4D 0296
        gbc.setState(0xc8d8, 0x30ae, 0x9960, 0x33e, 0x11b0, 0x5bfe, 0x0, 0x0);
        gbc.writeMem(0xc8d8, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x30ae);
        EXPECT(gbc.pc(), 0xc8da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8d8), 0xcb);
        EXPECT(gbc.readMem(0xc8d9), 0x4d);
        // CB 4D 0297
        gbc.setState(0x2b7f, 0xdb60, 0x5ec0, 0xbd0a, 0x551f, 0xdb6, 0x0, 0x1);
        gbc.writeMem(0x2b7f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xdb60);
        EXPECT(gbc.pc(), 0x2b81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0298
        gbc.setState(0x4437, 0xbfca, 0x1080, 0x87fc, 0xf9f7, 0xab80, 0x1, 0x0);
        gbc.writeMem(0x4437, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xbfca);
        EXPECT(gbc.pc(), 0x4439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0299
        gbc.setState(0x1de, 0xccf6, 0x2610, 0xf7c2, 0x1e0d, 0xa6ce, 0x1, 0x1);
        gbc.writeMem(0x1de, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xccf6);
        EXPECT(gbc.pc(), 0x1e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 029A
        gbc.setState(0x3ad7, 0xdacb, 0xcbf0, 0x784, 0x65dd, 0xdfe6, 0x0, 0x1);
        gbc.writeMem(0x3ad7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xdacb);
        EXPECT(gbc.pc(), 0x3ad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 029B
        gbc.setState(0x186a, 0x9e52, 0xf990, 0x8cd5, 0x82ed, 0x669d, 0x1, 0x0);
        gbc.writeMem(0x186a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x9e52);
        EXPECT(gbc.pc(), 0x186c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 029C
        gbc.setState(0x1215, 0xd961, 0x590, 0xd8cd, 0x2ac0, 0xb2ad, 0x0, 0x1);
        gbc.writeMem(0x1215, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xd961);
        EXPECT(gbc.pc(), 0x1217);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 029D
        gbc.setState(0xb05c, 0x3dc0, 0x42c0, 0x2a4f, 0xc93c, 0x7966, 0x0, 0x0);
        gbc.writeMem(0xb05c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3dc0);
        EXPECT(gbc.pc(), 0xb05e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb05c), 0xcb);
        EXPECT(gbc.readMem(0xb05d), 0x4d);
        // CB 4D 029E
        gbc.setState(0xee26, 0x41b6, 0xf710, 0xe330, 0x709, 0x9525, 0x0, 0x1);
        gbc.writeMem(0xee26, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x41b6);
        EXPECT(gbc.pc(), 0xee28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee26), 0xcb);
        EXPECT(gbc.readMem(0xee27), 0x4d);
        // CB 4D 029F
        gbc.setState(0x10e0, 0xdfec, 0x7360, 0xf31, 0xf823, 0x428c, 0x1, 0x1);
        gbc.writeMem(0x10e0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xdfec);
        EXPECT(gbc.pc(), 0x10e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02A0
        gbc.setState(0x1ba0, 0x4e4d, 0x4f70, 0x8ffc, 0x18ea, 0xbf5a, 0x1, 0x0);
        gbc.writeMem(0x1ba0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x4e4d);
        EXPECT(gbc.pc(), 0x1ba2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 02A1
        gbc.setState(0xb07c, 0xe95f, 0xaf60, 0xc8c8, 0x7b5b, 0xb9ef, 0x0, 0x0);
        gbc.writeMem(0xb07c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xe95f);
        EXPECT(gbc.pc(), 0xb07e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb07c), 0xcb);
        EXPECT(gbc.readMem(0xb07d), 0x4d);
        // CB 4D 02A2
        gbc.setState(0x8ac4, 0xaf58, 0xbdd0, 0x6ca0, 0x782c, 0x7c30, 0x1, 0x1);
        gbc.writeMem(0x8ac4, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xaf58);
        EXPECT(gbc.pc(), 0x8ac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ac4), 0xcb);
        EXPECT(gbc.readMem(0x8ac5), 0x4d);
        // CB 4D 02A3
        gbc.setState(0x72a8, 0xf52, 0xfca0, 0x5b5d, 0x45bb, 0xbf83, 0x1, 0x0);
        gbc.writeMem(0x72a8, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xf52);
        EXPECT(gbc.pc(), 0x72aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02A4
        gbc.setState(0x73c9, 0xb018, 0xeb20, 0xd9cf, 0xa73b, 0xcb4a, 0x1, 0x0);
        gbc.writeMem(0x73c9, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb018);
        EXPECT(gbc.pc(), 0x73cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02A5
        gbc.setState(0xabd6, 0x7b12, 0xd890, 0x5747, 0x2a40, 0x132d, 0x0, 0x0);
        gbc.writeMem(0xabd6, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x7b12);
        EXPECT(gbc.pc(), 0xabd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabd6), 0xcb);
        EXPECT(gbc.readMem(0xabd7), 0x4d);
        // CB 4D 02A6
        gbc.setState(0x53a5, 0x615e, 0x9e80, 0xf58c, 0xd20d, 0xed73, 0x1, 0x1);
        gbc.writeMem(0x53a5, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x615e);
        EXPECT(gbc.pc(), 0x53a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02A7
        gbc.setState(0x6f76, 0xdacf, 0x4140, 0xb579, 0xa845, 0x4be4, 0x0, 0x1);
        gbc.writeMem(0x6f76, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xdacf);
        EXPECT(gbc.pc(), 0x6f78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02A8
        gbc.setState(0x274d, 0xd138, 0x65b0, 0xe912, 0xba74, 0x684b, 0x0, 0x1);
        gbc.writeMem(0x274d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xd138);
        EXPECT(gbc.pc(), 0x274f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 02A9
        gbc.setState(0x96b2, 0xb1, 0xe9d0, 0x5045, 0xfe43, 0xb0c6, 0x1, 0x0);
        gbc.writeMem(0x96b2, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb1);
        EXPECT(gbc.pc(), 0x96b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96b2), 0xcb);
        EXPECT(gbc.readMem(0x96b3), 0x4d);
        // CB 4D 02AA
        gbc.setState(0x6c0, 0x7d96, 0xaff0, 0xb6f8, 0x6fe2, 0x263a, 0x1, 0x1);
        gbc.writeMem(0x6c0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7d96);
        EXPECT(gbc.pc(), 0x6c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 02AB
        gbc.setState(0xcf8c, 0x1cab, 0x1380, 0xbf0c, 0x140, 0xcdd6, 0x0, 0x0);
        gbc.writeMem(0xcf8c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1cab);
        EXPECT(gbc.pc(), 0xcf8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf8c), 0xcb);
        EXPECT(gbc.readMem(0xcf8d), 0x4d);
        // CB 4D 02AC
        gbc.setState(0x8b84, 0xc2ea, 0xd9e0, 0x6742, 0x1ca8, 0xcef0, 0x0, 0x0);
        gbc.writeMem(0x8b84, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc2ea);
        EXPECT(gbc.pc(), 0x8b86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b84), 0xcb);
        EXPECT(gbc.readMem(0x8b85), 0x4d);
        // CB 4D 02AD
        gbc.setState(0xb34f, 0x1f7f, 0x20e0, 0xbb2c, 0x698b, 0x1806, 0x1, 0x0);
        gbc.writeMem(0xb34f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1f7f);
        EXPECT(gbc.pc(), 0xb351);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb34f), 0xcb);
        EXPECT(gbc.readMem(0xb350), 0x4d);
        // CB 4D 02AE
        gbc.setState(0xaefc, 0x713b, 0x3110, 0xe2ea, 0xae07, 0x94d9, 0x0, 0x0);
        gbc.writeMem(0xaefc, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x713b);
        EXPECT(gbc.pc(), 0xaefe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaefc), 0xcb);
        EXPECT(gbc.readMem(0xaefd), 0x4d);
        // CB 4D 02AF
        gbc.setState(0xbe80, 0x777d, 0x4030, 0xe4f4, 0x28e1, 0xdcd9, 0x1, 0x0);
        gbc.writeMem(0xbe80, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x777d);
        EXPECT(gbc.pc(), 0xbe82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe80), 0xcb);
        EXPECT(gbc.readMem(0xbe81), 0x4d);
        // CB 4D 02B0
        gbc.setState(0xdaae, 0x2ad2, 0xd910, 0xd2e1, 0x2878, 0x2f06, 0x1, 0x0);
        gbc.writeMem(0xdaae, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x2ad2);
        EXPECT(gbc.pc(), 0xdab0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaae), 0xcb);
        EXPECT(gbc.readMem(0xdaaf), 0x4d);
        // CB 4D 02B1
        gbc.setState(0xbee3, 0x8fc9, 0xd7d0, 0x99ff, 0x9409, 0x6db2, 0x0, 0x1);
        gbc.writeMem(0xbee3, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x8fc9);
        EXPECT(gbc.pc(), 0xbee5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbee3), 0xcb);
        EXPECT(gbc.readMem(0xbee4), 0x4d);
        // CB 4D 02B2
        gbc.setState(0x3a1, 0xbac4, 0x5310, 0x9cb9, 0x6b2b, 0x1a7f, 0x1, 0x0);
        gbc.writeMem(0x3a1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xbac4);
        EXPECT(gbc.pc(), 0x3a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 02B3
        gbc.setState(0xe49b, 0x1cec, 0xbf80, 0xf941, 0xa03d, 0x2e6c, 0x0, 0x0);
        gbc.writeMem(0xe49b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1cec);
        EXPECT(gbc.pc(), 0xe49d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe49b), 0xcb);
        EXPECT(gbc.readMem(0xe49c), 0x4d);
        // CB 4D 02B4
        gbc.setState(0xef55, 0x2e02, 0x3770, 0x12c3, 0xa8dd, 0xd9dc, 0x0, 0x1);
        gbc.writeMem(0xef55, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x2e02);
        EXPECT(gbc.pc(), 0xef57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef55), 0xcb);
        EXPECT(gbc.readMem(0xef56), 0x4d);
        // CB 4D 02B5
        gbc.setState(0x8bc1, 0x93d5, 0x1820, 0x7b34, 0x339d, 0x7123, 0x0, 0x1);
        gbc.writeMem(0x8bc1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x93d5);
        EXPECT(gbc.pc(), 0x8bc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bc1), 0xcb);
        EXPECT(gbc.readMem(0x8bc2), 0x4d);
        // CB 4D 02B6
        gbc.setState(0x6940, 0xeabf, 0xf5c0, 0xd779, 0x329d, 0xf208, 0x1, 0x0);
        gbc.writeMem(0x6940, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xeabf);
        EXPECT(gbc.pc(), 0x6942);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02B7
        gbc.setState(0x9f89, 0xdb64, 0x9570, 0x25ff, 0x57bd, 0x511a, 0x0, 0x0);
        gbc.writeMem(0x9f89, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xdb64);
        EXPECT(gbc.pc(), 0x9f8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f89), 0xcb);
        EXPECT(gbc.readMem(0x9f8a), 0x4d);
        // CB 4D 02B8
        gbc.setState(0x1a48, 0x8a42, 0xb940, 0x645d, 0x4226, 0x419a, 0x1, 0x0);
        gbc.writeMem(0x1a48, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8a42);
        EXPECT(gbc.pc(), 0x1a4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02B9
        gbc.setState(0x850c, 0xb1f5, 0x8220, 0x6c03, 0x8387, 0xc931, 0x1, 0x0);
        gbc.writeMem(0x850c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb1f5);
        EXPECT(gbc.pc(), 0x850e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x850c), 0xcb);
        EXPECT(gbc.readMem(0x850d), 0x4d);
        // CB 4D 02BA
        gbc.setState(0xce49, 0x52a4, 0x9a00, 0x6c3, 0xec48, 0x3094, 0x0, 0x1);
        gbc.writeMem(0xce49, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x52a4);
        EXPECT(gbc.pc(), 0xce4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce49), 0xcb);
        EXPECT(gbc.readMem(0xce4a), 0x4d);
        // CB 4D 02BB
        gbc.setState(0xb94, 0xd548, 0x7b60, 0x9ae, 0xb5be, 0xd33f, 0x1, 0x0);
        gbc.writeMem(0xb94, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd548);
        EXPECT(gbc.pc(), 0xb96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02BC
        gbc.setState(0x17d1, 0xe539, 0x8ef0, 0xfb74, 0x7cf9, 0x54cc, 0x1, 0x1);
        gbc.writeMem(0x17d1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xe539);
        EXPECT(gbc.pc(), 0x17d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 02BD
        gbc.setState(0xe2da, 0x452f, 0xc920, 0xe9aa, 0x9db3, 0xa0b4, 0x1, 0x0);
        gbc.writeMem(0xe2da, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x452f);
        EXPECT(gbc.pc(), 0xe2dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2da), 0xcb);
        EXPECT(gbc.readMem(0xe2db), 0x4d);
        // CB 4D 02BE
        gbc.setState(0x2538, 0xd222, 0x9350, 0xa6aa, 0xad78, 0xf002, 0x1, 0x0);
        gbc.writeMem(0x2538, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd222);
        EXPECT(gbc.pc(), 0x253a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 02BF
        gbc.setState(0x97a1, 0x9d86, 0x2420, 0x5df3, 0x94a0, 0xf7ff, 0x0, 0x1);
        gbc.writeMem(0x97a1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x9d86);
        EXPECT(gbc.pc(), 0x97a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97a1), 0xcb);
        EXPECT(gbc.readMem(0x97a2), 0x4d);
        // CB 4D 02C0
        gbc.setState(0x40dc, 0x211b, 0x3f40, 0x2620, 0x76cc, 0xd947, 0x0, 0x1);
        gbc.writeMem(0x40dc, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x211b);
        EXPECT(gbc.pc(), 0x40de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02C1
        gbc.setState(0x7122, 0x4d6, 0xac50, 0x76f7, 0xe963, 0xb622, 0x1, 0x1);
        gbc.writeMem(0x7122, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4d6);
        EXPECT(gbc.pc(), 0x7124);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 02C2
        gbc.setState(0xc351, 0x8efd, 0x55c0, 0x8776, 0xe9a0, 0x31b4, 0x1, 0x0);
        gbc.writeMem(0xc351, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8efd);
        EXPECT(gbc.pc(), 0xc353);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc351), 0xcb);
        EXPECT(gbc.readMem(0xc352), 0x4d);
        // CB 4D 02C3
        gbc.setState(0x139d, 0xdf1d, 0x7e90, 0x3792, 0x3922, 0xa79e, 0x0, 0x0);
        gbc.writeMem(0x139d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xdf1d);
        EXPECT(gbc.pc(), 0x139f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 02C4
        gbc.setState(0x64aa, 0x87e6, 0xac00, 0x2f5f, 0xb9f1, 0xecad, 0x1, 0x0);
        gbc.writeMem(0x64aa, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x87e6);
        EXPECT(gbc.pc(), 0x64ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02C5
        gbc.setState(0x689c, 0x6fbd, 0x3640, 0x8644, 0x573e, 0x6eb1, 0x1, 0x0);
        gbc.writeMem(0x689c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x6fbd);
        EXPECT(gbc.pc(), 0x689e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02C6
        gbc.setState(0x96db, 0xf5a6, 0xfb60, 0x3f6b, 0x7fe9, 0xae11, 0x0, 0x0);
        gbc.writeMem(0x96db, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf5a6);
        EXPECT(gbc.pc(), 0x96dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96db), 0xcb);
        EXPECT(gbc.readMem(0x96dc), 0x4d);
        // CB 4D 02C7
        gbc.setState(0xca81, 0x718e, 0x94e0, 0xb67c, 0xd8d0, 0x4c80, 0x1, 0x1);
        gbc.writeMem(0xca81, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x718e);
        EXPECT(gbc.pc(), 0xca83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca81), 0xcb);
        EXPECT(gbc.readMem(0xca82), 0x4d);
        // CB 4D 02C9
        gbc.setState(0x51a2, 0xd6c1, 0x4b80, 0x462d, 0xc4c4, 0x650b, 0x1, 0x0);
        gbc.writeMem(0x51a2, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd6c1);
        EXPECT(gbc.pc(), 0x51a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02CA
        gbc.setState(0x65e6, 0xe4d6, 0x8360, 0x6885, 0x3582, 0xd255, 0x1, 0x0);
        gbc.writeMem(0x65e6, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe4d6);
        EXPECT(gbc.pc(), 0x65e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02CB
        gbc.setState(0xa109, 0x9c18, 0xd480, 0xd248, 0x88f, 0xca46, 0x0, 0x1);
        gbc.writeMem(0xa109, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9c18);
        EXPECT(gbc.pc(), 0xa10b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa109), 0xcb);
        EXPECT(gbc.readMem(0xa10a), 0x4d);
        // CB 4D 02CC
        gbc.setState(0x21cf, 0x855b, 0x7080, 0xffff, 0xa28c, 0x481b, 0x0, 0x0);
        gbc.writeMem(0x21cf, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x855b);
        EXPECT(gbc.pc(), 0x21d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02CD
        gbc.setState(0x46f7, 0x4c91, 0x5bb0, 0x70ac, 0x7f5d, 0xb74f, 0x0, 0x1);
        gbc.writeMem(0x46f7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x4c91);
        EXPECT(gbc.pc(), 0x46f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 02CE
        gbc.setState(0x38f0, 0x91e3, 0x32a0, 0xddfc, 0xc214, 0x3ef7, 0x1, 0x1);
        gbc.writeMem(0x38f0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x91e3);
        EXPECT(gbc.pc(), 0x38f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02CF
        gbc.setState(0x822a, 0x4625, 0xd5e0, 0x13fb, 0xc001, 0x6f28, 0x0, 0x1);
        gbc.writeMem(0x822a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x4625);
        EXPECT(gbc.pc(), 0x822c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x822a), 0xcb);
        EXPECT(gbc.readMem(0x822b), 0x4d);
        // CB 4D 02D0
        gbc.setState(0xeff0, 0xd2ce, 0x4050, 0xe1bd, 0xed2d, 0x6035, 0x0, 0x1);
        gbc.writeMem(0xeff0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xd2ce);
        EXPECT(gbc.pc(), 0xeff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeff0), 0xcb);
        EXPECT(gbc.readMem(0xeff1), 0x4d);
        // CB 4D 02D1
        gbc.setState(0x9164, 0x6f4d, 0xe660, 0x71a1, 0x9028, 0x8f21, 0x1, 0x1);
        gbc.writeMem(0x9164, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x6f4d);
        EXPECT(gbc.pc(), 0x9166);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9164), 0xcb);
        EXPECT(gbc.readMem(0x9165), 0x4d);
        // CB 4D 02D2
        gbc.setState(0xbddb, 0xed15, 0xf790, 0xcf0e, 0x1e70, 0x87e4, 0x1, 0x1);
        gbc.writeMem(0xbddb, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xed15);
        EXPECT(gbc.pc(), 0xbddd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbddb), 0xcb);
        EXPECT(gbc.readMem(0xbddc), 0x4d);
        // CB 4D 02D3
        gbc.setState(0x1788, 0x1c54, 0x1780, 0xe187, 0x31a8, 0x8444, 0x1, 0x0);
        gbc.writeMem(0x1788, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x1c54);
        EXPECT(gbc.pc(), 0x178a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02D4
        gbc.setState(0xa749, 0x8847, 0xa3d0, 0xdc1c, 0x32a3, 0x325e, 0x1, 0x0);
        gbc.writeMem(0xa749, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x8847);
        EXPECT(gbc.pc(), 0xa74b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa749), 0xcb);
        EXPECT(gbc.readMem(0xa74a), 0x4d);
        // CB 4D 02D5
        gbc.setState(0x1f6b, 0xedd5, 0xf60, 0x8394, 0x9717, 0xa20, 0x0, 0x1);
        gbc.writeMem(0x1f6b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xedd5);
        EXPECT(gbc.pc(), 0x1f6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02D6
        gbc.setState(0xc524, 0x4eee, 0x2e10, 0x4677, 0xc82b, 0xbb7b, 0x1, 0x0);
        gbc.writeMem(0xc524, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x4eee);
        EXPECT(gbc.pc(), 0xc526);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc524), 0xcb);
        EXPECT(gbc.readMem(0xc525), 0x4d);
        // CB 4D 02D7
        gbc.setState(0xc6eb, 0x17a0, 0xb330, 0xf42a, 0x5122, 0x7cd4, 0x1, 0x0);
        gbc.writeMem(0xc6eb, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x17a0);
        EXPECT(gbc.pc(), 0xc6ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6eb), 0xcb);
        EXPECT(gbc.readMem(0xc6ec), 0x4d);
        // CB 4D 02D8
        gbc.setState(0x53d6, 0x70d3, 0xe300, 0xcf6a, 0x5def, 0xd99a, 0x0, 0x0);
        gbc.writeMem(0x53d6, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x70d3);
        EXPECT(gbc.pc(), 0x53d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02D9
        gbc.setState(0x59a, 0xa4d2, 0xb660, 0xb488, 0x8ebb, 0x38a4, 0x1, 0x0);
        gbc.writeMem(0x59a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xa4d2);
        EXPECT(gbc.pc(), 0x59c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02DA
        gbc.setState(0xdaf3, 0x6e39, 0xa9f0, 0xca0a, 0x9daa, 0xd11, 0x0, 0x1);
        gbc.writeMem(0xdaf3, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x6e39);
        EXPECT(gbc.pc(), 0xdaf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaf3), 0xcb);
        EXPECT(gbc.readMem(0xdaf4), 0x4d);
        // CB 4D 02DB
        gbc.setState(0xdf2d, 0xb6d5, 0xfd40, 0x19fc, 0x1cd5, 0xb239, 0x1, 0x0);
        gbc.writeMem(0xdf2d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xb6d5);
        EXPECT(gbc.pc(), 0xdf2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf2d), 0xcb);
        EXPECT(gbc.readMem(0xdf2e), 0x4d);
        // CB 4D 02DC
        gbc.setState(0x3900, 0x4e58, 0x94f0, 0x1986, 0x57dd, 0x2884, 0x0, 0x1);
        gbc.writeMem(0x3900, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4e58);
        EXPECT(gbc.pc(), 0x3902);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 02DD
        gbc.setState(0x3759, 0xc730, 0x3400, 0x926, 0x8678, 0x806d, 0x1, 0x0);
        gbc.writeMem(0x3759, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc730);
        EXPECT(gbc.pc(), 0x375b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02DE
        gbc.setState(0xe454, 0xd809, 0x4b50, 0x3949, 0xb5c5, 0xf98e, 0x0, 0x1);
        gbc.writeMem(0xe454, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd809);
        EXPECT(gbc.pc(), 0xe456);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe454), 0xcb);
        EXPECT(gbc.readMem(0xe455), 0x4d);
        // CB 4D 02DF
        gbc.setState(0x9d6a, 0xbffe, 0x9960, 0x60ae, 0x1fda, 0x90a9, 0x0, 0x0);
        gbc.writeMem(0x9d6a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xbffe);
        EXPECT(gbc.pc(), 0x9d6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d6a), 0xcb);
        EXPECT(gbc.readMem(0x9d6b), 0x4d);
        // CB 4D 02E0
        gbc.setState(0x33a, 0x3945, 0x3db0, 0xbfbc, 0x565, 0x5bb4, 0x0, 0x1);
        gbc.writeMem(0x33a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x3945);
        EXPECT(gbc.pc(), 0x33c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 02E1
        gbc.setState(0x9ea0, 0x68a5, 0x7050, 0x60a5, 0x873b, 0x1635, 0x1, 0x0);
        gbc.writeMem(0x9ea0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x68a5);
        EXPECT(gbc.pc(), 0x9ea2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ea0), 0xcb);
        EXPECT(gbc.readMem(0x9ea1), 0x4d);
        // CB 4D 02E2
        gbc.setState(0x85e5, 0x847a, 0xdfa0, 0x724a, 0x49f8, 0x493f, 0x0, 0x0);
        gbc.writeMem(0x85e5, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x847a);
        EXPECT(gbc.pc(), 0x85e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85e5), 0xcb);
        EXPECT(gbc.readMem(0x85e6), 0x4d);
        // CB 4D 02E3
        gbc.setState(0x1f73, 0x6ddc, 0x5860, 0x8671, 0xca96, 0x98f3, 0x1, 0x0);
        gbc.writeMem(0x1f73, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6ddc);
        EXPECT(gbc.pc(), 0x1f75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02E4
        gbc.setState(0xc30, 0x7d2a, 0x2fe0, 0xcc93, 0x24dc, 0x5ef5, 0x0, 0x0);
        gbc.writeMem(0xc30, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7d2a);
        EXPECT(gbc.pc(), 0xc32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02E5
        gbc.setState(0x77ab, 0x8e84, 0xcdf0, 0x83a5, 0x2bba, 0x6616, 0x0, 0x1);
        gbc.writeMem(0x77ab, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8e84);
        EXPECT(gbc.pc(), 0x77ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 02E6
        gbc.setState(0x9724, 0x197, 0x7e60, 0x32f3, 0xec43, 0x6c0f, 0x0, 0x1);
        gbc.writeMem(0x9724, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x197);
        EXPECT(gbc.pc(), 0x9726);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9724), 0xcb);
        EXPECT(gbc.readMem(0x9725), 0x4d);
        // CB 4D 02E7
        gbc.setState(0x32b0, 0x706c, 0x11a0, 0x4a15, 0x8114, 0xcaa3, 0x0, 0x1);
        gbc.writeMem(0x32b0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x706c);
        EXPECT(gbc.pc(), 0x32b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02E8
        gbc.setState(0x948e, 0x9e32, 0x9450, 0x6298, 0xde71, 0x11ec, 0x0, 0x0);
        gbc.writeMem(0x948e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x9e32);
        EXPECT(gbc.pc(), 0x9490);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x948e), 0xcb);
        EXPECT(gbc.readMem(0x948f), 0x4d);
        // CB 4D 02E9
        gbc.setState(0xd75, 0x4ef7, 0xbd40, 0xe996, 0x89ba, 0x2c88, 0x0, 0x0);
        gbc.writeMem(0xd75, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x4ef7);
        EXPECT(gbc.pc(), 0xd77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02EA
        gbc.setState(0xae41, 0xfada, 0xc020, 0x9bda, 0x1488, 0x58be, 0x0, 0x1);
        gbc.writeMem(0xae41, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xfada);
        EXPECT(gbc.pc(), 0xae43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae41), 0xcb);
        EXPECT(gbc.readMem(0xae42), 0x4d);
        // CB 4D 02EB
        gbc.setState(0x14b3, 0xf27c, 0x2640, 0x9109, 0x170, 0xac17, 0x1, 0x0);
        gbc.writeMem(0x14b3, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xf27c);
        EXPECT(gbc.pc(), 0x14b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02EC
        gbc.setState(0xd327, 0x658c, 0xaf90, 0x9337, 0xad4f, 0x6a93, 0x0, 0x0);
        gbc.writeMem(0xd327, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x658c);
        EXPECT(gbc.pc(), 0xd329);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd327), 0xcb);
        EXPECT(gbc.readMem(0xd328), 0x4d);
        // CB 4D 02ED
        gbc.setState(0x7bde, 0xa4c2, 0xe110, 0x4ded, 0x6c02, 0xe28d, 0x0, 0x1);
        gbc.writeMem(0x7bde, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa4c2);
        EXPECT(gbc.pc(), 0x7be0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 02F0
        gbc.setState(0x6c0f, 0x5221, 0x9190, 0xc978, 0x97b, 0x4b50, 0x0, 0x0);
        gbc.writeMem(0x6c0f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5221);
        EXPECT(gbc.pc(), 0x6c11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 02F1
        gbc.setState(0xe268, 0x868e, 0x2460, 0xf4d5, 0xf3f1, 0x252e, 0x0, 0x0);
        gbc.writeMem(0xe268, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x868e);
        EXPECT(gbc.pc(), 0xe26a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe268), 0xcb);
        EXPECT(gbc.readMem(0xe269), 0x4d);
        // CB 4D 02F3
        gbc.setState(0x40e9, 0x484f, 0xc210, 0x2966, 0xc9f2, 0x6c97, 0x1, 0x0);
        gbc.writeMem(0x40e9, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x484f);
        EXPECT(gbc.pc(), 0x40eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 02F4
        gbc.setState(0xb525, 0xa7d6, 0x9c0, 0x87cd, 0xe375, 0x3e8, 0x1, 0x1);
        gbc.writeMem(0xb525, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa7d6);
        EXPECT(gbc.pc(), 0xb527);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb525), 0xcb);
        EXPECT(gbc.readMem(0xb526), 0x4d);
        // CB 4D 02F5
        gbc.setState(0xe256, 0xc933, 0x1e40, 0x8188, 0x51ac, 0x3686, 0x1, 0x1);
        gbc.writeMem(0xe256, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xc933);
        EXPECT(gbc.pc(), 0xe258);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe256), 0xcb);
        EXPECT(gbc.readMem(0xe257), 0x4d);
        // CB 4D 02F6
        gbc.setState(0xd9cd, 0x1835, 0x6f50, 0x814f, 0xacff, 0xaad0, 0x1, 0x0);
        gbc.writeMem(0xd9cd, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1835);
        EXPECT(gbc.pc(), 0xd9cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9cd), 0xcb);
        EXPECT(gbc.readMem(0xd9ce), 0x4d);
        // CB 4D 02F7
        gbc.setState(0x6926, 0xe5a3, 0x9ef0, 0xd10d, 0x312a, 0x9c4, 0x1, 0x1);
        gbc.writeMem(0x6926, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xe5a3);
        EXPECT(gbc.pc(), 0x6928);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 02F8
        gbc.setState(0xd66, 0x54f2, 0x9c30, 0x516b, 0x4176, 0xe92f, 0x1, 0x0);
        gbc.writeMem(0xd66, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x54f2);
        EXPECT(gbc.pc(), 0xd68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 02F9
        gbc.setState(0x330e, 0xc65, 0x2210, 0x72c2, 0x28f2, 0x7892, 0x1, 0x1);
        gbc.writeMem(0x330e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc65);
        EXPECT(gbc.pc(), 0x3310);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 02FA
        gbc.setState(0x661b, 0x6e29, 0x8350, 0xe4e3, 0xf491, 0x9b39, 0x0, 0x0);
        gbc.writeMem(0x661b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x6e29);
        EXPECT(gbc.pc(), 0x661d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 02FB
        gbc.setState(0x4176, 0x57d1, 0x6530, 0x8511, 0x6ff6, 0x7066, 0x0, 0x0);
        gbc.writeMem(0x4176, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x57d1);
        EXPECT(gbc.pc(), 0x4178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 02FC
        gbc.setState(0x7684, 0xda3, 0xabe0, 0x2fb3, 0x4f2f, 0xf8ad, 0x1, 0x1);
        gbc.writeMem(0x7684, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xda3);
        EXPECT(gbc.pc(), 0x7686);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 02FD
        gbc.setState(0xc7e0, 0x8c78, 0x7ed0, 0xc0, 0xa82e, 0xecd6, 0x1, 0x0);
        gbc.writeMem(0xc7e0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8c78);
        EXPECT(gbc.pc(), 0xc7e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7e0), 0xcb);
        EXPECT(gbc.readMem(0xc7e1), 0x4d);
        // CB 4D 02FE
        gbc.setState(0xe88, 0x20e6, 0xd5d0, 0x398c, 0xf4df, 0xfd91, 0x1, 0x1);
        gbc.writeMem(0xe88, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x20e6);
        EXPECT(gbc.pc(), 0xe8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 02FF
        gbc.setState(0x7529, 0x8b7f, 0x2b60, 0x48aa, 0xad7f, 0xd46, 0x1, 0x0);
        gbc.writeMem(0x7529, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x8b7f);
        EXPECT(gbc.pc(), 0x752b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0300
        gbc.setState(0x54e, 0x5624, 0xe800, 0x6223, 0x3047, 0xabbb, 0x1, 0x0);
        gbc.writeMem(0x54e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5624);
        EXPECT(gbc.pc(), 0x550);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0302
        gbc.setState(0x2063, 0xacb2, 0xc020, 0xa213, 0xb6e8, 0x855, 0x0, 0x0);
        gbc.writeMem(0x2063, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xacb2);
        EXPECT(gbc.pc(), 0x2065);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0303
        gbc.setState(0xe471, 0xc364, 0xb800, 0xdf86, 0xec80, 0x92f0, 0x1, 0x1);
        gbc.writeMem(0xe471, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc364);
        EXPECT(gbc.pc(), 0xe473);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe471), 0xcb);
        EXPECT(gbc.readMem(0xe472), 0x4d);
        // CB 4D 0304
        gbc.setState(0xf5e, 0xd1c, 0x7cb0, 0x8dc7, 0xce02, 0x9f62, 0x1, 0x0);
        gbc.writeMem(0xf5e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xd1c);
        EXPECT(gbc.pc(), 0xf60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0305
        gbc.setState(0x4cee, 0x718, 0xe730, 0x4ae6, 0xfe2c, 0x4989, 0x0, 0x1);
        gbc.writeMem(0x4cee, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x718);
        EXPECT(gbc.pc(), 0x4cf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0306
        gbc.setState(0x630b, 0x8a5d, 0x1c30, 0xe33e, 0x2639, 0x3111, 0x1, 0x1);
        gbc.writeMem(0x630b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x8a5d);
        EXPECT(gbc.pc(), 0x630d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0307
        gbc.setState(0x78e1, 0x9a0a, 0x2b20, 0xedfc, 0x1868, 0x5efa, 0x1, 0x1);
        gbc.writeMem(0x78e1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x9a0a);
        EXPECT(gbc.pc(), 0x78e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0308
        gbc.setState(0x9efd, 0x74a3, 0x8860, 0x585e, 0xced3, 0x4ab0, 0x0, 0x1);
        gbc.writeMem(0x9efd, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x74a3);
        EXPECT(gbc.pc(), 0x9eff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9efd), 0xcb);
        EXPECT(gbc.readMem(0x9efe), 0x4d);
        // CB 4D 0309
        gbc.setState(0x5e5e, 0xa7a0, 0x2480, 0xe537, 0xe61c, 0xeaa8, 0x1, 0x1);
        gbc.writeMem(0x5e5e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa7a0);
        EXPECT(gbc.pc(), 0x5e60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 030A
        gbc.setState(0x18a2, 0xeef6, 0x3770, 0x68bc, 0xe268, 0x8397, 0x1, 0x0);
        gbc.writeMem(0x18a2, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xeef6);
        EXPECT(gbc.pc(), 0x18a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 030C
        gbc.setState(0x8f34, 0x986e, 0x7d20, 0x6fab, 0x6164, 0x5a0e, 0x0, 0x1);
        gbc.writeMem(0x8f34, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x986e);
        EXPECT(gbc.pc(), 0x8f36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f34), 0xcb);
        EXPECT(gbc.readMem(0x8f35), 0x4d);
        // CB 4D 030D
        gbc.setState(0xb747, 0x883a, 0x9850, 0xe392, 0x5680, 0x768d, 0x1, 0x0);
        gbc.writeMem(0xb747, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x883a);
        EXPECT(gbc.pc(), 0xb749);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb747), 0xcb);
        EXPECT(gbc.readMem(0xb748), 0x4d);
        // CB 4D 030E
        gbc.setState(0x8ee7, 0x9c4c, 0xd0f0, 0x558e, 0x4d7c, 0x92a6, 0x1, 0x0);
        gbc.writeMem(0x8ee7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x9c4c);
        EXPECT(gbc.pc(), 0x8ee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ee7), 0xcb);
        EXPECT(gbc.readMem(0x8ee8), 0x4d);
        // CB 4D 030F
        gbc.setState(0xd5f3, 0xaae2, 0xace0, 0x17bb, 0x8c0a, 0x31c9, 0x1, 0x1);
        gbc.writeMem(0xd5f3, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xaae2);
        EXPECT(gbc.pc(), 0xd5f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5f3), 0xcb);
        EXPECT(gbc.readMem(0xd5f4), 0x4d);
        // CB 4D 0310
        gbc.setState(0x7212, 0x16c6, 0x80f0, 0x716e, 0xd15a, 0xbe2b, 0x1, 0x1);
        gbc.writeMem(0x7212, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x16c6);
        EXPECT(gbc.pc(), 0x7214);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0311
        gbc.setState(0x5ac7, 0x231c, 0x2f50, 0x4c74, 0x238d, 0x53a0, 0x0, 0x1);
        gbc.writeMem(0x5ac7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x231c);
        EXPECT(gbc.pc(), 0x5ac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0312
        gbc.setState(0xb221, 0x6f3f, 0xd300, 0x5e78, 0x6c96, 0xd68e, 0x1, 0x1);
        gbc.writeMem(0xb221, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x6f3f);
        EXPECT(gbc.pc(), 0xb223);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb221), 0xcb);
        EXPECT(gbc.readMem(0xb222), 0x4d);
        // CB 4D 0313
        gbc.setState(0x3dc7, 0xfbef, 0x9800, 0xa7f3, 0x4deb, 0x2e63, 0x1, 0x0);
        gbc.writeMem(0x3dc7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xfbef);
        EXPECT(gbc.pc(), 0x3dc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0314
        gbc.setState(0x5687, 0x9c98, 0x74f0, 0x2201, 0x416f, 0x1502, 0x1, 0x0);
        gbc.writeMem(0x5687, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x9c98);
        EXPECT(gbc.pc(), 0x5689);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0315
        gbc.setState(0xc6f6, 0x9563, 0x75e0, 0x23b8, 0x421e, 0xf056, 0x1, 0x1);
        gbc.writeMem(0xc6f6, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x9563);
        EXPECT(gbc.pc(), 0xc6f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6f6), 0xcb);
        EXPECT(gbc.readMem(0xc6f7), 0x4d);
        // CB 4D 0316
        gbc.setState(0x53a1, 0xe169, 0xbc10, 0x842a, 0xa2e0, 0x47b9, 0x1, 0x0);
        gbc.writeMem(0x53a1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe169);
        EXPECT(gbc.pc(), 0x53a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0317
        gbc.setState(0xb4eb, 0x5f88, 0xf00, 0xd44e, 0x9b35, 0xf4b9, 0x0, 0x1);
        gbc.writeMem(0xb4eb, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5f88);
        EXPECT(gbc.pc(), 0xb4ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4eb), 0xcb);
        EXPECT(gbc.readMem(0xb4ec), 0x4d);
        // CB 4D 0318
        gbc.setState(0xd4dd, 0xa65a, 0x8930, 0x2c03, 0x5ce4, 0x5e6c, 0x1, 0x1);
        gbc.writeMem(0xd4dd, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa65a);
        EXPECT(gbc.pc(), 0xd4df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4dd), 0xcb);
        EXPECT(gbc.readMem(0xd4de), 0x4d);
        // CB 4D 0319
        gbc.setState(0x4f5b, 0xd11a, 0xd510, 0x9bd4, 0xd580, 0x8f3a, 0x0, 0x1);
        gbc.writeMem(0x4f5b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd11a);
        EXPECT(gbc.pc(), 0x4f5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 031A
        gbc.setState(0x2fa3, 0xb6e9, 0x570, 0xd213, 0x54b0, 0xef85, 0x1, 0x1);
        gbc.writeMem(0x2fa3, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb6e9);
        EXPECT(gbc.pc(), 0x2fa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 031B
        gbc.setState(0x5bdb, 0xcf0a, 0x50a0, 0x77fe, 0x2f9, 0xba97, 0x1, 0x1);
        gbc.writeMem(0x5bdb, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xcf0a);
        EXPECT(gbc.pc(), 0x5bdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 031C
        gbc.setState(0x8d2d, 0x7e4f, 0x8230, 0xbc3e, 0xed8d, 0x8b6, 0x0, 0x0);
        gbc.writeMem(0x8d2d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7e4f);
        EXPECT(gbc.pc(), 0x8d2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d2d), 0xcb);
        EXPECT(gbc.readMem(0x8d2e), 0x4d);
        // CB 4D 031D
        gbc.setState(0x98e1, 0x5703, 0xe220, 0xb113, 0xb776, 0xca19, 0x1, 0x0);
        gbc.writeMem(0x98e1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x5703);
        EXPECT(gbc.pc(), 0x98e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98e1), 0xcb);
        EXPECT(gbc.readMem(0x98e2), 0x4d);
        // CB 4D 031E
        gbc.setState(0x2234, 0x2468, 0xdad0, 0xa230, 0x2f27, 0x7c7f, 0x1, 0x0);
        gbc.writeMem(0x2234, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2468);
        EXPECT(gbc.pc(), 0x2236);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 031F
        gbc.setState(0xdd0, 0x56d6, 0x17d0, 0x473d, 0x169c, 0xb4e5, 0x1, 0x1);
        gbc.writeMem(0xdd0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x56d6);
        EXPECT(gbc.pc(), 0xdd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0320
        gbc.setState(0x1d8, 0x9fc6, 0xa370, 0xb4b, 0x995f, 0xf01e, 0x1, 0x1);
        gbc.writeMem(0x1d8, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x9fc6);
        EXPECT(gbc.pc(), 0x1da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0321
        gbc.setState(0x7d3e, 0xc42d, 0x8cf0, 0x2cf1, 0x8110, 0xf7eb, 0x0, 0x1);
        gbc.writeMem(0x7d3e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc42d);
        EXPECT(gbc.pc(), 0x7d40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0322
        gbc.setState(0x6429, 0x1073, 0xfbd0, 0x7f1a, 0x1fe2, 0xac18, 0x0, 0x1);
        gbc.writeMem(0x6429, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1073);
        EXPECT(gbc.pc(), 0x642b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0323
        gbc.setState(0xc800, 0xec81, 0xd070, 0x6bc7, 0xb9c9, 0x8491, 0x0, 0x0);
        gbc.writeMem(0xc800, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xec81);
        EXPECT(gbc.pc(), 0xc802);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc800), 0xcb);
        EXPECT(gbc.readMem(0xc801), 0x4d);
        // CB 4D 0324
        gbc.setState(0x219f, 0x40e8, 0xd400, 0x833a, 0x9c3c, 0xddd2, 0x0, 0x0);
        gbc.writeMem(0x219f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x40e8);
        EXPECT(gbc.pc(), 0x21a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0325
        gbc.setState(0xdeb1, 0x2cce, 0x6980, 0x2a24, 0xf539, 0x17c4, 0x1, 0x1);
        gbc.writeMem(0xdeb1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x2cce);
        EXPECT(gbc.pc(), 0xdeb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeb1), 0xcb);
        EXPECT(gbc.readMem(0xdeb2), 0x4d);
        // CB 4D 0326
        gbc.setState(0x4aef, 0x1264, 0x9410, 0x13a1, 0x764c, 0x7c17, 0x0, 0x1);
        gbc.writeMem(0x4aef, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x1264);
        EXPECT(gbc.pc(), 0x4af1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0327
        gbc.setState(0x9980, 0x50fc, 0x35a0, 0x7230, 0xacd7, 0xe394, 0x1, 0x1);
        gbc.writeMem(0x9980, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x50fc);
        EXPECT(gbc.pc(), 0x9982);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9980), 0xcb);
        EXPECT(gbc.readMem(0x9981), 0x4d);
        // CB 4D 0328
        gbc.setState(0x5c0d, 0x478c, 0x2530, 0x28c, 0x125, 0xf12c, 0x1, 0x1);
        gbc.writeMem(0x5c0d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x478c);
        EXPECT(gbc.pc(), 0x5c0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 032A
        gbc.setState(0x3889, 0xb69, 0x8580, 0x50d9, 0x5f32, 0xbd4b, 0x1, 0x1);
        gbc.writeMem(0x3889, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xb69);
        EXPECT(gbc.pc(), 0x388b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 032B
        gbc.setState(0x6eaf, 0xd226, 0xfdd0, 0xe5f4, 0xdec2, 0xd2fa, 0x1, 0x1);
        gbc.writeMem(0x6eaf, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd226);
        EXPECT(gbc.pc(), 0x6eb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 032D
        gbc.setState(0xc374, 0xd7d1, 0xa3e0, 0x757d, 0x58bb, 0x3b18, 0x1, 0x1);
        gbc.writeMem(0xc374, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd7d1);
        EXPECT(gbc.pc(), 0xc376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc374), 0xcb);
        EXPECT(gbc.readMem(0xc375), 0x4d);
        // CB 4D 032E
        gbc.setState(0x9d0a, 0xa85a, 0x20c0, 0x2d1, 0x9f4f, 0x12d4, 0x0, 0x0);
        gbc.writeMem(0x9d0a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa85a);
        EXPECT(gbc.pc(), 0x9d0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d0a), 0xcb);
        EXPECT(gbc.readMem(0x9d0b), 0x4d);
        // CB 4D 032F
        gbc.setState(0x42d7, 0x3e5a, 0x4010, 0xb305, 0x37af, 0xab1d, 0x0, 0x1);
        gbc.writeMem(0x42d7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3e5a);
        EXPECT(gbc.pc(), 0x42d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0331
        gbc.setState(0x87dd, 0x4ff2, 0x5510, 0xd858, 0x1c2e, 0xbc59, 0x1, 0x0);
        gbc.writeMem(0x87dd, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4ff2);
        EXPECT(gbc.pc(), 0x87df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87dd), 0xcb);
        EXPECT(gbc.readMem(0x87de), 0x4d);
        // CB 4D 0332
        gbc.setState(0xe4f0, 0x79db, 0x4a50, 0x5833, 0x389e, 0x15aa, 0x1, 0x0);
        gbc.writeMem(0xe4f0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x79db);
        EXPECT(gbc.pc(), 0xe4f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4f0), 0xcb);
        EXPECT(gbc.readMem(0xe4f1), 0x4d);
        // CB 4D 0333
        gbc.setState(0x397b, 0x1e0d, 0xdc70, 0xeda2, 0xabe5, 0x2e6b, 0x0, 0x0);
        gbc.writeMem(0x397b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1e0d);
        EXPECT(gbc.pc(), 0x397d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0334
        gbc.setState(0xe243, 0x608a, 0x1350, 0x9e30, 0x462d, 0x3d6e, 0x0, 0x0);
        gbc.writeMem(0xe243, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x608a);
        EXPECT(gbc.pc(), 0xe245);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe243), 0xcb);
        EXPECT(gbc.readMem(0xe244), 0x4d);
        // CB 4D 0335
        gbc.setState(0xd357, 0x74c1, 0x1690, 0xc741, 0x90f5, 0x388e, 0x0, 0x0);
        gbc.writeMem(0xd357, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x74c1);
        EXPECT(gbc.pc(), 0xd359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd357), 0xcb);
        EXPECT(gbc.readMem(0xd358), 0x4d);
        // CB 4D 0337
        gbc.setState(0x3192, 0xbac5, 0x8a90, 0x36b0, 0x94c2, 0x7c68, 0x1, 0x0);
        gbc.writeMem(0x3192, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xbac5);
        EXPECT(gbc.pc(), 0x3194);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0338
        gbc.setState(0xc704, 0x6fa5, 0xe060, 0x284c, 0xf136, 0x1104, 0x1, 0x0);
        gbc.writeMem(0xc704, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6fa5);
        EXPECT(gbc.pc(), 0xc706);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc704), 0xcb);
        EXPECT(gbc.readMem(0xc705), 0x4d);
        // CB 4D 0339
        gbc.setState(0x15b2, 0xfcba, 0xb1e0, 0x79e, 0x66e1, 0xdbde, 0x1, 0x0);
        gbc.writeMem(0x15b2, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xfcba);
        EXPECT(gbc.pc(), 0x15b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 033A
        gbc.setState(0x7509, 0xb531, 0xfe80, 0x26b2, 0xbc82, 0xc33c, 0x1, 0x0);
        gbc.writeMem(0x7509, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb531);
        EXPECT(gbc.pc(), 0x750b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 033B
        gbc.setState(0xb397, 0xa4ee, 0x7600, 0x81a2, 0xf91d, 0xaf1c, 0x0, 0x1);
        gbc.writeMem(0xb397, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xa4ee);
        EXPECT(gbc.pc(), 0xb399);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb397), 0xcb);
        EXPECT(gbc.readMem(0xb398), 0x4d);
        // CB 4D 033C
        gbc.setState(0x9f19, 0x8c41, 0x2be0, 0x18d0, 0x9dc7, 0xca9f, 0x1, 0x1);
        gbc.writeMem(0x9f19, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x8c41);
        EXPECT(gbc.pc(), 0x9f1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f19), 0xcb);
        EXPECT(gbc.readMem(0x9f1a), 0x4d);
        // CB 4D 033D
        gbc.setState(0x4d62, 0xce58, 0x5630, 0x35ee, 0xa18d, 0x4799, 0x0, 0x0);
        gbc.writeMem(0x4d62, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xce58);
        EXPECT(gbc.pc(), 0x4d64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 033F
        gbc.setState(0x6e5, 0xfb94, 0xe5e0, 0x8a8b, 0xb913, 0x8f3d, 0x1, 0x1);
        gbc.writeMem(0x6e5, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xfb94);
        EXPECT(gbc.pc(), 0x6e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0340
        gbc.setState(0xde19, 0xe091, 0x2290, 0x4b89, 0x7dfb, 0xff3a, 0x0, 0x1);
        gbc.writeMem(0xde19, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe091);
        EXPECT(gbc.pc(), 0xde1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde19), 0xcb);
        EXPECT(gbc.readMem(0xde1a), 0x4d);
        // CB 4D 0341
        gbc.setState(0x3ca1, 0x2ef9, 0xbed0, 0x2c00, 0x3827, 0x65b9, 0x1, 0x0);
        gbc.writeMem(0x3ca1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2ef9);
        EXPECT(gbc.pc(), 0x3ca3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0342
        gbc.setState(0xb855, 0x4616, 0x48e0, 0x78d9, 0xb478, 0x417, 0x1, 0x1);
        gbc.writeMem(0xb855, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x4616);
        EXPECT(gbc.pc(), 0xb857);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb855), 0xcb);
        EXPECT(gbc.readMem(0xb856), 0x4d);
        // CB 4D 0343
        gbc.setState(0xa4aa, 0x3e9b, 0xab60, 0x15ab, 0x5ba8, 0x449b, 0x1, 0x1);
        gbc.writeMem(0xa4aa, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x3e9b);
        EXPECT(gbc.pc(), 0xa4ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4aa), 0xcb);
        EXPECT(gbc.readMem(0xa4ab), 0x4d);
        // CB 4D 0344
        gbc.setState(0xa80d, 0xd4e6, 0x2b80, 0xa884, 0x9b44, 0x2201, 0x1, 0x1);
        gbc.writeMem(0xa80d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd4e6);
        EXPECT(gbc.pc(), 0xa80f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa80d), 0xcb);
        EXPECT(gbc.readMem(0xa80e), 0x4d);
        // CB 4D 0345
        gbc.setState(0x8dea, 0xecdd, 0x1bb0, 0xe26b, 0x6cfa, 0x6796, 0x0, 0x0);
        gbc.writeMem(0x8dea, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xecdd);
        EXPECT(gbc.pc(), 0x8dec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dea), 0xcb);
        EXPECT(gbc.readMem(0x8deb), 0x4d);
        // CB 4D 0346
        gbc.setState(0xa2d7, 0x3f1, 0xf190, 0xf053, 0x3936, 0xded2, 0x0, 0x1);
        gbc.writeMem(0xa2d7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x3f1);
        EXPECT(gbc.pc(), 0xa2d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2d7), 0xcb);
        EXPECT(gbc.readMem(0xa2d8), 0x4d);
        // CB 4D 0347
        gbc.setState(0x6040, 0xac5a, 0xf860, 0xe08d, 0x6c37, 0x3250, 0x0, 0x0);
        gbc.writeMem(0x6040, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xac5a);
        EXPECT(gbc.pc(), 0x6042);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0348
        gbc.setState(0x21fa, 0x909c, 0x5520, 0x3170, 0xe66f, 0x6cbb, 0x0, 0x1);
        gbc.writeMem(0x21fa, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x909c);
        EXPECT(gbc.pc(), 0x21fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0349
        gbc.setState(0x2da0, 0x60ef, 0xfa50, 0xd0b2, 0xabdc, 0x4c0f, 0x0, 0x0);
        gbc.writeMem(0x2da0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x60ef);
        EXPECT(gbc.pc(), 0x2da2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 034A
        gbc.setState(0xec7, 0x7b53, 0xdc60, 0xd1a6, 0x650e, 0x212c, 0x1, 0x0);
        gbc.writeMem(0xec7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7b53);
        EXPECT(gbc.pc(), 0xec9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 034B
        gbc.setState(0xba2d, 0xc6e9, 0x4180, 0x17a8, 0x211e, 0x805f, 0x0, 0x1);
        gbc.writeMem(0xba2d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xc6e9);
        EXPECT(gbc.pc(), 0xba2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba2d), 0xcb);
        EXPECT(gbc.readMem(0xba2e), 0x4d);
        // CB 4D 034C
        gbc.setState(0xe793, 0xc135, 0xb620, 0xa991, 0x335a, 0xf10, 0x0, 0x1);
        gbc.writeMem(0xe793, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc135);
        EXPECT(gbc.pc(), 0xe795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe793), 0xcb);
        EXPECT(gbc.readMem(0xe794), 0x4d);
        // CB 4D 034D
        gbc.setState(0x80c3, 0xc952, 0xf530, 0xcc86, 0x2153, 0x7ff, 0x1, 0x1);
        gbc.writeMem(0x80c3, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc952);
        EXPECT(gbc.pc(), 0x80c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80c3), 0xcb);
        EXPECT(gbc.readMem(0x80c4), 0x4d);
        // CB 4D 034E
        gbc.setState(0xeea2, 0x13c5, 0x1e40, 0xf7e7, 0x258f, 0x6cac, 0x1, 0x0);
        gbc.writeMem(0xeea2, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x13c5);
        EXPECT(gbc.pc(), 0xeea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeea2), 0xcb);
        EXPECT(gbc.readMem(0xeea3), 0x4d);
        // CB 4D 034F
        gbc.setState(0xd7e9, 0x29eb, 0xf00, 0x87bc, 0x620b, 0x5293, 0x1, 0x0);
        gbc.writeMem(0xd7e9, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x29eb);
        EXPECT(gbc.pc(), 0xd7eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7e9), 0xcb);
        EXPECT(gbc.readMem(0xd7ea), 0x4d);
        // CB 4D 0350
        gbc.setState(0x5e3d, 0x7df9, 0xa4f0, 0x14f7, 0x5beb, 0xb75d, 0x0, 0x0);
        gbc.writeMem(0x5e3d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x7df9);
        EXPECT(gbc.pc(), 0x5e3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0351
        gbc.setState(0xed93, 0x2ce4, 0x60d0, 0x6d67, 0x6ac0, 0xf98a, 0x1, 0x1);
        gbc.writeMem(0xed93, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x2ce4);
        EXPECT(gbc.pc(), 0xed95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed93), 0xcb);
        EXPECT(gbc.readMem(0xed94), 0x4d);
        // CB 4D 0352
        gbc.setState(0x84cc, 0x580d, 0x1b10, 0x4f5, 0x6ca4, 0xe118, 0x1, 0x0);
        gbc.writeMem(0x84cc, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x580d);
        EXPECT(gbc.pc(), 0x84ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84cc), 0xcb);
        EXPECT(gbc.readMem(0x84cd), 0x4d);
        // CB 4D 0353
        gbc.setState(0x7eaa, 0x82bc, 0xe180, 0x5de3, 0xd5b2, 0xa74c, 0x0, 0x0);
        gbc.writeMem(0x7eaa, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x82bc);
        EXPECT(gbc.pc(), 0x7eac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0354
        gbc.setState(0x2309, 0x8bd9, 0x7c10, 0x46ec, 0x2eb7, 0x13eb, 0x0, 0x1);
        gbc.writeMem(0x2309, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x8bd9);
        EXPECT(gbc.pc(), 0x230b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0355
        gbc.setState(0x6cd1, 0xf615, 0x61c0, 0x2d26, 0x6592, 0xbda7, 0x0, 0x0);
        gbc.writeMem(0x6cd1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf615);
        EXPECT(gbc.pc(), 0x6cd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0356
        gbc.setState(0x2009, 0x2b63, 0x7bc0, 0x52c3, 0x3a8a, 0xc8af, 0x0, 0x1);
        gbc.writeMem(0x2009, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2b63);
        EXPECT(gbc.pc(), 0x200b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0357
        gbc.setState(0x4a16, 0xa204, 0xa350, 0x130c, 0x5c25, 0xe6c8, 0x0, 0x0);
        gbc.writeMem(0x4a16, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa204);
        EXPECT(gbc.pc(), 0x4a18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0359
        gbc.setState(0xb186, 0x1282, 0x9fd0, 0x9d5f, 0x5732, 0x504c, 0x1, 0x0);
        gbc.writeMem(0xb186, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1282);
        EXPECT(gbc.pc(), 0xb188);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb186), 0xcb);
        EXPECT(gbc.readMem(0xb187), 0x4d);
        // CB 4D 035A
        gbc.setState(0x2a0b, 0x1eaa, 0x5e70, 0x5d24, 0xbbf7, 0x1a09, 0x1, 0x1);
        gbc.writeMem(0x2a0b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x1eaa);
        EXPECT(gbc.pc(), 0x2a0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 035B
        gbc.setState(0xdc98, 0x7142, 0x8670, 0x4840, 0x1b8e, 0xe589, 0x1, 0x0);
        gbc.writeMem(0xdc98, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7142);
        EXPECT(gbc.pc(), 0xdc9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc98), 0xcb);
        EXPECT(gbc.readMem(0xdc99), 0x4d);
        // CB 4D 035C
        gbc.setState(0xc938, 0x5fdb, 0x3650, 0x364c, 0x77a6, 0x9538, 0x1, 0x0);
        gbc.writeMem(0xc938, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x5fdb);
        EXPECT(gbc.pc(), 0xc93a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc938), 0xcb);
        EXPECT(gbc.readMem(0xc939), 0x4d);
        // CB 4D 035D
        gbc.setState(0x92a5, 0x7dfa, 0xc890, 0x5bf3, 0xe167, 0xf787, 0x0, 0x0);
        gbc.writeMem(0x92a5, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7dfa);
        EXPECT(gbc.pc(), 0x92a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92a5), 0xcb);
        EXPECT(gbc.readMem(0x92a6), 0x4d);
        // CB 4D 035E
        gbc.setState(0x35e6, 0x27c3, 0x6300, 0x9db, 0xfcec, 0x1b02, 0x0, 0x1);
        gbc.writeMem(0x35e6, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x27c3);
        EXPECT(gbc.pc(), 0x35e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 035F
        gbc.setState(0xb1f5, 0xd238, 0x9520, 0xa84d, 0x747a, 0xf91f, 0x1, 0x1);
        gbc.writeMem(0xb1f5, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xd238);
        EXPECT(gbc.pc(), 0xb1f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1f5), 0xcb);
        EXPECT(gbc.readMem(0xb1f6), 0x4d);
        // CB 4D 0360
        gbc.setState(0xdaa1, 0xbb91, 0x59c0, 0x9c1a, 0xf514, 0x7b9e, 0x1, 0x1);
        gbc.writeMem(0xdaa1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xbb91);
        EXPECT(gbc.pc(), 0xdaa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaa1), 0xcb);
        EXPECT(gbc.readMem(0xdaa2), 0x4d);
        // CB 4D 0361
        gbc.setState(0x9e6c, 0x3a43, 0x4730, 0xc3cc, 0x7175, 0x3f1a, 0x0, 0x1);
        gbc.writeMem(0x9e6c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3a43);
        EXPECT(gbc.pc(), 0x9e6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e6c), 0xcb);
        EXPECT(gbc.readMem(0x9e6d), 0x4d);
        // CB 4D 0362
        gbc.setState(0x8495, 0xa729, 0x6b50, 0x30a6, 0xdd84, 0x7f0c, 0x1, 0x1);
        gbc.writeMem(0x8495, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa729);
        EXPECT(gbc.pc(), 0x8497);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8495), 0xcb);
        EXPECT(gbc.readMem(0x8496), 0x4d);
        // CB 4D 0363
        gbc.setState(0x5a72, 0xf41e, 0xe6b0, 0xbe19, 0x4763, 0xdc4b, 0x0, 0x0);
        gbc.writeMem(0x5a72, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf41e);
        EXPECT(gbc.pc(), 0x5a74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0364
        gbc.setState(0x9cd7, 0x6e4, 0x7370, 0x311b, 0x14fa, 0xc4dd, 0x1, 0x1);
        gbc.writeMem(0x9cd7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x6e4);
        EXPECT(gbc.pc(), 0x9cd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cd7), 0xcb);
        EXPECT(gbc.readMem(0x9cd8), 0x4d);
        // CB 4D 0365
        gbc.setState(0x6da8, 0xe6a2, 0x190, 0x757, 0x37e6, 0xca0c, 0x1, 0x1);
        gbc.writeMem(0x6da8, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xe6a2);
        EXPECT(gbc.pc(), 0x6daa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0366
        gbc.setState(0x99b6, 0xd12e, 0x57c0, 0x7fb9, 0xea79, 0x1305, 0x1, 0x1);
        gbc.writeMem(0x99b6, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd12e);
        EXPECT(gbc.pc(), 0x99b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99b6), 0xcb);
        EXPECT(gbc.readMem(0x99b7), 0x4d);
        // CB 4D 0367
        gbc.setState(0xd5ed, 0xfd23, 0x9720, 0xb054, 0x744b, 0x7e64, 0x1, 0x0);
        gbc.writeMem(0xd5ed, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xfd23);
        EXPECT(gbc.pc(), 0xd5ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5ed), 0xcb);
        EXPECT(gbc.readMem(0xd5ee), 0x4d);
        // CB 4D 0368
        gbc.setState(0x434a, 0x21dd, 0x6650, 0x1204, 0x5431, 0x7775, 0x1, 0x0);
        gbc.writeMem(0x434a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x21dd);
        EXPECT(gbc.pc(), 0x434c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0369
        gbc.setState(0x8428, 0x1ec, 0x9900, 0x2c7c, 0x67bc, 0xe016, 0x0, 0x0);
        gbc.writeMem(0x8428, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x1ec);
        EXPECT(gbc.pc(), 0x842a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8428), 0xcb);
        EXPECT(gbc.readMem(0x8429), 0x4d);
        // CB 4D 036A
        gbc.setState(0x1ed5, 0xeb52, 0x8ee0, 0x793d, 0x8dc4, 0x1070, 0x1, 0x0);
        gbc.writeMem(0x1ed5, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xeb52);
        EXPECT(gbc.pc(), 0x1ed7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 036B
        gbc.setState(0xb307, 0x2f82, 0x2710, 0x1339, 0x18e, 0xcb8a, 0x1, 0x0);
        gbc.writeMem(0xb307, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x2f82);
        EXPECT(gbc.pc(), 0xb309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb307), 0xcb);
        EXPECT(gbc.readMem(0xb308), 0x4d);
        // CB 4D 036D
        gbc.setState(0x9330, 0x2081, 0x6e10, 0xd39a, 0xbdbf, 0x7b01, 0x0, 0x0);
        gbc.writeMem(0x9330, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2081);
        EXPECT(gbc.pc(), 0x9332);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9330), 0xcb);
        EXPECT(gbc.readMem(0x9331), 0x4d);
        // CB 4D 036E
        gbc.setState(0xb069, 0x1b99, 0xc0, 0x933f, 0x37b7, 0xf97d, 0x1, 0x1);
        gbc.writeMem(0xb069, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x1b99);
        EXPECT(gbc.pc(), 0xb06b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb069), 0xcb);
        EXPECT(gbc.readMem(0xb06a), 0x4d);
        // CB 4D 036F
        gbc.setState(0x8cc9, 0x2f8a, 0xf7e0, 0x5395, 0xd388, 0xf11a, 0x1, 0x0);
        gbc.writeMem(0x8cc9, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x2f8a);
        EXPECT(gbc.pc(), 0x8ccb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cc9), 0xcb);
        EXPECT(gbc.readMem(0x8cca), 0x4d);
        // CB 4D 0370
        gbc.setState(0x934e, 0x7d9f, 0xdf70, 0x8cd6, 0xc44, 0xf7b9, 0x1, 0x1);
        gbc.writeMem(0x934e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x7d9f);
        EXPECT(gbc.pc(), 0x9350);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x934e), 0xcb);
        EXPECT(gbc.readMem(0x934f), 0x4d);
        // CB 4D 0371
        gbc.setState(0x29e2, 0x1a95, 0xdc0, 0x9571, 0xeca3, 0xf984, 0x1, 0x1);
        gbc.writeMem(0x29e2, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x1a95);
        EXPECT(gbc.pc(), 0x29e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0372
        gbc.setState(0xc6ea, 0x7c03, 0x7030, 0xcdee, 0x88f0, 0xd01c, 0x1, 0x1);
        gbc.writeMem(0xc6ea, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7c03);
        EXPECT(gbc.pc(), 0xc6ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6ea), 0xcb);
        EXPECT(gbc.readMem(0xc6eb), 0x4d);
        // CB 4D 0373
        gbc.setState(0xdbae, 0xe34d, 0x900, 0xa438, 0xbbd7, 0x3cb6, 0x1, 0x1);
        gbc.writeMem(0xdbae, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe34d);
        EXPECT(gbc.pc(), 0xdbb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbae), 0xcb);
        EXPECT(gbc.readMem(0xdbaf), 0x4d);
        // CB 4D 0374
        gbc.setState(0x6dbb, 0x7e35, 0x8d80, 0x5a6d, 0xa1f3, 0x1f0b, 0x0, 0x1);
        gbc.writeMem(0x6dbb, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x7e35);
        EXPECT(gbc.pc(), 0x6dbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0375
        gbc.setState(0xbbff, 0x3740, 0x670, 0x431d, 0x1006, 0x73b2, 0x0, 0x0);
        gbc.writeMem(0xbbff, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3740);
        EXPECT(gbc.pc(), 0xbc01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbff), 0xcb);
        EXPECT(gbc.readMem(0xbc00), 0x4d);
        // CB 4D 0376
        gbc.setState(0xd631, 0xb2ec, 0x710, 0x5158, 0x6034, 0xeb34, 0x0, 0x1);
        gbc.writeMem(0xd631, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb2ec);
        EXPECT(gbc.pc(), 0xd633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd631), 0xcb);
        EXPECT(gbc.readMem(0xd632), 0x4d);
        // CB 4D 0377
        gbc.setState(0x8978, 0xa368, 0xf530, 0x1e35, 0x3ca7, 0xee0a, 0x0, 0x0);
        gbc.writeMem(0x8978, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xa368);
        EXPECT(gbc.pc(), 0x897a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8978), 0xcb);
        EXPECT(gbc.readMem(0x8979), 0x4d);
        // CB 4D 0378
        gbc.setState(0x6a18, 0x3d20, 0xbdd0, 0xa986, 0x429d, 0x1ccf, 0x1, 0x0);
        gbc.writeMem(0x6a18, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3d20);
        EXPECT(gbc.pc(), 0x6a1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0379
        gbc.setState(0x2787, 0x3cc4, 0x8b00, 0x6002, 0x1486, 0x3c08, 0x0, 0x1);
        gbc.writeMem(0x2787, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x3cc4);
        EXPECT(gbc.pc(), 0x2789);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 037A
        gbc.setState(0x7105, 0xb27f, 0xbdf0, 0x7cfe, 0xf85a, 0x94bd, 0x1, 0x0);
        gbc.writeMem(0x7105, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xb27f);
        EXPECT(gbc.pc(), 0x7107);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 037B
        gbc.setState(0xb8ed, 0x16a1, 0x9890, 0x7872, 0xe565, 0xb366, 0x0, 0x1);
        gbc.writeMem(0xb8ed, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x16a1);
        EXPECT(gbc.pc(), 0xb8ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8ed), 0xcb);
        EXPECT(gbc.readMem(0xb8ee), 0x4d);
        // CB 4D 037C
        gbc.setState(0xf34, 0x8658, 0x6270, 0xa9ef, 0x594f, 0x5871, 0x0, 0x1);
        gbc.writeMem(0xf34, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x8658);
        EXPECT(gbc.pc(), 0xf36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 037D
        gbc.setState(0x5218, 0x8c03, 0x2aa0, 0x3146, 0x77f7, 0x37de, 0x1, 0x1);
        gbc.writeMem(0x5218, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x8c03);
        EXPECT(gbc.pc(), 0x521a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 037E
        gbc.setState(0x1773, 0x38ee, 0x4ee0, 0x4fe4, 0x70b7, 0x1e1, 0x0, 0x1);
        gbc.writeMem(0x1773, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x38ee);
        EXPECT(gbc.pc(), 0x1775);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 037F
        gbc.setState(0x3e5, 0x912b, 0xd230, 0x2794, 0xab4e, 0xe0e2, 0x1, 0x0);
        gbc.writeMem(0x3e5, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x912b);
        EXPECT(gbc.pc(), 0x3e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0380
        gbc.setState(0x5d06, 0x9291, 0x7ec0, 0x8a82, 0xcb72, 0x3213, 0x0, 0x0);
        gbc.writeMem(0x5d06, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x9291);
        EXPECT(gbc.pc(), 0x5d08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0381
        gbc.setState(0x36a3, 0xda43, 0xd6b0, 0xa3e7, 0xcd6d, 0x378e, 0x0, 0x0);
        gbc.writeMem(0x36a3, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xda43);
        EXPECT(gbc.pc(), 0x36a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0382
        gbc.setState(0x5b88, 0xc4f2, 0xa2a0, 0x5eed, 0xc13b, 0x319f, 0x0, 0x0);
        gbc.writeMem(0x5b88, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc4f2);
        EXPECT(gbc.pc(), 0x5b8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0383
        gbc.setState(0xdb79, 0xe821, 0xbf10, 0xfa79, 0xb563, 0x49f8, 0x1, 0x0);
        gbc.writeMem(0xdb79, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe821);
        EXPECT(gbc.pc(), 0xdb7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb79), 0xcb);
        EXPECT(gbc.readMem(0xdb7a), 0x4d);
        // CB 4D 0384
        gbc.setState(0xb707, 0xf1d7, 0x3de0, 0x3e8f, 0x4e8f, 0xce57, 0x0, 0x1);
        gbc.writeMem(0xb707, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf1d7);
        EXPECT(gbc.pc(), 0xb709);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb707), 0xcb);
        EXPECT(gbc.readMem(0xb708), 0x4d);
        // CB 4D 0385
        gbc.setState(0x2c95, 0x150f, 0xe270, 0xfab2, 0x6cfa, 0x2939, 0x1, 0x0);
        gbc.writeMem(0x2c95, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x150f);
        EXPECT(gbc.pc(), 0x2c97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0386
        gbc.setState(0x584c, 0xcee3, 0xb890, 0x4f5e, 0x4c6e, 0x1876, 0x0, 0x0);
        gbc.writeMem(0x584c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xcee3);
        EXPECT(gbc.pc(), 0x584e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0387
        gbc.setState(0x383b, 0xb051, 0x87e0, 0x8eab, 0xda94, 0xf10e, 0x1, 0x1);
        gbc.writeMem(0x383b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xb051);
        EXPECT(gbc.pc(), 0x383d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0388
        gbc.setState(0x589b, 0xba99, 0x89d0, 0xbbb8, 0x87c5, 0x5570, 0x1, 0x0);
        gbc.writeMem(0x589b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xba99);
        EXPECT(gbc.pc(), 0x589d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0389
        gbc.setState(0xdf55, 0x8c81, 0xd6c0, 0x1c8f, 0xa950, 0x9a55, 0x1, 0x0);
        gbc.writeMem(0xdf55, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8c81);
        EXPECT(gbc.pc(), 0xdf57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf55), 0xcb);
        EXPECT(gbc.readMem(0xdf56), 0x4d);
        // CB 4D 038B
        gbc.setState(0x82cf, 0xbb1e, 0x8270, 0xe1bc, 0xbbad, 0x3ab9, 0x1, 0x1);
        gbc.writeMem(0x82cf, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xbb1e);
        EXPECT(gbc.pc(), 0x82d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82cf), 0xcb);
        EXPECT(gbc.readMem(0x82d0), 0x4d);
        // CB 4D 038C
        gbc.setState(0xd3b4, 0x20bc, 0xe2c0, 0x2d12, 0x1ad8, 0x7c5e, 0x1, 0x0);
        gbc.writeMem(0xd3b4, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x20bc);
        EXPECT(gbc.pc(), 0xd3b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3b4), 0xcb);
        EXPECT(gbc.readMem(0xd3b5), 0x4d);
        // CB 4D 038D
        gbc.setState(0xc553, 0xee65, 0x57c0, 0x1ce2, 0x6752, 0x3704, 0x0, 0x0);
        gbc.writeMem(0xc553, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xee65);
        EXPECT(gbc.pc(), 0xc555);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc553), 0xcb);
        EXPECT(gbc.readMem(0xc554), 0x4d);
        // CB 4D 038E
        gbc.setState(0xed5, 0x5243, 0x4340, 0x661c, 0xa722, 0xb79, 0x0, 0x0);
        gbc.writeMem(0xed5, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x5243);
        EXPECT(gbc.pc(), 0xed7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 038F
        gbc.setState(0xb48, 0xf115, 0x8ca0, 0x1804, 0xc360, 0x7d2, 0x0, 0x1);
        gbc.writeMem(0xb48, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xf115);
        EXPECT(gbc.pc(), 0xb4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0390
        gbc.setState(0x71e5, 0x3f6a, 0xde10, 0xfab3, 0x532f, 0x778b, 0x0, 0x1);
        gbc.writeMem(0x71e5, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3f6a);
        EXPECT(gbc.pc(), 0x71e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0391
        gbc.setState(0x4430, 0x18df, 0x2b50, 0x8b6d, 0x5dd2, 0xd8dd, 0x1, 0x0);
        gbc.writeMem(0x4430, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x18df);
        EXPECT(gbc.pc(), 0x4432);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0392
        gbc.setState(0x7660, 0xa0c6, 0xffc0, 0xb645, 0xcff9, 0x45e1, 0x1, 0x1);
        gbc.writeMem(0x7660, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa0c6);
        EXPECT(gbc.pc(), 0x7662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0393
        gbc.setState(0x8c3b, 0xf51e, 0x6160, 0xe620, 0x1ed, 0x4b9d, 0x1, 0x0);
        gbc.writeMem(0x8c3b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf51e);
        EXPECT(gbc.pc(), 0x8c3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c3b), 0xcb);
        EXPECT(gbc.readMem(0x8c3c), 0x4d);
        // CB 4D 0394
        gbc.setState(0xc21c, 0x22f, 0x61a0, 0x45c6, 0x96b9, 0x1c8c, 0x1, 0x1);
        gbc.writeMem(0xc21c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x22f);
        EXPECT(gbc.pc(), 0xc21e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc21c), 0xcb);
        EXPECT(gbc.readMem(0xc21d), 0x4d);
        // CB 4D 0395
        gbc.setState(0x4fa0, 0x858a, 0x6d20, 0xc859, 0xd627, 0x3a00, 0x1, 0x1);
        gbc.writeMem(0x4fa0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x858a);
        EXPECT(gbc.pc(), 0x4fa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0396
        gbc.setState(0x3c7c, 0x5a41, 0xef50, 0xecea, 0xd9b7, 0xb3d0, 0x0, 0x0);
        gbc.writeMem(0x3c7c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x5a41);
        EXPECT(gbc.pc(), 0x3c7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0397
        gbc.setState(0x7d28, 0xae67, 0xc650, 0x748, 0x7734, 0xe96c, 0x1, 0x1);
        gbc.writeMem(0x7d28, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xae67);
        EXPECT(gbc.pc(), 0x7d2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 0398
        gbc.setState(0x39f5, 0xcba8, 0x3680, 0xa245, 0xaa18, 0xb218, 0x0, 0x0);
        gbc.writeMem(0x39f5, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xcba8);
        EXPECT(gbc.pc(), 0x39f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 0399
        gbc.setState(0x4424, 0xa841, 0x99e0, 0x9215, 0x9160, 0x2559, 0x1, 0x0);
        gbc.writeMem(0x4424, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa841);
        EXPECT(gbc.pc(), 0x4426);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 039A
        gbc.setState(0x659c, 0x1e15, 0xa390, 0xc73, 0xdd4f, 0x4e18, 0x1, 0x0);
        gbc.writeMem(0x659c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1e15);
        EXPECT(gbc.pc(), 0x659e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 039C
        gbc.setState(0x759e, 0x2b71, 0xba80, 0x3434, 0xfbf3, 0xbf96, 0x1, 0x0);
        gbc.writeMem(0x759e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2b71);
        EXPECT(gbc.pc(), 0x75a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 039D
        gbc.setState(0x9c9a, 0xc0d7, 0x6fc0, 0x815e, 0x2fde, 0x76d8, 0x0, 0x0);
        gbc.writeMem(0x9c9a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc0d7);
        EXPECT(gbc.pc(), 0x9c9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c9a), 0xcb);
        EXPECT(gbc.readMem(0x9c9b), 0x4d);
        // CB 4D 039E
        gbc.setState(0xe1a, 0x4d6c, 0xc260, 0x2661, 0x1c1, 0x3f4, 0x0, 0x0);
        gbc.writeMem(0xe1a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x4d6c);
        EXPECT(gbc.pc(), 0xe1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 039F
        gbc.setState(0xa97c, 0xdd01, 0xecc0, 0x387c, 0x4e65, 0x3e4a, 0x1, 0x0);
        gbc.writeMem(0xa97c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xdd01);
        EXPECT(gbc.pc(), 0xa97e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa97c), 0xcb);
        EXPECT(gbc.readMem(0xa97d), 0x4d);
        // CB 4D 03A0
        gbc.setState(0xc3e3, 0xaa00, 0x9820, 0x85ce, 0x9db, 0x991d, 0x1, 0x1);
        gbc.writeMem(0xc3e3, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xaa00);
        EXPECT(gbc.pc(), 0xc3e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3e3), 0xcb);
        EXPECT(gbc.readMem(0xc3e4), 0x4d);
        // CB 4D 03A2
        gbc.setState(0xbb88, 0x20f8, 0x3800, 0xd58d, 0x1e39, 0xfaf3, 0x1, 0x1);
        gbc.writeMem(0xbb88, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x20f8);
        EXPECT(gbc.pc(), 0xbb8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb88), 0xcb);
        EXPECT(gbc.readMem(0xbb89), 0x4d);
        // CB 4D 03A3
        gbc.setState(0xd6a1, 0x5d42, 0xdfc0, 0x6195, 0x8a6d, 0x2acb, 0x0, 0x1);
        gbc.writeMem(0xd6a1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5d42);
        EXPECT(gbc.pc(), 0xd6a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6a1), 0xcb);
        EXPECT(gbc.readMem(0xd6a2), 0x4d);
        // CB 4D 03A4
        gbc.setState(0xbdc4, 0x51e0, 0x63a0, 0xb537, 0xb553, 0x35e5, 0x1, 0x1);
        gbc.writeMem(0xbdc4, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x51e0);
        EXPECT(gbc.pc(), 0xbdc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdc4), 0xcb);
        EXPECT(gbc.readMem(0xbdc5), 0x4d);
        // CB 4D 03A5
        gbc.setState(0xb42e, 0x89ac, 0x33b0, 0x72ea, 0x27b9, 0x35ac, 0x0, 0x1);
        gbc.writeMem(0xb42e, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x89ac);
        EXPECT(gbc.pc(), 0xb430);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb42e), 0xcb);
        EXPECT(gbc.readMem(0xb42f), 0x4d);
        // CB 4D 03A6
        gbc.setState(0x3ecd, 0xef04, 0xec40, 0xfe23, 0x31cd, 0x50ff, 0x0, 0x1);
        gbc.writeMem(0x3ecd, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xef04);
        EXPECT(gbc.pc(), 0x3ecf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 03A7
        gbc.setState(0x598d, 0xa650, 0x49c0, 0xfd75, 0xd1eb, 0xa946, 0x0, 0x1);
        gbc.writeMem(0x598d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa650);
        EXPECT(gbc.pc(), 0x598f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 03A8
        gbc.setState(0x73d8, 0x6f48, 0xe920, 0x35bd, 0xcdb, 0x12af, 0x1, 0x0);
        gbc.writeMem(0x73d8, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6f48);
        EXPECT(gbc.pc(), 0x73da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 03A9
        gbc.setState(0x241a, 0x24a1, 0xf520, 0xfe2f, 0x1709, 0xfc60, 0x1, 0x0);
        gbc.writeMem(0x241a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x24a1);
        EXPECT(gbc.pc(), 0x241c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 03AA
        gbc.setState(0x3515, 0x4df6, 0x2b0, 0x691d, 0x8c65, 0xeaa4, 0x1, 0x1);
        gbc.writeMem(0x3515, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x4df6);
        EXPECT(gbc.pc(), 0x3517);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 03AB
        gbc.setState(0x52d7, 0x72c0, 0x8e0, 0x9db, 0x45f3, 0x3733, 0x0, 0x1);
        gbc.writeMem(0x52d7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x72c0);
        EXPECT(gbc.pc(), 0x52d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 03AC
        gbc.setState(0x11fc, 0xea12, 0x6f0, 0x4d67, 0x5cf1, 0xba99, 0x1, 0x0);
        gbc.writeMem(0x11fc, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xea12);
        EXPECT(gbc.pc(), 0x11fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 03AD
        gbc.setState(0xd8f0, 0x82fc, 0xeee0, 0xc9c6, 0xae68, 0xb88f, 0x1, 0x0);
        gbc.writeMem(0xd8f0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x82fc);
        EXPECT(gbc.pc(), 0xd8f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8f0), 0xcb);
        EXPECT(gbc.readMem(0xd8f1), 0x4d);
        // CB 4D 03AF
        gbc.setState(0x2851, 0x35cd, 0x7550, 0xe6cf, 0xe390, 0x65d9, 0x1, 0x1);
        gbc.writeMem(0x2851, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x35cd);
        EXPECT(gbc.pc(), 0x2853);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 03B0
        gbc.setState(0xc74, 0x8e8c, 0x7910, 0x8f19, 0x64, 0xc40b, 0x1, 0x0);
        gbc.writeMem(0xc74, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x8e8c);
        EXPECT(gbc.pc(), 0xc76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 03B1
        gbc.setState(0x26e7, 0x18b, 0xed60, 0x2fd6, 0xc09, 0x1a48, 0x1, 0x0);
        gbc.writeMem(0x26e7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x18b);
        EXPECT(gbc.pc(), 0x26e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 03B2
        gbc.setState(0xc61f, 0x906d, 0x3610, 0x6d1a, 0x8120, 0x77b1, 0x0, 0x1);
        gbc.writeMem(0xc61f, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x906d);
        EXPECT(gbc.pc(), 0xc621);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc61f), 0xcb);
        EXPECT(gbc.readMem(0xc620), 0x4d);
        // CB 4D 03B3
        gbc.setState(0x672d, 0x329e, 0x9300, 0x2d49, 0x380c, 0xd338, 0x1, 0x1);
        gbc.writeMem(0x672d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x329e);
        EXPECT(gbc.pc(), 0x672f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 03B4
        gbc.setState(0x10b, 0x4801, 0x31b0, 0x158b, 0x14dd, 0xa8db, 0x0, 0x0);
        gbc.writeMem(0x10b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4801);
        EXPECT(gbc.pc(), 0x10d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 03B6
        gbc.setState(0x8c99, 0xc11d, 0xd600, 0x6431, 0xe2af, 0x39b0, 0x0, 0x1);
        gbc.writeMem(0x8c99, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc11d);
        EXPECT(gbc.pc(), 0x8c9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c99), 0xcb);
        EXPECT(gbc.readMem(0x8c9a), 0x4d);
        // CB 4D 03B7
        gbc.setState(0xdbf, 0x705c, 0x5de0, 0x8126, 0x847c, 0x5f73, 0x0, 0x0);
        gbc.writeMem(0xdbf, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x705c);
        EXPECT(gbc.pc(), 0xdc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 03B8
        gbc.setState(0x3be0, 0x9b6e, 0xdb80, 0x7079, 0xed94, 0x7ea3, 0x1, 0x0);
        gbc.writeMem(0x3be0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9b6e);
        EXPECT(gbc.pc(), 0x3be2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 03B9
        gbc.setState(0x7d83, 0x53a, 0xcd80, 0x3715, 0xa5a3, 0x9db1, 0x1, 0x0);
        gbc.writeMem(0x7d83, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x53a);
        EXPECT(gbc.pc(), 0x7d85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 03BA
        gbc.setState(0xcb67, 0xc244, 0x6830, 0xe9e8, 0x3ce, 0xad42, 0x0, 0x0);
        gbc.writeMem(0xcb67, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xc244);
        EXPECT(gbc.pc(), 0xcb69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb67), 0xcb);
        EXPECT(gbc.readMem(0xcb68), 0x4d);
        // CB 4D 03BB
        gbc.setState(0xb27a, 0xf236, 0x20a0, 0x41d5, 0x67f3, 0x7138, 0x0, 0x0);
        gbc.writeMem(0xb27a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf236);
        EXPECT(gbc.pc(), 0xb27c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb27a), 0xcb);
        EXPECT(gbc.readMem(0xb27b), 0x4d);
        // CB 4D 03BC
        gbc.setState(0x80e2, 0x46a5, 0xb590, 0xa67b, 0x1349, 0x2a0a, 0x1, 0x1);
        gbc.writeMem(0x80e2, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x46a5);
        EXPECT(gbc.pc(), 0x80e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80e2), 0xcb);
        EXPECT(gbc.readMem(0x80e3), 0x4d);
        // CB 4D 03BD
        gbc.setState(0xd972, 0x69e7, 0x8030, 0x7d51, 0x7bbf, 0xcb2d, 0x1, 0x0);
        gbc.writeMem(0xd972, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x69e7);
        EXPECT(gbc.pc(), 0xd974);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd972), 0xcb);
        EXPECT(gbc.readMem(0xd973), 0x4d);
        // CB 4D 03BE
        gbc.setState(0x3880, 0xaf63, 0x8b0, 0x5775, 0x6e93, 0x2a0f, 0x1, 0x0);
        gbc.writeMem(0x3880, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xaf63);
        EXPECT(gbc.pc(), 0x3882);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 03BF
        gbc.setState(0x1020, 0x76a, 0x9390, 0xb4ce, 0xc9f9, 0xd2e1, 0x1, 0x1);
        gbc.writeMem(0x1020, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x76a);
        EXPECT(gbc.pc(), 0x1022);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 03C0
        gbc.setState(0x742a, 0xbd6c, 0x6190, 0xcf4e, 0xb436, 0xca3f, 0x1, 0x0);
        gbc.writeMem(0x742a, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xbd6c);
        EXPECT(gbc.pc(), 0x742c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 03C1
        gbc.setState(0x228b, 0xca9e, 0xf240, 0x3ad7, 0x903e, 0xba46, 0x0, 0x0);
        gbc.writeMem(0x228b, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xca9e);
        EXPECT(gbc.pc(), 0x228d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 03C2
        gbc.setState(0x3698, 0x78ee, 0x1470, 0x7387, 0x73ea, 0xa60, 0x0, 0x0);
        gbc.writeMem(0x3698, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x78ee);
        EXPECT(gbc.pc(), 0x369a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 03C4
        gbc.setState(0xedd7, 0x876b, 0x23c0, 0x5886, 0xdf96, 0x8bed, 0x1, 0x0);
        gbc.writeMem(0xedd7, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x876b);
        EXPECT(gbc.pc(), 0xedd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedd7), 0xcb);
        EXPECT(gbc.readMem(0xedd8), 0x4d);
        // CB 4D 03C5
        gbc.setState(0x7c20, 0xeb77, 0x740, 0xad4a, 0xc7da, 0xa201, 0x1, 0x1);
        gbc.writeMem(0x7c20, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xeb77);
        EXPECT(gbc.pc(), 0x7c22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 03C6
        gbc.setState(0x7d32, 0x73ee, 0xbd30, 0x44a8, 0x7566, 0x4484, 0x1, 0x0);
        gbc.writeMem(0x7d32, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x73ee);
        EXPECT(gbc.pc(), 0x7d34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 03C7
        gbc.setState(0x24af, 0xfe0, 0xe5e0, 0xeb08, 0xac2f, 0x84e7, 0x1, 0x0);
        gbc.writeMem(0x24af, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xfe0);
        EXPECT(gbc.pc(), 0x24b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 03C8
        gbc.setState(0xc190, 0xcbf0, 0x270, 0x4a54, 0xd094, 0x42fb, 0x0, 0x0);
        gbc.writeMem(0xc190, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xcbf0);
        EXPECT(gbc.pc(), 0xc192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc190), 0xcb);
        EXPECT(gbc.readMem(0xc191), 0x4d);
        // CB 4D 03C9
        gbc.setState(0xba13, 0xf778, 0x2080, 0xb95d, 0xeb33, 0x5614, 0x1, 0x0);
        gbc.writeMem(0xba13, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf778);
        EXPECT(gbc.pc(), 0xba15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba13), 0xcb);
        EXPECT(gbc.readMem(0xba14), 0x4d);
        // CB 4D 03CA
        gbc.setState(0x92d8, 0x8e2b, 0x7330, 0x213e, 0xf85d, 0x6ed2, 0x1, 0x0);
        gbc.writeMem(0x92d8, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8e2b);
        EXPECT(gbc.pc(), 0x92da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92d8), 0xcb);
        EXPECT(gbc.readMem(0x92d9), 0x4d);
        // CB 4D 03CB
        gbc.setState(0x5dd0, 0x2f5a, 0x890, 0x1b93, 0x54d4, 0x7ca0, 0x0, 0x1);
        gbc.writeMem(0x5dd0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2f5a);
        EXPECT(gbc.pc(), 0x5dd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 03CC
        gbc.setState(0x436d, 0xb80c, 0x3b90, 0x96a8, 0xc30a, 0xc517, 0x1, 0x1);
        gbc.writeMem(0x436d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb80c);
        EXPECT(gbc.pc(), 0x436f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 03CD
        gbc.setState(0x660, 0xe063, 0xd10, 0x723f, 0xe49c, 0x7e0b, 0x1, 0x0);
        gbc.writeMem(0x660, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe063);
        EXPECT(gbc.pc(), 0x662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 03CE
        gbc.setState(0xeaa0, 0x3694, 0xa5d0, 0x43e3, 0xa66e, 0x5927, 0x0, 0x0);
        gbc.writeMem(0xeaa0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3694);
        EXPECT(gbc.pc(), 0xeaa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaa0), 0xcb);
        EXPECT(gbc.readMem(0xeaa1), 0x4d);
        // CB 4D 03CF
        gbc.setState(0x4464, 0xd1bb, 0xa910, 0x360c, 0xcb43, 0x2570, 0x1, 0x1);
        gbc.writeMem(0x4464, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd1bb);
        EXPECT(gbc.pc(), 0x4466);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 03D0
        gbc.setState(0x877c, 0x3267, 0x63e0, 0xd442, 0x7203, 0xacbd, 0x0, 0x1);
        gbc.writeMem(0x877c, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x3267);
        EXPECT(gbc.pc(), 0x877e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x877c), 0xcb);
        EXPECT(gbc.readMem(0x877d), 0x4d);
        // CB 4D 03D1
        gbc.setState(0x7f61, 0x77b4, 0x2680, 0x87e4, 0x8157, 0xce1c, 0x0, 0x0);
        gbc.writeMem(0x7f61, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x77b4);
        EXPECT(gbc.pc(), 0x7f63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 03D2
        gbc.setState(0x4851, 0x62d1, 0x1020, 0x9293, 0x4225, 0x7511, 0x1, 0x0);
        gbc.writeMem(0x4851, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x62d1);
        EXPECT(gbc.pc(), 0x4853);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 03D3
        gbc.setState(0xc2e9, 0x50d9, 0xa5c0, 0x2540, 0x64c7, 0xfc6c, 0x0, 0x0);
        gbc.writeMem(0xc2e9, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x50d9);
        EXPECT(gbc.pc(), 0xc2eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2e9), 0xcb);
        EXPECT(gbc.readMem(0xc2ea), 0x4d);
        // CB 4D 03D4
        gbc.setState(0xc2a8, 0x805a, 0x55c0, 0x2775, 0x9fb3, 0x30b7, 0x0, 0x0);
        gbc.writeMem(0xc2a8, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x805a);
        EXPECT(gbc.pc(), 0xc2aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2a8), 0xcb);
        EXPECT(gbc.readMem(0xc2a9), 0x4d);
        // CB 4D 03D5
        gbc.setState(0xbd71, 0xfe99, 0x5160, 0xf23a, 0xd262, 0x5125, 0x1, 0x0);
        gbc.writeMem(0xbd71, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xfe99);
        EXPECT(gbc.pc(), 0xbd73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd71), 0xcb);
        EXPECT(gbc.readMem(0xbd72), 0x4d);
        // CB 4D 03D6
        gbc.setState(0xc9e1, 0xb222, 0x5390, 0x979c, 0x767b, 0xf1dc, 0x1, 0x1);
        gbc.writeMem(0xc9e1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xb222);
        EXPECT(gbc.pc(), 0xc9e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9e1), 0xcb);
        EXPECT(gbc.readMem(0xc9e2), 0x4d);
        // CB 4D 03D7
        gbc.setState(0x3e74, 0xe1fb, 0x6a00, 0x59ea, 0x4291, 0x58f4, 0x0, 0x1);
        gbc.writeMem(0x3e74, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe1fb);
        EXPECT(gbc.pc(), 0x3e76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 03D8
        gbc.setState(0x283d, 0x5402, 0x1b60, 0x9d78, 0x4e1b, 0xf5e5, 0x1, 0x0);
        gbc.writeMem(0x283d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x5402);
        EXPECT(gbc.pc(), 0x283f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 03D9
        gbc.setState(0xc6d0, 0xb93c, 0x9540, 0x8eee, 0x5270, 0x39c2, 0x1, 0x1);
        gbc.writeMem(0xc6d0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xb93c);
        EXPECT(gbc.pc(), 0xc6d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6d0), 0xcb);
        EXPECT(gbc.readMem(0xc6d1), 0x4d);
        // CB 4D 03DA
        gbc.setState(0x12d8, 0x514a, 0xfc0, 0x965, 0xf036, 0x87b3, 0x1, 0x1);
        gbc.writeMem(0x12d8, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x514a);
        EXPECT(gbc.pc(), 0x12da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 03DB
        gbc.setState(0x5308, 0xead5, 0x5620, 0x458, 0xf6d, 0x8d51, 0x0, 0x0);
        gbc.writeMem(0x5308, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xead5);
        EXPECT(gbc.pc(), 0x530a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 03DC
        gbc.setState(0xaee1, 0x6744, 0xfac0, 0x9d22, 0xdfa2, 0x655c, 0x0, 0x0);
        gbc.writeMem(0xaee1, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6744);
        EXPECT(gbc.pc(), 0xaee3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaee1), 0xcb);
        EXPECT(gbc.readMem(0xaee2), 0x4d);
        // CB 4D 03DD
        gbc.setState(0xcd29, 0xb45f, 0x6f60, 0xa5ac, 0xbb28, 0x9b01, 0x0, 0x0);
        gbc.writeMem(0xcd29, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xb45f);
        EXPECT(gbc.pc(), 0xcd2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd29), 0xcb);
        EXPECT(gbc.readMem(0xcd2a), 0x4d);
        // CB 4D 03DE
        gbc.setState(0x3703, 0x57c5, 0x78b0, 0x16ad, 0xcd4a, 0x284c, 0x1, 0x0);
        gbc.writeMem(0x3703, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x57c5);
        EXPECT(gbc.pc(), 0x3705);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 03DF
        gbc.setState(0x7ca6, 0x44a8, 0xf820, 0xe525, 0xb069, 0xbbce, 0x1, 0x0);
        gbc.writeMem(0x7ca6, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x44a8);
        EXPECT(gbc.pc(), 0x7ca8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 4D 03E0
        gbc.setState(0x2266, 0x6d09, 0x27d0, 0x5dc2, 0x3d28, 0x1718, 0x0, 0x1);
        gbc.writeMem(0x2266, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6d09);
        EXPECT(gbc.pc(), 0x2268);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 03E1
        gbc.setState(0x82c3, 0x57f9, 0x2f0, 0x7b10, 0x8c7, 0x5c5b, 0x0, 0x0);
        gbc.writeMem(0x82c3, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x57f9);
        EXPECT(gbc.pc(), 0x82c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82c3), 0xcb);
        EXPECT(gbc.readMem(0x82c4), 0x4d);
        // CB 4D 03E2
        gbc.setState(0x396d, 0xe67c, 0x7210, 0xee75, 0x7fa7, 0x3262, 0x0, 0x1);
        gbc.writeMem(0x396d, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe67c);
        EXPECT(gbc.pc(), 0x396f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 03E3
        gbc.setState(0x58a0, 0x3640, 0x7db0, 0x2655, 0x93e1, 0xed14, 0x0, 0x1);
        gbc.writeMem(0x58a0, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x3640);
        EXPECT(gbc.pc(), 0x58a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 03E5
        gbc.setState(0x1e09, 0x1c89, 0x6cb0, 0x54b7, 0xabfb, 0xfc9d, 0x0, 0x0);
        gbc.writeMem(0x1e09, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x1c89);
        EXPECT(gbc.pc(), 0x1e0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 4D 03E6
        gbc.setState(0xca31, 0x9bee, 0xda60, 0x5cc5, 0x22e2, 0x5029, 0x1, 0x1);
        gbc.writeMem(0xca31, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x9bee);
        EXPECT(gbc.pc(), 0xca33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca31), 0xcb);
        EXPECT(gbc.readMem(0xca32), 0x4d);
        // CB 4D 03E7
        gbc.setState(0x83ea, 0xf61e, 0xe0, 0xbf37, 0x553d, 0xf80f, 0x0, 0x1);
        gbc.writeMem(0x83ea, { 0xcb, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf61e);
        EXPECT(gbc.pc(), 0x83ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ea), 0xcb);
        EXPECT(gbc.readMem(0x83eb), 0x4d);
    }
