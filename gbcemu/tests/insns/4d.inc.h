    TEST(gbcemu, opcode_4d) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 4D 0000
        gbc.setState(0x976e, 0xc8a4, 0x890, 0xa7c, 0x5402, 0x71dd, 0x1, 0x1);
        gbc.writeMem(0x976e, { 0x4d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc8a4, gbc.sp());
        EXPECT(0x976f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x976e));
        // 4D 0001
        gbc.setState(0xbe3e, 0xd92b, 0x7f0, 0xafc8, 0x4eea, 0x3b41, 0x0, 0x0);
        gbc.writeMem(0xbe3e, { 0x4d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd92b, gbc.sp());
        EXPECT(0xbe3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbe3e));
        // 4D 0002
        gbc.setState(0x64b, 0x6df, 0xa130, 0xbcb3, 0x282, 0xdc94, 0x1, 0x1);
        gbc.writeMem(0x64b, { 0x4d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6df, gbc.sp());
        EXPECT(0x64c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0004
        gbc.setState(0xa501, 0x349e, 0x2e30, 0x38f4, 0xa1c9, 0x6a23, 0x0, 0x0);
        gbc.writeMem(0xa501, { 0x4d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x349e, gbc.sp());
        EXPECT(0xa502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa501));
        // 4D 0005
        gbc.setState(0x870f, 0xde90, 0x9d90, 0xb76c, 0x3810, 0xfc9c, 0x0, 0x0);
        gbc.writeMem(0x870f, { 0x4d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xde90, gbc.sp());
        EXPECT(0x8710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x870f));
        // 4D 0006
        gbc.setState(0xaf75, 0x157d, 0x3fb0, 0x6505, 0xb7b8, 0xea98, 0x0, 0x0);
        gbc.writeMem(0xaf75, { 0x4d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x157d, gbc.sp());
        EXPECT(0xaf76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xaf75));
        // 4D 0007
        gbc.setState(0xc9b2, 0xac9f, 0x6520, 0x95b2, 0xe28d, 0xdaa0, 0x0, 0x0);
        gbc.writeMem(0xc9b2, { 0x4d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xac9f, gbc.sp());
        EXPECT(0xc9b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc9b2));
        // 4D 0008
        gbc.setState(0x534e, 0xdb1a, 0x5330, 0xe857, 0x2cb2, 0x5dd0, 0x0, 0x1);
        gbc.writeMem(0x534e, { 0x4d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xdb1a, gbc.sp());
        EXPECT(0x534f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0009
        gbc.setState(0x10d2, 0x3ef0, 0x14c0, 0xc233, 0xc2bf, 0x6dad, 0x0, 0x0);
        gbc.writeMem(0x10d2, { 0x4d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3ef0, gbc.sp());
        EXPECT(0x10d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 000A
        gbc.setState(0x97d2, 0xaa2a, 0xf8d0, 0x2faa, 0xcb05, 0x743, 0x1, 0x0);
        gbc.writeMem(0x97d2, { 0x4d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xaa2a, gbc.sp());
        EXPECT(0x97d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x97d2));
        // 4D 000B
        gbc.setState(0x1909, 0xac9a, 0xecb0, 0x2aef, 0x17df, 0xecb8, 0x1, 0x1);
        gbc.writeMem(0x1909, { 0x4d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xac9a, gbc.sp());
        EXPECT(0x190a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 000C
        gbc.setState(0x7032, 0x97e, 0x3900, 0x6502, 0x51ff, 0x4fab, 0x0, 0x0);
        gbc.writeMem(0x7032, { 0x4d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x97e, gbc.sp());
        EXPECT(0x7033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 000D
        gbc.setState(0x3059, 0x6087, 0xf40, 0x2e19, 0x6497, 0xd377, 0x1, 0x0);
        gbc.writeMem(0x3059, { 0x4d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6087, gbc.sp());
        EXPECT(0x305a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 000E
        gbc.setState(0x7386, 0x89d8, 0xf610, 0xb0fd, 0xfd4, 0x17e0, 0x1, 0x1);
        gbc.writeMem(0x7386, { 0x4d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x89d8, gbc.sp());
        EXPECT(0x7387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 000F
        gbc.setState(0x1247, 0xfa49, 0xe660, 0x91ba, 0xa596, 0x6f31, 0x0, 0x1);
        gbc.writeMem(0x1247, { 0x4d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xfa49, gbc.sp());
        EXPECT(0x1248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0012
        gbc.setState(0x89c5, 0x17e9, 0x8610, 0x4318, 0x94ab, 0xd62c, 0x1, 0x0);
        gbc.writeMem(0x89c5, { 0x4d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x17e9, gbc.sp());
        EXPECT(0x89c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x89c5));
        // 4D 0013
        gbc.setState(0xc148, 0x9e3d, 0xe700, 0x525a, 0xefc3, 0xc500, 0x1, 0x1);
        gbc.writeMem(0xc148, { 0x4d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9e3d, gbc.sp());
        EXPECT(0xc149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc148));
        // 4D 0014
        gbc.setState(0x8bb9, 0x60a0, 0x52c0, 0x99d5, 0xcaff, 0x4903, 0x1, 0x1);
        gbc.writeMem(0x8bb9, { 0x4d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x60a0, gbc.sp());
        EXPECT(0x8bba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8bb9));
        // 4D 0015
        gbc.setState(0x272e, 0xfc35, 0x4200, 0x9a03, 0x28ff, 0xca97, 0x0, 0x1);
        gbc.writeMem(0x272e, { 0x4d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfc35, gbc.sp());
        EXPECT(0x272f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0016
        gbc.setState(0x34f8, 0xcb0, 0x2240, 0xe82b, 0x5d47, 0x71af, 0x1, 0x1);
        gbc.writeMem(0x34f8, { 0x4d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xcb0, gbc.sp());
        EXPECT(0x34f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0017
        gbc.setState(0x16cc, 0xac60, 0x8ad0, 0x4282, 0xdebc, 0x235d, 0x1, 0x1);
        gbc.writeMem(0x16cc, { 0x4d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xac60, gbc.sp());
        EXPECT(0x16cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0018
        gbc.setState(0x218, 0x909, 0x9f40, 0xc842, 0x4a50, 0xaac8, 0x0, 0x0);
        gbc.writeMem(0x218, { 0x4d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x909, gbc.sp());
        EXPECT(0x219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0019
        gbc.setState(0xc3ce, 0x75ce, 0xc630, 0xf99, 0xe336, 0xe4d9, 0x0, 0x0);
        gbc.writeMem(0xc3ce, { 0x4d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x75ce, gbc.sp());
        EXPECT(0xc3cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc3ce));
        // 4D 001A
        gbc.setState(0xc302, 0xc975, 0xb570, 0xaad5, 0x6687, 0xe66a, 0x1, 0x0);
        gbc.writeMem(0xc302, { 0x4d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc975, gbc.sp());
        EXPECT(0xc303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc302));
        // 4D 001C
        gbc.setState(0x24ef, 0xe428, 0xa790, 0x91ce, 0xf6b6, 0xc10b, 0x0, 0x1);
        gbc.writeMem(0x24ef, { 0x4d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe428, gbc.sp());
        EXPECT(0x24f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 001D
        gbc.setState(0x4f59, 0xf72c, 0xf5b0, 0xd7a4, 0x19fa, 0x667d, 0x1, 0x1);
        gbc.writeMem(0x4f59, { 0x4d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf72c, gbc.sp());
        EXPECT(0x4f5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 001E
        gbc.setState(0xb8ab, 0x9933, 0x5a10, 0x17ec, 0x1ecf, 0xd8e8, 0x0, 0x1);
        gbc.writeMem(0xb8ab, { 0x4d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9933, gbc.sp());
        EXPECT(0xb8ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb8ab));
        // 4D 001F
        gbc.setState(0xcdd8, 0x2ae4, 0xd020, 0xcdf, 0x7af1, 0x8d1f, 0x1, 0x1);
        gbc.writeMem(0xcdd8, { 0x4d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2ae4, gbc.sp());
        EXPECT(0xcdd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xcdd8));
        // 4D 0020
        gbc.setState(0x1ea5, 0xfbb1, 0xf3d0, 0x31dd, 0xdd48, 0xbf07, 0x0, 0x1);
        gbc.writeMem(0x1ea5, { 0x4d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xfbb1, gbc.sp());
        EXPECT(0x1ea6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0021
        gbc.setState(0x6dbc, 0xd6f, 0x29a0, 0xd906, 0x2e96, 0xe763, 0x1, 0x1);
        gbc.writeMem(0x6dbc, { 0x4d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd6f, gbc.sp());
        EXPECT(0x6dbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0023
        gbc.setState(0x55d4, 0x304e, 0xf640, 0xbd94, 0x90ba, 0xc806, 0x1, 0x1);
        gbc.writeMem(0x55d4, { 0x4d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x304e, gbc.sp());
        EXPECT(0x55d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0024
        gbc.setState(0x4571, 0x91b7, 0x4c40, 0x38e6, 0xb16, 0x542a, 0x0, 0x1);
        gbc.writeMem(0x4571, { 0x4d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x91b7, gbc.sp());
        EXPECT(0x4572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0025
        gbc.setState(0x9fb7, 0x3afa, 0x9700, 0x5de2, 0x364c, 0x96d, 0x1, 0x0);
        gbc.writeMem(0x9fb7, { 0x4d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3afa, gbc.sp());
        EXPECT(0x9fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9fb7));
        // 4D 0026
        gbc.setState(0x5739, 0x5e79, 0x5330, 0x1a5d, 0x98d1, 0xfdf1, 0x1, 0x1);
        gbc.writeMem(0x5739, { 0x4d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5e79, gbc.sp());
        EXPECT(0x573a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0027
        gbc.setState(0x34c0, 0x52dd, 0xe510, 0x3db1, 0xf1e9, 0xed52, 0x1, 0x0);
        gbc.writeMem(0x34c0, { 0x4d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x52dd, gbc.sp());
        EXPECT(0x34c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0028
        gbc.setState(0xb816, 0x824c, 0xee20, 0x2801, 0x1fa8, 0x9eee, 0x1, 0x1);
        gbc.writeMem(0xb816, { 0x4d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x824c, gbc.sp());
        EXPECT(0xb817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb816));
        // 4D 0029
        gbc.setState(0x7331, 0x9d68, 0x37d0, 0x4363, 0xcb4a, 0x3e8f, 0x1, 0x0);
        gbc.writeMem(0x7331, { 0x4d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9d68, gbc.sp());
        EXPECT(0x7332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 002A
        gbc.setState(0x4dfa, 0x995e, 0xc4c0, 0x807c, 0xe0c8, 0x4b9f, 0x1, 0x1);
        gbc.writeMem(0x4dfa, { 0x4d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x995e, gbc.sp());
        EXPECT(0x4dfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 002B
        gbc.setState(0xb033, 0x7b73, 0x630, 0x26da, 0xa67f, 0xb6e8, 0x1, 0x0);
        gbc.writeMem(0xb033, { 0x4d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7b73, gbc.sp());
        EXPECT(0xb034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb033));
        // 4D 002C
        gbc.setState(0xa814, 0x9f5, 0xb8c0, 0xcfa8, 0x27a7, 0x6eff, 0x1, 0x0);
        gbc.writeMem(0xa814, { 0x4d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9f5, gbc.sp());
        EXPECT(0xa815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa814));
        // 4D 002D
        gbc.setState(0x9b35, 0x35ea, 0x8390, 0xe12e, 0x214b, 0x4dd6, 0x0, 0x0);
        gbc.writeMem(0x9b35, { 0x4d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x35ea, gbc.sp());
        EXPECT(0x9b36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9b35));
        // 4D 002E
        gbc.setState(0x93f2, 0x5445, 0x1b70, 0xf985, 0x7f19, 0xc66b, 0x0, 0x1);
        gbc.writeMem(0x93f2, { 0x4d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5445, gbc.sp());
        EXPECT(0x93f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x93f2));
        // 4D 002F
        gbc.setState(0x177c, 0x6f48, 0x85d0, 0xcc3f, 0xf07b, 0xcca3, 0x1, 0x0);
        gbc.writeMem(0x177c, { 0x4d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6f48, gbc.sp());
        EXPECT(0x177d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0030
        gbc.setState(0x2840, 0x646f, 0x48e0, 0x6d1c, 0xd704, 0xdc73, 0x1, 0x1);
        gbc.writeMem(0x2840, { 0x4d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x646f, gbc.sp());
        EXPECT(0x2841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0031
        gbc.setState(0x27ce, 0xde16, 0xe130, 0x92a3, 0xee95, 0xd57c, 0x0, 0x0);
        gbc.writeMem(0x27ce, { 0x4d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xde16, gbc.sp());
        EXPECT(0x27cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0032
        gbc.setState(0x3efb, 0x8941, 0x68e0, 0xf7a, 0x93c4, 0xf609, 0x1, 0x0);
        gbc.writeMem(0x3efb, { 0x4d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8941, gbc.sp());
        EXPECT(0x3efc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0033
        gbc.setState(0x389b, 0xd5e0, 0x6c20, 0x19fb, 0x3722, 0x6e11, 0x0, 0x0);
        gbc.writeMem(0x389b, { 0x4d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd5e0, gbc.sp());
        EXPECT(0x389c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0035
        gbc.setState(0x515f, 0x6e0f, 0x14b0, 0x5cb, 0x8eeb, 0xef41, 0x0, 0x1);
        gbc.writeMem(0x515f, { 0x4d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6e0f, gbc.sp());
        EXPECT(0x5160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0036
        gbc.setState(0x79bb, 0x279b, 0x6ac0, 0x7c5e, 0x64ad, 0xd716, 0x1, 0x0);
        gbc.writeMem(0x79bb, { 0x4d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x279b, gbc.sp());
        EXPECT(0x79bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0037
        gbc.setState(0xa73c, 0x328, 0xf820, 0x3a40, 0x4e23, 0x59fd, 0x0, 0x0);
        gbc.writeMem(0xa73c, { 0x4d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x328, gbc.sp());
        EXPECT(0xa73d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa73c));
        // 4D 0038
        gbc.setState(0x2186, 0xb596, 0x5be0, 0xf054, 0x9995, 0xf5cb, 0x1, 0x0);
        gbc.writeMem(0x2186, { 0x4d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb596, gbc.sp());
        EXPECT(0x2187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 003A
        gbc.setState(0x531a, 0x5650, 0x6ae0, 0xee33, 0x104b, 0xe49b, 0x0, 0x0);
        gbc.writeMem(0x531a, { 0x4d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5650, gbc.sp());
        EXPECT(0x531b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 003B
        gbc.setState(0x5a0b, 0xfecc, 0x5fe0, 0x3395, 0x8dd2, 0xbbc1, 0x0, 0x1);
        gbc.writeMem(0x5a0b, { 0x4d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xfecc, gbc.sp());
        EXPECT(0x5a0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 003C
        gbc.setState(0x6987, 0x4d67, 0x5cf0, 0xad61, 0x4871, 0x16a7, 0x0, 0x0);
        gbc.writeMem(0x6987, { 0x4d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4d67, gbc.sp());
        EXPECT(0x6988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 003D
        gbc.setState(0x7106, 0x627f, 0x4ce0, 0x74c6, 0x596e, 0x501e, 0x1, 0x1);
        gbc.writeMem(0x7106, { 0x4d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x627f, gbc.sp());
        EXPECT(0x7107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 003E
        gbc.setState(0x4a8, 0x3199, 0x99c0, 0xb3e2, 0x62a0, 0xa9c3, 0x1, 0x0);
        gbc.writeMem(0x4a8, { 0x4d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3199, gbc.sp());
        EXPECT(0x4a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 003F
        gbc.setState(0xa5bd, 0x9a8b, 0xfef0, 0x5e3f, 0xfa6e, 0x95b6, 0x1, 0x1);
        gbc.writeMem(0xa5bd, { 0x4d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9a8b, gbc.sp());
        EXPECT(0xa5be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa5bd));
        // 4D 0040
        gbc.setState(0xce1f, 0x9bce, 0xc7b0, 0xa3c, 0xd7db, 0x2a7d, 0x1, 0x0);
        gbc.writeMem(0xce1f, { 0x4d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9bce, gbc.sp());
        EXPECT(0xce20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xce1f));
        // 4D 0041
        gbc.setState(0x894f, 0x381, 0xf580, 0xe547, 0x3f57, 0x9c7e, 0x1, 0x0);
        gbc.writeMem(0x894f, { 0x4d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x381, gbc.sp());
        EXPECT(0x8950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x894f));
        // 4D 0042
        gbc.setState(0xc1b1, 0xae9c, 0xba30, 0xcf5f, 0x695c, 0x6b5d, 0x1, 0x0);
        gbc.writeMem(0xc1b1, { 0x4d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xae9c, gbc.sp());
        EXPECT(0xc1b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc1b1));
        // 4D 0043
        gbc.setState(0x554, 0xd1a9, 0xd4d0, 0x11de, 0x3f6b, 0xee02, 0x0, 0x1);
        gbc.writeMem(0x554, { 0x4d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd1a9, gbc.sp());
        EXPECT(0x555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0044
        gbc.setState(0x1904, 0x5885, 0xb4d0, 0x5be6, 0x9b68, 0xb993, 0x0, 0x0);
        gbc.writeMem(0x1904, { 0x4d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5885, gbc.sp());
        EXPECT(0x1905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0045
        gbc.setState(0x2e28, 0x1775, 0x690, 0x4cc3, 0xe753, 0x1d51, 0x1, 0x0);
        gbc.writeMem(0x2e28, { 0x4d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1775, gbc.sp());
        EXPECT(0x2e29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0046
        gbc.setState(0x1de2, 0xff51, 0x850, 0x2c64, 0xe10c, 0x130f, 0x0, 0x1);
        gbc.writeMem(0x1de2, { 0x4d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xff51, gbc.sp());
        EXPECT(0x1de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0047
        gbc.setState(0x6da0, 0x5ff3, 0x16c0, 0xd6f4, 0xd1a2, 0x50e8, 0x0, 0x0);
        gbc.writeMem(0x6da0, { 0x4d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5ff3, gbc.sp());
        EXPECT(0x6da1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0049
        gbc.setState(0x627e, 0x962f, 0x630, 0x59bc, 0xafe, 0x1b3f, 0x0, 0x0);
        gbc.writeMem(0x627e, { 0x4d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x962f, gbc.sp());
        EXPECT(0x627f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 004A
        gbc.setState(0x1014, 0x10e0, 0x8d90, 0xc25e, 0x50cd, 0x5af9, 0x1, 0x1);
        gbc.writeMem(0x1014, { 0x4d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x10e0, gbc.sp());
        EXPECT(0x1015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 004C
        gbc.setState(0xb618, 0xfed6, 0x8ee0, 0x5929, 0xf9b4, 0xf423, 0x0, 0x1);
        gbc.writeMem(0xb618, { 0x4d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xfed6, gbc.sp());
        EXPECT(0xb619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb618));
        // 4D 004D
        gbc.setState(0x1c9f, 0x1cd, 0xbb50, 0x9839, 0xfd18, 0x8eb3, 0x1, 0x0);
        gbc.writeMem(0x1c9f, { 0x4d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1cd, gbc.sp());
        EXPECT(0x1ca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 004E
        gbc.setState(0xa8e0, 0x304b, 0x3650, 0xd92d, 0x7bc2, 0xe6cd, 0x0, 0x0);
        gbc.writeMem(0xa8e0, { 0x4d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x304b, gbc.sp());
        EXPECT(0xa8e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa8e0));
        // 4D 004F
        gbc.setState(0x657b, 0x2862, 0x8630, 0x26d5, 0xdf9d, 0xd312, 0x1, 0x0);
        gbc.writeMem(0x657b, { 0x4d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2862, gbc.sp());
        EXPECT(0x657c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0050
        gbc.setState(0x38b3, 0x404a, 0x4dc0, 0xc034, 0xb1dc, 0xf294, 0x0, 0x0);
        gbc.writeMem(0x38b3, { 0x4d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x404a, gbc.sp());
        EXPECT(0x38b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0051
        gbc.setState(0x51b8, 0x6a86, 0xd0e0, 0x83f6, 0x88ff, 0xd02a, 0x1, 0x1);
        gbc.writeMem(0x51b8, { 0x4d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6a86, gbc.sp());
        EXPECT(0x51b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0052
        gbc.setState(0x408, 0x80af, 0x4bc0, 0x9a70, 0x5be3, 0x9ddf, 0x0, 0x1);
        gbc.writeMem(0x408, { 0x4d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x80af, gbc.sp());
        EXPECT(0x409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0053
        gbc.setState(0x797e, 0x4ed9, 0xaf40, 0x56f2, 0xd992, 0x122e, 0x0, 0x0);
        gbc.writeMem(0x797e, { 0x4d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4ed9, gbc.sp());
        EXPECT(0x797f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0054
        gbc.setState(0xdfd0, 0x5082, 0x9580, 0xf09b, 0x8a11, 0xa3eb, 0x0, 0x1);
        gbc.writeMem(0xdfd0, { 0x4d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5082, gbc.sp());
        EXPECT(0xdfd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdfd0));
        // 4D 0055
        gbc.setState(0x9bf2, 0xe35c, 0xc160, 0xf56c, 0xe82e, 0x34c7, 0x0, 0x0);
        gbc.writeMem(0x9bf2, { 0x4d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe35c, gbc.sp());
        EXPECT(0x9bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9bf2));
        // 4D 0056
        gbc.setState(0x2d44, 0x6bd3, 0xafc0, 0x80ce, 0xf5d9, 0x4aab, 0x0, 0x1);
        gbc.writeMem(0x2d44, { 0x4d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6bd3, gbc.sp());
        EXPECT(0x2d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0057
        gbc.setState(0x25e9, 0x75c4, 0x1df0, 0x89d2, 0x28, 0x684d, 0x0, 0x0);
        gbc.writeMem(0x25e9, { 0x4d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x75c4, gbc.sp());
        EXPECT(0x25ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0058
        gbc.setState(0x22af, 0x853e, 0xdb80, 0x815d, 0x58ea, 0x9a8a, 0x1, 0x1);
        gbc.writeMem(0x22af, { 0x4d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x853e, gbc.sp());
        EXPECT(0x22b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0059
        gbc.setState(0xa401, 0x6a9f, 0xcbf0, 0x942a, 0xb4fa, 0x4db4, 0x1, 0x0);
        gbc.writeMem(0xa401, { 0x4d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6a9f, gbc.sp());
        EXPECT(0xa402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa401));
        // 4D 005A
        gbc.setState(0xa495, 0xa771, 0xad10, 0x89f4, 0x8310, 0xaa84, 0x0, 0x1);
        gbc.writeMem(0xa495, { 0x4d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa771, gbc.sp());
        EXPECT(0xa496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa495));
        // 4D 005C
        gbc.setState(0x84b3, 0xb28c, 0x5530, 0x91f1, 0xb5d9, 0xf4, 0x1, 0x1);
        gbc.writeMem(0x84b3, { 0x4d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb28c, gbc.sp());
        EXPECT(0x84b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x84b3));
        // 4D 005D
        gbc.setState(0x837f, 0x46e6, 0x1480, 0x86fc, 0x2f14, 0x6034, 0x1, 0x0);
        gbc.writeMem(0x837f, { 0x4d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x46e6, gbc.sp());
        EXPECT(0x8380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x837f));
        // 4D 005E
        gbc.setState(0xbd2a, 0x8f66, 0x81a0, 0x1e82, 0x2410, 0xa358, 0x1, 0x0);
        gbc.writeMem(0xbd2a, { 0x4d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8f66, gbc.sp());
        EXPECT(0xbd2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbd2a));
        // 4D 005F
        gbc.setState(0x510c, 0x789f, 0x9da0, 0x4bf4, 0x88e4, 0xf0c1, 0x0, 0x1);
        gbc.writeMem(0x510c, { 0x4d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x789f, gbc.sp());
        EXPECT(0x510d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0060
        gbc.setState(0x3e98, 0xf61a, 0xcba0, 0xaee8, 0x6ebc, 0x4adc, 0x1, 0x1);
        gbc.writeMem(0x3e98, { 0x4d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf61a, gbc.sp());
        EXPECT(0x3e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0061
        gbc.setState(0x33bc, 0xda45, 0xe5e0, 0xc2c3, 0x1eb9, 0xb432, 0x1, 0x0);
        gbc.writeMem(0x33bc, { 0x4d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xda45, gbc.sp());
        EXPECT(0x33bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0062
        gbc.setState(0xe0d8, 0x8268, 0x79b0, 0xd0d, 0x4660, 0x7ef9, 0x0, 0x1);
        gbc.writeMem(0xe0d8, { 0x4d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8268, gbc.sp());
        EXPECT(0xe0d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe0d8));
        // 4D 0063
        gbc.setState(0x2b37, 0xa79, 0xb340, 0xf0c2, 0x18be, 0xb68a, 0x0, 0x0);
        gbc.writeMem(0x2b37, { 0x4d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa79, gbc.sp());
        EXPECT(0x2b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0064
        gbc.setState(0x64be, 0xe93f, 0x6ec0, 0x6c64, 0x69f, 0x39b5, 0x0, 0x1);
        gbc.writeMem(0x64be, { 0x4d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe93f, gbc.sp());
        EXPECT(0x64bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0065
        gbc.setState(0x38c4, 0x7b21, 0x1a50, 0x59b, 0xa83e, 0xfb48, 0x1, 0x0);
        gbc.writeMem(0x38c4, { 0x4d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7b21, gbc.sp());
        EXPECT(0x38c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0066
        gbc.setState(0xc1ca, 0xedab, 0x6a0, 0xa436, 0xe4ad, 0x338d, 0x0, 0x0);
        gbc.writeMem(0xc1ca, { 0x4d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xedab, gbc.sp());
        EXPECT(0xc1cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc1ca));
        // 4D 0067
        gbc.setState(0x50b2, 0x1908, 0x2290, 0xac8, 0x5a9a, 0x37cd, 0x0, 0x0);
        gbc.writeMem(0x50b2, { 0x4d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1908, gbc.sp());
        EXPECT(0x50b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0068
        gbc.setState(0x2a59, 0xd333, 0xe20, 0xfbf0, 0xa1cf, 0x9f50, 0x1, 0x0);
        gbc.writeMem(0x2a59, { 0x4d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd333, gbc.sp());
        EXPECT(0x2a5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0069
        gbc.setState(0x4b, 0x4469, 0x8560, 0xd22f, 0xe73e, 0xbb56, 0x1, 0x0);
        gbc.writeMem(0x4b, { 0x4d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4469, gbc.sp());
        EXPECT(0x4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 006A
        gbc.setState(0x411d, 0x950f, 0xf6a0, 0xb364, 0xb2c4, 0x318f, 0x0, 0x1);
        gbc.writeMem(0x411d, { 0x4d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x950f, gbc.sp());
        EXPECT(0x411e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 006B
        gbc.setState(0x99a3, 0xc797, 0x9df0, 0x81f1, 0xef97, 0x755a, 0x0, 0x0);
        gbc.writeMem(0x99a3, { 0x4d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc797, gbc.sp());
        EXPECT(0x99a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x99a3));
        // 4D 006C
        gbc.setState(0x14d7, 0x5cbc, 0x3540, 0x462c, 0x7ad7, 0x3575, 0x1, 0x1);
        gbc.writeMem(0x14d7, { 0x4d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5cbc, gbc.sp());
        EXPECT(0x14d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 006D
        gbc.setState(0x3b91, 0xba7b, 0xcd80, 0x27d8, 0x6ca2, 0xcba3, 0x0, 0x0);
        gbc.writeMem(0x3b91, { 0x4d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xba7b, gbc.sp());
        EXPECT(0x3b92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 006E
        gbc.setState(0xafbe, 0xad09, 0x2770, 0x3da7, 0x5a9, 0x8746, 0x0, 0x0);
        gbc.writeMem(0xafbe, { 0x4d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xad09, gbc.sp());
        EXPECT(0xafbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xafbe));
        // 4D 006F
        gbc.setState(0x4e00, 0x3f30, 0x7980, 0x6b2e, 0x9ba9, 0x362e, 0x0, 0x0);
        gbc.writeMem(0x4e00, { 0x4d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3f30, gbc.sp());
        EXPECT(0x4e01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0070
        gbc.setState(0x9d8f, 0xd35c, 0x6e90, 0xd6b3, 0x93c9, 0x4576, 0x0, 0x0);
        gbc.writeMem(0x9d8f, { 0x4d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd35c, gbc.sp());
        EXPECT(0x9d90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9d8f));
        // 4D 0071
        gbc.setState(0x6846, 0xfa88, 0xbff0, 0xe217, 0xaf79, 0x8a18, 0x0, 0x1);
        gbc.writeMem(0x6846, { 0x4d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xfa88, gbc.sp());
        EXPECT(0x6847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0072
        gbc.setState(0x2086, 0xa2dc, 0x4a50, 0xadd8, 0xe8da, 0x9a, 0x1, 0x0);
        gbc.writeMem(0x2086, { 0x4d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa2dc, gbc.sp());
        EXPECT(0x2087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0073
        gbc.setState(0x6f67, 0x25e2, 0x2e90, 0x8145, 0x5392, 0xdc1d, 0x0, 0x1);
        gbc.writeMem(0x6f67, { 0x4d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x25e2, gbc.sp());
        EXPECT(0x6f68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0074
        gbc.setState(0x2f2e, 0xfc24, 0xf230, 0x577b, 0xdd44, 0xd0d2, 0x0, 0x1);
        gbc.writeMem(0x2f2e, { 0x4d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfc24, gbc.sp());
        EXPECT(0x2f2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0075
        gbc.setState(0xa766, 0x4b33, 0xe570, 0x72da, 0x9e3f, 0xfc05, 0x0, 0x0);
        gbc.writeMem(0xa766, { 0x4d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4b33, gbc.sp());
        EXPECT(0xa767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa766));
        // 4D 0076
        gbc.setState(0x243b, 0x574, 0x8f50, 0xe8ef, 0xc2ab, 0xea31, 0x1, 0x1);
        gbc.writeMem(0x243b, { 0x4d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x574, gbc.sp());
        EXPECT(0x243c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0077
        gbc.setState(0x5d4d, 0x31e, 0xf9b0, 0x412, 0xa3df, 0xf77, 0x0, 0x0);
        gbc.writeMem(0x5d4d, { 0x4d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x31e, gbc.sp());
        EXPECT(0x5d4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0078
        gbc.setState(0x39eb, 0x2886, 0xa4b0, 0x55f4, 0x79d, 0x2c0d, 0x1, 0x0);
        gbc.writeMem(0x39eb, { 0x4d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2886, gbc.sp());
        EXPECT(0x39ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0079
        gbc.setState(0x4723, 0x2894, 0x2cf0, 0xd967, 0x6f1e, 0xd8df, 0x1, 0x1);
        gbc.writeMem(0x4723, { 0x4d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2894, gbc.sp());
        EXPECT(0x4724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 007A
        gbc.setState(0xea40, 0x6ccf, 0x8320, 0xd451, 0x6962, 0x476e, 0x1, 0x0);
        gbc.writeMem(0xea40, { 0x4d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6ccf, gbc.sp());
        EXPECT(0xea41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xea40));
        // 4D 007B
        gbc.setState(0x99bb, 0x2317, 0x14e0, 0x72d7, 0xa9cf, 0xba72, 0x0, 0x1);
        gbc.writeMem(0x99bb, { 0x4d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2317, gbc.sp());
        EXPECT(0x99bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x99bb));
        // 4D 007D
        gbc.setState(0xb91d, 0x4221, 0xcf50, 0x7fa2, 0x1651, 0xa99a, 0x1, 0x1);
        gbc.writeMem(0xb91d, { 0x4d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4221, gbc.sp());
        EXPECT(0xb91e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb91d));
        // 4D 007E
        gbc.setState(0x8599, 0xc928, 0x6210, 0x685e, 0x11e8, 0xae02, 0x0, 0x0);
        gbc.writeMem(0x8599, { 0x4d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc928, gbc.sp());
        EXPECT(0x859a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8599));
        // 4D 007F
        gbc.setState(0xe6cc, 0x8967, 0x9050, 0xff49, 0x8d03, 0xda34, 0x1, 0x0);
        gbc.writeMem(0xe6cc, { 0x4d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8967, gbc.sp());
        EXPECT(0xe6cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe6cc));
        // 4D 0080
        gbc.setState(0xcfe7, 0xea57, 0xd680, 0xc30c, 0xafe6, 0x6a5e, 0x1, 0x0);
        gbc.writeMem(0xcfe7, { 0x4d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xea57, gbc.sp());
        EXPECT(0xcfe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xcfe7));
        // 4D 0081
        gbc.setState(0x392b, 0xfbc, 0x9bf0, 0xfdb0, 0x8354, 0x18ea, 0x1, 0x0);
        gbc.writeMem(0x392b, { 0x4d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xfbc, gbc.sp());
        EXPECT(0x392c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0082
        gbc.setState(0x4154, 0x5ec8, 0x24b0, 0x5ba, 0x77d8, 0xee5e, 0x0, 0x1);
        gbc.writeMem(0x4154, { 0x4d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5ec8, gbc.sp());
        EXPECT(0x4155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0083
        gbc.setState(0x1d67, 0xd61f, 0xedf0, 0x35cf, 0xff1, 0xbbbd, 0x0, 0x0);
        gbc.writeMem(0x1d67, { 0x4d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd61f, gbc.sp());
        EXPECT(0x1d68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0084
        gbc.setState(0x2436, 0x9517, 0xa020, 0xa2db, 0x7cf0, 0x77f8, 0x1, 0x0);
        gbc.writeMem(0x2436, { 0x4d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9517, gbc.sp());
        EXPECT(0x2437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0085
        gbc.setState(0x99ce, 0x8d2c, 0x2660, 0xccb0, 0xb785, 0x1352, 0x0, 0x0);
        gbc.writeMem(0x99ce, { 0x4d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8d2c, gbc.sp());
        EXPECT(0x99cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x99ce));
        // 4D 0086
        gbc.setState(0x3cee, 0x4745, 0x4f60, 0xd713, 0x4fbf, 0x6c95, 0x0, 0x0);
        gbc.writeMem(0x3cee, { 0x4d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4745, gbc.sp());
        EXPECT(0x3cef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0087
        gbc.setState(0x8e2a, 0x4cf9, 0x8620, 0x1cda, 0xd83b, 0x1d92, 0x0, 0x0);
        gbc.writeMem(0x8e2a, { 0x4d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4cf9, gbc.sp());
        EXPECT(0x8e2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8e2a));
        // 4D 0088
        gbc.setState(0x69ae, 0x586b, 0xa6d0, 0xdfb1, 0x84f0, 0x9a5d, 0x0, 0x0);
        gbc.writeMem(0x69ae, { 0x4d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x586b, gbc.sp());
        EXPECT(0x69af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0089
        gbc.setState(0x36f5, 0x899a, 0x2570, 0x9fb0, 0xaf68, 0x86cc, 0x1, 0x0);
        gbc.writeMem(0x36f5, { 0x4d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x899a, gbc.sp());
        EXPECT(0x36f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 008A
        gbc.setState(0x51ca, 0x371c, 0xed70, 0x1071, 0xc7a, 0xdac4, 0x1, 0x1);
        gbc.writeMem(0x51ca, { 0x4d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x371c, gbc.sp());
        EXPECT(0x51cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 008B
        gbc.setState(0xbf65, 0x458d, 0x42c0, 0x5bfd, 0xca9a, 0x4839, 0x1, 0x0);
        gbc.writeMem(0xbf65, { 0x4d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x458d, gbc.sp());
        EXPECT(0xbf66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbf65));
        // 4D 008C
        gbc.setState(0x6863, 0x9982, 0xcfa0, 0x4923, 0x354b, 0x88e7, 0x1, 0x0);
        gbc.writeMem(0x6863, { 0x4d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9982, gbc.sp());
        EXPECT(0x6864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 008D
        gbc.setState(0x8bcc, 0xf35e, 0x3c90, 0x2cef, 0xa80e, 0xd346, 0x1, 0x1);
        gbc.writeMem(0x8bcc, { 0x4d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf35e, gbc.sp());
        EXPECT(0x8bcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8bcc));
        // 4D 008E
        gbc.setState(0x86db, 0x2c50, 0x7fc0, 0x6bf2, 0x421c, 0xab40, 0x0, 0x1);
        gbc.writeMem(0x86db, { 0x4d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2c50, gbc.sp());
        EXPECT(0x86dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x86db));
        // 4D 008F
        gbc.setState(0x5a06, 0x62e7, 0xffd0, 0xde8c, 0x9495, 0x8ea2, 0x0, 0x0);
        gbc.writeMem(0x5a06, { 0x4d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x62e7, gbc.sp());
        EXPECT(0x5a07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0090
        gbc.setState(0x113d, 0xf63d, 0x21b0, 0x4436, 0x6c4e, 0x2795, 0x0, 0x0);
        gbc.writeMem(0x113d, { 0x4d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf63d, gbc.sp());
        EXPECT(0x113e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0091
        gbc.setState(0x76ab, 0x2814, 0x8910, 0xe29, 0x3912, 0xa6d1, 0x1, 0x1);
        gbc.writeMem(0x76ab, { 0x4d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2814, gbc.sp());
        EXPECT(0x76ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0092
        gbc.setState(0xec4d, 0x56cf, 0x58c0, 0x3269, 0xac28, 0xc2e0, 0x0, 0x0);
        gbc.writeMem(0xec4d, { 0x4d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x56cf, gbc.sp());
        EXPECT(0xec4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xec4d));
        // 4D 0093
        gbc.setState(0xdad7, 0x1acf, 0x2f40, 0x9882, 0x19d4, 0x49f1, 0x0, 0x1);
        gbc.writeMem(0xdad7, { 0x4d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1acf, gbc.sp());
        EXPECT(0xdad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdad7));
        // 4D 0094
        gbc.setState(0x174b, 0x9fd5, 0xb890, 0x9d25, 0x5984, 0x6634, 0x1, 0x0);
        gbc.writeMem(0x174b, { 0x4d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9fd5, gbc.sp());
        EXPECT(0x174c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0096
        gbc.setState(0xe91d, 0xfe44, 0x5bf0, 0x4046, 0xc6d, 0x6968, 0x1, 0x1);
        gbc.writeMem(0xe91d, { 0x4d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xfe44, gbc.sp());
        EXPECT(0xe91e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe91d));
        // 4D 0097
        gbc.setState(0xab5, 0x5389, 0x91e0, 0xfdbf, 0x3bcf, 0x7979, 0x0, 0x0);
        gbc.writeMem(0xab5, { 0x4d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5389, gbc.sp());
        EXPECT(0xab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0098
        gbc.setState(0xad1, 0x4f66, 0xa6c0, 0x4e6, 0x2e40, 0x72fc, 0x0, 0x1);
        gbc.writeMem(0xad1, { 0x4d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4f66, gbc.sp());
        EXPECT(0xad2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0099
        gbc.setState(0x165a, 0x529b, 0xa930, 0xd35d, 0x7ff5, 0x4af9, 0x1, 0x0);
        gbc.writeMem(0x165a, { 0x4d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x529b, gbc.sp());
        EXPECT(0x165b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 009B
        gbc.setState(0xc635, 0xfa0a, 0x91d0, 0x2448, 0xe19a, 0x5bec, 0x1, 0x1);
        gbc.writeMem(0xc635, { 0x4d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfa0a, gbc.sp());
        EXPECT(0xc636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc635));
        // 4D 009C
        gbc.setState(0x86dc, 0x1524, 0x6bd0, 0x92b4, 0xa591, 0x15e8, 0x0, 0x1);
        gbc.writeMem(0x86dc, { 0x4d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1524, gbc.sp());
        EXPECT(0x86dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x86dc));
        // 4D 009D
        gbc.setState(0x56dd, 0xdeab, 0x3380, 0x78ef, 0xb140, 0xdc6e, 0x0, 0x0);
        gbc.writeMem(0x56dd, { 0x4d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdeab, gbc.sp());
        EXPECT(0x56de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 009E
        gbc.setState(0x182d, 0x4cf6, 0xf770, 0xb2ae, 0x66f0, 0xc21c, 0x0, 0x0);
        gbc.writeMem(0x182d, { 0x4d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4cf6, gbc.sp());
        EXPECT(0x182e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 009F
        gbc.setState(0x840, 0x67, 0x5560, 0xf147, 0x954c, 0xe4ad, 0x0, 0x0);
        gbc.writeMem(0x840, { 0x4d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x67, gbc.sp());
        EXPECT(0x841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00A0
        gbc.setState(0x9cae, 0xfd2e, 0xfec0, 0xeba1, 0xcaf9, 0x2049, 0x1, 0x1);
        gbc.writeMem(0x9cae, { 0x4d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xfd2e, gbc.sp());
        EXPECT(0x9caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9cae));
        // 4D 00A1
        gbc.setState(0x190, 0x3e5c, 0xc8d0, 0x3822, 0x2bd3, 0x85c3, 0x1, 0x1);
        gbc.writeMem(0x190, { 0x4d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3e5c, gbc.sp());
        EXPECT(0x191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 00A2
        gbc.setState(0x4b5d, 0x669a, 0x76e0, 0x2e05, 0xd74e, 0xcf18, 0x0, 0x1);
        gbc.writeMem(0x4b5d, { 0x4d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x669a, gbc.sp());
        EXPECT(0x4b5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00A3
        gbc.setState(0x6684, 0x349d, 0x1070, 0x79f7, 0xc903, 0xc1d4, 0x0, 0x1);
        gbc.writeMem(0x6684, { 0x4d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x349d, gbc.sp());
        EXPECT(0x6685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 00A4
        gbc.setState(0x1dee, 0xf71b, 0x80f0, 0x8258, 0x4681, 0xedfd, 0x0, 0x0);
        gbc.writeMem(0x1dee, { 0x4d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf71b, gbc.sp());
        EXPECT(0x1def, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 00A5
        gbc.setState(0x3ee9, 0x89e5, 0x97b0, 0x11bb, 0xc3cb, 0x50c8, 0x1, 0x0);
        gbc.writeMem(0x3ee9, { 0x4d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x89e5, gbc.sp());
        EXPECT(0x3eea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 00A6
        gbc.setState(0x758f, 0x48e0, 0x11f0, 0x5e23, 0xd490, 0x8cd7, 0x0, 0x0);
        gbc.writeMem(0x758f, { 0x4d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x48e0, gbc.sp());
        EXPECT(0x7590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 00A7
        gbc.setState(0x2276, 0x4f70, 0xaf00, 0xfbf7, 0xe278, 0xf23b, 0x0, 0x1);
        gbc.writeMem(0x2276, { 0x4d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4f70, gbc.sp());
        EXPECT(0x2277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00A8
        gbc.setState(0xc5b1, 0xecd3, 0xf9d0, 0x3978, 0x2ee2, 0x1563, 0x0, 0x1);
        gbc.writeMem(0xc5b1, { 0x4d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xecd3, gbc.sp());
        EXPECT(0xc5b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc5b1));
        // 4D 00AA
        gbc.setState(0x9391, 0xc23c, 0x2210, 0xf29a, 0x78cf, 0x592c, 0x1, 0x1);
        gbc.writeMem(0x9391, { 0x4d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc23c, gbc.sp());
        EXPECT(0x9392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9391));
        // 4D 00AB
        gbc.setState(0xda19, 0x842d, 0xbd00, 0xa837, 0xbda6, 0x3b17, 0x1, 0x1);
        gbc.writeMem(0xda19, { 0x4d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x842d, gbc.sp());
        EXPECT(0xda1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xda19));
        // 4D 00AD
        gbc.setState(0x6683, 0x5322, 0xc930, 0xee0b, 0x8368, 0x8ad4, 0x1, 0x1);
        gbc.writeMem(0x6683, { 0x4d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5322, gbc.sp());
        EXPECT(0x6684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 00AE
        gbc.setState(0xdeb8, 0x2250, 0x47b0, 0x62af, 0xd53d, 0x18d6, 0x1, 0x0);
        gbc.writeMem(0xdeb8, { 0x4d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2250, gbc.sp());
        EXPECT(0xdeb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdeb8));
        // 4D 00AF
        gbc.setState(0xba94, 0x83c0, 0xd8a0, 0x9b, 0x9f8c, 0xbccc, 0x1, 0x1);
        gbc.writeMem(0xba94, { 0x4d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x83c0, gbc.sp());
        EXPECT(0xba95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xba94));
        // 4D 00B0
        gbc.setState(0x4a0b, 0x17a2, 0x2460, 0xdde8, 0x5089, 0xc13e, 0x0, 0x1);
        gbc.writeMem(0x4a0b, { 0x4d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x17a2, gbc.sp());
        EXPECT(0x4a0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00B1
        gbc.setState(0xdc85, 0xb901, 0x17c0, 0xba63, 0xe64b, 0xb1b1, 0x0, 0x1);
        gbc.writeMem(0xdc85, { 0x4d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb901, gbc.sp());
        EXPECT(0xdc86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdc85));
        // 4D 00B2
        gbc.setState(0xc92e, 0x2fdd, 0xaad0, 0x7daf, 0x64b, 0x6f5, 0x0, 0x1);
        gbc.writeMem(0xc92e, { 0x4d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2fdd, gbc.sp());
        EXPECT(0xc92f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc92e));
        // 4D 00B3
        gbc.setState(0x18d5, 0xf1c1, 0xf820, 0x3cfc, 0x19d, 0xda61, 0x0, 0x0);
        gbc.writeMem(0x18d5, { 0x4d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf1c1, gbc.sp());
        EXPECT(0x18d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00B4
        gbc.setState(0x1bc3, 0x9254, 0xfbd0, 0xe75c, 0xe78b, 0xe857, 0x0, 0x0);
        gbc.writeMem(0x1bc3, { 0x4d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9254, gbc.sp());
        EXPECT(0x1bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 00B5
        gbc.setState(0xdfd8, 0x13c, 0xbd10, 0x89c2, 0x7fb2, 0xe807, 0x0, 0x0);
        gbc.writeMem(0xdfd8, { 0x4d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x13c, gbc.sp());
        EXPECT(0xdfd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdfd8));
        // 4D 00B6
        gbc.setState(0x503c, 0x5a3f, 0x6d30, 0x4e96, 0x430e, 0xecc9, 0x1, 0x0);
        gbc.writeMem(0x503c, { 0x4d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5a3f, gbc.sp());
        EXPECT(0x503d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 00B7
        gbc.setState(0xc16f, 0x5fa, 0x5460, 0xa046, 0xa0e4, 0x50f9, 0x0, 0x1);
        gbc.writeMem(0xc16f, { 0x4d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5fa, gbc.sp());
        EXPECT(0xc170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc16f));
        // 4D 00B9
        gbc.setState(0x2b76, 0xdee2, 0xcb30, 0xf6e4, 0x3009, 0x75ed, 0x1, 0x0);
        gbc.writeMem(0x2b76, { 0x4d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xdee2, gbc.sp());
        EXPECT(0x2b77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 00BA
        gbc.setState(0x524, 0x52a4, 0xdb0, 0xb7db, 0x387f, 0x6a34, 0x1, 0x1);
        gbc.writeMem(0x524, { 0x4d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x52a4, gbc.sp());
        EXPECT(0x525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 00BB
        gbc.setState(0x231c, 0xf0b9, 0xbbe0, 0x363c, 0x52b2, 0x1e8e, 0x0, 0x1);
        gbc.writeMem(0x231c, { 0x4d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf0b9, gbc.sp());
        EXPECT(0x231d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00BC
        gbc.setState(0x1795, 0x5a69, 0xbf80, 0xc259, 0xa66d, 0xa052, 0x0, 0x1);
        gbc.writeMem(0x1795, { 0x4d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5a69, gbc.sp());
        EXPECT(0x1796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00BD
        gbc.setState(0xae91, 0xd9bc, 0x4f80, 0x22f1, 0x47de, 0x1bc7, 0x1, 0x0);
        gbc.writeMem(0xae91, { 0x4d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd9bc, gbc.sp());
        EXPECT(0xae92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xae91));
        // 4D 00BE
        gbc.setState(0x2d00, 0x2167, 0x4770, 0xbdcc, 0x24d, 0xce57, 0x0, 0x1);
        gbc.writeMem(0x2d00, { 0x4d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2167, gbc.sp());
        EXPECT(0x2d01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 00BF
        gbc.setState(0x38c2, 0x9d52, 0x5120, 0xc32f, 0x8e46, 0x61f0, 0x1, 0x0);
        gbc.writeMem(0x38c2, { 0x4d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9d52, gbc.sp());
        EXPECT(0x38c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00C0
        gbc.setState(0xe8d3, 0x60b2, 0xb9a0, 0xb8f5, 0x1ba6, 0x685d, 0x1, 0x0);
        gbc.writeMem(0xe8d3, { 0x4d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x60b2, gbc.sp());
        EXPECT(0xe8d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe8d3));
        // 4D 00C1
        gbc.setState(0xd8f9, 0x72e3, 0xcc10, 0x3eb0, 0x1d51, 0x5599, 0x1, 0x0);
        gbc.writeMem(0xd8f9, { 0x4d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x72e3, gbc.sp());
        EXPECT(0xd8fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd8f9));
        // 4D 00C2
        gbc.setState(0xab32, 0x94d0, 0xdc60, 0x33b6, 0xa026, 0x79e2, 0x0, 0x1);
        gbc.writeMem(0xab32, { 0x4d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x94d0, gbc.sp());
        EXPECT(0xab33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xab32));
        // 4D 00C3
        gbc.setState(0x62fa, 0xc0f0, 0xa3e0, 0x5b58, 0x5c0f, 0x24f3, 0x1, 0x0);
        gbc.writeMem(0x62fa, { 0x4d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc0f0, gbc.sp());
        EXPECT(0x62fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00C4
        gbc.setState(0x675d, 0xeb99, 0xb6e0, 0x7ea4, 0xb3c5, 0xecff, 0x0, 0x0);
        gbc.writeMem(0x675d, { 0x4d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xeb99, gbc.sp());
        EXPECT(0x675e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00C5
        gbc.setState(0x364b, 0xd5be, 0x8340, 0xdd6, 0x3121, 0xba82, 0x0, 0x1);
        gbc.writeMem(0x364b, { 0x4d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd5be, gbc.sp());
        EXPECT(0x364c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00C6
        gbc.setState(0xc65, 0x8adc, 0x3940, 0x7cad, 0xeb78, 0x46ea, 0x1, 0x0);
        gbc.writeMem(0xc65, { 0x4d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8adc, gbc.sp());
        EXPECT(0xc66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00C7
        gbc.setState(0x3259, 0x8ca3, 0xa8d0, 0x2db6, 0xcb53, 0x4bab, 0x1, 0x0);
        gbc.writeMem(0x3259, { 0x4d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8ca3, gbc.sp());
        EXPECT(0x325a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 00C8
        gbc.setState(0x2be9, 0x1e5e, 0x8320, 0x2fb9, 0xc41c, 0xe4aa, 0x0, 0x0);
        gbc.writeMem(0x2be9, { 0x4d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1e5e, gbc.sp());
        EXPECT(0x2bea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00C9
        gbc.setState(0xd5e1, 0x7eb2, 0x4c80, 0x2b2d, 0x75f0, 0xc530, 0x0, 0x1);
        gbc.writeMem(0xd5e1, { 0x4d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7eb2, gbc.sp());
        EXPECT(0xd5e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd5e1));
        // 4D 00CA
        gbc.setState(0x2895, 0x4df2, 0x4960, 0x13a3, 0x58b2, 0x363, 0x0, 0x1);
        gbc.writeMem(0x2895, { 0x4d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4df2, gbc.sp());
        EXPECT(0x2896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00CB
        gbc.setState(0x9ecc, 0x228d, 0xeae0, 0x6bb7, 0xf79c, 0xba9f, 0x0, 0x0);
        gbc.writeMem(0x9ecc, { 0x4d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x228d, gbc.sp());
        EXPECT(0x9ecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9ecc));
        // 4D 00CC
        gbc.setState(0xd7a1, 0xa3b6, 0xefb0, 0x2fd2, 0x553e, 0xeb35, 0x0, 0x1);
        gbc.writeMem(0xd7a1, { 0x4d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa3b6, gbc.sp());
        EXPECT(0xd7a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd7a1));
        // 4D 00CD
        gbc.setState(0xaf54, 0x234, 0x3480, 0xfa5, 0x7d74, 0x974, 0x0, 0x0);
        gbc.writeMem(0xaf54, { 0x4d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x234, gbc.sp());
        EXPECT(0xaf55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xaf54));
        // 4D 00CE
        gbc.setState(0x7347, 0x3670, 0x3bb0, 0xe816, 0xd2aa, 0xed35, 0x1, 0x1);
        gbc.writeMem(0x7347, { 0x4d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3670, gbc.sp());
        EXPECT(0x7348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 00CF
        gbc.setState(0xeee0, 0x2c6, 0x5ec0, 0x8f39, 0x1802, 0xb50e, 0x0, 0x0);
        gbc.writeMem(0xeee0, { 0x4d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2c6, gbc.sp());
        EXPECT(0xeee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xeee0));
        // 4D 00D0
        gbc.setState(0xdb25, 0x7dbf, 0x46f0, 0x944f, 0x374c, 0x5afd, 0x1, 0x0);
        gbc.writeMem(0xdb25, { 0x4d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7dbf, gbc.sp());
        EXPECT(0xdb26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdb25));
        // 4D 00D1
        gbc.setState(0xde77, 0x76db, 0xf7e0, 0x452d, 0xc2ed, 0xdbb2, 0x0, 0x1);
        gbc.writeMem(0xde77, { 0x4d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x76db, gbc.sp());
        EXPECT(0xde78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xde77));
        // 4D 00D2
        gbc.setState(0x8de7, 0xd4aa, 0x1c20, 0x4a1c, 0xdc0b, 0x7794, 0x1, 0x1);
        gbc.writeMem(0x8de7, { 0x4d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd4aa, gbc.sp());
        EXPECT(0x8de8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8de7));
        // 4D 00D3
        gbc.setState(0xe917, 0xdb53, 0x240, 0x872, 0x3200, 0xf989, 0x0, 0x0);
        gbc.writeMem(0xe917, { 0x4d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xdb53, gbc.sp());
        EXPECT(0xe918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe917));
        // 4D 00D4
        gbc.setState(0x37cc, 0x88da, 0xc4e0, 0x7586, 0xfb19, 0xbe67, 0x0, 0x1);
        gbc.writeMem(0x37cc, { 0x4d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x88da, gbc.sp());
        EXPECT(0x37cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00D5
        gbc.setState(0xd20e, 0xaca9, 0x22f0, 0xf457, 0xa89, 0x2f40, 0x0, 0x1);
        gbc.writeMem(0xd20e, { 0x4d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xaca9, gbc.sp());
        EXPECT(0xd20f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd20e));
        // 4D 00D6
        gbc.setState(0xabb6, 0x7319, 0xdbf0, 0x3aaa, 0x3f0c, 0x89f0, 0x1, 0x1);
        gbc.writeMem(0xabb6, { 0x4d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7319, gbc.sp());
        EXPECT(0xabb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xabb6));
        // 4D 00D7
        gbc.setState(0x9566, 0xe69b, 0x6600, 0x35f5, 0xccf8, 0xd3d1, 0x1, 0x0);
        gbc.writeMem(0x9566, { 0x4d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe69b, gbc.sp());
        EXPECT(0x9567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9566));
        // 4D 00D8
        gbc.setState(0x99e5, 0xcd59, 0xed80, 0xee23, 0x786c, 0xe069, 0x1, 0x0);
        gbc.writeMem(0x99e5, { 0x4d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xcd59, gbc.sp());
        EXPECT(0x99e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x99e5));
        // 4D 00D9
        gbc.setState(0xcee8, 0x7d7a, 0x12c0, 0x60e8, 0xec3e, 0x28e2, 0x0, 0x0);
        gbc.writeMem(0xcee8, { 0x4d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7d7a, gbc.sp());
        EXPECT(0xcee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xcee8));
        // 4D 00DA
        gbc.setState(0x3bb9, 0x4cc4, 0x2720, 0x1d22, 0x2a57, 0xf5a, 0x1, 0x1);
        gbc.writeMem(0x3bb9, { 0x4d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4cc4, gbc.sp());
        EXPECT(0x3bba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00DB
        gbc.setState(0xa638, 0x46f4, 0xfa50, 0x634b, 0xacba, 0xa46d, 0x0, 0x1);
        gbc.writeMem(0xa638, { 0x4d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x46f4, gbc.sp());
        EXPECT(0xa639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa638));
        // 4D 00DC
        gbc.setState(0x8c6, 0xa90f, 0x73e0, 0xf285, 0x6522, 0x8531, 0x0, 0x0);
        gbc.writeMem(0x8c6, { 0x4d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa90f, gbc.sp());
        EXPECT(0x8c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00DD
        gbc.setState(0x3262, 0xc89b, 0x8500, 0x99c7, 0x18a0, 0x84d7, 0x0, 0x0);
        gbc.writeMem(0x3262, { 0x4d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc89b, gbc.sp());
        EXPECT(0x3263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00DF
        gbc.setState(0x2b08, 0xcdce, 0x69c0, 0xfd46, 0xc230, 0x95ef, 0x1, 0x1);
        gbc.writeMem(0x2b08, { 0x4d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xcdce, gbc.sp());
        EXPECT(0x2b09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00E0
        gbc.setState(0xcf03, 0x488b, 0x2420, 0x5aad, 0x6897, 0xbff5, 0x1, 0x1);
        gbc.writeMem(0xcf03, { 0x4d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x488b, gbc.sp());
        EXPECT(0xcf04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xcf03));
        // 4D 00E1
        gbc.setState(0xcda0, 0xc873, 0x3b30, 0x7bb9, 0x626c, 0x240d, 0x1, 0x1);
        gbc.writeMem(0xcda0, { 0x4d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc873, gbc.sp());
        EXPECT(0xcda1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xcda0));
        // 4D 00E2
        gbc.setState(0x1554, 0xddab, 0x70f0, 0x415a, 0xf0ae, 0xf806, 0x0, 0x1);
        gbc.writeMem(0x1554, { 0x4d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xddab, gbc.sp());
        EXPECT(0x1555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 00E3
        gbc.setState(0x6df8, 0xd351, 0xdb0, 0xa8f2, 0xa5e4, 0x58eb, 0x1, 0x0);
        gbc.writeMem(0x6df8, { 0x4d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd351, gbc.sp());
        EXPECT(0x6df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 00E4
        gbc.setState(0x5505, 0x5ff, 0x51c0, 0x300a, 0xedec, 0xedfb, 0x0, 0x0);
        gbc.writeMem(0x5505, { 0x4d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5ff, gbc.sp());
        EXPECT(0x5506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00E5
        gbc.setState(0x4505, 0x8bfe, 0x17e0, 0x12f, 0x8b, 0xf746, 0x1, 0x0);
        gbc.writeMem(0x4505, { 0x4d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8bfe, gbc.sp());
        EXPECT(0x4506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00E6
        gbc.setState(0x6bae, 0xd105, 0x8660, 0x4944, 0x1e8d, 0xa014, 0x1, 0x1);
        gbc.writeMem(0x6bae, { 0x4d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd105, gbc.sp());
        EXPECT(0x6baf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00E7
        gbc.setState(0x1bf4, 0xff76, 0xd0a0, 0xe93f, 0xf445, 0xa03f, 0x1, 0x1);
        gbc.writeMem(0x1bf4, { 0x4d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xff76, gbc.sp());
        EXPECT(0x1bf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00E8
        gbc.setState(0xb286, 0x3c83, 0xe3c0, 0xbcbf, 0xcec5, 0x60bd, 0x1, 0x1);
        gbc.writeMem(0xb286, { 0x4d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3c83, gbc.sp());
        EXPECT(0xb287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb286));
        // 4D 00EA
        gbc.setState(0xac6d, 0x2f1a, 0xffc0, 0x8c08, 0xbbe5, 0xf3d8, 0x0, 0x0);
        gbc.writeMem(0xac6d, { 0x4d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2f1a, gbc.sp());
        EXPECT(0xac6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xac6d));
        // 4D 00EB
        gbc.setState(0x347e, 0x2cdc, 0xf1c0, 0xbcf3, 0xa772, 0xbc62, 0x0, 0x0);
        gbc.writeMem(0x347e, { 0x4d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2cdc, gbc.sp());
        EXPECT(0x347f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00EC
        gbc.setState(0xe448, 0x4ed9, 0xea80, 0x1a5c, 0x6dd0, 0xc11a, 0x1, 0x0);
        gbc.writeMem(0xe448, { 0x4d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4ed9, gbc.sp());
        EXPECT(0xe449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe448));
        // 4D 00ED
        gbc.setState(0x7b64, 0x7532, 0xf660, 0xb3ef, 0x4e56, 0xf08d, 0x1, 0x1);
        gbc.writeMem(0x7b64, { 0x4d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7532, gbc.sp());
        EXPECT(0x7b65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00EE
        gbc.setState(0x3ca1, 0xc574, 0xc380, 0x887b, 0xd7d0, 0x2b0c, 0x1, 0x1);
        gbc.writeMem(0x3ca1, { 0x4d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc574, gbc.sp());
        EXPECT(0x3ca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00EF
        gbc.setState(0xddb5, 0xbbc1, 0x690, 0xd044, 0x8089, 0x29c4, 0x1, 0x0);
        gbc.writeMem(0xddb5, { 0x4d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbbc1, gbc.sp());
        EXPECT(0xddb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xddb5));
        // 4D 00F0
        gbc.setState(0x33ca, 0xedad, 0x8220, 0xac8b, 0xc96a, 0xb6b4, 0x1, 0x0);
        gbc.writeMem(0x33ca, { 0x4d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xedad, gbc.sp());
        EXPECT(0x33cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 00F1
        gbc.setState(0x517d, 0x6554, 0xf150, 0x6dee, 0x9f11, 0x5455, 0x0, 0x0);
        gbc.writeMem(0x517d, { 0x4d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6554, gbc.sp());
        EXPECT(0x517e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 00F2
        gbc.setState(0x70ef, 0x40b0, 0x3470, 0xf679, 0x911b, 0xef62, 0x1, 0x0);
        gbc.writeMem(0x70ef, { 0x4d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x40b0, gbc.sp());
        EXPECT(0x70f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 00F3
        gbc.setState(0xcdf3, 0x9127, 0xedb0, 0x320d, 0xcb58, 0x430d, 0x0, 0x1);
        gbc.writeMem(0xcdf3, { 0x4d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9127, gbc.sp());
        EXPECT(0xcdf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xcdf3));
        // 4D 00F4
        gbc.setState(0x1b26, 0xcee7, 0x1050, 0xf7fe, 0x9356, 0xcd6f, 0x0, 0x1);
        gbc.writeMem(0x1b26, { 0x4d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcee7, gbc.sp());
        EXPECT(0x1b27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 00F5
        gbc.setState(0xc6a3, 0x6a89, 0xbc90, 0xf116, 0x91f7, 0x2930, 0x1, 0x1);
        gbc.writeMem(0xc6a3, { 0x4d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6a89, gbc.sp());
        EXPECT(0xc6a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc6a3));
        // 4D 00F6
        gbc.setState(0x9925, 0xdea8, 0x1e90, 0xda6f, 0xc2d8, 0x4541, 0x0, 0x1);
        gbc.writeMem(0x9925, { 0x4d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xdea8, gbc.sp());
        EXPECT(0x9926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9925));
        // 4D 00F7
        gbc.setState(0xde3e, 0x887e, 0xead0, 0x2920, 0x9598, 0xa79b, 0x1, 0x1);
        gbc.writeMem(0xde3e, { 0x4d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x887e, gbc.sp());
        EXPECT(0xde3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xde3e));
        // 4D 00F8
        gbc.setState(0x744b, 0x87d7, 0x4570, 0x52ef, 0x88ab, 0xb1e3, 0x0, 0x1);
        gbc.writeMem(0x744b, { 0x4d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x87d7, gbc.sp());
        EXPECT(0x744c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 00F9
        gbc.setState(0x2d6d, 0xeddf, 0x4130, 0x6e6a, 0xca99, 0x25d2, 0x1, 0x1);
        gbc.writeMem(0x2d6d, { 0x4d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xeddf, gbc.sp());
        EXPECT(0x2d6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 00FA
        gbc.setState(0x9006, 0xff5d, 0x3f40, 0xece0, 0x83d9, 0x8a17, 0x0, 0x0);
        gbc.writeMem(0x9006, { 0x4d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xff5d, gbc.sp());
        EXPECT(0x9007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9006));
        // 4D 00FB
        gbc.setState(0x83b5, 0xca33, 0xf000, 0x7bb3, 0xcd7a, 0xb392, 0x1, 0x1);
        gbc.writeMem(0x83b5, { 0x4d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xca33, gbc.sp());
        EXPECT(0x83b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x83b5));
        // 4D 00FC
        gbc.setState(0xe11a, 0x1215, 0x9b40, 0xc3c2, 0xb1bd, 0x5808, 0x1, 0x0);
        gbc.writeMem(0xe11a, { 0x4d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1215, gbc.sp());
        EXPECT(0xe11b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe11a));
        // 4D 00FD
        gbc.setState(0x808a, 0x889e, 0x5960, 0xd47e, 0x9a71, 0x9176, 0x1, 0x1);
        gbc.writeMem(0x808a, { 0x4d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x889e, gbc.sp());
        EXPECT(0x808b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x808a));
        // 4D 00FE
        gbc.setState(0xbb3, 0xe45e, 0x9590, 0xb3a6, 0x5602, 0x2d2d, 0x0, 0x1);
        gbc.writeMem(0xbb3, { 0x4d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe45e, gbc.sp());
        EXPECT(0xbb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 00FF
        gbc.setState(0x140b, 0x7403, 0x2360, 0xba57, 0x35a7, 0x3982, 0x0, 0x0);
        gbc.writeMem(0x140b, { 0x4d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7403, gbc.sp());
        EXPECT(0x140c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0100
        gbc.setState(0xce92, 0xdb71, 0xa770, 0x25f4, 0xbf25, 0xe390, 0x1, 0x1);
        gbc.writeMem(0xce92, { 0x4d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdb71, gbc.sp());
        EXPECT(0xce93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xce92));
        // 4D 0101
        gbc.setState(0x2b07, 0xbaf6, 0x540, 0x45ba, 0x6d6a, 0xe146, 0x0, 0x0);
        gbc.writeMem(0x2b07, { 0x4d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbaf6, gbc.sp());
        EXPECT(0x2b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0102
        gbc.setState(0xb4f6, 0xb21d, 0x4870, 0x9884, 0x14fc, 0xb3cf, 0x0, 0x1);
        gbc.writeMem(0xb4f6, { 0x4d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb21d, gbc.sp());
        EXPECT(0xb4f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb4f6));
        // 4D 0103
        gbc.setState(0xad52, 0xe783, 0x5dd0, 0x14c7, 0x815e, 0x953e, 0x1, 0x0);
        gbc.writeMem(0xad52, { 0x4d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe783, gbc.sp());
        EXPECT(0xad53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xad52));
        // 4D 0104
        gbc.setState(0xb1b8, 0x491a, 0x7000, 0x2792, 0x3f20, 0x3bd0, 0x1, 0x0);
        gbc.writeMem(0xb1b8, { 0x4d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x491a, gbc.sp());
        EXPECT(0xb1b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb1b8));
        // 4D 0106
        gbc.setState(0x7dda, 0xcfb7, 0x4200, 0x9f01, 0x5edd, 0x7eb1, 0x0, 0x1);
        gbc.writeMem(0x7dda, { 0x4d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xcfb7, gbc.sp());
        EXPECT(0x7ddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0107
        gbc.setState(0x7e73, 0x62ca, 0xc490, 0x77c7, 0x5278, 0x702d, 0x1, 0x1);
        gbc.writeMem(0x7e73, { 0x4d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x62ca, gbc.sp());
        EXPECT(0x7e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0108
        gbc.setState(0x3631, 0x1a8d, 0x9f70, 0xc9ab, 0x4e66, 0xe29c, 0x0, 0x1);
        gbc.writeMem(0x3631, { 0x4d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1a8d, gbc.sp());
        EXPECT(0x3632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0109
        gbc.setState(0x99f, 0x29aa, 0xe3d0, 0xccd6, 0x15f3, 0xee9e, 0x1, 0x0);
        gbc.writeMem(0x99f, { 0x4d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x29aa, gbc.sp());
        EXPECT(0x9a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 010A
        gbc.setState(0xa078, 0x96ab, 0x4df0, 0x24c9, 0x242a, 0x68f4, 0x1, 0x1);
        gbc.writeMem(0xa078, { 0x4d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x96ab, gbc.sp());
        EXPECT(0xa079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa078));
        // 4D 010B
        gbc.setState(0x54dd, 0xbb5d, 0x6f0, 0xabc4, 0xbe47, 0x250c, 0x0, 0x1);
        gbc.writeMem(0x54dd, { 0x4d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbb5d, gbc.sp());
        EXPECT(0x54de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 010C
        gbc.setState(0x3417, 0x3b77, 0xa690, 0x4767, 0xf7d6, 0x9b9d, 0x1, 0x1);
        gbc.writeMem(0x3417, { 0x4d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3b77, gbc.sp());
        EXPECT(0x3418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 010D
        gbc.setState(0x8d52, 0x7bca, 0x4c60, 0x3945, 0x36c6, 0x2c, 0x0, 0x1);
        gbc.writeMem(0x8d52, { 0x4d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7bca, gbc.sp());
        EXPECT(0x8d53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8d52));
        // 4D 010E
        gbc.setState(0x2320, 0xd89d, 0xfd60, 0xa485, 0x6a9a, 0xf5be, 0x0, 0x0);
        gbc.writeMem(0x2320, { 0x4d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd89d, gbc.sp());
        EXPECT(0x2321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 010F
        gbc.setState(0x49cb, 0x1f04, 0xbe20, 0x7454, 0xe91, 0x8a02, 0x1, 0x1);
        gbc.writeMem(0x49cb, { 0x4d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1f04, gbc.sp());
        EXPECT(0x49cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0110
        gbc.setState(0x3d08, 0x2d58, 0x4d60, 0xf79c, 0xc2b8, 0xcac3, 0x1, 0x1);
        gbc.writeMem(0x3d08, { 0x4d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2d58, gbc.sp());
        EXPECT(0x3d09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0111
        gbc.setState(0x520d, 0x16b4, 0x1840, 0xb7b7, 0x4f68, 0x6af4, 0x1, 0x0);
        gbc.writeMem(0x520d, { 0x4d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x16b4, gbc.sp());
        EXPECT(0x520e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0112
        gbc.setState(0x703, 0xd603, 0xeb0, 0x968a, 0xd35f, 0x35e8, 0x0, 0x0);
        gbc.writeMem(0x703, { 0x4d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd603, gbc.sp());
        EXPECT(0x704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0113
        gbc.setState(0xcfc5, 0x9fac, 0xdc60, 0x4fb2, 0xa2e3, 0xcd3d, 0x0, 0x1);
        gbc.writeMem(0xcfc5, { 0x4d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9fac, gbc.sp());
        EXPECT(0xcfc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xcfc5));
        // 4D 0114
        gbc.setState(0x9075, 0x2fe1, 0x8c60, 0x7424, 0x555e, 0x159f, 0x0, 0x1);
        gbc.writeMem(0x9075, { 0x4d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2fe1, gbc.sp());
        EXPECT(0x9076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9075));
        // 4D 0115
        gbc.setState(0xc805, 0x8cc1, 0x9280, 0xf08d, 0x374, 0x362f, 0x0, 0x0);
        gbc.writeMem(0xc805, { 0x4d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8cc1, gbc.sp());
        EXPECT(0xc806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc805));
        // 4D 0116
        gbc.setState(0xc6d8, 0x2a74, 0xbfd0, 0x51b8, 0xfd9a, 0xc496, 0x1, 0x0);
        gbc.writeMem(0xc6d8, { 0x4d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2a74, gbc.sp());
        EXPECT(0xc6d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc6d8));
        // 4D 0117
        gbc.setState(0xa55, 0x55e9, 0x76a0, 0xd549, 0x9f63, 0x1436, 0x0, 0x0);
        gbc.writeMem(0xa55, { 0x4d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x55e9, gbc.sp());
        EXPECT(0xa56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0118
        gbc.setState(0x50be, 0x75a6, 0x9be0, 0x21e7, 0x7bd, 0x945b, 0x0, 0x1);
        gbc.writeMem(0x50be, { 0x4d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x75a6, gbc.sp());
        EXPECT(0x50bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0119
        gbc.setState(0x768e, 0x803a, 0xe4f0, 0xeea5, 0xf6c5, 0x92e7, 0x0, 0x1);
        gbc.writeMem(0x768e, { 0x4d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x803a, gbc.sp());
        EXPECT(0x768f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 011A
        gbc.setState(0x4ac0, 0xed19, 0xecc0, 0xfc3, 0xa006, 0x5101, 0x0, 0x1);
        gbc.writeMem(0x4ac0, { 0x4d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xed19, gbc.sp());
        EXPECT(0x4ac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 011C
        gbc.setState(0xcc2f, 0x4979, 0xce20, 0xfa90, 0x7051, 0x5d72, 0x1, 0x0);
        gbc.writeMem(0xcc2f, { 0x4d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4979, gbc.sp());
        EXPECT(0xcc30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xcc2f));
        // 4D 011D
        gbc.setState(0xbe8e, 0xc70c, 0xc8a0, 0x8e62, 0x9529, 0x409d, 0x1, 0x0);
        gbc.writeMem(0xbe8e, { 0x4d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc70c, gbc.sp());
        EXPECT(0xbe8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbe8e));
        // 4D 011E
        gbc.setState(0xde1a, 0x2148, 0x1a40, 0xd35c, 0xb989, 0x41e6, 0x1, 0x0);
        gbc.writeMem(0xde1a, { 0x4d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2148, gbc.sp());
        EXPECT(0xde1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xde1a));
        // 4D 011F
        gbc.setState(0x789f, 0x5e0a, 0x8c10, 0x600f, 0x30b4, 0x14c2, 0x1, 0x0);
        gbc.writeMem(0x789f, { 0x4d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5e0a, gbc.sp());
        EXPECT(0x78a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0120
        gbc.setState(0xa87, 0x24d8, 0x8280, 0xc9a9, 0xc31e, 0x4785, 0x1, 0x1);
        gbc.writeMem(0xa87, { 0x4d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x24d8, gbc.sp());
        EXPECT(0xa88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0121
        gbc.setState(0x905e, 0xe313, 0xec60, 0x4b8e, 0x85f2, 0xfc14, 0x1, 0x0);
        gbc.writeMem(0x905e, { 0x4d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe313, gbc.sp());
        EXPECT(0x905f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x905e));
        // 4D 0122
        gbc.setState(0xa08, 0xdd1d, 0xbb00, 0x9d9c, 0x7ae6, 0xf0aa, 0x1, 0x0);
        gbc.writeMem(0xa08, { 0x4d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xdd1d, gbc.sp());
        EXPECT(0xa09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0123
        gbc.setState(0xe99b, 0xff56, 0xa8e0, 0xb3ee, 0xe6b7, 0xb993, 0x0, 0x1);
        gbc.writeMem(0xe99b, { 0x4d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xff56, gbc.sp());
        EXPECT(0xe99c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe99b));
        // 4D 0124
        gbc.setState(0xcfa7, 0xe051, 0xe080, 0x3b4f, 0xf9c9, 0x4192, 0x0, 0x1);
        gbc.writeMem(0xcfa7, { 0x4d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe051, gbc.sp());
        EXPECT(0xcfa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xcfa7));
        // 4D 0127
        gbc.setState(0xae3f, 0xb4d8, 0x5e00, 0x5891, 0xbe8c, 0x3c69, 0x1, 0x1);
        gbc.writeMem(0xae3f, { 0x4d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb4d8, gbc.sp());
        EXPECT(0xae40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xae3f));
        // 4D 0128
        gbc.setState(0x14f7, 0xa9f4, 0x8510, 0x2dc2, 0x33fd, 0xd1bf, 0x1, 0x0);
        gbc.writeMem(0x14f7, { 0x4d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa9f4, gbc.sp());
        EXPECT(0x14f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0129
        gbc.setState(0x4412, 0x482b, 0xc6c0, 0x4ea8, 0x6feb, 0x5c74, 0x0, 0x1);
        gbc.writeMem(0x4412, { 0x4d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x482b, gbc.sp());
        EXPECT(0x4413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 012A
        gbc.setState(0x5e6b, 0x6ee3, 0x1fd0, 0x6003, 0xf138, 0x3d7, 0x1, 0x0);
        gbc.writeMem(0x5e6b, { 0x4d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6ee3, gbc.sp());
        EXPECT(0x5e6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 012B
        gbc.setState(0x1eab, 0x5881, 0x3070, 0x535a, 0x3814, 0xb122, 0x1, 0x0);
        gbc.writeMem(0x1eab, { 0x4d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5881, gbc.sp());
        EXPECT(0x1eac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 012C
        gbc.setState(0x9b8d, 0x15d2, 0x8d60, 0xba45, 0xe7d0, 0x2c55, 0x0, 0x1);
        gbc.writeMem(0x9b8d, { 0x4d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x15d2, gbc.sp());
        EXPECT(0x9b8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9b8d));
        // 4D 012D
        gbc.setState(0x4d64, 0x6617, 0x700, 0x5af5, 0xf5a, 0x2f27, 0x0, 0x0);
        gbc.writeMem(0x4d64, { 0x4d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6617, gbc.sp());
        EXPECT(0x4d65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 012E
        gbc.setState(0x129e, 0x5ac1, 0xd0a0, 0xfd57, 0xfa82, 0x2310, 0x0, 0x1);
        gbc.writeMem(0x129e, { 0x4d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5ac1, gbc.sp());
        EXPECT(0x129f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 012F
        gbc.setState(0x11f0, 0x1986, 0xce20, 0xae8d, 0xff89, 0xd3fb, 0x0, 0x0);
        gbc.writeMem(0x11f0, { 0x4d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1986, gbc.sp());
        EXPECT(0x11f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0130
        gbc.setState(0x7d05, 0x97e, 0x10f0, 0x84f7, 0xa2a4, 0xe204, 0x1, 0x0);
        gbc.writeMem(0x7d05, { 0x4d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x97e, gbc.sp());
        EXPECT(0x7d06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0131
        gbc.setState(0x6058, 0x1c76, 0xe540, 0xb06a, 0xad4d, 0x8f67, 0x0, 0x0);
        gbc.writeMem(0x6058, { 0x4d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1c76, gbc.sp());
        EXPECT(0x6059, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0132
        gbc.setState(0x6f55, 0xf099, 0x6d90, 0x1d9c, 0x7604, 0x6a50, 0x1, 0x0);
        gbc.writeMem(0x6f55, { 0x4d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf099, gbc.sp());
        EXPECT(0x6f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0133
        gbc.setState(0xd5e, 0xf89c, 0x6620, 0xfa9b, 0x9bd6, 0x2bac, 0x0, 0x1);
        gbc.writeMem(0xd5e, { 0x4d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf89c, gbc.sp());
        EXPECT(0xd5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0134
        gbc.setState(0x846c, 0xcabc, 0x4eb0, 0x2949, 0x5050, 0x7e25, 0x0, 0x0);
        gbc.writeMem(0x846c, { 0x4d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xcabc, gbc.sp());
        EXPECT(0x846d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x846c));
        // 4D 0135
        gbc.setState(0xb392, 0xa97d, 0x8af0, 0x61e7, 0x4572, 0xdf30, 0x0, 0x1);
        gbc.writeMem(0xb392, { 0x4d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa97d, gbc.sp());
        EXPECT(0xb393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb392));
        // 4D 0136
        gbc.setState(0x19a3, 0x3ab4, 0x310, 0x74c2, 0x5194, 0x9159, 0x1, 0x1);
        gbc.writeMem(0x19a3, { 0x4d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3ab4, gbc.sp());
        EXPECT(0x19a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0137
        gbc.setState(0x9f56, 0xfe18, 0x770, 0x5671, 0xb2c2, 0x54be, 0x1, 0x1);
        gbc.writeMem(0x9f56, { 0x4d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xfe18, gbc.sp());
        EXPECT(0x9f57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9f56));
        // 4D 0139
        gbc.setState(0xeab3, 0x1aed, 0x5e80, 0xe4b, 0x7b4e, 0x9ca9, 0x0, 0x1);
        gbc.writeMem(0xeab3, { 0x4d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1aed, gbc.sp());
        EXPECT(0xeab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xeab3));
        // 4D 013A
        gbc.setState(0xfa4, 0x8c10, 0x69a0, 0x10f6, 0xb866, 0xa525, 0x1, 0x1);
        gbc.writeMem(0xfa4, { 0x4d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8c10, gbc.sp());
        EXPECT(0xfa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 013B
        gbc.setState(0x5878, 0xe3b6, 0x1020, 0x6d87, 0xa65b, 0x6ad9, 0x0, 0x1);
        gbc.writeMem(0x5878, { 0x4d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe3b6, gbc.sp());
        EXPECT(0x5879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 013C
        gbc.setState(0xecf7, 0xdf94, 0x5b60, 0xf2ee, 0x2850, 0x4e3b, 0x1, 0x1);
        gbc.writeMem(0xecf7, { 0x4d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdf94, gbc.sp());
        EXPECT(0xecf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xecf7));
        // 4D 013D
        gbc.setState(0x2b9e, 0x584, 0xfa60, 0x8a60, 0x5efc, 0xb8d7, 0x1, 0x0);
        gbc.writeMem(0x2b9e, { 0x4d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x584, gbc.sp());
        EXPECT(0x2b9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 013E
        gbc.setState(0x9e01, 0xb5a9, 0xa380, 0x287f, 0x257a, 0x1f54, 0x0, 0x1);
        gbc.writeMem(0x9e01, { 0x4d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb5a9, gbc.sp());
        EXPECT(0x9e02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9e01));
        // 4D 013F
        gbc.setState(0x8606, 0xb553, 0x4330, 0x382a, 0x9852, 0x5c45, 0x1, 0x0);
        gbc.writeMem(0x8606, { 0x4d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb553, gbc.sp());
        EXPECT(0x8607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8606));
        // 4D 0140
        gbc.setState(0x59db, 0xabed, 0xbf40, 0xa318, 0x12c4, 0x3bea, 0x0, 0x1);
        gbc.writeMem(0x59db, { 0x4d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xabed, gbc.sp());
        EXPECT(0x59dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0141
        gbc.setState(0xb33b, 0x31ec, 0x11b0, 0x300a, 0x4ca7, 0x4205, 0x1, 0x0);
        gbc.writeMem(0xb33b, { 0x4d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x31ec, gbc.sp());
        EXPECT(0xb33c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb33b));
        // 4D 0142
        gbc.setState(0x1dba, 0x3631, 0xf040, 0x8682, 0x1fc3, 0xda3b, 0x0, 0x0);
        gbc.writeMem(0x1dba, { 0x4d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3631, gbc.sp());
        EXPECT(0x1dbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0143
        gbc.setState(0xa567, 0x8236, 0x2220, 0xea6e, 0x7727, 0xcf5d, 0x0, 0x0);
        gbc.writeMem(0xa567, { 0x4d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8236, gbc.sp());
        EXPECT(0xa568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa567));
        // 4D 0144
        gbc.setState(0xe8d, 0x1f27, 0x9130, 0x3a35, 0x5996, 0x54a9, 0x1, 0x0);
        gbc.writeMem(0xe8d, { 0x4d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1f27, gbc.sp());
        EXPECT(0xe8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0145
        gbc.setState(0xcbdb, 0xa370, 0x3940, 0x8e79, 0x1b92, 0x714e, 0x1, 0x0);
        gbc.writeMem(0xcbdb, { 0x4d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa370, gbc.sp());
        EXPECT(0xcbdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xcbdb));
        // 4D 0146
        gbc.setState(0xd0b1, 0x7700, 0x200, 0x2e85, 0x1208, 0x71f1, 0x1, 0x1);
        gbc.writeMem(0xd0b1, { 0x4d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7700, gbc.sp());
        EXPECT(0xd0b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd0b1));
        // 4D 0147
        gbc.setState(0x6e54, 0xe81e, 0xc110, 0x9d4d, 0xeecf, 0xcffc, 0x1, 0x1);
        gbc.writeMem(0x6e54, { 0x4d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe81e, gbc.sp());
        EXPECT(0x6e55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0148
        gbc.setState(0x1c66, 0xfc3d, 0x5da0, 0xa0cd, 0x682d, 0x58b0, 0x0, 0x1);
        gbc.writeMem(0x1c66, { 0x4d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xfc3d, gbc.sp());
        EXPECT(0x1c67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0149
        gbc.setState(0x56ba, 0x4b2c, 0x6b50, 0xbf5a, 0x6b11, 0xf9e7, 0x1, 0x1);
        gbc.writeMem(0x56ba, { 0x4d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4b2c, gbc.sp());
        EXPECT(0x56bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 014A
        gbc.setState(0xa6cd, 0x789b, 0x9880, 0xfe0f, 0xc3c7, 0x9e9e, 0x1, 0x0);
        gbc.writeMem(0xa6cd, { 0x4d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x789b, gbc.sp());
        EXPECT(0xa6ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa6cd));
        // 4D 014B
        gbc.setState(0x5f5d, 0xd065, 0xfa10, 0x690, 0x18ef, 0xef90, 0x0, 0x0);
        gbc.writeMem(0x5f5d, { 0x4d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd065, gbc.sp());
        EXPECT(0x5f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 014C
        gbc.setState(0xd9f6, 0x3599, 0xcda0, 0xacfe, 0xf44d, 0x876, 0x0, 0x0);
        gbc.writeMem(0xd9f6, { 0x4d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3599, gbc.sp());
        EXPECT(0xd9f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd9f6));
        // 4D 014E
        gbc.setState(0xdc00, 0xa496, 0x9f00, 0x9493, 0xb6c3, 0x3460, 0x1, 0x1);
        gbc.writeMem(0xdc00, { 0x4d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa496, gbc.sp());
        EXPECT(0xdc01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdc00));
        // 4D 014F
        gbc.setState(0xda9d, 0xf361, 0x82e0, 0xf6e5, 0xd8a2, 0x8779, 0x0, 0x1);
        gbc.writeMem(0xda9d, { 0x4d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf361, gbc.sp());
        EXPECT(0xda9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xda9d));
        // 4D 0150
        gbc.setState(0x69ae, 0x41d6, 0x4e70, 0x98ff, 0xa674, 0x48f5, 0x1, 0x1);
        gbc.writeMem(0x69ae, { 0x4d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x41d6, gbc.sp());
        EXPECT(0x69af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0151
        gbc.setState(0x462f, 0xb872, 0xd310, 0x40c1, 0x9b8b, 0xca46, 0x1, 0x1);
        gbc.writeMem(0x462f, { 0x4d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb872, gbc.sp());
        EXPECT(0x4630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0152
        gbc.setState(0x84ca, 0x7343, 0xffc0, 0xba9a, 0xfaae, 0x85e1, 0x1, 0x1);
        gbc.writeMem(0x84ca, { 0x4d });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7343, gbc.sp());
        EXPECT(0x84cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x84ca));
        // 4D 0153
        gbc.setState(0x1b02, 0xf413, 0x52c0, 0xf2ac, 0x48d1, 0x2481, 0x1, 0x1);
        gbc.writeMem(0x1b02, { 0x4d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf413, gbc.sp());
        EXPECT(0x1b03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0154
        gbc.setState(0xa170, 0xbd14, 0x7ba0, 0xa0b4, 0xac9f, 0x8fb8, 0x0, 0x1);
        gbc.writeMem(0xa170, { 0x4d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbd14, gbc.sp());
        EXPECT(0xa171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa170));
        // 4D 0155
        gbc.setState(0xa9f6, 0x60cf, 0x3460, 0x6738, 0x9e9c, 0x286, 0x1, 0x0);
        gbc.writeMem(0xa9f6, { 0x4d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x60cf, gbc.sp());
        EXPECT(0xa9f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa9f6));
        // 4D 0156
        gbc.setState(0xb43e, 0xa637, 0x8360, 0xe2c1, 0x67b, 0xa11d, 0x0, 0x0);
        gbc.writeMem(0xb43e, { 0x4d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa637, gbc.sp());
        EXPECT(0xb43f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb43e));
        // 4D 0157
        gbc.setState(0x198e, 0x8ded, 0x32d0, 0x8464, 0x4f8b, 0xdf59, 0x1, 0x0);
        gbc.writeMem(0x198e, { 0x4d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8ded, gbc.sp());
        EXPECT(0x198f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0158
        gbc.setState(0x2111, 0xb6c8, 0xb120, 0x904, 0x848f, 0x7881, 0x1, 0x0);
        gbc.writeMem(0x2111, { 0x4d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb6c8, gbc.sp());
        EXPECT(0x2112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0159
        gbc.setState(0x2954, 0xc702, 0x90f0, 0xd40a, 0xdc77, 0x9548, 0x1, 0x0);
        gbc.writeMem(0x2954, { 0x4d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc702, gbc.sp());
        EXPECT(0x2955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 015A
        gbc.setState(0xdfda, 0xeba6, 0xfa00, 0x3c64, 0x67d1, 0x9ad6, 0x0, 0x1);
        gbc.writeMem(0xdfda, { 0x4d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xeba6, gbc.sp());
        EXPECT(0xdfdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdfda));
        // 4D 015B
        gbc.setState(0xb4d9, 0xcc7f, 0x8030, 0xaff3, 0x1ccd, 0xbf76, 0x1, 0x1);
        gbc.writeMem(0xb4d9, { 0x4d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xcc7f, gbc.sp());
        EXPECT(0xb4da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb4d9));
        // 4D 015C
        gbc.setState(0x2342, 0x99b6, 0x1380, 0x12d, 0x5132, 0x20b4, 0x1, 0x1);
        gbc.writeMem(0x2342, { 0x4d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x99b6, gbc.sp());
        EXPECT(0x2343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 015D
        gbc.setState(0x59ea, 0x7dc0, 0xf400, 0x517d, 0x5e93, 0x5b8, 0x1, 0x0);
        gbc.writeMem(0x59ea, { 0x4d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7dc0, gbc.sp());
        EXPECT(0x59eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 015E
        gbc.setState(0xd6ba, 0x9293, 0x5370, 0xc139, 0x32fa, 0x9651, 0x0, 0x0);
        gbc.writeMem(0xd6ba, { 0x4d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9293, gbc.sp());
        EXPECT(0xd6bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd6ba));
        // 4D 015F
        gbc.setState(0xbb61, 0x547f, 0x2840, 0x830c, 0xbbd4, 0xefec, 0x1, 0x0);
        gbc.writeMem(0xbb61, { 0x4d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x547f, gbc.sp());
        EXPECT(0xbb62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbb61));
        // 4D 0160
        gbc.setState(0xe635, 0x31bc, 0x5bd0, 0xc5fd, 0xb88d, 0x786d, 0x0, 0x0);
        gbc.writeMem(0xe635, { 0x4d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x31bc, gbc.sp());
        EXPECT(0xe636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe635));
        // 4D 0161
        gbc.setState(0x9f49, 0x208, 0xdd60, 0xcf09, 0x6344, 0x205c, 0x0, 0x1);
        gbc.writeMem(0x9f49, { 0x4d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x208, gbc.sp());
        EXPECT(0x9f4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9f49));
        // 4D 0162
        gbc.setState(0x56b7, 0xdba8, 0xbfc0, 0xfe90, 0x7744, 0xf5bf, 0x0, 0x1);
        gbc.writeMem(0x56b7, { 0x4d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xdba8, gbc.sp());
        EXPECT(0x56b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0163
        gbc.setState(0x70f1, 0xf476, 0x6530, 0x43b5, 0xfbf3, 0x28d0, 0x0, 0x0);
        gbc.writeMem(0x70f1, { 0x4d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf476, gbc.sp());
        EXPECT(0x70f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0164
        gbc.setState(0xb5a1, 0x2caa, 0xe5b0, 0xb9ba, 0x8d6c, 0x713e, 0x1, 0x0);
        gbc.writeMem(0xb5a1, { 0x4d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2caa, gbc.sp());
        EXPECT(0xb5a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb5a1));
        // 4D 0165
        gbc.setState(0x50e8, 0x665a, 0x3700, 0x79bf, 0x27d8, 0x8421, 0x0, 0x0);
        gbc.writeMem(0x50e8, { 0x4d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x665a, gbc.sp());
        EXPECT(0x50e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0166
        gbc.setState(0x914b, 0x7470, 0x2760, 0xe4c1, 0x7ad9, 0x3126, 0x0, 0x0);
        gbc.writeMem(0x914b, { 0x4d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7470, gbc.sp());
        EXPECT(0x914c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x914b));
        // 4D 0167
        gbc.setState(0x5ac, 0x4d55, 0xec20, 0xa45d, 0x53a9, 0xebfd, 0x0, 0x0);
        gbc.writeMem(0x5ac, { 0x4d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4d55, gbc.sp());
        EXPECT(0x5ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0168
        gbc.setState(0x4acc, 0x6316, 0x4050, 0x2dbc, 0xa7f2, 0x9a75, 0x0, 0x0);
        gbc.writeMem(0x4acc, { 0x4d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6316, gbc.sp());
        EXPECT(0x4acd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0169
        gbc.setState(0x4579, 0xdca8, 0x8ab0, 0x5745, 0x685f, 0x7a51, 0x1, 0x0);
        gbc.writeMem(0x4579, { 0x4d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdca8, gbc.sp());
        EXPECT(0x457a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 016A
        gbc.setState(0x6505, 0xa7fd, 0x20a0, 0x7fbd, 0x290d, 0x8657, 0x0, 0x1);
        gbc.writeMem(0x6505, { 0x4d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa7fd, gbc.sp());
        EXPECT(0x6506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 016B
        gbc.setState(0x8ce1, 0xd802, 0x2400, 0xbda0, 0xaa0e, 0xaf66, 0x1, 0x0);
        gbc.writeMem(0x8ce1, { 0x4d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd802, gbc.sp());
        EXPECT(0x8ce2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8ce1));
        // 4D 016C
        gbc.setState(0xccb2, 0xd22, 0x14f0, 0x86ec, 0x2ddc, 0x8c52, 0x0, 0x0);
        gbc.writeMem(0xccb2, { 0x4d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd22, gbc.sp());
        EXPECT(0xccb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xccb2));
        // 4D 016D
        gbc.setState(0x772d, 0xfd18, 0xea90, 0x7494, 0xb3e5, 0x6231, 0x0, 0x0);
        gbc.writeMem(0x772d, { 0x4d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xfd18, gbc.sp());
        EXPECT(0x772e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 016E
        gbc.setState(0x7d91, 0xdbde, 0x8330, 0x17bb, 0x9971, 0xbd1, 0x0, 0x0);
        gbc.writeMem(0x7d91, { 0x4d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xdbde, gbc.sp());
        EXPECT(0x7d92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 016F
        gbc.setState(0xeaf7, 0xa7fb, 0xc850, 0xd863, 0x9cc7, 0x909e, 0x1, 0x1);
        gbc.writeMem(0xeaf7, { 0x4d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa7fb, gbc.sp());
        EXPECT(0xeaf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xeaf7));
        // 4D 0170
        gbc.setState(0xb53f, 0xc189, 0x2730, 0xfeac, 0xc403, 0xb8d3, 0x0, 0x1);
        gbc.writeMem(0xb53f, { 0x4d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc189, gbc.sp());
        EXPECT(0xb540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb53f));
        // 4D 0171
        gbc.setState(0x1060, 0x8e8c, 0xe350, 0x3a55, 0xdfe8, 0xa5aa, 0x0, 0x1);
        gbc.writeMem(0x1060, { 0x4d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8e8c, gbc.sp());
        EXPECT(0x1061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0172
        gbc.setState(0x755c, 0x4ea6, 0x4490, 0xfeab, 0xa8ee, 0x19a3, 0x0, 0x0);
        gbc.writeMem(0x755c, { 0x4d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4ea6, gbc.sp());
        EXPECT(0x755d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0173
        gbc.setState(0xcd4c, 0xec5e, 0xfb90, 0x2008, 0xbcda, 0xfb43, 0x1, 0x1);
        gbc.writeMem(0xcd4c, { 0x4d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xec5e, gbc.sp());
        EXPECT(0xcd4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xcd4c));
        // 4D 0174
        gbc.setState(0xe9a9, 0x2df9, 0x1680, 0x7366, 0x9d23, 0xf73, 0x0, 0x1);
        gbc.writeMem(0xe9a9, { 0x4d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2df9, gbc.sp());
        EXPECT(0xe9aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe9a9));
        // 4D 0175
        gbc.setState(0x9ce9, 0xb6ae, 0x70d0, 0x7492, 0xe47a, 0xebab, 0x1, 0x0);
        gbc.writeMem(0x9ce9, { 0x4d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb6ae, gbc.sp());
        EXPECT(0x9cea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9ce9));
        // 4D 0176
        gbc.setState(0x6d59, 0xca, 0x7b40, 0xb5b, 0xae4d, 0x8a74, 0x1, 0x1);
        gbc.writeMem(0x6d59, { 0x4d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xca, gbc.sp());
        EXPECT(0x6d5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0177
        gbc.setState(0xa8d5, 0xf323, 0x82f0, 0x2f69, 0x92fd, 0x8a5e, 0x0, 0x1);
        gbc.writeMem(0xa8d5, { 0x4d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf323, gbc.sp());
        EXPECT(0xa8d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa8d5));
        // 4D 0178
        gbc.setState(0x1b07, 0x9c8b, 0x85e0, 0xe927, 0x41c4, 0xda48, 0x1, 0x1);
        gbc.writeMem(0x1b07, { 0x4d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9c8b, gbc.sp());
        EXPECT(0x1b08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0179
        gbc.setState(0xad59, 0xa68a, 0x9360, 0xe108, 0x3376, 0x7f4c, 0x0, 0x0);
        gbc.writeMem(0xad59, { 0x4d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa68a, gbc.sp());
        EXPECT(0xad5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xad59));
        // 4D 017A
        gbc.setState(0xe748, 0x34aa, 0x93b0, 0xc621, 0x7590, 0xfff, 0x0, 0x1);
        gbc.writeMem(0xe748, { 0x4d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x34aa, gbc.sp());
        EXPECT(0xe749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe748));
        // 4D 017B
        gbc.setState(0x5304, 0xcda1, 0x6920, 0x6541, 0x89d4, 0xff9b, 0x0, 0x1);
        gbc.writeMem(0x5304, { 0x4d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcda1, gbc.sp());
        EXPECT(0x5305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 017C
        gbc.setState(0xa41e, 0xbb3d, 0xa3c0, 0x4720, 0xaa1e, 0x5646, 0x0, 0x0);
        gbc.writeMem(0xa41e, { 0x4d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbb3d, gbc.sp());
        EXPECT(0xa41f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa41e));
        // 4D 017D
        gbc.setState(0x8e8d, 0xef8c, 0x2a10, 0x5f63, 0x1d98, 0x33ba, 0x1, 0x0);
        gbc.writeMem(0x8e8d, { 0x4d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xef8c, gbc.sp());
        EXPECT(0x8e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8e8d));
        // 4D 017E
        gbc.setState(0xc7d9, 0xcc75, 0x70d0, 0xc0c2, 0x1f4d, 0x8acd, 0x1, 0x0);
        gbc.writeMem(0xc7d9, { 0x4d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcc75, gbc.sp());
        EXPECT(0xc7da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc7d9));
        // 4D 017F
        gbc.setState(0x7204, 0xc29b, 0x44b0, 0x9c53, 0x4440, 0x5de, 0x1, 0x0);
        gbc.writeMem(0x7204, { 0x4d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc29b, gbc.sp());
        EXPECT(0x7205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0180
        gbc.setState(0xe7a, 0x2bb6, 0x7540, 0x33f7, 0x1be4, 0x9974, 0x1, 0x1);
        gbc.writeMem(0xe7a, { 0x4d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2bb6, gbc.sp());
        EXPECT(0xe7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0182
        gbc.setState(0xeb32, 0x5607, 0xa560, 0xca5c, 0xeb93, 0xe2a2, 0x1, 0x0);
        gbc.writeMem(0xeb32, { 0x4d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5607, gbc.sp());
        EXPECT(0xeb33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xeb32));
        // 4D 0183
        gbc.setState(0xced3, 0xe237, 0xe0, 0x1cb2, 0x39f3, 0xe8b6, 0x0, 0x1);
        gbc.writeMem(0xced3, { 0x4d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe237, gbc.sp());
        EXPECT(0xced4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xced3));
        // 4D 0184
        gbc.setState(0x46e8, 0x762b, 0x2b50, 0xe78c, 0xe8a3, 0x977e, 0x1, 0x0);
        gbc.writeMem(0x46e8, { 0x4d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x762b, gbc.sp());
        EXPECT(0x46e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0185
        gbc.setState(0x6dde, 0x7e5c, 0x6180, 0x907b, 0x1c56, 0x3974, 0x1, 0x1);
        gbc.writeMem(0x6dde, { 0x4d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7e5c, gbc.sp());
        EXPECT(0x6ddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0186
        gbc.setState(0xb7ae, 0x3e71, 0x5e00, 0x7a3, 0xc93, 0xd489, 0x0, 0x0);
        gbc.writeMem(0xb7ae, { 0x4d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3e71, gbc.sp());
        EXPECT(0xb7af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb7ae));
        // 4D 0187
        gbc.setState(0xab3, 0x285e, 0x52b0, 0x8f14, 0x753b, 0x4718, 0x0, 0x1);
        gbc.writeMem(0xab3, { 0x4d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x285e, gbc.sp());
        EXPECT(0xab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0188
        gbc.setState(0x31f3, 0xbf22, 0xbf70, 0x9f6b, 0x2499, 0x60bf, 0x1, 0x0);
        gbc.writeMem(0x31f3, { 0x4d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xbf22, gbc.sp());
        EXPECT(0x31f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0189
        gbc.setState(0xe45, 0xbddb, 0xb9f0, 0xb1c2, 0x930c, 0xb375, 0x1, 0x1);
        gbc.writeMem(0xe45, { 0x4d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xbddb, gbc.sp());
        EXPECT(0xe46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 018B
        gbc.setState(0x2fe8, 0xb7bb, 0xb080, 0xc1d7, 0xf4e, 0x2df0, 0x1, 0x1);
        gbc.writeMem(0x2fe8, { 0x4d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb7bb, gbc.sp());
        EXPECT(0x2fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 018C
        gbc.setState(0x5789, 0x99a1, 0xeb70, 0x2fa2, 0x89c4, 0x1a04, 0x0, 0x1);
        gbc.writeMem(0x5789, { 0x4d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x99a1, gbc.sp());
        EXPECT(0x578a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 018D
        gbc.setState(0xa43, 0xad36, 0x73b0, 0xfc0c, 0xbb06, 0x27eb, 0x1, 0x0);
        gbc.writeMem(0xa43, { 0x4d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xad36, gbc.sp());
        EXPECT(0xa44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 018E
        gbc.setState(0x4e03, 0xa530, 0x1e70, 0x2257, 0xd0a3, 0xfa5, 0x1, 0x0);
        gbc.writeMem(0x4e03, { 0x4d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa530, gbc.sp());
        EXPECT(0x4e04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 018F
        gbc.setState(0xb225, 0x1021, 0x3000, 0x477e, 0xa53d, 0x1351, 0x1, 0x1);
        gbc.writeMem(0xb225, { 0x4d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1021, gbc.sp());
        EXPECT(0xb226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb225));
        // 4D 0190
        gbc.setState(0xd86a, 0xf9ef, 0x45c0, 0x5c80, 0xaf4c, 0xeb62, 0x1, 0x1);
        gbc.writeMem(0xd86a, { 0x4d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf9ef, gbc.sp());
        EXPECT(0xd86b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd86a));
        // 4D 0191
        gbc.setState(0xbd35, 0x3d76, 0x940, 0xfbde, 0x3662, 0x5c7, 0x1, 0x1);
        gbc.writeMem(0xbd35, { 0x4d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3d76, gbc.sp());
        EXPECT(0xbd36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbd35));
        // 4D 0192
        gbc.setState(0x424e, 0xd12f, 0xce70, 0xbb60, 0x614b, 0x39de, 0x0, 0x1);
        gbc.writeMem(0x424e, { 0x4d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd12f, gbc.sp());
        EXPECT(0x424f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0193
        gbc.setState(0xacc5, 0xbbcf, 0xcfd0, 0xd4b0, 0x2bea, 0x9cdb, 0x1, 0x0);
        gbc.writeMem(0xacc5, { 0x4d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbbcf, gbc.sp());
        EXPECT(0xacc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xacc5));
        // 4D 0195
        gbc.setState(0x3f, 0xa1c6, 0x4ee0, 0x281b, 0x236c, 0x37d4, 0x1, 0x0);
        gbc.writeMem(0x3f, { 0x4d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa1c6, gbc.sp());
        EXPECT(0x40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0196
        gbc.setState(0xb512, 0x13fa, 0x830, 0x5657, 0xfb1b, 0x9dd8, 0x1, 0x0);
        gbc.writeMem(0xb512, { 0x4d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x13fa, gbc.sp());
        EXPECT(0xb513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb512));
        // 4D 0197
        gbc.setState(0x6c31, 0x8b1e, 0x5720, 0xca2e, 0x5ec4, 0xf745, 0x1, 0x1);
        gbc.writeMem(0x6c31, { 0x4d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8b1e, gbc.sp());
        EXPECT(0x6c32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0198
        gbc.setState(0x76ed, 0x98b3, 0x6fd0, 0xaaf3, 0x3d1f, 0x4a87, 0x0, 0x0);
        gbc.writeMem(0x76ed, { 0x4d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x98b3, gbc.sp());
        EXPECT(0x76ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0199
        gbc.setState(0x8671, 0xaff2, 0x14f0, 0x996e, 0x4fb8, 0xe67, 0x0, 0x1);
        gbc.writeMem(0x8671, { 0x4d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xaff2, gbc.sp());
        EXPECT(0x8672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8671));
        // 4D 019A
        gbc.setState(0xa736, 0x4ba1, 0x9d00, 0x7ed5, 0x1894, 0x890d, 0x1, 0x0);
        gbc.writeMem(0xa736, { 0x4d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4ba1, gbc.sp());
        EXPECT(0xa737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa736));
        // 4D 019B
        gbc.setState(0x92e7, 0xb658, 0x85a0, 0x757a, 0x6272, 0x906c, 0x0, 0x0);
        gbc.writeMem(0x92e7, { 0x4d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb658, gbc.sp());
        EXPECT(0x92e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x92e7));
        // 4D 019C
        gbc.setState(0x54a9, 0xe9b6, 0xa450, 0xdf78, 0x89b0, 0x838e, 0x0, 0x0);
        gbc.writeMem(0x54a9, { 0x4d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe9b6, gbc.sp());
        EXPECT(0x54aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 019D
        gbc.setState(0x6524, 0x22aa, 0xf1b0, 0x9f9f, 0xf45a, 0x3122, 0x1, 0x1);
        gbc.writeMem(0x6524, { 0x4d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x22aa, gbc.sp());
        EXPECT(0x6525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 019E
        gbc.setState(0xc83e, 0x7e3d, 0x3e70, 0xb1b9, 0xc10b, 0x8726, 0x1, 0x0);
        gbc.writeMem(0xc83e, { 0x4d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7e3d, gbc.sp());
        EXPECT(0xc83f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc83e));
        // 4D 019F
        gbc.setState(0xebe1, 0xdf30, 0xb390, 0xf97, 0xbe27, 0x36bf, 0x0, 0x0);
        gbc.writeMem(0xebe1, { 0x4d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xdf30, gbc.sp());
        EXPECT(0xebe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xebe1));
        // 4D 01A0
        gbc.setState(0xa5a9, 0xf19f, 0xcea0, 0x13b, 0x33b1, 0xd3f3, 0x1, 0x0);
        gbc.writeMem(0xa5a9, { 0x4d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf19f, gbc.sp());
        EXPECT(0xa5aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa5a9));
        // 4D 01A1
        gbc.setState(0x4b89, 0x7cb7, 0xce70, 0x2837, 0x7926, 0xdc05, 0x0, 0x0);
        gbc.writeMem(0x4b89, { 0x4d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7cb7, gbc.sp());
        EXPECT(0x4b8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01A2
        gbc.setState(0x2076, 0x1fa6, 0x6140, 0xf5a4, 0xd20a, 0xb00a, 0x0, 0x0);
        gbc.writeMem(0x2076, { 0x4d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1fa6, gbc.sp());
        EXPECT(0x2077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 01A3
        gbc.setState(0x31e, 0x3c19, 0x99b0, 0x535, 0x5ef1, 0x3508, 0x1, 0x0);
        gbc.writeMem(0x31e, { 0x4d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3c19, gbc.sp());
        EXPECT(0x31f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01A4
        gbc.setState(0xbce2, 0x4e7e, 0x3500, 0xfdca, 0x655c, 0xbe67, 0x0, 0x0);
        gbc.writeMem(0xbce2, { 0x4d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4e7e, gbc.sp());
        EXPECT(0xbce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbce2));
        // 4D 01A5
        gbc.setState(0x8541, 0xaa65, 0x35e0, 0x3f0, 0x783, 0xfd23, 0x0, 0x1);
        gbc.writeMem(0x8541, { 0x4d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xaa65, gbc.sp());
        EXPECT(0x8542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8541));
        // 4D 01A6
        gbc.setState(0xa6e3, 0x120b, 0x7480, 0x46db, 0x44f8, 0x2b6, 0x0, 0x0);
        gbc.writeMem(0xa6e3, { 0x4d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x120b, gbc.sp());
        EXPECT(0xa6e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa6e3));
        // 4D 01A7
        gbc.setState(0xbe23, 0x5d61, 0x5aa0, 0xad67, 0x65ab, 0xe663, 0x0, 0x0);
        gbc.writeMem(0xbe23, { 0x4d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5d61, gbc.sp());
        EXPECT(0xbe24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbe23));
        // 4D 01A8
        gbc.setState(0x23ed, 0x9945, 0x36d0, 0x4780, 0x56bb, 0xaec4, 0x0, 0x0);
        gbc.writeMem(0x23ed, { 0x4d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9945, gbc.sp());
        EXPECT(0x23ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01A9
        gbc.setState(0x361f, 0x8071, 0x4710, 0x6b0a, 0xd93d, 0x2be0, 0x0, 0x0);
        gbc.writeMem(0x361f, { 0x4d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8071, gbc.sp());
        EXPECT(0x3620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01AA
        gbc.setState(0xeb02, 0xed52, 0xb3a0, 0x33a4, 0x15cf, 0xe82, 0x1, 0x0);
        gbc.writeMem(0xeb02, { 0x4d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xed52, gbc.sp());
        EXPECT(0xeb03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xeb02));
        // 4D 01AB
        gbc.setState(0xbe6d, 0x8a83, 0xd300, 0x9fb2, 0x2186, 0xa2df, 0x0, 0x1);
        gbc.writeMem(0xbe6d, { 0x4d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8a83, gbc.sp());
        EXPECT(0xbe6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbe6d));
        // 4D 01AC
        gbc.setState(0x979b, 0xb877, 0xfbf0, 0x5f70, 0x6ac9, 0xfb91, 0x0, 0x1);
        gbc.writeMem(0x979b, { 0x4d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb877, gbc.sp());
        EXPECT(0x979c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x979b));
        // 4D 01AD
        gbc.setState(0x97c1, 0x68ef, 0x2b10, 0x4cc, 0x4f6a, 0x8899, 0x1, 0x0);
        gbc.writeMem(0x97c1, { 0x4d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x68ef, gbc.sp());
        EXPECT(0x97c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x97c1));
        // 4D 01AE
        gbc.setState(0x6d2c, 0x14c2, 0x84c0, 0x1c96, 0x888b, 0x60f8, 0x1, 0x0);
        gbc.writeMem(0x6d2c, { 0x4d });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x14c2, gbc.sp());
        EXPECT(0x6d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 01AF
        gbc.setState(0xb412, 0x1022, 0x23e0, 0xc53f, 0xb7c6, 0x6d30, 0x0, 0x1);
        gbc.writeMem(0xb412, { 0x4d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1022, gbc.sp());
        EXPECT(0xb413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb412));
        // 4D 01B0
        gbc.setState(0x6c8, 0x3c6e, 0x1020, 0xb38e, 0xf9c, 0x878b, 0x0, 0x0);
        gbc.writeMem(0x6c8, { 0x4d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3c6e, gbc.sp());
        EXPECT(0x6c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 01B1
        gbc.setState(0x434, 0x36ea, 0x79d0, 0xc866, 0xd5b9, 0xec37, 0x0, 0x1);
        gbc.writeMem(0x434, { 0x4d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x36ea, gbc.sp());
        EXPECT(0x435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01B2
        gbc.setState(0x5991, 0x314f, 0x99c0, 0xd0b9, 0xe267, 0x6dc1, 0x1, 0x1);
        gbc.writeMem(0x5991, { 0x4d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x314f, gbc.sp());
        EXPECT(0x5992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 01B3
        gbc.setState(0xb50c, 0x562e, 0xc830, 0x2caa, 0x902, 0xf11b, 0x1, 0x0);
        gbc.writeMem(0xb50c, { 0x4d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x562e, gbc.sp());
        EXPECT(0xb50d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb50c));
        // 4D 01B4
        gbc.setState(0x1a9, 0xd5b5, 0xc7d0, 0x1784, 0x4566, 0xd44, 0x1, 0x1);
        gbc.writeMem(0x1a9, { 0x4d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd5b5, gbc.sp());
        EXPECT(0x1aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01B5
        gbc.setState(0x8566, 0x5f0a, 0xfd70, 0x49cb, 0xac20, 0xa8e1, 0x1, 0x1);
        gbc.writeMem(0x8566, { 0x4d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5f0a, gbc.sp());
        EXPECT(0x8567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8566));
        // 4D 01B6
        gbc.setState(0x3bc, 0x5ed, 0xea00, 0x6748, 0x2546, 0xb995, 0x0, 0x1);
        gbc.writeMem(0x3bc, { 0x4d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5ed, gbc.sp());
        EXPECT(0x3bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 01B7
        gbc.setState(0x1850, 0xe315, 0xc7c0, 0xa402, 0x2e0c, 0xc595, 0x1, 0x1);
        gbc.writeMem(0x1850, { 0x4d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe315, gbc.sp());
        EXPECT(0x1851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 01B8
        gbc.setState(0xeb57, 0x1e84, 0x9b40, 0x2f10, 0xd118, 0x593a, 0x0, 0x0);
        gbc.writeMem(0xeb57, { 0x4d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1e84, gbc.sp());
        EXPECT(0xeb58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xeb57));
        // 4D 01B9
        gbc.setState(0x1716, 0xc4c1, 0xa630, 0xae3d, 0x1f10, 0xbe56, 0x1, 0x1);
        gbc.writeMem(0x1716, { 0x4d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc4c1, gbc.sp());
        EXPECT(0x1717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01BA
        gbc.setState(0x11aa, 0x942e, 0xca20, 0x847c, 0xcca3, 0x214c, 0x1, 0x1);
        gbc.writeMem(0x11aa, { 0x4d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x942e, gbc.sp());
        EXPECT(0x11ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 01BB
        gbc.setState(0x6f1e, 0xf0a2, 0xd3c0, 0x784b, 0x805, 0xcdf, 0x0, 0x1);
        gbc.writeMem(0x6f1e, { 0x4d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf0a2, gbc.sp());
        EXPECT(0x6f1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 01BC
        gbc.setState(0xe561, 0x2138, 0x7e90, 0x735d, 0x4ac0, 0x6bee, 0x0, 0x0);
        gbc.writeMem(0xe561, { 0x4d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2138, gbc.sp());
        EXPECT(0xe562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe561));
        // 4D 01BD
        gbc.setState(0x4af1, 0xb1a4, 0x8290, 0x1322, 0x5896, 0x2f2c, 0x1, 0x1);
        gbc.writeMem(0x4af1, { 0x4d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb1a4, gbc.sp());
        EXPECT(0x4af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01BE
        gbc.setState(0x4e2b, 0x722, 0x3c70, 0xfe94, 0x7f64, 0xecdf, 0x0, 0x0);
        gbc.writeMem(0x4e2b, { 0x4d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x722, gbc.sp());
        EXPECT(0x4e2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01BF
        gbc.setState(0x13d9, 0xc2b6, 0xc5f0, 0x97ce, 0x373b, 0x1d81, 0x0, 0x0);
        gbc.writeMem(0x13d9, { 0x4d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc2b6, gbc.sp());
        EXPECT(0x13da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01C0
        gbc.setState(0x2a63, 0x6b3a, 0xbf0, 0x56fb, 0x5346, 0xb9bd, 0x0, 0x0);
        gbc.writeMem(0x2a63, { 0x4d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6b3a, gbc.sp());
        EXPECT(0x2a64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01C1
        gbc.setState(0xabae, 0x4af8, 0x40f0, 0x57f, 0x84a5, 0x9840, 0x1, 0x0);
        gbc.writeMem(0xabae, { 0x4d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4af8, gbc.sp());
        EXPECT(0xabaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xabae));
        // 4D 01C2
        gbc.setState(0xd36c, 0x1287, 0xdda0, 0x34db, 0x6dcd, 0x5854, 0x0, 0x1);
        gbc.writeMem(0xd36c, { 0x4d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1287, gbc.sp());
        EXPECT(0xd36d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd36c));
        // 4D 01C3
        gbc.setState(0x68c0, 0xabba, 0xf1a0, 0xdd5b, 0x38e7, 0x6830, 0x1, 0x0);
        gbc.writeMem(0x68c0, { 0x4d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xabba, gbc.sp());
        EXPECT(0x68c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 01C5
        gbc.setState(0xed06, 0x4647, 0x1e30, 0x65a3, 0x81d3, 0x77be, 0x1, 0x1);
        gbc.writeMem(0xed06, { 0x4d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4647, gbc.sp());
        EXPECT(0xed07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xed06));
        // 4D 01C6
        gbc.setState(0x5633, 0x18ff, 0x7e60, 0xec9, 0x6b38, 0x2640, 0x1, 0x0);
        gbc.writeMem(0x5633, { 0x4d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x18ff, gbc.sp());
        EXPECT(0x5634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 01C7
        gbc.setState(0x2c8e, 0x43ea, 0xc9b0, 0xc035, 0x738c, 0x460f, 0x1, 0x0);
        gbc.writeMem(0x2c8e, { 0x4d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x43ea, gbc.sp());
        EXPECT(0x2c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01C8
        gbc.setState(0xc4d1, 0x6e8e, 0x81a0, 0x3ff7, 0x5c95, 0x4154, 0x0, 0x0);
        gbc.writeMem(0xc4d1, { 0x4d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6e8e, gbc.sp());
        EXPECT(0xc4d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc4d1));
        // 4D 01C9
        gbc.setState(0xeaab, 0x1f04, 0xdf00, 0x1661, 0xa605, 0xa427, 0x1, 0x0);
        gbc.writeMem(0xeaab, { 0x4d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1f04, gbc.sp());
        EXPECT(0xeaac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xeaab));
        // 4D 01CA
        gbc.setState(0x9584, 0xac19, 0x9500, 0x1cea, 0x1811, 0xadf6, 0x0, 0x1);
        gbc.writeMem(0x9584, { 0x4d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xac19, gbc.sp());
        EXPECT(0x9585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9584));
        // 4D 01CB
        gbc.setState(0x54a, 0x1091, 0x410, 0x74ee, 0x1be4, 0xa339, 0x1, 0x0);
        gbc.writeMem(0x54a, { 0x4d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1091, gbc.sp());
        EXPECT(0x54b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01CC
        gbc.setState(0x9ae8, 0xf3c0, 0xe6b0, 0x3873, 0x365b, 0x8461, 0x0, 0x0);
        gbc.writeMem(0x9ae8, { 0x4d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf3c0, gbc.sp());
        EXPECT(0x9ae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9ae8));
        // 4D 01CD
        gbc.setState(0xceca, 0x2107, 0x2620, 0x7ccb, 0xb534, 0x9933, 0x1, 0x0);
        gbc.writeMem(0xceca, { 0x4d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2107, gbc.sp());
        EXPECT(0xcecb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xceca));
        // 4D 01CE
        gbc.setState(0x6473, 0xdcb5, 0x40d0, 0x213a, 0x1fb5, 0x4a14, 0x1, 0x0);
        gbc.writeMem(0x6473, { 0x4d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdcb5, gbc.sp());
        EXPECT(0x6474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01CF
        gbc.setState(0x4d66, 0x5e21, 0x76f0, 0x9547, 0xa44c, 0x8b12, 0x1, 0x1);
        gbc.writeMem(0x4d66, { 0x4d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5e21, gbc.sp());
        EXPECT(0x4d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01D0
        gbc.setState(0x6058, 0xcfee, 0x58d0, 0x4a1, 0xe86e, 0x7cf9, 0x1, 0x1);
        gbc.writeMem(0x6058, { 0x4d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xcfee, gbc.sp());
        EXPECT(0x6059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01D1
        gbc.setState(0x296d, 0xc064, 0x6fe0, 0x39f1, 0x854f, 0x83f0, 0x1, 0x1);
        gbc.writeMem(0x296d, { 0x4d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc064, gbc.sp());
        EXPECT(0x296e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 01D2
        gbc.setState(0xdeb8, 0xfec1, 0xc7e0, 0xa6c3, 0xf20e, 0x6d8a, 0x0, 0x1);
        gbc.writeMem(0xdeb8, { 0x4d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfec1, gbc.sp());
        EXPECT(0xdeb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdeb8));
        // 4D 01D3
        gbc.setState(0xd856, 0xcb2d, 0xa820, 0x2536, 0x368, 0x1b56, 0x1, 0x0);
        gbc.writeMem(0xd856, { 0x4d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xcb2d, gbc.sp());
        EXPECT(0xd857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd856));
        // 4D 01D4
        gbc.setState(0xc2f1, 0xd9a4, 0xe040, 0x62d9, 0xe71e, 0xa201, 0x0, 0x1);
        gbc.writeMem(0xc2f1, { 0x4d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd9a4, gbc.sp());
        EXPECT(0xc2f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc2f1));
        // 4D 01D5
        gbc.setState(0x7ac9, 0x1fb, 0xee0, 0xb964, 0x1621, 0xf361, 0x1, 0x1);
        gbc.writeMem(0x7ac9, { 0x4d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1fb, gbc.sp());
        EXPECT(0x7aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 01D6
        gbc.setState(0x6933, 0x7cf5, 0xc600, 0x70c1, 0xa7b4, 0x7a44, 0x1, 0x1);
        gbc.writeMem(0x6933, { 0x4d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7cf5, gbc.sp());
        EXPECT(0x6934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 01D7
        gbc.setState(0xd538, 0xd795, 0x2eb0, 0x956d, 0xd8da, 0x27f4, 0x0, 0x1);
        gbc.writeMem(0xd538, { 0x4d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd795, gbc.sp());
        EXPECT(0xd539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd538));
        // 4D 01D8
        gbc.setState(0x7196, 0x9436, 0x2ad0, 0x834b, 0x487a, 0xab8c, 0x1, 0x1);
        gbc.writeMem(0x7196, { 0x4d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9436, gbc.sp());
        EXPECT(0x7197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01D9
        gbc.setState(0x2689, 0x77e9, 0x160, 0x6f2b, 0x5dc8, 0xeeaa, 0x1, 0x0);
        gbc.writeMem(0x2689, { 0x4d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x77e9, gbc.sp());
        EXPECT(0x268a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 01DA
        gbc.setState(0xa8a9, 0xb282, 0xfc90, 0xf2c3, 0x5083, 0x75b1, 0x0, 0x1);
        gbc.writeMem(0xa8a9, { 0x4d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb282, gbc.sp());
        EXPECT(0xa8aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa8a9));
        // 4D 01DB
        gbc.setState(0x70c4, 0x13ca, 0xcbf0, 0xf31c, 0xbfc3, 0x92fe, 0x1, 0x1);
        gbc.writeMem(0x70c4, { 0x4d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x13ca, gbc.sp());
        EXPECT(0x70c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01DC
        gbc.setState(0x7d7f, 0x946d, 0xfcb0, 0x6aea, 0x31f4, 0xa83e, 0x1, 0x0);
        gbc.writeMem(0x7d7f, { 0x4d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x946d, gbc.sp());
        EXPECT(0x7d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01DD
        gbc.setState(0xd1f7, 0x14d, 0x9e80, 0x5dff, 0x67cf, 0x99c3, 0x0, 0x0);
        gbc.writeMem(0xd1f7, { 0x4d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x14d, gbc.sp());
        EXPECT(0xd1f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd1f7));
        // 4D 01DE
        gbc.setState(0xae43, 0x6409, 0x1080, 0x547b, 0x8ce0, 0x8066, 0x1, 0x1);
        gbc.writeMem(0xae43, { 0x4d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6409, gbc.sp());
        EXPECT(0xae44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xae43));
        // 4D 01DF
        gbc.setState(0xbd23, 0x708d, 0x62c0, 0x689b, 0xb49f, 0x3a0, 0x1, 0x0);
        gbc.writeMem(0xbd23, { 0x4d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x708d, gbc.sp());
        EXPECT(0xbd24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbd23));
        // 4D 01E0
        gbc.setState(0x71fd, 0xd513, 0xc370, 0x1348, 0x7477, 0x7845, 0x0, 0x0);
        gbc.writeMem(0x71fd, { 0x4d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd513, gbc.sp());
        EXPECT(0x71fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01E1
        gbc.setState(0x557f, 0xabef, 0xd5a0, 0x8af0, 0x37ef, 0x71e, 0x0, 0x0);
        gbc.writeMem(0x557f, { 0x4d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xabef, gbc.sp());
        EXPECT(0x5580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 01E2
        gbc.setState(0xc667, 0x2aa4, 0xcd80, 0x6734, 0x4215, 0x3996, 0x0, 0x1);
        gbc.writeMem(0xc667, { 0x4d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2aa4, gbc.sp());
        EXPECT(0xc668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc667));
        // 4D 01E3
        gbc.setState(0x3a1f, 0x7fd0, 0xb40, 0xbc6e, 0x7349, 0x607f, 0x0, 0x1);
        gbc.writeMem(0x3a1f, { 0x4d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7fd0, gbc.sp());
        EXPECT(0x3a20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 01E5
        gbc.setState(0x4e43, 0x173f, 0x55b0, 0xc934, 0xf047, 0xc1db, 0x0, 0x1);
        gbc.writeMem(0x4e43, { 0x4d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x173f, gbc.sp());
        EXPECT(0x4e44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01E6
        gbc.setState(0x516b, 0x28ea, 0xd810, 0x6d81, 0x64a9, 0xc066, 0x0, 0x1);
        gbc.writeMem(0x516b, { 0x4d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x28ea, gbc.sp());
        EXPECT(0x516c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01E7
        gbc.setState(0x6169, 0x597a, 0xfd30, 0xd6a8, 0x532d, 0x2d8c, 0x0, 0x1);
        gbc.writeMem(0x6169, { 0x4d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x597a, gbc.sp());
        EXPECT(0x616a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01E8
        gbc.setState(0x8, 0xdbd4, 0x4990, 0xdbc9, 0xaec, 0xeb6e, 0x0, 0x1);
        gbc.writeMem(0x8, { 0x4d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdbd4, gbc.sp());
        EXPECT(0x9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01E9
        gbc.setState(0xd5bd, 0xd0f1, 0xea0, 0x3c75, 0x51da, 0x7bea, 0x1, 0x1);
        gbc.writeMem(0xd5bd, { 0x4d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd0f1, gbc.sp());
        EXPECT(0xd5be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd5bd));
        // 4D 01EA
        gbc.setState(0x3123, 0xf3a2, 0x5c10, 0x582e, 0xf70d, 0x811f, 0x0, 0x0);
        gbc.writeMem(0x3123, { 0x4d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf3a2, gbc.sp());
        EXPECT(0x3124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01EB
        gbc.setState(0xe90a, 0x598f, 0x2040, 0x8b8, 0xbd5a, 0x7d65, 0x1, 0x1);
        gbc.writeMem(0xe90a, { 0x4d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x598f, gbc.sp());
        EXPECT(0xe90b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe90a));
        // 4D 01EC
        gbc.setState(0xd947, 0x4b5f, 0xb510, 0x7e83, 0x4c98, 0xc741, 0x0, 0x0);
        gbc.writeMem(0xd947, { 0x4d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4b5f, gbc.sp());
        EXPECT(0xd948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd947));
        // 4D 01ED
        gbc.setState(0x7b3e, 0x511b, 0xb0c0, 0xaa1e, 0x7d1e, 0x31a6, 0x0, 0x0);
        gbc.writeMem(0x7b3e, { 0x4d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x511b, gbc.sp());
        EXPECT(0x7b3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 01EE
        gbc.setState(0x8f59, 0x5038, 0xe30, 0x19ce, 0xb1a5, 0x5b6f, 0x1, 0x1);
        gbc.writeMem(0x8f59, { 0x4d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5038, gbc.sp());
        EXPECT(0x8f5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8f59));
        // 4D 01EF
        gbc.setState(0xcf33, 0xae66, 0xeb00, 0x3390, 0x6064, 0xf918, 0x1, 0x0);
        gbc.writeMem(0xcf33, { 0x4d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xae66, gbc.sp());
        EXPECT(0xcf34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xcf33));
        // 4D 01F0
        gbc.setState(0x60a0, 0xbf2, 0x98d0, 0x26d5, 0xa2d5, 0x1c9f, 0x1, 0x1);
        gbc.writeMem(0x60a0, { 0x4d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xbf2, gbc.sp());
        EXPECT(0x60a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01F2
        gbc.setState(0xdd6d, 0xb2e1, 0x60e0, 0xb735, 0xd0ca, 0xf2ef, 0x0, 0x0);
        gbc.writeMem(0xdd6d, { 0x4d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb2e1, gbc.sp());
        EXPECT(0xdd6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdd6d));
        // 4D 01F3
        gbc.setState(0x427e, 0xa60f, 0x68f0, 0xcd51, 0xdd91, 0x5593, 0x1, 0x0);
        gbc.writeMem(0x427e, { 0x4d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa60f, gbc.sp());
        EXPECT(0x427f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01F4
        gbc.setState(0x10af, 0xeee9, 0xdb60, 0x9ef1, 0xcdbd, 0xc720, 0x1, 0x1);
        gbc.writeMem(0x10af, { 0x4d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xeee9, gbc.sp());
        EXPECT(0x10b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 01F5
        gbc.setState(0xd107, 0x8046, 0xaed0, 0x3cb4, 0x4e90, 0xcb44, 0x0, 0x0);
        gbc.writeMem(0xd107, { 0x4d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8046, gbc.sp());
        EXPECT(0xd108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd107));
        // 4D 01F7
        gbc.setState(0x2b77, 0x2c8f, 0x1fe0, 0xa9a8, 0xf37e, 0xae1d, 0x1, 0x0);
        gbc.writeMem(0x2b77, { 0x4d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2c8f, gbc.sp());
        EXPECT(0x2b78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 01F8
        gbc.setState(0xef70, 0x4ffa, 0xfc0, 0x2608, 0x6d4d, 0xff89, 0x0, 0x0);
        gbc.writeMem(0xef70, { 0x4d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4ffa, gbc.sp());
        EXPECT(0xef71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xef70));
        // 4D 01F9
        gbc.setState(0x856a, 0x5da0, 0xb880, 0xf2ca, 0x1e90, 0x2d5f, 0x1, 0x0);
        gbc.writeMem(0x856a, { 0x4d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5da0, gbc.sp());
        EXPECT(0x856b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x856a));
        // 4D 01FA
        gbc.setState(0x9739, 0x6c3, 0x61d0, 0x883c, 0xe90, 0x3caa, 0x1, 0x0);
        gbc.writeMem(0x9739, { 0x4d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6c3, gbc.sp());
        EXPECT(0x973a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9739));
        // 4D 01FB
        gbc.setState(0xd13f, 0xf5fe, 0x6b80, 0xe25f, 0xa335, 0x2b35, 0x1, 0x0);
        gbc.writeMem(0xd13f, { 0x4d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf5fe, gbc.sp());
        EXPECT(0xd140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd13f));
        // 4D 01FC
        gbc.setState(0x5ec9, 0xa8d6, 0xe660, 0xd1b3, 0x28e, 0xf538, 0x1, 0x1);
        gbc.writeMem(0x5ec9, { 0x4d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa8d6, gbc.sp());
        EXPECT(0x5eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 01FD
        gbc.setState(0xb669, 0xe34d, 0x8f40, 0x2d75, 0xd14, 0x258f, 0x0, 0x0);
        gbc.writeMem(0xb669, { 0x4d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe34d, gbc.sp());
        EXPECT(0xb66a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb669));
        // 4D 01FE
        gbc.setState(0x5505, 0xe050, 0x8390, 0x10d7, 0x5473, 0x2afc, 0x0, 0x1);
        gbc.writeMem(0x5505, { 0x4d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe050, gbc.sp());
        EXPECT(0x5506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 01FF
        gbc.setState(0x191a, 0x98c7, 0xdf50, 0xe198, 0xc93f, 0x10a6, 0x1, 0x0);
        gbc.writeMem(0x191a, { 0x4d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x98c7, gbc.sp());
        EXPECT(0x191b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0200
        gbc.setState(0xbcd, 0x9e3d, 0xb6b0, 0x1c60, 0x1371, 0x6ff2, 0x1, 0x0);
        gbc.writeMem(0xbcd, { 0x4d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9e3d, gbc.sp());
        EXPECT(0xbce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0201
        gbc.setState(0x29ad, 0x5018, 0xea50, 0x412c, 0x6b6, 0x98b5, 0x1, 0x1);
        gbc.writeMem(0x29ad, { 0x4d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5018, gbc.sp());
        EXPECT(0x29ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0203
        gbc.setState(0xb2ff, 0x6db1, 0xa4d0, 0x2cf0, 0x7ca5, 0x58a5, 0x1, 0x1);
        gbc.writeMem(0xb2ff, { 0x4d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6db1, gbc.sp());
        EXPECT(0xb300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb2ff));
        // 4D 0204
        gbc.setState(0xdc44, 0x9998, 0xdff0, 0x4a36, 0x8583, 0x5312, 0x1, 0x0);
        gbc.writeMem(0xdc44, { 0x4d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9998, gbc.sp());
        EXPECT(0xdc45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdc44));
        // 4D 0205
        gbc.setState(0xc6f7, 0x68a0, 0xd730, 0xba8a, 0x2905, 0x9ca1, 0x0, 0x0);
        gbc.writeMem(0xc6f7, { 0x4d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x68a0, gbc.sp());
        EXPECT(0xc6f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc6f7));
        // 4D 0206
        gbc.setState(0x4b1a, 0xa2de, 0xe230, 0xca9f, 0x9bb2, 0x4838, 0x0, 0x0);
        gbc.writeMem(0x4b1a, { 0x4d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa2de, gbc.sp());
        EXPECT(0x4b1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0207
        gbc.setState(0xd1e0, 0x38ad, 0xa6a0, 0x334, 0x6396, 0x6d3c, 0x1, 0x1);
        gbc.writeMem(0xd1e0, { 0x4d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x38ad, gbc.sp());
        EXPECT(0xd1e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd1e0));
        // 4D 0208
        gbc.setState(0x6261, 0x80c3, 0xd880, 0x75b9, 0x50c8, 0x3684, 0x1, 0x0);
        gbc.writeMem(0x6261, { 0x4d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x80c3, gbc.sp());
        EXPECT(0x6262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0209
        gbc.setState(0xdf10, 0x5b0c, 0xfb40, 0xb81, 0x1925, 0x8ed9, 0x0, 0x1);
        gbc.writeMem(0xdf10, { 0x4d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5b0c, gbc.sp());
        EXPECT(0xdf11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdf10));
        // 4D 020A
        gbc.setState(0xe6c6, 0xf55b, 0x9720, 0x90e8, 0x3b44, 0x7b79, 0x1, 0x0);
        gbc.writeMem(0xe6c6, { 0x4d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf55b, gbc.sp());
        EXPECT(0xe6c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe6c6));
        // 4D 020B
        gbc.setState(0xd80f, 0xf448, 0x2210, 0xbebf, 0x5005, 0x9830, 0x1, 0x1);
        gbc.writeMem(0xd80f, { 0x4d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf448, gbc.sp());
        EXPECT(0xd810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd80f));
        // 4D 020C
        gbc.setState(0x65fa, 0x5714, 0x7960, 0x5ad5, 0xd0c5, 0x8aa2, 0x1, 0x1);
        gbc.writeMem(0x65fa, { 0x4d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5714, gbc.sp());
        EXPECT(0x65fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 020D
        gbc.setState(0x4fdc, 0x6bfa, 0xb530, 0xed, 0xcb3c, 0xf5a1, 0x0, 0x1);
        gbc.writeMem(0x4fdc, { 0x4d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6bfa, gbc.sp());
        EXPECT(0x4fdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 020F
        gbc.setState(0x2170, 0x6d48, 0x80b0, 0x3961, 0xcdca, 0xb8f6, 0x1, 0x1);
        gbc.writeMem(0x2170, { 0x4d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6d48, gbc.sp());
        EXPECT(0x2171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0210
        gbc.setState(0xa49e, 0xc97b, 0x9480, 0xf633, 0xef09, 0x4a12, 0x0, 0x1);
        gbc.writeMem(0xa49e, { 0x4d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc97b, gbc.sp());
        EXPECT(0xa49f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa49e));
        // 4D 0211
        gbc.setState(0x3ee5, 0x5b2b, 0x9cc0, 0xbce9, 0xa0d8, 0x8546, 0x1, 0x1);
        gbc.writeMem(0x3ee5, { 0x4d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5b2b, gbc.sp());
        EXPECT(0x3ee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0212
        gbc.setState(0x4893, 0xce85, 0xbec0, 0xdf3e, 0x8ce9, 0x6015, 0x1, 0x1);
        gbc.writeMem(0x4893, { 0x4d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xce85, gbc.sp());
        EXPECT(0x4894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0213
        gbc.setState(0xe308, 0xecc4, 0x9200, 0xc24d, 0xa99e, 0x5719, 0x1, 0x1);
        gbc.writeMem(0xe308, { 0x4d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xecc4, gbc.sp());
        EXPECT(0xe309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe308));
        // 4D 0214
        gbc.setState(0x2433, 0x8448, 0x120, 0x441d, 0xeff7, 0x9862, 0x0, 0x1);
        gbc.writeMem(0x2433, { 0x4d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8448, gbc.sp());
        EXPECT(0x2434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0215
        gbc.setState(0x2757, 0x47cb, 0x670, 0x8874, 0xa459, 0x7b46, 0x0, 0x1);
        gbc.writeMem(0x2757, { 0x4d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x47cb, gbc.sp());
        EXPECT(0x2758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0216
        gbc.setState(0x9648, 0xff1e, 0x1870, 0x5d64, 0xa5c7, 0x79be, 0x1, 0x0);
        gbc.writeMem(0x9648, { 0x4d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xff1e, gbc.sp());
        EXPECT(0x9649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9648));
        // 4D 0218
        gbc.setState(0xaa3, 0x8376, 0x15a0, 0x589d, 0x3629, 0x2b0, 0x1, 0x1);
        gbc.writeMem(0xaa3, { 0x4d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8376, gbc.sp());
        EXPECT(0xaa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0219
        gbc.setState(0xd6a8, 0xc88b, 0x8d00, 0x9469, 0xb0cd, 0x1c98, 0x1, 0x0);
        gbc.writeMem(0xd6a8, { 0x4d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc88b, gbc.sp());
        EXPECT(0xd6a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd6a8));
        // 4D 021A
        gbc.setState(0x4287, 0xaad, 0x9860, 0xb599, 0xec4b, 0x2cd6, 0x0, 0x1);
        gbc.writeMem(0x4287, { 0x4d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xaad, gbc.sp());
        EXPECT(0x4288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 021B
        gbc.setState(0xb4c7, 0xef9e, 0x30b0, 0xb720, 0xcccd, 0x5846, 0x1, 0x1);
        gbc.writeMem(0xb4c7, { 0x4d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xef9e, gbc.sp());
        EXPECT(0xb4c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb4c7));
        // 4D 021C
        gbc.setState(0x2d9e, 0x44b, 0xa900, 0x4efd, 0xe3e9, 0xce17, 0x1, 0x0);
        gbc.writeMem(0x2d9e, { 0x4d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x44b, gbc.sp());
        EXPECT(0x2d9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 021D
        gbc.setState(0x41df, 0x30fc, 0x7980, 0x6031, 0xff6f, 0xbbcd, 0x0, 0x1);
        gbc.writeMem(0x41df, { 0x4d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x30fc, gbc.sp());
        EXPECT(0x41e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 021E
        gbc.setState(0x9d77, 0xb5e2, 0xe4b0, 0x9de1, 0x5686, 0xaae5, 0x1, 0x1);
        gbc.writeMem(0x9d77, { 0x4d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb5e2, gbc.sp());
        EXPECT(0x9d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9d77));
        // 4D 021F
        gbc.setState(0x5426, 0xa334, 0xf770, 0x189, 0x4b0f, 0xaf9c, 0x1, 0x1);
        gbc.writeMem(0x5426, { 0x4d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa334, gbc.sp());
        EXPECT(0x5427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0220
        gbc.setState(0x6966, 0x1648, 0xc50, 0x408f, 0x1c16, 0xc939, 0x0, 0x1);
        gbc.writeMem(0x6966, { 0x4d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1648, gbc.sp());
        EXPECT(0x6967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0221
        gbc.setState(0xbd01, 0x152c, 0x1e90, 0xd2e5, 0x8d9b, 0x5bb, 0x0, 0x0);
        gbc.writeMem(0xbd01, { 0x4d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x152c, gbc.sp());
        EXPECT(0xbd02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbd01));
        // 4D 0222
        gbc.setState(0x1309, 0x5236, 0xbbc0, 0x20c1, 0x8733, 0xd369, 0x1, 0x0);
        gbc.writeMem(0x1309, { 0x4d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5236, gbc.sp());
        EXPECT(0x130a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0223
        gbc.setState(0xa1eb, 0x1057, 0x1a60, 0x6ba, 0x9413, 0xafe1, 0x1, 0x0);
        gbc.writeMem(0xa1eb, { 0x4d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1057, gbc.sp());
        EXPECT(0xa1ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa1eb));
        // 4D 0224
        gbc.setState(0x833e, 0x56c9, 0xd830, 0x7dc2, 0xf360, 0xd5c, 0x0, 0x0);
        gbc.writeMem(0x833e, { 0x4d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x56c9, gbc.sp());
        EXPECT(0x833f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x833e));
        // 4D 0225
        gbc.setState(0xa771, 0xc14b, 0x5da0, 0x5841, 0x502, 0x5afd, 0x0, 0x0);
        gbc.writeMem(0xa771, { 0x4d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc14b, gbc.sp());
        EXPECT(0xa772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa771));
        // 4D 0226
        gbc.setState(0x6bdb, 0xab5e, 0x6c90, 0xfeec, 0xec78, 0x101d, 0x1, 0x0);
        gbc.writeMem(0x6bdb, { 0x4d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xab5e, gbc.sp());
        EXPECT(0x6bdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0227
        gbc.setState(0xcc61, 0x2a1b, 0xb4f0, 0x84d6, 0x6cda, 0x3b75, 0x1, 0x0);
        gbc.writeMem(0xcc61, { 0x4d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2a1b, gbc.sp());
        EXPECT(0xcc62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xcc61));
        // 4D 0228
        gbc.setState(0xcb38, 0x1c67, 0x5d30, 0xca0f, 0xbc3a, 0x4682, 0x0, 0x0);
        gbc.writeMem(0xcb38, { 0x4d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1c67, gbc.sp());
        EXPECT(0xcb39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xcb38));
        // 4D 0229
        gbc.setState(0x9e95, 0xb1fd, 0xd370, 0x9a3f, 0xa661, 0xabf0, 0x1, 0x1);
        gbc.writeMem(0x9e95, { 0x4d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb1fd, gbc.sp());
        EXPECT(0x9e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9e95));
        // 4D 022A
        gbc.setState(0xcab0, 0x53d2, 0xd60, 0x90c, 0xd9f5, 0x9486, 0x1, 0x0);
        gbc.writeMem(0xcab0, { 0x4d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x53d2, gbc.sp());
        EXPECT(0xcab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xcab0));
        // 4D 022B
        gbc.setState(0xd983, 0xf471, 0xef30, 0xd66e, 0x5001, 0xbbd9, 0x0, 0x1);
        gbc.writeMem(0xd983, { 0x4d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf471, gbc.sp());
        EXPECT(0xd984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd983));
        // 4D 022C
        gbc.setState(0x4729, 0xa29a, 0x3dc0, 0x993f, 0x1126, 0x284e, 0x0, 0x1);
        gbc.writeMem(0x4729, { 0x4d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa29a, gbc.sp());
        EXPECT(0x472a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 022D
        gbc.setState(0xd857, 0xb28f, 0x5990, 0x6962, 0xcf9, 0x77b7, 0x1, 0x0);
        gbc.writeMem(0xd857, { 0x4d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb28f, gbc.sp());
        EXPECT(0xd858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd857));
        // 4D 022F
        gbc.setState(0xe82c, 0x7d29, 0x52b0, 0x69a6, 0xbbd8, 0x7c78, 0x1, 0x1);
        gbc.writeMem(0xe82c, { 0x4d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7d29, gbc.sp());
        EXPECT(0xe82d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe82c));
        // 4D 0230
        gbc.setState(0x36, 0x74b3, 0x2d20, 0x6bf5, 0x2683, 0xc330, 0x1, 0x1);
        gbc.writeMem(0x36, { 0x4d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x74b3, gbc.sp());
        EXPECT(0x37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0231
        gbc.setState(0xe7ee, 0xde06, 0x9c20, 0xcc34, 0x8247, 0xc25d, 0x1, 0x0);
        gbc.writeMem(0xe7ee, { 0x4d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xde06, gbc.sp());
        EXPECT(0xe7ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe7ee));
        // 4D 0233
        gbc.setState(0xb8, 0x9522, 0xeb50, 0xf993, 0xc463, 0x123a, 0x0, 0x1);
        gbc.writeMem(0xb8, { 0x4d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9522, gbc.sp());
        EXPECT(0xb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0234
        gbc.setState(0x9bcb, 0xd2fd, 0x7f50, 0x8762, 0xe593, 0x9023, 0x1, 0x1);
        gbc.writeMem(0x9bcb, { 0x4d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd2fd, gbc.sp());
        EXPECT(0x9bcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9bcb));
        // 4D 0235
        gbc.setState(0xddec, 0x6cbb, 0x9d20, 0xac60, 0x6ca8, 0x2d2c, 0x1, 0x0);
        gbc.writeMem(0xddec, { 0x4d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6cbb, gbc.sp());
        EXPECT(0xdded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xddec));
        // 4D 0236
        gbc.setState(0xd1bb, 0x7d1a, 0x1840, 0xf011, 0x22c0, 0x2d52, 0x0, 0x1);
        gbc.writeMem(0xd1bb, { 0x4d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7d1a, gbc.sp());
        EXPECT(0xd1bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd1bb));
        // 4D 0237
        gbc.setState(0xa6a9, 0x733e, 0x4ea0, 0x344d, 0xac84, 0x3992, 0x0, 0x1);
        gbc.writeMem(0xa6a9, { 0x4d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x733e, gbc.sp());
        EXPECT(0xa6aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa6a9));
        // 4D 0238
        gbc.setState(0xaf20, 0x4dc3, 0x1f30, 0x4ad, 0x96c9, 0x54fc, 0x0, 0x0);
        gbc.writeMem(0xaf20, { 0x4d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4dc3, gbc.sp());
        EXPECT(0xaf21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xaf20));
        // 4D 0239
        gbc.setState(0xa50d, 0x9855, 0x6770, 0x2355, 0xb9af, 0xb7b7, 0x1, 0x1);
        gbc.writeMem(0xa50d, { 0x4d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9855, gbc.sp());
        EXPECT(0xa50e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa50d));
        // 4D 023A
        gbc.setState(0x7b75, 0x9727, 0xd310, 0x388a, 0x194e, 0x8bcc, 0x1, 0x0);
        gbc.writeMem(0x7b75, { 0x4d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9727, gbc.sp());
        EXPECT(0x7b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 023B
        gbc.setState(0x222f, 0xa35, 0x9470, 0x149c, 0x6e46, 0xa57f, 0x1, 0x0);
        gbc.writeMem(0x222f, { 0x4d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa35, gbc.sp());
        EXPECT(0x2230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 023C
        gbc.setState(0x29e, 0x639a, 0x9d00, 0x71fd, 0xe91e, 0xe3f5, 0x0, 0x1);
        gbc.writeMem(0x29e, { 0x4d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x639a, gbc.sp());
        EXPECT(0x29f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 023D
        gbc.setState(0xefc9, 0x2418, 0xe740, 0xc3b3, 0x5475, 0x17c8, 0x0, 0x1);
        gbc.writeMem(0xefc9, { 0x4d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2418, gbc.sp());
        EXPECT(0xefca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xefc9));
        // 4D 023E
        gbc.setState(0x7d, 0xaa07, 0xf920, 0x3fe7, 0xe27c, 0x1b06, 0x0, 0x0);
        gbc.writeMem(0x7d, { 0x4d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xaa07, gbc.sp());
        EXPECT(0x7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 023F
        gbc.setState(0x3e8e, 0xee72, 0x4ad0, 0x825f, 0xa517, 0xc71, 0x0, 0x0);
        gbc.writeMem(0x3e8e, { 0x4d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xee72, gbc.sp());
        EXPECT(0x3e8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0240
        gbc.setState(0x4d01, 0x1fae, 0xdeb0, 0xb701, 0xdaa2, 0x5ee4, 0x1, 0x1);
        gbc.writeMem(0x4d01, { 0x4d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1fae, gbc.sp());
        EXPECT(0x4d02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0241
        gbc.setState(0xb2, 0xe027, 0x71c0, 0x2e5e, 0x40cc, 0xc232, 0x0, 0x0);
        gbc.writeMem(0xb2, { 0x4d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe027, gbc.sp());
        EXPECT(0xb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0242
        gbc.setState(0xdd0d, 0x537d, 0x83e0, 0xccfa, 0xde16, 0x4266, 0x1, 0x1);
        gbc.writeMem(0xdd0d, { 0x4d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x537d, gbc.sp());
        EXPECT(0xdd0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdd0d));
        // 4D 0243
        gbc.setState(0x7e48, 0x41b5, 0x2300, 0x5b89, 0xfeb5, 0x3c4, 0x1, 0x1);
        gbc.writeMem(0x7e48, { 0x4d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x41b5, gbc.sp());
        EXPECT(0x7e49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0244
        gbc.setState(0xc1e0, 0xce92, 0xa730, 0xa2cf, 0x93b2, 0xecf, 0x1, 0x0);
        gbc.writeMem(0xc1e0, { 0x4d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xce92, gbc.sp());
        EXPECT(0xc1e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc1e0));
        // 4D 0245
        gbc.setState(0xa472, 0xd4ab, 0xf800, 0xbdd3, 0xc11e, 0xeef6, 0x1, 0x1);
        gbc.writeMem(0xa472, { 0x4d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd4ab, gbc.sp());
        EXPECT(0xa473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa472));
        // 4D 0247
        gbc.setState(0x5638, 0xa6ac, 0xf010, 0x7ef2, 0xe514, 0xa0ac, 0x0, 0x0);
        gbc.writeMem(0x5638, { 0x4d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa6ac, gbc.sp());
        EXPECT(0x5639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0248
        gbc.setState(0x1122, 0x4d6a, 0x50a0, 0x790c, 0xd917, 0xd1bf, 0x1, 0x1);
        gbc.writeMem(0x1122, { 0x4d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4d6a, gbc.sp());
        EXPECT(0x1123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0249
        gbc.setState(0x3fa3, 0x40f2, 0x7700, 0xcbd4, 0x986, 0xb88b, 0x0, 0x1);
        gbc.writeMem(0x3fa3, { 0x4d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x40f2, gbc.sp());
        EXPECT(0x3fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 024A
        gbc.setState(0xcada, 0x8719, 0xb400, 0x3332, 0xb8b6, 0xb469, 0x1, 0x1);
        gbc.writeMem(0xcada, { 0x4d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8719, gbc.sp());
        EXPECT(0xcadb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xcada));
        // 4D 024B
        gbc.setState(0xc5d0, 0x3be3, 0x1010, 0x20d0, 0xd601, 0x343f, 0x1, 0x1);
        gbc.writeMem(0xc5d0, { 0x4d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3be3, gbc.sp());
        EXPECT(0xc5d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc5d0));
        // 4D 024C
        gbc.setState(0xb487, 0x8fb5, 0xe160, 0x810a, 0xa613, 0x98af, 0x0, 0x1);
        gbc.writeMem(0xb487, { 0x4d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8fb5, gbc.sp());
        EXPECT(0xb488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb487));
        // 4D 024D
        gbc.setState(0x3b86, 0xe0b2, 0x5f0, 0x4fc, 0x79b3, 0xbcbb, 0x1, 0x1);
        gbc.writeMem(0x3b86, { 0x4d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe0b2, gbc.sp());
        EXPECT(0x3b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 024F
        gbc.setState(0xa85d, 0x2c7a, 0xf5d0, 0xb4bb, 0xe47f, 0x1ed1, 0x0, 0x0);
        gbc.writeMem(0xa85d, { 0x4d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2c7a, gbc.sp());
        EXPECT(0xa85e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa85d));
        // 4D 0250
        gbc.setState(0xa0af, 0x62c4, 0x670, 0x3465, 0x2f5, 0x7021, 0x1, 0x1);
        gbc.writeMem(0xa0af, { 0x4d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x62c4, gbc.sp());
        EXPECT(0xa0b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa0af));
        // 4D 0251
        gbc.setState(0x9836, 0xd525, 0xc980, 0x39b6, 0x4c47, 0x5140, 0x1, 0x1);
        gbc.writeMem(0x9836, { 0x4d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd525, gbc.sp());
        EXPECT(0x9837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9836));
        // 4D 0252
        gbc.setState(0xbc50, 0xeb60, 0x5c90, 0xab5d, 0x58ab, 0x7f90, 0x0, 0x0);
        gbc.writeMem(0xbc50, { 0x4d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xeb60, gbc.sp());
        EXPECT(0xbc51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbc50));
        // 4D 0253
        gbc.setState(0x24ea, 0xf90e, 0xa5e0, 0xf5d, 0x370e, 0x1a29, 0x1, 0x0);
        gbc.writeMem(0x24ea, { 0x4d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf90e, gbc.sp());
        EXPECT(0x24eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0254
        gbc.setState(0x5217, 0x4fc7, 0xe0a0, 0x5cc2, 0xeedb, 0xe156, 0x0, 0x1);
        gbc.writeMem(0x5217, { 0x4d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4fc7, gbc.sp());
        EXPECT(0x5218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0255
        gbc.setState(0xb89c, 0x171a, 0x5e40, 0xaa92, 0x6730, 0xdb78, 0x1, 0x0);
        gbc.writeMem(0xb89c, { 0x4d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x171a, gbc.sp());
        EXPECT(0xb89d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb89c));
        // 4D 0256
        gbc.setState(0x31b1, 0x6d5f, 0xacc0, 0xea33, 0xd0c2, 0x393f, 0x0, 0x1);
        gbc.writeMem(0x31b1, { 0x4d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6d5f, gbc.sp());
        EXPECT(0x31b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0257
        gbc.setState(0x5b15, 0x422a, 0x2d20, 0xb926, 0xeed8, 0x3237, 0x0, 0x1);
        gbc.writeMem(0x5b15, { 0x4d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x422a, gbc.sp());
        EXPECT(0x5b16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0258
        gbc.setState(0x3cd7, 0xc3e9, 0xfcc0, 0xd1e6, 0x6f29, 0x1951, 0x0, 0x0);
        gbc.writeMem(0x3cd7, { 0x4d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc3e9, gbc.sp());
        EXPECT(0x3cd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0259
        gbc.setState(0x5494, 0x2beb, 0x12b0, 0xe493, 0xc550, 0xbbeb, 0x0, 0x0);
        gbc.writeMem(0x5494, { 0x4d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2beb, gbc.sp());
        EXPECT(0x5495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 025A
        gbc.setState(0x6320, 0x8083, 0xba20, 0xd8d6, 0x787b, 0x1361, 0x1, 0x1);
        gbc.writeMem(0x6320, { 0x4d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8083, gbc.sp());
        EXPECT(0x6321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 025B
        gbc.setState(0xb734, 0x227c, 0x350, 0xe633, 0x238a, 0x453a, 0x0, 0x0);
        gbc.writeMem(0xb734, { 0x4d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x227c, gbc.sp());
        EXPECT(0xb735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb734));
        // 4D 025C
        gbc.setState(0xb6ad, 0x665c, 0x80d0, 0x4094, 0xa036, 0x2691, 0x1, 0x1);
        gbc.writeMem(0xb6ad, { 0x4d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x665c, gbc.sp());
        EXPECT(0xb6ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb6ad));
        // 4D 025D
        gbc.setState(0x267a, 0x9da6, 0xe780, 0x73ec, 0xa59a, 0x73c8, 0x0, 0x0);
        gbc.writeMem(0x267a, { 0x4d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9da6, gbc.sp());
        EXPECT(0x267b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 025E
        gbc.setState(0x430d, 0x1539, 0x60, 0x874, 0x3660, 0xe212, 0x0, 0x0);
        gbc.writeMem(0x430d, { 0x4d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1539, gbc.sp());
        EXPECT(0x430e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 025F
        gbc.setState(0x269f, 0xd0f5, 0x2650, 0x393, 0xe01c, 0x93bd, 0x0, 0x0);
        gbc.writeMem(0x269f, { 0x4d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd0f5, gbc.sp());
        EXPECT(0x26a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0260
        gbc.setState(0xcf45, 0xd829, 0xfd30, 0xf3fa, 0x21ff, 0x706f, 0x1, 0x1);
        gbc.writeMem(0xcf45, { 0x4d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd829, gbc.sp());
        EXPECT(0xcf46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xcf45));
        // 4D 0261
        gbc.setState(0xd4db, 0xebf3, 0x5b40, 0x7b80, 0xca95, 0x1f71, 0x1, 0x1);
        gbc.writeMem(0xd4db, { 0x4d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xebf3, gbc.sp());
        EXPECT(0xd4dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd4db));
        // 4D 0262
        gbc.setState(0xe4da, 0x9330, 0x6820, 0xfc3f, 0x648, 0x9315, 0x0, 0x0);
        gbc.writeMem(0xe4da, { 0x4d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9330, gbc.sp());
        EXPECT(0xe4db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe4da));
        // 4D 0263
        gbc.setState(0x4e6c, 0xd2cb, 0xc940, 0xb893, 0x93f0, 0xde53, 0x0, 0x0);
        gbc.writeMem(0x4e6c, { 0x4d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd2cb, gbc.sp());
        EXPECT(0x4e6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0264
        gbc.setState(0x98a4, 0x7e66, 0x6e50, 0x6105, 0xc904, 0x51af, 0x0, 0x0);
        gbc.writeMem(0x98a4, { 0x4d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7e66, gbc.sp());
        EXPECT(0x98a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x98a4));
        // 4D 0265
        gbc.setState(0x4ffe, 0xf594, 0x4f0, 0xa784, 0x41fa, 0xe53a, 0x1, 0x0);
        gbc.writeMem(0x4ffe, { 0x4d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf594, gbc.sp());
        EXPECT(0x4fff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0268
        gbc.setState(0x16d8, 0x3341, 0xd9d0, 0x8b8, 0x90bb, 0xf0c8, 0x1, 0x0);
        gbc.writeMem(0x16d8, { 0x4d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3341, gbc.sp());
        EXPECT(0x16d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0269
        gbc.setState(0x7215, 0x58b, 0x10c0, 0xcd09, 0xb895, 0x887, 0x1, 0x0);
        gbc.writeMem(0x7215, { 0x4d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x58b, gbc.sp());
        EXPECT(0x7216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 026A
        gbc.setState(0x1a83, 0x53f, 0x5c80, 0x78c0, 0x959b, 0x573f, 0x1, 0x1);
        gbc.writeMem(0x1a83, { 0x4d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x53f, gbc.sp());
        EXPECT(0x1a84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 026B
        gbc.setState(0x2e83, 0x410b, 0x7b70, 0x6400, 0x74a3, 0xa4c, 0x1, 0x1);
        gbc.writeMem(0x2e83, { 0x4d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x410b, gbc.sp());
        EXPECT(0x2e84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 026C
        gbc.setState(0x3d60, 0x1f56, 0x210, 0x4cfe, 0x48f7, 0x4349, 0x0, 0x1);
        gbc.writeMem(0x3d60, { 0x4d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1f56, gbc.sp());
        EXPECT(0x3d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 026D
        gbc.setState(0xb001, 0x281d, 0x5fc0, 0x7bd0, 0x8369, 0x94b9, 0x1, 0x0);
        gbc.writeMem(0xb001, { 0x4d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x281d, gbc.sp());
        EXPECT(0xb002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb001));
        // 4D 026E
        gbc.setState(0x4b4b, 0xa4fc, 0xf670, 0x2a08, 0xe5ad, 0x4e53, 0x1, 0x1);
        gbc.writeMem(0x4b4b, { 0x4d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa4fc, gbc.sp());
        EXPECT(0x4b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 026F
        gbc.setState(0x66aa, 0xf5fc, 0xe280, 0x42bf, 0x1a0c, 0xa5ea, 0x0, 0x0);
        gbc.writeMem(0x66aa, { 0x4d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf5fc, gbc.sp());
        EXPECT(0x66ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0270
        gbc.setState(0x70d6, 0x1b39, 0xd470, 0xab50, 0x4d3d, 0xc793, 0x1, 0x0);
        gbc.writeMem(0x70d6, { 0x4d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1b39, gbc.sp());
        EXPECT(0x70d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0271
        gbc.setState(0x1d73, 0xec9e, 0xe8f0, 0x5660, 0x4a23, 0x1867, 0x1, 0x0);
        gbc.writeMem(0x1d73, { 0x4d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xec9e, gbc.sp());
        EXPECT(0x1d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0272
        gbc.setState(0x3883, 0x9322, 0x470, 0x1e2e, 0x3285, 0xb96e, 0x1, 0x0);
        gbc.writeMem(0x3883, { 0x4d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9322, gbc.sp());
        EXPECT(0x3884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0273
        gbc.setState(0x2184, 0xa821, 0xeec0, 0xd744, 0x4c4a, 0xe8cc, 0x1, 0x0);
        gbc.writeMem(0x2184, { 0x4d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa821, gbc.sp());
        EXPECT(0x2185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0274
        gbc.setState(0xcc25, 0x933a, 0xe010, 0x2d8e, 0xa47d, 0x742e, 0x0, 0x1);
        gbc.writeMem(0xcc25, { 0x4d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x933a, gbc.sp());
        EXPECT(0xcc26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xcc25));
        // 4D 0275
        gbc.setState(0x412b, 0x4465, 0x3b00, 0x984c, 0x1e01, 0x2ae6, 0x1, 0x1);
        gbc.writeMem(0x412b, { 0x4d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4465, gbc.sp());
        EXPECT(0x412c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0276
        gbc.setState(0x11bb, 0x2fd6, 0x3a30, 0x7045, 0xf7d0, 0x6b9b, 0x1, 0x0);
        gbc.writeMem(0x11bb, { 0x4d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2fd6, gbc.sp());
        EXPECT(0x11bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0277
        gbc.setState(0x4d5d, 0xac1f, 0x6750, 0x805a, 0xd394, 0xd96b, 0x0, 0x1);
        gbc.writeMem(0x4d5d, { 0x4d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xac1f, gbc.sp());
        EXPECT(0x4d5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0278
        gbc.setState(0x4e35, 0x3e76, 0xacc0, 0x5952, 0xa631, 0xfab0, 0x0, 0x0);
        gbc.writeMem(0x4e35, { 0x4d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3e76, gbc.sp());
        EXPECT(0x4e36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0279
        gbc.setState(0x9a4d, 0xe1cb, 0x2d70, 0xcc0d, 0xc1c8, 0xe12f, 0x0, 0x0);
        gbc.writeMem(0x9a4d, { 0x4d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe1cb, gbc.sp());
        EXPECT(0x9a4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9a4d));
        // 4D 027A
        gbc.setState(0x5bde, 0x87f5, 0xccd0, 0xc9d1, 0xb34a, 0x3b8a, 0x0, 0x1);
        gbc.writeMem(0x5bde, { 0x4d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x87f5, gbc.sp());
        EXPECT(0x5bdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 027B
        gbc.setState(0x1fe2, 0x2d01, 0x5250, 0x8f2, 0xc0a6, 0xf97a, 0x1, 0x1);
        gbc.writeMem(0x1fe2, { 0x4d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2d01, gbc.sp());
        EXPECT(0x1fe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 027D
        gbc.setState(0xd2af, 0xc844, 0x4f0, 0x6b31, 0xba67, 0x3dfc, 0x1, 0x0);
        gbc.writeMem(0xd2af, { 0x4d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc844, gbc.sp());
        EXPECT(0xd2b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd2af));
        // 4D 027E
        gbc.setState(0x7ea6, 0x6f60, 0x62b0, 0x814c, 0x1672, 0xaff0, 0x0, 0x0);
        gbc.writeMem(0x7ea6, { 0x4d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6f60, gbc.sp());
        EXPECT(0x7ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 027F
        gbc.setState(0x541f, 0xa2e, 0x4b90, 0x5d99, 0xa9cb, 0x4d84, 0x0, 0x0);
        gbc.writeMem(0x541f, { 0x4d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa2e, gbc.sp());
        EXPECT(0x5420, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0280
        gbc.setState(0xdda9, 0x9f28, 0xfa30, 0x6513, 0x3a2, 0xff39, 0x1, 0x1);
        gbc.writeMem(0xdda9, { 0x4d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9f28, gbc.sp());
        EXPECT(0xddaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdda9));
        // 4D 0281
        gbc.setState(0x82de, 0xc214, 0xea50, 0xe8fa, 0x675f, 0x69b7, 0x1, 0x0);
        gbc.writeMem(0x82de, { 0x4d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc214, gbc.sp());
        EXPECT(0x82df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x82de));
        // 4D 0282
        gbc.setState(0x1ee6, 0x3a51, 0x6bc0, 0x87e3, 0xace7, 0xac04, 0x0, 0x1);
        gbc.writeMem(0x1ee6, { 0x4d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3a51, gbc.sp());
        EXPECT(0x1ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0283
        gbc.setState(0x5913, 0x7ae0, 0xfec0, 0x1e6e, 0x8394, 0xe50f, 0x0, 0x0);
        gbc.writeMem(0x5913, { 0x4d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7ae0, gbc.sp());
        EXPECT(0x5914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0284
        gbc.setState(0xa271, 0x9379, 0x47a0, 0x5e70, 0x19b3, 0x843d, 0x1, 0x1);
        gbc.writeMem(0xa271, { 0x4d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9379, gbc.sp());
        EXPECT(0xa272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa271));
        // 4D 0285
        gbc.setState(0xca6d, 0x97a3, 0x4b90, 0x5c0a, 0x97c4, 0xb6b6, 0x1, 0x1);
        gbc.writeMem(0xca6d, { 0x4d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x97a3, gbc.sp());
        EXPECT(0xca6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xca6d));
        // 4D 0286
        gbc.setState(0xdca1, 0x27f1, 0x3ae0, 0x7dda, 0x9949, 0xf581, 0x1, 0x0);
        gbc.writeMem(0xdca1, { 0x4d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x27f1, gbc.sp());
        EXPECT(0xdca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdca1));
        // 4D 0287
        gbc.setState(0x6a04, 0x113b, 0x82b0, 0xcec6, 0xecc7, 0xb5a7, 0x0, 0x1);
        gbc.writeMem(0x6a04, { 0x4d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x113b, gbc.sp());
        EXPECT(0x6a05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0288
        gbc.setState(0xa517, 0x1063, 0x7f70, 0x4c42, 0x669b, 0x949f, 0x0, 0x1);
        gbc.writeMem(0xa517, { 0x4d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1063, gbc.sp());
        EXPECT(0xa518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa517));
        // 4D 0289
        gbc.setState(0x52d9, 0x12ca, 0xc600, 0x16ff, 0xe56a, 0xaf6b, 0x1, 0x1);
        gbc.writeMem(0x52d9, { 0x4d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x12ca, gbc.sp());
        EXPECT(0x52da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 028A
        gbc.setState(0x42e9, 0xd105, 0x31f0, 0xddfc, 0x9017, 0xa60f, 0x0, 0x0);
        gbc.writeMem(0x42e9, { 0x4d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd105, gbc.sp());
        EXPECT(0x42ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 028B
        gbc.setState(0x42a4, 0x8f72, 0xb020, 0x3e7, 0xb8bd, 0x14ad, 0x1, 0x1);
        gbc.writeMem(0x42a4, { 0x4d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8f72, gbc.sp());
        EXPECT(0x42a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 028C
        gbc.setState(0x50fe, 0xb56c, 0x61a0, 0x369c, 0xae63, 0x5b02, 0x1, 0x0);
        gbc.writeMem(0x50fe, { 0x4d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb56c, gbc.sp());
        EXPECT(0x50ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 028D
        gbc.setState(0xbf63, 0x5ca8, 0x400, 0x4bc7, 0xd48a, 0xe11f, 0x0, 0x0);
        gbc.writeMem(0xbf63, { 0x4d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5ca8, gbc.sp());
        EXPECT(0xbf64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbf63));
        // 4D 028E
        gbc.setState(0x197f, 0x629d, 0xace0, 0x27d6, 0xcfea, 0x6c1, 0x0, 0x1);
        gbc.writeMem(0x197f, { 0x4d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x629d, gbc.sp());
        EXPECT(0x1980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 028F
        gbc.setState(0x9177, 0x67e, 0xbd50, 0x5d2b, 0x484, 0x7197, 0x1, 0x0);
        gbc.writeMem(0x9177, { 0x4d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x67e, gbc.sp());
        EXPECT(0x9178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9177));
        // 4D 0290
        gbc.setState(0x7f28, 0xbf86, 0xbaa0, 0x7a40, 0x68b3, 0x85d, 0x0, 0x1);
        gbc.writeMem(0x7f28, { 0x4d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xbf86, gbc.sp());
        EXPECT(0x7f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0291
        gbc.setState(0x53f1, 0xd0c6, 0xdd10, 0xce9a, 0xac5c, 0xf5, 0x0, 0x0);
        gbc.writeMem(0x53f1, { 0x4d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd0c6, gbc.sp());
        EXPECT(0x53f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0292
        gbc.setState(0x3956, 0xc535, 0x1200, 0xe7bc, 0x17a0, 0xbb89, 0x0, 0x1);
        gbc.writeMem(0x3956, { 0x4d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc535, gbc.sp());
        EXPECT(0x3957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0293
        gbc.setState(0x3cca, 0x8ded, 0x7650, 0xaafc, 0xe98a, 0x9d7b, 0x0, 0x1);
        gbc.writeMem(0x3cca, { 0x4d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8ded, gbc.sp());
        EXPECT(0x3ccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0294
        gbc.setState(0x2a82, 0x23c4, 0x2330, 0x128a, 0x217c, 0x4a7c, 0x1, 0x0);
        gbc.writeMem(0x2a82, { 0x4d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x23c4, gbc.sp());
        EXPECT(0x2a83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0295
        gbc.setState(0x4c38, 0xaef0, 0x7e30, 0x5129, 0xac9c, 0x3b0, 0x0, 0x1);
        gbc.writeMem(0x4c38, { 0x4d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xaef0, gbc.sp());
        EXPECT(0x4c39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0296
        gbc.setState(0x48e8, 0x26e7, 0x24e0, 0xaa97, 0xca7c, 0x41a3, 0x0, 0x0);
        gbc.writeMem(0x48e8, { 0x4d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x26e7, gbc.sp());
        EXPECT(0x48e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0297
        gbc.setState(0xd927, 0x7cf5, 0x3350, 0x51ec, 0x9dad, 0x14bb, 0x0, 0x0);
        gbc.writeMem(0xd927, { 0x4d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7cf5, gbc.sp());
        EXPECT(0xd928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd927));
        // 4D 0298
        gbc.setState(0xdfba, 0xf6ce, 0x9b10, 0x4997, 0x4f09, 0x8b6, 0x0, 0x0);
        gbc.writeMem(0xdfba, { 0x4d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf6ce, gbc.sp());
        EXPECT(0xdfbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdfba));
        // 4D 0299
        gbc.setState(0x80be, 0x3c17, 0xf030, 0x2cc4, 0xfb95, 0xafc1, 0x0, 0x1);
        gbc.writeMem(0x80be, { 0x4d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3c17, gbc.sp());
        EXPECT(0x80bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x80be));
        // 4D 029A
        gbc.setState(0x336c, 0x6fc3, 0x51b0, 0x3bad, 0xca03, 0x4f02, 0x0, 0x1);
        gbc.writeMem(0x336c, { 0x4d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6fc3, gbc.sp());
        EXPECT(0x336d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 029B
        gbc.setState(0xd049, 0xe7be, 0x9110, 0xc60e, 0xddc4, 0x4d45, 0x1, 0x0);
        gbc.writeMem(0xd049, { 0x4d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe7be, gbc.sp());
        EXPECT(0xd04a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd049));
        // 4D 029C
        gbc.setState(0xbc0a, 0x655c, 0x4f80, 0xb7ab, 0xfab3, 0x6724, 0x1, 0x1);
        gbc.writeMem(0xbc0a, { 0x4d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x655c, gbc.sp());
        EXPECT(0xbc0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbc0a));
        // 4D 029D
        gbc.setState(0x947e, 0xb2c3, 0xea10, 0x7726, 0x8390, 0xe99b, 0x0, 0x0);
        gbc.writeMem(0x947e, { 0x4d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb2c3, gbc.sp());
        EXPECT(0x947f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x947e));
        // 4D 029E
        gbc.setState(0x5d91, 0x84fa, 0xf150, 0x4d85, 0xb21c, 0xe6d0, 0x1, 0x1);
        gbc.writeMem(0x5d91, { 0x4d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x84fa, gbc.sp());
        EXPECT(0x5d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 029F
        gbc.setState(0x522b, 0xc6d0, 0x8d70, 0x4b83, 0x3204, 0xaa8e, 0x0, 0x0);
        gbc.writeMem(0x522b, { 0x4d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc6d0, gbc.sp());
        EXPECT(0x522c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02A0
        gbc.setState(0x166c, 0x364, 0x61a0, 0x6473, 0xcff6, 0x3ebe, 0x0, 0x1);
        gbc.writeMem(0x166c, { 0x4d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x364, gbc.sp());
        EXPECT(0x166d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 02A1
        gbc.setState(0xd0d8, 0x29cf, 0x9fe0, 0x2aeb, 0xd90c, 0x51cf, 0x0, 0x0);
        gbc.writeMem(0xd0d8, { 0x4d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x29cf, gbc.sp());
        EXPECT(0xd0d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd0d8));
        // 4D 02A2
        gbc.setState(0x758, 0xff0a, 0x38a0, 0x41c4, 0x4452, 0x275c, 0x1, 0x0);
        gbc.writeMem(0x758, { 0x4d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xff0a, gbc.sp());
        EXPECT(0x759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 02A3
        gbc.setState(0xd6e7, 0x626a, 0x7450, 0x29d0, 0xe408, 0xf563, 0x0, 0x1);
        gbc.writeMem(0xd6e7, { 0x4d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x626a, gbc.sp());
        EXPECT(0xd6e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd6e7));
        // 4D 02A4
        gbc.setState(0xe999, 0x6f02, 0x17a0, 0x16b9, 0xe710, 0x2bf6, 0x1, 0x1);
        gbc.writeMem(0xe999, { 0x4d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6f02, gbc.sp());
        EXPECT(0xe99a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe999));
        // 4D 02A6
        gbc.setState(0x2b34, 0xcca6, 0xe370, 0x8797, 0x6caf, 0xbd42, 0x1, 0x0);
        gbc.writeMem(0x2b34, { 0x4d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xcca6, gbc.sp());
        EXPECT(0x2b35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02A7
        gbc.setState(0x14c, 0x5bab, 0x9a30, 0xe2cb, 0x6233, 0xdb42, 0x1, 0x1);
        gbc.writeMem(0x14c, { 0x4d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5bab, gbc.sp());
        EXPECT(0x14d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02A8
        gbc.setState(0x4080, 0x19d0, 0x1c80, 0x2863, 0x8250, 0xad5, 0x1, 0x1);
        gbc.writeMem(0x4080, { 0x4d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x19d0, gbc.sp());
        EXPECT(0x4081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 02A9
        gbc.setState(0x9123, 0x6fb4, 0x7280, 0x511b, 0xed8a, 0x4d62, 0x1, 0x0);
        gbc.writeMem(0x9123, { 0x4d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6fb4, gbc.sp());
        EXPECT(0x9124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9123));
        // 4D 02AA
        gbc.setState(0x59cc, 0x4ebf, 0x3370, 0x4329, 0xa361, 0x211, 0x1, 0x0);
        gbc.writeMem(0x59cc, { 0x4d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4ebf, gbc.sp());
        EXPECT(0x59cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02AB
        gbc.setState(0xa09, 0xd78a, 0x73b0, 0xa966, 0x7737, 0x8c2c, 0x1, 0x0);
        gbc.writeMem(0xa09, { 0x4d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd78a, gbc.sp());
        EXPECT(0xa0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02AC
        gbc.setState(0x1463, 0x561b, 0x2370, 0x1868, 0x621b, 0x7d67, 0x0, 0x1);
        gbc.writeMem(0x1463, { 0x4d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x561b, gbc.sp());
        EXPECT(0x1464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02AD
        gbc.setState(0x81db, 0x8a08, 0x3a70, 0x9e40, 0x7a0d, 0xa13, 0x0, 0x0);
        gbc.writeMem(0x81db, { 0x4d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8a08, gbc.sp());
        EXPECT(0x81dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x81db));
        // 4D 02AE
        gbc.setState(0x3b93, 0x557c, 0x2570, 0x6a83, 0x1fdf, 0x37b6, 0x0, 0x1);
        gbc.writeMem(0x3b93, { 0x4d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x557c, gbc.sp());
        EXPECT(0x3b94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02AF
        gbc.setState(0x48c, 0x4644, 0x1910, 0xa72d, 0x7e1f, 0x592d, 0x1, 0x1);
        gbc.writeMem(0x48c, { 0x4d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4644, gbc.sp());
        EXPECT(0x48d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02B0
        gbc.setState(0xc8e0, 0xa5f3, 0x98d0, 0x2f95, 0xad0d, 0xd396, 0x0, 0x1);
        gbc.writeMem(0xc8e0, { 0x4d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa5f3, gbc.sp());
        EXPECT(0xc8e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc8e0));
        // 4D 02B1
        gbc.setState(0xc9d5, 0x107c, 0x1a20, 0xe0cd, 0xfa, 0x7daa, 0x1, 0x1);
        gbc.writeMem(0xc9d5, { 0x4d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x107c, gbc.sp());
        EXPECT(0xc9d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc9d5));
        // 4D 02B2
        gbc.setState(0xefda, 0x3fba, 0x7bf0, 0xcf15, 0x493c, 0xf1ae, 0x0, 0x1);
        gbc.writeMem(0xefda, { 0x4d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3fba, gbc.sp());
        EXPECT(0xefdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xefda));
        // 4D 02B4
        gbc.setState(0x6d53, 0xaafe, 0x680, 0x3706, 0x21bb, 0x42b, 0x1, 0x0);
        gbc.writeMem(0x6d53, { 0x4d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xaafe, gbc.sp());
        EXPECT(0x6d54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 02B5
        gbc.setState(0x7224, 0x8ecf, 0x2670, 0xc44c, 0xd4b4, 0x8587, 0x0, 0x1);
        gbc.writeMem(0x7224, { 0x4d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8ecf, gbc.sp());
        EXPECT(0x7225, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02B6
        gbc.setState(0x395d, 0x7139, 0x52f0, 0xd06, 0xbad1, 0x9a0, 0x1, 0x1);
        gbc.writeMem(0x395d, { 0x4d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7139, gbc.sp());
        EXPECT(0x395e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02B7
        gbc.setState(0x5e40, 0xdf25, 0xc6c0, 0x6ee2, 0xe671, 0xf7ba, 0x1, 0x0);
        gbc.writeMem(0x5e40, { 0x4d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xdf25, gbc.sp());
        EXPECT(0x5e41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 02B8
        gbc.setState(0x630b, 0x42d1, 0xf520, 0xac1a, 0xf90, 0x7585, 0x0, 0x1);
        gbc.writeMem(0x630b, { 0x4d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x42d1, gbc.sp());
        EXPECT(0x630c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 02B9
        gbc.setState(0xdef0, 0x9fb1, 0xa830, 0x11f4, 0xb8a4, 0xa5d2, 0x1, 0x0);
        gbc.writeMem(0xdef0, { 0x4d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9fb1, gbc.sp());
        EXPECT(0xdef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdef0));
        // 4D 02BA
        gbc.setState(0x6d0d, 0xb678, 0xb130, 0x4486, 0x6fd9, 0xde28, 0x1, 0x1);
        gbc.writeMem(0x6d0d, { 0x4d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb678, gbc.sp());
        EXPECT(0x6d0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02BB
        gbc.setState(0x2f7c, 0xc855, 0xc490, 0x9770, 0xa886, 0xabb5, 0x1, 0x1);
        gbc.writeMem(0x2f7c, { 0x4d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc855, gbc.sp());
        EXPECT(0x2f7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02BC
        gbc.setState(0xd91e, 0xecbf, 0x3ac0, 0x7d7b, 0x269a, 0x636, 0x1, 0x1);
        gbc.writeMem(0xd91e, { 0x4d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xecbf, gbc.sp());
        EXPECT(0xd91f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd91e));
        // 4D 02BD
        gbc.setState(0xb9f5, 0x330f, 0x1370, 0xf783, 0x1ad9, 0x4d97, 0x0, 0x0);
        gbc.writeMem(0xb9f5, { 0x4d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x330f, gbc.sp());
        EXPECT(0xb9f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb9f5));
        // 4D 02BE
        gbc.setState(0xa4a2, 0xc314, 0x8250, 0xc4ee, 0xc88, 0xcabc, 0x1, 0x1);
        gbc.writeMem(0xa4a2, { 0x4d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc314, gbc.sp());
        EXPECT(0xa4a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa4a2));
        // 4D 02BF
        gbc.setState(0x6103, 0xe0cc, 0x470, 0x9a4e, 0x236a, 0xcf58, 0x0, 0x1);
        gbc.writeMem(0x6103, { 0x4d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe0cc, gbc.sp());
        EXPECT(0x6104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02C0
        gbc.setState(0xd127, 0xfaf0, 0x4eb0, 0xa8d5, 0xd5e5, 0x6a04, 0x1, 0x0);
        gbc.writeMem(0xd127, { 0x4d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xfaf0, gbc.sp());
        EXPECT(0xd128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd127));
        // 4D 02C1
        gbc.setState(0x2585, 0x47b2, 0x9060, 0x7db5, 0xb0d, 0xcafb, 0x1, 0x1);
        gbc.writeMem(0x2585, { 0x4d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x47b2, gbc.sp());
        EXPECT(0x2586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 02C3
        gbc.setState(0x766f, 0x454f, 0x560, 0xff30, 0x1f3b, 0x820d, 0x0, 0x0);
        gbc.writeMem(0x766f, { 0x4d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x454f, gbc.sp());
        EXPECT(0x7670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 02C4
        gbc.setState(0x6858, 0xd610, 0xc150, 0x1b1f, 0xe64f, 0x1bd3, 0x0, 0x0);
        gbc.writeMem(0x6858, { 0x4d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd610, gbc.sp());
        EXPECT(0x6859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02C5
        gbc.setState(0x74a9, 0x3ee6, 0x7f50, 0xe9a0, 0x1db0, 0xeadc, 0x0, 0x0);
        gbc.writeMem(0x74a9, { 0x4d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3ee6, gbc.sp());
        EXPECT(0x74aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02C7
        gbc.setState(0x623e, 0xffcf, 0x8880, 0x1a03, 0x1847, 0x70bf, 0x0, 0x0);
        gbc.writeMem(0x623e, { 0x4d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xffcf, gbc.sp());
        EXPECT(0x623f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 02C8
        gbc.setState(0xa371, 0xb043, 0x8890, 0xdf42, 0xe7b7, 0xbb77, 0x1, 0x1);
        gbc.writeMem(0xa371, { 0x4d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb043, gbc.sp());
        EXPECT(0xa372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa371));
        // 4D 02C9
        gbc.setState(0xcbd4, 0x7431, 0xe760, 0x145d, 0xdcb8, 0x2aaa, 0x0, 0x1);
        gbc.writeMem(0xcbd4, { 0x4d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7431, gbc.sp());
        EXPECT(0xcbd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xcbd4));
        // 4D 02CA
        gbc.setState(0x23ff, 0x169, 0xde60, 0x6caa, 0xd230, 0xff35, 0x1, 0x1);
        gbc.writeMem(0x23ff, { 0x4d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x169, gbc.sp());
        EXPECT(0x2400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 02CB
        gbc.setState(0xeb37, 0x553f, 0x2000, 0x74e3, 0x6a1f, 0x12a4, 0x1, 0x1);
        gbc.writeMem(0xeb37, { 0x4d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x553f, gbc.sp());
        EXPECT(0xeb38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xeb37));
        // 4D 02CC
        gbc.setState(0x4f57, 0xe3f0, 0xd5c0, 0xa6fa, 0x3f42, 0x49a5, 0x1, 0x0);
        gbc.writeMem(0x4f57, { 0x4d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe3f0, gbc.sp());
        EXPECT(0x4f58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 02CD
        gbc.setState(0x8a49, 0xd0ef, 0x2b20, 0xeaed, 0xacfa, 0xf33, 0x1, 0x1);
        gbc.writeMem(0x8a49, { 0x4d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd0ef, gbc.sp());
        EXPECT(0x8a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8a49));
        // 4D 02CE
        gbc.setState(0x4d12, 0x6283, 0xf810, 0x9c21, 0xc3f9, 0xb436, 0x0, 0x0);
        gbc.writeMem(0x4d12, { 0x4d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6283, gbc.sp());
        EXPECT(0x4d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02CF
        gbc.setState(0x4728, 0x74fa, 0x5010, 0x7c4f, 0xdc6c, 0x132, 0x0, 0x1);
        gbc.writeMem(0x4728, { 0x4d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x74fa, gbc.sp());
        EXPECT(0x4729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02D0
        gbc.setState(0x834d, 0xa7e2, 0x1d40, 0x950b, 0x2d8b, 0xf1e1, 0x0, 0x1);
        gbc.writeMem(0x834d, { 0x4d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa7e2, gbc.sp());
        EXPECT(0x834e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x834d));
        // 4D 02D1
        gbc.setState(0xd16c, 0xb50d, 0x5620, 0xb096, 0xaba2, 0x4a63, 0x0, 0x1);
        gbc.writeMem(0xd16c, { 0x4d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb50d, gbc.sp());
        EXPECT(0xd16d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd16c));
        // 4D 02D2
        gbc.setState(0x3516, 0x7751, 0x2610, 0x179f, 0x345f, 0x4fc, 0x1, 0x1);
        gbc.writeMem(0x3516, { 0x4d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7751, gbc.sp());
        EXPECT(0x3517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02D4
        gbc.setState(0xad91, 0xb007, 0xfe30, 0xa557, 0x4161, 0x5b8e, 0x0, 0x1);
        gbc.writeMem(0xad91, { 0x4d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb007, gbc.sp());
        EXPECT(0xad92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xad91));
        // 4D 02D5
        gbc.setState(0x3a89, 0xde75, 0x4450, 0x7628, 0x3b82, 0x854c, 0x1, 0x0);
        gbc.writeMem(0x3a89, { 0x4d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xde75, gbc.sp());
        EXPECT(0x3a8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02D6
        gbc.setState(0x2fef, 0x8a34, 0x7ad0, 0xaebb, 0xc60a, 0xe015, 0x1, 0x0);
        gbc.writeMem(0x2fef, { 0x4d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8a34, gbc.sp());
        EXPECT(0x2ff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02D7
        gbc.setState(0x663e, 0x8ea7, 0xb400, 0x3130, 0x202f, 0x4bdd, 0x0, 0x0);
        gbc.writeMem(0x663e, { 0x4d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8ea7, gbc.sp());
        EXPECT(0x663f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 02D8
        gbc.setState(0x9530, 0x428e, 0x90d0, 0xcd70, 0x468e, 0x21dd, 0x0, 0x1);
        gbc.writeMem(0x9530, { 0x4d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x428e, gbc.sp());
        EXPECT(0x9531, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9530));
        // 4D 02D9
        gbc.setState(0x635e, 0x7d36, 0x9710, 0x5f4d, 0x439d, 0x8d4e, 0x1, 0x1);
        gbc.writeMem(0x635e, { 0x4d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7d36, gbc.sp());
        EXPECT(0x635f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02DA
        gbc.setState(0xe211, 0x62a8, 0x56c0, 0x95f, 0x56b5, 0x6804, 0x1, 0x1);
        gbc.writeMem(0xe211, { 0x4d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x62a8, gbc.sp());
        EXPECT(0xe212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe211));
        // 4D 02DB
        gbc.setState(0x82f2, 0x8290, 0x8290, 0xed68, 0x7462, 0xf6ca, 0x1, 0x1);
        gbc.writeMem(0x82f2, { 0x4d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8290, gbc.sp());
        EXPECT(0x82f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x82f2));
        // 4D 02DC
        gbc.setState(0x8fbf, 0x7ec7, 0x3c20, 0xf4a4, 0xf88, 0xa5a7, 0x0, 0x0);
        gbc.writeMem(0x8fbf, { 0x4d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7ec7, gbc.sp());
        EXPECT(0x8fc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8fbf));
        // 4D 02DD
        gbc.setState(0x3a88, 0x2801, 0x3380, 0xb617, 0xfccf, 0xcb1e, 0x0, 0x0);
        gbc.writeMem(0x3a88, { 0x4d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2801, gbc.sp());
        EXPECT(0x3a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 02DE
        gbc.setState(0x7406, 0x608d, 0x1b90, 0x8198, 0xfcff, 0x967b, 0x0, 0x1);
        gbc.writeMem(0x7406, { 0x4d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x608d, gbc.sp());
        EXPECT(0x7407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02DF
        gbc.setState(0xd770, 0x36a7, 0x75b0, 0x3862, 0xea6b, 0xf8df, 0x1, 0x0);
        gbc.writeMem(0xd770, { 0x4d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x36a7, gbc.sp());
        EXPECT(0xd771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd770));
        // 4D 02E0
        gbc.setState(0x7ce, 0xe651, 0xc010, 0xea22, 0x5200, 0x90ec, 0x0, 0x0);
        gbc.writeMem(0x7ce, { 0x4d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe651, gbc.sp());
        EXPECT(0x7cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02E1
        gbc.setState(0x6e88, 0xd261, 0x7ff0, 0xbc70, 0xd00, 0x5d92, 0x0, 0x1);
        gbc.writeMem(0x6e88, { 0x4d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd261, gbc.sp());
        EXPECT(0x6e89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02E2
        gbc.setState(0x870e, 0x2f64, 0x37c0, 0xe4af, 0x83ac, 0x7250, 0x0, 0x0);
        gbc.writeMem(0x870e, { 0x4d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2f64, gbc.sp());
        EXPECT(0x870f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x870e));
        // 4D 02E3
        gbc.setState(0xe2e8, 0x236b, 0xd40, 0x151b, 0x5f20, 0x2e57, 0x1, 0x0);
        gbc.writeMem(0xe2e8, { 0x4d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x236b, gbc.sp());
        EXPECT(0xe2e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe2e8));
        // 4D 02E4
        gbc.setState(0x92e7, 0x252d, 0x2fa0, 0x6579, 0xcda, 0xbece, 0x0, 0x1);
        gbc.writeMem(0x92e7, { 0x4d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x252d, gbc.sp());
        EXPECT(0x92e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x92e7));
        // 4D 02E5
        gbc.setState(0x63a, 0x38e1, 0x6840, 0xab7c, 0xa023, 0x3344, 0x1, 0x0);
        gbc.writeMem(0x63a, { 0x4d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x38e1, gbc.sp());
        EXPECT(0x63b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 02E6
        gbc.setState(0x5f29, 0x899c, 0x7720, 0xb222, 0x34c1, 0x28d0, 0x1, 0x0);
        gbc.writeMem(0x5f29, { 0x4d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x899c, gbc.sp());
        EXPECT(0x5f2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 02E7
        gbc.setState(0x402a, 0x8c47, 0xd730, 0xf65e, 0x48a, 0xd934, 0x0, 0x1);
        gbc.writeMem(0x402a, { 0x4d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8c47, gbc.sp());
        EXPECT(0x402b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02E8
        gbc.setState(0x1b5a, 0xae40, 0x4200, 0xec85, 0xc41b, 0x9e0a, 0x0, 0x0);
        gbc.writeMem(0x1b5a, { 0x4d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xae40, gbc.sp());
        EXPECT(0x1b5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 02E9
        gbc.setState(0xd876, 0x853d, 0xb540, 0x5998, 0xd43a, 0x228, 0x1, 0x0);
        gbc.writeMem(0xd876, { 0x4d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x853d, gbc.sp());
        EXPECT(0xd877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd876));
        // 4D 02EA
        gbc.setState(0xa7a7, 0xc66, 0xd620, 0x7c0, 0x6076, 0xf67a, 0x1, 0x1);
        gbc.writeMem(0xa7a7, { 0x4d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc66, gbc.sp());
        EXPECT(0xa7a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa7a7));
        // 4D 02EB
        gbc.setState(0xa7ba, 0x98a0, 0x88c0, 0xc6f8, 0x1af6, 0xb8b0, 0x1, 0x0);
        gbc.writeMem(0xa7ba, { 0x4d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x98a0, gbc.sp());
        EXPECT(0xa7bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa7ba));
        // 4D 02ED
        gbc.setState(0x668, 0xfa08, 0x6590, 0x169, 0xcb5, 0x2e1b, 0x0, 0x0);
        gbc.writeMem(0x668, { 0x4d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xfa08, gbc.sp());
        EXPECT(0x669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02EE
        gbc.setState(0x1d8f, 0x9ac6, 0xe360, 0x1291, 0x1c88, 0xdd44, 0x1, 0x1);
        gbc.writeMem(0x1d8f, { 0x4d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9ac6, gbc.sp());
        EXPECT(0x1d90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 02EF
        gbc.setState(0xc2f, 0x82cf, 0x1e50, 0x2e5b, 0x8035, 0x33d1, 0x0, 0x0);
        gbc.writeMem(0xc2f, { 0x4d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x82cf, gbc.sp());
        EXPECT(0xc30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02F0
        gbc.setState(0xa67c, 0x9fe6, 0x9ee0, 0xef63, 0x3841, 0xe20, 0x0, 0x0);
        gbc.writeMem(0xa67c, { 0x4d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9fe6, gbc.sp());
        EXPECT(0xa67d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa67c));
        // 4D 02F1
        gbc.setState(0xde21, 0xb36c, 0x9a40, 0x7dfc, 0xdc3d, 0x3e8e, 0x1, 0x1);
        gbc.writeMem(0xde21, { 0x4d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb36c, gbc.sp());
        EXPECT(0xde22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xde21));
        // 4D 02F2
        gbc.setState(0x9923, 0x9407, 0x8c90, 0x447b, 0x380b, 0x2df9, 0x1, 0x0);
        gbc.writeMem(0x9923, { 0x4d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9407, gbc.sp());
        EXPECT(0x9924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9923));
        // 4D 02F3
        gbc.setState(0x99f, 0x8930, 0x5820, 0x17a8, 0xaf20, 0x344e, 0x0, 0x1);
        gbc.writeMem(0x99f, { 0x4d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8930, gbc.sp());
        EXPECT(0x9a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 02F4
        gbc.setState(0x6b76, 0x1db1, 0x4b80, 0x39e8, 0xbdc, 0xd92b, 0x1, 0x0);
        gbc.writeMem(0x6b76, { 0x4d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1db1, gbc.sp());
        EXPECT(0x6b77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 02F5
        gbc.setState(0x59c9, 0x7113, 0x9fb0, 0x8fa8, 0x3b29, 0x5421, 0x1, 0x1);
        gbc.writeMem(0x59c9, { 0x4d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7113, gbc.sp());
        EXPECT(0x59ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02F6
        gbc.setState(0x9923, 0x7e36, 0x6620, 0x63c7, 0x5b9c, 0x51e5, 0x1, 0x1);
        gbc.writeMem(0x9923, { 0x4d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7e36, gbc.sp());
        EXPECT(0x9924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9923));
        // 4D 02F7
        gbc.setState(0xe918, 0x2c3d, 0x8bc0, 0xf3f7, 0xa12d, 0x5b2c, 0x1, 0x1);
        gbc.writeMem(0xe918, { 0x4d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2c3d, gbc.sp());
        EXPECT(0xe919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe918));
        // 4D 02F8
        gbc.setState(0x25b3, 0x350c, 0x22a0, 0x7b0, 0x458a, 0xfc81, 0x0, 0x0);
        gbc.writeMem(0x25b3, { 0x4d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x350c, gbc.sp());
        EXPECT(0x25b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 02F9
        gbc.setState(0x4790, 0xc6e8, 0xdbe0, 0x80ac, 0x4a80, 0xa6d, 0x1, 0x1);
        gbc.writeMem(0x4790, { 0x4d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc6e8, gbc.sp());
        EXPECT(0x4791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 02FA
        gbc.setState(0x8084, 0x62af, 0xc070, 0xbb02, 0xddb, 0xd0d6, 0x0, 0x0);
        gbc.writeMem(0x8084, { 0x4d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x62af, gbc.sp());
        EXPECT(0x8085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8084));
        // 4D 02FB
        gbc.setState(0x5485, 0x3471, 0xf3a0, 0x729c, 0x9920, 0x8458, 0x1, 0x1);
        gbc.writeMem(0x5485, { 0x4d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3471, gbc.sp());
        EXPECT(0x5486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 02FC
        gbc.setState(0x15d4, 0xfce, 0xd7e0, 0xa334, 0x5d48, 0xc60f, 0x0, 0x0);
        gbc.writeMem(0x15d4, { 0x4d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfce, gbc.sp());
        EXPECT(0x15d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 02FD
        gbc.setState(0x42f6, 0x643b, 0x5190, 0xf215, 0x371d, 0xaaf2, 0x0, 0x1);
        gbc.writeMem(0x42f6, { 0x4d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x643b, gbc.sp());
        EXPECT(0x42f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02FE
        gbc.setState(0x63cd, 0x1883, 0x60b0, 0x2b82, 0xef2, 0x88cb, 0x0, 0x0);
        gbc.writeMem(0x63cd, { 0x4d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1883, gbc.sp());
        EXPECT(0x63ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 02FF
        gbc.setState(0x2093, 0xfd08, 0x43b0, 0xe17b, 0xdfd, 0x389, 0x1, 0x0);
        gbc.writeMem(0x2093, { 0x4d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xfd08, gbc.sp());
        EXPECT(0x2094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0300
        gbc.setState(0x1048, 0xe26f, 0x5300, 0x4cf4, 0xab51, 0xee74, 0x0, 0x1);
        gbc.writeMem(0x1048, { 0x4d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe26f, gbc.sp());
        EXPECT(0x1049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0301
        gbc.setState(0x4601, 0x1951, 0x8b0, 0x976a, 0x3e5a, 0x709f, 0x0, 0x1);
        gbc.writeMem(0x4601, { 0x4d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1951, gbc.sp());
        EXPECT(0x4602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0302
        gbc.setState(0x480a, 0x12a5, 0xf9e0, 0xe0bf, 0xb8b7, 0xbe97, 0x0, 0x1);
        gbc.writeMem(0x480a, { 0x4d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x12a5, gbc.sp());
        EXPECT(0x480b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0303
        gbc.setState(0x4de, 0x940d, 0x6d80, 0x7e56, 0x9d92, 0xc51c, 0x1, 0x0);
        gbc.writeMem(0x4de, { 0x4d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x940d, gbc.sp());
        EXPECT(0x4df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0304
        gbc.setState(0xd1af, 0x61d1, 0xd5c0, 0x22db, 0x8887, 0xd048, 0x1, 0x1);
        gbc.writeMem(0xd1af, { 0x4d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x61d1, gbc.sp());
        EXPECT(0xd1b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd1af));
        // 4D 0305
        gbc.setState(0x77dd, 0x9cb4, 0xdab0, 0x22a1, 0xc355, 0x56e8, 0x0, 0x0);
        gbc.writeMem(0x77dd, { 0x4d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9cb4, gbc.sp());
        EXPECT(0x77de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0306
        gbc.setState(0xcde8, 0x3031, 0x8d0, 0xa81a, 0x4d0d, 0x9f1f, 0x0, 0x1);
        gbc.writeMem(0xcde8, { 0x4d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3031, gbc.sp());
        EXPECT(0xcde9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xcde8));
        // 4D 0307
        gbc.setState(0xa77, 0x793a, 0x7500, 0x63ca, 0x50d8, 0x7706, 0x1, 0x1);
        gbc.writeMem(0xa77, { 0x4d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x793a, gbc.sp());
        EXPECT(0xa78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0308
        gbc.setState(0xa406, 0x12d8, 0x2220, 0xd737, 0x877d, 0xbbd1, 0x0, 0x1);
        gbc.writeMem(0xa406, { 0x4d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x12d8, gbc.sp());
        EXPECT(0xa407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa406));
        // 4D 0309
        gbc.setState(0x3b80, 0x312c, 0x21b0, 0x8735, 0x28fd, 0xa98f, 0x0, 0x1);
        gbc.writeMem(0x3b80, { 0x4d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x312c, gbc.sp());
        EXPECT(0x3b81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 030A
        gbc.setState(0x4357, 0x1aa9, 0xcdb0, 0xce48, 0xf889, 0xaa2d, 0x1, 0x1);
        gbc.writeMem(0x4357, { 0x4d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1aa9, gbc.sp());
        EXPECT(0x4358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 030B
        gbc.setState(0x31bc, 0x54a0, 0x7a70, 0xfbc4, 0xb367, 0x9620, 0x0, 0x0);
        gbc.writeMem(0x31bc, { 0x4d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x54a0, gbc.sp());
        EXPECT(0x31bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 030C
        gbc.setState(0xd981, 0xb0ac, 0xca70, 0x7ddd, 0x5ebc, 0xde9d, 0x1, 0x1);
        gbc.writeMem(0xd981, { 0x4d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb0ac, gbc.sp());
        EXPECT(0xd982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd981));
        // 4D 030D
        gbc.setState(0x4d3b, 0xc50d, 0xc550, 0x8fa8, 0x8b99, 0xc2ba, 0x1, 0x0);
        gbc.writeMem(0x4d3b, { 0x4d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc50d, gbc.sp());
        EXPECT(0x4d3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 030F
        gbc.setState(0x327c, 0x705d, 0x6db0, 0xf85b, 0x5122, 0x2455, 0x1, 0x1);
        gbc.writeMem(0x327c, { 0x4d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x705d, gbc.sp());
        EXPECT(0x327d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0310
        gbc.setState(0xd1a3, 0xa20d, 0x88f0, 0x43f7, 0x54d, 0x3b73, 0x0, 0x1);
        gbc.writeMem(0xd1a3, { 0x4d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa20d, gbc.sp());
        EXPECT(0xd1a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd1a3));
        // 4D 0311
        gbc.setState(0xb9e4, 0x201d, 0xfb50, 0xdea9, 0xc388, 0xa41a, 0x0, 0x0);
        gbc.writeMem(0xb9e4, { 0x4d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x201d, gbc.sp());
        EXPECT(0xb9e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb9e4));
        // 4D 0312
        gbc.setState(0x61e3, 0xcb47, 0x9e50, 0x94fd, 0x732c, 0x11d, 0x0, 0x1);
        gbc.writeMem(0x61e3, { 0x4d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcb47, gbc.sp());
        EXPECT(0x61e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0313
        gbc.setState(0xb340, 0xdfed, 0x5640, 0xbf22, 0xa266, 0xb07d, 0x0, 0x1);
        gbc.writeMem(0xb340, { 0x4d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xdfed, gbc.sp());
        EXPECT(0xb341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb340));
        // 4D 0314
        gbc.setState(0x5a6, 0x8c52, 0xe050, 0x258d, 0xd0d9, 0xa919, 0x0, 0x0);
        gbc.writeMem(0x5a6, { 0x4d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8c52, gbc.sp());
        EXPECT(0x5a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0315
        gbc.setState(0x1d42, 0xc71a, 0xa2c0, 0x6a65, 0x83c6, 0x23b4, 0x1, 0x0);
        gbc.writeMem(0x1d42, { 0x4d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc71a, gbc.sp());
        EXPECT(0x1d43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0316
        gbc.setState(0xd5b5, 0x2750, 0x4880, 0x9382, 0xef70, 0x9102, 0x1, 0x1);
        gbc.writeMem(0xd5b5, { 0x4d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2750, gbc.sp());
        EXPECT(0xd5b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd5b5));
        // 4D 0317
        gbc.setState(0x101e, 0x4038, 0xb7a0, 0x5c16, 0x76c4, 0x70ac, 0x0, 0x1);
        gbc.writeMem(0x101e, { 0x4d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4038, gbc.sp());
        EXPECT(0x101f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0318
        gbc.setState(0x5e73, 0x5d17, 0x6f30, 0x311, 0xc95, 0x271c, 0x1, 0x1);
        gbc.writeMem(0x5e73, { 0x4d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5d17, gbc.sp());
        EXPECT(0x5e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0319
        gbc.setState(0x6f2a, 0xe26, 0x30b0, 0xb3c0, 0x2f13, 0x4f51, 0x0, 0x1);
        gbc.writeMem(0x6f2a, { 0x4d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe26, gbc.sp());
        EXPECT(0x6f2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 031A
        gbc.setState(0x7347, 0x36a, 0x2af0, 0xab05, 0xd7b5, 0xb2fd, 0x1, 0x1);
        gbc.writeMem(0x7347, { 0x4d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x36a, gbc.sp());
        EXPECT(0x7348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 031B
        gbc.setState(0x9fb9, 0xa80d, 0xc7f0, 0x7e35, 0x21b8, 0x50ba, 0x0, 0x1);
        gbc.writeMem(0x9fb9, { 0x4d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa80d, gbc.sp());
        EXPECT(0x9fba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9fb9));
        // 4D 031C
        gbc.setState(0xd469, 0x14f0, 0xb0, 0xce6c, 0x2066, 0xcef3, 0x0, 0x1);
        gbc.writeMem(0xd469, { 0x4d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x14f0, gbc.sp());
        EXPECT(0xd46a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd469));
        // 4D 031D
        gbc.setState(0x469d, 0x61ce, 0x9c90, 0xc133, 0x22d5, 0xbb7f, 0x1, 0x0);
        gbc.writeMem(0x469d, { 0x4d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x61ce, gbc.sp());
        EXPECT(0x469e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 031E
        gbc.setState(0xa6a7, 0x2a, 0x8610, 0xe8, 0x9be8, 0x915a, 0x1, 0x1);
        gbc.writeMem(0xa6a7, { 0x4d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2a, gbc.sp());
        EXPECT(0xa6a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa6a7));
        // 4D 031F
        gbc.setState(0x283b, 0x59f2, 0xf520, 0xdd3, 0x70fc, 0xe76d, 0x1, 0x1);
        gbc.writeMem(0x283b, { 0x4d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x59f2, gbc.sp());
        EXPECT(0x283c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0320
        gbc.setState(0xa472, 0x710a, 0x1530, 0xc3a7, 0x310b, 0x437b, 0x0, 0x1);
        gbc.writeMem(0xa472, { 0x4d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x710a, gbc.sp());
        EXPECT(0xa473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa472));
        // 4D 0321
        gbc.setState(0xe0b2, 0x8525, 0x9fa0, 0x3fab, 0xbb36, 0x7442, 0x1, 0x1);
        gbc.writeMem(0xe0b2, { 0x4d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8525, gbc.sp());
        EXPECT(0xe0b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe0b2));
        // 4D 0322
        gbc.setState(0xcbc6, 0xaf68, 0x5930, 0x1222, 0x65ca, 0xeb18, 0x1, 0x0);
        gbc.writeMem(0xcbc6, { 0x4d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xaf68, gbc.sp());
        EXPECT(0xcbc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xcbc6));
        // 4D 0323
        gbc.setState(0xe57f, 0x7996, 0xdd60, 0x36e6, 0x15b6, 0x4ed3, 0x0, 0x0);
        gbc.writeMem(0xe57f, { 0x4d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7996, gbc.sp());
        EXPECT(0xe580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe57f));
        // 4D 0324
        gbc.setState(0xeca9, 0xc899, 0x2b30, 0x97de, 0xd79f, 0x7e7b, 0x1, 0x0);
        gbc.writeMem(0xeca9, { 0x4d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc899, gbc.sp());
        EXPECT(0xecaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xeca9));
        // 4D 0325
        gbc.setState(0xbce3, 0xad2c, 0x17d0, 0xdad4, 0xea77, 0x4cbc, 0x1, 0x1);
        gbc.writeMem(0xbce3, { 0x4d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xad2c, gbc.sp());
        EXPECT(0xbce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbce3));
        // 4D 0326
        gbc.setState(0x2f37, 0x54e7, 0xed20, 0x81d0, 0xd6, 0x1132, 0x1, 0x1);
        gbc.writeMem(0x2f37, { 0x4d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x54e7, gbc.sp());
        EXPECT(0x2f38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0327
        gbc.setState(0x64bf, 0x63db, 0xc620, 0x7778, 0xe6f7, 0x80c3, 0x0, 0x0);
        gbc.writeMem(0x64bf, { 0x4d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x63db, gbc.sp());
        EXPECT(0x64c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0328
        gbc.setState(0xa655, 0x1c96, 0xd690, 0x14c0, 0xd0ef, 0xf689, 0x0, 0x1);
        gbc.writeMem(0xa655, { 0x4d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1c96, gbc.sp());
        EXPECT(0xa656, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa655));
        // 4D 0329
        gbc.setState(0x2bc, 0xa84c, 0xd770, 0x91bf, 0x2a33, 0xf904, 0x1, 0x1);
        gbc.writeMem(0x2bc, { 0x4d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa84c, gbc.sp());
        EXPECT(0x2bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 032A
        gbc.setState(0xe574, 0x6c22, 0xb760, 0xd1a5, 0x4434, 0xc2a7, 0x1, 0x0);
        gbc.writeMem(0xe574, { 0x4d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6c22, gbc.sp());
        EXPECT(0xe575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe574));
        // 4D 032B
        gbc.setState(0xdb75, 0xe9e3, 0x33b0, 0x460d, 0xbb69, 0x3581, 0x1, 0x0);
        gbc.writeMem(0xdb75, { 0x4d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe9e3, gbc.sp());
        EXPECT(0xdb76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdb75));
        // 4D 032D
        gbc.setState(0x4f74, 0x4982, 0xfda0, 0x98fe, 0x3067, 0xa361, 0x1, 0x0);
        gbc.writeMem(0x4f74, { 0x4d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4982, gbc.sp());
        EXPECT(0x4f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 032E
        gbc.setState(0xaa36, 0xc42b, 0x3cd0, 0x27d3, 0xf7c2, 0x32cd, 0x1, 0x0);
        gbc.writeMem(0xaa36, { 0x4d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc42b, gbc.sp());
        EXPECT(0xaa37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xaa36));
        // 4D 032F
        gbc.setState(0x9969, 0x6171, 0xabf0, 0xaca8, 0x7be7, 0x1fe4, 0x0, 0x0);
        gbc.writeMem(0x9969, { 0x4d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6171, gbc.sp());
        EXPECT(0x996a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9969));
        // 4D 0330
        gbc.setState(0xd498, 0x8e46, 0x7d0, 0x98df, 0x37, 0x8645, 0x0, 0x1);
        gbc.writeMem(0xd498, { 0x4d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8e46, gbc.sp());
        EXPECT(0xd499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd498));
        // 4D 0331
        gbc.setState(0xa94b, 0x9f89, 0x24d0, 0xa428, 0xafc5, 0x2668, 0x0, 0x1);
        gbc.writeMem(0xa94b, { 0x4d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9f89, gbc.sp());
        EXPECT(0xa94c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa94b));
        // 4D 0332
        gbc.setState(0x5459, 0x546d, 0x51c0, 0xf69e, 0xdef, 0xab24, 0x0, 0x0);
        gbc.writeMem(0x5459, { 0x4d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x546d, gbc.sp());
        EXPECT(0x545a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0333
        gbc.setState(0x13e0, 0x7661, 0x8f70, 0x7a30, 0x9365, 0x8d44, 0x1, 0x1);
        gbc.writeMem(0x13e0, { 0x4d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7661, gbc.sp());
        EXPECT(0x13e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0334
        gbc.setState(0xdf56, 0xc71f, 0x8db0, 0xc434, 0x30be, 0x3802, 0x1, 0x1);
        gbc.writeMem(0xdf56, { 0x4d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc71f, gbc.sp());
        EXPECT(0xdf57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdf56));
        // 4D 0335
        gbc.setState(0x7075, 0x6734, 0x15a0, 0x3493, 0xe515, 0xc525, 0x0, 0x1);
        gbc.writeMem(0x7075, { 0x4d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6734, gbc.sp());
        EXPECT(0x7076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0336
        gbc.setState(0xae5e, 0x4af3, 0xac00, 0xcb0d, 0x89e8, 0x6676, 0x0, 0x0);
        gbc.writeMem(0xae5e, { 0x4d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4af3, gbc.sp());
        EXPECT(0xae5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xae5e));
        // 4D 0337
        gbc.setState(0x70a5, 0x1b04, 0xf3f0, 0x8a21, 0x59dc, 0x8276, 0x1, 0x0);
        gbc.writeMem(0x70a5, { 0x4d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1b04, gbc.sp());
        EXPECT(0x70a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0338
        gbc.setState(0x2b42, 0xffb8, 0x1e60, 0xfa44, 0x350c, 0x4d64, 0x1, 0x1);
        gbc.writeMem(0x2b42, { 0x4d });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xffb8, gbc.sp());
        EXPECT(0x2b43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0339
        gbc.setState(0x5397, 0xfed, 0xd260, 0xe16, 0x56d5, 0x1ee9, 0x0, 0x0);
        gbc.writeMem(0x5397, { 0x4d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xfed, gbc.sp());
        EXPECT(0x5398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 033A
        gbc.setState(0x3ef4, 0x4a22, 0x78a0, 0xcb74, 0x7119, 0xffe6, 0x1, 0x0);
        gbc.writeMem(0x3ef4, { 0x4d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4a22, gbc.sp());
        EXPECT(0x3ef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 033B
        gbc.setState(0x2bea, 0xc880, 0x3e40, 0xc8eb, 0x2da, 0xf9c4, 0x1, 0x0);
        gbc.writeMem(0x2bea, { 0x4d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc880, gbc.sp());
        EXPECT(0x2beb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 033C
        gbc.setState(0x2abd, 0x4de0, 0xf7e0, 0xb455, 0xc2f4, 0x29c4, 0x0, 0x0);
        gbc.writeMem(0x2abd, { 0x4d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4de0, gbc.sp());
        EXPECT(0x2abe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 033D
        gbc.setState(0x1dbb, 0xfb1d, 0x29b0, 0xa14e, 0x1f21, 0x6040, 0x0, 0x0);
        gbc.writeMem(0x1dbb, { 0x4d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xfb1d, gbc.sp());
        EXPECT(0x1dbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 033E
        gbc.setState(0x8665, 0x1428, 0x7570, 0xc0cd, 0x7ab6, 0xc6ed, 0x0, 0x1);
        gbc.writeMem(0x8665, { 0x4d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1428, gbc.sp());
        EXPECT(0x8666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8665));
        // 4D 0340
        gbc.setState(0xe87e, 0x5ce5, 0x60d0, 0x55ed, 0x76a8, 0x41a0, 0x1, 0x1);
        gbc.writeMem(0xe87e, { 0x4d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5ce5, gbc.sp());
        EXPECT(0xe87f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe87e));
        // 4D 0341
        gbc.setState(0x3363, 0x7ba1, 0x79d0, 0x8183, 0x54ef, 0x87d9, 0x0, 0x0);
        gbc.writeMem(0x3363, { 0x4d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7ba1, gbc.sp());
        EXPECT(0x3364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0342
        gbc.setState(0x5a7e, 0x2a3b, 0x9e00, 0x70f5, 0x4ce7, 0xd3a5, 0x0, 0x0);
        gbc.writeMem(0x5a7e, { 0x4d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2a3b, gbc.sp());
        EXPECT(0x5a7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0343
        gbc.setState(0xd9ee, 0x9175, 0x2ee0, 0x44d7, 0x3812, 0xc64, 0x0, 0x0);
        gbc.writeMem(0xd9ee, { 0x4d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9175, gbc.sp());
        EXPECT(0xd9ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd9ee));
        // 4D 0344
        gbc.setState(0xd62b, 0x217e, 0x2800, 0xe31d, 0xf10b, 0x5867, 0x1, 0x1);
        gbc.writeMem(0xd62b, { 0x4d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x217e, gbc.sp());
        EXPECT(0xd62c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd62b));
        // 4D 0345
        gbc.setState(0x79f9, 0x8a68, 0x22d0, 0x624e, 0x136f, 0x30dd, 0x1, 0x1);
        gbc.writeMem(0x79f9, { 0x4d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8a68, gbc.sp());
        EXPECT(0x79fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0346
        gbc.setState(0x7eb1, 0x32db, 0x53a0, 0x22cc, 0x2b5e, 0x52ac, 0x0, 0x0);
        gbc.writeMem(0x7eb1, { 0x4d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x32db, gbc.sp());
        EXPECT(0x7eb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0348
        gbc.setState(0x97b3, 0xcee7, 0xbed0, 0x70d8, 0xcd2c, 0x8354, 0x0, 0x0);
        gbc.writeMem(0x97b3, { 0x4d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xcee7, gbc.sp());
        EXPECT(0x97b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x97b3));
        // 4D 0349
        gbc.setState(0xa6c2, 0xdd84, 0x7f80, 0x8547, 0xb509, 0x6fd8, 0x0, 0x0);
        gbc.writeMem(0xa6c2, { 0x4d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xdd84, gbc.sp());
        EXPECT(0xa6c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa6c2));
        // 4D 034A
        gbc.setState(0x48a6, 0x353, 0x70a0, 0x53d4, 0xb341, 0xfb78, 0x1, 0x1);
        gbc.writeMem(0x48a6, { 0x4d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x353, gbc.sp());
        EXPECT(0x48a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 034B
        gbc.setState(0x42f1, 0xdd8c, 0x7f10, 0x2207, 0x9820, 0xc0e1, 0x1, 0x0);
        gbc.writeMem(0x42f1, { 0x4d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xdd8c, gbc.sp());
        EXPECT(0x42f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 034C
        gbc.setState(0x88b4, 0x2fdc, 0x1cd0, 0xc737, 0x552a, 0xd103, 0x0, 0x1);
        gbc.writeMem(0x88b4, { 0x4d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2fdc, gbc.sp());
        EXPECT(0x88b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x88b4));
        // 4D 034D
        gbc.setState(0xdea4, 0x2129, 0xb360, 0x6081, 0x65a, 0xb0, 0x1, 0x1);
        gbc.writeMem(0xdea4, { 0x4d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2129, gbc.sp());
        EXPECT(0xdea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdea4));
        // 4D 034E
        gbc.setState(0x18e9, 0x21cd, 0x60a0, 0x5e1, 0x454f, 0x7171, 0x1, 0x1);
        gbc.writeMem(0x18e9, { 0x4d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x21cd, gbc.sp());
        EXPECT(0x18ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 034F
        gbc.setState(0x2983, 0xc70a, 0x4180, 0x99dc, 0x1405, 0xb186, 0x0, 0x0);
        gbc.writeMem(0x2983, { 0x4d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc70a, gbc.sp());
        EXPECT(0x2984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0350
        gbc.setState(0x2cfc, 0xd92a, 0x7480, 0x7f50, 0x4e11, 0x732a, 0x1, 0x1);
        gbc.writeMem(0x2cfc, { 0x4d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd92a, gbc.sp());
        EXPECT(0x2cfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0351
        gbc.setState(0x26e5, 0xbcbb, 0x34b0, 0x9fd5, 0x3a86, 0xc214, 0x0, 0x1);
        gbc.writeMem(0x26e5, { 0x4d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbcbb, gbc.sp());
        EXPECT(0x26e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0352
        gbc.setState(0xea23, 0xb027, 0x11f0, 0x5109, 0x5c3f, 0x7c6c, 0x0, 0x1);
        gbc.writeMem(0xea23, { 0x4d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb027, gbc.sp());
        EXPECT(0xea24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xea23));
        // 4D 0353
        gbc.setState(0x31a4, 0x946d, 0xaf10, 0x5e47, 0x3002, 0x34af, 0x0, 0x1);
        gbc.writeMem(0x31a4, { 0x4d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x946d, gbc.sp());
        EXPECT(0x31a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0354
        gbc.setState(0x54a7, 0x73c, 0x8d50, 0xc461, 0xb87c, 0xf01e, 0x0, 0x0);
        gbc.writeMem(0x54a7, { 0x4d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x73c, gbc.sp());
        EXPECT(0x54a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0355
        gbc.setState(0x8f89, 0xaa24, 0xd3a0, 0xc5e2, 0x21eb, 0xa213, 0x1, 0x1);
        gbc.writeMem(0x8f89, { 0x4d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xaa24, gbc.sp());
        EXPECT(0x8f8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8f89));
        // 4D 0357
        gbc.setState(0x6fb1, 0x2b7f, 0xced0, 0xcdfe, 0xacf7, 0x1cce, 0x1, 0x1);
        gbc.writeMem(0x6fb1, { 0x4d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2b7f, gbc.sp());
        EXPECT(0x6fb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0358
        gbc.setState(0x98ab, 0x4cb9, 0x4d00, 0x5476, 0xa667, 0xccc1, 0x1, 0x1);
        gbc.writeMem(0x98ab, { 0x4d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4cb9, gbc.sp());
        EXPECT(0x98ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x98ab));
        // 4D 0359
        gbc.setState(0x194b, 0x83b7, 0x2770, 0x68ea, 0x404b, 0xc0fc, 0x0, 0x0);
        gbc.writeMem(0x194b, { 0x4d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x83b7, gbc.sp());
        EXPECT(0x194c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 035A
        gbc.setState(0xa18f, 0x35af, 0x9d20, 0xd208, 0x596c, 0xf000, 0x0, 0x1);
        gbc.writeMem(0xa18f, { 0x4d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x35af, gbc.sp());
        EXPECT(0xa190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa18f));
        // 4D 035C
        gbc.setState(0x3099, 0xeba9, 0x9740, 0xc3d5, 0x7, 0xc8ea, 0x1, 0x0);
        gbc.writeMem(0x3099, { 0x4d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xeba9, gbc.sp());
        EXPECT(0x309a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 035D
        gbc.setState(0xa45e, 0x832a, 0x3b00, 0x91d4, 0xcfa1, 0x1a00, 0x1, 0x0);
        gbc.writeMem(0xa45e, { 0x4d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x832a, gbc.sp());
        EXPECT(0xa45f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa45e));
        // 4D 035E
        gbc.setState(0x712e, 0x85da, 0xea00, 0x2b99, 0xf237, 0xa3b8, 0x0, 0x1);
        gbc.writeMem(0x712e, { 0x4d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x85da, gbc.sp());
        EXPECT(0x712f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 035F
        gbc.setState(0x173, 0x2831, 0xdf00, 0x2b77, 0x74dc, 0x4035, 0x0, 0x1);
        gbc.writeMem(0x173, { 0x4d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2831, gbc.sp());
        EXPECT(0x174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0360
        gbc.setState(0xdd15, 0x2200, 0x1fb0, 0xca77, 0x902, 0xc665, 0x1, 0x1);
        gbc.writeMem(0xdd15, { 0x4d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2200, gbc.sp());
        EXPECT(0xdd16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdd15));
        // 4D 0361
        gbc.setState(0x6846, 0xcc72, 0x91b0, 0x848e, 0x80fe, 0x7650, 0x0, 0x1);
        gbc.writeMem(0x6846, { 0x4d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xcc72, gbc.sp());
        EXPECT(0x6847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0362
        gbc.setState(0x243b, 0x67be, 0x24f0, 0xb9a7, 0x24ba, 0x8354, 0x0, 0x1);
        gbc.writeMem(0x243b, { 0x4d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x67be, gbc.sp());
        EXPECT(0x243c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0363
        gbc.setState(0x7f12, 0xe6a1, 0x60c0, 0x9f2f, 0x7fcf, 0xf1aa, 0x1, 0x0);
        gbc.writeMem(0x7f12, { 0x4d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe6a1, gbc.sp());
        EXPECT(0x7f13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0364
        gbc.setState(0x10f3, 0x982b, 0xc950, 0x9861, 0xd216, 0x2a65, 0x1, 0x0);
        gbc.writeMem(0x10f3, { 0x4d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x982b, gbc.sp());
        EXPECT(0x10f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0365
        gbc.setState(0xb57f, 0x6107, 0xc860, 0x65cf, 0x1fe1, 0xde33, 0x0, 0x1);
        gbc.writeMem(0xb57f, { 0x4d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6107, gbc.sp());
        EXPECT(0xb580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb57f));
        // 4D 0366
        gbc.setState(0xbe24, 0x3605, 0x560, 0xacb4, 0x5248, 0xff1, 0x0, 0x1);
        gbc.writeMem(0xbe24, { 0x4d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3605, gbc.sp());
        EXPECT(0xbe25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbe24));
        // 4D 0367
        gbc.setState(0x8a40, 0x5994, 0x1a0, 0xf5a6, 0x36e8, 0xbec2, 0x0, 0x0);
        gbc.writeMem(0x8a40, { 0x4d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5994, gbc.sp());
        EXPECT(0x8a41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8a40));
        // 4D 0368
        gbc.setState(0xcaa, 0x2070, 0x9720, 0x5b, 0x89d0, 0x21dc, 0x0, 0x0);
        gbc.writeMem(0xcaa, { 0x4d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2070, gbc.sp());
        EXPECT(0xcab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0369
        gbc.setState(0x5266, 0xf0dc, 0x1990, 0xa5e6, 0x6f74, 0x84e8, 0x1, 0x1);
        gbc.writeMem(0x5266, { 0x4d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf0dc, gbc.sp());
        EXPECT(0x5267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 036A
        gbc.setState(0x911f, 0x59fb, 0xa0b0, 0x66a, 0x4bea, 0xa009, 0x1, 0x1);
        gbc.writeMem(0x911f, { 0x4d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x59fb, gbc.sp());
        EXPECT(0x9120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x911f));
        // 4D 036B
        gbc.setState(0xee84, 0xe60f, 0xa6f0, 0x6df4, 0xaba0, 0xd25a, 0x0, 0x1);
        gbc.writeMem(0xee84, { 0x4d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe60f, gbc.sp());
        EXPECT(0xee85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xee84));
        // 4D 036C
        gbc.setState(0x2fb4, 0x5137, 0x4470, 0x2a42, 0xf693, 0x3d51, 0x0, 0x0);
        gbc.writeMem(0x2fb4, { 0x4d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5137, gbc.sp());
        EXPECT(0x2fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 036D
        gbc.setState(0x4b0, 0x7678, 0xf9b0, 0x2d08, 0xa876, 0x8ef5, 0x0, 0x0);
        gbc.writeMem(0x4b0, { 0x4d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7678, gbc.sp());
        EXPECT(0x4b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 036E
        gbc.setState(0xaad0, 0x9214, 0x100, 0x3a3c, 0xb4c9, 0xaeec, 0x1, 0x1);
        gbc.writeMem(0xaad0, { 0x4d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9214, gbc.sp());
        EXPECT(0xaad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xaad0));
        // 4D 036F
        gbc.setState(0xd963, 0x42ac, 0x9f00, 0x75f1, 0xa723, 0x4abd, 0x1, 0x0);
        gbc.writeMem(0xd963, { 0x4d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x42ac, gbc.sp());
        EXPECT(0xd964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd963));
        // 4D 0370
        gbc.setState(0xe061, 0xcc02, 0x8370, 0x9203, 0x6421, 0x1af, 0x0, 0x1);
        gbc.writeMem(0xe061, { 0x4d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xcc02, gbc.sp());
        EXPECT(0xe062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe061));
        // 4D 0371
        gbc.setState(0x3319, 0x91b5, 0x8b20, 0x2791, 0x1032, 0xe930, 0x0, 0x1);
        gbc.writeMem(0x3319, { 0x4d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x91b5, gbc.sp());
        EXPECT(0x331a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0372
        gbc.setState(0x38ce, 0xa111, 0x6eb0, 0xf942, 0xd889, 0xb696, 0x0, 0x1);
        gbc.writeMem(0x38ce, { 0x4d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa111, gbc.sp());
        EXPECT(0x38cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0373
        gbc.setState(0xae25, 0xc609, 0x4850, 0xaffd, 0x606a, 0x5154, 0x0, 0x0);
        gbc.writeMem(0xae25, { 0x4d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc609, gbc.sp());
        EXPECT(0xae26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xae25));
        // 4D 0374
        gbc.setState(0x9ab, 0xb712, 0xcb10, 0x37c5, 0x8cdc, 0xb2df, 0x1, 0x0);
        gbc.writeMem(0x9ab, { 0x4d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb712, gbc.sp());
        EXPECT(0x9ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0375
        gbc.setState(0x5195, 0x14e8, 0x3b30, 0x2a29, 0xc758, 0xfa46, 0x1, 0x0);
        gbc.writeMem(0x5195, { 0x4d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x14e8, gbc.sp());
        EXPECT(0x5196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0376
        gbc.setState(0x20f, 0x821, 0xcde0, 0x358a, 0xa222, 0x988d, 0x1, 0x0);
        gbc.writeMem(0x20f, { 0x4d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x821, gbc.sp());
        EXPECT(0x210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0377
        gbc.setState(0x61d, 0x47ad, 0xa60, 0x32f9, 0x532a, 0xaff7, 0x1, 0x1);
        gbc.writeMem(0x61d, { 0x4d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x47ad, gbc.sp());
        EXPECT(0x61e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0378
        gbc.setState(0x3122, 0xeed3, 0x5fc0, 0xbfc9, 0x2d75, 0xe80, 0x0, 0x1);
        gbc.writeMem(0x3122, { 0x4d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xeed3, gbc.sp());
        EXPECT(0x3123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0379
        gbc.setState(0x5b65, 0x383d, 0xfe60, 0x20d1, 0xbf69, 0xd581, 0x1, 0x1);
        gbc.writeMem(0x5b65, { 0x4d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x383d, gbc.sp());
        EXPECT(0x5b66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 037A
        gbc.setState(0xd0, 0xda56, 0x3bf0, 0xdb2e, 0x9845, 0xed35, 0x0, 0x1);
        gbc.writeMem(0xd0, { 0x4d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xda56, gbc.sp());
        EXPECT(0xd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 037B
        gbc.setState(0xbef7, 0x5919, 0x8020, 0xdcb7, 0x3e9d, 0xeb6e, 0x0, 0x1);
        gbc.writeMem(0xbef7, { 0x4d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5919, gbc.sp());
        EXPECT(0xbef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbef7));
        // 4D 037C
        gbc.setState(0xa354, 0x3edf, 0x6930, 0xb016, 0x5311, 0x9ca6, 0x0, 0x0);
        gbc.writeMem(0xa354, { 0x4d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3edf, gbc.sp());
        EXPECT(0xa355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa354));
        // 4D 037D
        gbc.setState(0x2e85, 0x14a0, 0x89d0, 0xc8be, 0x804c, 0x9055, 0x1, 0x0);
        gbc.writeMem(0x2e85, { 0x4d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x14a0, gbc.sp());
        EXPECT(0x2e86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 037E
        gbc.setState(0x59b6, 0xd94e, 0x6d30, 0xb15e, 0x85ab, 0x65b3, 0x1, 0x1);
        gbc.writeMem(0x59b6, { 0x4d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd94e, gbc.sp());
        EXPECT(0x59b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 037F
        gbc.setState(0x82fd, 0x4bb4, 0x4f0, 0x511a, 0x2e2a, 0x28a1, 0x0, 0x1);
        gbc.writeMem(0x82fd, { 0x4d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4bb4, gbc.sp());
        EXPECT(0x82fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x82fd));
        // 4D 0380
        gbc.setState(0xc432, 0xbaf7, 0xb600, 0x96e, 0xa283, 0xf82e, 0x0, 0x0);
        gbc.writeMem(0xc432, { 0x4d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xbaf7, gbc.sp());
        EXPECT(0xc433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc432));
        // 4D 0382
        gbc.setState(0xad6, 0x3704, 0xde00, 0xffd4, 0x69ad, 0x2e92, 0x0, 0x1);
        gbc.writeMem(0xad6, { 0x4d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3704, gbc.sp());
        EXPECT(0xad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0383
        gbc.setState(0x9769, 0x82ce, 0x5f10, 0xef43, 0x1aa1, 0x8f9b, 0x0, 0x0);
        gbc.writeMem(0x9769, { 0x4d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x82ce, gbc.sp());
        EXPECT(0x976a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9769));
        // 4D 0384
        gbc.setState(0x9cf6, 0x9281, 0x4ad0, 0x779d, 0xe9a6, 0x82cb, 0x1, 0x0);
        gbc.writeMem(0x9cf6, { 0x4d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9281, gbc.sp());
        EXPECT(0x9cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9cf6));
        // 4D 0385
        gbc.setState(0xbfe1, 0xd05, 0x9a40, 0xacc5, 0xbe5a, 0x5228, 0x1, 0x1);
        gbc.writeMem(0xbfe1, { 0x4d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd05, gbc.sp());
        EXPECT(0xbfe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbfe1));
        // 4D 0386
        gbc.setState(0xe810, 0x39b, 0xd080, 0xdf34, 0x5459, 0x10c7, 0x1, 0x1);
        gbc.writeMem(0xe810, { 0x4d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x39b, gbc.sp());
        EXPECT(0xe811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe810));
        // 4D 0387
        gbc.setState(0xe7fa, 0xe9a6, 0xe590, 0x1733, 0xb919, 0x16cd, 0x0, 0x0);
        gbc.writeMem(0xe7fa, { 0x4d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe9a6, gbc.sp());
        EXPECT(0xe7fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe7fa));
        // 4D 0388
        gbc.setState(0xbeee, 0x7976, 0x9f10, 0xbfc1, 0x3d76, 0xdd7e, 0x1, 0x1);
        gbc.writeMem(0xbeee, { 0x4d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7976, gbc.sp());
        EXPECT(0xbeef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbeee));
        // 4D 0389
        gbc.setState(0x22f, 0x6219, 0x22b0, 0x702, 0x3ae6, 0x91e1, 0x1, 0x0);
        gbc.writeMem(0x22f, { 0x4d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6219, gbc.sp());
        EXPECT(0x230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 038A
        gbc.setState(0x56a0, 0x83a3, 0xd750, 0xd61d, 0xac9e, 0x8da, 0x1, 0x0);
        gbc.writeMem(0x56a0, { 0x4d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x83a3, gbc.sp());
        EXPECT(0x56a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 038B
        gbc.setState(0xdd46, 0x64a4, 0x95e0, 0x6ff2, 0x607a, 0x1e56, 0x0, 0x1);
        gbc.writeMem(0xdd46, { 0x4d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x64a4, gbc.sp());
        EXPECT(0xdd47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdd46));
        // 4D 038C
        gbc.setState(0x2b94, 0xc14e, 0x8210, 0x7337, 0xc804, 0x2fa2, 0x1, 0x0);
        gbc.writeMem(0x2b94, { 0x4d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc14e, gbc.sp());
        EXPECT(0x2b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 038D
        gbc.setState(0xae67, 0x3a34, 0x6aa0, 0xad4e, 0xfea2, 0x3f13, 0x0, 0x1);
        gbc.writeMem(0xae67, { 0x4d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3a34, gbc.sp());
        EXPECT(0xae68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xae67));
        // 4D 038E
        gbc.setState(0x294f, 0xccbb, 0x7210, 0x9b10, 0x23fb, 0x92ab, 0x1, 0x0);
        gbc.writeMem(0x294f, { 0x4d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xccbb, gbc.sp());
        EXPECT(0x2950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 038F
        gbc.setState(0xeef3, 0xb378, 0x67a0, 0xc5b0, 0x27fc, 0x51c, 0x0, 0x1);
        gbc.writeMem(0xeef3, { 0x4d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb378, gbc.sp());
        EXPECT(0xeef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xeef3));
        // 4D 0390
        gbc.setState(0x7290, 0x6350, 0x860, 0xd50b, 0x32a1, 0xc170, 0x0, 0x1);
        gbc.writeMem(0x7290, { 0x4d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6350, gbc.sp());
        EXPECT(0x7291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0392
        gbc.setState(0x8a74, 0x55fc, 0x1a70, 0x782c, 0x7197, 0x1f11, 0x1, 0x0);
        gbc.writeMem(0x8a74, { 0x4d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x55fc, gbc.sp());
        EXPECT(0x8a75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8a74));
        // 4D 0393
        gbc.setState(0x1e3a, 0x3a52, 0xf0b0, 0x51cc, 0x61c8, 0x37ca, 0x0, 0x1);
        gbc.writeMem(0x1e3a, { 0x4d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3a52, gbc.sp());
        EXPECT(0x1e3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0394
        gbc.setState(0x74b, 0x1206, 0xaca0, 0xd152, 0x44d, 0x507b, 0x0, 0x0);
        gbc.writeMem(0x74b, { 0x4d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1206, gbc.sp());
        EXPECT(0x74c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 0395
        gbc.setState(0x9dbc, 0x4e37, 0x7df0, 0x8ddf, 0xa5fe, 0x8cf9, 0x0, 0x1);
        gbc.writeMem(0x9dbc, { 0x4d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4e37, gbc.sp());
        EXPECT(0x9dbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9dbc));
        // 4D 0396
        gbc.setState(0xd1cb, 0x6b02, 0x9e20, 0xd0a7, 0xc132, 0x1f83, 0x1, 0x1);
        gbc.writeMem(0xd1cb, { 0x4d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6b02, gbc.sp());
        EXPECT(0xd1cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd1cb));
        // 4D 0397
        gbc.setState(0x8a06, 0x8a33, 0x3e10, 0x2850, 0x4a97, 0xd5e2, 0x1, 0x1);
        gbc.writeMem(0x8a06, { 0x4d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8a33, gbc.sp());
        EXPECT(0x8a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8a06));
        // 4D 0398
        gbc.setState(0x2291, 0x5223, 0xec50, 0x8e49, 0x3949, 0x3351, 0x1, 0x0);
        gbc.writeMem(0x2291, { 0x4d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5223, gbc.sp());
        EXPECT(0x2292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 0399
        gbc.setState(0xe639, 0xb07d, 0x6d0, 0x2006, 0x4f5e, 0x4b52, 0x0, 0x1);
        gbc.writeMem(0xe639, { 0x4d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb07d, gbc.sp());
        EXPECT(0xe63a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe639));
        // 4D 039A
        gbc.setState(0xa311, 0xa969, 0xb150, 0x70d2, 0xca95, 0xdab4, 0x0, 0x1);
        gbc.writeMem(0xa311, { 0x4d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa969, gbc.sp());
        EXPECT(0xa312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa311));
        // 4D 039B
        gbc.setState(0x2727, 0xdfbb, 0x9a10, 0x789a, 0x5ab0, 0xa30e, 0x1, 0x1);
        gbc.writeMem(0x2727, { 0x4d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xdfbb, gbc.sp());
        EXPECT(0x2728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 039C
        gbc.setState(0x72e9, 0x35d8, 0xbfa0, 0xf9be, 0xbaa8, 0x8f0d, 0x0, 0x1);
        gbc.writeMem(0x72e9, { 0x4d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x35d8, gbc.sp());
        EXPECT(0x72ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 039D
        gbc.setState(0x78fb, 0xa6b5, 0x6480, 0x9c2b, 0x7f47, 0xab5e, 0x1, 0x0);
        gbc.writeMem(0x78fb, { 0x4d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa6b5, gbc.sp());
        EXPECT(0x78fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 039E
        gbc.setState(0x9651, 0xdf41, 0x7450, 0x69f7, 0x4d68, 0xb157, 0x0, 0x0);
        gbc.writeMem(0x9651, { 0x4d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xdf41, gbc.sp());
        EXPECT(0x9652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9651));
        // 4D 039F
        gbc.setState(0x7d72, 0xde0a, 0xac80, 0x4ce2, 0x7e60, 0xfbdd, 0x0, 0x1);
        gbc.writeMem(0x7d72, { 0x4d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xde0a, gbc.sp());
        EXPECT(0x7d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 03A0
        gbc.setState(0x6d5c, 0x3024, 0x2a0, 0xb3f9, 0xa3c9, 0xb0db, 0x1, 0x1);
        gbc.writeMem(0x6d5c, { 0x4d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3024, gbc.sp());
        EXPECT(0x6d5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 03A1
        gbc.setState(0x6b0c, 0x2dae, 0xd4d0, 0x87ae, 0x6cbe, 0x2268, 0x0, 0x1);
        gbc.writeMem(0x6b0c, { 0x4d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2dae, gbc.sp());
        EXPECT(0x6b0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 03A2
        gbc.setState(0x4ffc, 0x8a36, 0x9d90, 0x4e88, 0xc507, 0x4a1, 0x1, 0x1);
        gbc.writeMem(0x4ffc, { 0x4d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8a36, gbc.sp());
        EXPECT(0x4ffd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 03A3
        gbc.setState(0x465, 0x7fb8, 0xde90, 0xf734, 0x4256, 0x40a0, 0x1, 0x0);
        gbc.writeMem(0x465, { 0x4d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7fb8, gbc.sp());
        EXPECT(0x466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 03A5
        gbc.setState(0xc394, 0xc653, 0xec70, 0x49fc, 0x257e, 0x6c9f, 0x1, 0x1);
        gbc.writeMem(0xc394, { 0x4d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc653, gbc.sp());
        EXPECT(0xc395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc394));
        // 4D 03A6
        gbc.setState(0x35c9, 0x410e, 0xd900, 0x9118, 0x46d3, 0x18c4, 0x1, 0x1);
        gbc.writeMem(0x35c9, { 0x4d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x410e, gbc.sp());
        EXPECT(0x35ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 03A7
        gbc.setState(0x43fc, 0x1dfc, 0xad0, 0x9024, 0x28dc, 0x83f5, 0x0, 0x1);
        gbc.writeMem(0x43fc, { 0x4d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1dfc, gbc.sp());
        EXPECT(0x43fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 03A8
        gbc.setState(0xe9b4, 0x995e, 0x5d0, 0x38c6, 0xab17, 0x282b, 0x1, 0x0);
        gbc.writeMem(0xe9b4, { 0x4d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x995e, gbc.sp());
        EXPECT(0xe9b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe9b4));
        // 4D 03A9
        gbc.setState(0xd27b, 0xaaa, 0xddc0, 0x52c0, 0x2b8a, 0x6b24, 0x0, 0x0);
        gbc.writeMem(0xd27b, { 0x4d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xaaa, gbc.sp());
        EXPECT(0xd27c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd27b));
        // 4D 03AA
        gbc.setState(0x43d0, 0x94d9, 0xe350, 0x9aed, 0xd24b, 0xe388, 0x0, 0x0);
        gbc.writeMem(0x43d0, { 0x4d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x94d9, gbc.sp());
        EXPECT(0x43d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 03AB
        gbc.setState(0x4ba1, 0xde9c, 0xc110, 0x6e0d, 0x54b, 0xae58, 0x1, 0x1);
        gbc.writeMem(0x4ba1, { 0x4d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xde9c, gbc.sp());
        EXPECT(0x4ba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 03AC
        gbc.setState(0x8021, 0x5507, 0x8900, 0x90f8, 0xb855, 0x6a3b, 0x1, 0x0);
        gbc.writeMem(0x8021, { 0x4d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5507, gbc.sp());
        EXPECT(0x8022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8021));
        // 4D 03AD
        gbc.setState(0xccb5, 0xdd4c, 0xe4f0, 0xa7ec, 0x2ada, 0x5d28, 0x0, 0x0);
        gbc.writeMem(0xccb5, { 0x4d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xdd4c, gbc.sp());
        EXPECT(0xccb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xccb5));
        // 4D 03AE
        gbc.setState(0xd3c9, 0xcbee, 0x8700, 0x93a4, 0x9acb, 0xcec0, 0x0, 0x1);
        gbc.writeMem(0xd3c9, { 0x4d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xcbee, gbc.sp());
        EXPECT(0xd3ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd3c9));
        // 4D 03AF
        gbc.setState(0x8268, 0x3bbf, 0x90e0, 0xf673, 0x2b92, 0x211, 0x1, 0x0);
        gbc.writeMem(0x8268, { 0x4d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3bbf, gbc.sp());
        EXPECT(0x8269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8268));
        // 4D 03B0
        gbc.setState(0x6b9c, 0xae8d, 0xb750, 0xc3bd, 0x5afb, 0x9374, 0x1, 0x0);
        gbc.writeMem(0x6b9c, { 0x4d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xae8d, gbc.sp());
        EXPECT(0x6b9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 03B1
        gbc.setState(0x624b, 0xafa9, 0xec70, 0xb531, 0x447c, 0x5afd, 0x0, 0x0);
        gbc.writeMem(0x624b, { 0x4d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xafa9, gbc.sp());
        EXPECT(0x624c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 03B2
        gbc.setState(0x1dd5, 0x1f65, 0xa1b0, 0xf097, 0x5de5, 0x4c34, 0x0, 0x0);
        gbc.writeMem(0x1dd5, { 0x4d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1f65, gbc.sp());
        EXPECT(0x1dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 03B3
        gbc.setState(0x9a09, 0xf5d0, 0xf5c0, 0xf28, 0x8418, 0x7633, 0x1, 0x1);
        gbc.writeMem(0x9a09, { 0x4d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf5d0, gbc.sp());
        EXPECT(0x9a0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9a09));
        // 4D 03B4
        gbc.setState(0x39f0, 0xdd46, 0x90e0, 0x2da3, 0x345a, 0xf2dd, 0x0, 0x0);
        gbc.writeMem(0x39f0, { 0x4d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xdd46, gbc.sp());
        EXPECT(0x39f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 03B5
        gbc.setState(0x69fe, 0xa0ed, 0x3520, 0x3de3, 0x96d, 0xfd6e, 0x1, 0x0);
        gbc.writeMem(0x69fe, { 0x4d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa0ed, gbc.sp());
        EXPECT(0x69ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 03B7
        gbc.setState(0xdc03, 0x7a50, 0x3370, 0x6857, 0xd1fa, 0x224a, 0x0, 0x0);
        gbc.writeMem(0xdc03, { 0x4d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7a50, gbc.sp());
        EXPECT(0xdc04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdc03));
        // 4D 03B8
        gbc.setState(0x4dc3, 0xd3f, 0x1160, 0xc8b1, 0x614e, 0xfaa4, 0x0, 0x1);
        gbc.writeMem(0x4dc3, { 0x4d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd3f, gbc.sp());
        EXPECT(0x4dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 03B9
        gbc.setState(0x7c6, 0x69ef, 0x1d0, 0xd4ea, 0xacf9, 0xafd2, 0x1, 0x1);
        gbc.writeMem(0x7c6, { 0x4d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x69ef, gbc.sp());
        EXPECT(0x7c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 03BA
        gbc.setState(0xddfb, 0xf238, 0xab40, 0x9f51, 0x4780, 0x495b, 0x0, 0x1);
        gbc.writeMem(0xddfb, { 0x4d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf238, gbc.sp());
        EXPECT(0xddfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xddfb));
        // 4D 03BB
        gbc.setState(0x8dc6, 0x5f72, 0x3630, 0x7519, 0x771e, 0xeb49, 0x0, 0x1);
        gbc.writeMem(0x8dc6, { 0x4d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5f72, gbc.sp());
        EXPECT(0x8dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8dc6));
        // 4D 03BC
        gbc.setState(0x8855, 0xfe7e, 0x9f10, 0xd710, 0x3bd0, 0xa9f3, 0x1, 0x0);
        gbc.writeMem(0x8855, { 0x4d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xfe7e, gbc.sp());
        EXPECT(0x8856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8855));
        // 4D 03BD
        gbc.setState(0x6d8b, 0x433c, 0x61d0, 0xdb68, 0x9a34, 0x68cb, 0x0, 0x1);
        gbc.writeMem(0x6d8b, { 0x4d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x433c, gbc.sp());
        EXPECT(0x6d8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 03BE
        gbc.setState(0xda81, 0x4ce, 0xcb10, 0xd40, 0x558d, 0x4c5a, 0x0, 0x0);
        gbc.writeMem(0xda81, { 0x4d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4ce, gbc.sp());
        EXPECT(0xda82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xda81));
        // 4D 03BF
        gbc.setState(0xb142, 0x578e, 0xa550, 0xa15e, 0x1134, 0x335c, 0x1, 0x0);
        gbc.writeMem(0xb142, { 0x4d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x578e, gbc.sp());
        EXPECT(0xb143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb142));
        // 4D 03C0
        gbc.setState(0xe78e, 0xd3b2, 0x4840, 0x2401, 0x8b92, 0x36b6, 0x0, 0x1);
        gbc.writeMem(0xe78e, { 0x4d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd3b2, gbc.sp());
        EXPECT(0xe78f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe78e));
        // 4D 03C1
        gbc.setState(0x47ee, 0xe95f, 0x6a60, 0x282b, 0x73c4, 0x83b6, 0x1, 0x1);
        gbc.writeMem(0x47ee, { 0x4d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe95f, gbc.sp());
        EXPECT(0x47ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 03C2
        gbc.setState(0x304c, 0x9289, 0x5df0, 0x6274, 0x802f, 0x81a4, 0x1, 0x1);
        gbc.writeMem(0x304c, { 0x4d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9289, gbc.sp());
        EXPECT(0x304d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 03C3
        gbc.setState(0x52dc, 0x46d3, 0x9b10, 0xde67, 0xbb44, 0xf92b, 0x1, 0x0);
        gbc.writeMem(0x52dc, { 0x4d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x46d3, gbc.sp());
        EXPECT(0x52dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 03C4
        gbc.setState(0x5b85, 0x46c6, 0x31e0, 0x1398, 0x183d, 0x1d9e, 0x0, 0x1);
        gbc.writeMem(0x5b85, { 0x4d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x46c6, gbc.sp());
        EXPECT(0x5b86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 03C5
        gbc.setState(0x35ff, 0xc5b0, 0x510, 0xd222, 0xca8e, 0x482d, 0x1, 0x0);
        gbc.writeMem(0x35ff, { 0x4d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc5b0, gbc.sp());
        EXPECT(0x3600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 03C6
        gbc.setState(0xa52f, 0x1cb5, 0x6a10, 0xbda7, 0x6664, 0xffde, 0x1, 0x0);
        gbc.writeMem(0xa52f, { 0x4d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1cb5, gbc.sp());
        EXPECT(0xa530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa52f));
        // 4D 03C7
        gbc.setState(0x4986, 0x2c87, 0x9f50, 0x7b90, 0x799c, 0x4af, 0x0, 0x1);
        gbc.writeMem(0x4986, { 0x4d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2c87, gbc.sp());
        EXPECT(0x4987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 03C8
        gbc.setState(0x1baf, 0xf81a, 0x7380, 0xd3f8, 0x7381, 0x93b5, 0x0, 0x0);
        gbc.writeMem(0x1baf, { 0x4d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf81a, gbc.sp());
        EXPECT(0x1bb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 03C9
        gbc.setState(0x152a, 0x8dc3, 0xcd0, 0x2fc8, 0xe750, 0x9a7, 0x1, 0x0);
        gbc.writeMem(0x152a, { 0x4d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8dc3, gbc.sp());
        EXPECT(0x152b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 03CA
        gbc.setState(0xbbe7, 0x62f5, 0xe410, 0xe554, 0xf534, 0x6227, 0x1, 0x0);
        gbc.writeMem(0xbbe7, { 0x4d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x62f5, gbc.sp());
        EXPECT(0xbbe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbbe7));
        // 4D 03CB
        gbc.setState(0x6d26, 0xab93, 0x790, 0x2957, 0xd20, 0x159c, 0x0, 0x0);
        gbc.writeMem(0x6d26, { 0x4d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xab93, gbc.sp());
        EXPECT(0x6d27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 03CC
        gbc.setState(0x8551, 0x9dd4, 0x2230, 0x4179, 0xd56f, 0x48d2, 0x1, 0x0);
        gbc.writeMem(0x8551, { 0x4d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9dd4, gbc.sp());
        EXPECT(0x8552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8551));
        // 4D 03CD
        gbc.setState(0xbb62, 0xfd4f, 0xa740, 0xc309, 0x9463, 0x2b35, 0x0, 0x0);
        gbc.writeMem(0xbb62, { 0x4d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfd4f, gbc.sp());
        EXPECT(0xbb63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbb62));
        // 4D 03CE
        gbc.setState(0x2ea4, 0xad68, 0x92c0, 0x5256, 0xfc31, 0xc921, 0x1, 0x1);
        gbc.writeMem(0x2ea4, { 0x4d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xad68, gbc.sp());
        EXPECT(0x2ea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 03CF
        gbc.setState(0x9ada, 0x7e04, 0xc060, 0x9ab6, 0x9d95, 0xb108, 0x0, 0x0);
        gbc.writeMem(0x9ada, { 0x4d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7e04, gbc.sp());
        EXPECT(0x9adb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9ada));
        // 4D 03D1
        gbc.setState(0xaf67, 0x4d81, 0x5f40, 0x8bb2, 0x33a7, 0xb28e, 0x0, 0x1);
        gbc.writeMem(0xaf67, { 0x4d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4d81, gbc.sp());
        EXPECT(0xaf68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xaf67));
        // 4D 03D2
        gbc.setState(0xe769, 0xd987, 0x3a50, 0xc590, 0xe505, 0xdd01, 0x0, 0x1);
        gbc.writeMem(0xe769, { 0x4d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd987, gbc.sp());
        EXPECT(0xe76a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe769));
        // 4D 03D3
        gbc.setState(0x9c71, 0xcefa, 0xc310, 0xc37c, 0xf30b, 0xa592, 0x1, 0x0);
        gbc.writeMem(0x9c71, { 0x4d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xcefa, gbc.sp());
        EXPECT(0x9c72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9c71));
        // 4D 03D4
        gbc.setState(0xa13e, 0x78c, 0xe8d0, 0xff93, 0x12d, 0xdf12, 0x0, 0x0);
        gbc.writeMem(0xa13e, { 0x4d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x78c, gbc.sp());
        EXPECT(0xa13f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa13e));
        // 4D 03D6
        gbc.setState(0xe71e, 0x96ff, 0xac70, 0x1d57, 0x49e8, 0xd0f2, 0x0, 0x0);
        gbc.writeMem(0xe71e, { 0x4d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x96ff, gbc.sp());
        EXPECT(0xe71f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe71e));
        // 4D 03D7
        gbc.setState(0x8446, 0x528a, 0x9970, 0x38b8, 0x374a, 0x8ff7, 0x1, 0x1);
        gbc.writeMem(0x8446, { 0x4d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x528a, gbc.sp());
        EXPECT(0x8447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8446));
        // 4D 03D8
        gbc.setState(0xefa9, 0x5498, 0xc930, 0x8b6b, 0x9bc6, 0xca17, 0x0, 0x1);
        gbc.writeMem(0xefa9, { 0x4d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5498, gbc.sp());
        EXPECT(0xefaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xefa9));
        // 4D 03D9
        gbc.setState(0x7b28, 0xd257, 0x2be0, 0xc355, 0x9636, 0xb6e5, 0x1, 0x1);
        gbc.writeMem(0x7b28, { 0x4d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd257, gbc.sp());
        EXPECT(0x7b29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 03DA
        gbc.setState(0xc38f, 0x11dd, 0x6c10, 0x563e, 0x27f9, 0x22a0, 0x1, 0x1);
        gbc.writeMem(0xc38f, { 0x4d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x11dd, gbc.sp());
        EXPECT(0xc390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc38f));
        // 4D 03DB
        gbc.setState(0x931f, 0xdedf, 0xd1d0, 0x4938, 0x57bd, 0xf0d3, 0x1, 0x1);
        gbc.writeMem(0x931f, { 0x4d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xdedf, gbc.sp());
        EXPECT(0x9320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x931f));
        // 4D 03DC
        gbc.setState(0x5f24, 0xb40b, 0x7420, 0x48bd, 0xf0fe, 0xf5e6, 0x0, 0x0);
        gbc.writeMem(0x5f24, { 0x4d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb40b, gbc.sp());
        EXPECT(0x5f25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 03DD
        gbc.setState(0xc7dc, 0xfc08, 0xfbe0, 0x9eb8, 0x658c, 0x88f1, 0x1, 0x1);
        gbc.writeMem(0xc7dc, { 0x4d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfc08, gbc.sp());
        EXPECT(0xc7dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc7dc));
        // 4D 03DE
        gbc.setState(0x65fd, 0x59d3, 0x69f0, 0x9409, 0x6af3, 0x3d82, 0x1, 0x1);
        gbc.writeMem(0x65fd, { 0x4d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x59d3, gbc.sp());
        EXPECT(0x65fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 03DF
        gbc.setState(0x4bae, 0xbb1a, 0x22b0, 0x3d6c, 0x610d, 0xae84, 0x0, 0x0);
        gbc.writeMem(0x4bae, { 0x4d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbb1a, gbc.sp());
        EXPECT(0x4baf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 03E0
        gbc.setState(0x5239, 0x37bb, 0x6480, 0x19f, 0xd5d3, 0x93e8, 0x1, 0x1);
        gbc.writeMem(0x5239, { 0x4d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x37bb, gbc.sp());
        EXPECT(0x523a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 03E1
        gbc.setState(0x476a, 0x52e2, 0x2b20, 0x11b9, 0xcc7c, 0x1ba3, 0x0, 0x0);
        gbc.writeMem(0x476a, { 0x4d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x52e2, gbc.sp());
        EXPECT(0x476b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 03E2
        gbc.setState(0x38c8, 0x9a2c, 0x5b40, 0x7078, 0x1194, 0xd295, 0x1, 0x0);
        gbc.writeMem(0x38c8, { 0x4d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9a2c, gbc.sp());
        EXPECT(0x38c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 03E3
        gbc.setState(0x64ac, 0x7516, 0x8830, 0xc663, 0xf9b8, 0xf20b, 0x1, 0x0);
        gbc.writeMem(0x64ac, { 0x4d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7516, gbc.sp());
        EXPECT(0x64ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 03E4
        gbc.setState(0x489, 0x7e49, 0x1750, 0xd2ba, 0x60dd, 0x1485, 0x1, 0x0);
        gbc.writeMem(0x489, { 0x4d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7e49, gbc.sp());
        EXPECT(0x48a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4D 03E5
        gbc.setState(0x4edc, 0x6194, 0xcf00, 0x8f81, 0x179e, 0xdbc0, 0x1, 0x0);
        gbc.writeMem(0x4edc, { 0x4d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6194, gbc.sp());
        EXPECT(0x4edd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4D 03E6
        gbc.setState(0xa925, 0x6729, 0x95b0, 0x41e0, 0xd338, 0xe37d, 0x1, 0x0);
        gbc.writeMem(0xa925, { 0x4d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6729, gbc.sp());
        EXPECT(0xa926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa925));
        // 4D 03E7
        gbc.setState(0x4721, 0xec3b, 0x9890, 0x112e, 0x2e08, 0x8349, 0x0, 0x0);
        gbc.writeMem(0x4721, { 0x4d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xec3b, gbc.sp());
        EXPECT(0x4722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
