#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_62)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_62) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 62 0000
        gbc.setState(0x18f6, 0x84af, 0xb570, 0x8064, 0x1d74, 0x4954, 0x1, 0x0);
        gbc.writeMem(0x18f6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x84af);
        EXPECT(gbc.pc(), 0x18f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0002
        gbc.setState(0xc048, 0x26c, 0x890, 0xf65a, 0x4bac, 0x4274, 0x0, 0x1);
        gbc.writeMem(0xc048, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x26c);
        EXPECT(gbc.pc(), 0xc04a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc048), 0xcb);
        EXPECT(gbc.readMem(0xc049), 0x62);
        // CB 62 0003
        gbc.setState(0x390d, 0xe240, 0x1340, 0xd92d, 0x5ff4, 0x6590, 0x1, 0x1);
        gbc.writeMem(0x390d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe240);
        EXPECT(gbc.pc(), 0x390f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0004
        gbc.setState(0xc23d, 0xae93, 0x940, 0xc89a, 0x56bd, 0x30af, 0x1, 0x0);
        gbc.writeMem(0xc23d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xae93);
        EXPECT(gbc.pc(), 0xc23f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc23d), 0xcb);
        EXPECT(gbc.readMem(0xc23e), 0x62);
        // CB 62 0005
        gbc.setState(0xa0c5, 0x8c06, 0x63f0, 0x9bc, 0xdcb0, 0xf9d6, 0x1, 0x0);
        gbc.writeMem(0xa0c5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8c06);
        EXPECT(gbc.pc(), 0xa0c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0c5), 0xcb);
        EXPECT(gbc.readMem(0xa0c6), 0x62);
        // CB 62 0006
        gbc.setState(0x95fa, 0xc11d, 0x9fd0, 0x2139, 0xd515, 0x6e47, 0x0, 0x1);
        gbc.writeMem(0x95fa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc11d);
        EXPECT(gbc.pc(), 0x95fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95fa), 0xcb);
        EXPECT(gbc.readMem(0x95fb), 0x62);
        // CB 62 0007
        gbc.setState(0x3f24, 0x380d, 0x24c0, 0x14f3, 0xe175, 0x14a9, 0x0, 0x1);
        gbc.writeMem(0x3f24, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x380d);
        EXPECT(gbc.pc(), 0x3f26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0008
        gbc.setState(0x3931, 0x6d21, 0x6930, 0xba0d, 0xff15, 0x8a2, 0x1, 0x1);
        gbc.writeMem(0x3931, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x6d21);
        EXPECT(gbc.pc(), 0x3933);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0009
        gbc.setState(0xe69e, 0xe050, 0xe090, 0xfeb1, 0xd187, 0xc6b3, 0x0, 0x1);
        gbc.writeMem(0xe69e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe050);
        EXPECT(gbc.pc(), 0xe6a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe69e), 0xcb);
        EXPECT(gbc.readMem(0xe69f), 0x62);
        // CB 62 000A
        gbc.setState(0x7d4e, 0xc044, 0xf160, 0xe070, 0xd82d, 0xfe5, 0x0, 0x0);
        gbc.writeMem(0x7d4e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xc044);
        EXPECT(gbc.pc(), 0x7d50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 000B
        gbc.setState(0x5d40, 0xdec9, 0x8570, 0x4baf, 0xf9c7, 0xa379, 0x1, 0x0);
        gbc.writeMem(0x5d40, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xdec9);
        EXPECT(gbc.pc(), 0x5d42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 000C
        gbc.setState(0x4ea5, 0x3ec3, 0x8450, 0x480d, 0xbaa8, 0xcbc6, 0x0, 0x0);
        gbc.writeMem(0x4ea5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x3ec3);
        EXPECT(gbc.pc(), 0x4ea7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 000D
        gbc.setState(0x4f34, 0xf0fc, 0xa890, 0x9190, 0x5743, 0xaf0a, 0x0, 0x0);
        gbc.writeMem(0x4f34, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf0fc);
        EXPECT(gbc.pc(), 0x4f36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 000E
        gbc.setState(0x4c1a, 0x5fc9, 0x53b0, 0x32a1, 0x8c2e, 0xf80a, 0x0, 0x1);
        gbc.writeMem(0x4c1a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x5fc9);
        EXPECT(gbc.pc(), 0x4c1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 000F
        gbc.setState(0x934, 0x6385, 0xb870, 0x163e, 0x966e, 0x3a73, 0x0, 0x0);
        gbc.writeMem(0x934, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6385);
        EXPECT(gbc.pc(), 0x936);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0010
        gbc.setState(0xace2, 0x3296, 0x7f90, 0xc97b, 0xd019, 0x6b43, 0x1, 0x0);
        gbc.writeMem(0xace2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3296);
        EXPECT(gbc.pc(), 0xace4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xace2), 0xcb);
        EXPECT(gbc.readMem(0xace3), 0x62);
        // CB 62 0011
        gbc.setState(0x8323, 0x3fac, 0x44e0, 0x5a94, 0x7520, 0x6608, 0x0, 0x0);
        gbc.writeMem(0x8323, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x3fac);
        EXPECT(gbc.pc(), 0x8325);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8323), 0xcb);
        EXPECT(gbc.readMem(0x8324), 0x62);
        // CB 62 0012
        gbc.setState(0xa70c, 0xfb68, 0xda10, 0xee5d, 0x303f, 0xb4b4, 0x0, 0x0);
        gbc.writeMem(0xa70c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xfb68);
        EXPECT(gbc.pc(), 0xa70e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa70c), 0xcb);
        EXPECT(gbc.readMem(0xa70d), 0x62);
        // CB 62 0013
        gbc.setState(0xa6a9, 0x86d, 0xb0a0, 0x910e, 0x3523, 0xa5cd, 0x1, 0x0);
        gbc.writeMem(0xa6a9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x86d);
        EXPECT(gbc.pc(), 0xa6ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6a9), 0xcb);
        EXPECT(gbc.readMem(0xa6aa), 0x62);
        // CB 62 0014
        gbc.setState(0x3ac4, 0x8da7, 0x4cf0, 0xbfdb, 0xc3d9, 0xa5cb, 0x0, 0x1);
        gbc.writeMem(0x3ac4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x8da7);
        EXPECT(gbc.pc(), 0x3ac6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0015
        gbc.setState(0x8ca7, 0x86ad, 0xf910, 0x131f, 0x2778, 0xa10f, 0x1, 0x0);
        gbc.writeMem(0x8ca7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x86ad);
        EXPECT(gbc.pc(), 0x8ca9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ca7), 0xcb);
        EXPECT(gbc.readMem(0x8ca8), 0x62);
        // CB 62 0016
        gbc.setState(0x943b, 0x7be0, 0xa150, 0xe56a, 0xe93f, 0x7528, 0x1, 0x0);
        gbc.writeMem(0x943b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x7be0);
        EXPECT(gbc.pc(), 0x943d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x943b), 0xcb);
        EXPECT(gbc.readMem(0x943c), 0x62);
        // CB 62 0017
        gbc.setState(0x711c, 0x9d67, 0x6770, 0x79a9, 0xd708, 0xd817, 0x1, 0x0);
        gbc.writeMem(0x711c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x9d67);
        EXPECT(gbc.pc(), 0x711e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0018
        gbc.setState(0x5a40, 0x7c28, 0x1ff0, 0xc6e5, 0x8b7a, 0xe552, 0x1, 0x1);
        gbc.writeMem(0x5a40, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x7c28);
        EXPECT(gbc.pc(), 0x5a42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 001A
        gbc.setState(0x8bc0, 0x16b, 0x7150, 0x9a4c, 0x5bc8, 0x4975, 0x0, 0x1);
        gbc.writeMem(0x8bc0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x16b);
        EXPECT(gbc.pc(), 0x8bc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bc0), 0xcb);
        EXPECT(gbc.readMem(0x8bc1), 0x62);
        // CB 62 001B
        gbc.setState(0x7a08, 0x72b8, 0x3cf0, 0x1e97, 0xfabe, 0x4ecd, 0x0, 0x0);
        gbc.writeMem(0x7a08, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x72b8);
        EXPECT(gbc.pc(), 0x7a0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 001C
        gbc.setState(0xdabe, 0x3e18, 0x2840, 0xa919, 0x1188, 0xa86b, 0x1, 0x1);
        gbc.writeMem(0xdabe, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3e18);
        EXPECT(gbc.pc(), 0xdac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdabe), 0xcb);
        EXPECT(gbc.readMem(0xdabf), 0x62);
        // CB 62 001D
        gbc.setState(0x3d3d, 0x5274, 0x5400, 0x72c7, 0x4871, 0xe751, 0x1, 0x0);
        gbc.writeMem(0x3d3d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5274);
        EXPECT(gbc.pc(), 0x3d3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 001E
        gbc.setState(0xb10a, 0x3d2c, 0x8950, 0x1f54, 0xd646, 0xbf89, 0x1, 0x0);
        gbc.writeMem(0xb10a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3d2c);
        EXPECT(gbc.pc(), 0xb10c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb10a), 0xcb);
        EXPECT(gbc.readMem(0xb10b), 0x62);
        // CB 62 001F
        gbc.setState(0xab3c, 0x898a, 0x44d0, 0x1c23, 0x1fd4, 0xb93d, 0x0, 0x0);
        gbc.writeMem(0xab3c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x898a);
        EXPECT(gbc.pc(), 0xab3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab3c), 0xcb);
        EXPECT(gbc.readMem(0xab3d), 0x62);
        // CB 62 0020
        gbc.setState(0xc197, 0xbbeb, 0x3b50, 0x674f, 0x636, 0x2a41, 0x0, 0x1);
        gbc.writeMem(0xc197, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xbbeb);
        EXPECT(gbc.pc(), 0xc199);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc197), 0xcb);
        EXPECT(gbc.readMem(0xc198), 0x62);
        // CB 62 0021
        gbc.setState(0xc5c3, 0x407a, 0x57c0, 0x68ce, 0x2694, 0x5c80, 0x1, 0x0);
        gbc.writeMem(0xc5c3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x407a);
        EXPECT(gbc.pc(), 0xc5c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5c3), 0xcb);
        EXPECT(gbc.readMem(0xc5c4), 0x62);
        // CB 62 0022
        gbc.setState(0x95b, 0xe211, 0x6a00, 0xeb22, 0x8914, 0x6b4, 0x1, 0x0);
        gbc.writeMem(0x95b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe211);
        EXPECT(gbc.pc(), 0x95d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0023
        gbc.setState(0x5789, 0x148a, 0xcb10, 0x4155, 0xdc69, 0x7e97, 0x0, 0x1);
        gbc.writeMem(0x5789, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x148a);
        EXPECT(gbc.pc(), 0x578b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0024
        gbc.setState(0xc918, 0x17e4, 0xde30, 0x8b62, 0x9a69, 0x9173, 0x1, 0x1);
        gbc.writeMem(0xc918, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x17e4);
        EXPECT(gbc.pc(), 0xc91a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc918), 0xcb);
        EXPECT(gbc.readMem(0xc919), 0x62);
        // CB 62 0025
        gbc.setState(0x1d5d, 0xbb96, 0xfcc0, 0x578e, 0x7251, 0x2d42, 0x1, 0x1);
        gbc.writeMem(0x1d5d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xbb96);
        EXPECT(gbc.pc(), 0x1d5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0026
        gbc.setState(0x5cf2, 0xb95a, 0x7690, 0x2a20, 0x5035, 0x7a5f, 0x1, 0x1);
        gbc.writeMem(0x5cf2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb95a);
        EXPECT(gbc.pc(), 0x5cf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0027
        gbc.setState(0x5fe5, 0x546d, 0x2120, 0x3043, 0x4c42, 0x4026, 0x1, 0x1);
        gbc.writeMem(0x5fe5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x546d);
        EXPECT(gbc.pc(), 0x5fe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0028
        gbc.setState(0x4093, 0x9e78, 0x62b0, 0xfa5b, 0xa1b, 0xfa97, 0x1, 0x1);
        gbc.writeMem(0x4093, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x9e78);
        EXPECT(gbc.pc(), 0x4095);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0029
        gbc.setState(0x4986, 0x53a0, 0xd420, 0xc646, 0xe8c7, 0x1b56, 0x0, 0x1);
        gbc.writeMem(0x4986, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x53a0);
        EXPECT(gbc.pc(), 0x4988);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 002A
        gbc.setState(0xda0f, 0xd093, 0x710, 0x9599, 0x7bb4, 0x4d1, 0x1, 0x0);
        gbc.writeMem(0xda0f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd093);
        EXPECT(gbc.pc(), 0xda11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda0f), 0xcb);
        EXPECT(gbc.readMem(0xda10), 0x62);
        // CB 62 002B
        gbc.setState(0xa00b, 0x1ee, 0x9820, 0x7260, 0x2ca9, 0xadf1, 0x1, 0x1);
        gbc.writeMem(0xa00b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1ee);
        EXPECT(gbc.pc(), 0xa00d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa00b), 0xcb);
        EXPECT(gbc.readMem(0xa00c), 0x62);
        // CB 62 002C
        gbc.setState(0xaca3, 0xcafd, 0x3cd0, 0x79c0, 0x56a2, 0xb5a, 0x1, 0x0);
        gbc.writeMem(0xaca3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xcafd);
        EXPECT(gbc.pc(), 0xaca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaca3), 0xcb);
        EXPECT(gbc.readMem(0xaca4), 0x62);
        // CB 62 002E
        gbc.setState(0x8122, 0x4f26, 0xe60, 0x78b5, 0x4f52, 0xba86, 0x0, 0x0);
        gbc.writeMem(0x8122, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4f26);
        EXPECT(gbc.pc(), 0x8124);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8122), 0xcb);
        EXPECT(gbc.readMem(0x8123), 0x62);
        // CB 62 002F
        gbc.setState(0x6604, 0x9d65, 0x35a0, 0x6b8d, 0x12eb, 0x473b, 0x1, 0x0);
        gbc.writeMem(0x6604, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x9d65);
        EXPECT(gbc.pc(), 0x6606);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0030
        gbc.setState(0xbed0, 0xfe11, 0xbae0, 0xf9cc, 0xd6d0, 0xde2a, 0x0, 0x0);
        gbc.writeMem(0xbed0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xfe11);
        EXPECT(gbc.pc(), 0xbed2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbed0), 0xcb);
        EXPECT(gbc.readMem(0xbed1), 0x62);
        // CB 62 0031
        gbc.setState(0xa5cb, 0xe59b, 0xf100, 0x188b, 0x8482, 0x1bd2, 0x0, 0x1);
        gbc.writeMem(0xa5cb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xe59b);
        EXPECT(gbc.pc(), 0xa5cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5cb), 0xcb);
        EXPECT(gbc.readMem(0xa5cc), 0x62);
        // CB 62 0032
        gbc.setState(0xd870, 0xced8, 0x1300, 0x933f, 0x76a4, 0x27b2, 0x0, 0x1);
        gbc.writeMem(0xd870, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xced8);
        EXPECT(gbc.pc(), 0xd872);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd870), 0xcb);
        EXPECT(gbc.readMem(0xd871), 0x62);
        // CB 62 0033
        gbc.setState(0x35f5, 0x55a5, 0x89f0, 0xe45, 0x7ecf, 0xc7fb, 0x1, 0x1);
        gbc.writeMem(0x35f5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x55a5);
        EXPECT(gbc.pc(), 0x35f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0034
        gbc.setState(0xd388, 0xda13, 0xbe50, 0xd703, 0x7d88, 0x26e5, 0x1, 0x1);
        gbc.writeMem(0xd388, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xda13);
        EXPECT(gbc.pc(), 0xd38a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd388), 0xcb);
        EXPECT(gbc.readMem(0xd389), 0x62);
        // CB 62 0035
        gbc.setState(0x392c, 0x7780, 0x6520, 0x645c, 0x8845, 0x4f86, 0x1, 0x1);
        gbc.writeMem(0x392c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7780);
        EXPECT(gbc.pc(), 0x392e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0036
        gbc.setState(0x488e, 0x1cfe, 0x7b60, 0x48b8, 0x547f, 0x75d4, 0x1, 0x0);
        gbc.writeMem(0x488e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x1cfe);
        EXPECT(gbc.pc(), 0x4890);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0037
        gbc.setState(0x493f, 0x16bc, 0x4070, 0x96e6, 0x6b7c, 0xc989, 0x1, 0x1);
        gbc.writeMem(0x493f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x16bc);
        EXPECT(gbc.pc(), 0x4941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0038
        gbc.setState(0xd147, 0xbd7, 0x37a0, 0x8964, 0xe30, 0x1f3b, 0x1, 0x0);
        gbc.writeMem(0xd147, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xbd7);
        EXPECT(gbc.pc(), 0xd149);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd147), 0xcb);
        EXPECT(gbc.readMem(0xd148), 0x62);
        // CB 62 0039
        gbc.setState(0xa1f3, 0x40a2, 0x6520, 0xb202, 0x84eb, 0xd55f, 0x1, 0x1);
        gbc.writeMem(0xa1f3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x40a2);
        EXPECT(gbc.pc(), 0xa1f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1f3), 0xcb);
        EXPECT(gbc.readMem(0xa1f4), 0x62);
        // CB 62 003A
        gbc.setState(0x61a8, 0xd182, 0x8c70, 0x97bd, 0xbe, 0x40fc, 0x0, 0x0);
        gbc.writeMem(0x61a8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd182);
        EXPECT(gbc.pc(), 0x61aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 003B
        gbc.setState(0x7558, 0x8e1b, 0x5220, 0xc95c, 0xa9cf, 0x2dce, 0x1, 0x1);
        gbc.writeMem(0x7558, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x8e1b);
        EXPECT(gbc.pc(), 0x755a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 003C
        gbc.setState(0x1ff0, 0x2607, 0x4700, 0x4dab, 0x115c, 0x7c76, 0x0, 0x0);
        gbc.writeMem(0x1ff0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2607);
        EXPECT(gbc.pc(), 0x1ff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 003D
        gbc.setState(0x93e5, 0x1ed9, 0xd4e0, 0xe120, 0xb99c, 0x450b, 0x1, 0x1);
        gbc.writeMem(0x93e5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1ed9);
        EXPECT(gbc.pc(), 0x93e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93e5), 0xcb);
        EXPECT(gbc.readMem(0x93e6), 0x62);
        // CB 62 003E
        gbc.setState(0xba23, 0xc2dc, 0x22e0, 0xfb65, 0xc626, 0xb42f, 0x0, 0x1);
        gbc.writeMem(0xba23, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc2dc);
        EXPECT(gbc.pc(), 0xba25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba23), 0xcb);
        EXPECT(gbc.readMem(0xba24), 0x62);
        // CB 62 003F
        gbc.setState(0xc076, 0xb0dc, 0xfab0, 0x8c3a, 0xc1cd, 0xe43b, 0x1, 0x1);
        gbc.writeMem(0xc076, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb0dc);
        EXPECT(gbc.pc(), 0xc078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc076), 0xcb);
        EXPECT(gbc.readMem(0xc077), 0x62);
        // CB 62 0040
        gbc.setState(0xdf30, 0x7b51, 0xf140, 0xe74c, 0xba3, 0x74da, 0x1, 0x1);
        gbc.writeMem(0xdf30, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x7b51);
        EXPECT(gbc.pc(), 0xdf32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf30), 0xcb);
        EXPECT(gbc.readMem(0xdf31), 0x62);
        // CB 62 0041
        gbc.setState(0xef9d, 0xf02b, 0x7ec0, 0x9a72, 0xd401, 0x454a, 0x0, 0x1);
        gbc.writeMem(0xef9d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf02b);
        EXPECT(gbc.pc(), 0xef9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef9d), 0xcb);
        EXPECT(gbc.readMem(0xef9e), 0x62);
        // CB 62 0042
        gbc.setState(0x95bb, 0xe250, 0xddd0, 0xd6f7, 0xcfbc, 0xdb74, 0x0, 0x1);
        gbc.writeMem(0x95bb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xe250);
        EXPECT(gbc.pc(), 0x95bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95bb), 0xcb);
        EXPECT(gbc.readMem(0x95bc), 0x62);
        // CB 62 0043
        gbc.setState(0xacf7, 0x86bc, 0x7950, 0x109e, 0xd4cd, 0xa4aa, 0x0, 0x0);
        gbc.writeMem(0xacf7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x86bc);
        EXPECT(gbc.pc(), 0xacf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacf7), 0xcb);
        EXPECT(gbc.readMem(0xacf8), 0x62);
        // CB 62 0044
        gbc.setState(0xe2af, 0x6fce, 0xa750, 0x6179, 0x80e4, 0x35f0, 0x1, 0x1);
        gbc.writeMem(0xe2af, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6fce);
        EXPECT(gbc.pc(), 0xe2b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2af), 0xcb);
        EXPECT(gbc.readMem(0xe2b0), 0x62);
        // CB 62 0045
        gbc.setState(0x7af2, 0xc6a3, 0xfcf0, 0xca49, 0x58ed, 0x2d57, 0x1, 0x0);
        gbc.writeMem(0x7af2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc6a3);
        EXPECT(gbc.pc(), 0x7af4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0046
        gbc.setState(0xd9c0, 0x4d26, 0x23a0, 0xb8d4, 0xde0c, 0xc292, 0x1, 0x0);
        gbc.writeMem(0xd9c0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x4d26);
        EXPECT(gbc.pc(), 0xd9c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9c0), 0xcb);
        EXPECT(gbc.readMem(0xd9c1), 0x62);
        // CB 62 0047
        gbc.setState(0xb113, 0x4be9, 0x7510, 0x4240, 0x6c84, 0x2ab6, 0x1, 0x0);
        gbc.writeMem(0xb113, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x4be9);
        EXPECT(gbc.pc(), 0xb115);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb113), 0xcb);
        EXPECT(gbc.readMem(0xb114), 0x62);
        // CB 62 0048
        gbc.setState(0x2fdf, 0x574d, 0xa930, 0x404, 0x7b4, 0x7161, 0x0, 0x0);
        gbc.writeMem(0x2fdf, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x574d);
        EXPECT(gbc.pc(), 0x2fe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0049
        gbc.setState(0xa70b, 0x99b0, 0xf300, 0x629a, 0x9d4f, 0xb6b6, 0x1, 0x1);
        gbc.writeMem(0xa70b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x99b0);
        EXPECT(gbc.pc(), 0xa70d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa70b), 0xcb);
        EXPECT(gbc.readMem(0xa70c), 0x62);
        // CB 62 004A
        gbc.setState(0xacae, 0x3898, 0x6940, 0xb7f4, 0x81cb, 0x6364, 0x1, 0x0);
        gbc.writeMem(0xacae, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3898);
        EXPECT(gbc.pc(), 0xacb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacae), 0xcb);
        EXPECT(gbc.readMem(0xacaf), 0x62);
        // CB 62 004B
        gbc.setState(0x85e5, 0xc13, 0xdd90, 0x551e, 0x21b2, 0xd118, 0x1, 0x0);
        gbc.writeMem(0x85e5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc13);
        EXPECT(gbc.pc(), 0x85e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85e5), 0xcb);
        EXPECT(gbc.readMem(0x85e6), 0x62);
        // CB 62 004C
        gbc.setState(0xdc2a, 0x2308, 0xa200, 0x3a33, 0x3d13, 0xc2b, 0x0, 0x1);
        gbc.writeMem(0xdc2a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x2308);
        EXPECT(gbc.pc(), 0xdc2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc2a), 0xcb);
        EXPECT(gbc.readMem(0xdc2b), 0x62);
        // CB 62 004D
        gbc.setState(0x24d2, 0x7a0f, 0x5780, 0x9884, 0x4820, 0xa6da, 0x1, 0x1);
        gbc.writeMem(0x24d2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x7a0f);
        EXPECT(gbc.pc(), 0x24d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 004E
        gbc.setState(0x64e7, 0xf06a, 0x3110, 0x7a66, 0xf8e5, 0x812a, 0x0, 0x0);
        gbc.writeMem(0x64e7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf06a);
        EXPECT(gbc.pc(), 0x64e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 004F
        gbc.setState(0x8540, 0x1d74, 0xca80, 0xf302, 0x8de2, 0x6ed0, 0x1, 0x1);
        gbc.writeMem(0x8540, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1d74);
        EXPECT(gbc.pc(), 0x8542);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8540), 0xcb);
        EXPECT(gbc.readMem(0x8541), 0x62);
        // CB 62 0050
        gbc.setState(0x7414, 0x72a6, 0xc4e0, 0x76e0, 0xf7, 0xf1b9, 0x0, 0x0);
        gbc.writeMem(0x7414, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x72a6);
        EXPECT(gbc.pc(), 0x7416);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0051
        gbc.setState(0x6d2f, 0xf76f, 0x58e0, 0xb9ee, 0x5368, 0xb507, 0x1, 0x1);
        gbc.writeMem(0x6d2f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf76f);
        EXPECT(gbc.pc(), 0x6d31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0052
        gbc.setState(0x1706, 0x6eb, 0xecd0, 0xf220, 0xdc6e, 0x4fb6, 0x0, 0x0);
        gbc.writeMem(0x1706, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x6eb);
        EXPECT(gbc.pc(), 0x1708);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0053
        gbc.setState(0x2a62, 0x6a8f, 0x270, 0x69eb, 0x2563, 0x230e, 0x0, 0x0);
        gbc.writeMem(0x2a62, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6a8f);
        EXPECT(gbc.pc(), 0x2a64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0054
        gbc.setState(0x9d04, 0x6761, 0x1060, 0x83ba, 0x5236, 0xdc44, 0x0, 0x0);
        gbc.writeMem(0x9d04, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6761);
        EXPECT(gbc.pc(), 0x9d06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d04), 0xcb);
        EXPECT(gbc.readMem(0x9d05), 0x62);
        // CB 62 0055
        gbc.setState(0xa3d9, 0xd62d, 0x7b40, 0x55bb, 0x74be, 0x8cdb, 0x0, 0x1);
        gbc.writeMem(0xa3d9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd62d);
        EXPECT(gbc.pc(), 0xa3db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3d9), 0xcb);
        EXPECT(gbc.readMem(0xa3da), 0x62);
        // CB 62 0056
        gbc.setState(0x8013, 0x7873, 0x3600, 0x5253, 0x3127, 0xe06d, 0x1, 0x1);
        gbc.writeMem(0x8013, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7873);
        EXPECT(gbc.pc(), 0x8015);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8013), 0xcb);
        EXPECT(gbc.readMem(0x8014), 0x62);
        // CB 62 0057
        gbc.setState(0xde58, 0x40a8, 0x5af0, 0xeb0f, 0x66bf, 0x40e5, 0x1, 0x1);
        gbc.writeMem(0xde58, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x40a8);
        EXPECT(gbc.pc(), 0xde5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde58), 0xcb);
        EXPECT(gbc.readMem(0xde59), 0x62);
        // CB 62 0058
        gbc.setState(0x416a, 0x9c05, 0x8750, 0x81f3, 0xf26f, 0x3100, 0x1, 0x0);
        gbc.writeMem(0x416a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x9c05);
        EXPECT(gbc.pc(), 0x416c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0059
        gbc.setState(0x393, 0x9479, 0xa450, 0x71cf, 0xe3bd, 0xb9c, 0x0, 0x1);
        gbc.writeMem(0x393, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9479);
        EXPECT(gbc.pc(), 0x395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 005A
        gbc.setState(0x6ec3, 0x9809, 0xdf20, 0xe7c2, 0x5263, 0x5322, 0x0, 0x1);
        gbc.writeMem(0x6ec3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x9809);
        EXPECT(gbc.pc(), 0x6ec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 005B
        gbc.setState(0x1af0, 0x7a13, 0x9760, 0x9186, 0xb96d, 0x1ae5, 0x0, 0x0);
        gbc.writeMem(0x1af0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x7a13);
        EXPECT(gbc.pc(), 0x1af2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 005C
        gbc.setState(0xefe3, 0x70ba, 0x85d0, 0x41bb, 0x4005, 0xf28f, 0x1, 0x1);
        gbc.writeMem(0xefe3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x70ba);
        EXPECT(gbc.pc(), 0xefe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefe3), 0xcb);
        EXPECT(gbc.readMem(0xefe4), 0x62);
        // CB 62 005D
        gbc.setState(0x8370, 0xfa84, 0x9bd0, 0x1aa5, 0x5e09, 0x3210, 0x0, 0x0);
        gbc.writeMem(0x8370, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xfa84);
        EXPECT(gbc.pc(), 0x8372);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8370), 0xcb);
        EXPECT(gbc.readMem(0x8371), 0x62);
        // CB 62 005E
        gbc.setState(0xc721, 0x102c, 0xdc50, 0x8f2e, 0x2746, 0xe1e5, 0x0, 0x0);
        gbc.writeMem(0xc721, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x102c);
        EXPECT(gbc.pc(), 0xc723);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc721), 0xcb);
        EXPECT(gbc.readMem(0xc722), 0x62);
        // CB 62 005F
        gbc.setState(0x8aa3, 0x72f2, 0xdfa0, 0x144, 0x3542, 0xc720, 0x1, 0x1);
        gbc.writeMem(0x8aa3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x72f2);
        EXPECT(gbc.pc(), 0x8aa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aa3), 0xcb);
        EXPECT(gbc.readMem(0x8aa4), 0x62);
        // CB 62 0060
        gbc.setState(0x49a4, 0xb17b, 0xbd00, 0xc049, 0x9212, 0x48cb, 0x1, 0x0);
        gbc.writeMem(0x49a4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb17b);
        EXPECT(gbc.pc(), 0x49a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0062
        gbc.setState(0x879b, 0xeec1, 0xef90, 0xb437, 0x4fa5, 0xd7de, 0x1, 0x1);
        gbc.writeMem(0x879b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xeec1);
        EXPECT(gbc.pc(), 0x879d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x879b), 0xcb);
        EXPECT(gbc.readMem(0x879c), 0x62);
        // CB 62 0063
        gbc.setState(0x2f9b, 0x8ffc, 0x550, 0x6e2f, 0x20d3, 0x49fe, 0x1, 0x1);
        gbc.writeMem(0x2f9b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x8ffc);
        EXPECT(gbc.pc(), 0x2f9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0064
        gbc.setState(0xcf30, 0xd6d1, 0x4b80, 0xab74, 0x95d4, 0x5afc, 0x1, 0x0);
        gbc.writeMem(0xcf30, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd6d1);
        EXPECT(gbc.pc(), 0xcf32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf30), 0xcb);
        EXPECT(gbc.readMem(0xcf31), 0x62);
        // CB 62 0065
        gbc.setState(0x9fa9, 0x3ae, 0x7450, 0x2815, 0xa460, 0x9331, 0x0, 0x1);
        gbc.writeMem(0x9fa9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3ae);
        EXPECT(gbc.pc(), 0x9fab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fa9), 0xcb);
        EXPECT(gbc.readMem(0x9faa), 0x62);
        // CB 62 0066
        gbc.setState(0xedbe, 0xf732, 0x58f0, 0xba74, 0x6cea, 0xbdc9, 0x0, 0x1);
        gbc.writeMem(0xedbe, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xf732);
        EXPECT(gbc.pc(), 0xedc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedbe), 0xcb);
        EXPECT(gbc.readMem(0xedbf), 0x62);
        // CB 62 0067
        gbc.setState(0x8a56, 0x8fe5, 0x5290, 0xe5b7, 0xc74f, 0xbf9, 0x0, 0x0);
        gbc.writeMem(0x8a56, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8fe5);
        EXPECT(gbc.pc(), 0x8a58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a56), 0xcb);
        EXPECT(gbc.readMem(0x8a57), 0x62);
        // CB 62 0068
        gbc.setState(0x898f, 0x6826, 0x5660, 0x8c4d, 0x1b3, 0xd53d, 0x0, 0x1);
        gbc.writeMem(0x898f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x6826);
        EXPECT(gbc.pc(), 0x8991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x898f), 0xcb);
        EXPECT(gbc.readMem(0x8990), 0x62);
        // CB 62 0069
        gbc.setState(0xe1ce, 0x90f2, 0x3050, 0xe908, 0xc14c, 0xc4af, 0x1, 0x0);
        gbc.writeMem(0xe1ce, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x90f2);
        EXPECT(gbc.pc(), 0xe1d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1ce), 0xcb);
        EXPECT(gbc.readMem(0xe1cf), 0x62);
        // CB 62 006A
        gbc.setState(0xa0b4, 0x6e04, 0xb890, 0xf3bd, 0xbab7, 0xf78d, 0x1, 0x1);
        gbc.writeMem(0xa0b4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6e04);
        EXPECT(gbc.pc(), 0xa0b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0b4), 0xcb);
        EXPECT(gbc.readMem(0xa0b5), 0x62);
        // CB 62 006B
        gbc.setState(0x1b26, 0xbf6b, 0xac40, 0xa2ae, 0x322, 0x42af, 0x1, 0x0);
        gbc.writeMem(0x1b26, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xbf6b);
        EXPECT(gbc.pc(), 0x1b28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 006C
        gbc.setState(0x17fa, 0x169b, 0x1a30, 0x5863, 0xbf5, 0x223a, 0x1, 0x0);
        gbc.writeMem(0x17fa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x169b);
        EXPECT(gbc.pc(), 0x17fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 006D
        gbc.setState(0xcad9, 0xd0fc, 0x7110, 0xb2ad, 0xa1a9, 0xcfac, 0x1, 0x1);
        gbc.writeMem(0xcad9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd0fc);
        EXPECT(gbc.pc(), 0xcadb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcad9), 0xcb);
        EXPECT(gbc.readMem(0xcada), 0x62);
        // CB 62 006E
        gbc.setState(0x858, 0x67e9, 0xa1d0, 0x1b2a, 0xb868, 0x9012, 0x0, 0x0);
        gbc.writeMem(0x858, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x67e9);
        EXPECT(gbc.pc(), 0x85a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 006F
        gbc.setState(0x71e9, 0xd00b, 0x2020, 0x6a01, 0x1949, 0xe82d, 0x0, 0x1);
        gbc.writeMem(0x71e9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xd00b);
        EXPECT(gbc.pc(), 0x71eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0070
        gbc.setState(0x7eb2, 0xd6af, 0xa9a0, 0x62c4, 0x10b, 0x421d, 0x0, 0x0);
        gbc.writeMem(0x7eb2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd6af);
        EXPECT(gbc.pc(), 0x7eb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0071
        gbc.setState(0x4399, 0xbb7, 0x6d0, 0x1de4, 0xb26d, 0x4d65, 0x1, 0x0);
        gbc.writeMem(0x4399, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xbb7);
        EXPECT(gbc.pc(), 0x439b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0072
        gbc.setState(0xc8bd, 0x43d4, 0x5400, 0xec8a, 0xe632, 0x1f3a, 0x1, 0x0);
        gbc.writeMem(0xc8bd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x43d4);
        EXPECT(gbc.pc(), 0xc8bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8bd), 0xcb);
        EXPECT(gbc.readMem(0xc8be), 0x62);
        // CB 62 0073
        gbc.setState(0x1c72, 0x6301, 0xcdb0, 0x44cb, 0x2610, 0x665e, 0x1, 0x0);
        gbc.writeMem(0x1c72, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x6301);
        EXPECT(gbc.pc(), 0x1c74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0074
        gbc.setState(0x7fef, 0x45a3, 0x13c0, 0x206c, 0xf108, 0x97c5, 0x1, 0x0);
        gbc.writeMem(0x7fef, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x45a3);
        EXPECT(gbc.pc(), 0x7ff1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0075
        gbc.setState(0x3eae, 0x7855, 0xfd70, 0x4e59, 0xb00d, 0xe70, 0x0, 0x0);
        gbc.writeMem(0x3eae, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x7855);
        EXPECT(gbc.pc(), 0x3eb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0076
        gbc.setState(0xb36e, 0xb8b8, 0x2740, 0xd35f, 0x4482, 0xc7cb, 0x0, 0x1);
        gbc.writeMem(0xb36e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb8b8);
        EXPECT(gbc.pc(), 0xb370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb36e), 0xcb);
        EXPECT(gbc.readMem(0xb36f), 0x62);
        // CB 62 0077
        gbc.setState(0xda04, 0xef00, 0x9340, 0x8211, 0x9dbb, 0x34b9, 0x0, 0x0);
        gbc.writeMem(0xda04, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xef00);
        EXPECT(gbc.pc(), 0xda06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda04), 0xcb);
        EXPECT(gbc.readMem(0xda05), 0x62);
        // CB 62 0078
        gbc.setState(0x7994, 0x1815, 0xc020, 0xec67, 0x229, 0x75cc, 0x0, 0x1);
        gbc.writeMem(0x7994, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1815);
        EXPECT(gbc.pc(), 0x7996);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0079
        gbc.setState(0x4775, 0x4b8c, 0x40c0, 0x372, 0x1ab8, 0x6b47, 0x1, 0x0);
        gbc.writeMem(0x4775, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4b8c);
        EXPECT(gbc.pc(), 0x4777);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 007A
        gbc.setState(0xcd97, 0xe475, 0xb370, 0x568f, 0x8f57, 0x2061, 0x1, 0x0);
        gbc.writeMem(0xcd97, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe475);
        EXPECT(gbc.pc(), 0xcd99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd97), 0xcb);
        EXPECT(gbc.readMem(0xcd98), 0x62);
        // CB 62 007B
        gbc.setState(0x80e1, 0xf17, 0xb7f0, 0x2f30, 0x3bfa, 0xa8fb, 0x0, 0x0);
        gbc.writeMem(0x80e1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf17);
        EXPECT(gbc.pc(), 0x80e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80e1), 0xcb);
        EXPECT(gbc.readMem(0x80e2), 0x62);
        // CB 62 007C
        gbc.setState(0x55bc, 0xceef, 0x7f70, 0x9a9f, 0x5381, 0x4c68, 0x0, 0x0);
        gbc.writeMem(0x55bc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xceef);
        EXPECT(gbc.pc(), 0x55be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 007D
        gbc.setState(0xd8f9, 0x3dad, 0x84b0, 0x87b4, 0xd925, 0x3aa5, 0x1, 0x0);
        gbc.writeMem(0xd8f9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3dad);
        EXPECT(gbc.pc(), 0xd8fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8f9), 0xcb);
        EXPECT(gbc.readMem(0xd8fa), 0x62);
        // CB 62 007E
        gbc.setState(0x9ee8, 0x5979, 0x6500, 0xf9ac, 0x5c59, 0xecd5, 0x1, 0x0);
        gbc.writeMem(0x9ee8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x5979);
        EXPECT(gbc.pc(), 0x9eea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ee8), 0xcb);
        EXPECT(gbc.readMem(0x9ee9), 0x62);
        // CB 62 007F
        gbc.setState(0x698c, 0xb013, 0x22e0, 0xa73d, 0xab5f, 0x80a8, 0x0, 0x1);
        gbc.writeMem(0x698c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb013);
        EXPECT(gbc.pc(), 0x698e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0080
        gbc.setState(0xeaad, 0x2b57, 0xa1d0, 0xd4e8, 0x343f, 0xce32, 0x1, 0x0);
        gbc.writeMem(0xeaad, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x2b57);
        EXPECT(gbc.pc(), 0xeaaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaad), 0xcb);
        EXPECT(gbc.readMem(0xeaae), 0x62);
        // CB 62 0081
        gbc.setState(0x2ee2, 0x5a0, 0xf80, 0x8f94, 0x4bb8, 0x2ca8, 0x0, 0x1);
        gbc.writeMem(0x2ee2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5a0);
        EXPECT(gbc.pc(), 0x2ee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0082
        gbc.setState(0x292, 0x7a47, 0x54e0, 0x791e, 0x5095, 0x2061, 0x1, 0x0);
        gbc.writeMem(0x292, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x7a47);
        EXPECT(gbc.pc(), 0x294);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0083
        gbc.setState(0x96ca, 0xa50a, 0xa7e0, 0x1572, 0x9e0d, 0x57d1, 0x0, 0x0);
        gbc.writeMem(0x96ca, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xa50a);
        EXPECT(gbc.pc(), 0x96cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ca), 0xcb);
        EXPECT(gbc.readMem(0x96cb), 0x62);
        // CB 62 0084
        gbc.setState(0x7db3, 0x711, 0x2e70, 0x5a1e, 0x8cbe, 0xbcf7, 0x1, 0x0);
        gbc.writeMem(0x7db3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x711);
        EXPECT(gbc.pc(), 0x7db5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0085
        gbc.setState(0x4729, 0x4d0c, 0x3ce0, 0x618e, 0xbc62, 0xb5b4, 0x0, 0x0);
        gbc.writeMem(0x4729, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x4d0c);
        EXPECT(gbc.pc(), 0x472b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0086
        gbc.setState(0x4cd1, 0x4fb2, 0x520, 0x960a, 0x4f6a, 0xbe87, 0x1, 0x0);
        gbc.writeMem(0x4cd1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x4fb2);
        EXPECT(gbc.pc(), 0x4cd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0088
        gbc.setState(0xa5d0, 0xf82a, 0x54d0, 0x1db5, 0x3a70, 0xd334, 0x1, 0x0);
        gbc.writeMem(0xa5d0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf82a);
        EXPECT(gbc.pc(), 0xa5d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5d0), 0xcb);
        EXPECT(gbc.readMem(0xa5d1), 0x62);
        // CB 62 0089
        gbc.setState(0x2bbe, 0x36a8, 0x7eb0, 0x8b93, 0x9116, 0xf8b2, 0x0, 0x1);
        gbc.writeMem(0x2bbe, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x36a8);
        EXPECT(gbc.pc(), 0x2bc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 008A
        gbc.setState(0x24c4, 0x9fb3, 0xd7d0, 0xf3f0, 0xa190, 0x2e6e, 0x0, 0x0);
        gbc.writeMem(0x24c4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x9fb3);
        EXPECT(gbc.pc(), 0x24c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 008B
        gbc.setState(0x2da3, 0xd469, 0x4be0, 0x7f55, 0x6fa1, 0xb016, 0x0, 0x1);
        gbc.writeMem(0x2da3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xd469);
        EXPECT(gbc.pc(), 0x2da5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 008C
        gbc.setState(0x2e68, 0xb772, 0x56d0, 0x67a0, 0x3678, 0x8cd9, 0x1, 0x0);
        gbc.writeMem(0x2e68, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb772);
        EXPECT(gbc.pc(), 0x2e6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 008D
        gbc.setState(0x5a06, 0x7d0d, 0x33c0, 0x317a, 0x1681, 0x1b0f, 0x1, 0x0);
        gbc.writeMem(0x5a06, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7d0d);
        EXPECT(gbc.pc(), 0x5a08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 008E
        gbc.setState(0x66dd, 0x6226, 0xcc10, 0x2a17, 0xcfb9, 0xb4e6, 0x1, 0x0);
        gbc.writeMem(0x66dd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x6226);
        EXPECT(gbc.pc(), 0x66df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 008F
        gbc.setState(0x1e45, 0xde3d, 0x7b50, 0xb48f, 0x1130, 0x13e3, 0x1, 0x1);
        gbc.writeMem(0x1e45, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xde3d);
        EXPECT(gbc.pc(), 0x1e47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0090
        gbc.setState(0xe530, 0x7c2c, 0x4d70, 0x4dd5, 0x6291, 0x2d46, 0x1, 0x1);
        gbc.writeMem(0xe530, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x7c2c);
        EXPECT(gbc.pc(), 0xe532);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe530), 0xcb);
        EXPECT(gbc.readMem(0xe531), 0x62);
        // CB 62 0091
        gbc.setState(0x5244, 0xd0e5, 0x3990, 0xf796, 0xd250, 0x6c22, 0x1, 0x1);
        gbc.writeMem(0x5244, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd0e5);
        EXPECT(gbc.pc(), 0x5246);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0092
        gbc.setState(0x78e5, 0x4db6, 0xd940, 0xe03b, 0xe6f2, 0x5335, 0x0, 0x1);
        gbc.writeMem(0x78e5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4db6);
        EXPECT(gbc.pc(), 0x78e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0093
        gbc.setState(0xed22, 0x61a2, 0x5f90, 0xda0e, 0x78d0, 0xbe38, 0x1, 0x1);
        gbc.writeMem(0xed22, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x61a2);
        EXPECT(gbc.pc(), 0xed24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed22), 0xcb);
        EXPECT(gbc.readMem(0xed23), 0x62);
        // CB 62 0094
        gbc.setState(0xea64, 0xed10, 0x66b0, 0xcd4, 0xe1a0, 0x699, 0x1, 0x0);
        gbc.writeMem(0xea64, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xed10);
        EXPECT(gbc.pc(), 0xea66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea64), 0xcb);
        EXPECT(gbc.readMem(0xea65), 0x62);
        // CB 62 0096
        gbc.setState(0xb4e3, 0xd9fd, 0x3fc0, 0x68ff, 0x79e9, 0xed95, 0x0, 0x0);
        gbc.writeMem(0xb4e3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xd9fd);
        EXPECT(gbc.pc(), 0xb4e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4e3), 0xcb);
        EXPECT(gbc.readMem(0xb4e4), 0x62);
        // CB 62 0097
        gbc.setState(0x4bb1, 0x64cb, 0xc450, 0x4535, 0x7805, 0xa170, 0x1, 0x0);
        gbc.writeMem(0x4bb1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x64cb);
        EXPECT(gbc.pc(), 0x4bb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0098
        gbc.setState(0xe619, 0x3cb0, 0xed30, 0xe9dc, 0xd0f6, 0xbe79, 0x0, 0x0);
        gbc.writeMem(0xe619, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x3cb0);
        EXPECT(gbc.pc(), 0xe61b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe619), 0xcb);
        EXPECT(gbc.readMem(0xe61a), 0x62);
        // CB 62 0099
        gbc.setState(0x7211, 0x3cd3, 0x49f0, 0xeacc, 0x8107, 0x1472, 0x0, 0x1);
        gbc.writeMem(0x7211, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x3cd3);
        EXPECT(gbc.pc(), 0x7213);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 009A
        gbc.setState(0x2366, 0xd469, 0xf8c0, 0x4a9f, 0xc8a6, 0x752a, 0x0, 0x1);
        gbc.writeMem(0x2366, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd469);
        EXPECT(gbc.pc(), 0x2368);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 009B
        gbc.setState(0x85d9, 0x9322, 0x5140, 0x1917, 0x3c8a, 0xf34c, 0x0, 0x0);
        gbc.writeMem(0x85d9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9322);
        EXPECT(gbc.pc(), 0x85db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85d9), 0xcb);
        EXPECT(gbc.readMem(0x85da), 0x62);
        // CB 62 009C
        gbc.setState(0x2087, 0x9861, 0x8020, 0x8acd, 0x96b, 0xc958, 0x1, 0x1);
        gbc.writeMem(0x2087, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9861);
        EXPECT(gbc.pc(), 0x2089);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 009D
        gbc.setState(0x890c, 0xe364, 0x8360, 0xb62d, 0xa54, 0xdad8, 0x1, 0x1);
        gbc.writeMem(0x890c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe364);
        EXPECT(gbc.pc(), 0x890e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x890c), 0xcb);
        EXPECT(gbc.readMem(0x890d), 0x62);
        // CB 62 009E
        gbc.setState(0xcb7e, 0x11bd, 0x1f00, 0xd0d, 0x3dca, 0x21cc, 0x0, 0x0);
        gbc.writeMem(0xcb7e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x11bd);
        EXPECT(gbc.pc(), 0xcb80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb7e), 0xcb);
        EXPECT(gbc.readMem(0xcb7f), 0x62);
        // CB 62 009F
        gbc.setState(0xb4de, 0xfd4b, 0x4df0, 0xb109, 0x2de7, 0x7ed2, 0x0, 0x1);
        gbc.writeMem(0xb4de, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xfd4b);
        EXPECT(gbc.pc(), 0xb4e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4de), 0xcb);
        EXPECT(gbc.readMem(0xb4df), 0x62);
        // CB 62 00A0
        gbc.setState(0xe3fa, 0xbcb8, 0x1100, 0xe2e8, 0x1cb9, 0xf246, 0x1, 0x0);
        gbc.writeMem(0xe3fa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xbcb8);
        EXPECT(gbc.pc(), 0xe3fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3fa), 0xcb);
        EXPECT(gbc.readMem(0xe3fb), 0x62);
        // CB 62 00A1
        gbc.setState(0xdd66, 0xfb71, 0x8890, 0x694d, 0x8be4, 0x8e9c, 0x0, 0x0);
        gbc.writeMem(0xdd66, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xfb71);
        EXPECT(gbc.pc(), 0xdd68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd66), 0xcb);
        EXPECT(gbc.readMem(0xdd67), 0x62);
        // CB 62 00A2
        gbc.setState(0xc1ee, 0xa08c, 0xd6d0, 0xefba, 0xf74b, 0x98ac, 0x0, 0x0);
        gbc.writeMem(0xc1ee, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xa08c);
        EXPECT(gbc.pc(), 0xc1f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1ee), 0xcb);
        EXPECT(gbc.readMem(0xc1ef), 0x62);
        // CB 62 00A3
        gbc.setState(0x3e99, 0xca04, 0xc310, 0x40d3, 0x47ec, 0xd958, 0x1, 0x0);
        gbc.writeMem(0x3e99, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xca04);
        EXPECT(gbc.pc(), 0x3e9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 00A4
        gbc.setState(0x71e9, 0xda81, 0x93a0, 0xbd43, 0x3381, 0xb36f, 0x1, 0x1);
        gbc.writeMem(0x71e9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xda81);
        EXPECT(gbc.pc(), 0x71eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 00A5
        gbc.setState(0x63fa, 0xf16b, 0xb140, 0x6ba, 0xf95e, 0x64d5, 0x0, 0x0);
        gbc.writeMem(0x63fa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xf16b);
        EXPECT(gbc.pc(), 0x63fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 00A6
        gbc.setState(0xa05d, 0x689, 0x6600, 0x58bd, 0x2385, 0xaaa3, 0x0, 0x1);
        gbc.writeMem(0xa05d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x689);
        EXPECT(gbc.pc(), 0xa05f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa05d), 0xcb);
        EXPECT(gbc.readMem(0xa05e), 0x62);
        // CB 62 00A7
        gbc.setState(0xbea8, 0xbe51, 0x690, 0x37ed, 0xe64c, 0xd4ad, 0x1, 0x0);
        gbc.writeMem(0xbea8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xbe51);
        EXPECT(gbc.pc(), 0xbeaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbea8), 0xcb);
        EXPECT(gbc.readMem(0xbea9), 0x62);
        // CB 62 00A8
        gbc.setState(0xd998, 0xcd6e, 0x29a0, 0xbfd, 0xfafb, 0xb911, 0x0, 0x1);
        gbc.writeMem(0xd998, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xcd6e);
        EXPECT(gbc.pc(), 0xd99a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd998), 0xcb);
        EXPECT(gbc.readMem(0xd999), 0x62);
        // CB 62 00A9
        gbc.setState(0x6318, 0xd8e4, 0xc9d0, 0x358f, 0x7865, 0x885e, 0x1, 0x1);
        gbc.writeMem(0x6318, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xd8e4);
        EXPECT(gbc.pc(), 0x631a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 00AA
        gbc.setState(0x49ae, 0x643b, 0xf770, 0x2371, 0x7fd0, 0x92b8, 0x1, 0x1);
        gbc.writeMem(0x49ae, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x643b);
        EXPECT(gbc.pc(), 0x49b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 00AB
        gbc.setState(0x696d, 0xda8f, 0x52d0, 0x9260, 0xdf5d, 0x99ad, 0x1, 0x1);
        gbc.writeMem(0x696d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xda8f);
        EXPECT(gbc.pc(), 0x696f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 00AC
        gbc.setState(0x667b, 0x4bdd, 0x6970, 0x71fe, 0x82be, 0x441d, 0x0, 0x1);
        gbc.writeMem(0x667b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x4bdd);
        EXPECT(gbc.pc(), 0x667d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 00AD
        gbc.setState(0x1d81, 0x3025, 0x9220, 0x27c3, 0xbb59, 0xfa48, 0x1, 0x0);
        gbc.writeMem(0x1d81, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x3025);
        EXPECT(gbc.pc(), 0x1d83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 00AE
        gbc.setState(0x73b5, 0xfd3e, 0xd050, 0x2739, 0x86f3, 0x19fb, 0x0, 0x1);
        gbc.writeMem(0x73b5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xfd3e);
        EXPECT(gbc.pc(), 0x73b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 00AF
        gbc.setState(0x391a, 0xf7eb, 0x4100, 0xc51f, 0x6aee, 0x4ac, 0x0, 0x1);
        gbc.writeMem(0x391a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf7eb);
        EXPECT(gbc.pc(), 0x391c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 00B0
        gbc.setState(0xefd9, 0xc2bd, 0x67b0, 0x242f, 0x7726, 0x36f5, 0x0, 0x1);
        gbc.writeMem(0xefd9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc2bd);
        EXPECT(gbc.pc(), 0xefdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefd9), 0xcb);
        EXPECT(gbc.readMem(0xefda), 0x62);
        // CB 62 00B1
        gbc.setState(0x9bfd, 0x5d19, 0xdd00, 0xb633, 0xc7b, 0x9352, 0x1, 0x0);
        gbc.writeMem(0x9bfd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5d19);
        EXPECT(gbc.pc(), 0x9bff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bfd), 0xcb);
        EXPECT(gbc.readMem(0x9bfe), 0x62);
        // CB 62 00B2
        gbc.setState(0xebf4, 0x1186, 0xfce0, 0x2ce3, 0x6d43, 0x6df0, 0x1, 0x0);
        gbc.writeMem(0xebf4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x1186);
        EXPECT(gbc.pc(), 0xebf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebf4), 0xcb);
        EXPECT(gbc.readMem(0xebf5), 0x62);
        // CB 62 00B3
        gbc.setState(0x3c8e, 0xd8fe, 0xcde0, 0xbeab, 0xc660, 0x370f, 0x0, 0x1);
        gbc.writeMem(0x3c8e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd8fe);
        EXPECT(gbc.pc(), 0x3c90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 00B4
        gbc.setState(0xa87c, 0x6fb1, 0x8a50, 0x35ed, 0xcc84, 0x9255, 0x1, 0x1);
        gbc.writeMem(0xa87c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6fb1);
        EXPECT(gbc.pc(), 0xa87e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa87c), 0xcb);
        EXPECT(gbc.readMem(0xa87d), 0x62);
        // CB 62 00B5
        gbc.setState(0x6d95, 0xcce, 0x2460, 0x4b08, 0xf6a8, 0x9b88, 0x0, 0x1);
        gbc.writeMem(0x6d95, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xcce);
        EXPECT(gbc.pc(), 0x6d97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 00B6
        gbc.setState(0xac4e, 0x5b31, 0x7460, 0x52ca, 0x1cb, 0xf9c6, 0x1, 0x1);
        gbc.writeMem(0xac4e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x5b31);
        EXPECT(gbc.pc(), 0xac50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac4e), 0xcb);
        EXPECT(gbc.readMem(0xac4f), 0x62);
        // CB 62 00B7
        gbc.setState(0x5952, 0x5fd4, 0xb050, 0x1e09, 0x5578, 0x5dc2, 0x1, 0x1);
        gbc.writeMem(0x5952, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5fd4);
        EXPECT(gbc.pc(), 0x5954);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 00B8
        gbc.setState(0xa947, 0x2065, 0xa1d0, 0x9e60, 0xb52d, 0x85f0, 0x0, 0x0);
        gbc.writeMem(0xa947, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2065);
        EXPECT(gbc.pc(), 0xa949);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa947), 0xcb);
        EXPECT(gbc.readMem(0xa948), 0x62);
        // CB 62 00B9
        gbc.setState(0xd32c, 0x873, 0xbc60, 0x197f, 0x1976, 0x5335, 0x0, 0x1);
        gbc.writeMem(0xd32c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x873);
        EXPECT(gbc.pc(), 0xd32e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd32c), 0xcb);
        EXPECT(gbc.readMem(0xd32d), 0x62);
        // CB 62 00BA
        gbc.setState(0x6366, 0xe6c, 0xbc00, 0xe910, 0xc599, 0x5ab8, 0x1, 0x0);
        gbc.writeMem(0x6366, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xe6c);
        EXPECT(gbc.pc(), 0x6368);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 00BB
        gbc.setState(0x8d10, 0x2d8a, 0xa930, 0xfd1, 0xde33, 0xb7e9, 0x1, 0x0);
        gbc.writeMem(0x8d10, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x2d8a);
        EXPECT(gbc.pc(), 0x8d12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d10), 0xcb);
        EXPECT(gbc.readMem(0x8d11), 0x62);
        // CB 62 00BD
        gbc.setState(0xb7a9, 0x7d8f, 0xf2c0, 0x9176, 0x9021, 0xbb8a, 0x0, 0x1);
        gbc.writeMem(0xb7a9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7d8f);
        EXPECT(gbc.pc(), 0xb7ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7a9), 0xcb);
        EXPECT(gbc.readMem(0xb7aa), 0x62);
        // CB 62 00BF
        gbc.setState(0x5a6f, 0xd77c, 0x1450, 0xc89b, 0xb880, 0x493f, 0x0, 0x1);
        gbc.writeMem(0x5a6f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd77c);
        EXPECT(gbc.pc(), 0x5a71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 00C0
        gbc.setState(0x527a, 0x2761, 0xb770, 0x5a71, 0x3eda, 0xdbf3, 0x1, 0x0);
        gbc.writeMem(0x527a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x2761);
        EXPECT(gbc.pc(), 0x527c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 00C1
        gbc.setState(0x9ec4, 0x54d9, 0x520, 0x3c21, 0xcc58, 0x3548, 0x0, 0x1);
        gbc.writeMem(0x9ec4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x54d9);
        EXPECT(gbc.pc(), 0x9ec6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ec4), 0xcb);
        EXPECT(gbc.readMem(0x9ec5), 0x62);
        // CB 62 00C3
        gbc.setState(0x5e42, 0xfa19, 0x1650, 0xda3c, 0x173, 0x43d9, 0x0, 0x1);
        gbc.writeMem(0x5e42, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xfa19);
        EXPECT(gbc.pc(), 0x5e44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 00C4
        gbc.setState(0xe1e1, 0x838b, 0xcbe0, 0xcb59, 0x5111, 0x2d2c, 0x1, 0x1);
        gbc.writeMem(0xe1e1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x838b);
        EXPECT(gbc.pc(), 0xe1e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1e1), 0xcb);
        EXPECT(gbc.readMem(0xe1e2), 0x62);
        // CB 62 00C5
        gbc.setState(0xccf8, 0x216, 0xd230, 0x6949, 0xcc76, 0xd353, 0x0, 0x0);
        gbc.writeMem(0xccf8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x216);
        EXPECT(gbc.pc(), 0xccfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccf8), 0xcb);
        EXPECT(gbc.readMem(0xccf9), 0x62);
        // CB 62 00C6
        gbc.setState(0x5242, 0x1823, 0xd90, 0xdd59, 0xa16e, 0x652e, 0x1, 0x0);
        gbc.writeMem(0x5242, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1823);
        EXPECT(gbc.pc(), 0x5244);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 00C7
        gbc.setState(0xd7cf, 0x909c, 0x4050, 0x5c76, 0xd595, 0xfaa7, 0x1, 0x1);
        gbc.writeMem(0xd7cf, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x909c);
        EXPECT(gbc.pc(), 0xd7d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7cf), 0xcb);
        EXPECT(gbc.readMem(0xd7d0), 0x62);
        // CB 62 00C8
        gbc.setState(0x2c2d, 0x82ff, 0x3d90, 0x4304, 0x8846, 0xef9b, 0x1, 0x1);
        gbc.writeMem(0x2c2d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x82ff);
        EXPECT(gbc.pc(), 0x2c2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 00C9
        gbc.setState(0x67c7, 0x2d94, 0x3450, 0x4174, 0xd204, 0x7bbe, 0x0, 0x1);
        gbc.writeMem(0x67c7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x2d94);
        EXPECT(gbc.pc(), 0x67c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 00CA
        gbc.setState(0x7b89, 0x5f60, 0xdf00, 0x48da, 0x5a5c, 0x97d8, 0x0, 0x0);
        gbc.writeMem(0x7b89, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5f60);
        EXPECT(gbc.pc(), 0x7b8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 00CB
        gbc.setState(0xb076, 0x4a5a, 0x420, 0x2d67, 0xea52, 0x5567, 0x0, 0x1);
        gbc.writeMem(0xb076, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4a5a);
        EXPECT(gbc.pc(), 0xb078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb076), 0xcb);
        EXPECT(gbc.readMem(0xb077), 0x62);
        // CB 62 00CC
        gbc.setState(0x3979, 0x2a6f, 0xdeb0, 0xf5c8, 0xc685, 0x29c3, 0x1, 0x0);
        gbc.writeMem(0x3979, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2a6f);
        EXPECT(gbc.pc(), 0x397b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 00CD
        gbc.setState(0x3b78, 0x70e6, 0xe660, 0x7b5d, 0xa826, 0x17ec, 0x1, 0x0);
        gbc.writeMem(0x3b78, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x70e6);
        EXPECT(gbc.pc(), 0x3b7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 00CE
        gbc.setState(0x84b5, 0x8a07, 0x2520, 0x77d7, 0xa77e, 0x8e0d, 0x0, 0x1);
        gbc.writeMem(0x84b5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8a07);
        EXPECT(gbc.pc(), 0x84b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84b5), 0xcb);
        EXPECT(gbc.readMem(0x84b6), 0x62);
        // CB 62 00CF
        gbc.setState(0x3337, 0x699b, 0x5df0, 0xce59, 0x164d, 0xb9d2, 0x1, 0x0);
        gbc.writeMem(0x3337, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x699b);
        EXPECT(gbc.pc(), 0x3339);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 00D0
        gbc.setState(0x518f, 0xef2c, 0x42e0, 0x4005, 0xe279, 0x1467, 0x0, 0x0);
        gbc.writeMem(0x518f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xef2c);
        EXPECT(gbc.pc(), 0x5191);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 00D1
        gbc.setState(0x290a, 0x83ba, 0xb40, 0x3074, 0x8b62, 0x22f9, 0x0, 0x0);
        gbc.writeMem(0x290a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x83ba);
        EXPECT(gbc.pc(), 0x290c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 00D2
        gbc.setState(0x959a, 0xc899, 0x3ef0, 0x6adb, 0x13dd, 0xb01e, 0x0, 0x1);
        gbc.writeMem(0x959a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xc899);
        EXPECT(gbc.pc(), 0x959c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x959a), 0xcb);
        EXPECT(gbc.readMem(0x959b), 0x62);
        // CB 62 00D3
        gbc.setState(0xd281, 0x2760, 0x9100, 0xc38d, 0x525b, 0x6a34, 0x1, 0x1);
        gbc.writeMem(0xd281, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x2760);
        EXPECT(gbc.pc(), 0xd283);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd281), 0xcb);
        EXPECT(gbc.readMem(0xd282), 0x62);
        // CB 62 00D4
        gbc.setState(0xca9f, 0xfb51, 0x3bd0, 0xea1f, 0x98c1, 0x8789, 0x0, 0x0);
        gbc.writeMem(0xca9f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xfb51);
        EXPECT(gbc.pc(), 0xcaa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca9f), 0xcb);
        EXPECT(gbc.readMem(0xcaa0), 0x62);
        // CB 62 00D6
        gbc.setState(0x431a, 0x8fba, 0xe080, 0xbe01, 0x67a6, 0x26fe, 0x1, 0x1);
        gbc.writeMem(0x431a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x8fba);
        EXPECT(gbc.pc(), 0x431c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 00D7
        gbc.setState(0x99, 0x21a8, 0x3b60, 0xf3d7, 0xa2a1, 0xb25a, 0x1, 0x1);
        gbc.writeMem(0x99, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x21a8);
        EXPECT(gbc.pc(), 0x9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 00D8
        gbc.setState(0xa79a, 0x4a55, 0x4ba0, 0x900c, 0x4d2a, 0xb3ee, 0x0, 0x0);
        gbc.writeMem(0xa79a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4a55);
        EXPECT(gbc.pc(), 0xa79c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa79a), 0xcb);
        EXPECT(gbc.readMem(0xa79b), 0x62);
        // CB 62 00D9
        gbc.setState(0x47b8, 0xd86a, 0x4300, 0x1bb0, 0xfd45, 0xf077, 0x0, 0x1);
        gbc.writeMem(0x47b8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd86a);
        EXPECT(gbc.pc(), 0x47ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 00DB
        gbc.setState(0xe0f3, 0xa8b9, 0xff20, 0x6b95, 0xcfe7, 0x96a2, 0x0, 0x0);
        gbc.writeMem(0xe0f3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa8b9);
        EXPECT(gbc.pc(), 0xe0f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0f3), 0xcb);
        EXPECT(gbc.readMem(0xe0f4), 0x62);
        // CB 62 00DC
        gbc.setState(0x157b, 0xe7df, 0x8810, 0x520c, 0x8af3, 0xb123, 0x1, 0x1);
        gbc.writeMem(0x157b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xe7df);
        EXPECT(gbc.pc(), 0x157d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 00DD
        gbc.setState(0x5efa, 0x8a8f, 0xedf0, 0xb959, 0xf, 0x4417, 0x1, 0x0);
        gbc.writeMem(0x5efa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x8a8f);
        EXPECT(gbc.pc(), 0x5efc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 00DE
        gbc.setState(0x344, 0xb69d, 0x1010, 0xe9d7, 0x1cea, 0x6dc8, 0x0, 0x1);
        gbc.writeMem(0x344, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb69d);
        EXPECT(gbc.pc(), 0x346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 00DF
        gbc.setState(0x224d, 0x411c, 0x17c0, 0x2658, 0xecb4, 0x53a2, 0x0, 0x1);
        gbc.writeMem(0x224d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x411c);
        EXPECT(gbc.pc(), 0x224f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 00E0
        gbc.setState(0xe1be, 0x78da, 0x5c10, 0x31f7, 0xd0d8, 0x387b, 0x1, 0x0);
        gbc.writeMem(0xe1be, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x78da);
        EXPECT(gbc.pc(), 0xe1c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1be), 0xcb);
        EXPECT(gbc.readMem(0xe1bf), 0x62);
        // CB 62 00E1
        gbc.setState(0x3c54, 0xa7b9, 0x71a0, 0x72f1, 0xeca7, 0x52c8, 0x0, 0x0);
        gbc.writeMem(0x3c54, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa7b9);
        EXPECT(gbc.pc(), 0x3c56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 00E2
        gbc.setState(0x2031, 0xdce9, 0xd980, 0xcc5b, 0x7c19, 0xf43f, 0x1, 0x1);
        gbc.writeMem(0x2031, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xdce9);
        EXPECT(gbc.pc(), 0x2033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 00E3
        gbc.setState(0xec6, 0xc66d, 0x4ee0, 0xc1f5, 0x2417, 0x4929, 0x0, 0x0);
        gbc.writeMem(0xec6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc66d);
        EXPECT(gbc.pc(), 0xec8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 00E4
        gbc.setState(0x103e, 0xa51d, 0xfd80, 0x20c8, 0x4b6, 0x3f6c, 0x0, 0x1);
        gbc.writeMem(0x103e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa51d);
        EXPECT(gbc.pc(), 0x1040);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 00E6
        gbc.setState(0x4ebd, 0x401f, 0x9b90, 0x9e8b, 0xeef7, 0x49ab, 0x1, 0x1);
        gbc.writeMem(0x4ebd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x401f);
        EXPECT(gbc.pc(), 0x4ebf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 00E7
        gbc.setState(0xce71, 0x32d2, 0x9f00, 0x1d75, 0x2e9b, 0x9ae5, 0x0, 0x1);
        gbc.writeMem(0xce71, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x32d2);
        EXPECT(gbc.pc(), 0xce73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce71), 0xcb);
        EXPECT(gbc.readMem(0xce72), 0x62);
        // CB 62 00E8
        gbc.setState(0x9052, 0x6380, 0xc070, 0x7b35, 0xc0d, 0xb387, 0x0, 0x1);
        gbc.writeMem(0x9052, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6380);
        EXPECT(gbc.pc(), 0x9054);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9052), 0xcb);
        EXPECT(gbc.readMem(0x9053), 0x62);
        // CB 62 00E9
        gbc.setState(0x2006, 0xd590, 0x1f20, 0x364d, 0x6553, 0xd569, 0x0, 0x1);
        gbc.writeMem(0x2006, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd590);
        EXPECT(gbc.pc(), 0x2008);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 00EA
        gbc.setState(0x8c67, 0x6f03, 0x5220, 0xd5ac, 0xb534, 0x2a63, 0x1, 0x1);
        gbc.writeMem(0x8c67, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6f03);
        EXPECT(gbc.pc(), 0x8c69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c67), 0xcb);
        EXPECT(gbc.readMem(0x8c68), 0x62);
        // CB 62 00EB
        gbc.setState(0xe19c, 0xa1f7, 0x48a0, 0xba04, 0x25ce, 0x7acf, 0x1, 0x1);
        gbc.writeMem(0xe19c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa1f7);
        EXPECT(gbc.pc(), 0xe19e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe19c), 0xcb);
        EXPECT(gbc.readMem(0xe19d), 0x62);
        // CB 62 00EC
        gbc.setState(0x21a6, 0x4a53, 0x10c0, 0xc564, 0xcc25, 0xce89, 0x1, 0x1);
        gbc.writeMem(0x21a6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x4a53);
        EXPECT(gbc.pc(), 0x21a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 00EE
        gbc.setState(0xcdc6, 0xe28d, 0x8260, 0xcbfe, 0x7407, 0xf3b3, 0x0, 0x1);
        gbc.writeMem(0xcdc6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe28d);
        EXPECT(gbc.pc(), 0xcdc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdc6), 0xcb);
        EXPECT(gbc.readMem(0xcdc7), 0x62);
        // CB 62 00EF
        gbc.setState(0xbd2f, 0x5239, 0x75d0, 0xa057, 0x5fa, 0xed6c, 0x1, 0x1);
        gbc.writeMem(0xbd2f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5239);
        EXPECT(gbc.pc(), 0xbd31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd2f), 0xcb);
        EXPECT(gbc.readMem(0xbd30), 0x62);
        // CB 62 00F0
        gbc.setState(0x3db6, 0x8a2f, 0x5bb0, 0x8a4c, 0xc717, 0x7fc0, 0x0, 0x1);
        gbc.writeMem(0x3db6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8a2f);
        EXPECT(gbc.pc(), 0x3db8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 00F2
        gbc.setState(0x5277, 0x410c, 0x2410, 0x7dfd, 0x19c3, 0xbb14, 0x0, 0x1);
        gbc.writeMem(0x5277, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x410c);
        EXPECT(gbc.pc(), 0x5279);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 00F3
        gbc.setState(0x23ac, 0xa2da, 0xee70, 0x3990, 0x47cf, 0x3ff2, 0x0, 0x0);
        gbc.writeMem(0x23ac, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa2da);
        EXPECT(gbc.pc(), 0x23ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 00F5
        gbc.setState(0xd7ff, 0xe9a7, 0xf910, 0x8989, 0x4da9, 0x8d4, 0x0, 0x0);
        gbc.writeMem(0xd7ff, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe9a7);
        EXPECT(gbc.pc(), 0xd801);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7ff), 0xcb);
        EXPECT(gbc.readMem(0xd800), 0x62);
        // CB 62 00F6
        gbc.setState(0xda0c, 0x2c96, 0xd2a0, 0x379, 0xbb05, 0x1ba, 0x0, 0x1);
        gbc.writeMem(0xda0c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x2c96);
        EXPECT(gbc.pc(), 0xda0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda0c), 0xcb);
        EXPECT(gbc.readMem(0xda0d), 0x62);
        // CB 62 00F7
        gbc.setState(0xed19, 0xf95, 0x13c0, 0x8ead, 0x45ce, 0xa015, 0x1, 0x1);
        gbc.writeMem(0xed19, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xf95);
        EXPECT(gbc.pc(), 0xed1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed19), 0xcb);
        EXPECT(gbc.readMem(0xed1a), 0x62);
        // CB 62 00F8
        gbc.setState(0x641e, 0xf6d2, 0x26a0, 0xf31e, 0x88ea, 0x527f, 0x0, 0x1);
        gbc.writeMem(0x641e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf6d2);
        EXPECT(gbc.pc(), 0x6420);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 00FA
        gbc.setState(0x22a, 0x8bc1, 0x5390, 0x3bfe, 0xb945, 0x97ef, 0x1, 0x0);
        gbc.writeMem(0x22a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8bc1);
        EXPECT(gbc.pc(), 0x22c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 00FB
        gbc.setState(0xdc3f, 0x9c5f, 0xd9b0, 0x13e0, 0xe01f, 0x56a9, 0x1, 0x0);
        gbc.writeMem(0xdc3f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x9c5f);
        EXPECT(gbc.pc(), 0xdc41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc3f), 0xcb);
        EXPECT(gbc.readMem(0xdc40), 0x62);
        // CB 62 00FD
        gbc.setState(0x5be4, 0x20b8, 0xde50, 0x47d9, 0x203a, 0xe49, 0x0, 0x0);
        gbc.writeMem(0x5be4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x20b8);
        EXPECT(gbc.pc(), 0x5be6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 00FE
        gbc.setState(0x6410, 0x2213, 0x1790, 0x4b9b, 0x334, 0x9ec9, 0x0, 0x1);
        gbc.writeMem(0x6410, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x2213);
        EXPECT(gbc.pc(), 0x6412);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 00FF
        gbc.setState(0x4a4d, 0x2056, 0xa7e0, 0x4223, 0x72fa, 0xf0d5, 0x1, 0x0);
        gbc.writeMem(0x4a4d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2056);
        EXPECT(gbc.pc(), 0x4a4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0100
        gbc.setState(0xc64b, 0x6021, 0xb110, 0x5eb7, 0xafcc, 0xab69, 0x1, 0x0);
        gbc.writeMem(0xc64b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x6021);
        EXPECT(gbc.pc(), 0xc64d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc64b), 0xcb);
        EXPECT(gbc.readMem(0xc64c), 0x62);
        // CB 62 0101
        gbc.setState(0x8e41, 0x484d, 0x2150, 0x6a70, 0xb768, 0xdbbb, 0x1, 0x0);
        gbc.writeMem(0x8e41, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x484d);
        EXPECT(gbc.pc(), 0x8e43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e41), 0xcb);
        EXPECT(gbc.readMem(0x8e42), 0x62);
        // CB 62 0102
        gbc.setState(0xb722, 0xfc87, 0xf4c0, 0x3d58, 0x41ff, 0xab2, 0x0, 0x0);
        gbc.writeMem(0xb722, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xfc87);
        EXPECT(gbc.pc(), 0xb724);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb722), 0xcb);
        EXPECT(gbc.readMem(0xb723), 0x62);
        // CB 62 0103
        gbc.setState(0xdf08, 0x806, 0x5490, 0x1008, 0x2276, 0xfb71, 0x0, 0x1);
        gbc.writeMem(0xdf08, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x806);
        EXPECT(gbc.pc(), 0xdf0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf08), 0xcb);
        EXPECT(gbc.readMem(0xdf09), 0x62);
        // CB 62 0104
        gbc.setState(0x1d8e, 0xb432, 0x59e0, 0x1965, 0x31dc, 0x7dc3, 0x0, 0x1);
        gbc.writeMem(0x1d8e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb432);
        EXPECT(gbc.pc(), 0x1d90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0105
        gbc.setState(0xb366, 0xd589, 0x5dc0, 0x2bc2, 0x4019, 0x12f9, 0x1, 0x1);
        gbc.writeMem(0xb366, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd589);
        EXPECT(gbc.pc(), 0xb368);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb366), 0xcb);
        EXPECT(gbc.readMem(0xb367), 0x62);
        // CB 62 0106
        gbc.setState(0x5e7e, 0xa166, 0x5750, 0xb4da, 0xfcb9, 0xe277, 0x0, 0x1);
        gbc.writeMem(0x5e7e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa166);
        EXPECT(gbc.pc(), 0x5e80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0107
        gbc.setState(0xb8e6, 0x4d2a, 0x90, 0xc7ce, 0xfb2e, 0x4b59, 0x0, 0x0);
        gbc.writeMem(0xb8e6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4d2a);
        EXPECT(gbc.pc(), 0xb8e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8e6), 0xcb);
        EXPECT(gbc.readMem(0xb8e7), 0x62);
        // CB 62 0108
        gbc.setState(0xca06, 0x8de4, 0xdb80, 0x4198, 0xc903, 0x93c7, 0x0, 0x1);
        gbc.writeMem(0xca06, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8de4);
        EXPECT(gbc.pc(), 0xca08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca06), 0xcb);
        EXPECT(gbc.readMem(0xca07), 0x62);
        // CB 62 0109
        gbc.setState(0xedd7, 0x930f, 0x30b0, 0xa138, 0xee1b, 0xe9b2, 0x1, 0x0);
        gbc.writeMem(0xedd7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x930f);
        EXPECT(gbc.pc(), 0xedd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedd7), 0xcb);
        EXPECT(gbc.readMem(0xedd8), 0x62);
        // CB 62 010A
        gbc.setState(0xdd64, 0x7094, 0xd130, 0xfba4, 0x2533, 0x9d66, 0x1, 0x1);
        gbc.writeMem(0xdd64, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x7094);
        EXPECT(gbc.pc(), 0xdd66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd64), 0xcb);
        EXPECT(gbc.readMem(0xdd65), 0x62);
        // CB 62 010B
        gbc.setState(0x7d7b, 0x3526, 0x57b0, 0x7f2a, 0xdeb6, 0xdc45, 0x0, 0x1);
        gbc.writeMem(0x7d7b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3526);
        EXPECT(gbc.pc(), 0x7d7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 010C
        gbc.setState(0x282d, 0x82b6, 0xd830, 0x9255, 0xc2a9, 0xa0ad, 0x1, 0x1);
        gbc.writeMem(0x282d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x82b6);
        EXPECT(gbc.pc(), 0x282f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 010D
        gbc.setState(0xd5b6, 0x9b2c, 0x9c0, 0xcc3f, 0xdb12, 0x96b6, 0x0, 0x1);
        gbc.writeMem(0xd5b6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9b2c);
        EXPECT(gbc.pc(), 0xd5b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5b6), 0xcb);
        EXPECT(gbc.readMem(0xd5b7), 0x62);
        // CB 62 010F
        gbc.setState(0x6e27, 0x4c0, 0x83a0, 0x5134, 0xa911, 0x82aa, 0x0, 0x1);
        gbc.writeMem(0x6e27, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4c0);
        EXPECT(gbc.pc(), 0x6e29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0110
        gbc.setState(0xd495, 0x9987, 0xf2e0, 0xa63c, 0xd432, 0xb9f3, 0x0, 0x1);
        gbc.writeMem(0xd495, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9987);
        EXPECT(gbc.pc(), 0xd497);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd495), 0xcb);
        EXPECT(gbc.readMem(0xd496), 0x62);
        // CB 62 0111
        gbc.setState(0xbd6e, 0xc2d2, 0xbe40, 0x3c72, 0xbd15, 0xddcd, 0x1, 0x1);
        gbc.writeMem(0xbd6e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc2d2);
        EXPECT(gbc.pc(), 0xbd70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd6e), 0xcb);
        EXPECT(gbc.readMem(0xbd6f), 0x62);
        // CB 62 0113
        gbc.setState(0x9c37, 0x3063, 0x4fb0, 0x17dc, 0xaa16, 0x60c8, 0x1, 0x0);
        gbc.writeMem(0x9c37, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3063);
        EXPECT(gbc.pc(), 0x9c39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c37), 0xcb);
        EXPECT(gbc.readMem(0x9c38), 0x62);
        // CB 62 0114
        gbc.setState(0xdc9c, 0xe996, 0xa60, 0x70f0, 0x31a7, 0x1ee7, 0x1, 0x0);
        gbc.writeMem(0xdc9c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe996);
        EXPECT(gbc.pc(), 0xdc9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc9c), 0xcb);
        EXPECT(gbc.readMem(0xdc9d), 0x62);
        // CB 62 0115
        gbc.setState(0x4656, 0xb2ba, 0x3170, 0xd753, 0x49ca, 0x47b5, 0x0, 0x1);
        gbc.writeMem(0x4656, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb2ba);
        EXPECT(gbc.pc(), 0x4658);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0116
        gbc.setState(0xee8e, 0x4e3f, 0xc1a0, 0xe706, 0x5ecd, 0x4cd6, 0x1, 0x0);
        gbc.writeMem(0xee8e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4e3f);
        EXPECT(gbc.pc(), 0xee90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee8e), 0xcb);
        EXPECT(gbc.readMem(0xee8f), 0x62);
        // CB 62 0117
        gbc.setState(0xb478, 0x6335, 0x5980, 0x8a0d, 0xd1f2, 0x115c, 0x1, 0x1);
        gbc.writeMem(0xb478, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6335);
        EXPECT(gbc.pc(), 0xb47a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb478), 0xcb);
        EXPECT(gbc.readMem(0xb479), 0x62);
        // CB 62 0118
        gbc.setState(0x4f81, 0x5a, 0x7480, 0xba13, 0xe3b3, 0x30b0, 0x0, 0x1);
        gbc.writeMem(0x4f81, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x5a);
        EXPECT(gbc.pc(), 0x4f83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0119
        gbc.setState(0x68aa, 0x9aaa, 0x23c0, 0xa68e, 0xcdb, 0xcd2e, 0x1, 0x0);
        gbc.writeMem(0x68aa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x9aaa);
        EXPECT(gbc.pc(), 0x68ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 011A
        gbc.setState(0x940c, 0x486c, 0xe7d0, 0x3c23, 0x86ff, 0xbd31, 0x0, 0x1);
        gbc.writeMem(0x940c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x486c);
        EXPECT(gbc.pc(), 0x940e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x940c), 0xcb);
        EXPECT(gbc.readMem(0x940d), 0x62);
        // CB 62 011B
        gbc.setState(0x2c8c, 0xa4ad, 0x8e50, 0xfda8, 0x180a, 0x7c9, 0x0, 0x0);
        gbc.writeMem(0x2c8c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa4ad);
        EXPECT(gbc.pc(), 0x2c8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 011C
        gbc.setState(0x2e5b, 0xd4f1, 0x6bc0, 0xfaa4, 0x54b1, 0x6414, 0x0, 0x1);
        gbc.writeMem(0x2e5b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd4f1);
        EXPECT(gbc.pc(), 0x2e5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 011D
        gbc.setState(0xe077, 0x29f3, 0xd0a0, 0xdc7f, 0x1950, 0x57d1, 0x0, 0x1);
        gbc.writeMem(0xe077, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x29f3);
        EXPECT(gbc.pc(), 0xe079);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe077), 0xcb);
        EXPECT(gbc.readMem(0xe078), 0x62);
        // CB 62 011E
        gbc.setState(0xd207, 0xc41, 0x6ca0, 0x7f7b, 0xb993, 0xd97e, 0x1, 0x1);
        gbc.writeMem(0xd207, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc41);
        EXPECT(gbc.pc(), 0xd209);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd207), 0xcb);
        EXPECT(gbc.readMem(0xd208), 0x62);
        // CB 62 011F
        gbc.setState(0x185e, 0x14d, 0xfbf0, 0x5803, 0xcb05, 0x77bf, 0x0, 0x0);
        gbc.writeMem(0x185e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x14d);
        EXPECT(gbc.pc(), 0x1860);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0120
        gbc.setState(0xde78, 0xe856, 0x4c0, 0x27ad, 0xe7d8, 0xbea0, 0x1, 0x0);
        gbc.writeMem(0xde78, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe856);
        EXPECT(gbc.pc(), 0xde7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde78), 0xcb);
        EXPECT(gbc.readMem(0xde79), 0x62);
        // CB 62 0121
        gbc.setState(0x5928, 0x6c12, 0xe940, 0x9f1c, 0x93c5, 0xd44c, 0x1, 0x1);
        gbc.writeMem(0x5928, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x6c12);
        EXPECT(gbc.pc(), 0x592a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0122
        gbc.setState(0xc1c0, 0x44b9, 0x5ae0, 0x2caf, 0xa8d7, 0x6fb2, 0x0, 0x0);
        gbc.writeMem(0xc1c0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x44b9);
        EXPECT(gbc.pc(), 0xc1c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1c0), 0xcb);
        EXPECT(gbc.readMem(0xc1c1), 0x62);
        // CB 62 0123
        gbc.setState(0x1ff, 0xdc4f, 0x8320, 0x6e49, 0x8189, 0xa984, 0x0, 0x0);
        gbc.writeMem(0x1ff, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xdc4f);
        EXPECT(gbc.pc(), 0x201);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0124
        gbc.setState(0x2ba5, 0x35e0, 0x9140, 0xb93d, 0xea18, 0x333f, 0x1, 0x1);
        gbc.writeMem(0x2ba5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x35e0);
        EXPECT(gbc.pc(), 0x2ba7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0125
        gbc.setState(0xbf55, 0x506, 0xb280, 0x60bf, 0x832a, 0x11f6, 0x1, 0x1);
        gbc.writeMem(0xbf55, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x506);
        EXPECT(gbc.pc(), 0xbf57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf55), 0xcb);
        EXPECT(gbc.readMem(0xbf56), 0x62);
        // CB 62 0126
        gbc.setState(0xd8db, 0xa3e4, 0xc670, 0xe49d, 0xdd5d, 0xc930, 0x1, 0x0);
        gbc.writeMem(0xd8db, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xa3e4);
        EXPECT(gbc.pc(), 0xd8dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8db), 0xcb);
        EXPECT(gbc.readMem(0xd8dc), 0x62);
        // CB 62 0127
        gbc.setState(0x4a9f, 0x8693, 0xf9e0, 0xf92c, 0x9d73, 0xb2d5, 0x0, 0x0);
        gbc.writeMem(0x4a9f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x8693);
        EXPECT(gbc.pc(), 0x4aa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0128
        gbc.setState(0x63b, 0x6842, 0xb790, 0x2c42, 0x7e61, 0xe954, 0x0, 0x1);
        gbc.writeMem(0x63b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6842);
        EXPECT(gbc.pc(), 0x63d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0129
        gbc.setState(0x10d2, 0x213, 0xd100, 0x77e, 0xbf32, 0x4a1e, 0x1, 0x0);
        gbc.writeMem(0x10d2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x213);
        EXPECT(gbc.pc(), 0x10d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 012A
        gbc.setState(0xbaaa, 0x567, 0x5470, 0xc0bb, 0x8c04, 0x6b30, 0x1, 0x0);
        gbc.writeMem(0xbaaa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x567);
        EXPECT(gbc.pc(), 0xbaac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaaa), 0xcb);
        EXPECT(gbc.readMem(0xbaab), 0x62);
        // CB 62 012B
        gbc.setState(0xe80a, 0x9d6f, 0x96c0, 0xb024, 0xba97, 0x1631, 0x0, 0x1);
        gbc.writeMem(0xe80a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9d6f);
        EXPECT(gbc.pc(), 0xe80c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe80a), 0xcb);
        EXPECT(gbc.readMem(0xe80b), 0x62);
        // CB 62 012C
        gbc.setState(0xd6cc, 0x21e5, 0x15e0, 0x3acf, 0x38cf, 0xf825, 0x1, 0x1);
        gbc.writeMem(0xd6cc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x21e5);
        EXPECT(gbc.pc(), 0xd6ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6cc), 0xcb);
        EXPECT(gbc.readMem(0xd6cd), 0x62);
        // CB 62 012D
        gbc.setState(0x6a27, 0x5964, 0xe710, 0xd1c6, 0xc10c, 0x11cd, 0x0, 0x1);
        gbc.writeMem(0x6a27, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x5964);
        EXPECT(gbc.pc(), 0x6a29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 012E
        gbc.setState(0xa110, 0x1743, 0x7d40, 0xfced, 0xf0e1, 0x2a4c, 0x1, 0x1);
        gbc.writeMem(0xa110, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1743);
        EXPECT(gbc.pc(), 0xa112);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa110), 0xcb);
        EXPECT(gbc.readMem(0xa111), 0x62);
        // CB 62 012F
        gbc.setState(0x6aac, 0xbccf, 0xc200, 0x5f45, 0x6d42, 0x69cd, 0x1, 0x1);
        gbc.writeMem(0x6aac, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xbccf);
        EXPECT(gbc.pc(), 0x6aae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0130
        gbc.setState(0x9922, 0x5775, 0xf800, 0x8625, 0x117b, 0xb7d2, 0x1, 0x1);
        gbc.writeMem(0x9922, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5775);
        EXPECT(gbc.pc(), 0x9924);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9922), 0xcb);
        EXPECT(gbc.readMem(0x9923), 0x62);
        // CB 62 0131
        gbc.setState(0xa0c9, 0x2d78, 0xd9c0, 0x1b5b, 0xe8bc, 0xcd60, 0x0, 0x0);
        gbc.writeMem(0xa0c9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2d78);
        EXPECT(gbc.pc(), 0xa0cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0c9), 0xcb);
        EXPECT(gbc.readMem(0xa0ca), 0x62);
        // CB 62 0132
        gbc.setState(0x3563, 0x5bf8, 0x94e0, 0xa34d, 0x8998, 0x9447, 0x1, 0x1);
        gbc.writeMem(0x3563, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x5bf8);
        EXPECT(gbc.pc(), 0x3565);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0133
        gbc.setState(0xd521, 0x355c, 0x5bf0, 0xfe52, 0xa6ea, 0x5af7, 0x0, 0x0);
        gbc.writeMem(0xd521, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x355c);
        EXPECT(gbc.pc(), 0xd523);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd521), 0xcb);
        EXPECT(gbc.readMem(0xd522), 0x62);
        // CB 62 0134
        gbc.setState(0xe96c, 0x349a, 0x48e0, 0xb176, 0xd5b7, 0x1c5f, 0x1, 0x0);
        gbc.writeMem(0xe96c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x349a);
        EXPECT(gbc.pc(), 0xe96e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe96c), 0xcb);
        EXPECT(gbc.readMem(0xe96d), 0x62);
        // CB 62 0135
        gbc.setState(0xaeb8, 0x9c70, 0x4950, 0x741e, 0xaa82, 0x369d, 0x0, 0x1);
        gbc.writeMem(0xaeb8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x9c70);
        EXPECT(gbc.pc(), 0xaeba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeb8), 0xcb);
        EXPECT(gbc.readMem(0xaeb9), 0x62);
        // CB 62 0136
        gbc.setState(0xa2c, 0xa920, 0xa350, 0xdd75, 0x244b, 0x11fa, 0x0, 0x1);
        gbc.writeMem(0xa2c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa920);
        EXPECT(gbc.pc(), 0xa2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0137
        gbc.setState(0x9783, 0x18b2, 0xbd30, 0x6dba, 0xe8e9, 0x496c, 0x0, 0x1);
        gbc.writeMem(0x9783, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x18b2);
        EXPECT(gbc.pc(), 0x9785);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9783), 0xcb);
        EXPECT(gbc.readMem(0x9784), 0x62);
        // CB 62 0138
        gbc.setState(0x29ce, 0xd863, 0x76b0, 0x68d8, 0x73c7, 0x940e, 0x0, 0x0);
        gbc.writeMem(0x29ce, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd863);
        EXPECT(gbc.pc(), 0x29d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0139
        gbc.setState(0x4e83, 0x91de, 0x91e0, 0xccdf, 0xd8e0, 0x24e0, 0x1, 0x0);
        gbc.writeMem(0x4e83, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x91de);
        EXPECT(gbc.pc(), 0x4e85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 013A
        gbc.setState(0xd427, 0x1b56, 0x60d0, 0x4bbd, 0x45e8, 0x4b03, 0x0, 0x1);
        gbc.writeMem(0xd427, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1b56);
        EXPECT(gbc.pc(), 0xd429);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd427), 0xcb);
        EXPECT(gbc.readMem(0xd428), 0x62);
        // CB 62 013B
        gbc.setState(0x3ec1, 0x3bc2, 0x66d0, 0xc002, 0xf882, 0x30b1, 0x0, 0x1);
        gbc.writeMem(0x3ec1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x3bc2);
        EXPECT(gbc.pc(), 0x3ec3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 013C
        gbc.setState(0xe0eb, 0xd71c, 0xebe0, 0x9c72, 0xd2d1, 0x8e45, 0x1, 0x0);
        gbc.writeMem(0xe0eb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd71c);
        EXPECT(gbc.pc(), 0xe0ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0eb), 0xcb);
        EXPECT(gbc.readMem(0xe0ec), 0x62);
        // CB 62 013D
        gbc.setState(0xc828, 0x20a9, 0x9190, 0x5559, 0x2d67, 0xb127, 0x1, 0x0);
        gbc.writeMem(0xc828, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x20a9);
        EXPECT(gbc.pc(), 0xc82a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc828), 0xcb);
        EXPECT(gbc.readMem(0xc829), 0x62);
        // CB 62 013E
        gbc.setState(0x9390, 0xbb47, 0x7ff0, 0x6b44, 0xe936, 0xed62, 0x0, 0x0);
        gbc.writeMem(0x9390, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xbb47);
        EXPECT(gbc.pc(), 0x9392);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9390), 0xcb);
        EXPECT(gbc.readMem(0x9391), 0x62);
        // CB 62 013F
        gbc.setState(0xd405, 0x3f12, 0xed00, 0xddaf, 0x5b76, 0xedf6, 0x0, 0x0);
        gbc.writeMem(0xd405, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x3f12);
        EXPECT(gbc.pc(), 0xd407);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd405), 0xcb);
        EXPECT(gbc.readMem(0xd406), 0x62);
        // CB 62 0140
        gbc.setState(0xd02e, 0x2ea1, 0x5080, 0xd04c, 0xbf74, 0xb5e8, 0x0, 0x0);
        gbc.writeMem(0xd02e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x2ea1);
        EXPECT(gbc.pc(), 0xd030);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd02e), 0xcb);
        EXPECT(gbc.readMem(0xd02f), 0x62);
        // CB 62 0141
        gbc.setState(0x276a, 0x34d9, 0xe750, 0x17d2, 0xb65b, 0x85cc, 0x0, 0x0);
        gbc.writeMem(0x276a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x34d9);
        EXPECT(gbc.pc(), 0x276c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0142
        gbc.setState(0x4277, 0xdfb0, 0xfac0, 0xb2cb, 0x46f5, 0x46d1, 0x0, 0x0);
        gbc.writeMem(0x4277, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xdfb0);
        EXPECT(gbc.pc(), 0x4279);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0143
        gbc.setState(0x1da2, 0xc03e, 0x5d50, 0xa4c8, 0x9d19, 0x1432, 0x1, 0x1);
        gbc.writeMem(0x1da2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc03e);
        EXPECT(gbc.pc(), 0x1da4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0144
        gbc.setState(0x5133, 0x5fdb, 0x880, 0xc950, 0xc0d, 0x54cc, 0x1, 0x0);
        gbc.writeMem(0x5133, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x5fdb);
        EXPECT(gbc.pc(), 0x5135);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0145
        gbc.setState(0x78d1, 0x967, 0xd1f0, 0xe5e3, 0xe980, 0x3441, 0x1, 0x0);
        gbc.writeMem(0x78d1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x967);
        EXPECT(gbc.pc(), 0x78d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0146
        gbc.setState(0x727c, 0x7a06, 0xb50, 0x603, 0x356d, 0x7e71, 0x0, 0x0);
        gbc.writeMem(0x727c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7a06);
        EXPECT(gbc.pc(), 0x727e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0147
        gbc.setState(0xafb, 0x8393, 0x8950, 0x351b, 0xa5f2, 0x15e3, 0x0, 0x1);
        gbc.writeMem(0xafb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8393);
        EXPECT(gbc.pc(), 0xafd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0148
        gbc.setState(0xbc7c, 0x863c, 0x4320, 0xa7d0, 0x78ab, 0x55a5, 0x0, 0x0);
        gbc.writeMem(0xbc7c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x863c);
        EXPECT(gbc.pc(), 0xbc7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc7c), 0xcb);
        EXPECT(gbc.readMem(0xbc7d), 0x62);
        // CB 62 0149
        gbc.setState(0xd0dc, 0x94a2, 0x7920, 0x939a, 0xd593, 0x4964, 0x1, 0x1);
        gbc.writeMem(0xd0dc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x94a2);
        EXPECT(gbc.pc(), 0xd0de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0dc), 0xcb);
        EXPECT(gbc.readMem(0xd0dd), 0x62);
        // CB 62 014A
        gbc.setState(0x3e6b, 0xd04c, 0xdd0, 0xee2a, 0x7418, 0x7ac9, 0x0, 0x1);
        gbc.writeMem(0x3e6b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd04c);
        EXPECT(gbc.pc(), 0x3e6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 014B
        gbc.setState(0xaed3, 0x473a, 0x7b70, 0xe124, 0xbcb6, 0x81de, 0x1, 0x1);
        gbc.writeMem(0xaed3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x473a);
        EXPECT(gbc.pc(), 0xaed5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaed3), 0xcb);
        EXPECT(gbc.readMem(0xaed4), 0x62);
        // CB 62 014C
        gbc.setState(0xebc8, 0xe5d0, 0xec80, 0x9e99, 0xe75e, 0xf9df, 0x1, 0x1);
        gbc.writeMem(0xebc8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe5d0);
        EXPECT(gbc.pc(), 0xebca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebc8), 0xcb);
        EXPECT(gbc.readMem(0xebc9), 0x62);
        // CB 62 014E
        gbc.setState(0x1cbe, 0xfbfe, 0x2e90, 0x23e4, 0xb617, 0xf5b5, 0x0, 0x0);
        gbc.writeMem(0x1cbe, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xfbfe);
        EXPECT(gbc.pc(), 0x1cc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 014F
        gbc.setState(0xe264, 0xd19f, 0x4790, 0xf562, 0xbde6, 0x96e4, 0x1, 0x1);
        gbc.writeMem(0xe264, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd19f);
        EXPECT(gbc.pc(), 0xe266);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe264), 0xcb);
        EXPECT(gbc.readMem(0xe265), 0x62);
        // CB 62 0150
        gbc.setState(0x42d9, 0x345b, 0x7650, 0x3a23, 0xc9a9, 0xceef, 0x1, 0x0);
        gbc.writeMem(0x42d9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x345b);
        EXPECT(gbc.pc(), 0x42db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0151
        gbc.setState(0x1c64, 0xd868, 0x1170, 0xbf1d, 0x7de2, 0xa621, 0x1, 0x1);
        gbc.writeMem(0x1c64, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd868);
        EXPECT(gbc.pc(), 0x1c66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0152
        gbc.setState(0x6015, 0xc5b6, 0x9cf0, 0xf898, 0xcd4c, 0x435b, 0x1, 0x0);
        gbc.writeMem(0x6015, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc5b6);
        EXPECT(gbc.pc(), 0x6017);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0153
        gbc.setState(0x27fc, 0x7c83, 0x1bd0, 0x77b2, 0x69e4, 0xb03a, 0x0, 0x1);
        gbc.writeMem(0x27fc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7c83);
        EXPECT(gbc.pc(), 0x27fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0154
        gbc.setState(0x1a67, 0xf9a0, 0x3350, 0x225f, 0xbd3f, 0x12d, 0x0, 0x1);
        gbc.writeMem(0x1a67, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xf9a0);
        EXPECT(gbc.pc(), 0x1a69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0155
        gbc.setState(0xbbe6, 0xd395, 0x36d0, 0xaef9, 0xa217, 0x3556, 0x0, 0x0);
        gbc.writeMem(0xbbe6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd395);
        EXPECT(gbc.pc(), 0xbbe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbe6), 0xcb);
        EXPECT(gbc.readMem(0xbbe7), 0x62);
        // CB 62 0156
        gbc.setState(0x422d, 0x7934, 0x99e0, 0xf30b, 0x2407, 0xe34, 0x1, 0x0);
        gbc.writeMem(0x422d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x7934);
        EXPECT(gbc.pc(), 0x422f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0157
        gbc.setState(0xb232, 0xc413, 0x1f30, 0x46f3, 0xd2db, 0xe2d7, 0x0, 0x1);
        gbc.writeMem(0xb232, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc413);
        EXPECT(gbc.pc(), 0xb234);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb232), 0xcb);
        EXPECT(gbc.readMem(0xb233), 0x62);
        // CB 62 0158
        gbc.setState(0x2c8, 0x14b2, 0xea10, 0x84e8, 0xf402, 0x7a10, 0x0, 0x1);
        gbc.writeMem(0x2c8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x14b2);
        EXPECT(gbc.pc(), 0x2ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0159
        gbc.setState(0x31ef, 0x9818, 0x7f40, 0x4270, 0xa79c, 0xec72, 0x1, 0x1);
        gbc.writeMem(0x31ef, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9818);
        EXPECT(gbc.pc(), 0x31f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 015A
        gbc.setState(0xea98, 0x6631, 0x8b10, 0xec84, 0x788, 0x2b26, 0x0, 0x0);
        gbc.writeMem(0xea98, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x6631);
        EXPECT(gbc.pc(), 0xea9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea98), 0xcb);
        EXPECT(gbc.readMem(0xea99), 0x62);
        // CB 62 015B
        gbc.setState(0x72cb, 0x332e, 0x1370, 0xcb01, 0x3981, 0x2428, 0x1, 0x0);
        gbc.writeMem(0x72cb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x332e);
        EXPECT(gbc.pc(), 0x72cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 015C
        gbc.setState(0x333b, 0xd99, 0x39f0, 0x6a3f, 0xf248, 0x95bc, 0x0, 0x1);
        gbc.writeMem(0x333b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xd99);
        EXPECT(gbc.pc(), 0x333d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 015D
        gbc.setState(0xcc9a, 0x5e4c, 0xe430, 0xebc9, 0xbb2f, 0xabea, 0x0, 0x1);
        gbc.writeMem(0xcc9a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x5e4c);
        EXPECT(gbc.pc(), 0xcc9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc9a), 0xcb);
        EXPECT(gbc.readMem(0xcc9b), 0x62);
        // CB 62 015E
        gbc.setState(0x20a6, 0x6510, 0xdff0, 0x14be, 0xc892, 0xc030, 0x0, 0x0);
        gbc.writeMem(0x20a6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x6510);
        EXPECT(gbc.pc(), 0x20a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 015F
        gbc.setState(0x307a, 0x4f55, 0x14a0, 0xb188, 0xa312, 0x2e3, 0x0, 0x1);
        gbc.writeMem(0x307a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4f55);
        EXPECT(gbc.pc(), 0x307c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0160
        gbc.setState(0x91c0, 0xedcc, 0x6110, 0xa8fa, 0x43aa, 0x4fb3, 0x0, 0x0);
        gbc.writeMem(0x91c0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xedcc);
        EXPECT(gbc.pc(), 0x91c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91c0), 0xcb);
        EXPECT(gbc.readMem(0x91c1), 0x62);
        // CB 62 0161
        gbc.setState(0x94d5, 0x2211, 0xb380, 0x9a12, 0x3c70, 0xf70d, 0x1, 0x1);
        gbc.writeMem(0x94d5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2211);
        EXPECT(gbc.pc(), 0x94d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94d5), 0xcb);
        EXPECT(gbc.readMem(0x94d6), 0x62);
        // CB 62 0162
        gbc.setState(0x7b1d, 0x3ced, 0xea10, 0xa30, 0xbdcd, 0xe739, 0x0, 0x1);
        gbc.writeMem(0x7b1d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3ced);
        EXPECT(gbc.pc(), 0x7b1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0163
        gbc.setState(0x6db6, 0x76ac, 0x3040, 0xd005, 0x30b, 0x8342, 0x1, 0x0);
        gbc.writeMem(0x6db6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x76ac);
        EXPECT(gbc.pc(), 0x6db8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0165
        gbc.setState(0xe900, 0xfe49, 0x9f30, 0xf83f, 0xf0be, 0x5b17, 0x0, 0x1);
        gbc.writeMem(0xe900, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xfe49);
        EXPECT(gbc.pc(), 0xe902);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe900), 0xcb);
        EXPECT(gbc.readMem(0xe901), 0x62);
        // CB 62 0166
        gbc.setState(0x6068, 0xa1b6, 0xcad0, 0xb119, 0x20a5, 0xab6, 0x1, 0x1);
        gbc.writeMem(0x6068, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa1b6);
        EXPECT(gbc.pc(), 0x606a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0167
        gbc.setState(0x96e0, 0xcb75, 0x5c30, 0xbe36, 0x746, 0xc328, 0x1, 0x0);
        gbc.writeMem(0x96e0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xcb75);
        EXPECT(gbc.pc(), 0x96e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96e0), 0xcb);
        EXPECT(gbc.readMem(0x96e1), 0x62);
        // CB 62 0168
        gbc.setState(0xf44, 0xee15, 0x4b00, 0xc5c4, 0x420c, 0xe784, 0x1, 0x0);
        gbc.writeMem(0xf44, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xee15);
        EXPECT(gbc.pc(), 0xf46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0169
        gbc.setState(0x2dc9, 0xdcfa, 0x91a0, 0xb69d, 0xc1be, 0x8f59, 0x1, 0x0);
        gbc.writeMem(0x2dc9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xdcfa);
        EXPECT(gbc.pc(), 0x2dcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 016A
        gbc.setState(0xb467, 0x9d40, 0xb8d0, 0x4712, 0x7dc5, 0x82b2, 0x0, 0x0);
        gbc.writeMem(0xb467, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x9d40);
        EXPECT(gbc.pc(), 0xb469);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb467), 0xcb);
        EXPECT(gbc.readMem(0xb468), 0x62);
        // CB 62 016B
        gbc.setState(0x6b3b, 0xc1be, 0xede0, 0xb6de, 0x8aff, 0xc967, 0x0, 0x1);
        gbc.writeMem(0x6b3b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc1be);
        EXPECT(gbc.pc(), 0x6b3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 016C
        gbc.setState(0xb7d0, 0x1090, 0x650, 0x4028, 0x4c7b, 0x90fe, 0x0, 0x1);
        gbc.writeMem(0xb7d0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x1090);
        EXPECT(gbc.pc(), 0xb7d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7d0), 0xcb);
        EXPECT(gbc.readMem(0xb7d1), 0x62);
        // CB 62 016D
        gbc.setState(0xadad, 0x7a4b, 0x5c60, 0xb0b2, 0xe5e3, 0x970f, 0x0, 0x1);
        gbc.writeMem(0xadad, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7a4b);
        EXPECT(gbc.pc(), 0xadaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadad), 0xcb);
        EXPECT(gbc.readMem(0xadae), 0x62);
        // CB 62 016E
        gbc.setState(0x48af, 0xd130, 0x2ab0, 0x94e9, 0xf89b, 0xc1fc, 0x1, 0x1);
        gbc.writeMem(0x48af, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd130);
        EXPECT(gbc.pc(), 0x48b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0170
        gbc.setState(0xce44, 0x4c7, 0x5aa0, 0xae75, 0x207, 0xd3ee, 0x1, 0x1);
        gbc.writeMem(0xce44, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4c7);
        EXPECT(gbc.pc(), 0xce46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce44), 0xcb);
        EXPECT(gbc.readMem(0xce45), 0x62);
        // CB 62 0171
        gbc.setState(0x798d, 0x2abe, 0xdb0, 0xe935, 0x7c37, 0x9b88, 0x0, 0x1);
        gbc.writeMem(0x798d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2abe);
        EXPECT(gbc.pc(), 0x798f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0172
        gbc.setState(0xa96, 0xd2d9, 0xf9f0, 0x91a3, 0x8736, 0x5658, 0x0, 0x1);
        gbc.writeMem(0xa96, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xd2d9);
        EXPECT(gbc.pc(), 0xa98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0173
        gbc.setState(0x6d3d, 0xec13, 0xb480, 0x9fa0, 0xad5e, 0x3550, 0x1, 0x1);
        gbc.writeMem(0x6d3d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xec13);
        EXPECT(gbc.pc(), 0x6d3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0174
        gbc.setState(0xd686, 0xda4c, 0xb1a0, 0xc944, 0xf79c, 0x5f3d, 0x0, 0x0);
        gbc.writeMem(0xd686, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xda4c);
        EXPECT(gbc.pc(), 0xd688);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd686), 0xcb);
        EXPECT(gbc.readMem(0xd687), 0x62);
        // CB 62 0175
        gbc.setState(0xa13a, 0xebf7, 0x9120, 0x926c, 0x4e82, 0x6883, 0x0, 0x1);
        gbc.writeMem(0xa13a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xebf7);
        EXPECT(gbc.pc(), 0xa13c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa13a), 0xcb);
        EXPECT(gbc.readMem(0xa13b), 0x62);
        // CB 62 0176
        gbc.setState(0x3489, 0xf3b1, 0xe2c0, 0x5e65, 0x3048, 0x9372, 0x1, 0x1);
        gbc.writeMem(0x3489, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf3b1);
        EXPECT(gbc.pc(), 0x348b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0177
        gbc.setState(0xd751, 0x102e, 0x7230, 0x962f, 0x1256, 0xd96b, 0x0, 0x1);
        gbc.writeMem(0xd751, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x102e);
        EXPECT(gbc.pc(), 0xd753);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd751), 0xcb);
        EXPECT(gbc.readMem(0xd752), 0x62);
        // CB 62 0178
        gbc.setState(0x61a0, 0xc9c, 0x8d0, 0xc820, 0x2922, 0x6ae1, 0x1, 0x0);
        gbc.writeMem(0x61a0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc9c);
        EXPECT(gbc.pc(), 0x61a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0179
        gbc.setState(0xeafe, 0x398, 0xa2d0, 0xbf4f, 0x25ef, 0xb93b, 0x0, 0x1);
        gbc.writeMem(0xeafe, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x398);
        EXPECT(gbc.pc(), 0xeb00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeafe), 0xcb);
        EXPECT(gbc.readMem(0xeaff), 0x62);
        // CB 62 017A
        gbc.setState(0xe200, 0x2f84, 0xb10, 0x4684, 0x3f08, 0xe21c, 0x1, 0x1);
        gbc.writeMem(0xe200, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x2f84);
        EXPECT(gbc.pc(), 0xe202);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe200), 0xcb);
        EXPECT(gbc.readMem(0xe201), 0x62);
        // CB 62 017B
        gbc.setState(0x628c, 0x5723, 0xfa10, 0x4705, 0xb01, 0x25cf, 0x0, 0x0);
        gbc.writeMem(0x628c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x5723);
        EXPECT(gbc.pc(), 0x628e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 017C
        gbc.setState(0x435b, 0xacfb, 0x13d0, 0xf761, 0xb51e, 0x86e8, 0x0, 0x0);
        gbc.writeMem(0x435b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xacfb);
        EXPECT(gbc.pc(), 0x435d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 017D
        gbc.setState(0x7f43, 0x1503, 0xb900, 0xf524, 0x2d37, 0x244e, 0x0, 0x0);
        gbc.writeMem(0x7f43, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1503);
        EXPECT(gbc.pc(), 0x7f45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 017E
        gbc.setState(0xcd64, 0xff4a, 0x7f70, 0x7f42, 0x456a, 0xaed9, 0x0, 0x1);
        gbc.writeMem(0xcd64, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xff4a);
        EXPECT(gbc.pc(), 0xcd66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd64), 0xcb);
        EXPECT(gbc.readMem(0xcd65), 0x62);
        // CB 62 0180
        gbc.setState(0x5ca6, 0x6455, 0xc610, 0x8bca, 0xc805, 0x2d7f, 0x1, 0x0);
        gbc.writeMem(0x5ca6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x6455);
        EXPECT(gbc.pc(), 0x5ca8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0181
        gbc.setState(0x1c3e, 0x62c3, 0x7b50, 0x1d57, 0xafd3, 0xeb5c, 0x0, 0x1);
        gbc.writeMem(0x1c3e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x62c3);
        EXPECT(gbc.pc(), 0x1c40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0182
        gbc.setState(0x8692, 0x8e15, 0xa540, 0x9def, 0x6f0e, 0x507c, 0x0, 0x1);
        gbc.writeMem(0x8692, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8e15);
        EXPECT(gbc.pc(), 0x8694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8692), 0xcb);
        EXPECT(gbc.readMem(0x8693), 0x62);
        // CB 62 0183
        gbc.setState(0x29e3, 0x7877, 0x34b0, 0xe93f, 0x3e4e, 0x5b9e, 0x0, 0x0);
        gbc.writeMem(0x29e3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7877);
        EXPECT(gbc.pc(), 0x29e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0184
        gbc.setState(0x628b, 0x619c, 0xec0, 0x7a11, 0xadeb, 0x2dec, 0x1, 0x0);
        gbc.writeMem(0x628b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x619c);
        EXPECT(gbc.pc(), 0x628d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0185
        gbc.setState(0x9632, 0x390, 0x1a80, 0x4a95, 0xb6a0, 0x3b04, 0x0, 0x1);
        gbc.writeMem(0x9632, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x390);
        EXPECT(gbc.pc(), 0x9634);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9632), 0xcb);
        EXPECT(gbc.readMem(0x9633), 0x62);
        // CB 62 0186
        gbc.setState(0xc5c3, 0x147d, 0x9030, 0x59b4, 0x9192, 0xd617, 0x1, 0x0);
        gbc.writeMem(0xc5c3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x147d);
        EXPECT(gbc.pc(), 0xc5c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5c3), 0xcb);
        EXPECT(gbc.readMem(0xc5c4), 0x62);
        // CB 62 0187
        gbc.setState(0x8283, 0xe41d, 0xf280, 0xe210, 0x7433, 0x5fdc, 0x0, 0x1);
        gbc.writeMem(0x8283, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe41d);
        EXPECT(gbc.pc(), 0x8285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8283), 0xcb);
        EXPECT(gbc.readMem(0x8284), 0x62);
        // CB 62 0189
        gbc.setState(0x224, 0x624c, 0xd8f0, 0x4c81, 0x9321, 0x38bd, 0x0, 0x0);
        gbc.writeMem(0x224, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x624c);
        EXPECT(gbc.pc(), 0x226);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 018A
        gbc.setState(0x1a89, 0x98d8, 0x470, 0xc70, 0xb462, 0xc598, 0x0, 0x0);
        gbc.writeMem(0x1a89, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x98d8);
        EXPECT(gbc.pc(), 0x1a8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 018B
        gbc.setState(0xa8c8, 0xfe33, 0x84e0, 0x8d2d, 0xf973, 0x7e0c, 0x1, 0x0);
        gbc.writeMem(0xa8c8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xfe33);
        EXPECT(gbc.pc(), 0xa8ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8c8), 0xcb);
        EXPECT(gbc.readMem(0xa8c9), 0x62);
        // CB 62 018C
        gbc.setState(0xc486, 0x3739, 0x910, 0x4b32, 0x298, 0x4c4a, 0x0, 0x0);
        gbc.writeMem(0xc486, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3739);
        EXPECT(gbc.pc(), 0xc488);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc486), 0xcb);
        EXPECT(gbc.readMem(0xc487), 0x62);
        // CB 62 018D
        gbc.setState(0x3248, 0xd3ee, 0x9cf0, 0x8cfe, 0xfa00, 0xe7e9, 0x0, 0x0);
        gbc.writeMem(0x3248, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd3ee);
        EXPECT(gbc.pc(), 0x324a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 018E
        gbc.setState(0x637f, 0x6497, 0x9e40, 0x4c38, 0x5151, 0xdd3d, 0x0, 0x0);
        gbc.writeMem(0x637f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x6497);
        EXPECT(gbc.pc(), 0x6381);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 018F
        gbc.setState(0xe65d, 0x4491, 0x11e0, 0xdce9, 0xa0ec, 0xef3d, 0x0, 0x1);
        gbc.writeMem(0xe65d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4491);
        EXPECT(gbc.pc(), 0xe65f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe65d), 0xcb);
        EXPECT(gbc.readMem(0xe65e), 0x62);
        // CB 62 0190
        gbc.setState(0xd343, 0x99af, 0x8f90, 0x702, 0xb7a0, 0xb921, 0x0, 0x1);
        gbc.writeMem(0xd343, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x99af);
        EXPECT(gbc.pc(), 0xd345);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd343), 0xcb);
        EXPECT(gbc.readMem(0xd344), 0x62);
        // CB 62 0191
        gbc.setState(0x4708, 0x596f, 0x3a10, 0xe336, 0x9bdc, 0xdb59, 0x1, 0x1);
        gbc.writeMem(0x4708, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x596f);
        EXPECT(gbc.pc(), 0x470a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0192
        gbc.setState(0x8482, 0xb4e, 0x5c90, 0x9b47, 0xfcd1, 0x89d, 0x0, 0x1);
        gbc.writeMem(0x8482, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xb4e);
        EXPECT(gbc.pc(), 0x8484);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8482), 0xcb);
        EXPECT(gbc.readMem(0x8483), 0x62);
        // CB 62 0193
        gbc.setState(0xa307, 0x2ab5, 0x6250, 0x2e09, 0xc069, 0x6d0a, 0x1, 0x0);
        gbc.writeMem(0xa307, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x2ab5);
        EXPECT(gbc.pc(), 0xa309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa307), 0xcb);
        EXPECT(gbc.readMem(0xa308), 0x62);
        // CB 62 0194
        gbc.setState(0x22c2, 0xe556, 0x90c0, 0xf78a, 0x429d, 0x3bb5, 0x1, 0x0);
        gbc.writeMem(0x22c2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xe556);
        EXPECT(gbc.pc(), 0x22c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0195
        gbc.setState(0x8347, 0xa7c2, 0x78b0, 0x6747, 0x422b, 0x7434, 0x0, 0x1);
        gbc.writeMem(0x8347, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xa7c2);
        EXPECT(gbc.pc(), 0x8349);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8347), 0xcb);
        EXPECT(gbc.readMem(0x8348), 0x62);
        // CB 62 0197
        gbc.setState(0xac1d, 0x6fb6, 0x46d0, 0xbe54, 0xbef4, 0x68f7, 0x1, 0x1);
        gbc.writeMem(0xac1d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6fb6);
        EXPECT(gbc.pc(), 0xac1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac1d), 0xcb);
        EXPECT(gbc.readMem(0xac1e), 0x62);
        // CB 62 0198
        gbc.setState(0x4f46, 0xb401, 0xa0, 0xe0d, 0x5549, 0x5d11, 0x0, 0x0);
        gbc.writeMem(0x4f46, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb401);
        EXPECT(gbc.pc(), 0x4f48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 019A
        gbc.setState(0xe0aa, 0x3305, 0xc040, 0xecfa, 0x2bf6, 0x12ce, 0x1, 0x1);
        gbc.writeMem(0xe0aa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3305);
        EXPECT(gbc.pc(), 0xe0ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0aa), 0xcb);
        EXPECT(gbc.readMem(0xe0ab), 0x62);
        // CB 62 019B
        gbc.setState(0xa458, 0x57d9, 0x6210, 0x6634, 0xfcea, 0x8abc, 0x0, 0x1);
        gbc.writeMem(0xa458, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x57d9);
        EXPECT(gbc.pc(), 0xa45a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa458), 0xcb);
        EXPECT(gbc.readMem(0xa459), 0x62);
        // CB 62 019C
        gbc.setState(0x4a3b, 0xd7d7, 0x3a0, 0x907b, 0xb38b, 0x1b20, 0x0, 0x0);
        gbc.writeMem(0x4a3b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd7d7);
        EXPECT(gbc.pc(), 0x4a3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 019D
        gbc.setState(0xcbd, 0xe7f, 0x3f60, 0x17c3, 0xd48d, 0x6bed, 0x1, 0x0);
        gbc.writeMem(0xcbd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe7f);
        EXPECT(gbc.pc(), 0xcbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 019E
        gbc.setState(0xb410, 0x2930, 0x8590, 0xa3ce, 0x928a, 0x3e66, 0x1, 0x0);
        gbc.writeMem(0xb410, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x2930);
        EXPECT(gbc.pc(), 0xb412);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb410), 0xcb);
        EXPECT(gbc.readMem(0xb411), 0x62);
        // CB 62 019F
        gbc.setState(0xc8f, 0xbe53, 0x7320, 0xbee, 0xc3ff, 0xb350, 0x1, 0x0);
        gbc.writeMem(0xc8f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xbe53);
        EXPECT(gbc.pc(), 0xc91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01A0
        gbc.setState(0xa508, 0x4dc8, 0x1680, 0xf9bc, 0x333f, 0x494a, 0x1, 0x0);
        gbc.writeMem(0xa508, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x4dc8);
        EXPECT(gbc.pc(), 0xa50a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa508), 0xcb);
        EXPECT(gbc.readMem(0xa509), 0x62);
        // CB 62 01A1
        gbc.setState(0xa062, 0x151c, 0xe940, 0x9910, 0x2845, 0x9fc9, 0x1, 0x0);
        gbc.writeMem(0xa062, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x151c);
        EXPECT(gbc.pc(), 0xa064);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa062), 0xcb);
        EXPECT(gbc.readMem(0xa063), 0x62);
        // CB 62 01A2
        gbc.setState(0x425e, 0xb7e1, 0x4350, 0xc6e4, 0x8ca, 0x73f0, 0x1, 0x0);
        gbc.writeMem(0x425e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb7e1);
        EXPECT(gbc.pc(), 0x4260);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 01A3
        gbc.setState(0xc54c, 0xa62f, 0x1b20, 0xb112, 0x2116, 0x430d, 0x1, 0x1);
        gbc.writeMem(0xc54c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa62f);
        EXPECT(gbc.pc(), 0xc54e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc54c), 0xcb);
        EXPECT(gbc.readMem(0xc54d), 0x62);
        // CB 62 01A4
        gbc.setState(0x11dc, 0xa774, 0x31e0, 0x98f1, 0x9a54, 0xe056, 0x0, 0x1);
        gbc.writeMem(0x11dc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xa774);
        EXPECT(gbc.pc(), 0x11de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01A5
        gbc.setState(0x925e, 0x2fee, 0x3030, 0xcce8, 0xac98, 0xf315, 0x1, 0x1);
        gbc.writeMem(0x925e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x2fee);
        EXPECT(gbc.pc(), 0x9260);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x925e), 0xcb);
        EXPECT(gbc.readMem(0x925f), 0x62);
        // CB 62 01A6
        gbc.setState(0x84fc, 0xf136, 0x20b0, 0xe3c1, 0x5aa8, 0xe422, 0x1, 0x1);
        gbc.writeMem(0x84fc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xf136);
        EXPECT(gbc.pc(), 0x84fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84fc), 0xcb);
        EXPECT(gbc.readMem(0x84fd), 0x62);
        // CB 62 01A7
        gbc.setState(0xe3b, 0xef62, 0x5550, 0xf61e, 0x307b, 0x50a8, 0x1, 0x0);
        gbc.writeMem(0xe3b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xef62);
        EXPECT(gbc.pc(), 0xe3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 01A8
        gbc.setState(0xb805, 0xf291, 0x10b0, 0x755c, 0xec3c, 0x4232, 0x1, 0x0);
        gbc.writeMem(0xb805, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf291);
        EXPECT(gbc.pc(), 0xb807);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb805), 0xcb);
        EXPECT(gbc.readMem(0xb806), 0x62);
        // CB 62 01A9
        gbc.setState(0x93a, 0xd18d, 0x6340, 0xdbde, 0xb0e3, 0x7108, 0x0, 0x0);
        gbc.writeMem(0x93a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd18d);
        EXPECT(gbc.pc(), 0x93c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01AA
        gbc.setState(0x6e5d, 0x3f18, 0x5d50, 0x5735, 0xa40d, 0x373f, 0x1, 0x1);
        gbc.writeMem(0x6e5d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x3f18);
        EXPECT(gbc.pc(), 0x6e5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 01AB
        gbc.setState(0xe4f3, 0x1e65, 0x5770, 0x2a9a, 0x42a9, 0x7458, 0x1, 0x0);
        gbc.writeMem(0xe4f3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1e65);
        EXPECT(gbc.pc(), 0xe4f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4f3), 0xcb);
        EXPECT(gbc.readMem(0xe4f4), 0x62);
        // CB 62 01AC
        gbc.setState(0x3035, 0x3b7, 0x1dc0, 0x1533, 0xc6b, 0x9a10, 0x1, 0x0);
        gbc.writeMem(0x3035, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x3b7);
        EXPECT(gbc.pc(), 0x3037);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01AD
        gbc.setState(0x7325, 0x9523, 0x7f80, 0x2d73, 0x79ab, 0x65a9, 0x1, 0x0);
        gbc.writeMem(0x7325, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x9523);
        EXPECT(gbc.pc(), 0x7327);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01AE
        gbc.setState(0x2f84, 0xc4e6, 0xa7e0, 0x98cd, 0xd386, 0x83dd, 0x1, 0x1);
        gbc.writeMem(0x2f84, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc4e6);
        EXPECT(gbc.pc(), 0x2f86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01AF
        gbc.setState(0x9a4d, 0x85bf, 0x5260, 0xe4a6, 0xcf11, 0x4e5e, 0x1, 0x0);
        gbc.writeMem(0x9a4d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x85bf);
        EXPECT(gbc.pc(), 0x9a4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a4d), 0xcb);
        EXPECT(gbc.readMem(0x9a4e), 0x62);
        // CB 62 01B0
        gbc.setState(0xb634, 0x7d52, 0xa200, 0xecca, 0xd740, 0x4a28, 0x1, 0x1);
        gbc.writeMem(0xb634, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x7d52);
        EXPECT(gbc.pc(), 0xb636);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb634), 0xcb);
        EXPECT(gbc.readMem(0xb635), 0x62);
        // CB 62 01B1
        gbc.setState(0x6dac, 0x8aed, 0x5540, 0x49d7, 0x68ea, 0x69b6, 0x1, 0x0);
        gbc.writeMem(0x6dac, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x8aed);
        EXPECT(gbc.pc(), 0x6dae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01B2
        gbc.setState(0xcf5, 0x6887, 0x3000, 0x64ff, 0x8617, 0x7c37, 0x0, 0x0);
        gbc.writeMem(0xcf5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6887);
        EXPECT(gbc.pc(), 0xcf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01B3
        gbc.setState(0x8946, 0x8fd6, 0xd000, 0xaf19, 0x655e, 0x457, 0x0, 0x1);
        gbc.writeMem(0x8946, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x8fd6);
        EXPECT(gbc.pc(), 0x8948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8946), 0xcb);
        EXPECT(gbc.readMem(0x8947), 0x62);
        // CB 62 01B5
        gbc.setState(0x87c, 0x2ac9, 0xc1c0, 0xb650, 0x9e2b, 0x24ae, 0x0, 0x1);
        gbc.writeMem(0x87c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x2ac9);
        EXPECT(gbc.pc(), 0x87e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01B6
        gbc.setState(0x573f, 0x2c62, 0x6ff0, 0x8b, 0xdc2, 0x67dc, 0x1, 0x0);
        gbc.writeMem(0x573f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x2c62);
        EXPECT(gbc.pc(), 0x5741);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 01B7
        gbc.setState(0x864c, 0xc1e4, 0xc120, 0x848d, 0x66a6, 0x69f0, 0x1, 0x1);
        gbc.writeMem(0x864c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc1e4);
        EXPECT(gbc.pc(), 0x864e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x864c), 0xcb);
        EXPECT(gbc.readMem(0x864d), 0x62);
        // CB 62 01B8
        gbc.setState(0x6970, 0x7187, 0xb6d0, 0x9f88, 0x7015, 0xd5f2, 0x0, 0x0);
        gbc.writeMem(0x6970, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x7187);
        EXPECT(gbc.pc(), 0x6972);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 01B9
        gbc.setState(0x57a7, 0xac68, 0x17e0, 0x272e, 0xdf2b, 0x2620, 0x0, 0x1);
        gbc.writeMem(0x57a7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xac68);
        EXPECT(gbc.pc(), 0x57a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01BA
        gbc.setState(0x6585, 0xdca4, 0x6fd0, 0xe1b0, 0xa2a0, 0xe442, 0x0, 0x1);
        gbc.writeMem(0x6585, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xdca4);
        EXPECT(gbc.pc(), 0x6587);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 01BC
        gbc.setState(0x1469, 0x22bc, 0x2f0, 0xb01a, 0x2df5, 0x7557, 0x1, 0x0);
        gbc.writeMem(0x1469, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x22bc);
        EXPECT(gbc.pc(), 0x146b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 01BE
        gbc.setState(0xb932, 0xe92a, 0xf870, 0x232, 0xf5b2, 0x2d4d, 0x0, 0x1);
        gbc.writeMem(0xb932, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe92a);
        EXPECT(gbc.pc(), 0xb934);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb932), 0xcb);
        EXPECT(gbc.readMem(0xb933), 0x62);
        // CB 62 01BF
        gbc.setState(0x3a2, 0x441a, 0x76b0, 0x9fc5, 0x4dc6, 0x1eb9, 0x1, 0x1);
        gbc.writeMem(0x3a2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x441a);
        EXPECT(gbc.pc(), 0x3a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 01C0
        gbc.setState(0xc75, 0x5bb1, 0xaf10, 0x15b7, 0xdf03, 0x28d, 0x1, 0x1);
        gbc.writeMem(0xc75, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5bb1);
        EXPECT(gbc.pc(), 0xc77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 01C1
        gbc.setState(0x8fbf, 0xc39b, 0xc330, 0x73c4, 0x733e, 0x729, 0x0, 0x1);
        gbc.writeMem(0x8fbf, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc39b);
        EXPECT(gbc.pc(), 0x8fc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fbf), 0xcb);
        EXPECT(gbc.readMem(0x8fc0), 0x62);
        // CB 62 01C2
        gbc.setState(0xaeaf, 0x1c3e, 0x4a80, 0x4101, 0x3da5, 0x83fb, 0x1, 0x0);
        gbc.writeMem(0xaeaf, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1c3e);
        EXPECT(gbc.pc(), 0xaeb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeaf), 0xcb);
        EXPECT(gbc.readMem(0xaeb0), 0x62);
        // CB 62 01C3
        gbc.setState(0x4e04, 0xa51b, 0x75d0, 0x29ea, 0x1a8c, 0x3a6a, 0x1, 0x0);
        gbc.writeMem(0x4e04, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa51b);
        EXPECT(gbc.pc(), 0x4e06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 01C4
        gbc.setState(0x4d9f, 0x9b2a, 0xbd70, 0x5629, 0xb0f0, 0xea4c, 0x0, 0x1);
        gbc.writeMem(0x4d9f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9b2a);
        EXPECT(gbc.pc(), 0x4da1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 01C5
        gbc.setState(0xc464, 0x9a58, 0x3c00, 0xb2c1, 0xc7e9, 0x2b58, 0x1, 0x0);
        gbc.writeMem(0xc464, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9a58);
        EXPECT(gbc.pc(), 0xc466);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc464), 0xcb);
        EXPECT(gbc.readMem(0xc465), 0x62);
        // CB 62 01C6
        gbc.setState(0xcf63, 0x4009, 0x6a30, 0xe78a, 0xaf55, 0x9c9b, 0x1, 0x0);
        gbc.writeMem(0xcf63, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4009);
        EXPECT(gbc.pc(), 0xcf65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf63), 0xcb);
        EXPECT(gbc.readMem(0xcf64), 0x62);
        // CB 62 01C7
        gbc.setState(0xca50, 0xed78, 0xf270, 0x789c, 0xc1e7, 0x4c05, 0x1, 0x1);
        gbc.writeMem(0xca50, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xed78);
        EXPECT(gbc.pc(), 0xca52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca50), 0xcb);
        EXPECT(gbc.readMem(0xca51), 0x62);
        // CB 62 01C8
        gbc.setState(0x86aa, 0x94d7, 0x800, 0xd996, 0xee83, 0x8b1f, 0x1, 0x0);
        gbc.writeMem(0x86aa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x94d7);
        EXPECT(gbc.pc(), 0x86ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86aa), 0xcb);
        EXPECT(gbc.readMem(0x86ab), 0x62);
        // CB 62 01C9
        gbc.setState(0xb94e, 0xe947, 0xf6a0, 0x3e5a, 0xd311, 0x22e9, 0x1, 0x0);
        gbc.writeMem(0xb94e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe947);
        EXPECT(gbc.pc(), 0xb950);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb94e), 0xcb);
        EXPECT(gbc.readMem(0xb94f), 0x62);
        // CB 62 01CA
        gbc.setState(0x9dac, 0xf28a, 0x2e60, 0x49c3, 0xccd, 0x36f4, 0x1, 0x0);
        gbc.writeMem(0x9dac, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xf28a);
        EXPECT(gbc.pc(), 0x9dae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dac), 0xcb);
        EXPECT(gbc.readMem(0x9dad), 0x62);
        // CB 62 01CB
        gbc.setState(0x6854, 0xcde1, 0x8e40, 0x1332, 0x383e, 0x4cc3, 0x1, 0x1);
        gbc.writeMem(0x6854, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xcde1);
        EXPECT(gbc.pc(), 0x6856);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01CC
        gbc.setState(0x7691, 0xc005, 0x1030, 0xae5c, 0x653f, 0xa0d6, 0x0, 0x0);
        gbc.writeMem(0x7691, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc005);
        EXPECT(gbc.pc(), 0x7693);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 01CD
        gbc.setState(0x369d, 0x742, 0x8f40, 0x2702, 0xb374, 0x298e, 0x0, 0x0);
        gbc.writeMem(0x369d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x742);
        EXPECT(gbc.pc(), 0x369f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01CE
        gbc.setState(0xcfcb, 0xe80f, 0xda10, 0x5eca, 0x7441, 0x5c49, 0x1, 0x0);
        gbc.writeMem(0xcfcb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe80f);
        EXPECT(gbc.pc(), 0xcfcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfcb), 0xcb);
        EXPECT(gbc.readMem(0xcfcc), 0x62);
        // CB 62 01D0
        gbc.setState(0x43db, 0x7a64, 0x4de0, 0xfc29, 0x596e, 0x6b52, 0x0, 0x1);
        gbc.writeMem(0x43db, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x7a64);
        EXPECT(gbc.pc(), 0x43dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01D1
        gbc.setState(0x9adc, 0xb9ab, 0xf610, 0xb7ad, 0x1f6c, 0xe484, 0x1, 0x1);
        gbc.writeMem(0x9adc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb9ab);
        EXPECT(gbc.pc(), 0x9ade);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9adc), 0xcb);
        EXPECT(gbc.readMem(0x9add), 0x62);
        // CB 62 01D2
        gbc.setState(0xe9d2, 0x4e9b, 0xae20, 0xf416, 0x29d8, 0x1445, 0x1, 0x0);
        gbc.writeMem(0xe9d2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x4e9b);
        EXPECT(gbc.pc(), 0xe9d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9d2), 0xcb);
        EXPECT(gbc.readMem(0xe9d3), 0x62);
        // CB 62 01D3
        gbc.setState(0x3ef6, 0x5a7d, 0x900, 0x3c65, 0x5189, 0x16ea, 0x1, 0x0);
        gbc.writeMem(0x3ef6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x5a7d);
        EXPECT(gbc.pc(), 0x3ef8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01D4
        gbc.setState(0x64a, 0xfe50, 0x43d0, 0x8cb2, 0x3404, 0x87e1, 0x1, 0x1);
        gbc.writeMem(0x64a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xfe50);
        EXPECT(gbc.pc(), 0x64c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 01D5
        gbc.setState(0xce9, 0x1a95, 0x7b20, 0xbebc, 0x4032, 0x4cb3, 0x0, 0x1);
        gbc.writeMem(0xce9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x1a95);
        EXPECT(gbc.pc(), 0xceb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01D6
        gbc.setState(0x136e, 0x9b19, 0x9500, 0xce28, 0x6a68, 0x6d4a, 0x1, 0x0);
        gbc.writeMem(0x136e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9b19);
        EXPECT(gbc.pc(), 0x1370);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01D7
        gbc.setState(0x6c59, 0xc63a, 0x6700, 0xab85, 0x8776, 0xab77, 0x0, 0x0);
        gbc.writeMem(0x6c59, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc63a);
        EXPECT(gbc.pc(), 0x6c5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01D8
        gbc.setState(0xceaa, 0x2c1, 0xd5d0, 0xb65c, 0xff9a, 0x5e92, 0x0, 0x1);
        gbc.writeMem(0xceaa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2c1);
        EXPECT(gbc.pc(), 0xceac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceaa), 0xcb);
        EXPECT(gbc.readMem(0xceab), 0x62);
        // CB 62 01D9
        gbc.setState(0xbc4a, 0x7735, 0xae40, 0x922c, 0x421d, 0xeca7, 0x1, 0x0);
        gbc.writeMem(0xbc4a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7735);
        EXPECT(gbc.pc(), 0xbc4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc4a), 0xcb);
        EXPECT(gbc.readMem(0xbc4b), 0x62);
        // CB 62 01DA
        gbc.setState(0xa54a, 0x7af0, 0x91e0, 0xf20e, 0xdd92, 0x978b, 0x1, 0x1);
        gbc.writeMem(0xa54a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7af0);
        EXPECT(gbc.pc(), 0xa54c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa54a), 0xcb);
        EXPECT(gbc.readMem(0xa54b), 0x62);
        // CB 62 01DB
        gbc.setState(0x1def, 0x40ae, 0x75e0, 0xb7a9, 0x13c2, 0xb0bb, 0x0, 0x0);
        gbc.writeMem(0x1def, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x40ae);
        EXPECT(gbc.pc(), 0x1df1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01DC
        gbc.setState(0x4734, 0x99fd, 0x3b50, 0xaa9e, 0x1513, 0x83c2, 0x0, 0x1);
        gbc.writeMem(0x4734, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x99fd);
        EXPECT(gbc.pc(), 0x4736);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 01DD
        gbc.setState(0x72d5, 0x8a7d, 0xb890, 0xcf21, 0x472b, 0x931b, 0x0, 0x1);
        gbc.writeMem(0x72d5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x8a7d);
        EXPECT(gbc.pc(), 0x72d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 01DE
        gbc.setState(0xb28b, 0x4e5f, 0xffa0, 0xe9e9, 0x545e, 0x33ae, 0x1, 0x1);
        gbc.writeMem(0xb28b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x4e5f);
        EXPECT(gbc.pc(), 0xb28d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb28b), 0xcb);
        EXPECT(gbc.readMem(0xb28c), 0x62);
        // CB 62 01DF
        gbc.setState(0x3031, 0xaebb, 0x8700, 0x9c77, 0x8a97, 0xb8db, 0x0, 0x1);
        gbc.writeMem(0x3031, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xaebb);
        EXPECT(gbc.pc(), 0x3033);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01E0
        gbc.setState(0x320, 0xe199, 0xa2d0, 0x1ca4, 0xe01c, 0x976a, 0x1, 0x0);
        gbc.writeMem(0x320, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe199);
        EXPECT(gbc.pc(), 0x322);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 01E1
        gbc.setState(0xc828, 0xab7f, 0x4150, 0xc8ad, 0x772a, 0xe5f6, 0x0, 0x0);
        gbc.writeMem(0xc828, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xab7f);
        EXPECT(gbc.pc(), 0xc82a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc828), 0xcb);
        EXPECT(gbc.readMem(0xc829), 0x62);
        // CB 62 01E2
        gbc.setState(0x131, 0x25cf, 0x2510, 0xa92f, 0x7725, 0x9fda, 0x1, 0x1);
        gbc.writeMem(0x131, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x25cf);
        EXPECT(gbc.pc(), 0x133);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 01E3
        gbc.setState(0xef9e, 0x330f, 0x7ca0, 0xe0b7, 0x15e5, 0xad53, 0x0, 0x0);
        gbc.writeMem(0xef9e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x330f);
        EXPECT(gbc.pc(), 0xefa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef9e), 0xcb);
        EXPECT(gbc.readMem(0xef9f), 0x62);
        // CB 62 01E4
        gbc.setState(0x24e6, 0x65eb, 0xff40, 0xb329, 0xaeb3, 0xc4fb, 0x0, 0x0);
        gbc.writeMem(0x24e6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x65eb);
        EXPECT(gbc.pc(), 0x24e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01E5
        gbc.setState(0x3169, 0x89a5, 0xe8a0, 0x9f42, 0xec7a, 0x19dc, 0x0, 0x0);
        gbc.writeMem(0x3169, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x89a5);
        EXPECT(gbc.pc(), 0x316b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01E6
        gbc.setState(0x16ae, 0x3a77, 0xfba0, 0x831c, 0x1b8a, 0xc3e7, 0x1, 0x0);
        gbc.writeMem(0x16ae, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x3a77);
        EXPECT(gbc.pc(), 0x16b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01E7
        gbc.setState(0x1451, 0x6321, 0xe130, 0x500, 0x8284, 0xff51, 0x0, 0x0);
        gbc.writeMem(0x1451, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x6321);
        EXPECT(gbc.pc(), 0x1453);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 01E8
        gbc.setState(0x7f64, 0xc4c6, 0x3a90, 0xb406, 0x2cdb, 0x1e10, 0x1, 0x0);
        gbc.writeMem(0x7f64, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc4c6);
        EXPECT(gbc.pc(), 0x7f66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 01E9
        gbc.setState(0x3636, 0x3923, 0x8340, 0x337e, 0x1cb7, 0xce22, 0x1, 0x1);
        gbc.writeMem(0x3636, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3923);
        EXPECT(gbc.pc(), 0x3638);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01EA
        gbc.setState(0x8993, 0xdf7f, 0x9130, 0x4f75, 0x433d, 0x8f07, 0x0, 0x1);
        gbc.writeMem(0x8993, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xdf7f);
        EXPECT(gbc.pc(), 0x8995);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8993), 0xcb);
        EXPECT(gbc.readMem(0x8994), 0x62);
        // CB 62 01EB
        gbc.setState(0xb3ef, 0xcac6, 0x7260, 0xc323, 0x85a9, 0x956c, 0x1, 0x1);
        gbc.writeMem(0xb3ef, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xcac6);
        EXPECT(gbc.pc(), 0xb3f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3ef), 0xcb);
        EXPECT(gbc.readMem(0xb3f0), 0x62);
        // CB 62 01EC
        gbc.setState(0x4e79, 0xfd50, 0xe620, 0xd56b, 0x2e54, 0xac97, 0x1, 0x1);
        gbc.writeMem(0x4e79, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xfd50);
        EXPECT(gbc.pc(), 0x4e7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01ED
        gbc.setState(0xd5b3, 0x9092, 0x1b10, 0x10e, 0xa004, 0xb2f6, 0x0, 0x1);
        gbc.writeMem(0xd5b3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x9092);
        EXPECT(gbc.pc(), 0xd5b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5b3), 0xcb);
        EXPECT(gbc.readMem(0xd5b4), 0x62);
        // CB 62 01EE
        gbc.setState(0x6793, 0x126b, 0x2610, 0x12b0, 0xaa37, 0xd44c, 0x1, 0x1);
        gbc.writeMem(0x6793, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x126b);
        EXPECT(gbc.pc(), 0x6795);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 01EF
        gbc.setState(0x3b27, 0x6cef, 0x8250, 0x26f9, 0xcaba, 0xa1df, 0x1, 0x1);
        gbc.writeMem(0x3b27, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x6cef);
        EXPECT(gbc.pc(), 0x3b29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 01F0
        gbc.setState(0x7dd5, 0xabed, 0x7660, 0x5e69, 0xb280, 0xf614, 0x0, 0x0);
        gbc.writeMem(0x7dd5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xabed);
        EXPECT(gbc.pc(), 0x7dd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01F1
        gbc.setState(0xd90d, 0x9224, 0x6d0, 0xb097, 0xc0ec, 0x99f3, 0x0, 0x0);
        gbc.writeMem(0xd90d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9224);
        EXPECT(gbc.pc(), 0xd90f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd90d), 0xcb);
        EXPECT(gbc.readMem(0xd90e), 0x62);
        // CB 62 01F2
        gbc.setState(0x65f3, 0x847a, 0xb320, 0xfb26, 0xc574, 0x2c1b, 0x0, 0x1);
        gbc.writeMem(0x65f3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x847a);
        EXPECT(gbc.pc(), 0x65f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01F3
        gbc.setState(0xc4fd, 0x2002, 0x78e0, 0xd8f0, 0x291, 0x9121, 0x1, 0x0);
        gbc.writeMem(0xc4fd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2002);
        EXPECT(gbc.pc(), 0xc4ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4fd), 0xcb);
        EXPECT(gbc.readMem(0xc4fe), 0x62);
        // CB 62 01F4
        gbc.setState(0x7bdb, 0x8b9a, 0xc370, 0xbf98, 0xb6eb, 0x5064, 0x0, 0x0);
        gbc.writeMem(0x7bdb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8b9a);
        EXPECT(gbc.pc(), 0x7bdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 01F5
        gbc.setState(0x902, 0x29d, 0xdb00, 0x8b40, 0xea9c, 0x4288, 0x1, 0x1);
        gbc.writeMem(0x902, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x29d);
        EXPECT(gbc.pc(), 0x904);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01F6
        gbc.setState(0x97a6, 0x1710, 0xd0e0, 0x1930, 0xa723, 0xdabe, 0x0, 0x1);
        gbc.writeMem(0x97a6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1710);
        EXPECT(gbc.pc(), 0x97a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97a6), 0xcb);
        EXPECT(gbc.readMem(0x97a7), 0x62);
        // CB 62 01F7
        gbc.setState(0xc0, 0xef63, 0x84a0, 0x783a, 0xac3, 0xaade, 0x0, 0x1);
        gbc.writeMem(0xc0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xef63);
        EXPECT(gbc.pc(), 0xc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01F8
        gbc.setState(0xb5ff, 0xdef8, 0xbf90, 0xc1e2, 0x91a3, 0x9920, 0x1, 0x0);
        gbc.writeMem(0xb5ff, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xdef8);
        EXPECT(gbc.pc(), 0xb601);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5ff), 0xcb);
        EXPECT(gbc.readMem(0xb600), 0x62);
        // CB 62 01F9
        gbc.setState(0xc7eb, 0xf411, 0xc200, 0x2abd, 0x5abe, 0xcd2a, 0x0, 0x1);
        gbc.writeMem(0xc7eb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf411);
        EXPECT(gbc.pc(), 0xc7ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7eb), 0xcb);
        EXPECT(gbc.readMem(0xc7ec), 0x62);
        // CB 62 01FA
        gbc.setState(0xa3e3, 0x8aa1, 0xddd0, 0xc58d, 0x3be0, 0x7637, 0x0, 0x1);
        gbc.writeMem(0xa3e3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x8aa1);
        EXPECT(gbc.pc(), 0xa3e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3e3), 0xcb);
        EXPECT(gbc.readMem(0xa3e4), 0x62);
        // CB 62 01FC
        gbc.setState(0x7e01, 0x1b6a, 0xdd00, 0xea5d, 0x4675, 0x4925, 0x1, 0x1);
        gbc.writeMem(0x7e01, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x1b6a);
        EXPECT(gbc.pc(), 0x7e03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 01FE
        gbc.setState(0x8909, 0x1e4, 0x4530, 0xb043, 0xeea9, 0x420b, 0x1, 0x0);
        gbc.writeMem(0x8909, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1e4);
        EXPECT(gbc.pc(), 0x890b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8909), 0xcb);
        EXPECT(gbc.readMem(0x890a), 0x62);
        // CB 62 01FF
        gbc.setState(0x880, 0x7e46, 0xcb30, 0x7cde, 0x7390, 0x6c4d, 0x0, 0x1);
        gbc.writeMem(0x880, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x7e46);
        EXPECT(gbc.pc(), 0x882);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0200
        gbc.setState(0x2a57, 0xa08e, 0x2c80, 0xaae, 0xa877, 0xcc2e, 0x0, 0x1);
        gbc.writeMem(0x2a57, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa08e);
        EXPECT(gbc.pc(), 0x2a59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0201
        gbc.setState(0xae27, 0x5874, 0x8c00, 0x7b6c, 0x476a, 0x2fb2, 0x1, 0x0);
        gbc.writeMem(0xae27, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5874);
        EXPECT(gbc.pc(), 0xae29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae27), 0xcb);
        EXPECT(gbc.readMem(0xae28), 0x62);
        // CB 62 0202
        gbc.setState(0xefe7, 0x98e, 0x3050, 0x888a, 0x2b0, 0x5f76, 0x1, 0x1);
        gbc.writeMem(0xefe7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x98e);
        EXPECT(gbc.pc(), 0xefe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefe7), 0xcb);
        EXPECT(gbc.readMem(0xefe8), 0x62);
        // CB 62 0203
        gbc.setState(0xc427, 0x9ceb, 0xe9f0, 0x1eee, 0x9ea3, 0xfedd, 0x1, 0x0);
        gbc.writeMem(0xc427, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9ceb);
        EXPECT(gbc.pc(), 0xc429);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc427), 0xcb);
        EXPECT(gbc.readMem(0xc428), 0x62);
        // CB 62 0204
        gbc.setState(0xaf5b, 0x743e, 0xb3b0, 0x399f, 0xce9f, 0x4fad, 0x1, 0x1);
        gbc.writeMem(0xaf5b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x743e);
        EXPECT(gbc.pc(), 0xaf5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf5b), 0xcb);
        EXPECT(gbc.readMem(0xaf5c), 0x62);
        // CB 62 0206
        gbc.setState(0x3b69, 0xc259, 0xce70, 0x7d38, 0xc911, 0x23b5, 0x0, 0x1);
        gbc.writeMem(0x3b69, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc259);
        EXPECT(gbc.pc(), 0x3b6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0207
        gbc.setState(0x4a87, 0x1064, 0x5ac0, 0xc36c, 0x5dfd, 0x3f84, 0x0, 0x1);
        gbc.writeMem(0x4a87, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x1064);
        EXPECT(gbc.pc(), 0x4a89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0209
        gbc.setState(0x8645, 0xc4fe, 0x8520, 0xefb3, 0x9c5c, 0x7edc, 0x1, 0x0);
        gbc.writeMem(0x8645, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc4fe);
        EXPECT(gbc.pc(), 0x8647);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8645), 0xcb);
        EXPECT(gbc.readMem(0x8646), 0x62);
        // CB 62 020A
        gbc.setState(0x6c4a, 0xf95e, 0x3c20, 0xd86f, 0x8383, 0x4ad5, 0x0, 0x1);
        gbc.writeMem(0x6c4a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xf95e);
        EXPECT(gbc.pc(), 0x6c4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 020B
        gbc.setState(0xa991, 0x75ea, 0x8160, 0xf73c, 0xea80, 0x6334, 0x1, 0x0);
        gbc.writeMem(0xa991, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x75ea);
        EXPECT(gbc.pc(), 0xa993);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa991), 0xcb);
        EXPECT(gbc.readMem(0xa992), 0x62);
        // CB 62 020C
        gbc.setState(0x30a1, 0x6efb, 0x2900, 0x96a8, 0x4a02, 0x61e8, 0x0, 0x1);
        gbc.writeMem(0x30a1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x6efb);
        EXPECT(gbc.pc(), 0x30a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 020D
        gbc.setState(0xbaa3, 0xaef8, 0x9160, 0xb2e3, 0x72b2, 0xf1fb, 0x0, 0x0);
        gbc.writeMem(0xbaa3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xaef8);
        EXPECT(gbc.pc(), 0xbaa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaa3), 0xcb);
        EXPECT(gbc.readMem(0xbaa4), 0x62);
        // CB 62 020E
        gbc.setState(0xe98e, 0x187f, 0xb090, 0x6e33, 0x4f0, 0x935a, 0x1, 0x1);
        gbc.writeMem(0xe98e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x187f);
        EXPECT(gbc.pc(), 0xe990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe98e), 0xcb);
        EXPECT(gbc.readMem(0xe98f), 0x62);
        // CB 62 020F
        gbc.setState(0x7ede, 0xc934, 0x1bc0, 0x7af, 0x1293, 0xdb70, 0x1, 0x0);
        gbc.writeMem(0x7ede, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc934);
        EXPECT(gbc.pc(), 0x7ee0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0210
        gbc.setState(0x871c, 0x721e, 0xd6b0, 0xc610, 0xd30b, 0x8589, 0x1, 0x1);
        gbc.writeMem(0x871c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x721e);
        EXPECT(gbc.pc(), 0x871e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x871c), 0xcb);
        EXPECT(gbc.readMem(0x871d), 0x62);
        // CB 62 0211
        gbc.setState(0xe33b, 0x26a1, 0x52f0, 0x88d8, 0x24be, 0x6603, 0x0, 0x1);
        gbc.writeMem(0xe33b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x26a1);
        EXPECT(gbc.pc(), 0xe33d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe33b), 0xcb);
        EXPECT(gbc.readMem(0xe33c), 0x62);
        // CB 62 0212
        gbc.setState(0x247f, 0x12a4, 0xade0, 0x50bb, 0x4bf0, 0xf1b, 0x1, 0x0);
        gbc.writeMem(0x247f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x12a4);
        EXPECT(gbc.pc(), 0x2481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0213
        gbc.setState(0x1acd, 0xc7f7, 0xbcc0, 0x4923, 0xf17, 0xb103, 0x0, 0x1);
        gbc.writeMem(0x1acd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xc7f7);
        EXPECT(gbc.pc(), 0x1acf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0214
        gbc.setState(0xe671, 0x5506, 0xdca0, 0xb43d, 0x9c04, 0x5436, 0x0, 0x1);
        gbc.writeMem(0xe671, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x5506);
        EXPECT(gbc.pc(), 0xe673);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe671), 0xcb);
        EXPECT(gbc.readMem(0xe672), 0x62);
        // CB 62 0215
        gbc.setState(0x74fa, 0x5a70, 0x9dd0, 0x8f7b, 0x4ee9, 0xb994, 0x1, 0x1);
        gbc.writeMem(0x74fa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5a70);
        EXPECT(gbc.pc(), 0x74fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0216
        gbc.setState(0xd24, 0xeb09, 0xc560, 0x140c, 0x3e0a, 0xb4cc, 0x1, 0x0);
        gbc.writeMem(0xd24, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xeb09);
        EXPECT(gbc.pc(), 0xd26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0217
        gbc.setState(0x9937, 0x2f8e, 0x380, 0x2512, 0xc87a, 0xfa6, 0x1, 0x1);
        gbc.writeMem(0x9937, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x2f8e);
        EXPECT(gbc.pc(), 0x9939);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9937), 0xcb);
        EXPECT(gbc.readMem(0x9938), 0x62);
        // CB 62 0218
        gbc.setState(0x37e0, 0x1093, 0x4250, 0x5147, 0x84d8, 0x216d, 0x0, 0x1);
        gbc.writeMem(0x37e0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x1093);
        EXPECT(gbc.pc(), 0x37e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0219
        gbc.setState(0xdae4, 0x39b8, 0xbb30, 0x45a5, 0xe298, 0x6d8f, 0x0, 0x0);
        gbc.writeMem(0xdae4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x39b8);
        EXPECT(gbc.pc(), 0xdae6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdae4), 0xcb);
        EXPECT(gbc.readMem(0xdae5), 0x62);
        // CB 62 021A
        gbc.setState(0xc6fd, 0xaee5, 0x98d0, 0x7b76, 0x460d, 0x2056, 0x0, 0x0);
        gbc.writeMem(0xc6fd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xaee5);
        EXPECT(gbc.pc(), 0xc6ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6fd), 0xcb);
        EXPECT(gbc.readMem(0xc6fe), 0x62);
        // CB 62 021B
        gbc.setState(0x2a98, 0x50d2, 0x4b60, 0x257e, 0xdf42, 0x3c03, 0x0, 0x1);
        gbc.writeMem(0x2a98, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x50d2);
        EXPECT(gbc.pc(), 0x2a9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 021C
        gbc.setState(0x6f81, 0x2fc9, 0x990, 0xd306, 0x91a5, 0x5ef6, 0x0, 0x1);
        gbc.writeMem(0x6f81, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2fc9);
        EXPECT(gbc.pc(), 0x6f83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 021D
        gbc.setState(0x9f45, 0xc5e, 0x5440, 0xb51c, 0xe279, 0x14c8, 0x0, 0x0);
        gbc.writeMem(0x9f45, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc5e);
        EXPECT(gbc.pc(), 0x9f47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f45), 0xcb);
        EXPECT(gbc.readMem(0x9f46), 0x62);
        // CB 62 021E
        gbc.setState(0xc62f, 0x6811, 0x3b00, 0xf108, 0x704f, 0xe66b, 0x1, 0x1);
        gbc.writeMem(0xc62f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x6811);
        EXPECT(gbc.pc(), 0xc631);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc62f), 0xcb);
        EXPECT(gbc.readMem(0xc630), 0x62);
        // CB 62 021F
        gbc.setState(0x5ce2, 0x62f1, 0x5ba0, 0x6abc, 0x64c7, 0xcd84, 0x1, 0x1);
        gbc.writeMem(0x5ce2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x62f1);
        EXPECT(gbc.pc(), 0x5ce4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0220
        gbc.setState(0x5f26, 0xd43e, 0x37a0, 0xc1fc, 0x80c9, 0x9c5c, 0x0, 0x0);
        gbc.writeMem(0x5f26, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd43e);
        EXPECT(gbc.pc(), 0x5f28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0221
        gbc.setState(0x1524, 0xda77, 0xb5f0, 0xd4f, 0x88e4, 0x4f6, 0x0, 0x1);
        gbc.writeMem(0x1524, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xda77);
        EXPECT(gbc.pc(), 0x1526);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0222
        gbc.setState(0xc4b5, 0x3aa3, 0xfcf0, 0x1b03, 0x2619, 0x30, 0x1, 0x1);
        gbc.writeMem(0xc4b5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3aa3);
        EXPECT(gbc.pc(), 0xc4b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4b5), 0xcb);
        EXPECT(gbc.readMem(0xc4b6), 0x62);
        // CB 62 0223
        gbc.setState(0x980c, 0x520f, 0xccb0, 0x7db1, 0xd00e, 0xa33b, 0x1, 0x1);
        gbc.writeMem(0x980c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x520f);
        EXPECT(gbc.pc(), 0x980e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x980c), 0xcb);
        EXPECT(gbc.readMem(0x980d), 0x62);
        // CB 62 0224
        gbc.setState(0xe314, 0x5715, 0xe190, 0xa423, 0xe46a, 0xc87, 0x1, 0x0);
        gbc.writeMem(0xe314, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x5715);
        EXPECT(gbc.pc(), 0xe316);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe314), 0xcb);
        EXPECT(gbc.readMem(0xe315), 0x62);
        // CB 62 0225
        gbc.setState(0xce78, 0xc43a, 0x59b0, 0xbccd, 0xef1a, 0x21a6, 0x1, 0x1);
        gbc.writeMem(0xce78, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc43a);
        EXPECT(gbc.pc(), 0xce7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce78), 0xcb);
        EXPECT(gbc.readMem(0xce79), 0x62);
        // CB 62 0226
        gbc.setState(0x4881, 0xab65, 0x90b0, 0xe179, 0x15bc, 0x9977, 0x1, 0x1);
        gbc.writeMem(0x4881, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xab65);
        EXPECT(gbc.pc(), 0x4883);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0227
        gbc.setState(0x5d77, 0x3483, 0xa70, 0x1c83, 0x827b, 0x87d1, 0x0, 0x1);
        gbc.writeMem(0x5d77, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x3483);
        EXPECT(gbc.pc(), 0x5d79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0228
        gbc.setState(0xc946, 0xb162, 0xf360, 0x8c32, 0xd041, 0x97d2, 0x0, 0x1);
        gbc.writeMem(0xc946, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xb162);
        EXPECT(gbc.pc(), 0xc948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc946), 0xcb);
        EXPECT(gbc.readMem(0xc947), 0x62);
        // CB 62 0229
        gbc.setState(0x1325, 0x44ac, 0x2db0, 0x4af5, 0x3d0e, 0x1ad1, 0x0, 0x1);
        gbc.writeMem(0x1325, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x44ac);
        EXPECT(gbc.pc(), 0x1327);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 022A
        gbc.setState(0x1583, 0xa213, 0x11f0, 0x3f50, 0xa8cd, 0xb4a3, 0x0, 0x1);
        gbc.writeMem(0x1583, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa213);
        EXPECT(gbc.pc(), 0x1585);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 022B
        gbc.setState(0x8cdf, 0x762a, 0x9410, 0xdc94, 0x26b5, 0x1ff7, 0x0, 0x1);
        gbc.writeMem(0x8cdf, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x762a);
        EXPECT(gbc.pc(), 0x8ce1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cdf), 0xcb);
        EXPECT(gbc.readMem(0x8ce0), 0x62);
        // CB 62 022C
        gbc.setState(0x6aba, 0xc56c, 0x1a0, 0x6710, 0x9f94, 0xbaef, 0x0, 0x0);
        gbc.writeMem(0x6aba, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc56c);
        EXPECT(gbc.pc(), 0x6abc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 022D
        gbc.setState(0x1866, 0x6681, 0x8580, 0x4e2f, 0x427, 0xfaeb, 0x0, 0x1);
        gbc.writeMem(0x1866, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6681);
        EXPECT(gbc.pc(), 0x1868);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 022E
        gbc.setState(0xa162, 0x7322, 0x36d0, 0x756, 0xba34, 0x13d9, 0x1, 0x1);
        gbc.writeMem(0xa162, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x7322);
        EXPECT(gbc.pc(), 0xa164);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa162), 0xcb);
        EXPECT(gbc.readMem(0xa163), 0x62);
        // CB 62 022F
        gbc.setState(0x9c29, 0x7f3, 0x68e0, 0x354c, 0x14d6, 0x4c3f, 0x0, 0x1);
        gbc.writeMem(0x9c29, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7f3);
        EXPECT(gbc.pc(), 0x9c2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c29), 0xcb);
        EXPECT(gbc.readMem(0x9c2a), 0x62);
        // CB 62 0230
        gbc.setState(0x1a2, 0xe37a, 0xc8c0, 0x3f06, 0xc2ae, 0xa61a, 0x0, 0x1);
        gbc.writeMem(0x1a2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe37a);
        EXPECT(gbc.pc(), 0x1a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0231
        gbc.setState(0x7e12, 0x3b34, 0xbeb0, 0xe30d, 0x7e2, 0xf0e5, 0x1, 0x1);
        gbc.writeMem(0x7e12, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3b34);
        EXPECT(gbc.pc(), 0x7e14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0232
        gbc.setState(0x2c87, 0x32c5, 0x5ce0, 0xa872, 0xe54b, 0xb1a6, 0x1, 0x0);
        gbc.writeMem(0x2c87, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x32c5);
        EXPECT(gbc.pc(), 0x2c89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0233
        gbc.setState(0x23e9, 0xea3, 0x1dc0, 0x88d2, 0x5d2, 0x9f3f, 0x1, 0x1);
        gbc.writeMem(0x23e9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xea3);
        EXPECT(gbc.pc(), 0x23eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0234
        gbc.setState(0xd6e7, 0x4b33, 0x7030, 0xf7c4, 0x9cb1, 0x1b04, 0x0, 0x0);
        gbc.writeMem(0xd6e7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x4b33);
        EXPECT(gbc.pc(), 0xd6e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6e7), 0xcb);
        EXPECT(gbc.readMem(0xd6e8), 0x62);
        // CB 62 0235
        gbc.setState(0xd343, 0xd607, 0x8ad0, 0xbcd3, 0xac6e, 0xb79e, 0x1, 0x0);
        gbc.writeMem(0xd343, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd607);
        EXPECT(gbc.pc(), 0xd345);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd343), 0xcb);
        EXPECT(gbc.readMem(0xd344), 0x62);
        // CB 62 0236
        gbc.setState(0x9ab6, 0x99aa, 0x9cb0, 0x7c94, 0x42c1, 0x9a23, 0x0, 0x1);
        gbc.writeMem(0x9ab6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x99aa);
        EXPECT(gbc.pc(), 0x9ab8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ab6), 0xcb);
        EXPECT(gbc.readMem(0x9ab7), 0x62);
        // CB 62 0237
        gbc.setState(0x8df8, 0x1266, 0x7340, 0xdbe9, 0xa5cb, 0xa294, 0x1, 0x1);
        gbc.writeMem(0x8df8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1266);
        EXPECT(gbc.pc(), 0x8dfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8df8), 0xcb);
        EXPECT(gbc.readMem(0x8df9), 0x62);
        // CB 62 0238
        gbc.setState(0x2e92, 0x6a6c, 0xcb30, 0xf97b, 0xd33f, 0x6f41, 0x0, 0x1);
        gbc.writeMem(0x2e92, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6a6c);
        EXPECT(gbc.pc(), 0x2e94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0239
        gbc.setState(0xc27c, 0x8ce6, 0x1040, 0x31bb, 0x7e5c, 0xdbbb, 0x0, 0x1);
        gbc.writeMem(0xc27c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x8ce6);
        EXPECT(gbc.pc(), 0xc27e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc27c), 0xcb);
        EXPECT(gbc.readMem(0xc27d), 0x62);
        // CB 62 023A
        gbc.setState(0x5740, 0xe13, 0xc420, 0x9d3e, 0xb089, 0x5536, 0x0, 0x1);
        gbc.writeMem(0x5740, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe13);
        EXPECT(gbc.pc(), 0x5742);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 023B
        gbc.setState(0xacea, 0x547c, 0x8550, 0x63b1, 0x5d37, 0x5097, 0x0, 0x1);
        gbc.writeMem(0xacea, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x547c);
        EXPECT(gbc.pc(), 0xacec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacea), 0xcb);
        EXPECT(gbc.readMem(0xaceb), 0x62);
        // CB 62 023C
        gbc.setState(0xd005, 0x4c4d, 0xd410, 0x6725, 0x4c97, 0x40ea, 0x1, 0x1);
        gbc.writeMem(0xd005, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x4c4d);
        EXPECT(gbc.pc(), 0xd007);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd005), 0xcb);
        EXPECT(gbc.readMem(0xd006), 0x62);
        // CB 62 023D
        gbc.setState(0x73dd, 0xefed, 0x88a0, 0xae3e, 0x6fb5, 0x93d0, 0x0, 0x1);
        gbc.writeMem(0x73dd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xefed);
        EXPECT(gbc.pc(), 0x73df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 023E
        gbc.setState(0x1456, 0xe6ab, 0x4360, 0x8a06, 0x901c, 0x2fe3, 0x0, 0x1);
        gbc.writeMem(0x1456, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe6ab);
        EXPECT(gbc.pc(), 0x1458);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 023F
        gbc.setState(0x6166, 0xaa59, 0xc100, 0xdedf, 0x3822, 0xe854, 0x1, 0x0);
        gbc.writeMem(0x6166, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xaa59);
        EXPECT(gbc.pc(), 0x6168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0240
        gbc.setState(0x84d3, 0xbd7b, 0xac50, 0x571b, 0x6fab, 0xa5e6, 0x1, 0x1);
        gbc.writeMem(0x84d3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xbd7b);
        EXPECT(gbc.pc(), 0x84d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84d3), 0xcb);
        EXPECT(gbc.readMem(0x84d4), 0x62);
        // CB 62 0241
        gbc.setState(0x910a, 0xdf5c, 0xde90, 0xee9b, 0x8942, 0xe969, 0x0, 0x1);
        gbc.writeMem(0x910a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xdf5c);
        EXPECT(gbc.pc(), 0x910c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x910a), 0xcb);
        EXPECT(gbc.readMem(0x910b), 0x62);
        // CB 62 0242
        gbc.setState(0x76e8, 0x4ed3, 0xa500, 0x164c, 0xed34, 0xb27, 0x0, 0x1);
        gbc.writeMem(0x76e8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x4ed3);
        EXPECT(gbc.pc(), 0x76ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0243
        gbc.setState(0x8bb8, 0xdfb6, 0xe940, 0xbb8f, 0x35, 0xeae8, 0x1, 0x0);
        gbc.writeMem(0x8bb8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xdfb6);
        EXPECT(gbc.pc(), 0x8bba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bb8), 0xcb);
        EXPECT(gbc.readMem(0x8bb9), 0x62);
        // CB 62 0244
        gbc.setState(0x3dc2, 0xc9d4, 0xead0, 0x9229, 0xd1a2, 0xe031, 0x0, 0x0);
        gbc.writeMem(0x3dc2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xc9d4);
        EXPECT(gbc.pc(), 0x3dc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0245
        gbc.setState(0x6148, 0xf51e, 0x2820, 0x833b, 0x56b4, 0x628d, 0x0, 0x1);
        gbc.writeMem(0x6148, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf51e);
        EXPECT(gbc.pc(), 0x614a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0246
        gbc.setState(0xe64d, 0x8070, 0x5dc0, 0xcb01, 0xe48f, 0xcdd2, 0x0, 0x0);
        gbc.writeMem(0xe64d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8070);
        EXPECT(gbc.pc(), 0xe64f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe64d), 0xcb);
        EXPECT(gbc.readMem(0xe64e), 0x62);
        // CB 62 0247
        gbc.setState(0x7477, 0x3c65, 0x42a0, 0x503e, 0x2990, 0x5c94, 0x0, 0x1);
        gbc.writeMem(0x7477, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x3c65);
        EXPECT(gbc.pc(), 0x7479);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0248
        gbc.setState(0x93be, 0xe200, 0x4e0, 0xb9d0, 0xf1ef, 0x927, 0x0, 0x1);
        gbc.writeMem(0x93be, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe200);
        EXPECT(gbc.pc(), 0x93c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93be), 0xcb);
        EXPECT(gbc.readMem(0x93bf), 0x62);
        // CB 62 0249
        gbc.setState(0x813d, 0x579f, 0xb0b0, 0x1525, 0xbb40, 0x172b, 0x1, 0x0);
        gbc.writeMem(0x813d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x579f);
        EXPECT(gbc.pc(), 0x813f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x813d), 0xcb);
        EXPECT(gbc.readMem(0x813e), 0x62);
        // CB 62 024A
        gbc.setState(0xd0fc, 0x776d, 0x8d0, 0x4b4e, 0xcbc2, 0x7da3, 0x1, 0x0);
        gbc.writeMem(0xd0fc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x776d);
        EXPECT(gbc.pc(), 0xd0fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0fc), 0xcb);
        EXPECT(gbc.readMem(0xd0fd), 0x62);
        // CB 62 024B
        gbc.setState(0xca21, 0xdbb3, 0xc4e0, 0x695b, 0x9667, 0x480, 0x0, 0x1);
        gbc.writeMem(0xca21, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xdbb3);
        EXPECT(gbc.pc(), 0xca23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca21), 0xcb);
        EXPECT(gbc.readMem(0xca22), 0x62);
        // CB 62 024C
        gbc.setState(0x2c27, 0xfd5d, 0xab00, 0x728d, 0xeb9a, 0xb25, 0x1, 0x0);
        gbc.writeMem(0x2c27, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xfd5d);
        EXPECT(gbc.pc(), 0x2c29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 024D
        gbc.setState(0xdc31, 0xeabd, 0x8500, 0xe58f, 0xbf37, 0x3f64, 0x1, 0x1);
        gbc.writeMem(0xdc31, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xeabd);
        EXPECT(gbc.pc(), 0xdc33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc31), 0xcb);
        EXPECT(gbc.readMem(0xdc32), 0x62);
        // CB 62 024E
        gbc.setState(0x43a3, 0xe471, 0x42f0, 0xe6b, 0xeb13, 0xcf30, 0x0, 0x1);
        gbc.writeMem(0x43a3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xe471);
        EXPECT(gbc.pc(), 0x43a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 024F
        gbc.setState(0xb669, 0x5330, 0x3170, 0x2f19, 0xcfe7, 0x33da, 0x0, 0x0);
        gbc.writeMem(0xb669, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5330);
        EXPECT(gbc.pc(), 0xb66b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb669), 0xcb);
        EXPECT(gbc.readMem(0xb66a), 0x62);
        // CB 62 0250
        gbc.setState(0xa04a, 0x2499, 0x51d0, 0xe940, 0x4a88, 0x2b19, 0x0, 0x1);
        gbc.writeMem(0xa04a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2499);
        EXPECT(gbc.pc(), 0xa04c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa04a), 0xcb);
        EXPECT(gbc.readMem(0xa04b), 0x62);
        // CB 62 0251
        gbc.setState(0xe2a8, 0xdd9d, 0x9980, 0x5a1f, 0xf0dc, 0xfca, 0x1, 0x1);
        gbc.writeMem(0xe2a8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xdd9d);
        EXPECT(gbc.pc(), 0xe2aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2a8), 0xcb);
        EXPECT(gbc.readMem(0xe2a9), 0x62);
        // CB 62 0252
        gbc.setState(0x257b, 0x9bd8, 0x4640, 0x3897, 0x9978, 0x73d7, 0x0, 0x0);
        gbc.writeMem(0x257b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x9bd8);
        EXPECT(gbc.pc(), 0x257d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0253
        gbc.setState(0xc570, 0xb8fc, 0x9d70, 0xebbb, 0xfba, 0x84e6, 0x1, 0x0);
        gbc.writeMem(0xc570, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb8fc);
        EXPECT(gbc.pc(), 0xc572);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc570), 0xcb);
        EXPECT(gbc.readMem(0xc571), 0x62);
        // CB 62 0254
        gbc.setState(0xe8b6, 0xb68, 0x5a60, 0x3eae, 0xc08, 0x274c, 0x1, 0x1);
        gbc.writeMem(0xe8b6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb68);
        EXPECT(gbc.pc(), 0xe8b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8b6), 0xcb);
        EXPECT(gbc.readMem(0xe8b7), 0x62);
        // CB 62 0255
        gbc.setState(0x6ca9, 0xa8f6, 0x320, 0x6926, 0x4f1b, 0x64bc, 0x0, 0x1);
        gbc.writeMem(0x6ca9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa8f6);
        EXPECT(gbc.pc(), 0x6cab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0256
        gbc.setState(0x8c6d, 0x3b49, 0xd2e0, 0xf4af, 0xdc75, 0xf60b, 0x0, 0x1);
        gbc.writeMem(0x8c6d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3b49);
        EXPECT(gbc.pc(), 0x8c6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c6d), 0xcb);
        EXPECT(gbc.readMem(0x8c6e), 0x62);
        // CB 62 0257
        gbc.setState(0x1087, 0xa7ec, 0xd820, 0xabcb, 0x78a3, 0xce4a, 0x0, 0x1);
        gbc.writeMem(0x1087, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa7ec);
        EXPECT(gbc.pc(), 0x1089);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0258
        gbc.setState(0x291, 0xd95c, 0xbbc0, 0x90c9, 0xe2cb, 0xbafe, 0x1, 0x1);
        gbc.writeMem(0x291, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd95c);
        EXPECT(gbc.pc(), 0x293);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0259
        gbc.setState(0x56cc, 0x83f4, 0xc950, 0xfc45, 0xb402, 0xbb98, 0x1, 0x0);
        gbc.writeMem(0x56cc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x83f4);
        EXPECT(gbc.pc(), 0x56ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 025A
        gbc.setState(0xd0d2, 0x3047, 0x86b0, 0xd1f3, 0x700e, 0xebf4, 0x1, 0x0);
        gbc.writeMem(0xd0d2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x3047);
        EXPECT(gbc.pc(), 0xd0d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0d2), 0xcb);
        EXPECT(gbc.readMem(0xd0d3), 0x62);
        // CB 62 025B
        gbc.setState(0x6f9c, 0xcb02, 0x72a0, 0x7269, 0xf550, 0xcda, 0x0, 0x0);
        gbc.writeMem(0x6f9c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xcb02);
        EXPECT(gbc.pc(), 0x6f9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 025C
        gbc.setState(0x9fee, 0xf324, 0x74b0, 0xbedb, 0x9aeb, 0x8d5b, 0x0, 0x0);
        gbc.writeMem(0x9fee, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf324);
        EXPECT(gbc.pc(), 0x9ff0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fee), 0xcb);
        EXPECT(gbc.readMem(0x9fef), 0x62);
        // CB 62 025E
        gbc.setState(0xef1c, 0xb1e9, 0x4f40, 0xb0cb, 0xcfb3, 0x1b23, 0x0, 0x1);
        gbc.writeMem(0xef1c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb1e9);
        EXPECT(gbc.pc(), 0xef1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef1c), 0xcb);
        EXPECT(gbc.readMem(0xef1d), 0x62);
        // CB 62 025F
        gbc.setState(0xb0d0, 0xfc1d, 0x80b0, 0x1c0a, 0xcad, 0x7ad5, 0x1, 0x1);
        gbc.writeMem(0xb0d0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xfc1d);
        EXPECT(gbc.pc(), 0xb0d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0d0), 0xcb);
        EXPECT(gbc.readMem(0xb0d1), 0x62);
        // CB 62 0260
        gbc.setState(0x60c2, 0x3827, 0x780, 0xfa39, 0x9280, 0x43f8, 0x0, 0x1);
        gbc.writeMem(0x60c2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3827);
        EXPECT(gbc.pc(), 0x60c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0261
        gbc.setState(0xa0bd, 0xe03, 0xee0, 0x66d2, 0xd8bc, 0x4d8, 0x0, 0x1);
        gbc.writeMem(0xa0bd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe03);
        EXPECT(gbc.pc(), 0xa0bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0bd), 0xcb);
        EXPECT(gbc.readMem(0xa0be), 0x62);
        // CB 62 0262
        gbc.setState(0x9201, 0x23c8, 0x2c0, 0xb363, 0xa5f7, 0x5c06, 0x1, 0x0);
        gbc.writeMem(0x9201, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x23c8);
        EXPECT(gbc.pc(), 0x9203);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9201), 0xcb);
        EXPECT(gbc.readMem(0x9202), 0x62);
        // CB 62 0263
        gbc.setState(0x849, 0x4d20, 0x1830, 0x8b63, 0xa40c, 0x280, 0x1, 0x0);
        gbc.writeMem(0x849, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4d20);
        EXPECT(gbc.pc(), 0x84b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0264
        gbc.setState(0x2f18, 0xd27f, 0x970, 0x70e9, 0xd004, 0x7ff0, 0x0, 0x0);
        gbc.writeMem(0x2f18, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd27f);
        EXPECT(gbc.pc(), 0x2f1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0265
        gbc.setState(0xd4ab, 0x8430, 0x12e0, 0x166c, 0xb990, 0xfceb, 0x1, 0x0);
        gbc.writeMem(0xd4ab, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x8430);
        EXPECT(gbc.pc(), 0xd4ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4ab), 0xcb);
        EXPECT(gbc.readMem(0xd4ac), 0x62);
        // CB 62 0266
        gbc.setState(0x2b33, 0x3a6f, 0xea40, 0x6848, 0x93d8, 0x80f6, 0x0, 0x1);
        gbc.writeMem(0x2b33, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x3a6f);
        EXPECT(gbc.pc(), 0x2b35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0267
        gbc.setState(0x9427, 0x9cdb, 0x2230, 0x2009, 0x99f1, 0x81a, 0x1, 0x0);
        gbc.writeMem(0x9427, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9cdb);
        EXPECT(gbc.pc(), 0x9429);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9427), 0xcb);
        EXPECT(gbc.readMem(0x9428), 0x62);
        // CB 62 0268
        gbc.setState(0xac9f, 0xff64, 0x91b0, 0xc6b3, 0x4d37, 0x1d33, 0x1, 0x0);
        gbc.writeMem(0xac9f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xff64);
        EXPECT(gbc.pc(), 0xaca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac9f), 0xcb);
        EXPECT(gbc.readMem(0xaca0), 0x62);
        // CB 62 0269
        gbc.setState(0x878a, 0x497b, 0x6380, 0x433, 0x60bc, 0xcb1b, 0x0, 0x1);
        gbc.writeMem(0x878a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x497b);
        EXPECT(gbc.pc(), 0x878c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x878a), 0xcb);
        EXPECT(gbc.readMem(0x878b), 0x62);
        // CB 62 026A
        gbc.setState(0xb85f, 0xf16f, 0xda0, 0x733d, 0x1d36, 0xd687, 0x1, 0x1);
        gbc.writeMem(0xb85f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf16f);
        EXPECT(gbc.pc(), 0xb861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb85f), 0xcb);
        EXPECT(gbc.readMem(0xb860), 0x62);
        // CB 62 026B
        gbc.setState(0x3179, 0x68d9, 0xe0b0, 0xfc2d, 0x9f74, 0xfb4a, 0x0, 0x0);
        gbc.writeMem(0x3179, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x68d9);
        EXPECT(gbc.pc(), 0x317b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 026C
        gbc.setState(0x1dd1, 0x1357, 0xc3a0, 0xbddb, 0x7d15, 0x777f, 0x1, 0x1);
        gbc.writeMem(0x1dd1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x1357);
        EXPECT(gbc.pc(), 0x1dd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 026D
        gbc.setState(0x5655, 0x2cb9, 0x94b0, 0xcbc9, 0x7ebb, 0xfe8, 0x1, 0x0);
        gbc.writeMem(0x5655, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x2cb9);
        EXPECT(gbc.pc(), 0x5657);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 026F
        gbc.setState(0xd15e, 0xb157, 0x1820, 0xc6c9, 0x9382, 0xb256, 0x0, 0x0);
        gbc.writeMem(0xd15e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb157);
        EXPECT(gbc.pc(), 0xd160);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd15e), 0xcb);
        EXPECT(gbc.readMem(0xd15f), 0x62);
        // CB 62 0270
        gbc.setState(0x7cde, 0xdd8, 0x9420, 0x6a41, 0xa36b, 0x112b, 0x0, 0x0);
        gbc.writeMem(0x7cde, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xdd8);
        EXPECT(gbc.pc(), 0x7ce0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0271
        gbc.setState(0x2a17, 0xbb6e, 0x9b80, 0x26a3, 0x7af3, 0x89bd, 0x0, 0x1);
        gbc.writeMem(0x2a17, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xbb6e);
        EXPECT(gbc.pc(), 0x2a19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0272
        gbc.setState(0x2b65, 0x5b45, 0x65e0, 0x34b7, 0x567b, 0xed71, 0x1, 0x0);
        gbc.writeMem(0x2b65, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5b45);
        EXPECT(gbc.pc(), 0x2b67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0274
        gbc.setState(0xabcd, 0x1f41, 0x1a00, 0xa80e, 0x6dde, 0x8288, 0x0, 0x0);
        gbc.writeMem(0xabcd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x1f41);
        EXPECT(gbc.pc(), 0xabcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabcd), 0xcb);
        EXPECT(gbc.readMem(0xabce), 0x62);
        // CB 62 0275
        gbc.setState(0xca9f, 0x7f5a, 0x690, 0xeba6, 0x2565, 0x5a84, 0x0, 0x0);
        gbc.writeMem(0xca9f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7f5a);
        EXPECT(gbc.pc(), 0xcaa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca9f), 0xcb);
        EXPECT(gbc.readMem(0xcaa0), 0x62);
        // CB 62 0276
        gbc.setState(0x18c1, 0xd9fa, 0x9100, 0xafed, 0xa348, 0xc52, 0x0, 0x1);
        gbc.writeMem(0x18c1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd9fa);
        EXPECT(gbc.pc(), 0x18c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0277
        gbc.setState(0xbf8f, 0x1293, 0x8120, 0x3218, 0xc2e1, 0x14bd, 0x1, 0x1);
        gbc.writeMem(0xbf8f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1293);
        EXPECT(gbc.pc(), 0xbf91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf8f), 0xcb);
        EXPECT(gbc.readMem(0xbf90), 0x62);
        // CB 62 0278
        gbc.setState(0x52be, 0x1722, 0xd570, 0xdec1, 0xf0cd, 0xbd2d, 0x1, 0x0);
        gbc.writeMem(0x52be, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1722);
        EXPECT(gbc.pc(), 0x52c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0279
        gbc.setState(0x67ba, 0x46cf, 0xf050, 0x3732, 0x8b23, 0xb7f, 0x1, 0x0);
        gbc.writeMem(0x67ba, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x46cf);
        EXPECT(gbc.pc(), 0x67bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 027A
        gbc.setState(0x6d13, 0x7a2b, 0xbc80, 0x5ba0, 0x1265, 0x9047, 0x0, 0x1);
        gbc.writeMem(0x6d13, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7a2b);
        EXPECT(gbc.pc(), 0x6d15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 027B
        gbc.setState(0xeca1, 0x6326, 0xd470, 0x674e, 0x66d0, 0x8cbd, 0x0, 0x1);
        gbc.writeMem(0xeca1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x6326);
        EXPECT(gbc.pc(), 0xeca3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeca1), 0xcb);
        EXPECT(gbc.readMem(0xeca2), 0x62);
        // CB 62 027C
        gbc.setState(0xcb48, 0xe987, 0x5370, 0xec49, 0x920e, 0x72b0, 0x0, 0x1);
        gbc.writeMem(0xcb48, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe987);
        EXPECT(gbc.pc(), 0xcb4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb48), 0xcb);
        EXPECT(gbc.readMem(0xcb49), 0x62);
        // CB 62 027D
        gbc.setState(0x7e7a, 0x5538, 0xf370, 0x8d7e, 0x37fa, 0x7b53, 0x0, 0x1);
        gbc.writeMem(0x7e7a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5538);
        EXPECT(gbc.pc(), 0x7e7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 027E
        gbc.setState(0x86ce, 0xbcf9, 0x3670, 0xae71, 0x8f9, 0x96ec, 0x1, 0x1);
        gbc.writeMem(0x86ce, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xbcf9);
        EXPECT(gbc.pc(), 0x86d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86ce), 0xcb);
        EXPECT(gbc.readMem(0x86cf), 0x62);
        // CB 62 027F
        gbc.setState(0xa944, 0x820e, 0xa6c0, 0x8fd7, 0xe0fa, 0xdb85, 0x1, 0x1);
        gbc.writeMem(0xa944, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x820e);
        EXPECT(gbc.pc(), 0xa946);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa944), 0xcb);
        EXPECT(gbc.readMem(0xa945), 0x62);
        // CB 62 0280
        gbc.setState(0xc539, 0xd5c, 0xbee0, 0x4b53, 0x423d, 0xb805, 0x1, 0x0);
        gbc.writeMem(0xc539, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd5c);
        EXPECT(gbc.pc(), 0xc53b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc539), 0xcb);
        EXPECT(gbc.readMem(0xc53a), 0x62);
        // CB 62 0281
        gbc.setState(0xa0bb, 0x883f, 0xcbd0, 0x60db, 0xb521, 0xbe1a, 0x0, 0x1);
        gbc.writeMem(0xa0bb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x883f);
        EXPECT(gbc.pc(), 0xa0bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0bb), 0xcb);
        EXPECT(gbc.readMem(0xa0bc), 0x62);
        // CB 62 0282
        gbc.setState(0xc297, 0x5efb, 0xbf10, 0x67bf, 0x3a31, 0x69d3, 0x1, 0x0);
        gbc.writeMem(0xc297, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x5efb);
        EXPECT(gbc.pc(), 0xc299);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc297), 0xcb);
        EXPECT(gbc.readMem(0xc298), 0x62);
        // CB 62 0284
        gbc.setState(0x8341, 0x4176, 0x14b0, 0x298e, 0xc7e8, 0x1279, 0x1, 0x1);
        gbc.writeMem(0x8341, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x4176);
        EXPECT(gbc.pc(), 0x8343);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8341), 0xcb);
        EXPECT(gbc.readMem(0x8342), 0x62);
        // CB 62 0285
        gbc.setState(0x60f9, 0x7183, 0xb3b0, 0x8065, 0x9d39, 0xa81f, 0x1, 0x1);
        gbc.writeMem(0x60f9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x7183);
        EXPECT(gbc.pc(), 0x60fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0286
        gbc.setState(0x351, 0xbd1e, 0x1a70, 0x5dd, 0x1e67, 0x40bd, 0x1, 0x0);
        gbc.writeMem(0x351, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xbd1e);
        EXPECT(gbc.pc(), 0x353);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0287
        gbc.setState(0xa5ac, 0x75ad, 0x6890, 0xde09, 0xf1b8, 0x1b1a, 0x1, 0x0);
        gbc.writeMem(0xa5ac, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x75ad);
        EXPECT(gbc.pc(), 0xa5ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5ac), 0xcb);
        EXPECT(gbc.readMem(0xa5ad), 0x62);
        // CB 62 0288
        gbc.setState(0xd079, 0x93ab, 0x53f0, 0xe63b, 0xc774, 0x24a9, 0x1, 0x1);
        gbc.writeMem(0xd079, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x93ab);
        EXPECT(gbc.pc(), 0xd07b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd079), 0xcb);
        EXPECT(gbc.readMem(0xd07a), 0x62);
        // CB 62 0289
        gbc.setState(0x519a, 0xe80b, 0x2070, 0xf198, 0x5544, 0x6967, 0x1, 0x0);
        gbc.writeMem(0x519a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe80b);
        EXPECT(gbc.pc(), 0x519c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 028A
        gbc.setState(0x46ab, 0xd9ba, 0x19c0, 0xa6ec, 0x4be1, 0xe2cb, 0x1, 0x0);
        gbc.writeMem(0x46ab, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xd9ba);
        EXPECT(gbc.pc(), 0x46ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 028B
        gbc.setState(0x7f33, 0x3557, 0x8cf0, 0x9280, 0x1b6, 0x48e0, 0x1, 0x0);
        gbc.writeMem(0x7f33, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3557);
        EXPECT(gbc.pc(), 0x7f35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 028C
        gbc.setState(0xcb8f, 0xfab0, 0x5c60, 0xc37e, 0x9cfd, 0x709e, 0x0, 0x0);
        gbc.writeMem(0xcb8f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xfab0);
        EXPECT(gbc.pc(), 0xcb91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb8f), 0xcb);
        EXPECT(gbc.readMem(0xcb90), 0x62);
        // CB 62 028D
        gbc.setState(0xefb, 0xfd1b, 0xf390, 0x5a50, 0xcc92, 0xda56, 0x1, 0x0);
        gbc.writeMem(0xefb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xfd1b);
        EXPECT(gbc.pc(), 0xefd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 028E
        gbc.setState(0x4934, 0x5a24, 0xe540, 0x6134, 0x8f99, 0xb29d, 0x1, 0x1);
        gbc.writeMem(0x4934, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x5a24);
        EXPECT(gbc.pc(), 0x4936);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 028F
        gbc.setState(0x70d1, 0xaf15, 0x2420, 0x33a6, 0x6125, 0x779e, 0x1, 0x0);
        gbc.writeMem(0x70d1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xaf15);
        EXPECT(gbc.pc(), 0x70d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0290
        gbc.setState(0xb0af, 0x7a2d, 0xe6f0, 0xaa89, 0xd7dc, 0x9337, 0x0, 0x1);
        gbc.writeMem(0xb0af, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7a2d);
        EXPECT(gbc.pc(), 0xb0b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0af), 0xcb);
        EXPECT(gbc.readMem(0xb0b0), 0x62);
        // CB 62 0291
        gbc.setState(0x4f65, 0x2e50, 0xf9e0, 0x1639, 0xcfee, 0x5fd6, 0x1, 0x1);
        gbc.writeMem(0x4f65, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x2e50);
        EXPECT(gbc.pc(), 0x4f67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0292
        gbc.setState(0xef11, 0xc0d0, 0x3a70, 0xe2c1, 0xd09d, 0xabf1, 0x0, 0x1);
        gbc.writeMem(0xef11, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc0d0);
        EXPECT(gbc.pc(), 0xef13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef11), 0xcb);
        EXPECT(gbc.readMem(0xef12), 0x62);
        // CB 62 0293
        gbc.setState(0x862a, 0x35f7, 0x8450, 0x8ef7, 0xbc68, 0x2f32, 0x1, 0x1);
        gbc.writeMem(0x862a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x35f7);
        EXPECT(gbc.pc(), 0x862c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x862a), 0xcb);
        EXPECT(gbc.readMem(0x862b), 0x62);
        // CB 62 0294
        gbc.setState(0x9e44, 0xc41b, 0xb890, 0xff28, 0x6e8a, 0xc495, 0x0, 0x0);
        gbc.writeMem(0x9e44, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xc41b);
        EXPECT(gbc.pc(), 0x9e46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e44), 0xcb);
        EXPECT(gbc.readMem(0x9e45), 0x62);
        // CB 62 0295
        gbc.setState(0x6bfa, 0xca8f, 0xfca0, 0xd9d9, 0xd0d, 0xc06b, 0x1, 0x1);
        gbc.writeMem(0x6bfa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xca8f);
        EXPECT(gbc.pc(), 0x6bfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0296
        gbc.setState(0x8ef6, 0x3238, 0x2f60, 0x9cd4, 0x98c2, 0x772a, 0x1, 0x1);
        gbc.writeMem(0x8ef6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x3238);
        EXPECT(gbc.pc(), 0x8ef8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ef6), 0xcb);
        EXPECT(gbc.readMem(0x8ef7), 0x62);
        // CB 62 0297
        gbc.setState(0xb313, 0xb20b, 0xa0e0, 0x95cf, 0xf875, 0xf848, 0x0, 0x0);
        gbc.writeMem(0xb313, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb20b);
        EXPECT(gbc.pc(), 0xb315);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb313), 0xcb);
        EXPECT(gbc.readMem(0xb314), 0x62);
        // CB 62 0298
        gbc.setState(0x4da9, 0xbf90, 0x3d60, 0x744c, 0x9d51, 0xa2a4, 0x0, 0x1);
        gbc.writeMem(0x4da9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xbf90);
        EXPECT(gbc.pc(), 0x4dab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0299
        gbc.setState(0x7808, 0x5c8f, 0x1d10, 0xf464, 0xd960, 0x3eb0, 0x1, 0x1);
        gbc.writeMem(0x7808, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x5c8f);
        EXPECT(gbc.pc(), 0x780a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 029A
        gbc.setState(0xd26a, 0x80cd, 0x80e0, 0xe585, 0xd599, 0xebc, 0x0, 0x1);
        gbc.writeMem(0xd26a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x80cd);
        EXPECT(gbc.pc(), 0xd26c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd26a), 0xcb);
        EXPECT(gbc.readMem(0xd26b), 0x62);
        // CB 62 029B
        gbc.setState(0x4c8b, 0xf0a8, 0x9510, 0xeab4, 0x6b28, 0xd469, 0x0, 0x1);
        gbc.writeMem(0x4c8b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xf0a8);
        EXPECT(gbc.pc(), 0x4c8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 029C
        gbc.setState(0xded1, 0x970d, 0x7f60, 0x210b, 0x609a, 0x2b97, 0x1, 0x0);
        gbc.writeMem(0xded1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x970d);
        EXPECT(gbc.pc(), 0xded3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xded1), 0xcb);
        EXPECT(gbc.readMem(0xded2), 0x62);
        // CB 62 029D
        gbc.setState(0x200c, 0xcd91, 0x8b60, 0xf080, 0x615, 0x3cbd, 0x0, 0x0);
        gbc.writeMem(0x200c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xcd91);
        EXPECT(gbc.pc(), 0x200e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 029E
        gbc.setState(0x563e, 0xe4d4, 0xfd0, 0x5e42, 0x522e, 0xa257, 0x1, 0x0);
        gbc.writeMem(0x563e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe4d4);
        EXPECT(gbc.pc(), 0x5640);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 029F
        gbc.setState(0xbc9c, 0xfbb2, 0x5840, 0xb8e8, 0x886e, 0xdd74, 0x1, 0x0);
        gbc.writeMem(0xbc9c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xfbb2);
        EXPECT(gbc.pc(), 0xbc9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc9c), 0xcb);
        EXPECT(gbc.readMem(0xbc9d), 0x62);
        // CB 62 02A0
        gbc.setState(0x45d2, 0xf69e, 0x3820, 0x4442, 0x25eb, 0x2900, 0x0, 0x1);
        gbc.writeMem(0x45d2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf69e);
        EXPECT(gbc.pc(), 0x45d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02A1
        gbc.setState(0x1456, 0x2b81, 0x1f00, 0x3084, 0x8702, 0xee5d, 0x1, 0x1);
        gbc.writeMem(0x1456, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2b81);
        EXPECT(gbc.pc(), 0x1458);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02A2
        gbc.setState(0x10fd, 0x31e5, 0xe4f0, 0xdcbc, 0x2b93, 0xe276, 0x1, 0x0);
        gbc.writeMem(0x10fd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x31e5);
        EXPECT(gbc.pc(), 0x10ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 02A3
        gbc.setState(0xb5f3, 0xef9a, 0x9140, 0x2921, 0xd659, 0x58c2, 0x1, 0x1);
        gbc.writeMem(0xb5f3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xef9a);
        EXPECT(gbc.pc(), 0xb5f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5f3), 0xcb);
        EXPECT(gbc.readMem(0xb5f4), 0x62);
        // CB 62 02A4
        gbc.setState(0xd0e9, 0x4cf8, 0xe790, 0x513d, 0x4765, 0x230e, 0x0, 0x0);
        gbc.writeMem(0xd0e9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x4cf8);
        EXPECT(gbc.pc(), 0xd0eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0e9), 0xcb);
        EXPECT(gbc.readMem(0xd0ea), 0x62);
        // CB 62 02A5
        gbc.setState(0x431c, 0xf0df, 0x3f10, 0x4eaf, 0x24b2, 0x7b4b, 0x1, 0x1);
        gbc.writeMem(0x431c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf0df);
        EXPECT(gbc.pc(), 0x431e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 02A7
        gbc.setState(0x9a2c, 0xce48, 0x96d0, 0x970c, 0x52e7, 0xca0c, 0x0, 0x0);
        gbc.writeMem(0x9a2c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xce48);
        EXPECT(gbc.pc(), 0x9a2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a2c), 0xcb);
        EXPECT(gbc.readMem(0x9a2d), 0x62);
        // CB 62 02A8
        gbc.setState(0xa318, 0x8b44, 0x92a0, 0x4c5a, 0x7dd9, 0x216b, 0x0, 0x0);
        gbc.writeMem(0xa318, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x8b44);
        EXPECT(gbc.pc(), 0xa31a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa318), 0xcb);
        EXPECT(gbc.readMem(0xa319), 0x62);
        // CB 62 02A9
        gbc.setState(0x64f0, 0x21a4, 0x5b60, 0x691d, 0xefa, 0xe100, 0x0, 0x1);
        gbc.writeMem(0x64f0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x21a4);
        EXPECT(gbc.pc(), 0x64f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02AA
        gbc.setState(0x7a04, 0x852a, 0xc0e0, 0x3844, 0x1f89, 0x9f45, 0x1, 0x0);
        gbc.writeMem(0x7a04, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x852a);
        EXPECT(gbc.pc(), 0x7a06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02AB
        gbc.setState(0x9edf, 0xaac5, 0xee20, 0x8d63, 0xab1d, 0x2548, 0x1, 0x1);
        gbc.writeMem(0x9edf, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xaac5);
        EXPECT(gbc.pc(), 0x9ee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9edf), 0xcb);
        EXPECT(gbc.readMem(0x9ee0), 0x62);
        // CB 62 02AC
        gbc.setState(0x56c5, 0x7bd6, 0x8660, 0x1a1d, 0xa620, 0x5373, 0x0, 0x1);
        gbc.writeMem(0x56c5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x7bd6);
        EXPECT(gbc.pc(), 0x56c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02AD
        gbc.setState(0x95eb, 0xf948, 0xa2f0, 0xd2f8, 0x4880, 0x22b2, 0x0, 0x1);
        gbc.writeMem(0x95eb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf948);
        EXPECT(gbc.pc(), 0x95ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95eb), 0xcb);
        EXPECT(gbc.readMem(0x95ec), 0x62);
        // CB 62 02AE
        gbc.setState(0xd27c, 0xfacc, 0x4e80, 0xa56b, 0x86c6, 0xbc6a, 0x1, 0x0);
        gbc.writeMem(0xd27c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xfacc);
        EXPECT(gbc.pc(), 0xd27e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd27c), 0xcb);
        EXPECT(gbc.readMem(0xd27d), 0x62);
        // CB 62 02AF
        gbc.setState(0xb45d, 0x2b33, 0x6210, 0xfc1d, 0x908a, 0x93bc, 0x0, 0x1);
        gbc.writeMem(0xb45d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x2b33);
        EXPECT(gbc.pc(), 0xb45f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb45d), 0xcb);
        EXPECT(gbc.readMem(0xb45e), 0x62);
        // CB 62 02B0
        gbc.setState(0xe62c, 0x990e, 0x9e70, 0x7fa4, 0xf4d0, 0x938d, 0x1, 0x0);
        gbc.writeMem(0xe62c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x990e);
        EXPECT(gbc.pc(), 0xe62e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe62c), 0xcb);
        EXPECT(gbc.readMem(0xe62d), 0x62);
        // CB 62 02B2
        gbc.setState(0xa9c4, 0x542, 0xcd60, 0xdade, 0xa6e6, 0xb283, 0x0, 0x1);
        gbc.writeMem(0xa9c4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x542);
        EXPECT(gbc.pc(), 0xa9c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9c4), 0xcb);
        EXPECT(gbc.readMem(0xa9c5), 0x62);
        // CB 62 02B3
        gbc.setState(0x18ee, 0xd717, 0x5310, 0x24ea, 0x5ad0, 0xcda4, 0x1, 0x0);
        gbc.writeMem(0x18ee, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd717);
        EXPECT(gbc.pc(), 0x18f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 02B4
        gbc.setState(0x52b1, 0xe94f, 0xbb40, 0x13af, 0xe1a4, 0x3840, 0x1, 0x1);
        gbc.writeMem(0x52b1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe94f);
        EXPECT(gbc.pc(), 0x52b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02B5
        gbc.setState(0x90b3, 0xfbad, 0xa410, 0x927a, 0xbcad, 0x6abb, 0x1, 0x0);
        gbc.writeMem(0x90b3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xfbad);
        EXPECT(gbc.pc(), 0x90b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90b3), 0xcb);
        EXPECT(gbc.readMem(0x90b4), 0x62);
        // CB 62 02B6
        gbc.setState(0x6b4b, 0x1706, 0x7d80, 0x3557, 0xeb2a, 0xf7fe, 0x0, 0x0);
        gbc.writeMem(0x6b4b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x1706);
        EXPECT(gbc.pc(), 0x6b4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02B7
        gbc.setState(0x5506, 0xe195, 0x3e90, 0x8203, 0x9adc, 0x99bc, 0x0, 0x0);
        gbc.writeMem(0x5506, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe195);
        EXPECT(gbc.pc(), 0x5508);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 02B8
        gbc.setState(0x8fcd, 0xed87, 0xb110, 0x11c9, 0xe3a7, 0xc9bb, 0x1, 0x1);
        gbc.writeMem(0x8fcd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xed87);
        EXPECT(gbc.pc(), 0x8fcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fcd), 0xcb);
        EXPECT(gbc.readMem(0x8fce), 0x62);
        // CB 62 02B9
        gbc.setState(0x486e, 0x8d43, 0xa690, 0x8e5a, 0x5d43, 0x4c43, 0x1, 0x0);
        gbc.writeMem(0x486e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x8d43);
        EXPECT(gbc.pc(), 0x4870);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 02BB
        gbc.setState(0x349, 0x2d0c, 0x6150, 0x28b5, 0x834f, 0x516b, 0x1, 0x0);
        gbc.writeMem(0x349, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2d0c);
        EXPECT(gbc.pc(), 0x34b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 02BC
        gbc.setState(0xe76, 0x711, 0xa100, 0x1ecd, 0xe11a, 0x7309, 0x0, 0x0);
        gbc.writeMem(0xe76, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x711);
        EXPECT(gbc.pc(), 0xe78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02BD
        gbc.setState(0x20f0, 0x917c, 0xb0, 0xc059, 0xd997, 0x7276, 0x0, 0x1);
        gbc.writeMem(0x20f0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x917c);
        EXPECT(gbc.pc(), 0x20f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 02BE
        gbc.setState(0x5bf3, 0x9431, 0x23c0, 0xcf55, 0x11b4, 0xfc2b, 0x0, 0x1);
        gbc.writeMem(0x5bf3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x9431);
        EXPECT(gbc.pc(), 0x5bf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02C0
        gbc.setState(0x1699, 0xa20e, 0x87b0, 0xdbf6, 0x8294, 0x7bcb, 0x0, 0x1);
        gbc.writeMem(0x1699, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa20e);
        EXPECT(gbc.pc(), 0x169b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 02C1
        gbc.setState(0xce47, 0x77b8, 0x340, 0x575d, 0x36d7, 0x687c, 0x1, 0x1);
        gbc.writeMem(0xce47, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x77b8);
        EXPECT(gbc.pc(), 0xce49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce47), 0xcb);
        EXPECT(gbc.readMem(0xce48), 0x62);
        // CB 62 02C2
        gbc.setState(0x577a, 0x6090, 0x74a0, 0x4b00, 0x2332, 0xea5, 0x0, 0x0);
        gbc.writeMem(0x577a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6090);
        EXPECT(gbc.pc(), 0x577c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02C3
        gbc.setState(0x24ee, 0x40bf, 0xa720, 0x43e9, 0xd708, 0x7c29, 0x0, 0x0);
        gbc.writeMem(0x24ee, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x40bf);
        EXPECT(gbc.pc(), 0x24f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02C5
        gbc.setState(0x9603, 0xf12e, 0x73e0, 0x30c, 0x256b, 0xac41, 0x0, 0x1);
        gbc.writeMem(0x9603, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xf12e);
        EXPECT(gbc.pc(), 0x9605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9603), 0xcb);
        EXPECT(gbc.readMem(0x9604), 0x62);
        // CB 62 02C6
        gbc.setState(0x32de, 0x7382, 0x360, 0xd17e, 0x3cb0, 0x79a5, 0x1, 0x1);
        gbc.writeMem(0x32de, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x7382);
        EXPECT(gbc.pc(), 0x32e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02C8
        gbc.setState(0x4005, 0x5614, 0x6090, 0x5cb4, 0x915b, 0x75a3, 0x1, 0x1);
        gbc.writeMem(0x4005, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x5614);
        EXPECT(gbc.pc(), 0x4007);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 02C9
        gbc.setState(0x159e, 0xdac0, 0x2dc0, 0xec6a, 0x5e19, 0xaeb1, 0x1, 0x1);
        gbc.writeMem(0x159e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xdac0);
        EXPECT(gbc.pc(), 0x15a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02CA
        gbc.setState(0xc993, 0x2a0b, 0x4010, 0x3f7f, 0x213d, 0x5871, 0x0, 0x0);
        gbc.writeMem(0xc993, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x2a0b);
        EXPECT(gbc.pc(), 0xc995);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc993), 0xcb);
        EXPECT(gbc.readMem(0xc994), 0x62);
        // CB 62 02CB
        gbc.setState(0x6f26, 0x77e6, 0x3a50, 0xe6ed, 0x454b, 0x2b21, 0x1, 0x1);
        gbc.writeMem(0x6f26, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x77e6);
        EXPECT(gbc.pc(), 0x6f28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 02CC
        gbc.setState(0x8efb, 0xc498, 0x71b0, 0xf458, 0xf4b0, 0x89ea, 0x0, 0x0);
        gbc.writeMem(0x8efb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xc498);
        EXPECT(gbc.pc(), 0x8efd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8efb), 0xcb);
        EXPECT(gbc.readMem(0x8efc), 0x62);
        // CB 62 02CD
        gbc.setState(0x6b16, 0x66a2, 0xe110, 0xcf9b, 0xf8ec, 0x4ac5, 0x0, 0x0);
        gbc.writeMem(0x6b16, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x66a2);
        EXPECT(gbc.pc(), 0x6b18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 02CE
        gbc.setState(0xeb2e, 0x977e, 0xa710, 0x3c3a, 0xb08d, 0x5428, 0x1, 0x0);
        gbc.writeMem(0xeb2e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x977e);
        EXPECT(gbc.pc(), 0xeb30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb2e), 0xcb);
        EXPECT(gbc.readMem(0xeb2f), 0x62);
        // CB 62 02CF
        gbc.setState(0x20c5, 0xdf65, 0x5cd0, 0xaa59, 0xddd2, 0xd695, 0x0, 0x0);
        gbc.writeMem(0x20c5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xdf65);
        EXPECT(gbc.pc(), 0x20c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 02D1
        gbc.setState(0x94b4, 0x9671, 0xf430, 0x1b93, 0xc9c3, 0x9ded, 0x0, 0x1);
        gbc.writeMem(0x94b4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9671);
        EXPECT(gbc.pc(), 0x94b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94b4), 0xcb);
        EXPECT(gbc.readMem(0x94b5), 0x62);
        // CB 62 02D2
        gbc.setState(0x27c7, 0xebd1, 0x2560, 0x4aef, 0x2904, 0x1d14, 0x1, 0x0);
        gbc.writeMem(0x27c7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xebd1);
        EXPECT(gbc.pc(), 0x27c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02D3
        gbc.setState(0xc704, 0x5fef, 0xc5c0, 0xfedd, 0x7563, 0x9370, 0x1, 0x0);
        gbc.writeMem(0xc704, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5fef);
        EXPECT(gbc.pc(), 0xc706);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc704), 0xcb);
        EXPECT(gbc.readMem(0xc705), 0x62);
        // CB 62 02D4
        gbc.setState(0xad05, 0xb557, 0xe8a0, 0x3b36, 0xe053, 0xe571, 0x0, 0x0);
        gbc.writeMem(0xad05, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xb557);
        EXPECT(gbc.pc(), 0xad07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad05), 0xcb);
        EXPECT(gbc.readMem(0xad06), 0x62);
        // CB 62 02D5
        gbc.setState(0x1a61, 0x4590, 0x3ba0, 0x1733, 0x7012, 0x212c, 0x0, 0x1);
        gbc.writeMem(0x1a61, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4590);
        EXPECT(gbc.pc(), 0x1a63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02D6
        gbc.setState(0x5afc, 0x2492, 0xa510, 0xff65, 0x7cd8, 0xff5, 0x0, 0x0);
        gbc.writeMem(0x5afc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x2492);
        EXPECT(gbc.pc(), 0x5afe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 02D7
        gbc.setState(0x3d60, 0xc01d, 0x86a0, 0xd0d3, 0xdc33, 0xd7ee, 0x1, 0x1);
        gbc.writeMem(0x3d60, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc01d);
        EXPECT(gbc.pc(), 0x3d62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02D8
        gbc.setState(0x3dcd, 0x1db5, 0x4500, 0x1ef, 0xfd0c, 0xdb2b, 0x1, 0x1);
        gbc.writeMem(0x3dcd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1db5);
        EXPECT(gbc.pc(), 0x3dcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02D9
        gbc.setState(0xa867, 0x39df, 0x5110, 0x8d, 0xb785, 0xca6, 0x1, 0x0);
        gbc.writeMem(0xa867, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x39df);
        EXPECT(gbc.pc(), 0xa869);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa867), 0xcb);
        EXPECT(gbc.readMem(0xa868), 0x62);
        // CB 62 02DA
        gbc.setState(0x2c5, 0xa79c, 0xbef0, 0x8af4, 0xb412, 0x5c6e, 0x1, 0x1);
        gbc.writeMem(0x2c5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa79c);
        EXPECT(gbc.pc(), 0x2c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 02DB
        gbc.setState(0x48dd, 0xcc61, 0xad0, 0xec72, 0xedb2, 0xc369, 0x1, 0x1);
        gbc.writeMem(0x48dd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xcc61);
        EXPECT(gbc.pc(), 0x48df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 02DC
        gbc.setState(0x6830, 0x17ef, 0xfe20, 0xe12, 0x22ee, 0x3df9, 0x0, 0x0);
        gbc.writeMem(0x6830, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x17ef);
        EXPECT(gbc.pc(), 0x6832);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02DD
        gbc.setState(0xe529, 0xa8e9, 0xc100, 0x2d6a, 0x3609, 0xa9e1, 0x0, 0x1);
        gbc.writeMem(0xe529, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa8e9);
        EXPECT(gbc.pc(), 0xe52b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe529), 0xcb);
        EXPECT(gbc.readMem(0xe52a), 0x62);
        // CB 62 02DF
        gbc.setState(0x6964, 0xddd1, 0xc550, 0x46d2, 0xe6da, 0xea1f, 0x1, 0x0);
        gbc.writeMem(0x6964, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xddd1);
        EXPECT(gbc.pc(), 0x6966);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 02E0
        gbc.setState(0x3d29, 0x7da5, 0xfcc0, 0xdb88, 0xecd6, 0x4f35, 0x1, 0x1);
        gbc.writeMem(0x3d29, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x7da5);
        EXPECT(gbc.pc(), 0x3d2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02E1
        gbc.setState(0x8bf3, 0x61ef, 0x8d0, 0x4968, 0x4da7, 0x779b, 0x1, 0x1);
        gbc.writeMem(0x8bf3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x61ef);
        EXPECT(gbc.pc(), 0x8bf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bf3), 0xcb);
        EXPECT(gbc.readMem(0x8bf4), 0x62);
        // CB 62 02E2
        gbc.setState(0x2540, 0x3332, 0xa0d0, 0x817b, 0x1f64, 0xdb2d, 0x0, 0x1);
        gbc.writeMem(0x2540, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x3332);
        EXPECT(gbc.pc(), 0x2542);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 02E3
        gbc.setState(0x4af5, 0x1fe6, 0x20f0, 0xa629, 0xe3bd, 0x135a, 0x0, 0x1);
        gbc.writeMem(0x4af5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1fe6);
        EXPECT(gbc.pc(), 0x4af7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 02E4
        gbc.setState(0x43db, 0x125a, 0x3a20, 0xab70, 0x8e33, 0xd550, 0x0, 0x0);
        gbc.writeMem(0x43db, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x125a);
        EXPECT(gbc.pc(), 0x43dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02E5
        gbc.setState(0x709c, 0x4214, 0x4390, 0x86, 0x8d74, 0x2538, 0x0, 0x0);
        gbc.writeMem(0x709c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4214);
        EXPECT(gbc.pc(), 0x709e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 02E6
        gbc.setState(0xc60c, 0x3d9, 0xccb0, 0x131f, 0xbbf3, 0xf236, 0x0, 0x0);
        gbc.writeMem(0xc60c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3d9);
        EXPECT(gbc.pc(), 0xc60e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc60c), 0xcb);
        EXPECT(gbc.readMem(0xc60d), 0x62);
        // CB 62 02E7
        gbc.setState(0xbfbe, 0x5e5f, 0x5270, 0x9f13, 0x460a, 0x2d3e, 0x1, 0x1);
        gbc.writeMem(0xbfbe, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5e5f);
        EXPECT(gbc.pc(), 0xbfc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfbe), 0xcb);
        EXPECT(gbc.readMem(0xbfbf), 0x62);
        // CB 62 02E8
        gbc.setState(0xb54a, 0x6c7a, 0xb020, 0x5af9, 0x4096, 0xa21c, 0x0, 0x0);
        gbc.writeMem(0xb54a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x6c7a);
        EXPECT(gbc.pc(), 0xb54c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb54a), 0xcb);
        EXPECT(gbc.readMem(0xb54b), 0x62);
        // CB 62 02E9
        gbc.setState(0x4413, 0xebfb, 0x49a0, 0x2e1e, 0x9ef9, 0xa651, 0x1, 0x0);
        gbc.writeMem(0x4413, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xebfb);
        EXPECT(gbc.pc(), 0x4415);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02EA
        gbc.setState(0x9683, 0x9461, 0x7bd0, 0x37da, 0x1323, 0xa4de, 0x1, 0x0);
        gbc.writeMem(0x9683, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x9461);
        EXPECT(gbc.pc(), 0x9685);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9683), 0xcb);
        EXPECT(gbc.readMem(0x9684), 0x62);
        // CB 62 02EB
        gbc.setState(0x73c, 0x1df5, 0x370, 0xa179, 0x8c07, 0x858d, 0x1, 0x0);
        gbc.writeMem(0x73c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1df5);
        EXPECT(gbc.pc(), 0x73e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 02EC
        gbc.setState(0x3814, 0xd015, 0x9600, 0xe029, 0x895d, 0x99, 0x0, 0x0);
        gbc.writeMem(0x3814, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd015);
        EXPECT(gbc.pc(), 0x3816);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02ED
        gbc.setState(0x509d, 0x575, 0xa520, 0x61ca, 0x6c99, 0x9790, 0x0, 0x0);
        gbc.writeMem(0x509d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x575);
        EXPECT(gbc.pc(), 0x509f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02EE
        gbc.setState(0x415c, 0x73d, 0x33c0, 0x25e9, 0x7b6f, 0x46a7, 0x1, 0x0);
        gbc.writeMem(0x415c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x73d);
        EXPECT(gbc.pc(), 0x415e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02EF
        gbc.setState(0x9461, 0x7219, 0xe1f0, 0x4f5, 0xd8, 0xd950, 0x0, 0x0);
        gbc.writeMem(0x9461, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7219);
        EXPECT(gbc.pc(), 0x9463);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9461), 0xcb);
        EXPECT(gbc.readMem(0x9462), 0x62);
        // CB 62 02F0
        gbc.setState(0xea34, 0x9912, 0x9350, 0xa29, 0xa654, 0xb0c0, 0x0, 0x0);
        gbc.writeMem(0xea34, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9912);
        EXPECT(gbc.pc(), 0xea36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea34), 0xcb);
        EXPECT(gbc.readMem(0xea35), 0x62);
        // CB 62 02F2
        gbc.setState(0x97b2, 0xf1f1, 0x83e0, 0xcc9a, 0x9632, 0x9f41, 0x1, 0x1);
        gbc.writeMem(0x97b2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xf1f1);
        EXPECT(gbc.pc(), 0x97b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97b2), 0xcb);
        EXPECT(gbc.readMem(0x97b3), 0x62);
        // CB 62 02F3
        gbc.setState(0x6869, 0x4603, 0x33f0, 0x44a1, 0x5695, 0x505b, 0x1, 0x1);
        gbc.writeMem(0x6869, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4603);
        EXPECT(gbc.pc(), 0x686b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 02F4
        gbc.setState(0x94eb, 0xfecb, 0x2450, 0xd1b5, 0x5f1a, 0x9353, 0x1, 0x0);
        gbc.writeMem(0x94eb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xfecb);
        EXPECT(gbc.pc(), 0x94ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94eb), 0xcb);
        EXPECT(gbc.readMem(0x94ec), 0x62);
        // CB 62 02F5
        gbc.setState(0xb9e4, 0x5292, 0x5040, 0xa9de, 0x93d, 0x2c58, 0x1, 0x0);
        gbc.writeMem(0xb9e4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5292);
        EXPECT(gbc.pc(), 0xb9e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9e4), 0xcb);
        EXPECT(gbc.readMem(0xb9e5), 0x62);
        // CB 62 02F6
        gbc.setState(0x26f, 0xbc3e, 0x1f0, 0xa32d, 0xc890, 0xce65, 0x1, 0x1);
        gbc.writeMem(0x26f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xbc3e);
        EXPECT(gbc.pc(), 0x271);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 02F7
        gbc.setState(0xc79b, 0x1b84, 0x7470, 0x4818, 0xdf22, 0x244d, 0x1, 0x0);
        gbc.writeMem(0xc79b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x1b84);
        EXPECT(gbc.pc(), 0xc79d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc79b), 0xcb);
        EXPECT(gbc.readMem(0xc79c), 0x62);
        // CB 62 02F8
        gbc.setState(0x1518, 0x4ade, 0xb440, 0xed90, 0xebd3, 0xc11c, 0x1, 0x0);
        gbc.writeMem(0x1518, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x4ade);
        EXPECT(gbc.pc(), 0x151a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02F9
        gbc.setState(0x642a, 0x8683, 0x8500, 0x940e, 0x7c1e, 0xbe89, 0x1, 0x1);
        gbc.writeMem(0x642a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x8683);
        EXPECT(gbc.pc(), 0x642c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 02FA
        gbc.setState(0xd691, 0x1429, 0xaa50, 0x2971, 0x2f65, 0xe02a, 0x0, 0x0);
        gbc.writeMem(0xd691, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1429);
        EXPECT(gbc.pc(), 0xd693);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd691), 0xcb);
        EXPECT(gbc.readMem(0xd692), 0x62);
        // CB 62 02FB
        gbc.setState(0x826d, 0x6101, 0x66c0, 0xc0d2, 0x6254, 0x237d, 0x1, 0x0);
        gbc.writeMem(0x826d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x6101);
        EXPECT(gbc.pc(), 0x826f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x826d), 0xcb);
        EXPECT(gbc.readMem(0x826e), 0x62);
        // CB 62 02FC
        gbc.setState(0x2d0f, 0x92c8, 0x7110, 0x6dfa, 0x5252, 0x5799, 0x0, 0x1);
        gbc.writeMem(0x2d0f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x92c8);
        EXPECT(gbc.pc(), 0x2d11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 02FD
        gbc.setState(0x8add, 0x304f, 0xc030, 0xd638, 0xd200, 0x7140, 0x0, 0x0);
        gbc.writeMem(0x8add, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x304f);
        EXPECT(gbc.pc(), 0x8adf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8add), 0xcb);
        EXPECT(gbc.readMem(0x8ade), 0x62);
        // CB 62 02FE
        gbc.setState(0x94a6, 0x114e, 0x1b60, 0xe78d, 0xd76, 0xa306, 0x1, 0x0);
        gbc.writeMem(0x94a6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x114e);
        EXPECT(gbc.pc(), 0x94a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94a6), 0xcb);
        EXPECT(gbc.readMem(0x94a7), 0x62);
        // CB 62 02FF
        gbc.setState(0x4a01, 0x6488, 0x3fd0, 0xe554, 0xda69, 0x70a2, 0x0, 0x0);
        gbc.writeMem(0x4a01, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x6488);
        EXPECT(gbc.pc(), 0x4a03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0300
        gbc.setState(0xc4c9, 0x312, 0x7c00, 0x89b7, 0x769d, 0x2f64, 0x1, 0x1);
        gbc.writeMem(0xc4c9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x312);
        EXPECT(gbc.pc(), 0xc4cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4c9), 0xcb);
        EXPECT(gbc.readMem(0xc4ca), 0x62);
        // CB 62 0301
        gbc.setState(0x964, 0x397a, 0x9270, 0x8175, 0x8b77, 0xcce1, 0x0, 0x0);
        gbc.writeMem(0x964, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x397a);
        EXPECT(gbc.pc(), 0x966);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0302
        gbc.setState(0xc59d, 0x63ff, 0xc020, 0xa8bc, 0xf66e, 0x835b, 0x1, 0x1);
        gbc.writeMem(0xc59d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x63ff);
        EXPECT(gbc.pc(), 0xc59f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc59d), 0xcb);
        EXPECT(gbc.readMem(0xc59e), 0x62);
        // CB 62 0303
        gbc.setState(0x4ee5, 0x6a8d, 0x80, 0x150e, 0x2ede, 0x2390, 0x0, 0x1);
        gbc.writeMem(0x4ee5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x6a8d);
        EXPECT(gbc.pc(), 0x4ee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0304
        gbc.setState(0xace2, 0xa99a, 0x9890, 0x1a5c, 0x25da, 0x8eec, 0x1, 0x1);
        gbc.writeMem(0xace2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xa99a);
        EXPECT(gbc.pc(), 0xace4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xace2), 0xcb);
        EXPECT(gbc.readMem(0xace3), 0x62);
        // CB 62 0305
        gbc.setState(0x8248, 0x14e3, 0x76c0, 0x438, 0x5518, 0x96ba, 0x1, 0x0);
        gbc.writeMem(0x8248, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x14e3);
        EXPECT(gbc.pc(), 0x824a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8248), 0xcb);
        EXPECT(gbc.readMem(0x8249), 0x62);
        // CB 62 0306
        gbc.setState(0x83fa, 0x1fc9, 0x2280, 0x577d, 0x387c, 0x905a, 0x1, 0x0);
        gbc.writeMem(0x83fa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1fc9);
        EXPECT(gbc.pc(), 0x83fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83fa), 0xcb);
        EXPECT(gbc.readMem(0x83fb), 0x62);
        // CB 62 0307
        gbc.setState(0x25b7, 0xebf1, 0x4410, 0x9ad0, 0xb59d, 0x1654, 0x0, 0x0);
        gbc.writeMem(0x25b7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xebf1);
        EXPECT(gbc.pc(), 0x25b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0308
        gbc.setState(0x1496, 0xa5a5, 0x9ae0, 0xb4b7, 0xe1de, 0x8a99, 0x0, 0x1);
        gbc.writeMem(0x1496, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xa5a5);
        EXPECT(gbc.pc(), 0x1498);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0309
        gbc.setState(0xdae1, 0x4827, 0x3ed0, 0x6565, 0x690b, 0x64de, 0x1, 0x1);
        gbc.writeMem(0xdae1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4827);
        EXPECT(gbc.pc(), 0xdae3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdae1), 0xcb);
        EXPECT(gbc.readMem(0xdae2), 0x62);
        // CB 62 030A
        gbc.setState(0x3b1, 0x80cb, 0xec00, 0xe6e, 0x73b1, 0x6e67, 0x0, 0x0);
        gbc.writeMem(0x3b1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x80cb);
        EXPECT(gbc.pc(), 0x3b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 030B
        gbc.setState(0x9476, 0xb837, 0x7440, 0x60f4, 0x975e, 0x3248, 0x0, 0x0);
        gbc.writeMem(0x9476, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb837);
        EXPECT(gbc.pc(), 0x9478);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9476), 0xcb);
        EXPECT(gbc.readMem(0x9477), 0x62);
        // CB 62 030C
        gbc.setState(0xd971, 0x80b8, 0x38a0, 0xda6a, 0xa36d, 0x9e8d, 0x0, 0x0);
        gbc.writeMem(0xd971, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x80b8);
        EXPECT(gbc.pc(), 0xd973);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd971), 0xcb);
        EXPECT(gbc.readMem(0xd972), 0x62);
        // CB 62 030D
        gbc.setState(0xa5e1, 0x6757, 0xf540, 0x7eee, 0x30dc, 0x27e2, 0x1, 0x1);
        gbc.writeMem(0xa5e1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x6757);
        EXPECT(gbc.pc(), 0xa5e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5e1), 0xcb);
        EXPECT(gbc.readMem(0xa5e2), 0x62);
        // CB 62 030E
        gbc.setState(0x3d2f, 0xcb7c, 0xb800, 0x8f0f, 0x99ca, 0x622b, 0x1, 0x1);
        gbc.writeMem(0x3d2f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xcb7c);
        EXPECT(gbc.pc(), 0x3d31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 030F
        gbc.setState(0xe3f4, 0x7646, 0xbfa0, 0x9561, 0x3a63, 0x8d85, 0x1, 0x1);
        gbc.writeMem(0xe3f4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x7646);
        EXPECT(gbc.pc(), 0xe3f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3f4), 0xcb);
        EXPECT(gbc.readMem(0xe3f5), 0x62);
        // CB 62 0312
        gbc.setState(0x8390, 0x8df7, 0xfe30, 0xfa07, 0x59d7, 0x4d06, 0x1, 0x1);
        gbc.writeMem(0x8390, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x8df7);
        EXPECT(gbc.pc(), 0x8392);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8390), 0xcb);
        EXPECT(gbc.readMem(0x8391), 0x62);
        // CB 62 0314
        gbc.setState(0xb32e, 0x371d, 0x5a20, 0x5962, 0x2edc, 0xbda6, 0x1, 0x1);
        gbc.writeMem(0xb32e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x371d);
        EXPECT(gbc.pc(), 0xb330);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb32e), 0xcb);
        EXPECT(gbc.readMem(0xb32f), 0x62);
        // CB 62 0315
        gbc.setState(0x5013, 0x4b39, 0x8e90, 0x996c, 0xbe3f, 0x2662, 0x1, 0x0);
        gbc.writeMem(0x5013, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4b39);
        EXPECT(gbc.pc(), 0x5015);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0316
        gbc.setState(0x4d5f, 0x2c18, 0x4f00, 0x5c33, 0x9e9e, 0x6915, 0x1, 0x0);
        gbc.writeMem(0x4d5f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x2c18);
        EXPECT(gbc.pc(), 0x4d61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0317
        gbc.setState(0x93df, 0x4ce9, 0xc30, 0x36b4, 0xac52, 0x24d9, 0x1, 0x1);
        gbc.writeMem(0x93df, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4ce9);
        EXPECT(gbc.pc(), 0x93e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93df), 0xcb);
        EXPECT(gbc.readMem(0x93e0), 0x62);
        // CB 62 0318
        gbc.setState(0x6199, 0x73dd, 0x27d0, 0xd312, 0x3733, 0x8a57, 0x1, 0x1);
        gbc.writeMem(0x6199, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x73dd);
        EXPECT(gbc.pc(), 0x619b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0319
        gbc.setState(0x7876, 0x7646, 0x47f0, 0x99aa, 0xfbbe, 0xd0ed, 0x1, 0x0);
        gbc.writeMem(0x7876, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x7646);
        EXPECT(gbc.pc(), 0x7878);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 031A
        gbc.setState(0x5a35, 0x5b9a, 0xa0d0, 0xc338, 0x499a, 0x5ff5, 0x1, 0x1);
        gbc.writeMem(0x5a35, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5b9a);
        EXPECT(gbc.pc(), 0x5a37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 031B
        gbc.setState(0x225a, 0xee89, 0xe860, 0x7e2e, 0xf611, 0x6c5c, 0x1, 0x0);
        gbc.writeMem(0x225a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xee89);
        EXPECT(gbc.pc(), 0x225c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 031C
        gbc.setState(0x364b, 0x339, 0x1d30, 0x4975, 0x1eed, 0x3e, 0x0, 0x0);
        gbc.writeMem(0x364b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x339);
        EXPECT(gbc.pc(), 0x364d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 031D
        gbc.setState(0x5fe2, 0xb495, 0xcf30, 0x3bcc, 0x250c, 0xfee3, 0x1, 0x1);
        gbc.writeMem(0x5fe2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xb495);
        EXPECT(gbc.pc(), 0x5fe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 031E
        gbc.setState(0x79f6, 0x5425, 0xdcc0, 0xf71f, 0xebb7, 0xd4c, 0x0, 0x0);
        gbc.writeMem(0x79f6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x5425);
        EXPECT(gbc.pc(), 0x79f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 031F
        gbc.setState(0xa8a9, 0x40ee, 0x71f0, 0x4585, 0x3cfd, 0xc430, 0x0, 0x0);
        gbc.writeMem(0xa8a9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x40ee);
        EXPECT(gbc.pc(), 0xa8ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8a9), 0xcb);
        EXPECT(gbc.readMem(0xa8aa), 0x62);
        // CB 62 0320
        gbc.setState(0x6d37, 0xb70e, 0xa110, 0xe739, 0x9d81, 0x7d95, 0x0, 0x0);
        gbc.writeMem(0x6d37, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb70e);
        EXPECT(gbc.pc(), 0x6d39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0321
        gbc.setState(0x7aa8, 0xad62, 0x3f70, 0x1aff, 0x72da, 0x2271, 0x0, 0x1);
        gbc.writeMem(0x7aa8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xad62);
        EXPECT(gbc.pc(), 0x7aaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0322
        gbc.setState(0xc07c, 0x86c5, 0x3f40, 0xc0c8, 0xc7d4, 0x7e3, 0x1, 0x0);
        gbc.writeMem(0xc07c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x86c5);
        EXPECT(gbc.pc(), 0xc07e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc07c), 0xcb);
        EXPECT(gbc.readMem(0xc07d), 0x62);
        // CB 62 0323
        gbc.setState(0x702c, 0x1b4d, 0x34b0, 0xe2c2, 0x1483, 0xa1e0, 0x0, 0x1);
        gbc.writeMem(0x702c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1b4d);
        EXPECT(gbc.pc(), 0x702e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0324
        gbc.setState(0xba06, 0x5137, 0xba0, 0xd830, 0xe857, 0xdf8b, 0x0, 0x0);
        gbc.writeMem(0xba06, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5137);
        EXPECT(gbc.pc(), 0xba08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba06), 0xcb);
        EXPECT(gbc.readMem(0xba07), 0x62);
        // CB 62 0325
        gbc.setState(0x3d1e, 0xac9e, 0xeec0, 0x89cc, 0xe76a, 0x1258, 0x1, 0x1);
        gbc.writeMem(0x3d1e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xac9e);
        EXPECT(gbc.pc(), 0x3d20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0326
        gbc.setState(0x38e1, 0x757d, 0xc380, 0x7f24, 0xef5f, 0xee98, 0x1, 0x0);
        gbc.writeMem(0x38e1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x757d);
        EXPECT(gbc.pc(), 0x38e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0327
        gbc.setState(0x77e1, 0x334a, 0xf890, 0x267d, 0x3e62, 0x9aa5, 0x1, 0x0);
        gbc.writeMem(0x77e1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x334a);
        EXPECT(gbc.pc(), 0x77e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0328
        gbc.setState(0xbcfb, 0x57a9, 0x9e10, 0x38e4, 0x489a, 0xdd28, 0x1, 0x1);
        gbc.writeMem(0xbcfb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x57a9);
        EXPECT(gbc.pc(), 0xbcfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcfb), 0xcb);
        EXPECT(gbc.readMem(0xbcfc), 0x62);
        // CB 62 0329
        gbc.setState(0x36b6, 0x8bb6, 0xab00, 0xff0e, 0x7b28, 0xb9f3, 0x1, 0x0);
        gbc.writeMem(0x36b6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8bb6);
        EXPECT(gbc.pc(), 0x36b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 032A
        gbc.setState(0x6797, 0x1e1a, 0xcf00, 0xae68, 0xac7b, 0xf6f, 0x1, 0x1);
        gbc.writeMem(0x6797, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1e1a);
        EXPECT(gbc.pc(), 0x6799);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 032B
        gbc.setState(0xe910, 0x239a, 0xa5b0, 0xa8e, 0xc7b5, 0xf026, 0x0, 0x0);
        gbc.writeMem(0xe910, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x239a);
        EXPECT(gbc.pc(), 0xe912);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe910), 0xcb);
        EXPECT(gbc.readMem(0xe911), 0x62);
        // CB 62 032C
        gbc.setState(0xd038, 0xd4ad, 0x5f40, 0x6ba1, 0xe878, 0x14de, 0x0, 0x0);
        gbc.writeMem(0xd038, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xd4ad);
        EXPECT(gbc.pc(), 0xd03a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd038), 0xcb);
        EXPECT(gbc.readMem(0xd039), 0x62);
        // CB 62 032D
        gbc.setState(0x49f7, 0xf0d, 0x2ea0, 0x5580, 0xe065, 0xd465, 0x1, 0x0);
        gbc.writeMem(0x49f7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xf0d);
        EXPECT(gbc.pc(), 0x49f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 032E
        gbc.setState(0x3146, 0xe919, 0x5a70, 0x71e2, 0x7642, 0xea2c, 0x0, 0x1);
        gbc.writeMem(0x3146, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe919);
        EXPECT(gbc.pc(), 0x3148);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 032F
        gbc.setState(0xdc47, 0xe82c, 0x9800, 0xc00e, 0x3d32, 0xb8f0, 0x1, 0x0);
        gbc.writeMem(0xdc47, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xe82c);
        EXPECT(gbc.pc(), 0xdc49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc47), 0xcb);
        EXPECT(gbc.readMem(0xdc48), 0x62);
        // CB 62 0330
        gbc.setState(0x398, 0xfc6c, 0x97b0, 0xf186, 0x35ab, 0x551f, 0x1, 0x0);
        gbc.writeMem(0x398, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xfc6c);
        EXPECT(gbc.pc(), 0x39a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0331
        gbc.setState(0x3ba8, 0x14e8, 0xd1a0, 0x6942, 0xf546, 0x26ef, 0x1, 0x0);
        gbc.writeMem(0x3ba8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x14e8);
        EXPECT(gbc.pc(), 0x3baa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0334
        gbc.setState(0xae50, 0x167f, 0x36f0, 0x6fce, 0xe63e, 0xc529, 0x1, 0x1);
        gbc.writeMem(0xae50, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x167f);
        EXPECT(gbc.pc(), 0xae52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae50), 0xcb);
        EXPECT(gbc.readMem(0xae51), 0x62);
        // CB 62 0335
        gbc.setState(0x2cd1, 0x1d31, 0xa110, 0x3ab4, 0x658, 0x7df, 0x1, 0x0);
        gbc.writeMem(0x2cd1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1d31);
        EXPECT(gbc.pc(), 0x2cd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0336
        gbc.setState(0x58b9, 0xb21e, 0x9ea0, 0xf8fc, 0x3163, 0x675c, 0x0, 0x0);
        gbc.writeMem(0x58b9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb21e);
        EXPECT(gbc.pc(), 0x58bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0337
        gbc.setState(0x61c3, 0x8e59, 0x4d40, 0x5c3a, 0xb962, 0xace, 0x0, 0x1);
        gbc.writeMem(0x61c3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x8e59);
        EXPECT(gbc.pc(), 0x61c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0338
        gbc.setState(0xd70b, 0x2ff2, 0xb360, 0x6e52, 0xcddb, 0x5870, 0x1, 0x0);
        gbc.writeMem(0xd70b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2ff2);
        EXPECT(gbc.pc(), 0xd70d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd70b), 0xcb);
        EXPECT(gbc.readMem(0xd70c), 0x62);
        // CB 62 0339
        gbc.setState(0xedfc, 0xa470, 0x4920, 0x1315, 0xcf3e, 0x52ef, 0x1, 0x0);
        gbc.writeMem(0xedfc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa470);
        EXPECT(gbc.pc(), 0xedfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedfc), 0xcb);
        EXPECT(gbc.readMem(0xedfd), 0x62);
        // CB 62 033A
        gbc.setState(0x173d, 0x8b85, 0x4f10, 0x78c5, 0x870e, 0x661d, 0x0, 0x1);
        gbc.writeMem(0x173d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x8b85);
        EXPECT(gbc.pc(), 0x173f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 033B
        gbc.setState(0xc6b4, 0x6727, 0x89f0, 0x3080, 0xd4f6, 0x6f6e, 0x1, 0x0);
        gbc.writeMem(0xc6b4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x6727);
        EXPECT(gbc.pc(), 0xc6b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6b4), 0xcb);
        EXPECT(gbc.readMem(0xc6b5), 0x62);
        // CB 62 033C
        gbc.setState(0x5812, 0x16b8, 0x7550, 0x4164, 0x57e9, 0xefb3, 0x1, 0x0);
        gbc.writeMem(0x5812, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x16b8);
        EXPECT(gbc.pc(), 0x5814);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 033D
        gbc.setState(0xb48b, 0xb4ed, 0xd560, 0x6ca9, 0x8b8b, 0x9554, 0x1, 0x0);
        gbc.writeMem(0xb48b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb4ed);
        EXPECT(gbc.pc(), 0xb48d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb48b), 0xcb);
        EXPECT(gbc.readMem(0xb48c), 0x62);
        // CB 62 033E
        gbc.setState(0x7e50, 0xe00b, 0x2700, 0xf0dc, 0xa64c, 0x67c3, 0x0, 0x1);
        gbc.writeMem(0x7e50, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe00b);
        EXPECT(gbc.pc(), 0x7e52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 033F
        gbc.setState(0xa2f9, 0x39ac, 0x7530, 0x75b6, 0x539d, 0xf8e9, 0x1, 0x0);
        gbc.writeMem(0xa2f9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x39ac);
        EXPECT(gbc.pc(), 0xa2fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2f9), 0xcb);
        EXPECT(gbc.readMem(0xa2fa), 0x62);
        // CB 62 0340
        gbc.setState(0x7c83, 0x3a9, 0xcac0, 0x36f3, 0xabc0, 0xf7ad, 0x0, 0x1);
        gbc.writeMem(0x7c83, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x3a9);
        EXPECT(gbc.pc(), 0x7c85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0341
        gbc.setState(0xec58, 0x4050, 0x3140, 0x6384, 0xaaad, 0x2459, 0x1, 0x0);
        gbc.writeMem(0xec58, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4050);
        EXPECT(gbc.pc(), 0xec5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec58), 0xcb);
        EXPECT(gbc.readMem(0xec59), 0x62);
        // CB 62 0342
        gbc.setState(0xbfc5, 0x153c, 0xd940, 0xa5ce, 0xfb21, 0x3e7f, 0x0, 0x0);
        gbc.writeMem(0xbfc5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x153c);
        EXPECT(gbc.pc(), 0xbfc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfc5), 0xcb);
        EXPECT(gbc.readMem(0xbfc6), 0x62);
        // CB 62 0343
        gbc.setState(0xeb6c, 0xc7c4, 0xf6b0, 0x582b, 0xa2d5, 0x4c5e, 0x0, 0x0);
        gbc.writeMem(0xeb6c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc7c4);
        EXPECT(gbc.pc(), 0xeb6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb6c), 0xcb);
        EXPECT(gbc.readMem(0xeb6d), 0x62);
        // CB 62 0344
        gbc.setState(0xba4e, 0x73ef, 0x19c0, 0x641c, 0x4059, 0xc76b, 0x0, 0x1);
        gbc.writeMem(0xba4e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x73ef);
        EXPECT(gbc.pc(), 0xba50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba4e), 0xcb);
        EXPECT(gbc.readMem(0xba4f), 0x62);
        // CB 62 0345
        gbc.setState(0x876f, 0xc12a, 0xe190, 0xce23, 0x66cd, 0x36a7, 0x0, 0x1);
        gbc.writeMem(0x876f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc12a);
        EXPECT(gbc.pc(), 0x8771);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x876f), 0xcb);
        EXPECT(gbc.readMem(0x8770), 0x62);
        // CB 62 0346
        gbc.setState(0xdc4b, 0xbd5f, 0x3830, 0x5220, 0x85dd, 0xe6df, 0x0, 0x0);
        gbc.writeMem(0xdc4b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xbd5f);
        EXPECT(gbc.pc(), 0xdc4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc4b), 0xcb);
        EXPECT(gbc.readMem(0xdc4c), 0x62);
        // CB 62 0347
        gbc.setState(0xc3d5, 0xc11c, 0x4470, 0xa861, 0xcb1b, 0xe92c, 0x0, 0x1);
        gbc.writeMem(0xc3d5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc11c);
        EXPECT(gbc.pc(), 0xc3d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3d5), 0xcb);
        EXPECT(gbc.readMem(0xc3d6), 0x62);
        // CB 62 0348
        gbc.setState(0xdcf9, 0x2f06, 0x1c90, 0x982a, 0x5fe6, 0x86e0, 0x1, 0x0);
        gbc.writeMem(0xdcf9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2f06);
        EXPECT(gbc.pc(), 0xdcfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcf9), 0xcb);
        EXPECT(gbc.readMem(0xdcfa), 0x62);
        // CB 62 0349
        gbc.setState(0xed6, 0x8c0c, 0x13d0, 0xfebe, 0x4e4e, 0xe8de, 0x0, 0x1);
        gbc.writeMem(0xed6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x8c0c);
        EXPECT(gbc.pc(), 0xed8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 034A
        gbc.setState(0x9b11, 0xd396, 0x32e0, 0x7760, 0x6d5a, 0x76e3, 0x0, 0x0);
        gbc.writeMem(0x9b11, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xd396);
        EXPECT(gbc.pc(), 0x9b13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b11), 0xcb);
        EXPECT(gbc.readMem(0x9b12), 0x62);
        // CB 62 034B
        gbc.setState(0xbb55, 0x171b, 0x6c50, 0x407, 0xd1da, 0x4738, 0x0, 0x0);
        gbc.writeMem(0xbb55, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x171b);
        EXPECT(gbc.pc(), 0xbb57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb55), 0xcb);
        EXPECT(gbc.readMem(0xbb56), 0x62);
        // CB 62 034C
        gbc.setState(0x75d, 0x736, 0xe290, 0xeb6a, 0xbfe8, 0x8ab3, 0x1, 0x1);
        gbc.writeMem(0x75d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x736);
        EXPECT(gbc.pc(), 0x75f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 034D
        gbc.setState(0xe197, 0x3c19, 0x1900, 0x2371, 0x6b2f, 0x29cf, 0x0, 0x0);
        gbc.writeMem(0xe197, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3c19);
        EXPECT(gbc.pc(), 0xe199);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe197), 0xcb);
        EXPECT(gbc.readMem(0xe198), 0x62);
        // CB 62 034E
        gbc.setState(0x6300, 0xbba3, 0xea40, 0x5847, 0xd0a4, 0xf388, 0x1, 0x1);
        gbc.writeMem(0x6300, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xbba3);
        EXPECT(gbc.pc(), 0x6302);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 034F
        gbc.setState(0x25e, 0x2c1f, 0x11e0, 0xdc66, 0xf242, 0x68d0, 0x0, 0x1);
        gbc.writeMem(0x25e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x2c1f);
        EXPECT(gbc.pc(), 0x260);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0350
        gbc.setState(0x6351, 0x3f27, 0xd030, 0x5002, 0x6e4d, 0xbef9, 0x1, 0x0);
        gbc.writeMem(0x6351, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x3f27);
        EXPECT(gbc.pc(), 0x6353);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0351
        gbc.setState(0x3f4f, 0x6280, 0x1cf0, 0xca, 0xf3b2, 0x76a4, 0x0, 0x1);
        gbc.writeMem(0x3f4f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6280);
        EXPECT(gbc.pc(), 0x3f51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0352
        gbc.setState(0x9cd, 0x709d, 0xa10, 0x865f, 0xac04, 0x843c, 0x0, 0x0);
        gbc.writeMem(0x9cd, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x709d);
        EXPECT(gbc.pc(), 0x9cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0353
        gbc.setState(0x9acc, 0xb96, 0x2fb0, 0x457e, 0x4033, 0x5334, 0x1, 0x0);
        gbc.writeMem(0x9acc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb96);
        EXPECT(gbc.pc(), 0x9ace);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9acc), 0xcb);
        EXPECT(gbc.readMem(0x9acd), 0x62);
        // CB 62 0354
        gbc.setState(0x11a0, 0x2bcc, 0x1d30, 0xf3ad, 0x2764, 0x9538, 0x0, 0x0);
        gbc.writeMem(0x11a0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2bcc);
        EXPECT(gbc.pc(), 0x11a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0355
        gbc.setState(0x668f, 0x2ea, 0x550, 0xf25a, 0x5fff, 0x4b44, 0x0, 0x1);
        gbc.writeMem(0x668f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2ea);
        EXPECT(gbc.pc(), 0x6691);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0356
        gbc.setState(0xd53, 0x7837, 0x63f0, 0xc890, 0x6bcd, 0xe677, 0x1, 0x1);
        gbc.writeMem(0xd53, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7837);
        EXPECT(gbc.pc(), 0xd55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0357
        gbc.setState(0xc588, 0xfa12, 0x4ee0, 0x5041, 0xe170, 0x7aa0, 0x1, 0x1);
        gbc.writeMem(0xc588, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xfa12);
        EXPECT(gbc.pc(), 0xc58a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc588), 0xcb);
        EXPECT(gbc.readMem(0xc589), 0x62);
        // CB 62 0358
        gbc.setState(0x2c7, 0x7178, 0x8450, 0xbab2, 0xf247, 0xe884, 0x0, 0x1);
        gbc.writeMem(0x2c7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7178);
        EXPECT(gbc.pc(), 0x2c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0359
        gbc.setState(0x3483, 0xf536, 0xc870, 0x6ec3, 0x34e4, 0x8ba4, 0x1, 0x1);
        gbc.writeMem(0x3483, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf536);
        EXPECT(gbc.pc(), 0x3485);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 035A
        gbc.setState(0xd230, 0xe622, 0x6ac0, 0x611d, 0xcf50, 0xd2b9, 0x1, 0x1);
        gbc.writeMem(0xd230, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe622);
        EXPECT(gbc.pc(), 0xd232);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd230), 0xcb);
        EXPECT(gbc.readMem(0xd231), 0x62);
        // CB 62 035B
        gbc.setState(0x7b2a, 0x8ba3, 0x5850, 0xb47c, 0x17fc, 0xee3c, 0x0, 0x1);
        gbc.writeMem(0x7b2a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8ba3);
        EXPECT(gbc.pc(), 0x7b2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 035D
        gbc.setState(0x35fc, 0xcc5d, 0x8b80, 0x5999, 0x49ba, 0x484a, 0x1, 0x0);
        gbc.writeMem(0x35fc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xcc5d);
        EXPECT(gbc.pc(), 0x35fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 035F
        gbc.setState(0xdc1, 0x4e69, 0x8130, 0x46f4, 0x4fa, 0xe886, 0x0, 0x0);
        gbc.writeMem(0xdc1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4e69);
        EXPECT(gbc.pc(), 0xdc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0360
        gbc.setState(0x8184, 0xa039, 0xde10, 0xa02c, 0x35d2, 0x5252, 0x1, 0x0);
        gbc.writeMem(0x8184, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa039);
        EXPECT(gbc.pc(), 0x8186);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8184), 0xcb);
        EXPECT(gbc.readMem(0x8185), 0x62);
        // CB 62 0361
        gbc.setState(0x410, 0x39a3, 0xd90, 0xd0a5, 0x4ced, 0x4971, 0x0, 0x0);
        gbc.writeMem(0x410, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x39a3);
        EXPECT(gbc.pc(), 0x412);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0362
        gbc.setState(0x1157, 0x45de, 0x3b40, 0xef0c, 0x364a, 0x968f, 0x1, 0x1);
        gbc.writeMem(0x1157, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x45de);
        EXPECT(gbc.pc(), 0x1159);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0363
        gbc.setState(0x114f, 0x2143, 0xecf0, 0x30c3, 0x6e5d, 0xbd11, 0x0, 0x0);
        gbc.writeMem(0x114f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2143);
        EXPECT(gbc.pc(), 0x1151);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0364
        gbc.setState(0x6aa3, 0x98da, 0x3830, 0x6128, 0xcf3, 0x754c, 0x1, 0x1);
        gbc.writeMem(0x6aa3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x98da);
        EXPECT(gbc.pc(), 0x6aa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0365
        gbc.setState(0xe023, 0x3475, 0xf4b0, 0x75f, 0xe4a6, 0x6190, 0x1, 0x1);
        gbc.writeMem(0xe023, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3475);
        EXPECT(gbc.pc(), 0xe025);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe023), 0xcb);
        EXPECT(gbc.readMem(0xe024), 0x62);
        // CB 62 0366
        gbc.setState(0xc7ff, 0xcf52, 0x2c0, 0x9a99, 0x6bd, 0x6426, 0x1, 0x1);
        gbc.writeMem(0xc7ff, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xcf52);
        EXPECT(gbc.pc(), 0xc801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7ff), 0xcb);
        EXPECT(gbc.readMem(0xc800), 0x62);
        // CB 62 0367
        gbc.setState(0xb2f6, 0xe03d, 0xb1a0, 0x9817, 0x5f2a, 0x2f2d, 0x1, 0x1);
        gbc.writeMem(0xb2f6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe03d);
        EXPECT(gbc.pc(), 0xb2f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2f6), 0xcb);
        EXPECT(gbc.readMem(0xb2f7), 0x62);
        // CB 62 0368
        gbc.setState(0xd89a, 0x362a, 0x1c90, 0x90ec, 0x8b11, 0xd42b, 0x0, 0x1);
        gbc.writeMem(0xd89a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x362a);
        EXPECT(gbc.pc(), 0xd89c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd89a), 0xcb);
        EXPECT(gbc.readMem(0xd89b), 0x62);
        // CB 62 0369
        gbc.setState(0x6fa2, 0x3b2c, 0xd00, 0x15e6, 0x9561, 0xf017, 0x0, 0x0);
        gbc.writeMem(0x6fa2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x3b2c);
        EXPECT(gbc.pc(), 0x6fa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 036A
        gbc.setState(0xa533, 0xb3d2, 0x8aa0, 0x6b, 0x8df, 0xf8e3, 0x1, 0x1);
        gbc.writeMem(0xa533, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xb3d2);
        EXPECT(gbc.pc(), 0xa535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa533), 0xcb);
        EXPECT(gbc.readMem(0xa534), 0x62);
        // CB 62 036B
        gbc.setState(0x847f, 0x8627, 0x1ed0, 0x575c, 0x5b5, 0x3195, 0x0, 0x1);
        gbc.writeMem(0x847f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8627);
        EXPECT(gbc.pc(), 0x8481);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x847f), 0xcb);
        EXPECT(gbc.readMem(0x8480), 0x62);
        // CB 62 036C
        gbc.setState(0xb54, 0xbd7d, 0xad10, 0x45c6, 0xf61e, 0x7080, 0x0, 0x0);
        gbc.writeMem(0xb54, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xbd7d);
        EXPECT(gbc.pc(), 0xb56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 036D
        gbc.setState(0x90c3, 0xff1d, 0xad40, 0xe31d, 0x55b5, 0x6bf7, 0x0, 0x0);
        gbc.writeMem(0x90c3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xff1d);
        EXPECT(gbc.pc(), 0x90c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90c3), 0xcb);
        EXPECT(gbc.readMem(0x90c4), 0x62);
        // CB 62 036E
        gbc.setState(0x74bb, 0x38d3, 0x86c0, 0x534b, 0xfc1a, 0xc646, 0x1, 0x1);
        gbc.writeMem(0x74bb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x38d3);
        EXPECT(gbc.pc(), 0x74bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 036F
        gbc.setState(0xd7d9, 0x4b0d, 0x7e60, 0x5e97, 0xb36d, 0x804b, 0x1, 0x1);
        gbc.writeMem(0xd7d9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4b0d);
        EXPECT(gbc.pc(), 0xd7db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7d9), 0xcb);
        EXPECT(gbc.readMem(0xd7da), 0x62);
        // CB 62 0370
        gbc.setState(0x1379, 0x9288, 0xbb00, 0xd757, 0xfc60, 0xb7f, 0x1, 0x0);
        gbc.writeMem(0x1379, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x9288);
        EXPECT(gbc.pc(), 0x137b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0371
        gbc.setState(0x65f0, 0x478b, 0x4860, 0x837b, 0xb3ca, 0x166, 0x1, 0x1);
        gbc.writeMem(0x65f0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x478b);
        EXPECT(gbc.pc(), 0x65f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0372
        gbc.setState(0xebb4, 0x44eb, 0x8410, 0xb759, 0x3453, 0x2767, 0x0, 0x1);
        gbc.writeMem(0xebb4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x44eb);
        EXPECT(gbc.pc(), 0xebb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebb4), 0xcb);
        EXPECT(gbc.readMem(0xebb5), 0x62);
        // CB 62 0373
        gbc.setState(0xd05d, 0x932a, 0xbea0, 0xe87, 0xc3da, 0x5033, 0x0, 0x1);
        gbc.writeMem(0xd05d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x932a);
        EXPECT(gbc.pc(), 0xd05f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd05d), 0xcb);
        EXPECT(gbc.readMem(0xd05e), 0x62);
        // CB 62 0374
        gbc.setState(0x97cc, 0x17ad, 0x8560, 0xbd4d, 0x9c0a, 0x59d0, 0x1, 0x0);
        gbc.writeMem(0x97cc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x17ad);
        EXPECT(gbc.pc(), 0x97ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97cc), 0xcb);
        EXPECT(gbc.readMem(0x97cd), 0x62);
        // CB 62 0375
        gbc.setState(0xb8f9, 0x29de, 0x61e0, 0x4caa, 0xad8d, 0x33e2, 0x0, 0x1);
        gbc.writeMem(0xb8f9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x29de);
        EXPECT(gbc.pc(), 0xb8fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8f9), 0xcb);
        EXPECT(gbc.readMem(0xb8fa), 0x62);
        // CB 62 0376
        gbc.setState(0xe381, 0x960e, 0xa480, 0xa077, 0x1735, 0x2b22, 0x1, 0x1);
        gbc.writeMem(0xe381, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x960e);
        EXPECT(gbc.pc(), 0xe383);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe381), 0xcb);
        EXPECT(gbc.readMem(0xe382), 0x62);
        // CB 62 0377
        gbc.setState(0x8ced, 0x9cb6, 0xe8e0, 0xc1a7, 0x7df6, 0x9eae, 0x1, 0x0);
        gbc.writeMem(0x8ced, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x9cb6);
        EXPECT(gbc.pc(), 0x8cef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ced), 0xcb);
        EXPECT(gbc.readMem(0x8cee), 0x62);
        // CB 62 0378
        gbc.setState(0xe88a, 0xf658, 0x36e0, 0x6df1, 0xb7c6, 0x1005, 0x1, 0x0);
        gbc.writeMem(0xe88a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xf658);
        EXPECT(gbc.pc(), 0xe88c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe88a), 0xcb);
        EXPECT(gbc.readMem(0xe88b), 0x62);
        // CB 62 0379
        gbc.setState(0x10bc, 0x7705, 0xaf70, 0x7f4, 0xbcf9, 0x89af, 0x1, 0x1);
        gbc.writeMem(0x10bc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7705);
        EXPECT(gbc.pc(), 0x10be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 037A
        gbc.setState(0x42c, 0xcc51, 0xffa0, 0x456c, 0xbc98, 0xdc83, 0x0, 0x0);
        gbc.writeMem(0x42c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xcc51);
        EXPECT(gbc.pc(), 0x42e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 037B
        gbc.setState(0xa541, 0x9295, 0x3180, 0x7a7f, 0xbace, 0x73ea, 0x1, 0x1);
        gbc.writeMem(0xa541, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9295);
        EXPECT(gbc.pc(), 0xa543);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa541), 0xcb);
        EXPECT(gbc.readMem(0xa542), 0x62);
        // CB 62 037C
        gbc.setState(0x8923, 0x7abe, 0x1c60, 0x46b4, 0x6760, 0xe735, 0x0, 0x0);
        gbc.writeMem(0x8923, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x7abe);
        EXPECT(gbc.pc(), 0x8925);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8923), 0xcb);
        EXPECT(gbc.readMem(0x8924), 0x62);
        // CB 62 037D
        gbc.setState(0xd413, 0x147f, 0x9be0, 0xf286, 0x2bb3, 0x4fcb, 0x0, 0x0);
        gbc.writeMem(0xd413, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x147f);
        EXPECT(gbc.pc(), 0xd415);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd413), 0xcb);
        EXPECT(gbc.readMem(0xd414), 0x62);
        // CB 62 037E
        gbc.setState(0x901, 0xdca3, 0x7ab0, 0x4f4e, 0xe89f, 0xa003, 0x0, 0x0);
        gbc.writeMem(0x901, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xdca3);
        EXPECT(gbc.pc(), 0x903);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0380
        gbc.setState(0xe4ba, 0x47ff, 0x6e70, 0x8a59, 0x53c5, 0xb0d6, 0x1, 0x1);
        gbc.writeMem(0xe4ba, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x47ff);
        EXPECT(gbc.pc(), 0xe4bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4ba), 0xcb);
        EXPECT(gbc.readMem(0xe4bb), 0x62);
        // CB 62 0381
        gbc.setState(0x327, 0xe0b2, 0x5150, 0xf39f, 0xa0df, 0x5360, 0x0, 0x0);
        gbc.writeMem(0x327, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe0b2);
        EXPECT(gbc.pc(), 0x329);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0382
        gbc.setState(0xaf4b, 0x1b0e, 0x4600, 0xa97b, 0x20d6, 0x381f, 0x1, 0x0);
        gbc.writeMem(0xaf4b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x1b0e);
        EXPECT(gbc.pc(), 0xaf4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf4b), 0xcb);
        EXPECT(gbc.readMem(0xaf4c), 0x62);
        // CB 62 0383
        gbc.setState(0x8780, 0x87e0, 0x46b0, 0x304f, 0x148b, 0x7eb2, 0x0, 0x1);
        gbc.writeMem(0x8780, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x87e0);
        EXPECT(gbc.pc(), 0x8782);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8780), 0xcb);
        EXPECT(gbc.readMem(0x8781), 0x62);
        // CB 62 0384
        gbc.setState(0x27d6, 0x94a9, 0xa770, 0x1a, 0xce42, 0x3a9e, 0x0, 0x1);
        gbc.writeMem(0x27d6, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x94a9);
        EXPECT(gbc.pc(), 0x27d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0385
        gbc.setState(0x6e48, 0xbb4e, 0x7620, 0x15ce, 0x3e6e, 0x16db, 0x0, 0x1);
        gbc.writeMem(0x6e48, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xbb4e);
        EXPECT(gbc.pc(), 0x6e4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0386
        gbc.setState(0xbb64, 0x77ed, 0x5e30, 0x801b, 0xd946, 0x7f47, 0x0, 0x0);
        gbc.writeMem(0xbb64, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x77ed);
        EXPECT(gbc.pc(), 0xbb66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb64), 0xcb);
        EXPECT(gbc.readMem(0xbb65), 0x62);
        // CB 62 0387
        gbc.setState(0x8fb9, 0x7419, 0xad90, 0xf51c, 0xdd39, 0x19a4, 0x1, 0x1);
        gbc.writeMem(0x8fb9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7419);
        EXPECT(gbc.pc(), 0x8fbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fb9), 0xcb);
        EXPECT(gbc.readMem(0x8fba), 0x62);
        // CB 62 0389
        gbc.setState(0xbf2f, 0x70c8, 0x24c0, 0x31b0, 0xc90a, 0xe722, 0x0, 0x1);
        gbc.writeMem(0xbf2f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x70c8);
        EXPECT(gbc.pc(), 0xbf31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf2f), 0xcb);
        EXPECT(gbc.readMem(0xbf30), 0x62);
        // CB 62 038A
        gbc.setState(0x9432, 0xfae, 0x3760, 0x3d4e, 0x5092, 0x5927, 0x1, 0x0);
        gbc.writeMem(0x9432, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xfae);
        EXPECT(gbc.pc(), 0x9434);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9432), 0xcb);
        EXPECT(gbc.readMem(0x9433), 0x62);
        // CB 62 038B
        gbc.setState(0xeaaf, 0xbdc5, 0xebd0, 0x5f99, 0x9e95, 0xb621, 0x0, 0x0);
        gbc.writeMem(0xeaaf, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xbdc5);
        EXPECT(gbc.pc(), 0xeab1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaaf), 0xcb);
        EXPECT(gbc.readMem(0xeab0), 0x62);
        // CB 62 038C
        gbc.setState(0xdaf8, 0xd8ca, 0x9220, 0x591c, 0x7789, 0x7e5b, 0x1, 0x0);
        gbc.writeMem(0xdaf8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd8ca);
        EXPECT(gbc.pc(), 0xdafa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaf8), 0xcb);
        EXPECT(gbc.readMem(0xdaf9), 0x62);
        // CB 62 038D
        gbc.setState(0x200c, 0xff98, 0x67f0, 0xc2f8, 0x2427, 0xf406, 0x0, 0x1);
        gbc.writeMem(0x200c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xff98);
        EXPECT(gbc.pc(), 0x200e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 038E
        gbc.setState(0x320a, 0x4466, 0xa5f0, 0x9ef2, 0x15b9, 0x24a9, 0x0, 0x1);
        gbc.writeMem(0x320a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x4466);
        EXPECT(gbc.pc(), 0x320c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 038F
        gbc.setState(0xa246, 0x1a38, 0xf740, 0xfbf2, 0xe07e, 0x3a63, 0x0, 0x1);
        gbc.writeMem(0xa246, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x1a38);
        EXPECT(gbc.pc(), 0xa248);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa246), 0xcb);
        EXPECT(gbc.readMem(0xa247), 0x62);
        // CB 62 0390
        gbc.setState(0x30e8, 0xc2b9, 0x41f0, 0x14fe, 0x4186, 0xf10f, 0x0, 0x0);
        gbc.writeMem(0x30e8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xc2b9);
        EXPECT(gbc.pc(), 0x30ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0391
        gbc.setState(0xd1d7, 0x4fae, 0x20e0, 0x3ca0, 0x7ad6, 0x3cfc, 0x0, 0x1);
        gbc.writeMem(0xd1d7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x4fae);
        EXPECT(gbc.pc(), 0xd1d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1d7), 0xcb);
        EXPECT(gbc.readMem(0xd1d8), 0x62);
        // CB 62 0393
        gbc.setState(0xac07, 0x8f6a, 0x4450, 0xc4fd, 0x94f1, 0x254e, 0x1, 0x0);
        gbc.writeMem(0xac07, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x8f6a);
        EXPECT(gbc.pc(), 0xac09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac07), 0xcb);
        EXPECT(gbc.readMem(0xac08), 0x62);
        // CB 62 0394
        gbc.setState(0x90ab, 0x49b4, 0x27d0, 0xcf8d, 0xad36, 0x700e, 0x1, 0x0);
        gbc.writeMem(0x90ab, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x49b4);
        EXPECT(gbc.pc(), 0x90ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90ab), 0xcb);
        EXPECT(gbc.readMem(0x90ac), 0x62);
        // CB 62 0395
        gbc.setState(0x2439, 0xc3dd, 0x2dd0, 0xb3b4, 0xad38, 0x29a4, 0x1, 0x0);
        gbc.writeMem(0x2439, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xc3dd);
        EXPECT(gbc.pc(), 0x243b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0396
        gbc.setState(0x1c43, 0xb40f, 0x9a00, 0xea89, 0xaef, 0x5254, 0x1, 0x1);
        gbc.writeMem(0x1c43, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb40f);
        EXPECT(gbc.pc(), 0x1c45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 0397
        gbc.setState(0x6bf, 0xecbc, 0x8b0, 0x9b2a, 0xe602, 0x8eb8, 0x0, 0x0);
        gbc.writeMem(0x6bf, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xecbc);
        EXPECT(gbc.pc(), 0x6c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 0398
        gbc.setState(0x847e, 0x5074, 0xd6a0, 0xce54, 0x3ac4, 0x28a4, 0x1, 0x1);
        gbc.writeMem(0x847e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x5074);
        EXPECT(gbc.pc(), 0x8480);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x847e), 0xcb);
        EXPECT(gbc.readMem(0x847f), 0x62);
        // CB 62 0399
        gbc.setState(0x73eb, 0xa8b1, 0xfca0, 0xafbf, 0xd4bf, 0xcedb, 0x0, 0x1);
        gbc.writeMem(0x73eb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa8b1);
        EXPECT(gbc.pc(), 0x73ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 039A
        gbc.setState(0x54e2, 0xbad6, 0x7770, 0xff41, 0xb631, 0xb516, 0x0, 0x1);
        gbc.writeMem(0x54e2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xbad6);
        EXPECT(gbc.pc(), 0x54e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 039B
        gbc.setState(0x598f, 0x4465, 0xf520, 0xb0a6, 0xecf3, 0xb1f3, 0x0, 0x0);
        gbc.writeMem(0x598f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x4465);
        EXPECT(gbc.pc(), 0x5991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 039C
        gbc.setState(0xc12, 0x1f80, 0xa200, 0xd60d, 0x9c87, 0xbd75, 0x1, 0x1);
        gbc.writeMem(0xc12, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x1f80);
        EXPECT(gbc.pc(), 0xc14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 039D
        gbc.setState(0x24eb, 0x9455, 0x6200, 0xb5f7, 0xbb56, 0xea75, 0x0, 0x1);
        gbc.writeMem(0x24eb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9455);
        EXPECT(gbc.pc(), 0x24ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 039E
        gbc.setState(0x7bfe, 0xa1fd, 0xe420, 0x3dfc, 0x6279, 0xa85, 0x0, 0x1);
        gbc.writeMem(0x7bfe, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa1fd);
        EXPECT(gbc.pc(), 0x7c00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 039F
        gbc.setState(0x271c, 0xa72d, 0x3fd0, 0x35f4, 0x737e, 0xc85, 0x1, 0x0);
        gbc.writeMem(0x271c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa72d);
        EXPECT(gbc.pc(), 0x271e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 03A0
        gbc.setState(0xad6f, 0x2332, 0x6c40, 0x65f7, 0xfb7a, 0x6c0, 0x1, 0x1);
        gbc.writeMem(0xad6f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x2332);
        EXPECT(gbc.pc(), 0xad71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad6f), 0xcb);
        EXPECT(gbc.readMem(0xad70), 0x62);
        // CB 62 03A1
        gbc.setState(0x6ed7, 0xb9ee, 0x72a0, 0xc35d, 0x498a, 0x8e7, 0x0, 0x1);
        gbc.writeMem(0x6ed7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xb9ee);
        EXPECT(gbc.pc(), 0x6ed9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 03A3
        gbc.setState(0xc963, 0x52b3, 0xc860, 0xa351, 0x3d74, 0xe568, 0x1, 0x1);
        gbc.writeMem(0xc963, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x52b3);
        EXPECT(gbc.pc(), 0xc965);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc963), 0xcb);
        EXPECT(gbc.readMem(0xc964), 0x62);
        // CB 62 03A4
        gbc.setState(0x5aa0, 0x85ec, 0xe310, 0xf959, 0x9212, 0x6e86, 0x0, 0x1);
        gbc.writeMem(0x5aa0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x85ec);
        EXPECT(gbc.pc(), 0x5aa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 03A5
        gbc.setState(0xe68b, 0xc477, 0x91f0, 0x7b1a, 0x2e2b, 0xdd50, 0x0, 0x1);
        gbc.writeMem(0xe68b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc477);
        EXPECT(gbc.pc(), 0xe68d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe68b), 0xcb);
        EXPECT(gbc.readMem(0xe68c), 0x62);
        // CB 62 03A6
        gbc.setState(0xbdd9, 0x4f4e, 0x90f0, 0x1aab, 0x1daa, 0x50fd, 0x0, 0x1);
        gbc.writeMem(0xbdd9, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4f4e);
        EXPECT(gbc.pc(), 0xbddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdd9), 0xcb);
        EXPECT(gbc.readMem(0xbdda), 0x62);
        // CB 62 03A7
        gbc.setState(0x615b, 0xa447, 0x1040, 0x929e, 0x9cc0, 0x2d91, 0x0, 0x1);
        gbc.writeMem(0x615b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xa447);
        EXPECT(gbc.pc(), 0x615d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 03A8
        gbc.setState(0x9feb, 0xa32f, 0x1b20, 0x9341, 0x912d, 0x22bc, 0x0, 0x1);
        gbc.writeMem(0x9feb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa32f);
        EXPECT(gbc.pc(), 0x9fed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9feb), 0xcb);
        EXPECT(gbc.readMem(0x9fec), 0x62);
        // CB 62 03A9
        gbc.setState(0x584d, 0xd3f2, 0x49a0, 0x37a9, 0xc83, 0x4e66, 0x0, 0x0);
        gbc.writeMem(0x584d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xd3f2);
        EXPECT(gbc.pc(), 0x584f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 03AA
        gbc.setState(0xc05b, 0xbd66, 0x8600, 0xdbb0, 0xafd5, 0xefc7, 0x1, 0x0);
        gbc.writeMem(0xc05b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xbd66);
        EXPECT(gbc.pc(), 0xc05d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc05b), 0xcb);
        EXPECT(gbc.readMem(0xc05c), 0x62);
        // CB 62 03AB
        gbc.setState(0xef3b, 0xad59, 0xb360, 0xf71a, 0x198e, 0xb17a, 0x0, 0x1);
        gbc.writeMem(0xef3b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xad59);
        EXPECT(gbc.pc(), 0xef3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef3b), 0xcb);
        EXPECT(gbc.readMem(0xef3c), 0x62);
        // CB 62 03AC
        gbc.setState(0xc41a, 0x3abd, 0x9120, 0xea63, 0xd7f1, 0x7e2d, 0x0, 0x0);
        gbc.writeMem(0xc41a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x3abd);
        EXPECT(gbc.pc(), 0xc41c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc41a), 0xcb);
        EXPECT(gbc.readMem(0xc41b), 0x62);
        // CB 62 03AD
        gbc.setState(0x65e3, 0x8f8a, 0xd00, 0x1d6b, 0x2b7, 0xd6ba, 0x1, 0x1);
        gbc.writeMem(0x65e3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8f8a);
        EXPECT(gbc.pc(), 0x65e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 03AE
        gbc.setState(0x2f9a, 0x8fc9, 0xd550, 0x2177, 0xe9dc, 0x16e0, 0x0, 0x1);
        gbc.writeMem(0x2f9a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8fc9);
        EXPECT(gbc.pc(), 0x2f9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 03AF
        gbc.setState(0x35ea, 0x2f37, 0xebe0, 0xd86, 0x4af1, 0x806b, 0x1, 0x1);
        gbc.writeMem(0x35ea, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2f37);
        EXPECT(gbc.pc(), 0x35ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 03B0
        gbc.setState(0x4016, 0x11d2, 0x2870, 0x2f45, 0xfcd0, 0xf6ce, 0x1, 0x1);
        gbc.writeMem(0x4016, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x11d2);
        EXPECT(gbc.pc(), 0x4018);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 03B1
        gbc.setState(0x2032, 0xcc00, 0x4690, 0xa9fe, 0x36d2, 0x5e4b, 0x1, 0x1);
        gbc.writeMem(0x2032, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xcc00);
        EXPECT(gbc.pc(), 0x2034);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 03B2
        gbc.setState(0x7bf4, 0x383, 0x6190, 0x43c2, 0x17b8, 0xd94a, 0x0, 0x1);
        gbc.writeMem(0x7bf4, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x383);
        EXPECT(gbc.pc(), 0x7bf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 03B3
        gbc.setState(0x4ae1, 0x3a86, 0x5c50, 0x74fb, 0x3cf5, 0x71df, 0x1, 0x1);
        gbc.writeMem(0x4ae1, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x3a86);
        EXPECT(gbc.pc(), 0x4ae3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 03B4
        gbc.setState(0x479c, 0xbcf6, 0x98b0, 0x8142, 0x9b7d, 0xa8a5, 0x1, 0x1);
        gbc.writeMem(0x479c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xbcf6);
        EXPECT(gbc.pc(), 0x479e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 03B5
        gbc.setState(0x4bdc, 0x57c, 0x4020, 0x4434, 0x9a58, 0xb52e, 0x1, 0x1);
        gbc.writeMem(0x4bdc, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x57c);
        EXPECT(gbc.pc(), 0x4bde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 03B7
        gbc.setState(0x5e09, 0x4dc6, 0x7710, 0xb0a9, 0x8afe, 0x8814, 0x1, 0x0);
        gbc.writeMem(0x5e09, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4dc6);
        EXPECT(gbc.pc(), 0x5e0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 03B8
        gbc.setState(0x43aa, 0x665c, 0x4780, 0x73ff, 0x6865, 0x896d, 0x0, 0x0);
        gbc.writeMem(0x43aa, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x665c);
        EXPECT(gbc.pc(), 0x43ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 03B9
        gbc.setState(0xcc1b, 0x899a, 0xb940, 0xa4b6, 0x91f, 0x9aea, 0x0, 0x1);
        gbc.writeMem(0xcc1b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x899a);
        EXPECT(gbc.pc(), 0xcc1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc1b), 0xcb);
        EXPECT(gbc.readMem(0xcc1c), 0x62);
        // CB 62 03BA
        gbc.setState(0xab38, 0xf27e, 0x8920, 0x7631, 0x3ce2, 0x656e, 0x0, 0x1);
        gbc.writeMem(0xab38, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xf27e);
        EXPECT(gbc.pc(), 0xab3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab38), 0xcb);
        EXPECT(gbc.readMem(0xab39), 0x62);
        // CB 62 03BB
        gbc.setState(0x1292, 0xd396, 0xc210, 0x6a30, 0x3035, 0x17a9, 0x0, 0x0);
        gbc.writeMem(0x1292, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd396);
        EXPECT(gbc.pc(), 0x1294);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 03BC
        gbc.setState(0x5b5e, 0xb4c0, 0x9f60, 0x5a6e, 0x7ff5, 0x7396, 0x1, 0x1);
        gbc.writeMem(0x5b5e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xb4c0);
        EXPECT(gbc.pc(), 0x5b60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 03BD
        gbc.setState(0xa5b3, 0x29b7, 0xdae0, 0x21c5, 0xbe54, 0x1219, 0x0, 0x1);
        gbc.writeMem(0xa5b3, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x29b7);
        EXPECT(gbc.pc(), 0xa5b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5b3), 0xcb);
        EXPECT(gbc.readMem(0xa5b4), 0x62);
        // CB 62 03BE
        gbc.setState(0x25c0, 0x55fa, 0x260, 0xe66b, 0xc1a7, 0xb673, 0x0, 0x0);
        gbc.writeMem(0x25c0, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x55fa);
        EXPECT(gbc.pc(), 0x25c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 03BF
        gbc.setState(0x90ea, 0x1a3, 0xb280, 0xb74d, 0xe452, 0xd2e, 0x0, 0x0);
        gbc.writeMem(0x90ea, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1a3);
        EXPECT(gbc.pc(), 0x90ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90ea), 0xcb);
        EXPECT(gbc.readMem(0x90eb), 0x62);
        // CB 62 03C0
        gbc.setState(0x499a, 0xb23, 0xed50, 0x71c, 0xc271, 0x2524, 0x1, 0x0);
        gbc.writeMem(0x499a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb23);
        EXPECT(gbc.pc(), 0x499c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 03C1
        gbc.setState(0xd0ab, 0x20f1, 0x1fe0, 0xc258, 0x1a82, 0x6f01, 0x0, 0x0);
        gbc.writeMem(0xd0ab, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x20f1);
        EXPECT(gbc.pc(), 0xd0ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0ab), 0xcb);
        EXPECT(gbc.readMem(0xd0ac), 0x62);
        // CB 62 03C2
        gbc.setState(0xbaca, 0xd544, 0xd210, 0x61d4, 0x50ca, 0x9592, 0x1, 0x0);
        gbc.writeMem(0xbaca, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd544);
        EXPECT(gbc.pc(), 0xbacc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaca), 0xcb);
        EXPECT(gbc.readMem(0xbacb), 0x62);
        // CB 62 03C3
        gbc.setState(0x9988, 0xe2eb, 0x350, 0x5501, 0x46ad, 0xed1e, 0x1, 0x1);
        gbc.writeMem(0x9988, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xe2eb);
        EXPECT(gbc.pc(), 0x998a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9988), 0xcb);
        EXPECT(gbc.readMem(0x9989), 0x62);
        // CB 62 03C4
        gbc.setState(0x4a0d, 0xb57c, 0xae80, 0xbdc2, 0x8e8b, 0x5c62, 0x0, 0x0);
        gbc.writeMem(0x4a0d, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb57c);
        EXPECT(gbc.pc(), 0x4a0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 03C5
        gbc.setState(0x18f7, 0xf9a6, 0x75d0, 0x10c9, 0x6a45, 0xd788, 0x0, 0x1);
        gbc.writeMem(0x18f7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf9a6);
        EXPECT(gbc.pc(), 0x18f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 03C6
        gbc.setState(0xa7d8, 0x5b1b, 0xd8a0, 0xf913, 0x24da, 0x2056, 0x1, 0x0);
        gbc.writeMem(0xa7d8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x5b1b);
        EXPECT(gbc.pc(), 0xa7da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7d8), 0xcb);
        EXPECT(gbc.readMem(0xa7d9), 0x62);
        // CB 62 03C7
        gbc.setState(0xdb3f, 0xbe2b, 0xd10, 0x60a1, 0xa1f6, 0xa6c0, 0x1, 0x1);
        gbc.writeMem(0xdb3f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xbe2b);
        EXPECT(gbc.pc(), 0xdb41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb3f), 0xcb);
        EXPECT(gbc.readMem(0xdb40), 0x62);
        // CB 62 03C8
        gbc.setState(0x5aa8, 0x9828, 0x13f0, 0x115c, 0xda15, 0x950f, 0x0, 0x0);
        gbc.writeMem(0x5aa8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9828);
        EXPECT(gbc.pc(), 0x5aaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 03C9
        gbc.setState(0x40e5, 0x9bf7, 0xd430, 0x324d, 0xa665, 0x7bf7, 0x0, 0x0);
        gbc.writeMem(0x40e5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x9bf7);
        EXPECT(gbc.pc(), 0x40e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 03CA
        gbc.setState(0xeac2, 0x4646, 0xd3b0, 0x76e1, 0xa6d0, 0x9231, 0x1, 0x1);
        gbc.writeMem(0xeac2, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4646);
        EXPECT(gbc.pc(), 0xeac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeac2), 0xcb);
        EXPECT(gbc.readMem(0xeac3), 0x62);
        // CB 62 03CB
        gbc.setState(0x2b0c, 0x9d59, 0xef10, 0x5198, 0xdbfb, 0xd63e, 0x0, 0x1);
        gbc.writeMem(0x2b0c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x9d59);
        EXPECT(gbc.pc(), 0x2b0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 03CC
        gbc.setState(0x3631, 0xf4d1, 0x5a60, 0xaae0, 0x4802, 0xb41a, 0x0, 0x1);
        gbc.writeMem(0x3631, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf4d1);
        EXPECT(gbc.pc(), 0x3633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 03CD
        gbc.setState(0xac2c, 0x8d87, 0xf7b0, 0x47e0, 0xe3f8, 0x134f, 0x1, 0x1);
        gbc.writeMem(0xac2c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x8d87);
        EXPECT(gbc.pc(), 0xac2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac2c), 0xcb);
        EXPECT(gbc.readMem(0xac2d), 0x62);
        // CB 62 03CE
        gbc.setState(0x3ca7, 0x6746, 0xe2e0, 0xe48e, 0xd10f, 0x32d0, 0x1, 0x0);
        gbc.writeMem(0x3ca7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x6746);
        EXPECT(gbc.pc(), 0x3ca9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 03CF
        gbc.setState(0x850f, 0xb86, 0x4450, 0x89bc, 0x98d3, 0xf069, 0x1, 0x1);
        gbc.writeMem(0x850f, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb86);
        EXPECT(gbc.pc(), 0x8511);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x850f), 0xcb);
        EXPECT(gbc.readMem(0x8510), 0x62);
        // CB 62 03D0
        gbc.setState(0x41b7, 0x4300, 0x65a0, 0xe206, 0xb72d, 0x56ed, 0x1, 0x0);
        gbc.writeMem(0x41b7, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x4300);
        EXPECT(gbc.pc(), 0x41b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 03D1
        gbc.setState(0x4882, 0xd1bb, 0xbd70, 0x57c6, 0x72f6, 0xa355, 0x1, 0x0);
        gbc.writeMem(0x4882, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd1bb);
        EXPECT(gbc.pc(), 0x4884);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 03D2
        gbc.setState(0xa003, 0x6485, 0x1230, 0xda8f, 0xbd3b, 0xbdf1, 0x0, 0x1);
        gbc.writeMem(0xa003, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6485);
        EXPECT(gbc.pc(), 0xa005);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa003), 0xcb);
        EXPECT(gbc.readMem(0xa004), 0x62);
        // CB 62 03D3
        gbc.setState(0x107e, 0xa3ab, 0xc060, 0xfbf1, 0xf46f, 0x3067, 0x1, 0x1);
        gbc.writeMem(0x107e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xa3ab);
        EXPECT(gbc.pc(), 0x1080);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 03D4
        gbc.setState(0x96e8, 0x962a, 0xfe20, 0xc947, 0xd754, 0x89da, 0x0, 0x0);
        gbc.writeMem(0x96e8, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x962a);
        EXPECT(gbc.pc(), 0x96ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96e8), 0xcb);
        EXPECT(gbc.readMem(0x96e9), 0x62);
        // CB 62 03D5
        gbc.setState(0x5945, 0x7372, 0x4780, 0x6f53, 0x5637, 0xf99b, 0x0, 0x0);
        gbc.writeMem(0x5945, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x7372);
        EXPECT(gbc.pc(), 0x5947);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 03D6
        gbc.setState(0x2819, 0x6cf5, 0x4c30, 0x9214, 0xe363, 0xce54, 0x0, 0x1);
        gbc.writeMem(0x2819, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6cf5);
        EXPECT(gbc.pc(), 0x281b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 03D7
        gbc.setState(0x3643, 0xfd4d, 0x8b50, 0x764c, 0x78aa, 0x8a95, 0x1, 0x1);
        gbc.writeMem(0x3643, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xfd4d);
        EXPECT(gbc.pc(), 0x3645);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 03D8
        gbc.setState(0xbeae, 0x8cba, 0x9780, 0x3b33, 0x4726, 0x5062, 0x0, 0x0);
        gbc.writeMem(0xbeae, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x8cba);
        EXPECT(gbc.pc(), 0xbeb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeae), 0xcb);
        EXPECT(gbc.readMem(0xbeaf), 0x62);
        // CB 62 03D9
        gbc.setState(0xb48b, 0x80d6, 0xea40, 0xcd03, 0x50d2, 0xd6fa, 0x1, 0x0);
        gbc.writeMem(0xb48b, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x80d6);
        EXPECT(gbc.pc(), 0xb48d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb48b), 0xcb);
        EXPECT(gbc.readMem(0xb48c), 0x62);
        // CB 62 03DA
        gbc.setState(0xaddb, 0x6db6, 0xd410, 0x3ae0, 0xda1d, 0xd14a, 0x0, 0x0);
        gbc.writeMem(0xaddb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x6db6);
        EXPECT(gbc.pc(), 0xaddd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaddb), 0xcb);
        EXPECT(gbc.readMem(0xaddc), 0x62);
        // CB 62 03DB
        gbc.setState(0xc91e, 0xf208, 0x4690, 0x3b03, 0x1342, 0x5861, 0x1, 0x1);
        gbc.writeMem(0xc91e, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf208);
        EXPECT(gbc.pc(), 0xc920);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc91e), 0xcb);
        EXPECT(gbc.readMem(0xc91f), 0x62);
        // CB 62 03DC
        gbc.setState(0x4e28, 0x54e0, 0x20c0, 0xa27c, 0xfcf4, 0xbe2f, 0x0, 0x1);
        gbc.writeMem(0x4e28, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x54e0);
        EXPECT(gbc.pc(), 0x4e2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 03DD
        gbc.setState(0x4b2c, 0x4ac7, 0xb9b0, 0x7dbe, 0x2f2, 0xee4a, 0x0, 0x1);
        gbc.writeMem(0x4b2c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x4ac7);
        EXPECT(gbc.pc(), 0x4b2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 03DE
        gbc.setState(0xc668, 0xb500, 0xf9d0, 0xffac, 0xb425, 0x2bce, 0x0, 0x1);
        gbc.writeMem(0xc668, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb500);
        EXPECT(gbc.pc(), 0xc66a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc668), 0xcb);
        EXPECT(gbc.readMem(0xc669), 0x62);
        // CB 62 03DF
        gbc.setState(0x76d5, 0xdf28, 0xebc0, 0x96a6, 0xb404, 0xca91, 0x0, 0x1);
        gbc.writeMem(0x76d5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xdf28);
        EXPECT(gbc.pc(), 0x76d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 03E0
        gbc.setState(0x3e31, 0x6516, 0x8210, 0xec1b, 0x69a7, 0xeccf, 0x1, 0x1);
        gbc.writeMem(0x3e31, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x6516);
        EXPECT(gbc.pc(), 0x3e33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 03E1
        gbc.setState(0x3ebb, 0x4af4, 0x5f10, 0x89a, 0xbce2, 0x3414, 0x1, 0x0);
        gbc.writeMem(0x3ebb, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4af4);
        EXPECT(gbc.pc(), 0x3ebd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 03E2
        gbc.setState(0xacc5, 0x96c3, 0xe180, 0x894d, 0x19fc, 0x5361, 0x0, 0x0);
        gbc.writeMem(0xacc5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x96c3);
        EXPECT(gbc.pc(), 0xacc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacc5), 0xcb);
        EXPECT(gbc.readMem(0xacc6), 0x62);
        // CB 62 03E3
        gbc.setState(0x2f0c, 0x501e, 0x2560, 0x7d7c, 0x33d6, 0xbccb, 0x1, 0x0);
        gbc.writeMem(0x2f0c, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x501e);
        EXPECT(gbc.pc(), 0x2f0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 03E4
        gbc.setState(0x5246, 0x5a33, 0xc6a0, 0xf18f, 0x4b00, 0x1a63, 0x1, 0x0);
        gbc.writeMem(0x5246, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5a33);
        EXPECT(gbc.pc(), 0x5248);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 62 03E5
        gbc.setState(0xfb5, 0xb8f6, 0xf70, 0x9f68, 0x4bbb, 0xd75f, 0x0, 0x0);
        gbc.writeMem(0xfb5, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb8f6);
        EXPECT(gbc.pc(), 0xfb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 03E6
        gbc.setState(0x3436, 0xb2a1, 0x9df0, 0x8f57, 0xd004, 0x8753, 0x1, 0x1);
        gbc.writeMem(0x3436, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb2a1);
        EXPECT(gbc.pc(), 0x3438);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 62 03E7
        gbc.setState(0xa19a, 0x623e, 0x96b0, 0x68d, 0xb7f7, 0x9813, 0x0, 0x0);
        gbc.writeMem(0xa19a, { 0xcb, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x623e);
        EXPECT(gbc.pc(), 0xa19c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa19a), 0xcb);
        EXPECT(gbc.readMem(0xa19b), 0x62);
    }
}
#endif
