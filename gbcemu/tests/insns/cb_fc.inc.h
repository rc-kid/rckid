    TEST(gbcemu, opcode_cb_fc) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB FC 0000
        gbc.setState(0x7263, 0x7f12, 0x6bb0, 0xaa4d, 0x1be, 0x7329, 0x1, 0x1);
        gbc.writeMem(0x7263, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7f12, gbc.sp());
        EXPECT(0x7265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0001
        gbc.setState(0xda68, 0x9c0, 0x81b0, 0x87e1, 0x4c84, 0xb824, 0x1, 0x0);
        gbc.writeMem(0xda68, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9c0, gbc.sp());
        EXPECT(0xda6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda68));
        EXPECT(0xfc, gbc.readMem(0xda69));
        // CB FC 0002
        gbc.setState(0xc407, 0x376a, 0x47d0, 0x3d6b, 0xc601, 0x41f2, 0x1, 0x0);
        gbc.writeMem(0xc407, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x376a, gbc.sp());
        EXPECT(0xc409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc407));
        EXPECT(0xfc, gbc.readMem(0xc408));
        // CB FC 0003
        gbc.setState(0x774e, 0x64bf, 0x3e0, 0xa94f, 0x1c4b, 0x417a, 0x0, 0x0);
        gbc.writeMem(0x774e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x64bf, gbc.sp());
        EXPECT(0x7750, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0004
        gbc.setState(0x92de, 0xbda9, 0xfee0, 0xd40, 0x2550, 0xb161, 0x0, 0x1);
        gbc.writeMem(0x92de, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xbda9, gbc.sp());
        EXPECT(0x92e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92de));
        EXPECT(0xfc, gbc.readMem(0x92df));
        // CB FC 0005
        gbc.setState(0x5f6d, 0xda4c, 0xf810, 0xd355, 0xa996, 0x7354, 0x1, 0x0);
        gbc.writeMem(0x5f6d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xda4c, gbc.sp());
        EXPECT(0x5f6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0006
        gbc.setState(0x3251, 0xff26, 0xb4a0, 0x8e3c, 0x1156, 0x4423, 0x1, 0x1);
        gbc.writeMem(0x3251, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xff26, gbc.sp());
        EXPECT(0x3253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0007
        gbc.setState(0x6640, 0x1007, 0xd580, 0x3369, 0xa785, 0xed43, 0x1, 0x1);
        gbc.writeMem(0x6640, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1007, gbc.sp());
        EXPECT(0x6642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0008
        gbc.setState(0x4f6a, 0x6f01, 0x50a0, 0xd169, 0xf906, 0x5738, 0x0, 0x0);
        gbc.writeMem(0x4f6a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6f01, gbc.sp());
        EXPECT(0x4f6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 000A
        gbc.setState(0x5e5a, 0xc5ff, 0xb2b0, 0x7b1f, 0xcc02, 0xb108, 0x1, 0x1);
        gbc.writeMem(0x5e5a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc5ff, gbc.sp());
        EXPECT(0x5e5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 000B
        gbc.setState(0xaedd, 0xa175, 0xa1f0, 0xea05, 0xdca6, 0x7a33, 0x0, 0x1);
        gbc.writeMem(0xaedd, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa175, gbc.sp());
        EXPECT(0xaedf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaedd));
        EXPECT(0xfc, gbc.readMem(0xaede));
        // CB FC 000C
        gbc.setState(0xee73, 0xf7b1, 0x4530, 0x801d, 0xfe35, 0x5d54, 0x0, 0x1);
        gbc.writeMem(0xee73, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf7b1, gbc.sp());
        EXPECT(0xee75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee73));
        EXPECT(0xfc, gbc.readMem(0xee74));
        // CB FC 000D
        gbc.setState(0x96b0, 0xa831, 0x9eb0, 0x9cbc, 0xd766, 0x3566, 0x1, 0x0);
        gbc.writeMem(0x96b0, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa831, gbc.sp());
        EXPECT(0x96b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b0));
        EXPECT(0xfc, gbc.readMem(0x96b1));
        // CB FC 000E
        gbc.setState(0x5938, 0xb7c0, 0xd220, 0xe7e9, 0x16a8, 0x1ea0, 0x1, 0x0);
        gbc.writeMem(0x5938, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb7c0, gbc.sp());
        EXPECT(0x593a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 000F
        gbc.setState(0x8a2e, 0x7d6, 0xb990, 0xe61e, 0x9146, 0xec4f, 0x1, 0x0);
        gbc.writeMem(0x8a2e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7d6, gbc.sp());
        EXPECT(0x8a30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a2e));
        EXPECT(0xfc, gbc.readMem(0x8a2f));
        // CB FC 0010
        gbc.setState(0x6d52, 0x810e, 0xdba0, 0x8361, 0xe48d, 0xbdf3, 0x0, 0x1);
        gbc.writeMem(0x6d52, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x810e, gbc.sp());
        EXPECT(0x6d54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0011
        gbc.setState(0x2c18, 0xb24e, 0xcc50, 0x1bf, 0xe6c2, 0xb782, 0x1, 0x0);
        gbc.writeMem(0x2c18, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb24e, gbc.sp());
        EXPECT(0x2c1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0012
        gbc.setState(0x664, 0x1385, 0xa410, 0x7d0d, 0xd39b, 0x5f47, 0x0, 0x1);
        gbc.writeMem(0x664, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1385, gbc.sp());
        EXPECT(0x666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0013
        gbc.setState(0x5e21, 0x3416, 0x8ad0, 0x9662, 0xa679, 0x5697, 0x0, 0x0);
        gbc.writeMem(0x5e21, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3416, gbc.sp());
        EXPECT(0x5e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0014
        gbc.setState(0x132, 0xc791, 0x4f0, 0xb34d, 0xccc, 0x107e, 0x0, 0x1);
        gbc.writeMem(0x132, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc791, gbc.sp());
        EXPECT(0x134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0015
        gbc.setState(0x2ad9, 0xe492, 0x8840, 0xdc6, 0xb43a, 0x4e0d, 0x0, 0x1);
        gbc.writeMem(0x2ad9, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe492, gbc.sp());
        EXPECT(0x2adb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0017
        gbc.setState(0x7896, 0xd13d, 0x1250, 0x201, 0xfd6a, 0x7147, 0x1, 0x0);
        gbc.writeMem(0x7896, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd13d, gbc.sp());
        EXPECT(0x7898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0018
        gbc.setState(0xcade, 0x977d, 0xbd10, 0x47a8, 0xa650, 0x463, 0x0, 0x0);
        gbc.writeMem(0xcade, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x977d, gbc.sp());
        EXPECT(0xcae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcade));
        EXPECT(0xfc, gbc.readMem(0xcadf));
        // CB FC 0019
        gbc.setState(0x228a, 0x2765, 0xab40, 0x4216, 0x996, 0xb2a8, 0x1, 0x0);
        gbc.writeMem(0x228a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2765, gbc.sp());
        EXPECT(0x228c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 001B
        gbc.setState(0x3c1, 0x9aa6, 0x9460, 0xe297, 0x4f18, 0xe07c, 0x1, 0x0);
        gbc.writeMem(0x3c1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9aa6, gbc.sp());
        EXPECT(0x3c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 001C
        gbc.setState(0x6576, 0xb05f, 0x1d80, 0x3f19, 0x4977, 0x83ec, 0x1, 0x1);
        gbc.writeMem(0x6576, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb05f, gbc.sp());
        EXPECT(0x6578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 001D
        gbc.setState(0x96bc, 0x4af0, 0x4be0, 0xd40d, 0x31fd, 0x8f46, 0x0, 0x1);
        gbc.writeMem(0x96bc, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4af0, gbc.sp());
        EXPECT(0x96be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96bc));
        EXPECT(0xfc, gbc.readMem(0x96bd));
        // CB FC 001E
        gbc.setState(0x48a4, 0x11c6, 0xbec0, 0x9d6d, 0xf806, 0x25b0, 0x0, 0x1);
        gbc.writeMem(0x48a4, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x11c6, gbc.sp());
        EXPECT(0x48a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 001F
        gbc.setState(0x1899, 0x3e1a, 0x5d90, 0x2765, 0x65ab, 0xba33, 0x1, 0x0);
        gbc.writeMem(0x1899, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3e1a, gbc.sp());
        EXPECT(0x189b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0020
        gbc.setState(0x42e6, 0xb402, 0x58a0, 0x2690, 0x4e8a, 0x70a1, 0x0, 0x1);
        gbc.writeMem(0x42e6, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb402, gbc.sp());
        EXPECT(0x42e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0021
        gbc.setState(0x8602, 0xf99b, 0x7080, 0xb895, 0x5160, 0x6fae, 0x1, 0x1);
        gbc.writeMem(0x8602, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf99b, gbc.sp());
        EXPECT(0x8604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8602));
        EXPECT(0xfc, gbc.readMem(0x8603));
        // CB FC 0022
        gbc.setState(0x830b, 0x205c, 0x65c0, 0x2d25, 0xf871, 0x2a4c, 0x1, 0x0);
        gbc.writeMem(0x830b, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x205c, gbc.sp());
        EXPECT(0x830d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x830b));
        EXPECT(0xfc, gbc.readMem(0x830c));
        // CB FC 0023
        gbc.setState(0x298e, 0x162a, 0x6e40, 0x92ad, 0x3306, 0x4d14, 0x1, 0x0);
        gbc.writeMem(0x298e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x162a, gbc.sp());
        EXPECT(0x2990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0024
        gbc.setState(0x43ab, 0xdef2, 0x1540, 0x963f, 0xcc4e, 0xfff3, 0x0, 0x1);
        gbc.writeMem(0x43ab, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xdef2, gbc.sp());
        EXPECT(0x43ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0025
        gbc.setState(0xb10c, 0x7b18, 0x12b0, 0xff54, 0x474b, 0x6f07, 0x0, 0x0);
        gbc.writeMem(0xb10c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7b18, gbc.sp());
        EXPECT(0xb10e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb10c));
        EXPECT(0xfc, gbc.readMem(0xb10d));
        // CB FC 0026
        gbc.setState(0xbe15, 0xbbf3, 0x7230, 0xcf0c, 0xef85, 0xe61d, 0x1, 0x0);
        gbc.writeMem(0xbe15, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xbbf3, gbc.sp());
        EXPECT(0xbe17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe15));
        EXPECT(0xfc, gbc.readMem(0xbe16));
        // CB FC 0027
        gbc.setState(0x6a5e, 0xcd20, 0x7a50, 0x3457, 0x16f6, 0x6606, 0x1, 0x1);
        gbc.writeMem(0x6a5e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xcd20, gbc.sp());
        EXPECT(0x6a60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0028
        gbc.setState(0x9e22, 0xd83f, 0xe980, 0x3f3f, 0x8fbd, 0x1ab1, 0x0, 0x1);
        gbc.writeMem(0x9e22, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd83f, gbc.sp());
        EXPECT(0x9e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e22));
        EXPECT(0xfc, gbc.readMem(0x9e23));
        // CB FC 0029
        gbc.setState(0x4a3f, 0x9268, 0xde00, 0x2fb, 0x6efd, 0xa77a, 0x0, 0x1);
        gbc.writeMem(0x4a3f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9268, gbc.sp());
        EXPECT(0x4a41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 002A
        gbc.setState(0xebd0, 0x76a9, 0xc2e0, 0x8721, 0x1eb2, 0x2ff2, 0x1, 0x0);
        gbc.writeMem(0xebd0, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x76a9, gbc.sp());
        EXPECT(0xebd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebd0));
        EXPECT(0xfc, gbc.readMem(0xebd1));
        // CB FC 002B
        gbc.setState(0x8d51, 0xb0d8, 0x50e0, 0x8245, 0xf2, 0x7710, 0x0, 0x0);
        gbc.writeMem(0x8d51, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb0d8, gbc.sp());
        EXPECT(0x8d53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d51));
        EXPECT(0xfc, gbc.readMem(0x8d52));
        // CB FC 002C
        gbc.setState(0x5c7f, 0x5677, 0xb750, 0x766f, 0x705b, 0x65dd, 0x0, 0x0);
        gbc.writeMem(0x5c7f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5677, gbc.sp());
        EXPECT(0x5c81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 002D
        gbc.setState(0xb319, 0xd01, 0x63b0, 0x97ac, 0x4f3b, 0xffcc, 0x1, 0x0);
        gbc.writeMem(0xb319, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd01, gbc.sp());
        EXPECT(0xb31b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb319));
        EXPECT(0xfc, gbc.readMem(0xb31a));
        // CB FC 002E
        gbc.setState(0x9f7f, 0xded5, 0x5b20, 0x2890, 0xa6c9, 0x429a, 0x0, 0x1);
        gbc.writeMem(0x9f7f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xded5, gbc.sp());
        EXPECT(0x9f81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f7f));
        EXPECT(0xfc, gbc.readMem(0x9f80));
        // CB FC 002F
        gbc.setState(0x5be1, 0xc364, 0x56c0, 0x772, 0xfce4, 0x235a, 0x0, 0x1);
        gbc.writeMem(0x5be1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc364, gbc.sp());
        EXPECT(0x5be3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0030
        gbc.setState(0x7323, 0x962f, 0x1950, 0x66c2, 0xc41a, 0x6574, 0x0, 0x0);
        gbc.writeMem(0x7323, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x962f, gbc.sp());
        EXPECT(0x7325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0031
        gbc.setState(0xa6b3, 0x44d9, 0x5c30, 0xc8ce, 0x281e, 0x8f41, 0x1, 0x1);
        gbc.writeMem(0xa6b3, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x44d9, gbc.sp());
        EXPECT(0xa6b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b3));
        EXPECT(0xfc, gbc.readMem(0xa6b4));
        // CB FC 0032
        gbc.setState(0x9eb7, 0x7f86, 0x6d00, 0x275f, 0x816d, 0xcd71, 0x1, 0x1);
        gbc.writeMem(0x9eb7, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7f86, gbc.sp());
        EXPECT(0x9eb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eb7));
        EXPECT(0xfc, gbc.readMem(0x9eb8));
        // CB FC 0033
        gbc.setState(0x5c87, 0xb6bf, 0x6170, 0xa49f, 0x3c26, 0x4d40, 0x1, 0x0);
        gbc.writeMem(0x5c87, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb6bf, gbc.sp());
        EXPECT(0x5c89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0034
        gbc.setState(0x2e0c, 0xa1dd, 0x6160, 0xa1f0, 0xd7a2, 0x1b96, 0x0, 0x0);
        gbc.writeMem(0x2e0c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa1dd, gbc.sp());
        EXPECT(0x2e0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0035
        gbc.setState(0x8948, 0x7e17, 0x11f0, 0x3e23, 0x8464, 0x8320, 0x0, 0x1);
        gbc.writeMem(0x8948, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7e17, gbc.sp());
        EXPECT(0x894a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8948));
        EXPECT(0xfc, gbc.readMem(0x8949));
        // CB FC 0036
        gbc.setState(0xd6d2, 0x3889, 0x7240, 0x36b6, 0x3665, 0xac64, 0x0, 0x1);
        gbc.writeMem(0xd6d2, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3889, gbc.sp());
        EXPECT(0xd6d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6d2));
        EXPECT(0xfc, gbc.readMem(0xd6d3));
        // CB FC 0037
        gbc.setState(0xef2d, 0xd4bf, 0x4c50, 0x5433, 0xc0e4, 0x8f8b, 0x1, 0x0);
        gbc.writeMem(0xef2d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd4bf, gbc.sp());
        EXPECT(0xef2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef2d));
        EXPECT(0xfc, gbc.readMem(0xef2e));
        // CB FC 0038
        gbc.setState(0xefa8, 0x9df3, 0x5870, 0x62c0, 0xb1b1, 0x5486, 0x0, 0x1);
        gbc.writeMem(0xefa8, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9df3, gbc.sp());
        EXPECT(0xefaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefa8));
        EXPECT(0xfc, gbc.readMem(0xefa9));
        // CB FC 0039
        gbc.setState(0x26a1, 0x371e, 0xc5c0, 0x7dc1, 0x5c8b, 0x6371, 0x1, 0x0);
        gbc.writeMem(0x26a1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x371e, gbc.sp());
        EXPECT(0x26a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 003A
        gbc.setState(0x6ee5, 0x1758, 0xefa0, 0x7b23, 0x6cce, 0x41ed, 0x0, 0x1);
        gbc.writeMem(0x6ee5, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1758, gbc.sp());
        EXPECT(0x6ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 003B
        gbc.setState(0x84f3, 0x37eb, 0xcab0, 0x7f11, 0x6e8a, 0x628a, 0x0, 0x0);
        gbc.writeMem(0x84f3, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x37eb, gbc.sp());
        EXPECT(0x84f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f3));
        EXPECT(0xfc, gbc.readMem(0x84f4));
        // CB FC 003C
        gbc.setState(0x10df, 0x4c15, 0x2f20, 0xdc88, 0xcb21, 0xac3f, 0x0, 0x0);
        gbc.writeMem(0x10df, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4c15, gbc.sp());
        EXPECT(0x10e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 003E
        gbc.setState(0xd87e, 0xa286, 0xcbe0, 0xa668, 0xa520, 0xd47f, 0x0, 0x1);
        gbc.writeMem(0xd87e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa286, gbc.sp());
        EXPECT(0xd880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd87e));
        EXPECT(0xfc, gbc.readMem(0xd87f));
        // CB FC 003F
        gbc.setState(0x6f37, 0xfd1a, 0xfff0, 0xa315, 0x165b, 0xcb04, 0x0, 0x1);
        gbc.writeMem(0x6f37, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xfd1a, gbc.sp());
        EXPECT(0x6f39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0040
        gbc.setState(0x28e7, 0xfa3, 0x51e0, 0xa14f, 0x3ffa, 0xf64f, 0x1, 0x0);
        gbc.writeMem(0x28e7, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xfa3, gbc.sp());
        EXPECT(0x28e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0041
        gbc.setState(0xa1c1, 0xea7, 0x1ec0, 0x891c, 0x14bf, 0xe9d0, 0x1, 0x0);
        gbc.writeMem(0xa1c1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xea7, gbc.sp());
        EXPECT(0xa1c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1c1));
        EXPECT(0xfc, gbc.readMem(0xa1c2));
        // CB FC 0042
        gbc.setState(0x4a40, 0xef18, 0x8340, 0x2ce0, 0x96d, 0x27e1, 0x0, 0x0);
        gbc.writeMem(0x4a40, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xef18, gbc.sp());
        EXPECT(0x4a42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0043
        gbc.setState(0x1a02, 0x8709, 0x9fb0, 0x3def, 0x2a67, 0x4644, 0x1, 0x1);
        gbc.writeMem(0x1a02, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8709, gbc.sp());
        EXPECT(0x1a04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0044
        gbc.setState(0x77bc, 0xc78b, 0x6330, 0x116c, 0xf52c, 0x380, 0x1, 0x0);
        gbc.writeMem(0x77bc, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc78b, gbc.sp());
        EXPECT(0x77be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0045
        gbc.setState(0x51b, 0x227a, 0x5650, 0x4bae, 0x44c0, 0xe3dd, 0x0, 0x1);
        gbc.writeMem(0x51b, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x227a, gbc.sp());
        EXPECT(0x51d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0046
        gbc.setState(0x757d, 0xefdd, 0x55b0, 0x4e78, 0x3200, 0x1d5a, 0x0, 0x1);
        gbc.writeMem(0x757d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xefdd, gbc.sp());
        EXPECT(0x757f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0047
        gbc.setState(0x70af, 0xbdea, 0xf230, 0x4141, 0xbd29, 0x3cf8, 0x1, 0x0);
        gbc.writeMem(0x70af, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbdea, gbc.sp());
        EXPECT(0x70b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0048
        gbc.setState(0x5dd3, 0x5f33, 0x3bc0, 0x3324, 0xaced, 0x4e00, 0x1, 0x1);
        gbc.writeMem(0x5dd3, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5f33, gbc.sp());
        EXPECT(0x5dd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0049
        gbc.setState(0xee97, 0x4171, 0x2a30, 0x6b86, 0xf4c7, 0x9886, 0x1, 0x1);
        gbc.writeMem(0xee97, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4171, gbc.sp());
        EXPECT(0xee99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee97));
        EXPECT(0xfc, gbc.readMem(0xee98));
        // CB FC 004A
        gbc.setState(0x6d59, 0xeb6c, 0xed70, 0x5560, 0x2e22, 0xc34c, 0x1, 0x0);
        gbc.writeMem(0x6d59, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xeb6c, gbc.sp());
        EXPECT(0x6d5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 004B
        gbc.setState(0x74a4, 0xaf05, 0x4660, 0x5e70, 0x2e0a, 0x124e, 0x0, 0x0);
        gbc.writeMem(0x74a4, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xaf05, gbc.sp());
        EXPECT(0x74a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 004D
        gbc.setState(0x30da, 0xdf19, 0x7160, 0x9f2f, 0x4a79, 0x55cc, 0x0, 0x0);
        gbc.writeMem(0x30da, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xdf19, gbc.sp());
        EXPECT(0x30dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 004E
        gbc.setState(0x32be, 0x342b, 0x6100, 0x12b, 0xfe8, 0x7375, 0x0, 0x1);
        gbc.writeMem(0x32be, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x342b, gbc.sp());
        EXPECT(0x32c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0050
        gbc.setState(0x3474, 0x3d9d, 0x8ff0, 0x5090, 0x7b59, 0x54a3, 0x0, 0x0);
        gbc.writeMem(0x3474, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3d9d, gbc.sp());
        EXPECT(0x3476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0051
        gbc.setState(0x2059, 0x411e, 0x8b00, 0x4642, 0x9faf, 0x14be, 0x0, 0x1);
        gbc.writeMem(0x2059, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x411e, gbc.sp());
        EXPECT(0x205b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0052
        gbc.setState(0x306f, 0x2826, 0xb7a0, 0xfa1a, 0x8afd, 0xefbd, 0x0, 0x1);
        gbc.writeMem(0x306f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2826, gbc.sp());
        EXPECT(0x3071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0053
        gbc.setState(0x9785, 0xd0e8, 0x6050, 0x6c4f, 0x6f10, 0x2714, 0x0, 0x0);
        gbc.writeMem(0x9785, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd0e8, gbc.sp());
        EXPECT(0x9787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9785));
        EXPECT(0xfc, gbc.readMem(0x9786));
        // CB FC 0054
        gbc.setState(0x3c06, 0x2f8d, 0x5390, 0x4813, 0xd7b8, 0x5933, 0x1, 0x0);
        gbc.writeMem(0x3c06, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2f8d, gbc.sp());
        EXPECT(0x3c08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0055
        gbc.setState(0x4de4, 0xe543, 0xd750, 0x961, 0x7c50, 0x50aa, 0x0, 0x1);
        gbc.writeMem(0x4de4, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe543, gbc.sp());
        EXPECT(0x4de6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0056
        gbc.setState(0xb4ee, 0xae75, 0x1f10, 0x745e, 0xf0fa, 0xd2a1, 0x1, 0x1);
        gbc.writeMem(0xb4ee, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xae75, gbc.sp());
        EXPECT(0xb4f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ee));
        EXPECT(0xfc, gbc.readMem(0xb4ef));
        // CB FC 0057
        gbc.setState(0x4640, 0x49b0, 0x73f0, 0xb3d1, 0xd22d, 0x98d0, 0x1, 0x0);
        gbc.writeMem(0x4640, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x49b0, gbc.sp());
        EXPECT(0x4642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0058
        gbc.setState(0x7b2a, 0xeca7, 0x2520, 0x95fd, 0xb06c, 0x2325, 0x1, 0x1);
        gbc.writeMem(0x7b2a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xeca7, gbc.sp());
        EXPECT(0x7b2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0059
        gbc.setState(0x4d66, 0xc0f3, 0xfe30, 0x5082, 0x2be0, 0x792f, 0x1, 0x1);
        gbc.writeMem(0x4d66, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc0f3, gbc.sp());
        EXPECT(0x4d68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 005A
        gbc.setState(0x98bd, 0xe57d, 0x19e0, 0x92ce, 0xe641, 0x1620, 0x1, 0x0);
        gbc.writeMem(0x98bd, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe57d, gbc.sp());
        EXPECT(0x98bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98bd));
        EXPECT(0xfc, gbc.readMem(0x98be));
        // CB FC 005B
        gbc.setState(0x729b, 0x5e07, 0x5e40, 0x989e, 0xba6a, 0xe0e8, 0x1, 0x0);
        gbc.writeMem(0x729b, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5e07, gbc.sp());
        EXPECT(0x729d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 005C
        gbc.setState(0xd811, 0xf03f, 0xe4b0, 0xb33a, 0x467a, 0x1df5, 0x0, 0x0);
        gbc.writeMem(0xd811, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf03f, gbc.sp());
        EXPECT(0xd813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd811));
        EXPECT(0xfc, gbc.readMem(0xd812));
        // CB FC 005D
        gbc.setState(0xa83a, 0xdee4, 0x3d50, 0xc921, 0xd26f, 0xf042, 0x1, 0x0);
        gbc.writeMem(0xa83a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xdee4, gbc.sp());
        EXPECT(0xa83c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa83a));
        EXPECT(0xfc, gbc.readMem(0xa83b));
        // CB FC 005E
        gbc.setState(0xb639, 0x6ce0, 0x19e0, 0x234d, 0x2579, 0x9328, 0x0, 0x0);
        gbc.writeMem(0xb639, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6ce0, gbc.sp());
        EXPECT(0xb63b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb639));
        EXPECT(0xfc, gbc.readMem(0xb63a));
        // CB FC 005F
        gbc.setState(0xd25c, 0x51df, 0xf330, 0xb494, 0x7c19, 0xcdd7, 0x0, 0x1);
        gbc.writeMem(0xd25c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x51df, gbc.sp());
        EXPECT(0xd25e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd25c));
        EXPECT(0xfc, gbc.readMem(0xd25d));
        // CB FC 0060
        gbc.setState(0x8269, 0xfbb7, 0xabb0, 0xef6b, 0x8956, 0x316f, 0x0, 0x0);
        gbc.writeMem(0x8269, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xfbb7, gbc.sp());
        EXPECT(0x826b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8269));
        EXPECT(0xfc, gbc.readMem(0x826a));
        // CB FC 0061
        gbc.setState(0xdd78, 0xf24a, 0x8350, 0x9994, 0x6831, 0xc529, 0x0, 0x1);
        gbc.writeMem(0xdd78, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf24a, gbc.sp());
        EXPECT(0xdd7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd78));
        EXPECT(0xfc, gbc.readMem(0xdd79));
        // CB FC 0062
        gbc.setState(0xd483, 0x5d29, 0x80, 0xc608, 0x8380, 0x6f5, 0x0, 0x0);
        gbc.writeMem(0xd483, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5d29, gbc.sp());
        EXPECT(0xd485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd483));
        EXPECT(0xfc, gbc.readMem(0xd484));
        // CB FC 0063
        gbc.setState(0xa800, 0x7c7a, 0x4d10, 0x5784, 0xdfe7, 0x8247, 0x0, 0x0);
        gbc.writeMem(0xa800, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7c7a, gbc.sp());
        EXPECT(0xa802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa800));
        EXPECT(0xfc, gbc.readMem(0xa801));
        // CB FC 0064
        gbc.setState(0x16fa, 0xcf28, 0x1f90, 0xdab6, 0x4792, 0xf141, 0x0, 0x0);
        gbc.writeMem(0x16fa, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xcf28, gbc.sp());
        EXPECT(0x16fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0065
        gbc.setState(0x6aed, 0xeeec, 0xf7c0, 0xbba7, 0xca6c, 0xcad0, 0x0, 0x1);
        gbc.writeMem(0x6aed, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xeeec, gbc.sp());
        EXPECT(0x6aef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0066
        gbc.setState(0x5c9e, 0xf95b, 0xcf60, 0x4a38, 0xbe87, 0xdf7c, 0x0, 0x0);
        gbc.writeMem(0x5c9e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf95b, gbc.sp());
        EXPECT(0x5ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0067
        gbc.setState(0x1df, 0xa18, 0x3f80, 0xe6f6, 0xd2bf, 0xf9b, 0x0, 0x0);
        gbc.writeMem(0x1df, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa18, gbc.sp());
        EXPECT(0x1e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0068
        gbc.setState(0x80ac, 0xa87c, 0x8e10, 0x73e2, 0xa4, 0x7cac, 0x1, 0x0);
        gbc.writeMem(0x80ac, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa87c, gbc.sp());
        EXPECT(0x80ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ac));
        EXPECT(0xfc, gbc.readMem(0x80ad));
        // CB FC 0069
        gbc.setState(0xce1f, 0x2f0e, 0x1a10, 0x82dc, 0x64af, 0x5048, 0x1, 0x0);
        gbc.writeMem(0xce1f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2f0e, gbc.sp());
        EXPECT(0xce21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce1f));
        EXPECT(0xfc, gbc.readMem(0xce20));
        // CB FC 006A
        gbc.setState(0x9e7f, 0x78b7, 0x3c10, 0x264f, 0x9c43, 0x617, 0x0, 0x0);
        gbc.writeMem(0x9e7f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x78b7, gbc.sp());
        EXPECT(0x9e81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e7f));
        EXPECT(0xfc, gbc.readMem(0x9e80));
        // CB FC 006B
        gbc.setState(0xe574, 0x7105, 0x8af0, 0x381d, 0xf293, 0x2776, 0x0, 0x1);
        gbc.writeMem(0xe574, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7105, gbc.sp());
        EXPECT(0xe576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe574));
        EXPECT(0xfc, gbc.readMem(0xe575));
        // CB FC 006C
        gbc.setState(0x4f5, 0xe588, 0x76f0, 0xadbd, 0x1b41, 0x863d, 0x1, 0x0);
        gbc.writeMem(0x4f5, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe588, gbc.sp());
        EXPECT(0x4f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 006D
        gbc.setState(0xe1ab, 0x6a76, 0x99d0, 0x6a76, 0xe152, 0x8b74, 0x0, 0x0);
        gbc.writeMem(0xe1ab, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6a76, gbc.sp());
        EXPECT(0xe1ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1ab));
        EXPECT(0xfc, gbc.readMem(0xe1ac));
        // CB FC 006F
        gbc.setState(0x80ea, 0x993f, 0xf010, 0xbd2, 0x6068, 0xf1cd, 0x0, 0x1);
        gbc.writeMem(0x80ea, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x993f, gbc.sp());
        EXPECT(0x80ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ea));
        EXPECT(0xfc, gbc.readMem(0x80eb));
        // CB FC 0070
        gbc.setState(0xc9f0, 0xb33a, 0x7e70, 0x360c, 0x903, 0x898e, 0x1, 0x0);
        gbc.writeMem(0xc9f0, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb33a, gbc.sp());
        EXPECT(0xc9f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f0));
        EXPECT(0xfc, gbc.readMem(0xc9f1));
        // CB FC 0071
        gbc.setState(0x7ec7, 0x97d5, 0xded0, 0xcf95, 0xfa88, 0xe9a1, 0x1, 0x0);
        gbc.writeMem(0x7ec7, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x97d5, gbc.sp());
        EXPECT(0x7ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0072
        gbc.setState(0x59ee, 0x1f42, 0x6c20, 0xf0bb, 0x635d, 0xa53c, 0x0, 0x1);
        gbc.writeMem(0x59ee, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1f42, gbc.sp());
        EXPECT(0x59f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0073
        gbc.setState(0x81de, 0xea08, 0x1110, 0x22e9, 0xcdf6, 0x290c, 0x0, 0x1);
        gbc.writeMem(0x81de, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xea08, gbc.sp());
        EXPECT(0x81e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81de));
        EXPECT(0xfc, gbc.readMem(0x81df));
        // CB FC 0074
        gbc.setState(0x2114, 0x64aa, 0xd6a0, 0x94be, 0xd103, 0x8fa4, 0x1, 0x0);
        gbc.writeMem(0x2114, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x64aa, gbc.sp());
        EXPECT(0x2116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0075
        gbc.setState(0x82be, 0x2f16, 0x2970, 0xfdae, 0xb79e, 0xedb5, 0x1, 0x0);
        gbc.writeMem(0x82be, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2f16, gbc.sp());
        EXPECT(0x82c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82be));
        EXPECT(0xfc, gbc.readMem(0x82bf));
        // CB FC 0076
        gbc.setState(0x8bc1, 0xe36, 0x8e10, 0xbb6, 0xd4d, 0x6915, 0x1, 0x0);
        gbc.writeMem(0x8bc1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe36, gbc.sp());
        EXPECT(0x8bc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc1));
        EXPECT(0xfc, gbc.readMem(0x8bc2));
        // CB FC 0077
        gbc.setState(0x23f1, 0x6590, 0x1f00, 0xb2f5, 0x2f3a, 0xf3b3, 0x0, 0x0);
        gbc.writeMem(0x23f1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6590, gbc.sp());
        EXPECT(0x23f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0078
        gbc.setState(0x34d5, 0xab7b, 0xcbe0, 0x6826, 0xff1b, 0xafb9, 0x0, 0x0);
        gbc.writeMem(0x34d5, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xab7b, gbc.sp());
        EXPECT(0x34d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0079
        gbc.setState(0x5f39, 0xef5f, 0x4150, 0x52ac, 0x8bdf, 0x77ed, 0x1, 0x1);
        gbc.writeMem(0x5f39, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xef5f, gbc.sp());
        EXPECT(0x5f3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 007A
        gbc.setState(0x866d, 0xf85a, 0x5f40, 0x9c13, 0x2cbc, 0x51e6, 0x1, 0x1);
        gbc.writeMem(0x866d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf85a, gbc.sp());
        EXPECT(0x866f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x866d));
        EXPECT(0xfc, gbc.readMem(0x866e));
        // CB FC 007B
        gbc.setState(0x2d37, 0x2396, 0xc2d0, 0xacb9, 0x3ced, 0xcb61, 0x0, 0x0);
        gbc.writeMem(0x2d37, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2396, gbc.sp());
        EXPECT(0x2d39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 007C
        gbc.setState(0x2a82, 0x9643, 0xaa30, 0x95ca, 0xbe4a, 0xeaaf, 0x1, 0x0);
        gbc.writeMem(0x2a82, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9643, gbc.sp());
        EXPECT(0x2a84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 007D
        gbc.setState(0x29ed, 0x1cef, 0xee90, 0x6747, 0x6ac9, 0x1f04, 0x0, 0x0);
        gbc.writeMem(0x29ed, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1cef, gbc.sp());
        EXPECT(0x29ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 007E
        gbc.setState(0x3c55, 0xa9bc, 0x9650, 0x4cf4, 0x15b8, 0xc681, 0x1, 0x0);
        gbc.writeMem(0x3c55, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa9bc, gbc.sp());
        EXPECT(0x3c57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 007F
        gbc.setState(0xa101, 0x3adc, 0xf390, 0xdd99, 0x6143, 0x974b, 0x1, 0x0);
        gbc.writeMem(0xa101, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3adc, gbc.sp());
        EXPECT(0xa103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa101));
        EXPECT(0xfc, gbc.readMem(0xa102));
        // CB FC 0080
        gbc.setState(0x244c, 0x6a2e, 0x7920, 0xee56, 0xfc3b, 0x664f, 0x0, 0x1);
        gbc.writeMem(0x244c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6a2e, gbc.sp());
        EXPECT(0x244e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0081
        gbc.setState(0x4499, 0x5352, 0xb350, 0xf3c1, 0xed10, 0x1463, 0x1, 0x0);
        gbc.writeMem(0x4499, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5352, gbc.sp());
        EXPECT(0x449b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0082
        gbc.setState(0x626c, 0x960e, 0x25e0, 0xb75f, 0x4385, 0xf442, 0x1, 0x1);
        gbc.writeMem(0x626c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x960e, gbc.sp());
        EXPECT(0x626e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0083
        gbc.setState(0xee6, 0xd53c, 0x5590, 0xe77a, 0xcf8a, 0x2e55, 0x1, 0x0);
        gbc.writeMem(0xee6, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd53c, gbc.sp());
        EXPECT(0xee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0084
        gbc.setState(0xbc60, 0x264b, 0x6460, 0x3eb, 0xb7c8, 0xbb21, 0x0, 0x1);
        gbc.writeMem(0xbc60, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x264b, gbc.sp());
        EXPECT(0xbc62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc60));
        EXPECT(0xfc, gbc.readMem(0xbc61));
        // CB FC 0085
        gbc.setState(0x3ab1, 0x4c77, 0xa5d0, 0x16b8, 0x18f7, 0xb3c3, 0x1, 0x1);
        gbc.writeMem(0x3ab1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4c77, gbc.sp());
        EXPECT(0x3ab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0086
        gbc.setState(0x7a1a, 0x53, 0xaa90, 0x81b8, 0x9b8c, 0xc1fb, 0x0, 0x1);
        gbc.writeMem(0x7a1a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x53, gbc.sp());
        EXPECT(0x7a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0087
        gbc.setState(0xcd02, 0x40e1, 0x5480, 0xbd38, 0x288d, 0x14b7, 0x0, 0x1);
        gbc.writeMem(0xcd02, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x40e1, gbc.sp());
        EXPECT(0xcd04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd02));
        EXPECT(0xfc, gbc.readMem(0xcd03));
        // CB FC 0088
        gbc.setState(0x8717, 0xaaa7, 0x8320, 0x15c5, 0xd2fd, 0x4858, 0x1, 0x1);
        gbc.writeMem(0x8717, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xaaa7, gbc.sp());
        EXPECT(0x8719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8717));
        EXPECT(0xfc, gbc.readMem(0x8718));
        // CB FC 0089
        gbc.setState(0x50d, 0x203a, 0x2800, 0x85e9, 0xc74d, 0x4c4e, 0x1, 0x1);
        gbc.writeMem(0x50d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x203a, gbc.sp());
        EXPECT(0x50f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 008A
        gbc.setState(0x3c29, 0x730b, 0xd1a0, 0xb56, 0x3735, 0xbf99, 0x1, 0x1);
        gbc.writeMem(0x3c29, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x730b, gbc.sp());
        EXPECT(0x3c2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 008B
        gbc.setState(0x9775, 0xcf66, 0xdd90, 0x1d79, 0xcd5d, 0x8b9e, 0x1, 0x1);
        gbc.writeMem(0x9775, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xcf66, gbc.sp());
        EXPECT(0x9777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9775));
        EXPECT(0xfc, gbc.readMem(0x9776));
        // CB FC 008D
        gbc.setState(0xcb09, 0xd3a5, 0x4840, 0xbff1, 0x5c07, 0x73fd, 0x1, 0x0);
        gbc.writeMem(0xcb09, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd3a5, gbc.sp());
        EXPECT(0xcb0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb09));
        EXPECT(0xfc, gbc.readMem(0xcb0a));
        // CB FC 008E
        gbc.setState(0xd03c, 0xd31b, 0x80e0, 0xc160, 0xab7d, 0x656b, 0x1, 0x0);
        gbc.writeMem(0xd03c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd31b, gbc.sp());
        EXPECT(0xd03e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd03c));
        EXPECT(0xfc, gbc.readMem(0xd03d));
        // CB FC 008F
        gbc.setState(0x51b2, 0x57e4, 0x7b90, 0xe565, 0xe929, 0x867d, 0x1, 0x0);
        gbc.writeMem(0x51b2, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x57e4, gbc.sp());
        EXPECT(0x51b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0090
        gbc.setState(0x566d, 0xa1ae, 0x740, 0x3a7, 0x1964, 0x7138, 0x1, 0x0);
        gbc.writeMem(0x566d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa1ae, gbc.sp());
        EXPECT(0x566f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0091
        gbc.setState(0x6a94, 0xaec4, 0x5290, 0x4c7e, 0xa76, 0xde66, 0x1, 0x1);
        gbc.writeMem(0x6a94, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xaec4, gbc.sp());
        EXPECT(0x6a96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0092
        gbc.setState(0x1e29, 0x3464, 0x93c0, 0xc40d, 0xbc6b, 0x6f50, 0x1, 0x0);
        gbc.writeMem(0x1e29, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3464, gbc.sp());
        EXPECT(0x1e2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0093
        gbc.setState(0x6d0e, 0xd7a1, 0x5ea0, 0x30d2, 0xffe, 0x84e, 0x1, 0x0);
        gbc.writeMem(0x6d0e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd7a1, gbc.sp());
        EXPECT(0x6d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0094
        gbc.setState(0x2edb, 0x1d20, 0xb250, 0x7884, 0x80e9, 0x26df, 0x0, 0x0);
        gbc.writeMem(0x2edb, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1d20, gbc.sp());
        EXPECT(0x2edd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0095
        gbc.setState(0xc02d, 0xa3c5, 0xeba0, 0x949, 0xce0a, 0x87be, 0x0, 0x1);
        gbc.writeMem(0xc02d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa3c5, gbc.sp());
        EXPECT(0xc02f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc02d));
        EXPECT(0xfc, gbc.readMem(0xc02e));
        // CB FC 0096
        gbc.setState(0x483, 0xc48, 0x77a0, 0xdf13, 0xc29f, 0xb40a, 0x1, 0x1);
        gbc.writeMem(0x483, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc48, gbc.sp());
        EXPECT(0x485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0097
        gbc.setState(0x9c18, 0x2c24, 0xc1c0, 0x7e33, 0xede7, 0x6375, 0x0, 0x0);
        gbc.writeMem(0x9c18, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2c24, gbc.sp());
        EXPECT(0x9c1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c18));
        EXPECT(0xfc, gbc.readMem(0x9c19));
        // CB FC 0098
        gbc.setState(0x20e0, 0x4779, 0x290, 0xea61, 0x5993, 0x7d4, 0x0, 0x1);
        gbc.writeMem(0x20e0, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4779, gbc.sp());
        EXPECT(0x20e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0099
        gbc.setState(0x1830, 0x81e3, 0x4a00, 0x3fac, 0xbb1d, 0x85d0, 0x1, 0x1);
        gbc.writeMem(0x1830, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x81e3, gbc.sp());
        EXPECT(0x1832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 009A
        gbc.setState(0xcfd6, 0x62f3, 0xe660, 0x9bb7, 0x66ba, 0x6461, 0x0, 0x1);
        gbc.writeMem(0xcfd6, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x62f3, gbc.sp());
        EXPECT(0xcfd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd6));
        EXPECT(0xfc, gbc.readMem(0xcfd7));
        // CB FC 009B
        gbc.setState(0x2cac, 0x94ed, 0xad80, 0xc54d, 0xe8ec, 0x7693, 0x1, 0x1);
        gbc.writeMem(0x2cac, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x94ed, gbc.sp());
        EXPECT(0x2cae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 009C
        gbc.setState(0x5946, 0xa9f4, 0x9200, 0xc9a4, 0x333, 0xcca, 0x0, 0x0);
        gbc.writeMem(0x5946, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa9f4, gbc.sp());
        EXPECT(0x5948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 009E
        gbc.setState(0x8643, 0xde97, 0x21c0, 0xefc8, 0x20cc, 0xb528, 0x0, 0x1);
        gbc.writeMem(0x8643, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xde97, gbc.sp());
        EXPECT(0x8645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8643));
        EXPECT(0xfc, gbc.readMem(0x8644));
        // CB FC 009F
        gbc.setState(0xdd1e, 0xbfe0, 0x9c90, 0x3d47, 0xfab8, 0x457, 0x0, 0x1);
        gbc.writeMem(0xdd1e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbfe0, gbc.sp());
        EXPECT(0xdd20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd1e));
        EXPECT(0xfc, gbc.readMem(0xdd1f));
        // CB FC 00A0
        gbc.setState(0x2806, 0x6453, 0x920, 0x15cc, 0xb9eb, 0x1064, 0x0, 0x0);
        gbc.writeMem(0x2806, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6453, gbc.sp());
        EXPECT(0x2808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00A1
        gbc.setState(0x1bbf, 0x492e, 0x2800, 0xd875, 0x8dd1, 0x83c4, 0x0, 0x1);
        gbc.writeMem(0x1bbf, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x492e, gbc.sp());
        EXPECT(0x1bc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00A2
        gbc.setState(0xde44, 0xf435, 0x3830, 0x3b5, 0x3af6, 0xe5e6, 0x0, 0x0);
        gbc.writeMem(0xde44, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf435, gbc.sp());
        EXPECT(0xde46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde44));
        EXPECT(0xfc, gbc.readMem(0xde45));
        // CB FC 00A3
        gbc.setState(0x4f50, 0x8975, 0x2d70, 0xdc5b, 0x99a9, 0x4e4b, 0x1, 0x1);
        gbc.writeMem(0x4f50, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8975, gbc.sp());
        EXPECT(0x4f52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 00A4
        gbc.setState(0xa271, 0x75f3, 0x29f0, 0x4d43, 0x2258, 0x7302, 0x0, 0x1);
        gbc.writeMem(0xa271, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x75f3, gbc.sp());
        EXPECT(0xa273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa271));
        EXPECT(0xfc, gbc.readMem(0xa272));
        // CB FC 00A5
        gbc.setState(0x474, 0x244c, 0x8480, 0x66c6, 0x4c06, 0xeec1, 0x1, 0x0);
        gbc.writeMem(0x474, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x244c, gbc.sp());
        EXPECT(0x476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00A6
        gbc.setState(0x2e31, 0xaff8, 0xa680, 0x56f4, 0xe8f3, 0x5824, 0x0, 0x1);
        gbc.writeMem(0x2e31, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xaff8, gbc.sp());
        EXPECT(0x2e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00A7
        gbc.setState(0x9384, 0xd874, 0x5e10, 0x3740, 0xb1da, 0x62ea, 0x1, 0x1);
        gbc.writeMem(0x9384, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd874, gbc.sp());
        EXPECT(0x9386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9384));
        EXPECT(0xfc, gbc.readMem(0x9385));
        // CB FC 00A8
        gbc.setState(0x46f2, 0x3bac, 0xde20, 0x897d, 0x89ee, 0xbe7b, 0x0, 0x1);
        gbc.writeMem(0x46f2, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3bac, gbc.sp());
        EXPECT(0x46f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00A9
        gbc.setState(0x4d2a, 0xaf2b, 0x1460, 0x5a60, 0x76ad, 0x8a01, 0x1, 0x0);
        gbc.writeMem(0x4d2a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xaf2b, gbc.sp());
        EXPECT(0x4d2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00AA
        gbc.setState(0xa5ce, 0x8df, 0x1a30, 0xdf58, 0xc3c0, 0xe1e8, 0x1, 0x0);
        gbc.writeMem(0xa5ce, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8df, gbc.sp());
        EXPECT(0xa5d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ce));
        EXPECT(0xfc, gbc.readMem(0xa5cf));
        // CB FC 00AB
        gbc.setState(0xa25e, 0x2b6e, 0xf0a0, 0x9060, 0xe318, 0xd3a5, 0x0, 0x0);
        gbc.writeMem(0xa25e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2b6e, gbc.sp());
        EXPECT(0xa260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa25e));
        EXPECT(0xfc, gbc.readMem(0xa25f));
        // CB FC 00AC
        gbc.setState(0x1768, 0xdbbd, 0xd9e0, 0x2723, 0x57c0, 0x2435, 0x0, 0x0);
        gbc.writeMem(0x1768, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xdbbd, gbc.sp());
        EXPECT(0x176a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00AD
        gbc.setState(0xa220, 0xc9da, 0x8de0, 0x3ebb, 0x22b3, 0xcd77, 0x1, 0x0);
        gbc.writeMem(0xa220, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc9da, gbc.sp());
        EXPECT(0xa222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa220));
        EXPECT(0xfc, gbc.readMem(0xa221));
        // CB FC 00AE
        gbc.setState(0x7d6, 0xd667, 0xc9b0, 0xee6a, 0xf547, 0x2e0f, 0x0, 0x0);
        gbc.writeMem(0x7d6, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd667, gbc.sp());
        EXPECT(0x7d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 00AF
        gbc.setState(0xe9ee, 0xbaf1, 0x5c00, 0xc8d6, 0xf94c, 0x472d, 0x1, 0x0);
        gbc.writeMem(0xe9ee, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbaf1, gbc.sp());
        EXPECT(0xe9f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ee));
        EXPECT(0xfc, gbc.readMem(0xe9ef));
        // CB FC 00B0
        gbc.setState(0x154d, 0x7960, 0xecf0, 0x540d, 0xe247, 0x5a15, 0x0, 0x0);
        gbc.writeMem(0x154d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7960, gbc.sp());
        EXPECT(0x154f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 00B1
        gbc.setState(0x3448, 0x33d9, 0x1c0, 0x3d6, 0x76ed, 0xe854, 0x1, 0x1);
        gbc.writeMem(0x3448, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x33d9, gbc.sp());
        EXPECT(0x344a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00B2
        gbc.setState(0x553e, 0x1a68, 0x62f0, 0xa9bd, 0xafbc, 0x8419, 0x1, 0x0);
        gbc.writeMem(0x553e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1a68, gbc.sp());
        EXPECT(0x5540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 00B3
        gbc.setState(0x35f2, 0x4197, 0xf50, 0x1e74, 0xc52f, 0xc87d, 0x0, 0x0);
        gbc.writeMem(0x35f2, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4197, gbc.sp());
        EXPECT(0x35f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 00B4
        gbc.setState(0x63f3, 0xa42e, 0xeaa0, 0x182a, 0x3409, 0x5be7, 0x0, 0x0);
        gbc.writeMem(0x63f3, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa42e, gbc.sp());
        EXPECT(0x63f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00B5
        gbc.setState(0xbdcd, 0x8403, 0x4350, 0xf78e, 0x6b9e, 0xd7fb, 0x1, 0x0);
        gbc.writeMem(0xbdcd, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8403, gbc.sp());
        EXPECT(0xbdcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdcd));
        EXPECT(0xfc, gbc.readMem(0xbdce));
        // CB FC 00B6
        gbc.setState(0x26f9, 0x8e36, 0x79a0, 0x322b, 0xf4fa, 0xf72f, 0x0, 0x1);
        gbc.writeMem(0x26f9, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8e36, gbc.sp());
        EXPECT(0x26fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00B7
        gbc.setState(0xe14, 0x4681, 0x9470, 0xcdd4, 0x92cf, 0x6ed0, 0x0, 0x0);
        gbc.writeMem(0xe14, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4681, gbc.sp());
        EXPECT(0xe16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 00B8
        gbc.setState(0xe53a, 0x7e27, 0x6c60, 0xe0f4, 0xa291, 0xa454, 0x1, 0x0);
        gbc.writeMem(0xe53a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7e27, gbc.sp());
        EXPECT(0xe53c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe53a));
        EXPECT(0xfc, gbc.readMem(0xe53b));
        // CB FC 00B9
        gbc.setState(0x1839, 0xba11, 0x4620, 0xf67e, 0x2aeb, 0x3e51, 0x1, 0x0);
        gbc.writeMem(0x1839, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xba11, gbc.sp());
        EXPECT(0x183b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00BA
        gbc.setState(0xa566, 0x6c97, 0x3c70, 0x2d6b, 0x3607, 0xa345, 0x1, 0x1);
        gbc.writeMem(0xa566, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6c97, gbc.sp());
        EXPECT(0xa568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa566));
        EXPECT(0xfc, gbc.readMem(0xa567));
        // CB FC 00BB
        gbc.setState(0x1736, 0x278a, 0xbdc0, 0x4c8b, 0x4981, 0xf935, 0x1, 0x1);
        gbc.writeMem(0x1736, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x278a, gbc.sp());
        EXPECT(0x1738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00BC
        gbc.setState(0x5530, 0xb756, 0x2c20, 0xce37, 0x9fd3, 0xfff4, 0x1, 0x1);
        gbc.writeMem(0x5530, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb756, gbc.sp());
        EXPECT(0x5532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00BD
        gbc.setState(0x2dc7, 0x4b80, 0x2e70, 0x6d75, 0x3b88, 0x7b52, 0x1, 0x1);
        gbc.writeMem(0x2dc7, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4b80, gbc.sp());
        EXPECT(0x2dc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 00BE
        gbc.setState(0x8b5a, 0xd301, 0xa230, 0xcb6f, 0x6181, 0x970f, 0x0, 0x0);
        gbc.writeMem(0x8b5a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd301, gbc.sp());
        EXPECT(0x8b5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b5a));
        EXPECT(0xfc, gbc.readMem(0x8b5b));
        // CB FC 00BF
        gbc.setState(0xc5aa, 0xcc16, 0x6150, 0x219e, 0x528c, 0x78d4, 0x1, 0x0);
        gbc.writeMem(0xc5aa, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xcc16, gbc.sp());
        EXPECT(0xc5ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5aa));
        EXPECT(0xfc, gbc.readMem(0xc5ab));
        // CB FC 00C0
        gbc.setState(0x2105, 0x9e6, 0xbc30, 0x11d5, 0xfe17, 0x1e69, 0x0, 0x0);
        gbc.writeMem(0x2105, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9e6, gbc.sp());
        EXPECT(0x2107, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 00C1
        gbc.setState(0xb0c9, 0x633c, 0x9930, 0xa71c, 0xd5c1, 0x78d6, 0x0, 0x1);
        gbc.writeMem(0xb0c9, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x633c, gbc.sp());
        EXPECT(0xb0cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0c9));
        EXPECT(0xfc, gbc.readMem(0xb0ca));
        // CB FC 00C2
        gbc.setState(0x7f1a, 0x85b2, 0xa450, 0xb07c, 0x7eac, 0x961c, 0x0, 0x1);
        gbc.writeMem(0x7f1a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x85b2, gbc.sp());
        EXPECT(0x7f1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 00C3
        gbc.setState(0xea8f, 0x652, 0xf7e0, 0xe239, 0xa3fc, 0xff10, 0x1, 0x0);
        gbc.writeMem(0xea8f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x652, gbc.sp());
        EXPECT(0xea91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea8f));
        EXPECT(0xfc, gbc.readMem(0xea90));
        // CB FC 00C4
        gbc.setState(0x6d8c, 0x753f, 0xf80, 0x7c1f, 0xbbcd, 0xf7df, 0x0, 0x0);
        gbc.writeMem(0x6d8c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x753f, gbc.sp());
        EXPECT(0x6d8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00C5
        gbc.setState(0x8d16, 0xd664, 0xff20, 0xe941, 0xef39, 0xdc9f, 0x1, 0x1);
        gbc.writeMem(0x8d16, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd664, gbc.sp());
        EXPECT(0x8d18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d16));
        EXPECT(0xfc, gbc.readMem(0x8d17));
        // CB FC 00C6
        gbc.setState(0xaec7, 0xc051, 0x2320, 0x5cbc, 0x5592, 0x4433, 0x1, 0x0);
        gbc.writeMem(0xaec7, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc051, gbc.sp());
        EXPECT(0xaec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaec7));
        EXPECT(0xfc, gbc.readMem(0xaec8));
        // CB FC 00C7
        gbc.setState(0xb627, 0xacc2, 0xafc0, 0xf5fe, 0xb124, 0x1025, 0x0, 0x0);
        gbc.writeMem(0xb627, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xacc2, gbc.sp());
        EXPECT(0xb629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb627));
        EXPECT(0xfc, gbc.readMem(0xb628));
        // CB FC 00C8
        gbc.setState(0x19cd, 0x1272, 0xa180, 0xf00d, 0xa40c, 0x1bd4, 0x0, 0x0);
        gbc.writeMem(0x19cd, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1272, gbc.sp());
        EXPECT(0x19cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00C9
        gbc.setState(0x8cd9, 0xa4ac, 0xe1a0, 0x6515, 0xa0c3, 0x2444, 0x1, 0x1);
        gbc.writeMem(0x8cd9, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa4ac, gbc.sp());
        EXPECT(0x8cdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd9));
        EXPECT(0xfc, gbc.readMem(0x8cda));
        // CB FC 00CA
        gbc.setState(0x3823, 0xce75, 0xa710, 0x72e7, 0x471f, 0xc5be, 0x0, 0x1);
        gbc.writeMem(0x3823, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xce75, gbc.sp());
        EXPECT(0x3825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 00CB
        gbc.setState(0x8db8, 0xaed, 0xa860, 0xdc7a, 0x2618, 0x2652, 0x1, 0x1);
        gbc.writeMem(0x8db8, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xaed, gbc.sp());
        EXPECT(0x8dba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db8));
        EXPECT(0xfc, gbc.readMem(0x8db9));
        // CB FC 00CC
        gbc.setState(0x490c, 0x8205, 0xff20, 0x3dd8, 0x86a6, 0x522, 0x0, 0x0);
        gbc.writeMem(0x490c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8205, gbc.sp());
        EXPECT(0x490e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00CD
        gbc.setState(0xfd8, 0x1551, 0x7c80, 0xd141, 0x8cab, 0x3f60, 0x0, 0x0);
        gbc.writeMem(0xfd8, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1551, gbc.sp());
        EXPECT(0xfda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00CE
        gbc.setState(0x278e, 0x4aab, 0xc580, 0xcd40, 0xcd3a, 0xc4a8, 0x0, 0x1);
        gbc.writeMem(0x278e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4aab, gbc.sp());
        EXPECT(0x2790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00CF
        gbc.setState(0x93ab, 0x140d, 0x58f0, 0xedd6, 0xde94, 0x8772, 0x1, 0x0);
        gbc.writeMem(0x93ab, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x140d, gbc.sp());
        EXPECT(0x93ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ab));
        EXPECT(0xfc, gbc.readMem(0x93ac));
        // CB FC 00D0
        gbc.setState(0x6cf2, 0x63ae, 0xec30, 0xd577, 0xf4b9, 0xeb6e, 0x1, 0x0);
        gbc.writeMem(0x6cf2, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x63ae, gbc.sp());
        EXPECT(0x6cf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 00D1
        gbc.setState(0xdb78, 0x1632, 0x1740, 0x5897, 0x96ae, 0x7147, 0x1, 0x0);
        gbc.writeMem(0xdb78, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1632, gbc.sp());
        EXPECT(0xdb7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb78));
        EXPECT(0xfc, gbc.readMem(0xdb79));
        // CB FC 00D2
        gbc.setState(0x8140, 0x4558, 0x7e10, 0x3ec6, 0x490b, 0x5bd9, 0x1, 0x1);
        gbc.writeMem(0x8140, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4558, gbc.sp());
        EXPECT(0x8142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8140));
        EXPECT(0xfc, gbc.readMem(0x8141));
        // CB FC 00D3
        gbc.setState(0x45f6, 0xb1a5, 0x9840, 0x9159, 0x3b30, 0x8b6c, 0x0, 0x1);
        gbc.writeMem(0x45f6, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb1a5, gbc.sp());
        EXPECT(0x45f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00D4
        gbc.setState(0xee64, 0xf3f9, 0x8d60, 0xd88b, 0x5b53, 0xf5d2, 0x1, 0x0);
        gbc.writeMem(0xee64, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf3f9, gbc.sp());
        EXPECT(0xee66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee64));
        EXPECT(0xfc, gbc.readMem(0xee65));
        // CB FC 00D5
        gbc.setState(0xd12c, 0x88d4, 0x69d0, 0x9a66, 0x945a, 0x24d4, 0x1, 0x1);
        gbc.writeMem(0xd12c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x88d4, gbc.sp());
        EXPECT(0xd12e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd12c));
        EXPECT(0xfc, gbc.readMem(0xd12d));
        // CB FC 00D6
        gbc.setState(0xceda, 0x72a1, 0x6420, 0xc979, 0x2964, 0x89e6, 0x1, 0x0);
        gbc.writeMem(0xceda, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x72a1, gbc.sp());
        EXPECT(0xcedc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceda));
        EXPECT(0xfc, gbc.readMem(0xcedb));
        // CB FC 00D7
        gbc.setState(0xbd42, 0x8ada, 0x5ea0, 0x5995, 0x3253, 0x7ab1, 0x0, 0x1);
        gbc.writeMem(0xbd42, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8ada, gbc.sp());
        EXPECT(0xbd44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd42));
        EXPECT(0xfc, gbc.readMem(0xbd43));
        // CB FC 00D8
        gbc.setState(0x9539, 0x2695, 0xdfd0, 0x2ed4, 0xb439, 0xeaa4, 0x0, 0x0);
        gbc.writeMem(0x9539, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2695, gbc.sp());
        EXPECT(0x953b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9539));
        EXPECT(0xfc, gbc.readMem(0x953a));
        // CB FC 00DA
        gbc.setState(0xcd7a, 0xce7, 0xeab0, 0x1837, 0x8aac, 0x84de, 0x1, 0x1);
        gbc.writeMem(0xcd7a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xce7, gbc.sp());
        EXPECT(0xcd7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd7a));
        EXPECT(0xfc, gbc.readMem(0xcd7b));
        // CB FC 00DB
        gbc.setState(0x739c, 0xf566, 0xb270, 0xe949, 0xc3e9, 0xde30, 0x1, 0x1);
        gbc.writeMem(0x739c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf566, gbc.sp());
        EXPECT(0x739e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 00DC
        gbc.setState(0x20d5, 0x394d, 0x8ee0, 0xed01, 0xdbdc, 0x6cda, 0x0, 0x0);
        gbc.writeMem(0x20d5, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x394d, gbc.sp());
        EXPECT(0x20d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00DE
        gbc.setState(0x371e, 0xd145, 0x4d90, 0x8c3, 0x53b6, 0x818d, 0x0, 0x1);
        gbc.writeMem(0x371e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd145, gbc.sp());
        EXPECT(0x3720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 00DF
        gbc.setState(0x84a8, 0x2f47, 0x6ae0, 0xa821, 0x5396, 0x6c21, 0x0, 0x1);
        gbc.writeMem(0x84a8, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2f47, gbc.sp());
        EXPECT(0x84aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84a8));
        EXPECT(0xfc, gbc.readMem(0x84a9));
        // CB FC 00E0
        gbc.setState(0x6b00, 0x9bc3, 0x9190, 0x216, 0x2d46, 0xad85, 0x1, 0x1);
        gbc.writeMem(0x6b00, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9bc3, gbc.sp());
        EXPECT(0x6b02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 00E1
        gbc.setState(0xad27, 0x5ac7, 0x3d00, 0x5dcf, 0x8709, 0xd902, 0x0, 0x0);
        gbc.writeMem(0xad27, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5ac7, gbc.sp());
        EXPECT(0xad29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad27));
        EXPECT(0xfc, gbc.readMem(0xad28));
        // CB FC 00E2
        gbc.setState(0xd226, 0x29aa, 0xf6a0, 0x1bf8, 0x6570, 0x46c1, 0x0, 0x0);
        gbc.writeMem(0xd226, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x29aa, gbc.sp());
        EXPECT(0xd228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd226));
        EXPECT(0xfc, gbc.readMem(0xd227));
        // CB FC 00E3
        gbc.setState(0x2607, 0x7c7d, 0x3f70, 0x184e, 0x812a, 0xcda6, 0x1, 0x0);
        gbc.writeMem(0x2607, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7c7d, gbc.sp());
        EXPECT(0x2609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 00E4
        gbc.setState(0x4947, 0xfa7c, 0xe920, 0xd589, 0x5296, 0x7368, 0x1, 0x1);
        gbc.writeMem(0x4947, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xfa7c, gbc.sp());
        EXPECT(0x4949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00E5
        gbc.setState(0x491, 0xa4d4, 0xa7b0, 0x6ea, 0x88b, 0x8373, 0x0, 0x0);
        gbc.writeMem(0x491, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa4d4, gbc.sp());
        EXPECT(0x493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 00E6
        gbc.setState(0x7f9f, 0xb95f, 0x6ea0, 0xc02c, 0x2233, 0x1acb, 0x0, 0x0);
        gbc.writeMem(0x7f9f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb95f, gbc.sp());
        EXPECT(0x7fa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00E7
        gbc.setState(0x4963, 0x92b, 0x7e30, 0xae72, 0xfaa8, 0x85e2, 0x0, 0x1);
        gbc.writeMem(0x4963, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x92b, gbc.sp());
        EXPECT(0x4965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 00E8
        gbc.setState(0xcbbd, 0xc280, 0xbf0, 0x843a, 0xa0f8, 0xa70b, 0x0, 0x1);
        gbc.writeMem(0xcbbd, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc280, gbc.sp());
        EXPECT(0xcbbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbbd));
        EXPECT(0xfc, gbc.readMem(0xcbbe));
        // CB FC 00E9
        gbc.setState(0x8108, 0x4f35, 0x3a60, 0x26cb, 0xa3b1, 0x25a5, 0x1, 0x1);
        gbc.writeMem(0x8108, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4f35, gbc.sp());
        EXPECT(0x810a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8108));
        EXPECT(0xfc, gbc.readMem(0x8109));
        // CB FC 00EA
        gbc.setState(0xa70, 0x4e39, 0xff10, 0xfe8c, 0x809b, 0xd435, 0x1, 0x1);
        gbc.writeMem(0xa70, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4e39, gbc.sp());
        EXPECT(0xa72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 00EC
        gbc.setState(0x9dd8, 0x2ca9, 0x4940, 0x3057, 0xe9b1, 0x8999, 0x1, 0x0);
        gbc.writeMem(0x9dd8, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2ca9, gbc.sp());
        EXPECT(0x9dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dd8));
        EXPECT(0xfc, gbc.readMem(0x9dd9));
        // CB FC 00ED
        gbc.setState(0x9d89, 0xe24a, 0x7db0, 0x6353, 0x256, 0x628d, 0x1, 0x1);
        gbc.writeMem(0x9d89, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe24a, gbc.sp());
        EXPECT(0x9d8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d89));
        EXPECT(0xfc, gbc.readMem(0x9d8a));
        // CB FC 00EE
        gbc.setState(0xd20a, 0x5c60, 0x2190, 0xc895, 0xba89, 0x8ec5, 0x1, 0x0);
        gbc.writeMem(0xd20a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5c60, gbc.sp());
        EXPECT(0xd20c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd20a));
        EXPECT(0xfc, gbc.readMem(0xd20b));
        // CB FC 00EF
        gbc.setState(0x774d, 0x2300, 0x8fa0, 0x97d2, 0xe496, 0x7e9a, 0x0, 0x0);
        gbc.writeMem(0x774d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2300, gbc.sp());
        EXPECT(0x774f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00F0
        gbc.setState(0x1377, 0xf039, 0x9140, 0x96e5, 0xd8a1, 0x3eb1, 0x0, 0x1);
        gbc.writeMem(0x1377, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf039, gbc.sp());
        EXPECT(0x1379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00F2
        gbc.setState(0xd43f, 0x865c, 0x61b0, 0x834c, 0xdefe, 0x59df, 0x1, 0x1);
        gbc.writeMem(0xd43f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x865c, gbc.sp());
        EXPECT(0xd441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd43f));
        EXPECT(0xfc, gbc.readMem(0xd440));
        // CB FC 00F3
        gbc.setState(0x7c48, 0x4e0, 0xfa0, 0x1f6a, 0xbaf4, 0x6486, 0x1, 0x1);
        gbc.writeMem(0x7c48, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4e0, gbc.sp());
        EXPECT(0x7c4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00F4
        gbc.setState(0x4b1d, 0x604e, 0x78f0, 0xb331, 0x1229, 0xc64b, 0x0, 0x0);
        gbc.writeMem(0x4b1d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x604e, gbc.sp());
        EXPECT(0x4b1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 00F5
        gbc.setState(0x48ca, 0xa33b, 0x3ab0, 0x3959, 0xf16b, 0xc81a, 0x0, 0x1);
        gbc.writeMem(0x48ca, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa33b, gbc.sp());
        EXPECT(0x48cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 00F6
        gbc.setState(0xb6f9, 0x9951, 0x220, 0xcfde, 0xd1b4, 0x3a44, 0x0, 0x0);
        gbc.writeMem(0xb6f9, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9951, gbc.sp());
        EXPECT(0xb6fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6f9));
        EXPECT(0xfc, gbc.readMem(0xb6fa));
        // CB FC 00F7
        gbc.setState(0x2bb6, 0xee76, 0xad60, 0xa1d3, 0xb0, 0x1dfd, 0x0, 0x1);
        gbc.writeMem(0x2bb6, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xee76, gbc.sp());
        EXPECT(0x2bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00F8
        gbc.setState(0xc22e, 0x591, 0xc820, 0x12ba, 0x678d, 0x4167, 0x0, 0x0);
        gbc.writeMem(0xc22e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x591, gbc.sp());
        EXPECT(0xc230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc22e));
        EXPECT(0xfc, gbc.readMem(0xc22f));
        // CB FC 00F9
        gbc.setState(0x25c1, 0x35a, 0x8300, 0x33e5, 0x22e, 0x3717, 0x0, 0x1);
        gbc.writeMem(0x25c1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x35a, gbc.sp());
        EXPECT(0x25c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 00FA
        gbc.setState(0x1224, 0xffbc, 0xe130, 0x2ff9, 0x7cf8, 0xcd9d, 0x0, 0x1);
        gbc.writeMem(0x1224, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xffbc, gbc.sp());
        EXPECT(0x1226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 00FB
        gbc.setState(0xea05, 0x5d9d, 0x1a40, 0x54a2, 0x8d44, 0x40c, 0x0, 0x0);
        gbc.writeMem(0xea05, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5d9d, gbc.sp());
        EXPECT(0xea07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea05));
        EXPECT(0xfc, gbc.readMem(0xea06));
        // CB FC 00FC
        gbc.setState(0xaf55, 0x7429, 0xc50, 0xe841, 0x7de2, 0x4af4, 0x0, 0x1);
        gbc.writeMem(0xaf55, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7429, gbc.sp());
        EXPECT(0xaf57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf55));
        EXPECT(0xfc, gbc.readMem(0xaf56));
        // CB FC 00FD
        gbc.setState(0xd9ec, 0x4fbe, 0x93f0, 0x55bb, 0xcd94, 0x1cc7, 0x0, 0x1);
        gbc.writeMem(0xd9ec, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4fbe, gbc.sp());
        EXPECT(0xd9ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ec));
        EXPECT(0xfc, gbc.readMem(0xd9ed));
        // CB FC 00FE
        gbc.setState(0xaf26, 0xf3d, 0x2780, 0x7a89, 0x390c, 0x6dab, 0x0, 0x1);
        gbc.writeMem(0xaf26, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf3d, gbc.sp());
        EXPECT(0xaf28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf26));
        EXPECT(0xfc, gbc.readMem(0xaf27));
        // CB FC 00FF
        gbc.setState(0x3312, 0xb774, 0x2f90, 0x32f8, 0xc63c, 0xdb0a, 0x1, 0x1);
        gbc.writeMem(0x3312, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb774, gbc.sp());
        EXPECT(0x3314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0100
        gbc.setState(0xaeb7, 0x68c9, 0xf9d0, 0xd439, 0x5bb7, 0xc540, 0x1, 0x1);
        gbc.writeMem(0xaeb7, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x68c9, gbc.sp());
        EXPECT(0xaeb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeb7));
        EXPECT(0xfc, gbc.readMem(0xaeb8));
        // CB FC 0101
        gbc.setState(0x7aae, 0xf4fd, 0x2210, 0x16dc, 0xa793, 0xe960, 0x0, 0x0);
        gbc.writeMem(0x7aae, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf4fd, gbc.sp());
        EXPECT(0x7ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0102
        gbc.setState(0x268e, 0x8bce, 0x8270, 0xe689, 0xef8, 0x1daf, 0x0, 0x1);
        gbc.writeMem(0x268e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8bce, gbc.sp());
        EXPECT(0x2690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0104
        gbc.setState(0xb9b7, 0xf0b, 0x30c0, 0xe8ae, 0xea7f, 0x5747, 0x1, 0x1);
        gbc.writeMem(0xb9b7, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf0b, gbc.sp());
        EXPECT(0xb9b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b7));
        EXPECT(0xfc, gbc.readMem(0xb9b8));
        // CB FC 0105
        gbc.setState(0xe2fd, 0x2d5c, 0xc380, 0xe26b, 0x8b63, 0x35b4, 0x0, 0x1);
        gbc.writeMem(0xe2fd, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2d5c, gbc.sp());
        EXPECT(0xe2ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2fd));
        EXPECT(0xfc, gbc.readMem(0xe2fe));
        // CB FC 0106
        gbc.setState(0x61a4, 0x7b79, 0x48e0, 0xb359, 0x20e0, 0x42d6, 0x1, 0x0);
        gbc.writeMem(0x61a4, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7b79, gbc.sp());
        EXPECT(0x61a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0107
        gbc.setState(0x7a78, 0x2427, 0x2270, 0xe31f, 0xf80e, 0x2d33, 0x0, 0x1);
        gbc.writeMem(0x7a78, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2427, gbc.sp());
        EXPECT(0x7a7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0108
        gbc.setState(0x9299, 0xdf4, 0x1d40, 0x53dc, 0xfe6, 0xb380, 0x1, 0x0);
        gbc.writeMem(0x9299, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdf4, gbc.sp());
        EXPECT(0x929b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9299));
        EXPECT(0xfc, gbc.readMem(0x929a));
        // CB FC 0109
        gbc.setState(0x68c6, 0x1641, 0x80f0, 0xa5f1, 0xaaaf, 0x21e4, 0x1, 0x1);
        gbc.writeMem(0x68c6, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1641, gbc.sp());
        EXPECT(0x68c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 010A
        gbc.setState(0x1e45, 0x3115, 0xd890, 0xbf1a, 0x1eb7, 0x25e4, 0x0, 0x0);
        gbc.writeMem(0x1e45, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3115, gbc.sp());
        EXPECT(0x1e47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 010B
        gbc.setState(0xcff1, 0x5b62, 0x3440, 0xfffd, 0xe4f3, 0x3697, 0x0, 0x1);
        gbc.writeMem(0xcff1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5b62, gbc.sp());
        EXPECT(0xcff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcff1));
        EXPECT(0xfc, gbc.readMem(0xcff2));
        // CB FC 010C
        gbc.setState(0xab69, 0xd157, 0xb400, 0xcd71, 0xf2fc, 0x6919, 0x0, 0x1);
        gbc.writeMem(0xab69, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd157, gbc.sp());
        EXPECT(0xab6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab69));
        EXPECT(0xfc, gbc.readMem(0xab6a));
        // CB FC 010E
        gbc.setState(0x3c46, 0xa5e3, 0xd380, 0x287e, 0x4341, 0x3021, 0x0, 0x0);
        gbc.writeMem(0x3c46, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa5e3, gbc.sp());
        EXPECT(0x3c48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 010F
        gbc.setState(0xa3c0, 0x7285, 0x1260, 0xb877, 0xa3ab, 0x633a, 0x0, 0x1);
        gbc.writeMem(0xa3c0, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7285, gbc.sp());
        EXPECT(0xa3c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3c0));
        EXPECT(0xfc, gbc.readMem(0xa3c1));
        // CB FC 0110
        gbc.setState(0x411b, 0x904d, 0x7f50, 0xad77, 0x72d4, 0x6df4, 0x1, 0x0);
        gbc.writeMem(0x411b, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x904d, gbc.sp());
        EXPECT(0x411d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0111
        gbc.setState(0xdc76, 0x686, 0xbea0, 0x4692, 0x18bb, 0x24af, 0x0, 0x0);
        gbc.writeMem(0xdc76, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x686, gbc.sp());
        EXPECT(0xdc78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc76));
        EXPECT(0xfc, gbc.readMem(0xdc77));
        // CB FC 0112
        gbc.setState(0xe97, 0xb213, 0x14d0, 0x6c2d, 0xf8c6, 0x3ff1, 0x1, 0x1);
        gbc.writeMem(0xe97, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb213, gbc.sp());
        EXPECT(0xe99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0113
        gbc.setState(0x9447, 0xbbd1, 0x6f40, 0xc996, 0xafd1, 0x17b3, 0x0, 0x0);
        gbc.writeMem(0x9447, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xbbd1, gbc.sp());
        EXPECT(0x9449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9447));
        EXPECT(0xfc, gbc.readMem(0x9448));
        // CB FC 0114
        gbc.setState(0x33f6, 0x87b, 0x8840, 0x31e7, 0xff2a, 0x8733, 0x1, 0x1);
        gbc.writeMem(0x33f6, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x87b, gbc.sp());
        EXPECT(0x33f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0115
        gbc.setState(0x8d89, 0xbf53, 0xbbe0, 0x83e8, 0xccb4, 0xe876, 0x0, 0x1);
        gbc.writeMem(0x8d89, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbf53, gbc.sp());
        EXPECT(0x8d8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d89));
        EXPECT(0xfc, gbc.readMem(0x8d8a));
        // CB FC 0116
        gbc.setState(0x7874, 0x7343, 0x7450, 0xc560, 0xd175, 0x7304, 0x0, 0x0);
        gbc.writeMem(0x7874, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7343, gbc.sp());
        EXPECT(0x7876, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0117
        gbc.setState(0xda5d, 0xd43f, 0xfe70, 0xb327, 0x652e, 0x1c74, 0x1, 0x1);
        gbc.writeMem(0xda5d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd43f, gbc.sp());
        EXPECT(0xda5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda5d));
        EXPECT(0xfc, gbc.readMem(0xda5e));
        // CB FC 0118
        gbc.setState(0xdc66, 0xcc29, 0xae00, 0x5199, 0x8bdd, 0xd65d, 0x0, 0x0);
        gbc.writeMem(0xdc66, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xcc29, gbc.sp());
        EXPECT(0xdc68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc66));
        EXPECT(0xfc, gbc.readMem(0xdc67));
        // CB FC 0119
        gbc.setState(0x5db1, 0x952a, 0x5eb0, 0x1df7, 0x716d, 0x4afd, 0x0, 0x1);
        gbc.writeMem(0x5db1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x952a, gbc.sp());
        EXPECT(0x5db3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 011A
        gbc.setState(0x5d7a, 0xf9b4, 0x8b50, 0xb695, 0x59c4, 0x5f15, 0x1, 0x1);
        gbc.writeMem(0x5d7a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf9b4, gbc.sp());
        EXPECT(0x5d7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 011B
        gbc.setState(0x7be6, 0x17aa, 0x3f50, 0xab58, 0x3227, 0xe7c3, 0x0, 0x1);
        gbc.writeMem(0x7be6, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x17aa, gbc.sp());
        EXPECT(0x7be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 011C
        gbc.setState(0xb190, 0xc41a, 0x2810, 0x6097, 0x457, 0xc709, 0x1, 0x0);
        gbc.writeMem(0xb190, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc41a, gbc.sp());
        EXPECT(0xb192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb190));
        EXPECT(0xfc, gbc.readMem(0xb191));
        // CB FC 011D
        gbc.setState(0xdc8e, 0xbce7, 0x53a0, 0xc95a, 0x9cca, 0x4bdc, 0x0, 0x0);
        gbc.writeMem(0xdc8e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbce7, gbc.sp());
        EXPECT(0xdc90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc8e));
        EXPECT(0xfc, gbc.readMem(0xdc8f));
        // CB FC 011E
        gbc.setState(0x5b31, 0x9b4f, 0xf500, 0xfa17, 0x350e, 0x9165, 0x0, 0x0);
        gbc.writeMem(0x5b31, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9b4f, gbc.sp());
        EXPECT(0x5b33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0120
        gbc.setState(0x71f2, 0x1f8c, 0xf240, 0xae5, 0x864b, 0x3c63, 0x0, 0x1);
        gbc.writeMem(0x71f2, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1f8c, gbc.sp());
        EXPECT(0x71f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0121
        gbc.setState(0x3b46, 0x5ea4, 0xbd80, 0xbf9c, 0x300b, 0x9759, 0x1, 0x0);
        gbc.writeMem(0x3b46, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5ea4, gbc.sp());
        EXPECT(0x3b48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0122
        gbc.setState(0x5e09, 0xe4dc, 0x45c0, 0xe9a7, 0x640e, 0x2fc0, 0x0, 0x1);
        gbc.writeMem(0x5e09, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe4dc, gbc.sp());
        EXPECT(0x5e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0123
        gbc.setState(0x6490, 0xe745, 0x10b0, 0x7154, 0xef32, 0x99a2, 0x0, 0x0);
        gbc.writeMem(0x6490, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe745, gbc.sp());
        EXPECT(0x6492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0124
        gbc.setState(0xdf1d, 0x83e6, 0xacc0, 0x540d, 0xc17, 0xf9d4, 0x0, 0x1);
        gbc.writeMem(0xdf1d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x83e6, gbc.sp());
        EXPECT(0xdf1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf1d));
        EXPECT(0xfc, gbc.readMem(0xdf1e));
        // CB FC 0125
        gbc.setState(0xd38f, 0x127c, 0x1870, 0x1d18, 0x7173, 0xae70, 0x1, 0x0);
        gbc.writeMem(0xd38f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x127c, gbc.sp());
        EXPECT(0xd391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd38f));
        EXPECT(0xfc, gbc.readMem(0xd390));
        // CB FC 0126
        gbc.setState(0xcb19, 0x1d16, 0x3210, 0xb35a, 0x170f, 0xecf, 0x0, 0x0);
        gbc.writeMem(0xcb19, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1d16, gbc.sp());
        EXPECT(0xcb1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb19));
        EXPECT(0xfc, gbc.readMem(0xcb1a));
        // CB FC 0127
        gbc.setState(0x8ead, 0xfb46, 0xd230, 0x7734, 0xf366, 0x133d, 0x0, 0x1);
        gbc.writeMem(0x8ead, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfb46, gbc.sp());
        EXPECT(0x8eaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ead));
        EXPECT(0xfc, gbc.readMem(0x8eae));
        // CB FC 0128
        gbc.setState(0xd5db, 0xec20, 0xb780, 0x3301, 0x1d1b, 0x8eb1, 0x0, 0x1);
        gbc.writeMem(0xd5db, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xec20, gbc.sp());
        EXPECT(0xd5dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5db));
        EXPECT(0xfc, gbc.readMem(0xd5dc));
        // CB FC 0129
        gbc.setState(0xcbe9, 0xc9ef, 0xc9b0, 0xf5ce, 0x74ed, 0x7d62, 0x0, 0x1);
        gbc.writeMem(0xcbe9, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc9ef, gbc.sp());
        EXPECT(0xcbeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbe9));
        EXPECT(0xfc, gbc.readMem(0xcbea));
        // CB FC 012A
        gbc.setState(0x1df, 0xc39d, 0x5a50, 0x7deb, 0x5303, 0xc31, 0x1, 0x1);
        gbc.writeMem(0x1df, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc39d, gbc.sp());
        EXPECT(0x1e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 012C
        gbc.setState(0x1c31, 0xd3c4, 0x9e60, 0xb1ef, 0xdc6c, 0x1870, 0x1, 0x0);
        gbc.writeMem(0x1c31, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd3c4, gbc.sp());
        EXPECT(0x1c33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 012E
        gbc.setState(0xbd12, 0xdc92, 0x74a0, 0x3792, 0xda99, 0x30cf, 0x0, 0x1);
        gbc.writeMem(0xbd12, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xdc92, gbc.sp());
        EXPECT(0xbd14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd12));
        EXPECT(0xfc, gbc.readMem(0xbd13));
        // CB FC 012F
        gbc.setState(0x836, 0x95cd, 0x7de0, 0xf90d, 0xb2a2, 0xfb1e, 0x1, 0x1);
        gbc.writeMem(0x836, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x95cd, gbc.sp());
        EXPECT(0x838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0130
        gbc.setState(0x1d24, 0x96d2, 0xd830, 0xdd14, 0x5123, 0x9fe4, 0x0, 0x0);
        gbc.writeMem(0x1d24, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x96d2, gbc.sp());
        EXPECT(0x1d26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0131
        gbc.setState(0x52c, 0x4e5c, 0x80d0, 0x6a36, 0xb758, 0x8ab3, 0x0, 0x0);
        gbc.writeMem(0x52c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4e5c, gbc.sp());
        EXPECT(0x52e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0132
        gbc.setState(0x9366, 0xcf4, 0x35e0, 0x605e, 0xff41, 0x8fcd, 0x1, 0x1);
        gbc.writeMem(0x9366, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcf4, gbc.sp());
        EXPECT(0x9368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9366));
        EXPECT(0xfc, gbc.readMem(0x9367));
        // CB FC 0133
        gbc.setState(0x2051, 0x6b68, 0x4ff0, 0xa421, 0x2c13, 0x6b95, 0x0, 0x1);
        gbc.writeMem(0x2051, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6b68, gbc.sp());
        EXPECT(0x2053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0134
        gbc.setState(0x7ff2, 0xca26, 0x24f0, 0xa912, 0xf36f, 0x292e, 0x0, 0x0);
        gbc.writeMem(0x7ff2, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xca26, gbc.sp());
        EXPECT(0x7ff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0135
        gbc.setState(0xe6fc, 0xd525, 0xf250, 0xe39f, 0xa3bc, 0x79b, 0x1, 0x0);
        gbc.writeMem(0xe6fc, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd525, gbc.sp());
        EXPECT(0xe6fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6fc));
        EXPECT(0xfc, gbc.readMem(0xe6fd));
        // CB FC 0136
        gbc.setState(0xc921, 0xef82, 0x6060, 0xe9fd, 0xd651, 0x61fc, 0x0, 0x1);
        gbc.writeMem(0xc921, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xef82, gbc.sp());
        EXPECT(0xc923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc921));
        EXPECT(0xfc, gbc.readMem(0xc922));
        // CB FC 0137
        gbc.setState(0x8f8e, 0x498c, 0xe720, 0x24bb, 0x813e, 0x1028, 0x1, 0x0);
        gbc.writeMem(0x8f8e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x498c, gbc.sp());
        EXPECT(0x8f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f8e));
        EXPECT(0xfc, gbc.readMem(0x8f8f));
        // CB FC 0138
        gbc.setState(0xa722, 0xbef3, 0x8d60, 0xe2a6, 0x92bb, 0x332b, 0x1, 0x0);
        gbc.writeMem(0xa722, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbef3, gbc.sp());
        EXPECT(0xa724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa722));
        EXPECT(0xfc, gbc.readMem(0xa723));
        // CB FC 0139
        gbc.setState(0x9f53, 0x1ca6, 0x9b50, 0xc18b, 0x4b2e, 0xa140, 0x0, 0x1);
        gbc.writeMem(0x9f53, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1ca6, gbc.sp());
        EXPECT(0x9f55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f53));
        EXPECT(0xfc, gbc.readMem(0x9f54));
        // CB FC 013A
        gbc.setState(0x625, 0xfbc0, 0x3c10, 0xcabb, 0x8298, 0xe831, 0x0, 0x1);
        gbc.writeMem(0x625, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xfbc0, gbc.sp());
        EXPECT(0x627, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 013B
        gbc.setState(0x5887, 0x6ff6, 0x74b0, 0x65ff, 0x7c3, 0x6303, 0x0, 0x0);
        gbc.writeMem(0x5887, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6ff6, gbc.sp());
        EXPECT(0x5889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 013C
        gbc.setState(0x4fa9, 0x163f, 0xdaa0, 0xe3e6, 0x928b, 0x31a, 0x1, 0x1);
        gbc.writeMem(0x4fa9, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x163f, gbc.sp());
        EXPECT(0x4fab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 013D
        gbc.setState(0x2ef8, 0xb8ea, 0x3730, 0x7e5e, 0xd879, 0x7194, 0x0, 0x0);
        gbc.writeMem(0x2ef8, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb8ea, gbc.sp());
        EXPECT(0x2efa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 013E
        gbc.setState(0x43a1, 0x1af8, 0x5120, 0x69d3, 0x5486, 0x12e7, 0x0, 0x1);
        gbc.writeMem(0x43a1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1af8, gbc.sp());
        EXPECT(0x43a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 013F
        gbc.setState(0x61a5, 0xcb5e, 0x1da0, 0x9d8d, 0x38e4, 0x6999, 0x1, 0x1);
        gbc.writeMem(0x61a5, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcb5e, gbc.sp());
        EXPECT(0x61a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0140
        gbc.setState(0x4928, 0x4b0f, 0x33a0, 0xa526, 0x38db, 0x7cf8, 0x1, 0x1);
        gbc.writeMem(0x4928, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4b0f, gbc.sp());
        EXPECT(0x492a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0141
        gbc.setState(0x2a72, 0x5c2b, 0xb7a0, 0x3ab3, 0x5456, 0x68b2, 0x1, 0x0);
        gbc.writeMem(0x2a72, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5c2b, gbc.sp());
        EXPECT(0x2a74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0142
        gbc.setState(0x1598, 0x6f97, 0x1b80, 0x8058, 0x367a, 0x1cf9, 0x1, 0x1);
        gbc.writeMem(0x1598, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6f97, gbc.sp());
        EXPECT(0x159a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0143
        gbc.setState(0xe941, 0xde3, 0x73c0, 0xe88c, 0x4f64, 0x7dbd, 0x0, 0x0);
        gbc.writeMem(0xe941, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xde3, gbc.sp());
        EXPECT(0xe943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe941));
        EXPECT(0xfc, gbc.readMem(0xe942));
        // CB FC 0144
        gbc.setState(0xa25c, 0x4ccb, 0x51c0, 0x622a, 0xd672, 0xc83a, 0x1, 0x1);
        gbc.writeMem(0xa25c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4ccb, gbc.sp());
        EXPECT(0xa25e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa25c));
        EXPECT(0xfc, gbc.readMem(0xa25d));
        // CB FC 0145
        gbc.setState(0xc59e, 0xfe86, 0xa530, 0xf2a0, 0xae8c, 0x8180, 0x1, 0x1);
        gbc.writeMem(0xc59e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xfe86, gbc.sp());
        EXPECT(0xc5a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc59e));
        EXPECT(0xfc, gbc.readMem(0xc59f));
        // CB FC 0146
        gbc.setState(0x20a0, 0x724, 0x4d70, 0xd45d, 0x55e, 0x74d0, 0x0, 0x0);
        gbc.writeMem(0x20a0, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x724, gbc.sp());
        EXPECT(0x20a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0147
        gbc.setState(0xa505, 0xbfeb, 0x44f0, 0xcb49, 0x30b6, 0x88ec, 0x0, 0x1);
        gbc.writeMem(0xa505, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbfeb, gbc.sp());
        EXPECT(0xa507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa505));
        EXPECT(0xfc, gbc.readMem(0xa506));
        // CB FC 0148
        gbc.setState(0x70de, 0x4cdd, 0xc900, 0x3f57, 0xe2c1, 0xaa53, 0x1, 0x1);
        gbc.writeMem(0x70de, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4cdd, gbc.sp());
        EXPECT(0x70e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0149
        gbc.setState(0xab8, 0xbb9f, 0xc470, 0xa7a2, 0x1e90, 0x3393, 0x0, 0x0);
        gbc.writeMem(0xab8, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xbb9f, gbc.sp());
        EXPECT(0xaba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 014A
        gbc.setState(0x2ec5, 0x9aa6, 0xf0f0, 0x2726, 0x580, 0xc2a5, 0x1, 0x0);
        gbc.writeMem(0x2ec5, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9aa6, gbc.sp());
        EXPECT(0x2ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 014B
        gbc.setState(0xa63e, 0xa94b, 0xd70, 0x49f2, 0x5217, 0x56a6, 0x0, 0x0);
        gbc.writeMem(0xa63e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa94b, gbc.sp());
        EXPECT(0xa640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa63e));
        EXPECT(0xfc, gbc.readMem(0xa63f));
        // CB FC 014C
        gbc.setState(0xa5b, 0xec26, 0x23e0, 0x20f3, 0x3ece, 0xdc52, 0x0, 0x1);
        gbc.writeMem(0xa5b, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xec26, gbc.sp());
        EXPECT(0xa5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 014D
        gbc.setState(0xe74a, 0xd795, 0x9570, 0x931, 0x54e2, 0xa90d, 0x0, 0x0);
        gbc.writeMem(0xe74a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd795, gbc.sp());
        EXPECT(0xe74c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe74a));
        EXPECT(0xfc, gbc.readMem(0xe74b));
        // CB FC 014E
        gbc.setState(0x8e8b, 0xd827, 0xcdc0, 0x9c0, 0x9291, 0x1a5d, 0x0, 0x1);
        gbc.writeMem(0x8e8b, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd827, gbc.sp());
        EXPECT(0x8e8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e8b));
        EXPECT(0xfc, gbc.readMem(0x8e8c));
        // CB FC 014F
        gbc.setState(0x83f, 0x4777, 0x6f10, 0x7eb5, 0x8a6, 0x3838, 0x1, 0x1);
        gbc.writeMem(0x83f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4777, gbc.sp());
        EXPECT(0x841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0150
        gbc.setState(0x21bc, 0x1c2d, 0x6120, 0x1ddc, 0x630d, 0x86bd, 0x0, 0x0);
        gbc.writeMem(0x21bc, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1c2d, gbc.sp());
        EXPECT(0x21be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0151
        gbc.setState(0xa5c7, 0xcef4, 0xa170, 0xca9b, 0x30e2, 0xe173, 0x1, 0x1);
        gbc.writeMem(0xa5c7, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xcef4, gbc.sp());
        EXPECT(0xa5c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5c7));
        EXPECT(0xfc, gbc.readMem(0xa5c8));
        // CB FC 0152
        gbc.setState(0x7778, 0x8ab, 0x2af0, 0x37e0, 0x6ae0, 0x3dd1, 0x0, 0x0);
        gbc.writeMem(0x7778, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8ab, gbc.sp());
        EXPECT(0x777a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0153
        gbc.setState(0x356f, 0x1ca3, 0x7ca0, 0x35af, 0x3637, 0xdfba, 0x0, 0x1);
        gbc.writeMem(0x356f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1ca3, gbc.sp());
        EXPECT(0x3571, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0154
        gbc.setState(0x8cc1, 0x8085, 0xd830, 0x2636, 0xd7a5, 0x72ab, 0x0, 0x0);
        gbc.writeMem(0x8cc1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8085, gbc.sp());
        EXPECT(0x8cc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cc1));
        EXPECT(0xfc, gbc.readMem(0x8cc2));
        // CB FC 0155
        gbc.setState(0x987e, 0x5233, 0x2d00, 0xcad9, 0x8583, 0xc3d8, 0x0, 0x0);
        gbc.writeMem(0x987e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5233, gbc.sp());
        EXPECT(0x9880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x987e));
        EXPECT(0xfc, gbc.readMem(0x987f));
        // CB FC 0156
        gbc.setState(0x14dc, 0x5fb2, 0xe110, 0x62f6, 0xfce8, 0x8770, 0x1, 0x0);
        gbc.writeMem(0x14dc, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5fb2, gbc.sp());
        EXPECT(0x14de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0157
        gbc.setState(0xf40, 0x667, 0x2530, 0x1eb6, 0x93b, 0x71f4, 0x1, 0x1);
        gbc.writeMem(0xf40, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x667, gbc.sp());
        EXPECT(0xf42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0158
        gbc.setState(0x8c41, 0x32d4, 0x9fb0, 0xa2c7, 0x47ba, 0xd5f0, 0x0, 0x0);
        gbc.writeMem(0x8c41, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x32d4, gbc.sp());
        EXPECT(0x8c43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c41));
        EXPECT(0xfc, gbc.readMem(0x8c42));
        // CB FC 0159
        gbc.setState(0x6c3c, 0xd2cc, 0xbd10, 0x967c, 0x7a1e, 0xd742, 0x1, 0x0);
        gbc.writeMem(0x6c3c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd2cc, gbc.sp());
        EXPECT(0x6c3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 015A
        gbc.setState(0x7b9c, 0x34f5, 0x7ad0, 0xc5b2, 0x711e, 0x1ed0, 0x0, 0x1);
        gbc.writeMem(0x7b9c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x34f5, gbc.sp());
        EXPECT(0x7b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 015B
        gbc.setState(0x1407, 0x1c1, 0x9090, 0x4a82, 0x6acb, 0xf159, 0x1, 0x0);
        gbc.writeMem(0x1407, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1c1, gbc.sp());
        EXPECT(0x1409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 015C
        gbc.setState(0x60d, 0x8e88, 0x18d0, 0xfd45, 0x3a62, 0xd890, 0x1, 0x0);
        gbc.writeMem(0x60d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8e88, gbc.sp());
        EXPECT(0x60f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 015D
        gbc.setState(0x77f8, 0x6c89, 0x96a0, 0xb27e, 0x76be, 0x543a, 0x0, 0x0);
        gbc.writeMem(0x77f8, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6c89, gbc.sp());
        EXPECT(0x77fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 015E
        gbc.setState(0x324d, 0x2ee2, 0xaf90, 0x94b8, 0xb00a, 0x4694, 0x0, 0x0);
        gbc.writeMem(0x324d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2ee2, gbc.sp());
        EXPECT(0x324f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 015F
        gbc.setState(0x611, 0xd96f, 0x16d0, 0x6af0, 0x8882, 0xc8ce, 0x0, 0x0);
        gbc.writeMem(0x611, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd96f, gbc.sp());
        EXPECT(0x613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0160
        gbc.setState(0x2dcc, 0xa8b8, 0x1150, 0xd6f0, 0x54d3, 0xee26, 0x1, 0x0);
        gbc.writeMem(0x2dcc, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa8b8, gbc.sp());
        EXPECT(0x2dce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0161
        gbc.setState(0xd9c5, 0x40c0, 0xdd90, 0x1c70, 0xf655, 0x3e35, 0x0, 0x1);
        gbc.writeMem(0xd9c5, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x40c0, gbc.sp());
        EXPECT(0xd9c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c5));
        EXPECT(0xfc, gbc.readMem(0xd9c6));
        // CB FC 0163
        gbc.setState(0x8152, 0x4e65, 0x6ef0, 0x3c13, 0x33fe, 0xc311, 0x1, 0x1);
        gbc.writeMem(0x8152, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4e65, gbc.sp());
        EXPECT(0x8154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8152));
        EXPECT(0xfc, gbc.readMem(0x8153));
        // CB FC 0164
        gbc.setState(0x1424, 0x86c4, 0x6590, 0xbe34, 0xb9d7, 0xff04, 0x1, 0x1);
        gbc.writeMem(0x1424, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x86c4, gbc.sp());
        EXPECT(0x1426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0165
        gbc.setState(0xcbab, 0x4a7c, 0xb320, 0x7057, 0x90ec, 0x6e65, 0x0, 0x0);
        gbc.writeMem(0xcbab, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4a7c, gbc.sp());
        EXPECT(0xcbad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbab));
        EXPECT(0xfc, gbc.readMem(0xcbac));
        // CB FC 0166
        gbc.setState(0xca3f, 0x3812, 0x7d00, 0x492, 0x75fd, 0x1c92, 0x0, 0x1);
        gbc.writeMem(0xca3f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3812, gbc.sp());
        EXPECT(0xca41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca3f));
        EXPECT(0xfc, gbc.readMem(0xca40));
        // CB FC 0167
        gbc.setState(0xd3fb, 0x8b6a, 0xba40, 0x75d7, 0xe734, 0x2b53, 0x0, 0x1);
        gbc.writeMem(0xd3fb, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8b6a, gbc.sp());
        EXPECT(0xd3fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3fb));
        EXPECT(0xfc, gbc.readMem(0xd3fc));
        // CB FC 0169
        gbc.setState(0x7567, 0x46ff, 0xc520, 0xb6a5, 0xe9c4, 0xc1d8, 0x0, 0x0);
        gbc.writeMem(0x7567, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x46ff, gbc.sp());
        EXPECT(0x7569, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 016A
        gbc.setState(0x45c8, 0xaf48, 0x3c00, 0x2158, 0x5428, 0xc6d8, 0x1, 0x1);
        gbc.writeMem(0x45c8, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xaf48, gbc.sp());
        EXPECT(0x45ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 016D
        gbc.setState(0xada9, 0xc66e, 0xf3a0, 0x1db2, 0x6785, 0x91db, 0x0, 0x1);
        gbc.writeMem(0xada9, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc66e, gbc.sp());
        EXPECT(0xadab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada9));
        EXPECT(0xfc, gbc.readMem(0xadaa));
        // CB FC 016E
        gbc.setState(0x1be3, 0xe6ca, 0x530, 0x5210, 0x8175, 0x8eba, 0x1, 0x1);
        gbc.writeMem(0x1be3, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe6ca, gbc.sp());
        EXPECT(0x1be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0170
        gbc.setState(0xc918, 0x7321, 0xd050, 0x3e4c, 0xde5d, 0xbd1a, 0x0, 0x0);
        gbc.writeMem(0xc918, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7321, gbc.sp());
        EXPECT(0xc91a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc918));
        EXPECT(0xfc, gbc.readMem(0xc919));
        // CB FC 0171
        gbc.setState(0xcd3b, 0x207c, 0x8440, 0x2ac, 0x51bd, 0x1dd6, 0x0, 0x0);
        gbc.writeMem(0xcd3b, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x207c, gbc.sp());
        EXPECT(0xcd3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd3b));
        EXPECT(0xfc, gbc.readMem(0xcd3c));
        // CB FC 0172
        gbc.setState(0x6b46, 0xb0b5, 0x180, 0xc19c, 0x6606, 0x122, 0x1, 0x0);
        gbc.writeMem(0x6b46, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb0b5, gbc.sp());
        EXPECT(0x6b48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0174
        gbc.setState(0xe920, 0x7fc7, 0x1380, 0xcb4b, 0xc531, 0xb15d, 0x0, 0x0);
        gbc.writeMem(0xe920, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7fc7, gbc.sp());
        EXPECT(0xe922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe920));
        EXPECT(0xfc, gbc.readMem(0xe921));
        // CB FC 0175
        gbc.setState(0x3d9e, 0x6c8c, 0x9990, 0x3031, 0x71b4, 0x7179, 0x0, 0x0);
        gbc.writeMem(0x3d9e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6c8c, gbc.sp());
        EXPECT(0x3da0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0176
        gbc.setState(0xc478, 0x3311, 0x5050, 0x1a39, 0x521, 0x7c05, 0x1, 0x1);
        gbc.writeMem(0xc478, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3311, gbc.sp());
        EXPECT(0xc47a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc478));
        EXPECT(0xfc, gbc.readMem(0xc479));
        // CB FC 0177
        gbc.setState(0xe093, 0x31fe, 0xa7b0, 0x789d, 0x1a4b, 0x8fac, 0x0, 0x1);
        gbc.writeMem(0xe093, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x31fe, gbc.sp());
        EXPECT(0xe095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe093));
        EXPECT(0xfc, gbc.readMem(0xe094));
        // CB FC 0178
        gbc.setState(0xbe42, 0x243e, 0x6210, 0xf070, 0xa058, 0x20c4, 0x0, 0x0);
        gbc.writeMem(0xbe42, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x243e, gbc.sp());
        EXPECT(0xbe44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe42));
        EXPECT(0xfc, gbc.readMem(0xbe43));
        // CB FC 0179
        gbc.setState(0x2d80, 0xba8f, 0xf000, 0x870, 0x84f7, 0x8f4b, 0x1, 0x1);
        gbc.writeMem(0x2d80, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xba8f, gbc.sp());
        EXPECT(0x2d82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 017A
        gbc.setState(0x8f3a, 0x7b3b, 0xd6c0, 0x745a, 0x2f6a, 0x3c95, 0x0, 0x1);
        gbc.writeMem(0x8f3a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7b3b, gbc.sp());
        EXPECT(0x8f3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f3a));
        EXPECT(0xfc, gbc.readMem(0x8f3b));
        // CB FC 017B
        gbc.setState(0x2fd6, 0xb387, 0x5f30, 0x9442, 0xf888, 0x4c25, 0x1, 0x1);
        gbc.writeMem(0x2fd6, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb387, gbc.sp());
        EXPECT(0x2fd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 017C
        gbc.setState(0x784a, 0x4b1d, 0x4700, 0x2a99, 0x7174, 0xab2f, 0x1, 0x0);
        gbc.writeMem(0x784a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4b1d, gbc.sp());
        EXPECT(0x784c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 017D
        gbc.setState(0x25e0, 0xee4c, 0x5060, 0xfaad, 0xea5e, 0x1c4a, 0x0, 0x0);
        gbc.writeMem(0x25e0, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xee4c, gbc.sp());
        EXPECT(0x25e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 017E
        gbc.setState(0x8804, 0xbb8e, 0x6a20, 0x956, 0x9742, 0x3bf3, 0x0, 0x0);
        gbc.writeMem(0x8804, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xbb8e, gbc.sp());
        EXPECT(0x8806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8804));
        EXPECT(0xfc, gbc.readMem(0x8805));
        // CB FC 017F
        gbc.setState(0x647e, 0x59d1, 0xf40, 0xb386, 0xea6e, 0x109, 0x0, 0x1);
        gbc.writeMem(0x647e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x59d1, gbc.sp());
        EXPECT(0x6480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0180
        gbc.setState(0xc142, 0x64d3, 0xdfb0, 0xaf96, 0x300, 0xcc89, 0x1, 0x0);
        gbc.writeMem(0xc142, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x64d3, gbc.sp());
        EXPECT(0xc144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc142));
        EXPECT(0xfc, gbc.readMem(0xc143));
        // CB FC 0181
        gbc.setState(0x5d9b, 0xcf00, 0x7ea0, 0xa2db, 0x1240, 0x188f, 0x1, 0x0);
        gbc.writeMem(0x5d9b, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xcf00, gbc.sp());
        EXPECT(0x5d9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0182
        gbc.setState(0x1785, 0x9e99, 0x87f0, 0xe28, 0xc888, 0x94d0, 0x0, 0x1);
        gbc.writeMem(0x1785, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9e99, gbc.sp());
        EXPECT(0x1787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0183
        gbc.setState(0x650e, 0xe3c5, 0x4470, 0x411, 0x3f4a, 0x6807, 0x1, 0x0);
        gbc.writeMem(0x650e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe3c5, gbc.sp());
        EXPECT(0x6510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0184
        gbc.setState(0x98f2, 0x7344, 0x2aa0, 0x8903, 0xd75, 0x7aca, 0x0, 0x0);
        gbc.writeMem(0x98f2, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7344, gbc.sp());
        EXPECT(0x98f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f2));
        EXPECT(0xfc, gbc.readMem(0x98f3));
        // CB FC 0185
        gbc.setState(0x6bed, 0x6ab5, 0x2be0, 0xa09c, 0x3a74, 0x7ba8, 0x0, 0x1);
        gbc.writeMem(0x6bed, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6ab5, gbc.sp());
        EXPECT(0x6bef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0186
        gbc.setState(0x6d15, 0xcb2d, 0x9c50, 0x59e7, 0x49a4, 0x276, 0x0, 0x0);
        gbc.writeMem(0x6d15, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xcb2d, gbc.sp());
        EXPECT(0x6d17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0187
        gbc.setState(0x1726, 0x9900, 0xeed0, 0xf7c5, 0xfec3, 0x28d, 0x1, 0x0);
        gbc.writeMem(0x1726, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9900, gbc.sp());
        EXPECT(0x1728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0188
        gbc.setState(0x2607, 0x79ca, 0x89c0, 0x518d, 0x1fb3, 0x6e29, 0x1, 0x1);
        gbc.writeMem(0x2607, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x79ca, gbc.sp());
        EXPECT(0x2609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0189
        gbc.setState(0xc4d9, 0x740d, 0xf4d0, 0x5b43, 0x6b23, 0x68cc, 0x1, 0x1);
        gbc.writeMem(0xc4d9, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x740d, gbc.sp());
        EXPECT(0xc4db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d9));
        EXPECT(0xfc, gbc.readMem(0xc4da));
        // CB FC 018A
        gbc.setState(0xd827, 0xa060, 0x5d30, 0x48ca, 0x4181, 0x9bea, 0x1, 0x1);
        gbc.writeMem(0xd827, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa060, gbc.sp());
        EXPECT(0xd829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd827));
        EXPECT(0xfc, gbc.readMem(0xd828));
        // CB FC 018B
        gbc.setState(0x778c, 0xc292, 0x9d40, 0x60f7, 0x81bd, 0x86bb, 0x0, 0x1);
        gbc.writeMem(0x778c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc292, gbc.sp());
        EXPECT(0x778e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 018C
        gbc.setState(0x25cb, 0xef0f, 0x8b80, 0x8f38, 0x8ec1, 0xcd73, 0x1, 0x1);
        gbc.writeMem(0x25cb, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xef0f, gbc.sp());
        EXPECT(0x25cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 018D
        gbc.setState(0x9bb4, 0x3d69, 0xc360, 0xccce, 0x84b0, 0x4c3b, 0x0, 0x0);
        gbc.writeMem(0x9bb4, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3d69, gbc.sp());
        EXPECT(0x9bb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb4));
        EXPECT(0xfc, gbc.readMem(0x9bb5));
        // CB FC 018E
        gbc.setState(0x31b8, 0x7741, 0x9e30, 0xd549, 0x109d, 0xf654, 0x0, 0x0);
        gbc.writeMem(0x31b8, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7741, gbc.sp());
        EXPECT(0x31ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 018F
        gbc.setState(0x1a3f, 0x2b29, 0x2030, 0x81cf, 0xc4b3, 0xd8f1, 0x1, 0x1);
        gbc.writeMem(0x1a3f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2b29, gbc.sp());
        EXPECT(0x1a41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0190
        gbc.setState(0xbd85, 0xa49f, 0x3930, 0x95ef, 0xcf8c, 0x1d64, 0x1, 0x0);
        gbc.writeMem(0xbd85, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa49f, gbc.sp());
        EXPECT(0xbd87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd85));
        EXPECT(0xfc, gbc.readMem(0xbd86));
        // CB FC 0191
        gbc.setState(0xb27f, 0xf524, 0x7d10, 0x14c7, 0xb756, 0xaa4c, 0x0, 0x0);
        gbc.writeMem(0xb27f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf524, gbc.sp());
        EXPECT(0xb281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb27f));
        EXPECT(0xfc, gbc.readMem(0xb280));
        // CB FC 0192
        gbc.setState(0xe72f, 0x894a, 0x4f60, 0x643c, 0xe09d, 0xf0b2, 0x1, 0x0);
        gbc.writeMem(0xe72f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x894a, gbc.sp());
        EXPECT(0xe731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe72f));
        EXPECT(0xfc, gbc.readMem(0xe730));
        // CB FC 0193
        gbc.setState(0x8a5d, 0xdcdd, 0x8370, 0xb9c, 0x2b99, 0xd5d, 0x0, 0x1);
        gbc.writeMem(0x8a5d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xdcdd, gbc.sp());
        EXPECT(0x8a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a5d));
        EXPECT(0xfc, gbc.readMem(0x8a5e));
        // CB FC 0194
        gbc.setState(0xd453, 0x88af, 0xf770, 0xce8f, 0xc502, 0x5d8f, 0x0, 0x1);
        gbc.writeMem(0xd453, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x88af, gbc.sp());
        EXPECT(0xd455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd453));
        EXPECT(0xfc, gbc.readMem(0xd454));
        // CB FC 0195
        gbc.setState(0x453f, 0x6145, 0x4b00, 0xf9f3, 0x3205, 0x75f2, 0x1, 0x1);
        gbc.writeMem(0x453f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6145, gbc.sp());
        EXPECT(0x4541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0196
        gbc.setState(0x9aa1, 0x6ac9, 0x3420, 0x6f2b, 0x1264, 0xc85c, 0x1, 0x1);
        gbc.writeMem(0x9aa1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6ac9, gbc.sp());
        EXPECT(0x9aa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aa1));
        EXPECT(0xfc, gbc.readMem(0x9aa2));
        // CB FC 0197
        gbc.setState(0x25d4, 0x43b8, 0x74d0, 0x4265, 0x7b52, 0x1f89, 0x1, 0x1);
        gbc.writeMem(0x25d4, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x43b8, gbc.sp());
        EXPECT(0x25d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0198
        gbc.setState(0x1ef, 0x5c64, 0xf5c0, 0x916b, 0xbdc5, 0x2798, 0x1, 0x0);
        gbc.writeMem(0x1ef, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5c64, gbc.sp());
        EXPECT(0x1f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0199
        gbc.setState(0x9039, 0x7e6c, 0x4020, 0xc103, 0xda2e, 0x10ab, 0x1, 0x1);
        gbc.writeMem(0x9039, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7e6c, gbc.sp());
        EXPECT(0x903b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9039));
        EXPECT(0xfc, gbc.readMem(0x903a));
        // CB FC 019A
        gbc.setState(0x2bd5, 0xa6e, 0xbe80, 0xf500, 0x15bb, 0x3286, 0x0, 0x0);
        gbc.writeMem(0x2bd5, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa6e, gbc.sp());
        EXPECT(0x2bd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 019B
        gbc.setState(0x70b0, 0x7d9e, 0x6730, 0x8354, 0xe981, 0x9ed2, 0x1, 0x1);
        gbc.writeMem(0x70b0, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7d9e, gbc.sp());
        EXPECT(0x70b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 019C
        gbc.setState(0xd567, 0xf274, 0x9720, 0x77e8, 0x717e, 0x1e81, 0x1, 0x1);
        gbc.writeMem(0xd567, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf274, gbc.sp());
        EXPECT(0xd569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd567));
        EXPECT(0xfc, gbc.readMem(0xd568));
        // CB FC 019D
        gbc.setState(0x1b2c, 0x68f2, 0xba20, 0x66c6, 0x45ce, 0xafb9, 0x1, 0x1);
        gbc.writeMem(0x1b2c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x68f2, gbc.sp());
        EXPECT(0x1b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 019E
        gbc.setState(0x9516, 0x49a7, 0x95c0, 0xd060, 0xa0f2, 0xde03, 0x1, 0x0);
        gbc.writeMem(0x9516, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x49a7, gbc.sp());
        EXPECT(0x9518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9516));
        EXPECT(0xfc, gbc.readMem(0x9517));
        // CB FC 01A0
        gbc.setState(0xac1f, 0xe74a, 0xa310, 0xb307, 0x3443, 0x8b4, 0x0, 0x0);
        gbc.writeMem(0xac1f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe74a, gbc.sp());
        EXPECT(0xac21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac1f));
        EXPECT(0xfc, gbc.readMem(0xac20));
        // CB FC 01A1
        gbc.setState(0x5809, 0xfd86, 0x7e00, 0x66e2, 0x49e0, 0xb285, 0x1, 0x1);
        gbc.writeMem(0x5809, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xfd86, gbc.sp());
        EXPECT(0x580b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01A2
        gbc.setState(0x70cd, 0xdf87, 0x2ab0, 0x157f, 0xe8b1, 0x2507, 0x0, 0x0);
        gbc.writeMem(0x70cd, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdf87, gbc.sp());
        EXPECT(0x70cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 01A3
        gbc.setState(0xe1a7, 0x4688, 0x9b90, 0x3aed, 0x99eb, 0x9899, 0x0, 0x1);
        gbc.writeMem(0xe1a7, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4688, gbc.sp());
        EXPECT(0xe1a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1a7));
        EXPECT(0xfc, gbc.readMem(0xe1a8));
        // CB FC 01A4
        gbc.setState(0xd42a, 0xdae9, 0x4e10, 0xf9df, 0xab8d, 0x8155, 0x0, 0x0);
        gbc.writeMem(0xd42a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xdae9, gbc.sp());
        EXPECT(0xd42c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd42a));
        EXPECT(0xfc, gbc.readMem(0xd42b));
        // CB FC 01A5
        gbc.setState(0x5a9, 0xbf27, 0xd820, 0xcf9d, 0x9bbe, 0x67bb, 0x1, 0x1);
        gbc.writeMem(0x5a9, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbf27, gbc.sp());
        EXPECT(0x5ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01A7
        gbc.setState(0x5d42, 0x6096, 0x3ed0, 0xaa26, 0x78ff, 0x6ea4, 0x0, 0x0);
        gbc.writeMem(0x5d42, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6096, gbc.sp());
        EXPECT(0x5d44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 01A8
        gbc.setState(0x7bab, 0x4850, 0xe190, 0x6a8b, 0xdf07, 0xc27, 0x0, 0x0);
        gbc.writeMem(0x7bab, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4850, gbc.sp());
        EXPECT(0x7bad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 01A9
        gbc.setState(0x52fb, 0x57e0, 0xf740, 0x8852, 0x9ada, 0xf317, 0x0, 0x1);
        gbc.writeMem(0x52fb, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x57e0, gbc.sp());
        EXPECT(0x52fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01AA
        gbc.setState(0x7a07, 0x618d, 0xbbe0, 0x9565, 0x49f3, 0xfa7a, 0x1, 0x0);
        gbc.writeMem(0x7a07, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x618d, gbc.sp());
        EXPECT(0x7a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01AB
        gbc.setState(0xab16, 0x71e8, 0xfbc0, 0xb95f, 0xbb5b, 0x78b2, 0x0, 0x0);
        gbc.writeMem(0xab16, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x71e8, gbc.sp());
        EXPECT(0xab18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab16));
        EXPECT(0xfc, gbc.readMem(0xab17));
        // CB FC 01AC
        gbc.setState(0xd6c9, 0x2205, 0x2500, 0xe5fc, 0x1ab7, 0xd2a2, 0x1, 0x1);
        gbc.writeMem(0xd6c9, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2205, gbc.sp());
        EXPECT(0xd6cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6c9));
        EXPECT(0xfc, gbc.readMem(0xd6ca));
        // CB FC 01AD
        gbc.setState(0x26db, 0x902f, 0x40d0, 0x51dd, 0x208a, 0x6be4, 0x0, 0x1);
        gbc.writeMem(0x26db, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x902f, gbc.sp());
        EXPECT(0x26dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 01AE
        gbc.setState(0x88, 0xbdfb, 0x1f90, 0x5b93, 0xa10b, 0xf804, 0x0, 0x1);
        gbc.writeMem(0x88, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbdfb, gbc.sp());
        EXPECT(0x8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 01AF
        gbc.setState(0x93d4, 0xf4d0, 0xe640, 0xf32e, 0x351e, 0x591b, 0x0, 0x1);
        gbc.writeMem(0x93d4, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf4d0, gbc.sp());
        EXPECT(0x93d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93d4));
        EXPECT(0xfc, gbc.readMem(0x93d5));
        // CB FC 01B0
        gbc.setState(0x8e80, 0x4f17, 0xdd30, 0x2a55, 0xe52b, 0x1731, 0x1, 0x0);
        gbc.writeMem(0x8e80, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4f17, gbc.sp());
        EXPECT(0x8e82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e80));
        EXPECT(0xfc, gbc.readMem(0x8e81));
        // CB FC 01B1
        gbc.setState(0x763c, 0xb15b, 0x7270, 0x36ec, 0xe3a6, 0x89bc, 0x1, 0x1);
        gbc.writeMem(0x763c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb15b, gbc.sp());
        EXPECT(0x763e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 01B2
        gbc.setState(0xc4c9, 0x90f6, 0x37a0, 0x6198, 0x73bd, 0xa8f5, 0x1, 0x1);
        gbc.writeMem(0xc4c9, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x90f6, gbc.sp());
        EXPECT(0xc4cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4c9));
        EXPECT(0xfc, gbc.readMem(0xc4ca));
        // CB FC 01B3
        gbc.setState(0xdea1, 0xa470, 0xc40, 0x784, 0x3d91, 0x52fa, 0x0, 0x1);
        gbc.writeMem(0xdea1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa470, gbc.sp());
        EXPECT(0xdea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea1));
        EXPECT(0xfc, gbc.readMem(0xdea2));
        // CB FC 01B4
        gbc.setState(0xabd2, 0xee95, 0x4580, 0xfb86, 0x8bd1, 0xa00b, 0x0, 0x0);
        gbc.writeMem(0xabd2, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xee95, gbc.sp());
        EXPECT(0xabd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabd2));
        EXPECT(0xfc, gbc.readMem(0xabd3));
        // CB FC 01B5
        gbc.setState(0xb7e2, 0xf058, 0x1380, 0xbebd, 0xfb51, 0x218, 0x1, 0x0);
        gbc.writeMem(0xb7e2, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf058, gbc.sp());
        EXPECT(0xb7e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e2));
        EXPECT(0xfc, gbc.readMem(0xb7e3));
        // CB FC 01B6
        gbc.setState(0x883f, 0xca31, 0xf450, 0xb6eb, 0x7d90, 0xb51f, 0x1, 0x1);
        gbc.writeMem(0x883f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xca31, gbc.sp());
        EXPECT(0x8841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x883f));
        EXPECT(0xfc, gbc.readMem(0x8840));
        // CB FC 01B7
        gbc.setState(0x442b, 0x4fd1, 0xbd40, 0x694f, 0x3ee7, 0x2b53, 0x0, 0x0);
        gbc.writeMem(0x442b, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4fd1, gbc.sp());
        EXPECT(0x442d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01B8
        gbc.setState(0xaa05, 0xe78e, 0xcea0, 0x8605, 0xfcbf, 0x10c7, 0x1, 0x1);
        gbc.writeMem(0xaa05, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe78e, gbc.sp());
        EXPECT(0xaa07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa05));
        EXPECT(0xfc, gbc.readMem(0xaa06));
        // CB FC 01B9
        gbc.setState(0xde6, 0x659e, 0x4910, 0xeabe, 0xa8fc, 0x6e8f, 0x1, 0x1);
        gbc.writeMem(0xde6, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x659e, gbc.sp());
        EXPECT(0xde8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 01BA
        gbc.setState(0x4ab4, 0xbcd7, 0x9a50, 0x412e, 0x1d58, 0xacd, 0x1, 0x1);
        gbc.writeMem(0x4ab4, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbcd7, gbc.sp());
        EXPECT(0x4ab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 01BB
        gbc.setState(0x1a80, 0xc592, 0x78a0, 0xe794, 0x2b96, 0xfbfa, 0x1, 0x0);
        gbc.writeMem(0x1a80, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc592, gbc.sp());
        EXPECT(0x1a82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01BC
        gbc.setState(0xb536, 0x9167, 0xefc0, 0xd1fe, 0xb2, 0x7551, 0x0, 0x0);
        gbc.writeMem(0xb536, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9167, gbc.sp());
        EXPECT(0xb538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb536));
        EXPECT(0xfc, gbc.readMem(0xb537));
        // CB FC 01BD
        gbc.setState(0x65d, 0x8ac3, 0x1ac0, 0x6357, 0x2bd1, 0x5a4e, 0x0, 0x0);
        gbc.writeMem(0x65d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8ac3, gbc.sp());
        EXPECT(0x65f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01BE
        gbc.setState(0x4ef2, 0xf6f1, 0x77d0, 0x3e01, 0x1d80, 0x3c96, 0x0, 0x0);
        gbc.writeMem(0x4ef2, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf6f1, gbc.sp());
        EXPECT(0x4ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 01BF
        gbc.setState(0x2556, 0x7af8, 0xa5e0, 0x4f67, 0x45bb, 0xd002, 0x0, 0x0);
        gbc.writeMem(0x2556, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7af8, gbc.sp());
        EXPECT(0x2558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01C0
        gbc.setState(0x571, 0x628b, 0xd230, 0x42e0, 0x2962, 0x488b, 0x1, 0x0);
        gbc.writeMem(0x571, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x628b, gbc.sp());
        EXPECT(0x573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 01C1
        gbc.setState(0x89e2, 0xf438, 0xa850, 0x2cf, 0xbf5b, 0x9e5c, 0x0, 0x1);
        gbc.writeMem(0x89e2, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf438, gbc.sp());
        EXPECT(0x89e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89e2));
        EXPECT(0xfc, gbc.readMem(0x89e3));
        // CB FC 01C2
        gbc.setState(0x364e, 0x2a94, 0x5990, 0xdb72, 0x526a, 0x1b4c, 0x0, 0x0);
        gbc.writeMem(0x364e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2a94, gbc.sp());
        EXPECT(0x3650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 01C3
        gbc.setState(0xd845, 0x3165, 0xcc10, 0x3e9c, 0x102b, 0xc447, 0x0, 0x1);
        gbc.writeMem(0xd845, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3165, gbc.sp());
        EXPECT(0xd847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd845));
        EXPECT(0xfc, gbc.readMem(0xd846));
        // CB FC 01C4
        gbc.setState(0xecdc, 0x3b73, 0xb210, 0x64db, 0xef9e, 0xd661, 0x1, 0x0);
        gbc.writeMem(0xecdc, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3b73, gbc.sp());
        EXPECT(0xecde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecdc));
        EXPECT(0xfc, gbc.readMem(0xecdd));
        // CB FC 01C5
        gbc.setState(0x385e, 0x3915, 0x46c0, 0x998f, 0x6b88, 0x4af6, 0x0, 0x0);
        gbc.writeMem(0x385e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3915, gbc.sp());
        EXPECT(0x3860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01C6
        gbc.setState(0x7ece, 0x650c, 0xc20, 0xd586, 0x7cd9, 0xfe44, 0x0, 0x1);
        gbc.writeMem(0x7ece, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x650c, gbc.sp());
        EXPECT(0x7ed0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01C7
        gbc.setState(0xec69, 0x596d, 0x8e90, 0xef67, 0x5e8d, 0x2b6d, 0x0, 0x1);
        gbc.writeMem(0xec69, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x596d, gbc.sp());
        EXPECT(0xec6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec69));
        EXPECT(0xfc, gbc.readMem(0xec6a));
        // CB FC 01C8
        gbc.setState(0x3286, 0x4301, 0x3e60, 0x5b90, 0x664f, 0xea93, 0x0, 0x0);
        gbc.writeMem(0x3286, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4301, gbc.sp());
        EXPECT(0x3288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01C9
        gbc.setState(0x70a1, 0x464, 0xc090, 0x95d9, 0xdfb6, 0x67f9, 0x0, 0x1);
        gbc.writeMem(0x70a1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x464, gbc.sp());
        EXPECT(0x70a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 01CA
        gbc.setState(0x95f3, 0x5d27, 0x21d0, 0x7a6f, 0x852, 0x69bf, 0x0, 0x0);
        gbc.writeMem(0x95f3, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5d27, gbc.sp());
        EXPECT(0x95f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f3));
        EXPECT(0xfc, gbc.readMem(0x95f4));
        // CB FC 01CB
        gbc.setState(0x9c81, 0x6a74, 0xf1f0, 0x959a, 0x950b, 0x81f5, 0x0, 0x1);
        gbc.writeMem(0x9c81, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6a74, gbc.sp());
        EXPECT(0x9c83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c81));
        EXPECT(0xfc, gbc.readMem(0x9c82));
        // CB FC 01CC
        gbc.setState(0x3238, 0x9027, 0xa670, 0x6c76, 0x569c, 0xce90, 0x0, 0x0);
        gbc.writeMem(0x3238, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9027, gbc.sp());
        EXPECT(0x323a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 01CD
        gbc.setState(0x519, 0x4765, 0x4980, 0x4c16, 0xa4e2, 0xd698, 0x0, 0x0);
        gbc.writeMem(0x519, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4765, gbc.sp());
        EXPECT(0x51b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01CE
        gbc.setState(0x64f9, 0x9ed2, 0xf070, 0x1394, 0x7293, 0x87b, 0x0, 0x1);
        gbc.writeMem(0x64f9, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9ed2, gbc.sp());
        EXPECT(0x64fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 01CF
        gbc.setState(0xb96e, 0xdd49, 0xd670, 0xba69, 0xd9f0, 0xb190, 0x0, 0x0);
        gbc.writeMem(0xb96e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdd49, gbc.sp());
        EXPECT(0xb970, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb96e));
        EXPECT(0xfc, gbc.readMem(0xb96f));
        // CB FC 01D0
        gbc.setState(0xdb9e, 0xd4d3, 0x8140, 0x6364, 0xa91e, 0xfd72, 0x1, 0x1);
        gbc.writeMem(0xdb9e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd4d3, gbc.sp());
        EXPECT(0xdba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb9e));
        EXPECT(0xfc, gbc.readMem(0xdb9f));
        // CB FC 01D1
        gbc.setState(0xdbdc, 0x914a, 0xfd30, 0x6836, 0xa09b, 0x2e0d, 0x0, 0x0);
        gbc.writeMem(0xdbdc, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x914a, gbc.sp());
        EXPECT(0xdbde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbdc));
        EXPECT(0xfc, gbc.readMem(0xdbdd));
        // CB FC 01D2
        gbc.setState(0xc46c, 0xc312, 0xf840, 0xece1, 0xe89a, 0xf9af, 0x1, 0x0);
        gbc.writeMem(0xc46c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc312, gbc.sp());
        EXPECT(0xc46e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc46c));
        EXPECT(0xfc, gbc.readMem(0xc46d));
        // CB FC 01D3
        gbc.setState(0x8878, 0xeb2a, 0xfd90, 0x9cf, 0x283f, 0xcc90, 0x1, 0x0);
        gbc.writeMem(0x8878, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xeb2a, gbc.sp());
        EXPECT(0x887a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8878));
        EXPECT(0xfc, gbc.readMem(0x8879));
        // CB FC 01D4
        gbc.setState(0x6a6e, 0xf6f0, 0x6e30, 0xcccd, 0x8b74, 0x67e4, 0x0, 0x1);
        gbc.writeMem(0x6a6e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf6f0, gbc.sp());
        EXPECT(0x6a70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 01D5
        gbc.setState(0xeb45, 0xd082, 0x8a40, 0x2be7, 0x20a9, 0x38cf, 0x1, 0x1);
        gbc.writeMem(0xeb45, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd082, gbc.sp());
        EXPECT(0xeb47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb45));
        EXPECT(0xfc, gbc.readMem(0xeb46));
        // CB FC 01D6
        gbc.setState(0xbd99, 0xc741, 0x87d0, 0x9178, 0x670e, 0x2d77, 0x0, 0x1);
        gbc.writeMem(0xbd99, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc741, gbc.sp());
        EXPECT(0xbd9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd99));
        EXPECT(0xfc, gbc.readMem(0xbd9a));
        // CB FC 01D7
        gbc.setState(0xdab6, 0x5679, 0xb9b0, 0x6da0, 0x3456, 0x3e7e, 0x1, 0x0);
        gbc.writeMem(0xdab6, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5679, gbc.sp());
        EXPECT(0xdab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdab6));
        EXPECT(0xfc, gbc.readMem(0xdab7));
        // CB FC 01D8
        gbc.setState(0xd843, 0xc3aa, 0x6f80, 0x6c75, 0xd9d5, 0x414d, 0x0, 0x0);
        gbc.writeMem(0xd843, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc3aa, gbc.sp());
        EXPECT(0xd845, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd843));
        EXPECT(0xfc, gbc.readMem(0xd844));
        // CB FC 01D9
        gbc.setState(0x6c53, 0xc051, 0x99a0, 0x6232, 0xa829, 0xc509, 0x1, 0x1);
        gbc.writeMem(0x6c53, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc051, gbc.sp());
        EXPECT(0x6c55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01DA
        gbc.setState(0x3c1d, 0x6460, 0xcef0, 0x96c, 0x9d1a, 0x4725, 0x0, 0x1);
        gbc.writeMem(0x3c1d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6460, gbc.sp());
        EXPECT(0x3c1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 01DB
        gbc.setState(0x5f97, 0x67ea, 0xd9d0, 0xc65c, 0xb31b, 0x48bf, 0x1, 0x0);
        gbc.writeMem(0x5f97, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x67ea, gbc.sp());
        EXPECT(0x5f99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 01DC
        gbc.setState(0x36f0, 0xa7fd, 0x4f50, 0x66ac, 0xbb7b, 0x2721, 0x0, 0x0);
        gbc.writeMem(0x36f0, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa7fd, gbc.sp());
        EXPECT(0x36f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 01DD
        gbc.setState(0x7bb4, 0xc1e3, 0x38e0, 0x94ee, 0x9918, 0x9f95, 0x1, 0x1);
        gbc.writeMem(0x7bb4, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc1e3, gbc.sp());
        EXPECT(0x7bb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01DE
        gbc.setState(0x1073, 0x690, 0x6000, 0x2c75, 0x3b47, 0xc50, 0x1, 0x0);
        gbc.writeMem(0x1073, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x690, gbc.sp());
        EXPECT(0x1075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01DF
        gbc.setState(0xcfd0, 0x95ad, 0xfca0, 0xe1de, 0x8bb8, 0x382e, 0x0, 0x0);
        gbc.writeMem(0xcfd0, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x95ad, gbc.sp());
        EXPECT(0xcfd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd0));
        EXPECT(0xfc, gbc.readMem(0xcfd1));
        // CB FC 01E0
        gbc.setState(0x103, 0xf820, 0x5660, 0xf8d7, 0x74d0, 0xc8ea, 0x0, 0x1);
        gbc.writeMem(0x103, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf820, gbc.sp());
        EXPECT(0x105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01E1
        gbc.setState(0x9786, 0x9e3a, 0xb870, 0x3ec2, 0x8280, 0xfe2c, 0x1, 0x0);
        gbc.writeMem(0x9786, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9e3a, gbc.sp());
        EXPECT(0x9788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9786));
        EXPECT(0xfc, gbc.readMem(0x9787));
        // CB FC 01E2
        gbc.setState(0xaa83, 0x71b5, 0xbb70, 0xea31, 0xc363, 0xc21b, 0x1, 0x0);
        gbc.writeMem(0xaa83, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x71b5, gbc.sp());
        EXPECT(0xaa85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa83));
        EXPECT(0xfc, gbc.readMem(0xaa84));
        // CB FC 01E3
        gbc.setState(0x29ca, 0x67, 0x5b20, 0xc61b, 0xb2e3, 0x4b09, 0x1, 0x1);
        gbc.writeMem(0x29ca, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x67, gbc.sp());
        EXPECT(0x29cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01E4
        gbc.setState(0x1ee, 0x9966, 0x9ef0, 0xf0b8, 0xa75f, 0x101f, 0x0, 0x1);
        gbc.writeMem(0x1ee, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9966, gbc.sp());
        EXPECT(0x1f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 01E5
        gbc.setState(0xc2fc, 0x30e5, 0xc380, 0x1e76, 0x3921, 0x110a, 0x1, 0x1);
        gbc.writeMem(0xc2fc, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x30e5, gbc.sp());
        EXPECT(0xc2fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2fc));
        EXPECT(0xfc, gbc.readMem(0xc2fd));
        // CB FC 01E6
        gbc.setState(0x5b29, 0x68de, 0x4500, 0x620, 0xdbb3, 0xcfbd, 0x1, 0x1);
        gbc.writeMem(0x5b29, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x68de, gbc.sp());
        EXPECT(0x5b2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01E7
        gbc.setState(0x10c3, 0x13e2, 0x9940, 0x19aa, 0x8c26, 0xa710, 0x0, 0x1);
        gbc.writeMem(0x10c3, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x13e2, gbc.sp());
        EXPECT(0x10c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01E8
        gbc.setState(0x5646, 0x2e54, 0x2ec0, 0x85bc, 0xff02, 0x902c, 0x0, 0x0);
        gbc.writeMem(0x5646, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2e54, gbc.sp());
        EXPECT(0x5648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01E9
        gbc.setState(0x25be, 0x48df, 0xcf10, 0xeeda, 0x2000, 0x7ae6, 0x1, 0x0);
        gbc.writeMem(0x25be, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x48df, gbc.sp());
        EXPECT(0x25c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 01EA
        gbc.setState(0xb8d2, 0xc1ea, 0xb030, 0xde6e, 0xee22, 0x46fe, 0x1, 0x0);
        gbc.writeMem(0xb8d2, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc1ea, gbc.sp());
        EXPECT(0xb8d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8d2));
        EXPECT(0xfc, gbc.readMem(0xb8d3));
        // CB FC 01EB
        gbc.setState(0x773d, 0x3d94, 0x59f0, 0x93b, 0x4f85, 0x32a7, 0x1, 0x0);
        gbc.writeMem(0x773d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3d94, gbc.sp());
        EXPECT(0x773f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 01EC
        gbc.setState(0x54a6, 0xa3c9, 0x5a20, 0xcc52, 0xb425, 0xf1ff, 0x0, 0x1);
        gbc.writeMem(0x54a6, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa3c9, gbc.sp());
        EXPECT(0x54a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01EE
        gbc.setState(0x19cb, 0xfd79, 0x24e0, 0xd811, 0xdec4, 0xaa51, 0x0, 0x1);
        gbc.writeMem(0x19cb, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfd79, gbc.sp());
        EXPECT(0x19cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01EF
        gbc.setState(0x3cdb, 0x435, 0x2f20, 0x5584, 0x5dca, 0xfdc, 0x1, 0x0);
        gbc.writeMem(0x3cdb, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x435, gbc.sp());
        EXPECT(0x3cdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01F0
        gbc.setState(0xa19d, 0x44d4, 0x81e0, 0xabdb, 0x17ef, 0x18ab, 0x0, 0x0);
        gbc.writeMem(0xa19d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x44d4, gbc.sp());
        EXPECT(0xa19f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa19d));
        EXPECT(0xfc, gbc.readMem(0xa19e));
        // CB FC 01F1
        gbc.setState(0x2ada, 0x69b7, 0xa990, 0xbde6, 0xcf, 0x81dd, 0x0, 0x1);
        gbc.writeMem(0x2ada, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x69b7, gbc.sp());
        EXPECT(0x2adc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 01F2
        gbc.setState(0x234d, 0xf2b3, 0xa5d0, 0xe3b7, 0x37d0, 0x3898, 0x1, 0x0);
        gbc.writeMem(0x234d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf2b3, gbc.sp());
        EXPECT(0x234f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 01F3
        gbc.setState(0xdc24, 0xdc6e, 0x5870, 0x172b, 0xa22b, 0xee39, 0x0, 0x0);
        gbc.writeMem(0xdc24, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xdc6e, gbc.sp());
        EXPECT(0xdc26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc24));
        EXPECT(0xfc, gbc.readMem(0xdc25));
        // CB FC 01F4
        gbc.setState(0x730d, 0xb4f9, 0x1860, 0x955f, 0x4969, 0xac73, 0x1, 0x1);
        gbc.writeMem(0x730d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb4f9, gbc.sp());
        EXPECT(0x730f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01F5
        gbc.setState(0xa716, 0x2f6b, 0x8150, 0x209a, 0x2f29, 0x107d, 0x0, 0x0);
        gbc.writeMem(0xa716, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2f6b, gbc.sp());
        EXPECT(0xa718, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa716));
        EXPECT(0xfc, gbc.readMem(0xa717));
        // CB FC 01F6
        gbc.setState(0xd7c8, 0xaad, 0x35a0, 0xce3f, 0x5d86, 0x7799, 0x1, 0x0);
        gbc.writeMem(0xd7c8, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xaad, gbc.sp());
        EXPECT(0xd7ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7c8));
        EXPECT(0xfc, gbc.readMem(0xd7c9));
        // CB FC 01F7
        gbc.setState(0x603e, 0xb148, 0xf1d0, 0x6e5e, 0x6df5, 0xb1de, 0x1, 0x1);
        gbc.writeMem(0x603e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb148, gbc.sp());
        EXPECT(0x6040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 01F8
        gbc.setState(0x76e3, 0xe9a3, 0x68e0, 0x6669, 0xb168, 0xafbb, 0x0, 0x1);
        gbc.writeMem(0x76e3, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe9a3, gbc.sp());
        EXPECT(0x76e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01F9
        gbc.setState(0x4ba1, 0x1fa, 0xf700, 0x62e0, 0xef3, 0x2310, 0x0, 0x0);
        gbc.writeMem(0x4ba1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1fa, gbc.sp());
        EXPECT(0x4ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01FA
        gbc.setState(0x4fa3, 0x9e72, 0xde40, 0x80ba, 0xe835, 0x30a9, 0x0, 0x1);
        gbc.writeMem(0x4fa3, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9e72, gbc.sp());
        EXPECT(0x4fa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01FB
        gbc.setState(0x590e, 0x9346, 0xbe0, 0x25f4, 0x9fd9, 0xa458, 0x0, 0x0);
        gbc.writeMem(0x590e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9346, gbc.sp());
        EXPECT(0x5910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 01FC
        gbc.setState(0x8115, 0xc960, 0x83c0, 0x25c9, 0xe9a1, 0x9413, 0x1, 0x1);
        gbc.writeMem(0x8115, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc960, gbc.sp());
        EXPECT(0x8117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8115));
        EXPECT(0xfc, gbc.readMem(0x8116));
        // CB FC 01FD
        gbc.setState(0xbeaa, 0x8553, 0xa360, 0xc818, 0x9e04, 0xaa8, 0x0, 0x0);
        gbc.writeMem(0xbeaa, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8553, gbc.sp());
        EXPECT(0xbeac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeaa));
        EXPECT(0xfc, gbc.readMem(0xbeab));
        // CB FC 01FE
        gbc.setState(0x62ab, 0x2c61, 0x4130, 0x186d, 0x20de, 0x4e12, 0x1, 0x1);
        gbc.writeMem(0x62ab, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2c61, gbc.sp());
        EXPECT(0x62ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 01FF
        gbc.setState(0xce72, 0x3088, 0x4eb0, 0xd266, 0x2454, 0x1a83, 0x0, 0x0);
        gbc.writeMem(0xce72, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3088, gbc.sp());
        EXPECT(0xce74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce72));
        EXPECT(0xfc, gbc.readMem(0xce73));
        // CB FC 0201
        gbc.setState(0x28cf, 0xf9b9, 0xdcd0, 0x8a4e, 0xc4d, 0x350a, 0x0, 0x1);
        gbc.writeMem(0x28cf, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf9b9, gbc.sp());
        EXPECT(0x28d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0202
        gbc.setState(0x5c31, 0xe575, 0x3ff0, 0x5911, 0x2469, 0xec2c, 0x0, 0x1);
        gbc.writeMem(0x5c31, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe575, gbc.sp());
        EXPECT(0x5c33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0203
        gbc.setState(0x605d, 0xe30, 0x2590, 0x2f19, 0x5d1b, 0x958f, 0x0, 0x1);
        gbc.writeMem(0x605d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe30, gbc.sp());
        EXPECT(0x605f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0204
        gbc.setState(0x1a81, 0x71d7, 0x8b50, 0x860f, 0xba73, 0x526a, 0x1, 0x0);
        gbc.writeMem(0x1a81, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x71d7, gbc.sp());
        EXPECT(0x1a83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0205
        gbc.setState(0xad8c, 0xf12f, 0xf480, 0xa64f, 0x3fd0, 0x1c4b, 0x0, 0x0);
        gbc.writeMem(0xad8c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf12f, gbc.sp());
        EXPECT(0xad8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad8c));
        EXPECT(0xfc, gbc.readMem(0xad8d));
        // CB FC 0206
        gbc.setState(0xef2a, 0x91fb, 0x5400, 0x591d, 0xc628, 0x46b3, 0x1, 0x0);
        gbc.writeMem(0xef2a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x91fb, gbc.sp());
        EXPECT(0xef2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef2a));
        EXPECT(0xfc, gbc.readMem(0xef2b));
        // CB FC 0207
        gbc.setState(0x1637, 0xfe7f, 0x7cb0, 0x6353, 0x40be, 0x7aaa, 0x0, 0x1);
        gbc.writeMem(0x1637, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfe7f, gbc.sp());
        EXPECT(0x1639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0208
        gbc.setState(0xed81, 0x26a8, 0xdd70, 0xf4ff, 0xe570, 0x42cc, 0x0, 0x1);
        gbc.writeMem(0xed81, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x26a8, gbc.sp());
        EXPECT(0xed83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed81));
        EXPECT(0xfc, gbc.readMem(0xed82));
        // CB FC 020A
        gbc.setState(0x47e5, 0xc598, 0x9080, 0xe0b, 0x7c0f, 0xde, 0x1, 0x1);
        gbc.writeMem(0x47e5, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc598, gbc.sp());
        EXPECT(0x47e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 020B
        gbc.setState(0xaf3b, 0xb95d, 0x2f30, 0x7df0, 0xda7, 0x6d90, 0x0, 0x1);
        gbc.writeMem(0xaf3b, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb95d, gbc.sp());
        EXPECT(0xaf3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf3b));
        EXPECT(0xfc, gbc.readMem(0xaf3c));
        // CB FC 020C
        gbc.setState(0x174, 0x2382, 0x39b0, 0xffba, 0x13d9, 0xdd8, 0x1, 0x0);
        gbc.writeMem(0x174, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2382, gbc.sp());
        EXPECT(0x176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 020D
        gbc.setState(0xafe5, 0x3d89, 0x6c20, 0x3556, 0xacbd, 0xd5f7, 0x0, 0x0);
        gbc.writeMem(0xafe5, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3d89, gbc.sp());
        EXPECT(0xafe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafe5));
        EXPECT(0xfc, gbc.readMem(0xafe6));
        // CB FC 020E
        gbc.setState(0x4207, 0x1a18, 0x94a0, 0xfb9b, 0xc803, 0x40ad, 0x1, 0x0);
        gbc.writeMem(0x4207, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1a18, gbc.sp());
        EXPECT(0x4209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 020F
        gbc.setState(0x8e7f, 0x353d, 0x7900, 0x63, 0x33d6, 0x9a7b, 0x0, 0x1);
        gbc.writeMem(0x8e7f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x353d, gbc.sp());
        EXPECT(0x8e81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e7f));
        EXPECT(0xfc, gbc.readMem(0x8e80));
        // CB FC 0210
        gbc.setState(0xee0c, 0x9690, 0xb1e0, 0xadd4, 0xfa49, 0x570a, 0x0, 0x0);
        gbc.writeMem(0xee0c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9690, gbc.sp());
        EXPECT(0xee0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee0c));
        EXPECT(0xfc, gbc.readMem(0xee0d));
        // CB FC 0211
        gbc.setState(0x1766, 0x63d1, 0x3130, 0x396f, 0xb700, 0x28bb, 0x0, 0x1);
        gbc.writeMem(0x1766, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x63d1, gbc.sp());
        EXPECT(0x1768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0212
        gbc.setState(0xb245, 0x4ec1, 0x34b0, 0xc610, 0x6604, 0x4c97, 0x1, 0x0);
        gbc.writeMem(0xb245, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4ec1, gbc.sp());
        EXPECT(0xb247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb245));
        EXPECT(0xfc, gbc.readMem(0xb246));
        // CB FC 0213
        gbc.setState(0xc685, 0x4ccf, 0xc580, 0x3f22, 0x3d1a, 0x1a0a, 0x1, 0x0);
        gbc.writeMem(0xc685, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4ccf, gbc.sp());
        EXPECT(0xc687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc685));
        EXPECT(0xfc, gbc.readMem(0xc686));
        // CB FC 0214
        gbc.setState(0x4817, 0x432c, 0x3c00, 0x78b9, 0x760f, 0x8ad3, 0x0, 0x0);
        gbc.writeMem(0x4817, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x432c, gbc.sp());
        EXPECT(0x4819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0215
        gbc.setState(0x5a10, 0x330c, 0xb80, 0x444c, 0x2791, 0xa28e, 0x0, 0x0);
        gbc.writeMem(0x5a10, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x330c, gbc.sp());
        EXPECT(0x5a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0216
        gbc.setState(0x9e67, 0x1055, 0xf180, 0x9d29, 0xa78e, 0xcd10, 0x0, 0x1);
        gbc.writeMem(0x9e67, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1055, gbc.sp());
        EXPECT(0x9e69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e67));
        EXPECT(0xfc, gbc.readMem(0x9e68));
        // CB FC 0217
        gbc.setState(0x56ce, 0xb207, 0x69f0, 0x4dc, 0x77d0, 0x6abd, 0x0, 0x1);
        gbc.writeMem(0x56ce, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb207, gbc.sp());
        EXPECT(0x56d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0218
        gbc.setState(0x37d9, 0xc966, 0x9b80, 0xc6c5, 0x90e1, 0x4043, 0x1, 0x0);
        gbc.writeMem(0x37d9, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc966, gbc.sp());
        EXPECT(0x37db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0219
        gbc.setState(0x8eec, 0x552b, 0x5b10, 0xb7d, 0x8934, 0xfa64, 0x0, 0x1);
        gbc.writeMem(0x8eec, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x552b, gbc.sp());
        EXPECT(0x8eee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eec));
        EXPECT(0xfc, gbc.readMem(0x8eed));
        // CB FC 021A
        gbc.setState(0xc72b, 0x670b, 0x3900, 0xa71f, 0x269f, 0x9e4a, 0x0, 0x1);
        gbc.writeMem(0xc72b, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x670b, gbc.sp());
        EXPECT(0xc72d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc72b));
        EXPECT(0xfc, gbc.readMem(0xc72c));
        // CB FC 021B
        gbc.setState(0x98b3, 0xa24, 0x1480, 0x8aeb, 0x9cc, 0xc18, 0x1, 0x1);
        gbc.writeMem(0x98b3, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa24, gbc.sp());
        EXPECT(0x98b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b3));
        EXPECT(0xfc, gbc.readMem(0x98b4));
        // CB FC 021C
        gbc.setState(0x1ed, 0xb332, 0xf410, 0xa0d8, 0x3927, 0x41a0, 0x1, 0x1);
        gbc.writeMem(0x1ed, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb332, gbc.sp());
        EXPECT(0x1ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 021D
        gbc.setState(0x1e9a, 0x66a8, 0xa330, 0xcaab, 0xd644, 0x35f0, 0x1, 0x0);
        gbc.writeMem(0x1e9a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x66a8, gbc.sp());
        EXPECT(0x1e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 021E
        gbc.setState(0x6475, 0xc749, 0x7920, 0x6cfe, 0x98e, 0x2d7d, 0x1, 0x1);
        gbc.writeMem(0x6475, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc749, gbc.sp());
        EXPECT(0x6477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 021F
        gbc.setState(0x9a33, 0x7baa, 0xa460, 0xf360, 0x33ce, 0x4290, 0x0, 0x1);
        gbc.writeMem(0x9a33, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7baa, gbc.sp());
        EXPECT(0x9a35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a33));
        EXPECT(0xfc, gbc.readMem(0x9a34));
        // CB FC 0220
        gbc.setState(0x8806, 0x965, 0x6250, 0xaac5, 0x5751, 0x5a6b, 0x0, 0x0);
        gbc.writeMem(0x8806, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x965, gbc.sp());
        EXPECT(0x8808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8806));
        EXPECT(0xfc, gbc.readMem(0x8807));
        // CB FC 0221
        gbc.setState(0xd4da, 0x7c3f, 0x5400, 0xd3b2, 0x558a, 0x5e28, 0x1, 0x1);
        gbc.writeMem(0xd4da, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7c3f, gbc.sp());
        EXPECT(0xd4dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4da));
        EXPECT(0xfc, gbc.readMem(0xd4db));
        // CB FC 0223
        gbc.setState(0x6252, 0xb7c5, 0x7f00, 0x49dd, 0xebc5, 0x70f8, 0x0, 0x1);
        gbc.writeMem(0x6252, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb7c5, gbc.sp());
        EXPECT(0x6254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0224
        gbc.setState(0x731c, 0xbac6, 0xd940, 0xc19d, 0xcaa7, 0xfb56, 0x1, 0x1);
        gbc.writeMem(0x731c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbac6, gbc.sp());
        EXPECT(0x731e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0225
        gbc.setState(0x15a9, 0x36a7, 0xba70, 0x2f64, 0x8ff, 0x4249, 0x1, 0x0);
        gbc.writeMem(0x15a9, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x36a7, gbc.sp());
        EXPECT(0x15ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0226
        gbc.setState(0x6b84, 0x2c9, 0x6270, 0x2904, 0x7ade, 0x73e, 0x0, 0x0);
        gbc.writeMem(0x6b84, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2c9, gbc.sp());
        EXPECT(0x6b86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0227
        gbc.setState(0xc0eb, 0x70ea, 0x3d10, 0x1faf, 0x185d, 0xa91a, 0x0, 0x0);
        gbc.writeMem(0xc0eb, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x70ea, gbc.sp());
        EXPECT(0xc0ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0eb));
        EXPECT(0xfc, gbc.readMem(0xc0ec));
        // CB FC 0228
        gbc.setState(0xa79, 0xff5e, 0x2860, 0x5fab, 0x4345, 0xf884, 0x0, 0x0);
        gbc.writeMem(0xa79, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xff5e, gbc.sp());
        EXPECT(0xa7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0229
        gbc.setState(0x3045, 0x7b3d, 0x77a0, 0x2d7, 0xf573, 0xf97f, 0x0, 0x1);
        gbc.writeMem(0x3045, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7b3d, gbc.sp());
        EXPECT(0x3047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 022A
        gbc.setState(0x60fd, 0x6104, 0x4bf0, 0x1f7f, 0xa89c, 0x7b95, 0x0, 0x0);
        gbc.writeMem(0x60fd, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6104, gbc.sp());
        EXPECT(0x60ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 022B
        gbc.setState(0x7210, 0x357b, 0x1360, 0xa249, 0x7793, 0xdc94, 0x0, 0x1);
        gbc.writeMem(0x7210, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x357b, gbc.sp());
        EXPECT(0x7212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 022C
        gbc.setState(0x2d70, 0x50dd, 0x2640, 0x765f, 0x756e, 0xee1c, 0x1, 0x0);
        gbc.writeMem(0x2d70, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x50dd, gbc.sp());
        EXPECT(0x2d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 022D
        gbc.setState(0x85c8, 0x1411, 0xb9f0, 0x76b5, 0xef5a, 0x517d, 0x0, 0x0);
        gbc.writeMem(0x85c8, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1411, gbc.sp());
        EXPECT(0x85ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c8));
        EXPECT(0xfc, gbc.readMem(0x85c9));
        // CB FC 022E
        gbc.setState(0xbbfd, 0xeac0, 0x44c0, 0x562b, 0x141c, 0xce4d, 0x1, 0x1);
        gbc.writeMem(0xbbfd, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xeac0, gbc.sp());
        EXPECT(0xbbff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbfd));
        EXPECT(0xfc, gbc.readMem(0xbbfe));
        // CB FC 022F
        gbc.setState(0x933c, 0x63e9, 0x3f10, 0xe353, 0x938, 0x76d6, 0x1, 0x1);
        gbc.writeMem(0x933c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x63e9, gbc.sp());
        EXPECT(0x933e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x933c));
        EXPECT(0xfc, gbc.readMem(0x933d));
        // CB FC 0230
        gbc.setState(0x9581, 0xb32f, 0xffd0, 0x1a5e, 0x146c, 0x784d, 0x1, 0x0);
        gbc.writeMem(0x9581, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb32f, gbc.sp());
        EXPECT(0x9583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9581));
        EXPECT(0xfc, gbc.readMem(0x9582));
        // CB FC 0231
        gbc.setState(0xc76e, 0x2600, 0xf650, 0x1683, 0xd2ae, 0x3fc7, 0x1, 0x1);
        gbc.writeMem(0xc76e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2600, gbc.sp());
        EXPECT(0xc770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc76e));
        EXPECT(0xfc, gbc.readMem(0xc76f));
        // CB FC 0232
        gbc.setState(0x3229, 0x7d28, 0x52d0, 0x60b7, 0x788b, 0xece4, 0x1, 0x1);
        gbc.writeMem(0x3229, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7d28, gbc.sp());
        EXPECT(0x322b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0233
        gbc.setState(0x489e, 0x18c7, 0x7330, 0xfa4a, 0xfb6e, 0x152f, 0x1, 0x0);
        gbc.writeMem(0x489e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x18c7, gbc.sp());
        EXPECT(0x48a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0234
        gbc.setState(0x9a23, 0xf8c5, 0x170, 0xd0f2, 0x56ea, 0xad02, 0x0, 0x0);
        gbc.writeMem(0x9a23, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf8c5, gbc.sp());
        EXPECT(0x9a25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a23));
        EXPECT(0xfc, gbc.readMem(0x9a24));
        // CB FC 0235
        gbc.setState(0x5ec8, 0x66fa, 0x5ed0, 0x7b8e, 0xf40c, 0x540, 0x1, 0x0);
        gbc.writeMem(0x5ec8, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x66fa, gbc.sp());
        EXPECT(0x5eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0236
        gbc.setState(0xc7df, 0xc865, 0x8c00, 0x20d2, 0x2e91, 0x34b5, 0x0, 0x1);
        gbc.writeMem(0xc7df, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc865, gbc.sp());
        EXPECT(0xc7e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7df));
        EXPECT(0xfc, gbc.readMem(0xc7e0));
        // CB FC 0237
        gbc.setState(0x212b, 0x3aae, 0xb900, 0x11e8, 0x99b5, 0xce7a, 0x1, 0x1);
        gbc.writeMem(0x212b, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3aae, gbc.sp());
        EXPECT(0x212d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0238
        gbc.setState(0x850c, 0x61c2, 0x4ca0, 0x759a, 0xba5c, 0xc729, 0x0, 0x0);
        gbc.writeMem(0x850c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x61c2, gbc.sp());
        EXPECT(0x850e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x850c));
        EXPECT(0xfc, gbc.readMem(0x850d));
        // CB FC 0239
        gbc.setState(0xeef1, 0xb4d2, 0x8450, 0x2519, 0x7fcd, 0xafd6, 0x1, 0x0);
        gbc.writeMem(0xeef1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb4d2, gbc.sp());
        EXPECT(0xeef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeef1));
        EXPECT(0xfc, gbc.readMem(0xeef2));
        // CB FC 023A
        gbc.setState(0xecc7, 0xa93, 0x5130, 0xe326, 0x2380, 0xca57, 0x0, 0x1);
        gbc.writeMem(0xecc7, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa93, gbc.sp());
        EXPECT(0xecc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecc7));
        EXPECT(0xfc, gbc.readMem(0xecc8));
        // CB FC 023B
        gbc.setState(0xc6d1, 0xab8f, 0x3c00, 0xb3c6, 0x1164, 0x60f3, 0x0, 0x1);
        gbc.writeMem(0xc6d1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xab8f, gbc.sp());
        EXPECT(0xc6d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6d1));
        EXPECT(0xfc, gbc.readMem(0xc6d2));
        // CB FC 023C
        gbc.setState(0x6327, 0x55bd, 0x7db0, 0xcdff, 0x9cad, 0xf39, 0x0, 0x1);
        gbc.writeMem(0x6327, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x55bd, gbc.sp());
        EXPECT(0x6329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 023D
        gbc.setState(0x3a54, 0x8fc4, 0x1d20, 0x7dcc, 0xd739, 0xf24b, 0x0, 0x0);
        gbc.writeMem(0x3a54, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8fc4, gbc.sp());
        EXPECT(0x3a56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 023E
        gbc.setState(0xef6f, 0x3b1, 0xcbf0, 0x414, 0xa4c7, 0xa81a, 0x0, 0x1);
        gbc.writeMem(0xef6f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3b1, gbc.sp());
        EXPECT(0xef71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef6f));
        EXPECT(0xfc, gbc.readMem(0xef70));
        // CB FC 023F
        gbc.setState(0xd3e0, 0x17ff, 0x1fe0, 0x3936, 0xdfcc, 0x61d4, 0x0, 0x1);
        gbc.writeMem(0xd3e0, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x17ff, gbc.sp());
        EXPECT(0xd3e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3e0));
        EXPECT(0xfc, gbc.readMem(0xd3e1));
        // CB FC 0240
        gbc.setState(0xb2c6, 0x2ee2, 0x80, 0x9af3, 0xe78f, 0xf1a7, 0x0, 0x0);
        gbc.writeMem(0xb2c6, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2ee2, gbc.sp());
        EXPECT(0xb2c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2c6));
        EXPECT(0xfc, gbc.readMem(0xb2c7));
        // CB FC 0241
        gbc.setState(0xbe33, 0x198e, 0x1fd0, 0xbc03, 0xc588, 0xc432, 0x1, 0x0);
        gbc.writeMem(0xbe33, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x198e, gbc.sp());
        EXPECT(0xbe35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe33));
        EXPECT(0xfc, gbc.readMem(0xbe34));
        // CB FC 0242
        gbc.setState(0xc4e1, 0xc444, 0x7fd0, 0x256a, 0x7395, 0x9ea7, 0x1, 0x0);
        gbc.writeMem(0xc4e1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc444, gbc.sp());
        EXPECT(0xc4e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4e1));
        EXPECT(0xfc, gbc.readMem(0xc4e2));
        // CB FC 0243
        gbc.setState(0x9e7f, 0x1093, 0x4980, 0xe3f4, 0x57f2, 0x6d02, 0x1, 0x1);
        gbc.writeMem(0x9e7f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1093, gbc.sp());
        EXPECT(0x9e81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e7f));
        EXPECT(0xfc, gbc.readMem(0x9e80));
        // CB FC 0245
        gbc.setState(0x7a75, 0xbd92, 0xf5c0, 0x246c, 0x6bb3, 0x78d2, 0x1, 0x1);
        gbc.writeMem(0x7a75, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbd92, gbc.sp());
        EXPECT(0x7a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0246
        gbc.setState(0xad43, 0xab6a, 0x2090, 0xb0fc, 0x42c, 0x6e89, 0x0, 0x0);
        gbc.writeMem(0xad43, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xab6a, gbc.sp());
        EXPECT(0xad45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad43));
        EXPECT(0xfc, gbc.readMem(0xad44));
        // CB FC 0247
        gbc.setState(0x5bc5, 0x45a8, 0xda80, 0x880a, 0xbc78, 0xa373, 0x0, 0x1);
        gbc.writeMem(0x5bc5, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x45a8, gbc.sp());
        EXPECT(0x5bc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0248
        gbc.setState(0xc6e6, 0xeb46, 0x89e0, 0x3494, 0xfebc, 0xe3de, 0x1, 0x1);
        gbc.writeMem(0xc6e6, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xeb46, gbc.sp());
        EXPECT(0xc6e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e6));
        EXPECT(0xfc, gbc.readMem(0xc6e7));
        // CB FC 0249
        gbc.setState(0x7f23, 0xdc, 0xcdb0, 0xf7f4, 0x7f49, 0x1e93, 0x0, 0x1);
        gbc.writeMem(0x7f23, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xdc, gbc.sp());
        EXPECT(0x7f25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 024A
        gbc.setState(0xe140, 0xa734, 0x9160, 0xad67, 0x15d0, 0x1dcb, 0x0, 0x1);
        gbc.writeMem(0xe140, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa734, gbc.sp());
        EXPECT(0xe142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe140));
        EXPECT(0xfc, gbc.readMem(0xe141));
        // CB FC 024B
        gbc.setState(0x89e, 0x2f6b, 0x3be0, 0xe121, 0x5cc1, 0x810d, 0x1, 0x1);
        gbc.writeMem(0x89e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2f6b, gbc.sp());
        EXPECT(0x8a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 024C
        gbc.setState(0xab54, 0xf2b8, 0x9ba0, 0x5bbd, 0xa16a, 0x595d, 0x1, 0x0);
        gbc.writeMem(0xab54, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf2b8, gbc.sp());
        EXPECT(0xab56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab54));
        EXPECT(0xfc, gbc.readMem(0xab55));
        // CB FC 024D
        gbc.setState(0xecb2, 0x3665, 0xc340, 0xcac9, 0x5166, 0xd79a, 0x0, 0x1);
        gbc.writeMem(0xecb2, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3665, gbc.sp());
        EXPECT(0xecb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecb2));
        EXPECT(0xfc, gbc.readMem(0xecb3));
        // CB FC 024E
        gbc.setState(0xbe08, 0x73fa, 0xbe40, 0x3c59, 0xf54e, 0xaa63, 0x1, 0x1);
        gbc.writeMem(0xbe08, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x73fa, gbc.sp());
        EXPECT(0xbe0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe08));
        EXPECT(0xfc, gbc.readMem(0xbe09));
        // CB FC 024F
        gbc.setState(0x4ab0, 0xbbdf, 0x41b0, 0xd8df, 0xab9e, 0xe476, 0x1, 0x0);
        gbc.writeMem(0x4ab0, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbbdf, gbc.sp());
        EXPECT(0x4ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0250
        gbc.setState(0x32d8, 0x9fca, 0x6e10, 0xa139, 0x24a5, 0xd5e6, 0x1, 0x0);
        gbc.writeMem(0x32d8, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9fca, gbc.sp());
        EXPECT(0x32da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0251
        gbc.setState(0xdf36, 0x5c25, 0xc620, 0x668d, 0x96f9, 0x75bd, 0x1, 0x0);
        gbc.writeMem(0xdf36, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5c25, gbc.sp());
        EXPECT(0xdf38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf36));
        EXPECT(0xfc, gbc.readMem(0xdf37));
        // CB FC 0252
        gbc.setState(0xa8f5, 0xe1b7, 0xbdf0, 0xd69d, 0xc65c, 0x6608, 0x0, 0x0);
        gbc.writeMem(0xa8f5, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe1b7, gbc.sp());
        EXPECT(0xa8f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f5));
        EXPECT(0xfc, gbc.readMem(0xa8f6));
        // CB FC 0253
        gbc.setState(0xe56d, 0xca56, 0xe910, 0x7f0c, 0xfc71, 0xa63, 0x0, 0x0);
        gbc.writeMem(0xe56d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xca56, gbc.sp());
        EXPECT(0xe56f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe56d));
        EXPECT(0xfc, gbc.readMem(0xe56e));
        // CB FC 0254
        gbc.setState(0x1502, 0x5935, 0xe2c0, 0x3b53, 0xaf5b, 0x5c0f, 0x1, 0x1);
        gbc.writeMem(0x1502, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5935, gbc.sp());
        EXPECT(0x1504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0255
        gbc.setState(0xd943, 0xea6a, 0x5450, 0xb80a, 0x7dcf, 0x97b1, 0x1, 0x1);
        gbc.writeMem(0xd943, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xea6a, gbc.sp());
        EXPECT(0xd945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd943));
        EXPECT(0xfc, gbc.readMem(0xd944));
        // CB FC 0256
        gbc.setState(0xd444, 0xef8, 0xfe70, 0xa503, 0xf61d, 0xf6e2, 0x0, 0x1);
        gbc.writeMem(0xd444, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xef8, gbc.sp());
        EXPECT(0xd446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd444));
        EXPECT(0xfc, gbc.readMem(0xd445));
        // CB FC 0257
        gbc.setState(0x5add, 0x76f7, 0xe840, 0x18b, 0x93cb, 0x4e37, 0x0, 0x0);
        gbc.writeMem(0x5add, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x76f7, gbc.sp());
        EXPECT(0x5adf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0258
        gbc.setState(0x7b8c, 0x890f, 0x97d0, 0xb522, 0xf416, 0x6b59, 0x1, 0x1);
        gbc.writeMem(0x7b8c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x890f, gbc.sp());
        EXPECT(0x7b8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0259
        gbc.setState(0x1ffb, 0x8702, 0x1a80, 0x31fb, 0xe83e, 0x89cb, 0x0, 0x1);
        gbc.writeMem(0x1ffb, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8702, gbc.sp());
        EXPECT(0x1ffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 025A
        gbc.setState(0x4f02, 0xca7f, 0x8ea0, 0x4532, 0xbd7f, 0x3a78, 0x0, 0x0);
        gbc.writeMem(0x4f02, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xca7f, gbc.sp());
        EXPECT(0x4f04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 025B
        gbc.setState(0xa7f3, 0xa375, 0x90f0, 0x38ab, 0x3a7, 0x86c6, 0x1, 0x0);
        gbc.writeMem(0xa7f3, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa375, gbc.sp());
        EXPECT(0xa7f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f3));
        EXPECT(0xfc, gbc.readMem(0xa7f4));
        // CB FC 025C
        gbc.setState(0x282b, 0xc8eb, 0x7cd0, 0x77e4, 0x58a9, 0x7d3, 0x0, 0x0);
        gbc.writeMem(0x282b, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc8eb, gbc.sp());
        EXPECT(0x282d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 025D
        gbc.setState(0xcc60, 0xcaf2, 0x7140, 0x9d31, 0x8797, 0xc95f, 0x0, 0x1);
        gbc.writeMem(0xcc60, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcaf2, gbc.sp());
        EXPECT(0xcc62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc60));
        EXPECT(0xfc, gbc.readMem(0xcc61));
        // CB FC 025E
        gbc.setState(0x2da, 0x95ba, 0x8d90, 0x466f, 0xb2f5, 0xaa1d, 0x0, 0x1);
        gbc.writeMem(0x2da, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x95ba, gbc.sp());
        EXPECT(0x2dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 025F
        gbc.setState(0xed0f, 0x1f42, 0xff90, 0x1134, 0x1359, 0x6f9f, 0x0, 0x0);
        gbc.writeMem(0xed0f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1f42, gbc.sp());
        EXPECT(0xed11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed0f));
        EXPECT(0xfc, gbc.readMem(0xed10));
        // CB FC 0260
        gbc.setState(0x7e3b, 0xc475, 0x4ea0, 0x2792, 0x1ff7, 0xd4ff, 0x0, 0x0);
        gbc.writeMem(0x7e3b, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc475, gbc.sp());
        EXPECT(0x7e3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0261
        gbc.setState(0xefd6, 0xf4c4, 0x74f0, 0xabdc, 0xa002, 0x9815, 0x0, 0x0);
        gbc.writeMem(0xefd6, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf4c4, gbc.sp());
        EXPECT(0xefd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd6));
        EXPECT(0xfc, gbc.readMem(0xefd7));
        // CB FC 0262
        gbc.setState(0xb19f, 0x17e2, 0x6c10, 0xc5f4, 0x1143, 0xc2d1, 0x0, 0x1);
        gbc.writeMem(0xb19f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x17e2, gbc.sp());
        EXPECT(0xb1a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb19f));
        EXPECT(0xfc, gbc.readMem(0xb1a0));
        // CB FC 0263
        gbc.setState(0x870c, 0xaf65, 0x280, 0xbdd7, 0x3297, 0xddfb, 0x0, 0x1);
        gbc.writeMem(0x870c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xaf65, gbc.sp());
        EXPECT(0x870e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x870c));
        EXPECT(0xfc, gbc.readMem(0x870d));
        // CB FC 0264
        gbc.setState(0x1b11, 0x7345, 0xaaa0, 0xcbfc, 0x9794, 0x8dfe, 0x0, 0x0);
        gbc.writeMem(0x1b11, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7345, gbc.sp());
        EXPECT(0x1b13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0265
        gbc.setState(0x3ba8, 0x72d9, 0x3d60, 0x5e50, 0x11ce, 0x3549, 0x0, 0x0);
        gbc.writeMem(0x3ba8, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x72d9, gbc.sp());
        EXPECT(0x3baa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0266
        gbc.setState(0x16e4, 0xe794, 0x7e80, 0x99fa, 0x3281, 0x6aa7, 0x1, 0x1);
        gbc.writeMem(0x16e4, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe794, gbc.sp());
        EXPECT(0x16e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0267
        gbc.setState(0x9f7, 0xbef2, 0xb5e0, 0xff09, 0x3856, 0x449d, 0x1, 0x0);
        gbc.writeMem(0x9f7, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xbef2, gbc.sp());
        EXPECT(0x9f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0268
        gbc.setState(0x2239, 0x53ff, 0x8850, 0x240d, 0x310b, 0x90c3, 0x1, 0x0);
        gbc.writeMem(0x2239, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x53ff, gbc.sp());
        EXPECT(0x223b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0269
        gbc.setState(0xebda, 0xf706, 0x9f50, 0xe439, 0x996a, 0xcc24, 0x1, 0x1);
        gbc.writeMem(0xebda, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf706, gbc.sp());
        EXPECT(0xebdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebda));
        EXPECT(0xfc, gbc.readMem(0xebdb));
        // CB FC 026A
        gbc.setState(0xd1fa, 0x261d, 0x1f60, 0x49c0, 0x24e, 0xcc95, 0x0, 0x1);
        gbc.writeMem(0xd1fa, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x261d, gbc.sp());
        EXPECT(0xd1fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1fa));
        EXPECT(0xfc, gbc.readMem(0xd1fb));
        // CB FC 026B
        gbc.setState(0x246f, 0x8cbe, 0x70a0, 0x8aa4, 0x912, 0x730d, 0x0, 0x1);
        gbc.writeMem(0x246f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8cbe, gbc.sp());
        EXPECT(0x2471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 026C
        gbc.setState(0x6e5a, 0xd1dd, 0x5640, 0x2dee, 0x3d2a, 0xf183, 0x1, 0x1);
        gbc.writeMem(0x6e5a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd1dd, gbc.sp());
        EXPECT(0x6e5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 026D
        gbc.setState(0xbbed, 0xa5d7, 0xfb10, 0xb53e, 0x4327, 0xbe5d, 0x1, 0x0);
        gbc.writeMem(0xbbed, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa5d7, gbc.sp());
        EXPECT(0xbbef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbed));
        EXPECT(0xfc, gbc.readMem(0xbbee));
        // CB FC 026E
        gbc.setState(0xdf84, 0x16d9, 0xe910, 0x8324, 0xea30, 0x5766, 0x0, 0x1);
        gbc.writeMem(0xdf84, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x16d9, gbc.sp());
        EXPECT(0xdf86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf84));
        EXPECT(0xfc, gbc.readMem(0xdf85));
        // CB FC 0270
        gbc.setState(0x9000, 0xd14c, 0xbd30, 0xd7d, 0x8f02, 0x8fd, 0x1, 0x1);
        gbc.writeMem(0x9000, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd14c, gbc.sp());
        EXPECT(0x9002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9000));
        EXPECT(0xfc, gbc.readMem(0x9001));
        // CB FC 0272
        gbc.setState(0x1f7c, 0xf91, 0x1d70, 0x2423, 0x374c, 0xc209, 0x0, 0x0);
        gbc.writeMem(0x1f7c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf91, gbc.sp());
        EXPECT(0x1f7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0273
        gbc.setState(0x1493, 0xeb2c, 0xd2d0, 0x524d, 0x7da3, 0xdabc, 0x0, 0x1);
        gbc.writeMem(0x1493, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xeb2c, gbc.sp());
        EXPECT(0x1495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0274
        gbc.setState(0xc0b7, 0xfb53, 0xdfa0, 0x52fe, 0xbd67, 0xa31c, 0x1, 0x1);
        gbc.writeMem(0xc0b7, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xfb53, gbc.sp());
        EXPECT(0xc0b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0b7));
        EXPECT(0xfc, gbc.readMem(0xc0b8));
        // CB FC 0275
        gbc.setState(0x1831, 0x12c0, 0x3aa0, 0xaf0, 0x2013, 0x4843, 0x0, 0x0);
        gbc.writeMem(0x1831, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x12c0, gbc.sp());
        EXPECT(0x1833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0276
        gbc.setState(0x9f4, 0xe194, 0xe4a0, 0x2dd7, 0xae65, 0x4a17, 0x1, 0x0);
        gbc.writeMem(0x9f4, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe194, gbc.sp());
        EXPECT(0x9f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0277
        gbc.setState(0x5581, 0xead1, 0x5940, 0x87ce, 0xdf7e, 0xd39d, 0x0, 0x1);
        gbc.writeMem(0x5581, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xead1, gbc.sp());
        EXPECT(0x5583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0278
        gbc.setState(0x6306, 0x9db2, 0x8e80, 0xf436, 0x75cc, 0xad49, 0x0, 0x0);
        gbc.writeMem(0x6306, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9db2, gbc.sp());
        EXPECT(0x6308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0279
        gbc.setState(0x76ec, 0x84d2, 0xb2d0, 0xf8ba, 0x2c6e, 0x4506, 0x1, 0x1);
        gbc.writeMem(0x76ec, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x84d2, gbc.sp());
        EXPECT(0x76ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 027A
        gbc.setState(0x543f, 0xc89b, 0xfda0, 0x8451, 0xfce6, 0xba77, 0x1, 0x0);
        gbc.writeMem(0x543f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc89b, gbc.sp());
        EXPECT(0x5441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 027B
        gbc.setState(0x113, 0xe71d, 0x7130, 0x1f62, 0x7fc0, 0x473c, 0x1, 0x1);
        gbc.writeMem(0x113, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe71d, gbc.sp());
        EXPECT(0x115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 027C
        gbc.setState(0xa07e, 0xc779, 0xb360, 0x56b, 0xab24, 0x8f2a, 0x0, 0x1);
        gbc.writeMem(0xa07e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc779, gbc.sp());
        EXPECT(0xa080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa07e));
        EXPECT(0xfc, gbc.readMem(0xa07f));
        // CB FC 027D
        gbc.setState(0x421, 0x4243, 0x1f70, 0x2a29, 0x8d69, 0xc457, 0x0, 0x1);
        gbc.writeMem(0x421, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4243, gbc.sp());
        EXPECT(0x423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 027E
        gbc.setState(0x3c12, 0x5ba8, 0x3b40, 0xea77, 0xaa23, 0x5846, 0x1, 0x0);
        gbc.writeMem(0x3c12, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5ba8, gbc.sp());
        EXPECT(0x3c14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 027F
        gbc.setState(0x814, 0x72d2, 0x1f30, 0xe70f, 0xadf7, 0x604d, 0x0, 0x1);
        gbc.writeMem(0x814, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x72d2, gbc.sp());
        EXPECT(0x816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0280
        gbc.setState(0xe23d, 0x9adc, 0xf3a0, 0x8ada, 0x8197, 0x89ae, 0x1, 0x1);
        gbc.writeMem(0xe23d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9adc, gbc.sp());
        EXPECT(0xe23f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe23d));
        EXPECT(0xfc, gbc.readMem(0xe23e));
        // CB FC 0281
        gbc.setState(0x1a57, 0x93e4, 0xa4d0, 0x1269, 0x3bf5, 0x2e06, 0x1, 0x1);
        gbc.writeMem(0x1a57, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x93e4, gbc.sp());
        EXPECT(0x1a59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0282
        gbc.setState(0xb775, 0xbca2, 0x3560, 0xa418, 0xf1f0, 0x6255, 0x0, 0x1);
        gbc.writeMem(0xb775, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xbca2, gbc.sp());
        EXPECT(0xb777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb775));
        EXPECT(0xfc, gbc.readMem(0xb776));
        // CB FC 0283
        gbc.setState(0x7a87, 0x5445, 0xe7f0, 0x36d8, 0x7e9e, 0x45b2, 0x1, 0x0);
        gbc.writeMem(0x7a87, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5445, gbc.sp());
        EXPECT(0x7a89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0284
        gbc.setState(0xa344, 0x13f6, 0x9390, 0xd241, 0x5f9a, 0xd875, 0x0, 0x1);
        gbc.writeMem(0xa344, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x13f6, gbc.sp());
        EXPECT(0xa346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa344));
        EXPECT(0xfc, gbc.readMem(0xa345));
        // CB FC 0285
        gbc.setState(0x2511, 0x151b, 0x29a0, 0x82d, 0xd7f1, 0x7e9f, 0x1, 0x0);
        gbc.writeMem(0x2511, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x151b, gbc.sp());
        EXPECT(0x2513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0286
        gbc.setState(0x870c, 0xf566, 0x5860, 0xe2b5, 0xf74f, 0xd43c, 0x1, 0x0);
        gbc.writeMem(0x870c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf566, gbc.sp());
        EXPECT(0x870e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x870c));
        EXPECT(0xfc, gbc.readMem(0x870d));
        // CB FC 0287
        gbc.setState(0xbae1, 0x4d1e, 0x58c0, 0xf68c, 0xab40, 0xed97, 0x1, 0x0);
        gbc.writeMem(0xbae1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4d1e, gbc.sp());
        EXPECT(0xbae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbae1));
        EXPECT(0xfc, gbc.readMem(0xbae2));
        // CB FC 0288
        gbc.setState(0x3142, 0xe3e4, 0x7840, 0x6d6c, 0x53fc, 0x4f4e, 0x1, 0x1);
        gbc.writeMem(0x3142, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe3e4, gbc.sp());
        EXPECT(0x3144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0289
        gbc.setState(0x9d88, 0x688f, 0x77e0, 0x30b2, 0x63aa, 0x451, 0x0, 0x0);
        gbc.writeMem(0x9d88, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x688f, gbc.sp());
        EXPECT(0x9d8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d88));
        EXPECT(0xfc, gbc.readMem(0x9d89));
        // CB FC 028A
        gbc.setState(0xc467, 0x3c2b, 0xdaf0, 0xfb4e, 0x61e6, 0x1a3e, 0x0, 0x0);
        gbc.writeMem(0xc467, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3c2b, gbc.sp());
        EXPECT(0xc469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc467));
        EXPECT(0xfc, gbc.readMem(0xc468));
        // CB FC 028B
        gbc.setState(0x2525, 0x6b7b, 0xc560, 0x240f, 0xa734, 0x8c21, 0x1, 0x0);
        gbc.writeMem(0x2525, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6b7b, gbc.sp());
        EXPECT(0x2527, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 028D
        gbc.setState(0xaa68, 0x355f, 0x8b40, 0xe32b, 0x976c, 0x85ea, 0x0, 0x0);
        gbc.writeMem(0xaa68, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x355f, gbc.sp());
        EXPECT(0xaa6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa68));
        EXPECT(0xfc, gbc.readMem(0xaa69));
        // CB FC 028E
        gbc.setState(0x68a3, 0x47c3, 0x2280, 0x4dd8, 0x2f94, 0xb2d7, 0x0, 0x0);
        gbc.writeMem(0x68a3, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x47c3, gbc.sp());
        EXPECT(0x68a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 028F
        gbc.setState(0xe898, 0xfadc, 0x19f0, 0xf828, 0xb9a3, 0x4fc3, 0x1, 0x0);
        gbc.writeMem(0xe898, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xfadc, gbc.sp());
        EXPECT(0xe89a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe898));
        EXPECT(0xfc, gbc.readMem(0xe899));
        // CB FC 0290
        gbc.setState(0xd5f, 0x90f9, 0xefb0, 0xfac, 0xce0b, 0x8dbf, 0x1, 0x0);
        gbc.writeMem(0xd5f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x90f9, gbc.sp());
        EXPECT(0xd61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0291
        gbc.setState(0x52c1, 0x388e, 0xa0a0, 0x3b93, 0x80bd, 0x8e2a, 0x1, 0x0);
        gbc.writeMem(0x52c1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x388e, gbc.sp());
        EXPECT(0x52c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0292
        gbc.setState(0x37d3, 0xfb59, 0x460, 0x164, 0x1cf2, 0xd47f, 0x1, 0x1);
        gbc.writeMem(0x37d3, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xfb59, gbc.sp());
        EXPECT(0x37d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0293
        gbc.setState(0x79a4, 0xa8bd, 0x9fe0, 0x3a63, 0x991e, 0x1f42, 0x1, 0x0);
        gbc.writeMem(0x79a4, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa8bd, gbc.sp());
        EXPECT(0x79a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0294
        gbc.setState(0xc951, 0x6fb4, 0xdfc0, 0x7ec1, 0x471b, 0xb419, 0x0, 0x1);
        gbc.writeMem(0xc951, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6fb4, gbc.sp());
        EXPECT(0xc953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc951));
        EXPECT(0xfc, gbc.readMem(0xc952));
        // CB FC 0295
        gbc.setState(0xe71e, 0xf5d6, 0xd780, 0xacf5, 0xe787, 0xce08, 0x1, 0x1);
        gbc.writeMem(0xe71e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf5d6, gbc.sp());
        EXPECT(0xe720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe71e));
        EXPECT(0xfc, gbc.readMem(0xe71f));
        // CB FC 0296
        gbc.setState(0x4a23, 0xdb37, 0x7210, 0xe235, 0xec3d, 0xfb9f, 0x1, 0x1);
        gbc.writeMem(0x4a23, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xdb37, gbc.sp());
        EXPECT(0x4a25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0297
        gbc.setState(0x2437, 0xa5b8, 0x84f0, 0xbe86, 0xac56, 0xc7c9, 0x0, 0x0);
        gbc.writeMem(0x2437, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa5b8, gbc.sp());
        EXPECT(0x2439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0298
        gbc.setState(0xa845, 0x9d6d, 0x67f0, 0x8db0, 0x2ab4, 0x792e, 0x0, 0x1);
        gbc.writeMem(0xa845, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9d6d, gbc.sp());
        EXPECT(0xa847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa845));
        EXPECT(0xfc, gbc.readMem(0xa846));
        // CB FC 0299
        gbc.setState(0x5fb3, 0xbc01, 0x4b70, 0x13be, 0xc777, 0x39b1, 0x0, 0x1);
        gbc.writeMem(0x5fb3, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbc01, gbc.sp());
        EXPECT(0x5fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 029A
        gbc.setState(0xd577, 0x4884, 0xc3c0, 0xd56d, 0xcf, 0xe54a, 0x1, 0x0);
        gbc.writeMem(0xd577, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4884, gbc.sp());
        EXPECT(0xd579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd577));
        EXPECT(0xfc, gbc.readMem(0xd578));
        // CB FC 029B
        gbc.setState(0x9932, 0xf1c5, 0xf0, 0x4bf8, 0x48d7, 0xddec, 0x1, 0x0);
        gbc.writeMem(0x9932, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf1c5, gbc.sp());
        EXPECT(0x9934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9932));
        EXPECT(0xfc, gbc.readMem(0x9933));
        // CB FC 029C
        gbc.setState(0x9c49, 0xf44e, 0xbaa0, 0x2ba4, 0x111, 0x8868, 0x0, 0x1);
        gbc.writeMem(0x9c49, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf44e, gbc.sp());
        EXPECT(0x9c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c49));
        EXPECT(0xfc, gbc.readMem(0x9c4a));
        // CB FC 029D
        gbc.setState(0xc26d, 0xe137, 0x5540, 0x1c8a, 0xe1af, 0xf737, 0x0, 0x0);
        gbc.writeMem(0xc26d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe137, gbc.sp());
        EXPECT(0xc26f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc26d));
        EXPECT(0xfc, gbc.readMem(0xc26e));
        // CB FC 029E
        gbc.setState(0x6a04, 0xba55, 0xac50, 0x364b, 0xd2cf, 0xacb8, 0x1, 0x1);
        gbc.writeMem(0x6a04, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xba55, gbc.sp());
        EXPECT(0x6a06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 02A0
        gbc.setState(0xccc7, 0x1013, 0xf560, 0x77df, 0x9919, 0x6573, 0x1, 0x1);
        gbc.writeMem(0xccc7, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1013, gbc.sp());
        EXPECT(0xccc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccc7));
        EXPECT(0xfc, gbc.readMem(0xccc8));
        // CB FC 02A1
        gbc.setState(0x48f5, 0xafc, 0x6780, 0xad8b, 0x2b77, 0x6821, 0x1, 0x1);
        gbc.writeMem(0x48f5, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xafc, gbc.sp());
        EXPECT(0x48f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02A2
        gbc.setState(0x848e, 0x4d85, 0x94c0, 0x5a7a, 0x978e, 0x286c, 0x0, 0x0);
        gbc.writeMem(0x848e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4d85, gbc.sp());
        EXPECT(0x8490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x848e));
        EXPECT(0xfc, gbc.readMem(0x848f));
        // CB FC 02A3
        gbc.setState(0x8dda, 0x9f00, 0x62a0, 0x4f5a, 0x4e80, 0xdd79, 0x0, 0x0);
        gbc.writeMem(0x8dda, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9f00, gbc.sp());
        EXPECT(0x8ddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dda));
        EXPECT(0xfc, gbc.readMem(0x8ddb));
        // CB FC 02A4
        gbc.setState(0xc471, 0x51d4, 0xc630, 0x7b08, 0x2dfb, 0xb18, 0x0, 0x1);
        gbc.writeMem(0xc471, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x51d4, gbc.sp());
        EXPECT(0xc473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc471));
        EXPECT(0xfc, gbc.readMem(0xc472));
        // CB FC 02A5
        gbc.setState(0x1bcb, 0xdac4, 0x9b80, 0xc181, 0x5ce1, 0x96dd, 0x1, 0x0);
        gbc.writeMem(0x1bcb, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xdac4, gbc.sp());
        EXPECT(0x1bcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02A6
        gbc.setState(0xdff0, 0xc8e7, 0x9a0, 0x1daa, 0x2066, 0x4737, 0x0, 0x0);
        gbc.writeMem(0xdff0, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc8e7, gbc.sp());
        EXPECT(0xdff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdff0));
        EXPECT(0xfc, gbc.readMem(0xdff1));
        // CB FC 02A7
        gbc.setState(0x2bc9, 0x12ea, 0x90c0, 0x1feb, 0xd26e, 0xf510, 0x1, 0x0);
        gbc.writeMem(0x2bc9, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x12ea, gbc.sp());
        EXPECT(0x2bcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02A8
        gbc.setState(0xe92d, 0xdaa8, 0x3760, 0x3c77, 0x2b80, 0x9309, 0x0, 0x0);
        gbc.writeMem(0xe92d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xdaa8, gbc.sp());
        EXPECT(0xe92f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe92d));
        EXPECT(0xfc, gbc.readMem(0xe92e));
        // CB FC 02A9
        gbc.setState(0xcd7, 0x29aa, 0x8240, 0xd472, 0x2eed, 0xb313, 0x0, 0x1);
        gbc.writeMem(0xcd7, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x29aa, gbc.sp());
        EXPECT(0xcd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02AA
        gbc.setState(0x8b01, 0x412b, 0x2770, 0xead3, 0x494a, 0xc172, 0x0, 0x1);
        gbc.writeMem(0x8b01, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x412b, gbc.sp());
        EXPECT(0x8b03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b01));
        EXPECT(0xfc, gbc.readMem(0x8b02));
        // CB FC 02AB
        gbc.setState(0xe852, 0xd1b5, 0x78b0, 0x4c3c, 0xf88a, 0x25f9, 0x0, 0x0);
        gbc.writeMem(0xe852, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd1b5, gbc.sp());
        EXPECT(0xe854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe852));
        EXPECT(0xfc, gbc.readMem(0xe853));
        // CB FC 02AC
        gbc.setState(0xcb42, 0xb6a0, 0xe7f0, 0x9339, 0x2f61, 0x912e, 0x0, 0x1);
        gbc.writeMem(0xcb42, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb6a0, gbc.sp());
        EXPECT(0xcb44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb42));
        EXPECT(0xfc, gbc.readMem(0xcb43));
        // CB FC 02AD
        gbc.setState(0x16f5, 0x1634, 0x5d0, 0x5718, 0xa3e1, 0xb93, 0x1, 0x0);
        gbc.writeMem(0x16f5, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1634, gbc.sp());
        EXPECT(0x16f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 02AE
        gbc.setState(0x5f5e, 0x8077, 0x1eb0, 0x4ff6, 0xa896, 0x17e7, 0x0, 0x0);
        gbc.writeMem(0x5f5e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8077, gbc.sp());
        EXPECT(0x5f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 02AF
        gbc.setState(0x2277, 0x2c6b, 0x6760, 0x8596, 0xcff8, 0xf060, 0x1, 0x0);
        gbc.writeMem(0x2277, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2c6b, gbc.sp());
        EXPECT(0x2279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02B0
        gbc.setState(0x24c7, 0xf7c0, 0x8c0, 0x59a9, 0x15fb, 0x31f3, 0x0, 0x0);
        gbc.writeMem(0x24c7, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf7c0, gbc.sp());
        EXPECT(0x24c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02B1
        gbc.setState(0x6f2d, 0x906c, 0xa360, 0xa46c, 0xa0eb, 0x177e, 0x1, 0x0);
        gbc.writeMem(0x6f2d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x906c, gbc.sp());
        EXPECT(0x6f2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02B2
        gbc.setState(0xd04, 0xef4c, 0x16d0, 0xb85c, 0x3424, 0x437c, 0x1, 0x0);
        gbc.writeMem(0xd04, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xef4c, gbc.sp());
        EXPECT(0xd06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 02B3
        gbc.setState(0x4c44, 0xa479, 0x8740, 0x9e02, 0x516f, 0xee23, 0x0, 0x0);
        gbc.writeMem(0x4c44, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa479, gbc.sp());
        EXPECT(0x4c46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02B4
        gbc.setState(0xcc5d, 0x3a3d, 0xf990, 0x1bc4, 0xe66f, 0x5f0, 0x0, 0x0);
        gbc.writeMem(0xcc5d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3a3d, gbc.sp());
        EXPECT(0xcc5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc5d));
        EXPECT(0xfc, gbc.readMem(0xcc5e));
        // CB FC 02B5
        gbc.setState(0x371e, 0xa59, 0x1a40, 0xd961, 0x220d, 0x6fc2, 0x0, 0x1);
        gbc.writeMem(0x371e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa59, gbc.sp());
        EXPECT(0x3720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02B6
        gbc.setState(0x262a, 0x73f, 0x350, 0x9c4a, 0x1bd0, 0x873e, 0x1, 0x1);
        gbc.writeMem(0x262a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x73f, gbc.sp());
        EXPECT(0x262c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 02B7
        gbc.setState(0xddb8, 0x91af, 0xe3a0, 0x162f, 0x2d26, 0x6174, 0x0, 0x0);
        gbc.writeMem(0xddb8, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x91af, gbc.sp());
        EXPECT(0xddba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddb8));
        EXPECT(0xfc, gbc.readMem(0xddb9));
        // CB FC 02B8
        gbc.setState(0x9985, 0xc9ff, 0x1a50, 0x27c4, 0xed66, 0x47df, 0x1, 0x1);
        gbc.writeMem(0x9985, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc9ff, gbc.sp());
        EXPECT(0x9987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9985));
        EXPECT(0xfc, gbc.readMem(0x9986));
        // CB FC 02B9
        gbc.setState(0x392e, 0x2d48, 0x4e20, 0xc58b, 0xd526, 0x4474, 0x1, 0x0);
        gbc.writeMem(0x392e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2d48, gbc.sp());
        EXPECT(0x3930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02BA
        gbc.setState(0xa33f, 0x9169, 0x2a80, 0xd392, 0x7eb, 0x5de3, 0x1, 0x1);
        gbc.writeMem(0xa33f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9169, gbc.sp());
        EXPECT(0xa341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa33f));
        EXPECT(0xfc, gbc.readMem(0xa340));
        // CB FC 02BB
        gbc.setState(0x9919, 0x5d7f, 0xc460, 0x5c00, 0x8eb1, 0xf6f6, 0x0, 0x0);
        gbc.writeMem(0x9919, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5d7f, gbc.sp());
        EXPECT(0x991b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9919));
        EXPECT(0xfc, gbc.readMem(0x991a));
        // CB FC 02BC
        gbc.setState(0xa83, 0xd17d, 0x2970, 0x8930, 0xd8b, 0xcee5, 0x1, 0x1);
        gbc.writeMem(0xa83, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd17d, gbc.sp());
        EXPECT(0xa85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 02BD
        gbc.setState(0x836d, 0xf35, 0x16f0, 0x7c3b, 0xb5, 0x8d43, 0x1, 0x0);
        gbc.writeMem(0x836d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf35, gbc.sp());
        EXPECT(0x836f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x836d));
        EXPECT(0xfc, gbc.readMem(0x836e));
        // CB FC 02BE
        gbc.setState(0xf6c, 0x94d, 0x1840, 0x72c8, 0xd6e, 0x4b09, 0x1, 0x0);
        gbc.writeMem(0xf6c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x94d, gbc.sp());
        EXPECT(0xf6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02BF
        gbc.setState(0xe367, 0x8541, 0x4bc0, 0xbb34, 0x147f, 0xd4c3, 0x0, 0x0);
        gbc.writeMem(0xe367, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8541, gbc.sp());
        EXPECT(0xe369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe367));
        EXPECT(0xfc, gbc.readMem(0xe368));
        // CB FC 02C0
        gbc.setState(0x3765, 0xd172, 0xaa00, 0xb414, 0x73b7, 0x3569, 0x1, 0x1);
        gbc.writeMem(0x3765, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd172, gbc.sp());
        EXPECT(0x3767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02C1
        gbc.setState(0x98c, 0x7d55, 0x27a0, 0xa6f7, 0x3e15, 0x40d2, 0x0, 0x0);
        gbc.writeMem(0x98c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7d55, gbc.sp());
        EXPECT(0x98e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02C2
        gbc.setState(0xaff6, 0xdf4c, 0x9eb0, 0x529c, 0x94f7, 0xec56, 0x0, 0x1);
        gbc.writeMem(0xaff6, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdf4c, gbc.sp());
        EXPECT(0xaff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff6));
        EXPECT(0xfc, gbc.readMem(0xaff7));
        // CB FC 02C3
        gbc.setState(0xefba, 0xa38c, 0x3bc0, 0xa524, 0xc0c4, 0x8571, 0x1, 0x0);
        gbc.writeMem(0xefba, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa38c, gbc.sp());
        EXPECT(0xefbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefba));
        EXPECT(0xfc, gbc.readMem(0xefbb));
        // CB FC 02C4
        gbc.setState(0xd1fe, 0xfcda, 0xc60, 0xd4d3, 0x1d54, 0xa0e5, 0x1, 0x0);
        gbc.writeMem(0xd1fe, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xfcda, gbc.sp());
        EXPECT(0xd200, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1fe));
        EXPECT(0xfc, gbc.readMem(0xd1ff));
        // CB FC 02C5
        gbc.setState(0x47d9, 0xfd8f, 0x4830, 0xef85, 0xcb35, 0x5413, 0x0, 0x1);
        gbc.writeMem(0x47d9, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xfd8f, gbc.sp());
        EXPECT(0x47db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 02C6
        gbc.setState(0x6e7d, 0x6232, 0xfb90, 0x9078, 0xfdb4, 0x5911, 0x0, 0x0);
        gbc.writeMem(0x6e7d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6232, gbc.sp());
        EXPECT(0x6e7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 02C7
        gbc.setState(0xc29b, 0x6160, 0x2e10, 0xe94b, 0x5790, 0x2d33, 0x1, 0x1);
        gbc.writeMem(0xc29b, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6160, gbc.sp());
        EXPECT(0xc29d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc29b));
        EXPECT(0xfc, gbc.readMem(0xc29c));
        // CB FC 02C8
        gbc.setState(0x473, 0xa780, 0xac50, 0x7b1c, 0xf1c, 0x436b, 0x1, 0x0);
        gbc.writeMem(0x473, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa780, gbc.sp());
        EXPECT(0x475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 02CA
        gbc.setState(0x6808, 0xf3d3, 0xbd20, 0x5c59, 0x21fc, 0xf9cc, 0x0, 0x1);
        gbc.writeMem(0x6808, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf3d3, gbc.sp());
        EXPECT(0x680a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02CB
        gbc.setState(0xd507, 0xbd47, 0x9a60, 0x7c8a, 0xc37e, 0x7dff, 0x1, 0x0);
        gbc.writeMem(0xd507, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbd47, gbc.sp());
        EXPECT(0xd509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd507));
        EXPECT(0xfc, gbc.readMem(0xd508));
        // CB FC 02CC
        gbc.setState(0x519, 0x6b89, 0x6d70, 0x9106, 0xe549, 0x3edb, 0x1, 0x1);
        gbc.writeMem(0x519, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6b89, gbc.sp());
        EXPECT(0x51b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 02CD
        gbc.setState(0x8176, 0x2fe6, 0xd120, 0xbdeb, 0x1696, 0x5558, 0x1, 0x0);
        gbc.writeMem(0x8176, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2fe6, gbc.sp());
        EXPECT(0x8178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8176));
        EXPECT(0xfc, gbc.readMem(0x8177));
        // CB FC 02CE
        gbc.setState(0xb6e1, 0xf785, 0xed80, 0x3b8c, 0x2eb7, 0x373e, 0x1, 0x1);
        gbc.writeMem(0xb6e1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf785, gbc.sp());
        EXPECT(0xb6e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6e1));
        EXPECT(0xfc, gbc.readMem(0xb6e2));
        // CB FC 02CF
        gbc.setState(0x2987, 0x820e, 0x1120, 0x6f4d, 0x904c, 0x3942, 0x1, 0x0);
        gbc.writeMem(0x2987, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x820e, gbc.sp());
        EXPECT(0x2989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02D0
        gbc.setState(0x4acd, 0x418c, 0x5820, 0xfe83, 0xe6c0, 0x5ef2, 0x0, 0x1);
        gbc.writeMem(0x4acd, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x418c, gbc.sp());
        EXPECT(0x4acf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02D1
        gbc.setState(0x7688, 0xc93e, 0xb6a0, 0x8371, 0xa117, 0xa311, 0x1, 0x0);
        gbc.writeMem(0x7688, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc93e, gbc.sp());
        EXPECT(0x768a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02D2
        gbc.setState(0x6fc7, 0x20e8, 0x7cb0, 0x8ae2, 0x7031, 0x9245, 0x0, 0x1);
        gbc.writeMem(0x6fc7, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x20e8, gbc.sp());
        EXPECT(0x6fc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 02D3
        gbc.setState(0x9d4, 0xb89, 0x7390, 0x5711, 0x2d11, 0x6cb7, 0x0, 0x0);
        gbc.writeMem(0x9d4, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb89, gbc.sp());
        EXPECT(0x9d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 02D4
        gbc.setState(0xee22, 0xa71a, 0x6870, 0x1908, 0x24aa, 0x98b7, 0x0, 0x1);
        gbc.writeMem(0xee22, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa71a, gbc.sp());
        EXPECT(0xee24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee22));
        EXPECT(0xfc, gbc.readMem(0xee23));
        // CB FC 02D5
        gbc.setState(0x7ec7, 0xa791, 0x4f80, 0x3e98, 0x903c, 0xf011, 0x1, 0x1);
        gbc.writeMem(0x7ec7, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa791, gbc.sp());
        EXPECT(0x7ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02D6
        gbc.setState(0x1520, 0x3ca0, 0x33c0, 0xb3fe, 0xec87, 0xbbe4, 0x1, 0x1);
        gbc.writeMem(0x1520, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3ca0, gbc.sp());
        EXPECT(0x1522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02D7
        gbc.setState(0x57a5, 0x46f5, 0xbdb0, 0x8242, 0xc03c, 0xb463, 0x1, 0x0);
        gbc.writeMem(0x57a5, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x46f5, gbc.sp());
        EXPECT(0x57a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 02D9
        gbc.setState(0xc4f3, 0xf4e6, 0x4610, 0xc9d3, 0x5318, 0xd165, 0x0, 0x0);
        gbc.writeMem(0xc4f3, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf4e6, gbc.sp());
        EXPECT(0xc4f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f3));
        EXPECT(0xfc, gbc.readMem(0xc4f4));
        // CB FC 02DA
        gbc.setState(0xbdf3, 0x9b22, 0xf1d0, 0xacb7, 0xf8ea, 0x95b, 0x1, 0x0);
        gbc.writeMem(0xbdf3, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9b22, gbc.sp());
        EXPECT(0xbdf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf3));
        EXPECT(0xfc, gbc.readMem(0xbdf4));
        // CB FC 02DB
        gbc.setState(0xcd66, 0xbd51, 0x3bb0, 0x6ebf, 0xc6d9, 0x8275, 0x1, 0x1);
        gbc.writeMem(0xcd66, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xbd51, gbc.sp());
        EXPECT(0xcd68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd66));
        EXPECT(0xfc, gbc.readMem(0xcd67));
        // CB FC 02DC
        gbc.setState(0xec5a, 0xa9d0, 0xe000, 0xb4e7, 0x9c50, 0x443c, 0x1, 0x1);
        gbc.writeMem(0xec5a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa9d0, gbc.sp());
        EXPECT(0xec5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec5a));
        EXPECT(0xfc, gbc.readMem(0xec5b));
        // CB FC 02DE
        gbc.setState(0xcea1, 0xe894, 0xc860, 0x5f4d, 0x5838, 0x21e1, 0x1, 0x0);
        gbc.writeMem(0xcea1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe894, gbc.sp());
        EXPECT(0xcea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcea1));
        EXPECT(0xfc, gbc.readMem(0xcea2));
        // CB FC 02DF
        gbc.setState(0x1827, 0x9c62, 0xb0f0, 0xefcb, 0x2d60, 0x65f9, 0x1, 0x1);
        gbc.writeMem(0x1827, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9c62, gbc.sp());
        EXPECT(0x1829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 02E0
        gbc.setState(0x4245, 0x8fab, 0x1960, 0xae24, 0x7a53, 0x64c2, 0x1, 0x1);
        gbc.writeMem(0x4245, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8fab, gbc.sp());
        EXPECT(0x4247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02E1
        gbc.setState(0x9b18, 0x2012, 0xac60, 0xdaa0, 0xce2a, 0x2086, 0x1, 0x1);
        gbc.writeMem(0x9b18, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2012, gbc.sp());
        EXPECT(0x9b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b18));
        EXPECT(0xfc, gbc.readMem(0x9b19));
        // CB FC 02E2
        gbc.setState(0x4de, 0xdfeb, 0xd450, 0x46a4, 0xe7e7, 0xccb9, 0x0, 0x0);
        gbc.writeMem(0x4de, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xdfeb, gbc.sp());
        EXPECT(0x4e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 02E3
        gbc.setState(0x3d7c, 0x55e5, 0xb60, 0x55e3, 0xf36d, 0x82b0, 0x1, 0x1);
        gbc.writeMem(0x3d7c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x55e5, gbc.sp());
        EXPECT(0x3d7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02E4
        gbc.setState(0xa81c, 0xc7dd, 0x6860, 0x7e5e, 0x9f7, 0xed16, 0x0, 0x0);
        gbc.writeMem(0xa81c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc7dd, gbc.sp());
        EXPECT(0xa81e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa81c));
        EXPECT(0xfc, gbc.readMem(0xa81d));
        // CB FC 02E5
        gbc.setState(0x6b22, 0xf3d2, 0x5f40, 0xbbff, 0x6a9a, 0x290b, 0x0, 0x1);
        gbc.writeMem(0x6b22, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf3d2, gbc.sp());
        EXPECT(0x6b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02E6
        gbc.setState(0xa31c, 0x8061, 0x4e70, 0xf5b2, 0x4d14, 0x6e04, 0x0, 0x0);
        gbc.writeMem(0xa31c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8061, gbc.sp());
        EXPECT(0xa31e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa31c));
        EXPECT(0xfc, gbc.readMem(0xa31d));
        // CB FC 02E7
        gbc.setState(0x1980, 0xa490, 0x4de0, 0x9fdb, 0xada3, 0xf838, 0x1, 0x0);
        gbc.writeMem(0x1980, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa490, gbc.sp());
        EXPECT(0x1982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02E8
        gbc.setState(0x16b7, 0x710a, 0x9aa0, 0xe588, 0xef2e, 0x8d30, 0x0, 0x0);
        gbc.writeMem(0x16b7, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x710a, gbc.sp());
        EXPECT(0x16b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02E9
        gbc.setState(0x5fb2, 0xd39e, 0x4550, 0x7daa, 0x90db, 0x1aec, 0x1, 0x1);
        gbc.writeMem(0x5fb2, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd39e, gbc.sp());
        EXPECT(0x5fb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 02EA
        gbc.setState(0x4fe6, 0x26cd, 0xb3c0, 0xa3d, 0xe56a, 0x828, 0x1, 0x1);
        gbc.writeMem(0x4fe6, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x26cd, gbc.sp());
        EXPECT(0x4fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02EB
        gbc.setState(0x816f, 0x9fbe, 0xbbf0, 0x2d31, 0x2bb3, 0x4423, 0x0, 0x1);
        gbc.writeMem(0x816f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9fbe, gbc.sp());
        EXPECT(0x8171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x816f));
        EXPECT(0xfc, gbc.readMem(0x8170));
        // CB FC 02EC
        gbc.setState(0x7e9, 0xf445, 0x8a80, 0xa07c, 0x4735, 0x1aec, 0x0, 0x0);
        gbc.writeMem(0x7e9, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf445, gbc.sp());
        EXPECT(0x7eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02ED
        gbc.setState(0x9452, 0xeda6, 0x4ec0, 0x92ec, 0x6ff, 0x376a, 0x1, 0x1);
        gbc.writeMem(0x9452, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xeda6, gbc.sp());
        EXPECT(0x9454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9452));
        EXPECT(0xfc, gbc.readMem(0x9453));
        // CB FC 02EE
        gbc.setState(0x6684, 0x7c39, 0xfdc0, 0xb3a, 0x951e, 0xacae, 0x0, 0x1);
        gbc.writeMem(0x6684, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7c39, gbc.sp());
        EXPECT(0x6686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02EF
        gbc.setState(0xcedf, 0x6b88, 0x6da0, 0x800e, 0x4abd, 0x222e, 0x1, 0x0);
        gbc.writeMem(0xcedf, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6b88, gbc.sp());
        EXPECT(0xcee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcedf));
        EXPECT(0xfc, gbc.readMem(0xcee0));
        // CB FC 02F0
        gbc.setState(0xdc43, 0xc040, 0xc010, 0xbe8c, 0x70fd, 0x7849, 0x0, 0x0);
        gbc.writeMem(0xdc43, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc040, gbc.sp());
        EXPECT(0xdc45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc43));
        EXPECT(0xfc, gbc.readMem(0xdc44));
        // CB FC 02F1
        gbc.setState(0xb47, 0x9467, 0xeee0, 0xcbbb, 0x423b, 0x24c9, 0x1, 0x1);
        gbc.writeMem(0xb47, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9467, gbc.sp());
        EXPECT(0xb49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02F2
        gbc.setState(0x3d48, 0x756, 0x84f0, 0xf8a7, 0x8dbb, 0xbad1, 0x0, 0x1);
        gbc.writeMem(0x3d48, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x756, gbc.sp());
        EXPECT(0x3d4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 02F3
        gbc.setState(0x9eac, 0xf5c0, 0xdaa0, 0x4ed1, 0x53df, 0x9407, 0x0, 0x0);
        gbc.writeMem(0x9eac, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf5c0, gbc.sp());
        EXPECT(0x9eae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eac));
        EXPECT(0xfc, gbc.readMem(0x9ead));
        // CB FC 02F4
        gbc.setState(0x9750, 0x8286, 0x9a60, 0x248c, 0x98ba, 0xd4b1, 0x1, 0x0);
        gbc.writeMem(0x9750, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8286, gbc.sp());
        EXPECT(0x9752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9750));
        EXPECT(0xfc, gbc.readMem(0x9751));
        // CB FC 02F6
        gbc.setState(0x156e, 0xe055, 0xe6a0, 0x2949, 0x6347, 0x9d31, 0x0, 0x1);
        gbc.writeMem(0x156e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe055, gbc.sp());
        EXPECT(0x1570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02F7
        gbc.setState(0xa9e0, 0x1c02, 0x60e0, 0x20f, 0x1b76, 0xbe54, 0x1, 0x1);
        gbc.writeMem(0xa9e0, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1c02, gbc.sp());
        EXPECT(0xa9e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9e0));
        EXPECT(0xfc, gbc.readMem(0xa9e1));
        // CB FC 02F8
        gbc.setState(0x9724, 0x23a4, 0x8d80, 0xaee8, 0x3769, 0xdc6b, 0x1, 0x0);
        gbc.writeMem(0x9724, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x23a4, gbc.sp());
        EXPECT(0x9726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9724));
        EXPECT(0xfc, gbc.readMem(0x9725));
        // CB FC 02F9
        gbc.setState(0x52a4, 0x47c1, 0x9be0, 0x4b5c, 0x58e7, 0x31aa, 0x1, 0x1);
        gbc.writeMem(0x52a4, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x47c1, gbc.sp());
        EXPECT(0x52a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 02FA
        gbc.setState(0xe72, 0x3666, 0x5f0, 0xaa04, 0x665f, 0xe795, 0x0, 0x1);
        gbc.writeMem(0xe72, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3666, gbc.sp());
        EXPECT(0xe74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 02FB
        gbc.setState(0x3e71, 0xf9a7, 0x7e50, 0x1377, 0x3583, 0xa518, 0x0, 0x0);
        gbc.writeMem(0x3e71, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf9a7, gbc.sp());
        EXPECT(0x3e73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 02FC
        gbc.setState(0x5634, 0x693f, 0x73b0, 0xbaf5, 0x7c13, 0xaa0c, 0x1, 0x1);
        gbc.writeMem(0x5634, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x693f, gbc.sp());
        EXPECT(0x5636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 02FE
        gbc.setState(0xb26b, 0x918c, 0x6f60, 0x1591, 0x797b, 0xf4a3, 0x1, 0x0);
        gbc.writeMem(0xb26b, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x918c, gbc.sp());
        EXPECT(0xb26d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb26b));
        EXPECT(0xfc, gbc.readMem(0xb26c));
        // CB FC 02FF
        gbc.setState(0x559a, 0x4b7f, 0xa3a0, 0x77de, 0x492, 0xbcc3, 0x0, 0x0);
        gbc.writeMem(0x559a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4b7f, gbc.sp());
        EXPECT(0x559c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0300
        gbc.setState(0x6a8f, 0xb4fc, 0xf500, 0x3cdb, 0x5efb, 0x6e9, 0x1, 0x0);
        gbc.writeMem(0x6a8f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb4fc, gbc.sp());
        EXPECT(0x6a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0301
        gbc.setState(0xbde2, 0x6a68, 0xefc0, 0x6db, 0xf0d4, 0xc84d, 0x0, 0x1);
        gbc.writeMem(0xbde2, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6a68, gbc.sp());
        EXPECT(0xbde4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbde2));
        EXPECT(0xfc, gbc.readMem(0xbde3));
        // CB FC 0302
        gbc.setState(0x45f6, 0x5621, 0xf490, 0x2b63, 0x95d5, 0x19a8, 0x1, 0x0);
        gbc.writeMem(0x45f6, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5621, gbc.sp());
        EXPECT(0x45f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0303
        gbc.setState(0x82d0, 0xd619, 0x7790, 0xfa03, 0x3b21, 0xd168, 0x0, 0x0);
        gbc.writeMem(0x82d0, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd619, gbc.sp());
        EXPECT(0x82d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82d0));
        EXPECT(0xfc, gbc.readMem(0x82d1));
        // CB FC 0304
        gbc.setState(0x2db7, 0xd936, 0x73d0, 0x3c9b, 0x5534, 0x3945, 0x1, 0x1);
        gbc.writeMem(0x2db7, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd936, gbc.sp());
        EXPECT(0x2db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0305
        gbc.setState(0xc2b, 0x8c85, 0x4410, 0xff5, 0x70ae, 0xe732, 0x1, 0x0);
        gbc.writeMem(0xc2b, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8c85, gbc.sp());
        EXPECT(0xc2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0306
        gbc.setState(0x994a, 0x900b, 0x3830, 0x1904, 0xa39, 0x7cc3, 0x0, 0x1);
        gbc.writeMem(0x994a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x900b, gbc.sp());
        EXPECT(0x994c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x994a));
        EXPECT(0xfc, gbc.readMem(0x994b));
        // CB FC 0307
        gbc.setState(0xb60b, 0x18c5, 0x72f0, 0x905d, 0x1a5, 0x41ca, 0x0, 0x0);
        gbc.writeMem(0xb60b, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x18c5, gbc.sp());
        EXPECT(0xb60d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb60b));
        EXPECT(0xfc, gbc.readMem(0xb60c));
        // CB FC 0308
        gbc.setState(0x126d, 0x2c07, 0x32c0, 0xcee5, 0xf41e, 0x6623, 0x0, 0x0);
        gbc.writeMem(0x126d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2c07, gbc.sp());
        EXPECT(0x126f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0309
        gbc.setState(0x437f, 0xa46b, 0x97d0, 0x49d6, 0x5ca6, 0xab24, 0x0, 0x1);
        gbc.writeMem(0x437f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa46b, gbc.sp());
        EXPECT(0x4381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 030A
        gbc.setState(0x89d8, 0x17cc, 0xbc0, 0xbfa4, 0xafd6, 0xe1a2, 0x0, 0x1);
        gbc.writeMem(0x89d8, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x17cc, gbc.sp());
        EXPECT(0x89da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89d8));
        EXPECT(0xfc, gbc.readMem(0x89d9));
        // CB FC 030B
        gbc.setState(0x24d2, 0x75fd, 0x47e0, 0x97bf, 0x63ca, 0x47aa, 0x1, 0x1);
        gbc.writeMem(0x24d2, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x75fd, gbc.sp());
        EXPECT(0x24d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 030C
        gbc.setState(0x7e52, 0x6858, 0x4020, 0x1d49, 0xed7e, 0xd995, 0x0, 0x1);
        gbc.writeMem(0x7e52, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6858, gbc.sp());
        EXPECT(0x7e54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 030D
        gbc.setState(0x2e7e, 0x4f1c, 0x2780, 0x792f, 0xe63c, 0x5f44, 0x1, 0x0);
        gbc.writeMem(0x2e7e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4f1c, gbc.sp());
        EXPECT(0x2e80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 030F
        gbc.setState(0x78a5, 0xed1d, 0xd750, 0xf7ac, 0x3673, 0xd8a2, 0x0, 0x1);
        gbc.writeMem(0x78a5, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xed1d, gbc.sp());
        EXPECT(0x78a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0310
        gbc.setState(0xe353, 0xa650, 0xa010, 0xfdfc, 0x42c, 0x7730, 0x0, 0x1);
        gbc.writeMem(0xe353, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa650, gbc.sp());
        EXPECT(0xe355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe353));
        EXPECT(0xfc, gbc.readMem(0xe354));
        // CB FC 0311
        gbc.setState(0x4a60, 0x379a, 0xce40, 0xf48c, 0x19a, 0x13e8, 0x1, 0x1);
        gbc.writeMem(0x4a60, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x379a, gbc.sp());
        EXPECT(0x4a62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0312
        gbc.setState(0x4806, 0xc19d, 0x5bc0, 0xbbc9, 0x7295, 0x238f, 0x0, 0x0);
        gbc.writeMem(0x4806, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc19d, gbc.sp());
        EXPECT(0x4808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0314
        gbc.setState(0x120a, 0x160a, 0x8690, 0x6508, 0x69a3, 0xdcdc, 0x1, 0x0);
        gbc.writeMem(0x120a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x160a, gbc.sp());
        EXPECT(0x120c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0315
        gbc.setState(0xce82, 0x4fab, 0xf0d0, 0x8a5f, 0xfa0a, 0xb99c, 0x1, 0x0);
        gbc.writeMem(0xce82, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4fab, gbc.sp());
        EXPECT(0xce84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce82));
        EXPECT(0xfc, gbc.readMem(0xce83));
        // CB FC 0316
        gbc.setState(0x5de3, 0xb7ea, 0x4550, 0x596f, 0xda07, 0xbf65, 0x0, 0x1);
        gbc.writeMem(0x5de3, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb7ea, gbc.sp());
        EXPECT(0x5de5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0317
        gbc.setState(0x4813, 0xb0bb, 0x6060, 0x35bc, 0x9947, 0x7990, 0x0, 0x0);
        gbc.writeMem(0x4813, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb0bb, gbc.sp());
        EXPECT(0x4815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0318
        gbc.setState(0xa955, 0xaba2, 0x46e0, 0x6107, 0x22d9, 0xcdde, 0x1, 0x1);
        gbc.writeMem(0xa955, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xaba2, gbc.sp());
        EXPECT(0xa957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa955));
        EXPECT(0xfc, gbc.readMem(0xa956));
        // CB FC 0319
        gbc.setState(0x5db6, 0xf057, 0xc620, 0xff63, 0x34b7, 0xe35d, 0x1, 0x0);
        gbc.writeMem(0x5db6, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf057, gbc.sp());
        EXPECT(0x5db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 031A
        gbc.setState(0x6a0d, 0xcd3, 0x16b0, 0x5c9b, 0x7627, 0xbf38, 0x0, 0x0);
        gbc.writeMem(0x6a0d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xcd3, gbc.sp());
        EXPECT(0x6a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 031B
        gbc.setState(0xb8fd, 0x7f7a, 0xc350, 0x6a88, 0xe918, 0x5c4d, 0x1, 0x0);
        gbc.writeMem(0xb8fd, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7f7a, gbc.sp());
        EXPECT(0xb8ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8fd));
        EXPECT(0xfc, gbc.readMem(0xb8fe));
        // CB FC 031C
        gbc.setState(0x4c6a, 0xcab5, 0xaa10, 0x2761, 0x33b, 0x3f53, 0x0, 0x0);
        gbc.writeMem(0x4c6a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xcab5, gbc.sp());
        EXPECT(0x4c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 031D
        gbc.setState(0x7802, 0xeb85, 0xdea0, 0x4b0c, 0xdc0, 0xfe4c, 0x1, 0x1);
        gbc.writeMem(0x7802, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xeb85, gbc.sp());
        EXPECT(0x7804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 031E
        gbc.setState(0xc09d, 0xb574, 0x8d40, 0xf277, 0xb418, 0x9e1b, 0x1, 0x0);
        gbc.writeMem(0xc09d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb574, gbc.sp());
        EXPECT(0xc09f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc09d));
        EXPECT(0xfc, gbc.readMem(0xc09e));
        // CB FC 031F
        gbc.setState(0x8abf, 0x5d70, 0x31a0, 0xf782, 0xa01e, 0xef41, 0x1, 0x0);
        gbc.writeMem(0x8abf, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5d70, gbc.sp());
        EXPECT(0x8ac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8abf));
        EXPECT(0xfc, gbc.readMem(0x8ac0));
        // CB FC 0320
        gbc.setState(0x32a5, 0x5ea4, 0x4fa0, 0x3d25, 0xa67, 0x8424, 0x0, 0x1);
        gbc.writeMem(0x32a5, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5ea4, gbc.sp());
        EXPECT(0x32a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0321
        gbc.setState(0x74e7, 0x4435, 0x5a20, 0x70f9, 0x451d, 0x6e82, 0x1, 0x1);
        gbc.writeMem(0x74e7, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4435, gbc.sp());
        EXPECT(0x74e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0322
        gbc.setState(0x69ec, 0x76a0, 0xb300, 0x65f6, 0xe101, 0x7abf, 0x0, 0x1);
        gbc.writeMem(0x69ec, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x76a0, gbc.sp());
        EXPECT(0x69ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0323
        gbc.setState(0x578f, 0x5d3b, 0x6c0, 0x9dd, 0xd440, 0x60ca, 0x1, 0x1);
        gbc.writeMem(0x578f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5d3b, gbc.sp());
        EXPECT(0x5791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0324
        gbc.setState(0x5544, 0x4e00, 0xca40, 0x8aff, 0x3b1f, 0x7515, 0x1, 0x0);
        gbc.writeMem(0x5544, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4e00, gbc.sp());
        EXPECT(0x5546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0325
        gbc.setState(0xa07b, 0xb440, 0x30, 0x650a, 0x5af3, 0x9f61, 0x1, 0x0);
        gbc.writeMem(0xa07b, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb440, gbc.sp());
        EXPECT(0xa07d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa07b));
        EXPECT(0xfc, gbc.readMem(0xa07c));
        // CB FC 0326
        gbc.setState(0xcef, 0x1c2c, 0x270, 0xebb6, 0x9a1d, 0x1619, 0x0, 0x0);
        gbc.writeMem(0xcef, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1c2c, gbc.sp());
        EXPECT(0xcf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0327
        gbc.setState(0x3cd9, 0xae84, 0x71b0, 0x1d0a, 0x1aed, 0xf8c1, 0x1, 0x0);
        gbc.writeMem(0x3cd9, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xae84, gbc.sp());
        EXPECT(0x3cdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0329
        gbc.setState(0x81df, 0x20ab, 0x5eb0, 0x54b2, 0x2575, 0xa80e, 0x1, 0x1);
        gbc.writeMem(0x81df, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x20ab, gbc.sp());
        EXPECT(0x81e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81df));
        EXPECT(0xfc, gbc.readMem(0x81e0));
        // CB FC 032B
        gbc.setState(0x9945, 0xf934, 0xb1e0, 0xaedd, 0x24ea, 0x3421, 0x1, 0x1);
        gbc.writeMem(0x9945, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf934, gbc.sp());
        EXPECT(0x9947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9945));
        EXPECT(0xfc, gbc.readMem(0x9946));
        // CB FC 032C
        gbc.setState(0x73b4, 0x5c9c, 0x91e0, 0xfff4, 0x7e88, 0xb1ce, 0x1, 0x1);
        gbc.writeMem(0x73b4, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5c9c, gbc.sp());
        EXPECT(0x73b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 032D
        gbc.setState(0x8795, 0x19b8, 0x3650, 0x1714, 0x2817, 0x54bd, 0x1, 0x1);
        gbc.writeMem(0x8795, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x19b8, gbc.sp());
        EXPECT(0x8797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8795));
        EXPECT(0xfc, gbc.readMem(0x8796));
        // CB FC 032E
        gbc.setState(0x624a, 0x1ddb, 0x90b0, 0x4e74, 0x33cf, 0x4d79, 0x1, 0x0);
        gbc.writeMem(0x624a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1ddb, gbc.sp());
        EXPECT(0x624c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 032F
        gbc.setState(0x2fb2, 0x1870, 0x85a0, 0xb93d, 0xf1d8, 0x26ff, 0x1, 0x0);
        gbc.writeMem(0x2fb2, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1870, gbc.sp());
        EXPECT(0x2fb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0330
        gbc.setState(0xa6d3, 0xb3a2, 0x4c60, 0xdca2, 0x8e, 0xd525, 0x1, 0x1);
        gbc.writeMem(0xa6d3, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb3a2, gbc.sp());
        EXPECT(0xa6d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d3));
        EXPECT(0xfc, gbc.readMem(0xa6d4));
        // CB FC 0331
        gbc.setState(0x1ca5, 0x76ad, 0xcef0, 0xa57b, 0x9dc, 0x4902, 0x0, 0x1);
        gbc.writeMem(0x1ca5, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x76ad, gbc.sp());
        EXPECT(0x1ca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0332
        gbc.setState(0x9993, 0xef0e, 0x5990, 0x5a7d, 0x30d6, 0x74a0, 0x0, 0x1);
        gbc.writeMem(0x9993, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xef0e, gbc.sp());
        EXPECT(0x9995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9993));
        EXPECT(0xfc, gbc.readMem(0x9994));
        // CB FC 0333
        gbc.setState(0xd456, 0xe8d2, 0x6960, 0x7c0c, 0xee4e, 0x31fa, 0x0, 0x0);
        gbc.writeMem(0xd456, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe8d2, gbc.sp());
        EXPECT(0xd458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd456));
        EXPECT(0xfc, gbc.readMem(0xd457));
        // CB FC 0334
        gbc.setState(0x58b9, 0x834b, 0xfa40, 0x42ad, 0x8b04, 0xd137, 0x1, 0x0);
        gbc.writeMem(0x58b9, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x834b, gbc.sp());
        EXPECT(0x58bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0335
        gbc.setState(0xa6ad, 0xe18a, 0x9aa0, 0x5667, 0xe31, 0x1652, 0x0, 0x0);
        gbc.writeMem(0xa6ad, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe18a, gbc.sp());
        EXPECT(0xa6af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ad));
        EXPECT(0xfc, gbc.readMem(0xa6ae));
        // CB FC 0336
        gbc.setState(0x1110, 0x9545, 0x31b0, 0x7902, 0xf18a, 0x3f9c, 0x0, 0x0);
        gbc.writeMem(0x1110, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9545, gbc.sp());
        EXPECT(0x1112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0337
        gbc.setState(0xd584, 0xc948, 0x1ff0, 0x573e, 0x8eeb, 0xb583, 0x0, 0x0);
        gbc.writeMem(0xd584, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc948, gbc.sp());
        EXPECT(0xd586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd584));
        EXPECT(0xfc, gbc.readMem(0xd585));
        // CB FC 0338
        gbc.setState(0x30a5, 0xf685, 0xa7d0, 0xf2c6, 0x7c4f, 0x62d9, 0x0, 0x0);
        gbc.writeMem(0x30a5, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf685, gbc.sp());
        EXPECT(0x30a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0339
        gbc.setState(0xc19a, 0x4f78, 0x7e40, 0x2c0e, 0xf4a8, 0x8d4c, 0x0, 0x1);
        gbc.writeMem(0xc19a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4f78, gbc.sp());
        EXPECT(0xc19c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc19a));
        EXPECT(0xfc, gbc.readMem(0xc19b));
        // CB FC 033B
        gbc.setState(0x214d, 0x18cc, 0x8230, 0xc05f, 0x4d29, 0x7526, 0x1, 0x1);
        gbc.writeMem(0x214d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x18cc, gbc.sp());
        EXPECT(0x214f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 033C
        gbc.setState(0x9408, 0x13a2, 0xeb50, 0xf1ef, 0x4089, 0x7d41, 0x0, 0x1);
        gbc.writeMem(0x9408, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x13a2, gbc.sp());
        EXPECT(0x940a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9408));
        EXPECT(0xfc, gbc.readMem(0x9409));
        // CB FC 033D
        gbc.setState(0x2082, 0x45de, 0x4280, 0x3967, 0xc07c, 0x7abb, 0x0, 0x1);
        gbc.writeMem(0x2082, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x45de, gbc.sp());
        EXPECT(0x2084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 033E
        gbc.setState(0x8794, 0xee21, 0xa00, 0x3558, 0x2f0c, 0xc92e, 0x1, 0x0);
        gbc.writeMem(0x8794, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xee21, gbc.sp());
        EXPECT(0x8796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8794));
        EXPECT(0xfc, gbc.readMem(0x8795));
        // CB FC 033F
        gbc.setState(0xdaee, 0xd59d, 0x3760, 0x45f9, 0xc584, 0x2338, 0x1, 0x0);
        gbc.writeMem(0xdaee, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd59d, gbc.sp());
        EXPECT(0xdaf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaee));
        EXPECT(0xfc, gbc.readMem(0xdaef));
        // CB FC 0340
        gbc.setState(0x7cc1, 0x3f32, 0xd180, 0x5ee5, 0x9754, 0xb9c9, 0x1, 0x0);
        gbc.writeMem(0x7cc1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3f32, gbc.sp());
        EXPECT(0x7cc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0341
        gbc.setState(0x8d1b, 0xffc5, 0x83f0, 0x2d5a, 0x7677, 0x6aa4, 0x1, 0x1);
        gbc.writeMem(0x8d1b, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xffc5, gbc.sp());
        EXPECT(0x8d1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d1b));
        EXPECT(0xfc, gbc.readMem(0x8d1c));
        // CB FC 0342
        gbc.setState(0xaec7, 0xcf89, 0xfa00, 0xac0c, 0x7c5b, 0xcdd0, 0x1, 0x0);
        gbc.writeMem(0xaec7, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcf89, gbc.sp());
        EXPECT(0xaec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaec7));
        EXPECT(0xfc, gbc.readMem(0xaec8));
        // CB FC 0343
        gbc.setState(0xce8e, 0x15a3, 0x5920, 0xcd08, 0x8dd1, 0x9a00, 0x1, 0x1);
        gbc.writeMem(0xce8e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x15a3, gbc.sp());
        EXPECT(0xce90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce8e));
        EXPECT(0xfc, gbc.readMem(0xce8f));
        // CB FC 0345
        gbc.setState(0xadf4, 0x5bd3, 0x2f40, 0xddb4, 0x225e, 0x303d, 0x0, 0x1);
        gbc.writeMem(0xadf4, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5bd3, gbc.sp());
        EXPECT(0xadf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf4));
        EXPECT(0xfc, gbc.readMem(0xadf5));
        // CB FC 0346
        gbc.setState(0xb2d1, 0x16a6, 0x1ba0, 0x7f5, 0x1a15, 0x41dd, 0x1, 0x1);
        gbc.writeMem(0xb2d1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x16a6, gbc.sp());
        EXPECT(0xb2d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2d1));
        EXPECT(0xfc, gbc.readMem(0xb2d2));
        // CB FC 0347
        gbc.setState(0x863c, 0xff4, 0x70f0, 0xe64, 0x8d5f, 0xe497, 0x0, 0x1);
        gbc.writeMem(0x863c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xff4, gbc.sp());
        EXPECT(0x863e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x863c));
        EXPECT(0xfc, gbc.readMem(0x863d));
        // CB FC 0348
        gbc.setState(0x3631, 0xe2ce, 0xbcf0, 0x9339, 0x4867, 0x3fdd, 0x0, 0x0);
        gbc.writeMem(0x3631, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe2ce, gbc.sp());
        EXPECT(0x3633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0349
        gbc.setState(0xdc2f, 0x38ba, 0x4370, 0xc3e, 0xc822, 0xbc58, 0x0, 0x1);
        gbc.writeMem(0xdc2f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x38ba, gbc.sp());
        EXPECT(0xdc31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc2f));
        EXPECT(0xfc, gbc.readMem(0xdc30));
        // CB FC 034A
        gbc.setState(0xebe1, 0x4122, 0x4e10, 0x5041, 0x5b44, 0xa8a0, 0x0, 0x0);
        gbc.writeMem(0xebe1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4122, gbc.sp());
        EXPECT(0xebe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebe1));
        EXPECT(0xfc, gbc.readMem(0xebe2));
        // CB FC 034B
        gbc.setState(0x6530, 0xed28, 0xbda0, 0x66dd, 0x48a0, 0xaa74, 0x0, 0x0);
        gbc.writeMem(0x6530, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xed28, gbc.sp());
        EXPECT(0x6532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 034C
        gbc.setState(0x64, 0xfe9e, 0x77e0, 0x67ef, 0x7bd, 0xd1d5, 0x0, 0x0);
        gbc.writeMem(0x64, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfe9e, gbc.sp());
        EXPECT(0x66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 034D
        gbc.setState(0xb5fa, 0x3f3c, 0x4ee0, 0xd24e, 0x5a0e, 0xa94, 0x0, 0x1);
        gbc.writeMem(0xb5fa, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3f3c, gbc.sp());
        EXPECT(0xb5fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5fa));
        EXPECT(0xfc, gbc.readMem(0xb5fb));
        // CB FC 034E
        gbc.setState(0x7e4e, 0xb220, 0x3de0, 0x757f, 0x23fc, 0x8072, 0x1, 0x0);
        gbc.writeMem(0x7e4e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb220, gbc.sp());
        EXPECT(0x7e50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0351
        gbc.setState(0xd32d, 0xb899, 0x7230, 0x2974, 0x9934, 0xc12b, 0x1, 0x1);
        gbc.writeMem(0xd32d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb899, gbc.sp());
        EXPECT(0xd32f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32d));
        EXPECT(0xfc, gbc.readMem(0xd32e));
        // CB FC 0352
        gbc.setState(0x9ea1, 0x66c7, 0xaab0, 0x2449, 0x364f, 0x56dd, 0x1, 0x1);
        gbc.writeMem(0x9ea1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x66c7, gbc.sp());
        EXPECT(0x9ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ea1));
        EXPECT(0xfc, gbc.readMem(0x9ea2));
        // CB FC 0353
        gbc.setState(0x68a6, 0xcc02, 0x6180, 0x31a1, 0xa521, 0x8159, 0x1, 0x1);
        gbc.writeMem(0x68a6, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcc02, gbc.sp());
        EXPECT(0x68a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0354
        gbc.setState(0x4966, 0xe2d0, 0x8ee0, 0xd90d, 0x95ee, 0x5b8b, 0x0, 0x0);
        gbc.writeMem(0x4966, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe2d0, gbc.sp());
        EXPECT(0x4968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0355
        gbc.setState(0x9509, 0xbecb, 0x90a0, 0x7bc2, 0x12de, 0x5dbc, 0x0, 0x1);
        gbc.writeMem(0x9509, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xbecb, gbc.sp());
        EXPECT(0x950b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9509));
        EXPECT(0xfc, gbc.readMem(0x950a));
        // CB FC 0356
        gbc.setState(0x4393, 0xc2e8, 0xd7a0, 0x2c9f, 0x4d50, 0x4b4a, 0x1, 0x1);
        gbc.writeMem(0x4393, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc2e8, gbc.sp());
        EXPECT(0x4395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0357
        gbc.setState(0x8da3, 0x5896, 0xa740, 0x21bd, 0xa648, 0xee4c, 0x1, 0x1);
        gbc.writeMem(0x8da3, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5896, gbc.sp());
        EXPECT(0x8da5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da3));
        EXPECT(0xfc, gbc.readMem(0x8da4));
        // CB FC 0358
        gbc.setState(0x7c6a, 0x591d, 0x24e0, 0x7ffb, 0x9df2, 0xd6b6, 0x0, 0x0);
        gbc.writeMem(0x7c6a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x591d, gbc.sp());
        EXPECT(0x7c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0359
        gbc.setState(0xee37, 0x35dc, 0xe1b0, 0x7ee, 0xfa10, 0x5020, 0x1, 0x1);
        gbc.writeMem(0xee37, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x35dc, gbc.sp());
        EXPECT(0xee39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee37));
        EXPECT(0xfc, gbc.readMem(0xee38));
        // CB FC 035A
        gbc.setState(0x37ea, 0x30c1, 0x7260, 0x8758, 0xd3e3, 0x8232, 0x0, 0x1);
        gbc.writeMem(0x37ea, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x30c1, gbc.sp());
        EXPECT(0x37ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 035B
        gbc.setState(0xb95a, 0xba87, 0xda20, 0xd08b, 0xfcd0, 0xb0aa, 0x1, 0x0);
        gbc.writeMem(0xb95a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xba87, gbc.sp());
        EXPECT(0xb95c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb95a));
        EXPECT(0xfc, gbc.readMem(0xb95b));
        // CB FC 035C
        gbc.setState(0xe323, 0xc9c3, 0xf8a0, 0x3ab, 0x127c, 0x78a, 0x1, 0x1);
        gbc.writeMem(0xe323, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc9c3, gbc.sp());
        EXPECT(0xe325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe323));
        EXPECT(0xfc, gbc.readMem(0xe324));
        // CB FC 035D
        gbc.setState(0x52c2, 0x41c, 0xdc30, 0xbc9b, 0xdf31, 0xe315, 0x0, 0x0);
        gbc.writeMem(0x52c2, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x41c, gbc.sp());
        EXPECT(0x52c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 035E
        gbc.setState(0x3e83, 0x59e2, 0xf450, 0x2f94, 0x6db8, 0x97bf, 0x1, 0x0);
        gbc.writeMem(0x3e83, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x59e2, gbc.sp());
        EXPECT(0x3e85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 035F
        gbc.setState(0xc8, 0x1c33, 0xab50, 0x56b7, 0xf42f, 0xa764, 0x1, 0x0);
        gbc.writeMem(0xc8, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1c33, gbc.sp());
        EXPECT(0xca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0360
        gbc.setState(0x4826, 0x7a15, 0x9510, 0x3c42, 0x8943, 0xe7c4, 0x0, 0x1);
        gbc.writeMem(0x4826, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7a15, gbc.sp());
        EXPECT(0x4828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0361
        gbc.setState(0xad9, 0x194e, 0xb720, 0xf4b8, 0x1581, 0x7ad3, 0x1, 0x1);
        gbc.writeMem(0xad9, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x194e, gbc.sp());
        EXPECT(0xadb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0363
        gbc.setState(0x8181, 0x90ef, 0xc8a0, 0x61a, 0x6454, 0xc0b, 0x1, 0x0);
        gbc.writeMem(0x8181, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x90ef, gbc.sp());
        EXPECT(0x8183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8181));
        EXPECT(0xfc, gbc.readMem(0x8182));
        // CB FC 0364
        gbc.setState(0x2195, 0x89e7, 0xc7a0, 0x8c36, 0x9e67, 0xccc6, 0x0, 0x1);
        gbc.writeMem(0x2195, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x89e7, gbc.sp());
        EXPECT(0x2197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0365
        gbc.setState(0xc7e1, 0x42b2, 0x7ac0, 0x1342, 0x5d81, 0x6708, 0x0, 0x0);
        gbc.writeMem(0xc7e1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x42b2, gbc.sp());
        EXPECT(0xc7e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7e1));
        EXPECT(0xfc, gbc.readMem(0xc7e2));
        // CB FC 0366
        gbc.setState(0xb338, 0x69c1, 0xca30, 0xca98, 0xd5be, 0x19fa, 0x1, 0x1);
        gbc.writeMem(0xb338, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x69c1, gbc.sp());
        EXPECT(0xb33a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb338));
        EXPECT(0xfc, gbc.readMem(0xb339));
        // CB FC 0367
        gbc.setState(0x2f4a, 0xe935, 0xb290, 0xbc10, 0x106, 0x5a04, 0x1, 0x1);
        gbc.writeMem(0x2f4a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe935, gbc.sp());
        EXPECT(0x2f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0369
        gbc.setState(0xa2d9, 0x2992, 0x7d0, 0xecb3, 0x30b3, 0xd13f, 0x1, 0x0);
        gbc.writeMem(0xa2d9, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2992, gbc.sp());
        EXPECT(0xa2db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d9));
        EXPECT(0xfc, gbc.readMem(0xa2da));
        // CB FC 036A
        gbc.setState(0x37ed, 0xb046, 0xaab0, 0x748c, 0x1e07, 0xf572, 0x0, 0x0);
        gbc.writeMem(0x37ed, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb046, gbc.sp());
        EXPECT(0x37ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 036B
        gbc.setState(0xe08b, 0xed9c, 0xf370, 0xb952, 0x1486, 0xc28, 0x1, 0x1);
        gbc.writeMem(0xe08b, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xed9c, gbc.sp());
        EXPECT(0xe08d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe08b));
        EXPECT(0xfc, gbc.readMem(0xe08c));
        // CB FC 036C
        gbc.setState(0x978a, 0x548, 0x2410, 0x4b3a, 0x31a8, 0x6acd, 0x0, 0x1);
        gbc.writeMem(0x978a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x548, gbc.sp());
        EXPECT(0x978c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x978a));
        EXPECT(0xfc, gbc.readMem(0x978b));
        // CB FC 036D
        gbc.setState(0x4cf, 0x47e5, 0x36d0, 0x3d5e, 0x4665, 0xd5d8, 0x0, 0x1);
        gbc.writeMem(0x4cf, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x47e5, gbc.sp());
        EXPECT(0x4d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 036E
        gbc.setState(0x2761, 0x5df5, 0xc090, 0xc215, 0xcc14, 0xa12f, 0x1, 0x1);
        gbc.writeMem(0x2761, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5df5, gbc.sp());
        EXPECT(0x2763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0370
        gbc.setState(0x85b3, 0x5bd9, 0xc730, 0xfd74, 0xe09d, 0x206a, 0x1, 0x0);
        gbc.writeMem(0x85b3, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5bd9, gbc.sp());
        EXPECT(0x85b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85b3));
        EXPECT(0xfc, gbc.readMem(0x85b4));
        // CB FC 0371
        gbc.setState(0x4830, 0x12ef, 0x2910, 0xb6ec, 0x857a, 0x6b88, 0x1, 0x0);
        gbc.writeMem(0x4830, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x12ef, gbc.sp());
        EXPECT(0x4832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0373
        gbc.setState(0xd207, 0xd292, 0xe260, 0x286c, 0x39e0, 0x51ff, 0x0, 0x1);
        gbc.writeMem(0xd207, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd292, gbc.sp());
        EXPECT(0xd209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd207));
        EXPECT(0xfc, gbc.readMem(0xd208));
        // CB FC 0374
        gbc.setState(0x198d, 0xe3a8, 0xdfb0, 0xc5a, 0x568f, 0xb2ea, 0x0, 0x0);
        gbc.writeMem(0x198d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe3a8, gbc.sp());
        EXPECT(0x198f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0375
        gbc.setState(0x5297, 0x67ad, 0x4440, 0x1877, 0x21e9, 0xf1d, 0x0, 0x1);
        gbc.writeMem(0x5297, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x67ad, gbc.sp());
        EXPECT(0x5299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0377
        gbc.setState(0x260, 0xd0f0, 0x2ab0, 0xb49, 0x6b4f, 0x165, 0x1, 0x1);
        gbc.writeMem(0x260, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd0f0, gbc.sp());
        EXPECT(0x262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0378
        gbc.setState(0x5561, 0x5f47, 0x550, 0xf8c9, 0x2d1, 0x62ef, 0x0, 0x0);
        gbc.writeMem(0x5561, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5f47, gbc.sp());
        EXPECT(0x5563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0379
        gbc.setState(0x944a, 0xb9d7, 0x6c20, 0x1079, 0xcea2, 0x6675, 0x1, 0x0);
        gbc.writeMem(0x944a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb9d7, gbc.sp());
        EXPECT(0x944c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x944a));
        EXPECT(0xfc, gbc.readMem(0x944b));
        // CB FC 037A
        gbc.setState(0xd86a, 0x253, 0xbbf0, 0xcda3, 0xfd39, 0xc241, 0x0, 0x0);
        gbc.writeMem(0xd86a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x253, gbc.sp());
        EXPECT(0xd86c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd86a));
        EXPECT(0xfc, gbc.readMem(0xd86b));
        // CB FC 037B
        gbc.setState(0x2101, 0xcca7, 0x22b0, 0xca01, 0xeae9, 0x8b64, 0x0, 0x0);
        gbc.writeMem(0x2101, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcca7, gbc.sp());
        EXPECT(0x2103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 037C
        gbc.setState(0xd1bb, 0xf188, 0x5a40, 0x814a, 0xd250, 0xb771, 0x0, 0x0);
        gbc.writeMem(0xd1bb, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf188, gbc.sp());
        EXPECT(0xd1bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1bb));
        EXPECT(0xfc, gbc.readMem(0xd1bc));
        // CB FC 037D
        gbc.setState(0xcc88, 0xabd, 0x81b0, 0xe6d7, 0x886e, 0xfb94, 0x1, 0x1);
        gbc.writeMem(0xcc88, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xabd, gbc.sp());
        EXPECT(0xcc8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc88));
        EXPECT(0xfc, gbc.readMem(0xcc89));
        // CB FC 037E
        gbc.setState(0xe81c, 0x276f, 0x6ff0, 0xe9e7, 0x2672, 0x6bbe, 0x0, 0x1);
        gbc.writeMem(0xe81c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x276f, gbc.sp());
        EXPECT(0xe81e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe81c));
        EXPECT(0xfc, gbc.readMem(0xe81d));
        // CB FC 037F
        gbc.setState(0x7fd5, 0x8a5a, 0x9e80, 0xacfc, 0x614b, 0xa540, 0x1, 0x0);
        gbc.writeMem(0x7fd5, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8a5a, gbc.sp());
        EXPECT(0x7fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0380
        gbc.setState(0x6d83, 0xd40, 0xe040, 0x7b3, 0x374f, 0x8135, 0x1, 0x0);
        gbc.writeMem(0x6d83, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd40, gbc.sp());
        EXPECT(0x6d85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0381
        gbc.setState(0x9c58, 0x5f83, 0xf2b0, 0xe064, 0x45cb, 0xeb5, 0x0, 0x0);
        gbc.writeMem(0x9c58, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5f83, gbc.sp());
        EXPECT(0x9c5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c58));
        EXPECT(0xfc, gbc.readMem(0x9c59));
        // CB FC 0383
        gbc.setState(0x6290, 0xcc62, 0x9ee0, 0x24a0, 0x37ac, 0xd53d, 0x0, 0x1);
        gbc.writeMem(0x6290, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xcc62, gbc.sp());
        EXPECT(0x6292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0384
        gbc.setState(0xbc2a, 0x9e90, 0x6230, 0xaeb5, 0xeba6, 0xbee6, 0x0, 0x0);
        gbc.writeMem(0xbc2a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9e90, gbc.sp());
        EXPECT(0xbc2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc2a));
        EXPECT(0xfc, gbc.readMem(0xbc2b));
        // CB FC 0385
        gbc.setState(0x5997, 0x53e8, 0xa6c0, 0xbac, 0x4f72, 0xf3ef, 0x1, 0x1);
        gbc.writeMem(0x5997, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x53e8, gbc.sp());
        EXPECT(0x5999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0386
        gbc.setState(0xa083, 0x929f, 0x5670, 0x2e75, 0x4dd3, 0x170, 0x1, 0x1);
        gbc.writeMem(0xa083, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x929f, gbc.sp());
        EXPECT(0xa085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa083));
        EXPECT(0xfc, gbc.readMem(0xa084));
        // CB FC 0387
        gbc.setState(0x6fcc, 0x1def, 0x8250, 0x9591, 0x8e76, 0x41ce, 0x0, 0x1);
        gbc.writeMem(0x6fcc, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1def, gbc.sp());
        EXPECT(0x6fce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0388
        gbc.setState(0xe9ea, 0x5e7c, 0xfea0, 0x556e, 0xed60, 0x5719, 0x0, 0x0);
        gbc.writeMem(0xe9ea, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5e7c, gbc.sp());
        EXPECT(0xe9ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ea));
        EXPECT(0xfc, gbc.readMem(0xe9eb));
        // CB FC 0389
        gbc.setState(0xb6fa, 0x2334, 0xdca0, 0x87b6, 0xd271, 0xffd4, 0x0, 0x0);
        gbc.writeMem(0xb6fa, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2334, gbc.sp());
        EXPECT(0xb6fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6fa));
        EXPECT(0xfc, gbc.readMem(0xb6fb));
        // CB FC 038A
        gbc.setState(0xd094, 0x195d, 0x42e0, 0xd6d2, 0xb64b, 0x2a59, 0x1, 0x1);
        gbc.writeMem(0xd094, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x195d, gbc.sp());
        EXPECT(0xd096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd094));
        EXPECT(0xfc, gbc.readMem(0xd095));
        // CB FC 038B
        gbc.setState(0xef56, 0xf00d, 0xf410, 0x40f5, 0x871a, 0xa31c, 0x0, 0x1);
        gbc.writeMem(0xef56, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf00d, gbc.sp());
        EXPECT(0xef58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef56));
        EXPECT(0xfc, gbc.readMem(0xef57));
        // CB FC 038C
        gbc.setState(0x8c3b, 0xc5e5, 0xd9b0, 0xe4cc, 0x7ad8, 0x50ba, 0x0, 0x0);
        gbc.writeMem(0x8c3b, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc5e5, gbc.sp());
        EXPECT(0x8c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c3b));
        EXPECT(0xfc, gbc.readMem(0x8c3c));
        // CB FC 038D
        gbc.setState(0x65e0, 0x33d9, 0x8290, 0xf8b7, 0xb3a2, 0x321f, 0x0, 0x1);
        gbc.writeMem(0x65e0, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x33d9, gbc.sp());
        EXPECT(0x65e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 038E
        gbc.setState(0xb2e2, 0xffbe, 0xcfb0, 0xf677, 0x243c, 0x183d, 0x1, 0x0);
        gbc.writeMem(0xb2e2, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xffbe, gbc.sp());
        EXPECT(0xb2e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2e2));
        EXPECT(0xfc, gbc.readMem(0xb2e3));
        // CB FC 038F
        gbc.setState(0x20fc, 0xbf35, 0xaf10, 0xc0bc, 0xca46, 0xf59c, 0x1, 0x1);
        gbc.writeMem(0x20fc, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbf35, gbc.sp());
        EXPECT(0x20fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0390
        gbc.setState(0x2e87, 0x8ebb, 0x3980, 0xb7d1, 0x13bf, 0x574a, 0x1, 0x0);
        gbc.writeMem(0x2e87, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8ebb, gbc.sp());
        EXPECT(0x2e89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0391
        gbc.setState(0x8c7, 0xff91, 0xa890, 0x33a6, 0x5bf5, 0x58ad, 0x1, 0x1);
        gbc.writeMem(0x8c7, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xff91, gbc.sp());
        EXPECT(0x8c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 0392
        gbc.setState(0x4ee2, 0x423c, 0x9c00, 0xc8f9, 0x7c4, 0xaf4b, 0x0, 0x0);
        gbc.writeMem(0x4ee2, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x423c, gbc.sp());
        EXPECT(0x4ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0393
        gbc.setState(0xedd2, 0x29aa, 0x4970, 0xc2b6, 0xddb6, 0x6c60, 0x0, 0x0);
        gbc.writeMem(0xedd2, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x29aa, gbc.sp());
        EXPECT(0xedd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedd2));
        EXPECT(0xfc, gbc.readMem(0xedd3));
        // CB FC 0394
        gbc.setState(0x8d0a, 0x7a7, 0x8fb0, 0x4f03, 0xfadb, 0xb3b8, 0x1, 0x0);
        gbc.writeMem(0x8d0a, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7a7, gbc.sp());
        EXPECT(0x8d0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d0a));
        EXPECT(0xfc, gbc.readMem(0x8d0b));
        // CB FC 0395
        gbc.setState(0xe332, 0xdc76, 0xe0f0, 0x186f, 0xaf2b, 0x27c1, 0x0, 0x1);
        gbc.writeMem(0xe332, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xdc76, gbc.sp());
        EXPECT(0xe334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe332));
        EXPECT(0xfc, gbc.readMem(0xe333));
        // CB FC 0396
        gbc.setState(0xcc3d, 0xdf62, 0xe1f0, 0xa395, 0xa07e, 0x9981, 0x1, 0x1);
        gbc.writeMem(0xcc3d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xdf62, gbc.sp());
        EXPECT(0xcc3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc3d));
        EXPECT(0xfc, gbc.readMem(0xcc3e));
        // CB FC 0397
        gbc.setState(0x47e2, 0x2d38, 0xe900, 0x6e5, 0x9509, 0xf02e, 0x1, 0x0);
        gbc.writeMem(0x47e2, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2d38, gbc.sp());
        EXPECT(0x47e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0398
        gbc.setState(0x24b4, 0xcbd, 0xd180, 0xdf34, 0x669d, 0x4083, 0x0, 0x1);
        gbc.writeMem(0x24b4, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xcbd, gbc.sp());
        EXPECT(0x24b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 0399
        gbc.setState(0xefa8, 0x9f1f, 0x6060, 0x3b8c, 0x28ee, 0x89e0, 0x0, 0x0);
        gbc.writeMem(0xefa8, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9f1f, gbc.sp());
        EXPECT(0xefaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefa8));
        EXPECT(0xfc, gbc.readMem(0xefa9));
        // CB FC 039A
        gbc.setState(0x99b3, 0x715c, 0xa790, 0x2bd2, 0xb183, 0x3b98, 0x0, 0x1);
        gbc.writeMem(0x99b3, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x715c, gbc.sp());
        EXPECT(0x99b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99b3));
        EXPECT(0xfc, gbc.readMem(0x99b4));
        // CB FC 039B
        gbc.setState(0x780c, 0x9795, 0x6890, 0x9098, 0xb099, 0x2bc0, 0x1, 0x0);
        gbc.writeMem(0x780c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9795, gbc.sp());
        EXPECT(0x780e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 039C
        gbc.setState(0x8d96, 0x6eb1, 0xe290, 0x57e0, 0x90bb, 0x41c8, 0x1, 0x0);
        gbc.writeMem(0x8d96, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6eb1, gbc.sp());
        EXPECT(0x8d98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d96));
        EXPECT(0xfc, gbc.readMem(0x8d97));
        // CB FC 039D
        gbc.setState(0xd705, 0x47ec, 0xb7d0, 0x20c3, 0x74dc, 0xa5e1, 0x0, 0x0);
        gbc.writeMem(0xd705, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x47ec, gbc.sp());
        EXPECT(0xd707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd705));
        EXPECT(0xfc, gbc.readMem(0xd706));
        // CB FC 039E
        gbc.setState(0x61f1, 0x517d, 0x9720, 0x631b, 0x1752, 0x4c0b, 0x0, 0x1);
        gbc.writeMem(0x61f1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x517d, gbc.sp());
        EXPECT(0x61f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 039F
        gbc.setState(0xb7be, 0xc03c, 0xd890, 0xa8ed, 0x272f, 0x2736, 0x1, 0x1);
        gbc.writeMem(0xb7be, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc03c, gbc.sp());
        EXPECT(0xb7c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7be));
        EXPECT(0xfc, gbc.readMem(0xb7bf));
        // CB FC 03A0
        gbc.setState(0x219c, 0x83f2, 0x9460, 0x4abd, 0x4ee4, 0xfd20, 0x0, 0x1);
        gbc.writeMem(0x219c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x83f2, gbc.sp());
        EXPECT(0x219e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 03A1
        gbc.setState(0x322d, 0xbb0b, 0xebe0, 0x8bb2, 0xa07a, 0xed67, 0x1, 0x1);
        gbc.writeMem(0x322d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbb0b, gbc.sp());
        EXPECT(0x322f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 03A2
        gbc.setState(0x2685, 0x46d7, 0xeef0, 0x6dc4, 0x528d, 0x5ff3, 0x0, 0x1);
        gbc.writeMem(0x2685, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x46d7, gbc.sp());
        EXPECT(0x2687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 03A3
        gbc.setState(0x7f32, 0xfadc, 0x5c20, 0xfcd7, 0xed84, 0x13a5, 0x0, 0x0);
        gbc.writeMem(0x7f32, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfadc, gbc.sp());
        EXPECT(0x7f34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 03A4
        gbc.setState(0xb77e, 0x84cf, 0x5660, 0x24f6, 0x4478, 0xef34, 0x1, 0x0);
        gbc.writeMem(0xb77e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x84cf, gbc.sp());
        EXPECT(0xb780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb77e));
        EXPECT(0xfc, gbc.readMem(0xb77f));
        // CB FC 03A6
        gbc.setState(0x2f02, 0xa91b, 0x8ab0, 0x7500, 0x42b9, 0xa877, 0x0, 0x1);
        gbc.writeMem(0x2f02, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa91b, gbc.sp());
        EXPECT(0x2f04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 03A8
        gbc.setState(0x6fa, 0x4e66, 0x7db0, 0x3088, 0x3b39, 0x368d, 0x1, 0x1);
        gbc.writeMem(0x6fa, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4e66, gbc.sp());
        EXPECT(0x6fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 03A9
        gbc.setState(0x9c2d, 0x6956, 0xa500, 0x8547, 0x73df, 0xc436, 0x0, 0x0);
        gbc.writeMem(0x9c2d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6956, gbc.sp());
        EXPECT(0x9c2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c2d));
        EXPECT(0xfc, gbc.readMem(0x9c2e));
        // CB FC 03AA
        gbc.setState(0x6ee5, 0x906b, 0x5b30, 0xc84e, 0x838, 0x5486, 0x1, 0x0);
        gbc.writeMem(0x6ee5, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x906b, gbc.sp());
        EXPECT(0x6ee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 03AB
        gbc.setState(0x9ea7, 0x2080, 0x5000, 0x1f08, 0xba7a, 0xfbb0, 0x0, 0x0);
        gbc.writeMem(0x9ea7, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2080, gbc.sp());
        EXPECT(0x9ea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ea7));
        EXPECT(0xfc, gbc.readMem(0x9ea8));
        // CB FC 03AC
        gbc.setState(0xc101, 0x71e, 0x8d30, 0x3f35, 0x5f22, 0x44de, 0x0, 0x1);
        gbc.writeMem(0xc101, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x71e, gbc.sp());
        EXPECT(0xc103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc101));
        EXPECT(0xfc, gbc.readMem(0xc102));
        // CB FC 03AD
        gbc.setState(0x7470, 0x76cc, 0xebf0, 0xb697, 0xd296, 0x1f0c, 0x0, 0x1);
        gbc.writeMem(0x7470, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x76cc, gbc.sp());
        EXPECT(0x7472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 03AE
        gbc.setState(0x5b35, 0xe747, 0x9700, 0x284f, 0xf966, 0x6c9a, 0x0, 0x0);
        gbc.writeMem(0x5b35, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe747, gbc.sp());
        EXPECT(0x5b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 03B0
        gbc.setState(0x1517, 0x915d, 0x4320, 0x2a7c, 0x2706, 0x6ccd, 0x0, 0x0);
        gbc.writeMem(0x1517, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x915d, gbc.sp());
        EXPECT(0x1519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 03B1
        gbc.setState(0x3c57, 0x19d8, 0xa130, 0xb017, 0xa48, 0x45b5, 0x1, 0x0);
        gbc.writeMem(0x3c57, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x19d8, gbc.sp());
        EXPECT(0x3c59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 03B2
        gbc.setState(0x228d, 0xed09, 0xbbd0, 0x4f55, 0x16d7, 0x8554, 0x1, 0x0);
        gbc.writeMem(0x228d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xed09, gbc.sp());
        EXPECT(0x228f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 03B4
        gbc.setState(0x59d4, 0x1434, 0x64b0, 0x710, 0x80b8, 0x39cb, 0x1, 0x0);
        gbc.writeMem(0x59d4, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1434, gbc.sp());
        EXPECT(0x59d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 03B5
        gbc.setState(0xabaf, 0xc362, 0x9c10, 0x942f, 0x8d37, 0x2e0f, 0x0, 0x0);
        gbc.writeMem(0xabaf, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc362, gbc.sp());
        EXPECT(0xabb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabaf));
        EXPECT(0xfc, gbc.readMem(0xabb0));
        // CB FC 03B6
        gbc.setState(0x3be, 0x1c82, 0x8210, 0x5101, 0xf138, 0xd61c, 0x1, 0x0);
        gbc.writeMem(0x3be, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1c82, gbc.sp());
        EXPECT(0x3c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 03B7
        gbc.setState(0x1d4b, 0xd40, 0x340, 0xc36, 0xf61d, 0xf276, 0x0, 0x1);
        gbc.writeMem(0x1d4b, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd40, gbc.sp());
        EXPECT(0x1d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 03B8
        gbc.setState(0x7ef3, 0xb6d, 0xe2f0, 0xc1b6, 0x4d52, 0x940d, 0x1, 0x0);
        gbc.writeMem(0x7ef3, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb6d, gbc.sp());
        EXPECT(0x7ef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 03BA
        gbc.setState(0x3c, 0x8dd5, 0xc90, 0xcc74, 0xf74, 0xc4f6, 0x0, 0x1);
        gbc.writeMem(0x3c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8dd5, gbc.sp());
        EXPECT(0x3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 03BB
        gbc.setState(0xe2cf, 0xa73a, 0xef0, 0xa30, 0xacb3, 0xd512, 0x0, 0x1);
        gbc.writeMem(0xe2cf, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa73a, gbc.sp());
        EXPECT(0xe2d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2cf));
        EXPECT(0xfc, gbc.readMem(0xe2d0));
        // CB FC 03BC
        gbc.setState(0x5a9, 0x4e2b, 0x90d0, 0x7e32, 0x2624, 0xbb8e, 0x0, 0x0);
        gbc.writeMem(0x5a9, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4e2b, gbc.sp());
        EXPECT(0x5ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 03BD
        gbc.setState(0xd968, 0xc8, 0x5ab0, 0x831f, 0x66e2, 0x1633, 0x0, 0x1);
        gbc.writeMem(0xd968, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc8, gbc.sp());
        EXPECT(0xd96a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd968));
        EXPECT(0xfc, gbc.readMem(0xd969));
        // CB FC 03BE
        gbc.setState(0x8a14, 0x9e0a, 0x940, 0x903b, 0x149e, 0xd5fb, 0x1, 0x1);
        gbc.writeMem(0x8a14, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9e0a, gbc.sp());
        EXPECT(0x8a16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a14));
        EXPECT(0xfc, gbc.readMem(0x8a15));
        // CB FC 03BF
        gbc.setState(0x5fc4, 0x9c26, 0xda0, 0xfc9d, 0x454a, 0x6ab, 0x0, 0x1);
        gbc.writeMem(0x5fc4, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9c26, gbc.sp());
        EXPECT(0x5fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 03C0
        gbc.setState(0xe97c, 0x9bf7, 0x1e20, 0x3984, 0x55f1, 0x1154, 0x0, 0x0);
        gbc.writeMem(0xe97c, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9bf7, gbc.sp());
        EXPECT(0xe97e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe97c));
        EXPECT(0xfc, gbc.readMem(0xe97d));
        // CB FC 03C1
        gbc.setState(0x20da, 0xa06d, 0x7080, 0x12e4, 0x46fc, 0xe31b, 0x1, 0x0);
        gbc.writeMem(0x20da, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa06d, gbc.sp());
        EXPECT(0x20dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 03C2
        gbc.setState(0x46b0, 0xcb15, 0x26e0, 0x74bb, 0x9770, 0xe568, 0x1, 0x0);
        gbc.writeMem(0x46b0, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xcb15, gbc.sp());
        EXPECT(0x46b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 03C3
        gbc.setState(0xec74, 0x20b5, 0x1d70, 0x4707, 0x3f52, 0xd43a, 0x1, 0x1);
        gbc.writeMem(0xec74, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x20b5, gbc.sp());
        EXPECT(0xec76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec74));
        EXPECT(0xfc, gbc.readMem(0xec75));
        // CB FC 03C4
        gbc.setState(0xd9b1, 0x18f0, 0xe5b0, 0x492e, 0x364c, 0x9276, 0x1, 0x0);
        gbc.writeMem(0xd9b1, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x18f0, gbc.sp());
        EXPECT(0xd9b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9b1));
        EXPECT(0xfc, gbc.readMem(0xd9b2));
        // CB FC 03C5
        gbc.setState(0x7b43, 0xeda7, 0x2de0, 0xb585, 0x432a, 0x77d2, 0x0, 0x0);
        gbc.writeMem(0x7b43, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xeda7, gbc.sp());
        EXPECT(0x7b45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 03C6
        gbc.setState(0x80bc, 0x174d, 0xccd0, 0xecd2, 0x8971, 0x24c9, 0x0, 0x0);
        gbc.writeMem(0x80bc, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x174d, gbc.sp());
        EXPECT(0x80be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80bc));
        EXPECT(0xfc, gbc.readMem(0x80bd));
        // CB FC 03C7
        gbc.setState(0x30b, 0x8b0, 0x3250, 0xcb4c, 0x99b7, 0xd08b, 0x1, 0x1);
        gbc.writeMem(0x30b, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8b0, gbc.sp());
        EXPECT(0x30d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 03C8
        gbc.setState(0xe833, 0xead1, 0x8b70, 0x9bf3, 0x8482, 0x34a8, 0x1, 0x1);
        gbc.writeMem(0xe833, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xead1, gbc.sp());
        EXPECT(0xe835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe833));
        EXPECT(0xfc, gbc.readMem(0xe834));
        // CB FC 03C9
        gbc.setState(0x21ad, 0x3aca, 0x4bf0, 0x442c, 0xb88f, 0x22d3, 0x0, 0x1);
        gbc.writeMem(0x21ad, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3aca, gbc.sp());
        EXPECT(0x21af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 03CA
        gbc.setState(0x4403, 0x44d1, 0xcf60, 0xadb, 0x5a82, 0xf8c3, 0x0, 0x0);
        gbc.writeMem(0x4403, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x44d1, gbc.sp());
        EXPECT(0x4405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 03CB
        gbc.setState(0xbcc6, 0x6d17, 0xdaf0, 0xfb55, 0x5cb7, 0x243f, 0x0, 0x1);
        gbc.writeMem(0xbcc6, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6d17, gbc.sp());
        EXPECT(0xbcc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcc6));
        EXPECT(0xfc, gbc.readMem(0xbcc7));
        // CB FC 03CC
        gbc.setState(0xa622, 0x16ce, 0x1500, 0x21ae, 0x9414, 0x768c, 0x0, 0x1);
        gbc.writeMem(0xa622, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x16ce, gbc.sp());
        EXPECT(0xa624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa622));
        EXPECT(0xfc, gbc.readMem(0xa623));
        // CB FC 03CD
        gbc.setState(0x19b3, 0x6871, 0xa9a0, 0x2ce4, 0x8d0a, 0x28db, 0x1, 0x0);
        gbc.writeMem(0x19b3, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6871, gbc.sp());
        EXPECT(0x19b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 03CE
        gbc.setState(0x30b2, 0x18cd, 0x1860, 0x1ce7, 0x7870, 0x98bc, 0x1, 0x1);
        gbc.writeMem(0x30b2, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x18cd, gbc.sp());
        EXPECT(0x30b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 03CF
        gbc.setState(0xba84, 0x40cf, 0xb0d0, 0x83f2, 0x5f3f, 0xe45e, 0x1, 0x0);
        gbc.writeMem(0xba84, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x40cf, gbc.sp());
        EXPECT(0xba86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba84));
        EXPECT(0xfc, gbc.readMem(0xba85));
        // CB FC 03D0
        gbc.setState(0xd90d, 0xc56, 0xf0c0, 0x8c5, 0x8383, 0xd04a, 0x1, 0x0);
        gbc.writeMem(0xd90d, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc56, gbc.sp());
        EXPECT(0xd90f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd90d));
        EXPECT(0xfc, gbc.readMem(0xd90e));
        // CB FC 03D1
        gbc.setState(0x3737, 0x4eae, 0xd290, 0xcd9e, 0x48f6, 0x48b4, 0x1, 0x1);
        gbc.writeMem(0x3737, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4eae, gbc.sp());
        EXPECT(0x3739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 03D2
        gbc.setState(0xa082, 0x5c0d, 0xe190, 0xbe20, 0x2851, 0x2db0, 0x1, 0x1);
        gbc.writeMem(0xa082, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5c0d, gbc.sp());
        EXPECT(0xa084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa082));
        EXPECT(0xfc, gbc.readMem(0xa083));
        // CB FC 03D3
        gbc.setState(0x4a4f, 0x429d, 0xaf90, 0xb245, 0x78a2, 0x89f, 0x1, 0x0);
        gbc.writeMem(0x4a4f, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x429d, gbc.sp());
        EXPECT(0x4a51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 03D4
        gbc.setState(0x7159, 0x2698, 0x58d0, 0x1b2b, 0x1678, 0xd487, 0x0, 0x1);
        gbc.writeMem(0x7159, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2698, gbc.sp());
        EXPECT(0x715b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 03D5
        gbc.setState(0x6a5e, 0x9972, 0xe230, 0xb6f6, 0xae72, 0x1107, 0x1, 0x1);
        gbc.writeMem(0x6a5e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9972, gbc.sp());
        EXPECT(0x6a60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 03D6
        gbc.setState(0xd862, 0x5c89, 0x6b00, 0x598a, 0x3040, 0xc322, 0x1, 0x0);
        gbc.writeMem(0xd862, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5c89, gbc.sp());
        EXPECT(0xd864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd862));
        EXPECT(0xfc, gbc.readMem(0xd863));
        // CB FC 03DB
        gbc.setState(0x160, 0x7a15, 0xcbd0, 0xd2e1, 0x185a, 0x563c, 0x0, 0x0);
        gbc.writeMem(0x160, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7a15, gbc.sp());
        EXPECT(0x162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 03DC
        gbc.setState(0x3c53, 0x1b2, 0xde90, 0xd6a9, 0x234, 0xae33, 0x0, 0x1);
        gbc.writeMem(0x3c53, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1b2, gbc.sp());
        EXPECT(0x3c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 03DD
        gbc.setState(0x7cb4, 0xb376, 0x5ad0, 0xa4de, 0x14ae, 0x83cb, 0x0, 0x1);
        gbc.writeMem(0x7cb4, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb376, gbc.sp());
        EXPECT(0x7cb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 03DE
        gbc.setState(0x1fea, 0x829f, 0x48e0, 0xa8e3, 0xd9f1, 0x958, 0x1, 0x1);
        gbc.writeMem(0x1fea, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x829f, gbc.sp());
        EXPECT(0x1fec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 03DF
        gbc.setState(0x64e7, 0xaadd, 0xe8f0, 0x28c2, 0x7717, 0xdc98, 0x0, 0x1);
        gbc.writeMem(0x64e7, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xaadd, gbc.sp());
        EXPECT(0x64e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 03E0
        gbc.setState(0x18ef, 0xf53, 0xaeb0, 0x1121, 0xe536, 0xcf31, 0x1, 0x1);
        gbc.writeMem(0x18ef, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf53, gbc.sp());
        EXPECT(0x18f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 03E1
        gbc.setState(0x4989, 0x8466, 0x3ea0, 0xf50d, 0xb1c5, 0x3359, 0x1, 0x1);
        gbc.writeMem(0x4989, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8466, gbc.sp());
        EXPECT(0x498b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 03E2
        gbc.setState(0x50e, 0x4ce9, 0xeac0, 0x422c, 0xc6fe, 0x315e, 0x1, 0x0);
        gbc.writeMem(0x50e, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4ce9, gbc.sp());
        EXPECT(0x510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB FC 03E4
        gbc.setState(0x4694, 0xb3e3, 0x74f0, 0x547d, 0x740c, 0xf54, 0x0, 0x0);
        gbc.writeMem(0x4694, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb3e3, gbc.sp());
        EXPECT(0x4696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB FC 03E5
        gbc.setState(0xe5fe, 0x5d40, 0x9060, 0xcdb, 0x39a6, 0x9328, 0x1, 0x1);
        gbc.writeMem(0xe5fe, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5d40, gbc.sp());
        EXPECT(0xe600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5fe));
        EXPECT(0xfc, gbc.readMem(0xe5ff));
        // CB FC 03E6
        gbc.setState(0xad63, 0xd754, 0xbd20, 0xb09f, 0xfc71, 0xdcde, 0x0, 0x1);
        gbc.writeMem(0xad63, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd754, gbc.sp());
        EXPECT(0xad65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad63));
        EXPECT(0xfc, gbc.readMem(0xad64));
        // CB FC 03E7
        gbc.setState(0xb17b, 0x8f05, 0xe1b0, 0x7f70, 0xe1c1, 0x528b, 0x0, 0x0);
        gbc.writeMem(0xb17b, { 0xcb, 0xfc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8f05, gbc.sp());
        EXPECT(0xb17d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb17b));
        EXPECT(0xfc, gbc.readMem(0xb17c));
    }
